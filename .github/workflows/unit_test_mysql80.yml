# DO NOT MODIFY: THIS FILE IS GENERATED USING "make generate_ci_workflows"

name: Unit Test (mysql80)
on: [push]

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Configure git private repo access
        env:
          GITHUB_TOKEN: ${{ secrets.PLANETSCALE_ACTIONS_BOT_TOKEN }}
        run: |
          git config --global --add url."https://${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.3

      - name: Tune the OS
        run: |
          sudo sysctl -w net.ipv4.ip_local_port_range="22768 65535"
          # Increase the asynchronous non-blocking I/O. More information at https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_use_native_aio
          echo "fs.aio-max-nr = 1048576" | sudo tee -a /etc/sysctl.conf
          sudo sysctl -p /etc/sysctl.conf

      - name: Check out code
        uses: actions/checkout@v3

      - name: Get dependencies
        env: # Or as an environment variable
          AWS_ACCESS_KEY_ID: ${{ secrets.BUILDKITE_S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BUILDKITE_S3_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
        run: |
          export DEBIAN_FRONTEND="noninteractive"
          sudo apt-get update
          # stop any existing running instance of mysql
          sudo service mysql stop
          sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

          # Uninstall any previously installed MySQL first
          sudo DEBIAN_FRONTEND="noninteractive" apt-get remove -y --purge mysql-server mysql-client mysql-common
          sudo apt-get -y autoremove
          sudo apt-get -y autoclean
          sudo deluser mysql
          sudo rm -rf /var/lib/mysql
          sudo rm -rf /etc/mysql

          # install necessary tools
          sudo apt-get install -y make unzip g++ curl git wget awscli ant openjdk-8-jdk

          # Get latest version of mysql from s3 bucket
          LATEST_BUILD=$(aws s3api list-objects-v2 --bucket "planetscale-mysql-server-private-ci-artifacts" --prefix mysql/main/dist --query 'reverse(sort_by(Contents[?contains(Key, `jammy`)], &LastModified))[:1].Key' --output=text)
          echo "latest build is $LATEST_BUILD"
          # Pin this to 8.0.30
          LAST_BUILD="mysql/main/dist/mysql-8.0.30.20221013-ps-87805bf371e-jammy-linux-x86_64.tar.gz"
          aws s3 cp "s3://planetscale-mysql-server-private-ci-artifacts/${LAST_BUILD}" .
          sudo tar xf $(basename $LAST_BUILD) -v -C /usr --strip-components=1

          # Install everything else we need, and configure
          sudo apt-get install -y mysql-server mysql-client eatmydata xz-utils
          sudo service mysql stop
          sudo bash -c "echo '/usr/sbin/mysqld { }' > /etc/apparmor.d/usr.sbin.mysqld" # https://bugs.launchpad.net/ubuntu/+source/mariadb-10.1/+bug/1806263
          sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld || echo "could not remove mysqld profile"

          mkdir -p dist bin
          curl -L https://github.com/coreos/etcd/releases/download/v3.3.10/etcd-v3.3.10-linux-amd64.tar.gz | tar -zxC dist
          mv dist/etcd-v3.3.10-linux-amd64/{etcd,etcdctl} bin/

          go mod download
          go install golang.org/x/tools/cmd/goimports@latest

      - name: Run make tools
        run: |
          make tools

      - name: Run test
        timeout-minutes: 30
        run: |
          eatmydata -- make unit_test
