name: local_example
on: [push, pull_request]
jobs:

  build:
    name: Local example using ${{ matrix.topo }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        topo: [consul,etcd,k8s]

    steps:

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18.4

    - name: Tune the OS
      run: |
        sudo sysctl -w net.ipv4.ip_local_port_range="22768 65535"

    - name: Check out code
      uses: actions/checkout@v3

    - name: Get dependencies
      env: # Or as an environment variable
        AWS_ACCESS_KEY_ID: ${{ secrets.BUILDKITE_S3_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.BUILDKITE_S3_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-1
      run: |
        if [ ${{matrix.os}} = "ubuntu-latest" ]; then
          sudo apt-get update
          # stop any existing running instance of mysql
          sudo service mysql stop
          sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

          # Uninstall any previously installed MySQL first
          sudo DEBIAN_FRONTEND="noninteractive" apt-get remove -y --purge mysql-server mysql-client mysql-common
          sudo apt-get -y autoremove
          sudo apt-get -y autoclean
          sudo deluser mysql
          sudo rm -rf /var/lib/mysql
          sudo rm -rf /etc/mysql

          # install necessary tools
          sudo apt-get install -y make unzip g++ etcd curl git wget awscli
          sudo service etcd stop

          # Get latest version of mysql from s3 bucket
          LATEST_BUILD=$(aws s3api list-objects-v2 --bucket "planetscale-mysql-server-private-ci-artifacts" --prefix mysql/main/dist --query 'reverse(sort_by(Contents[?contains(Key, `focal`)], &LastModified))[:1].Key' --output=text)
          echo "latest build is $LATEST_BUILD"
          # Pin this to 8.0.30
          LAST_BUILD="mysql/main/dist/mysql-8.0.30.20221013-ps-87805bf371e-focal-linux-x86_64.tar.gz"
          echo "installing psdb mysql $LAST_BUILD"
          aws s3 cp "s3://planetscale-mysql-server-private-ci-artifacts/${LAST_BUILD}" .
          sudo tar xf $(basename $LAST_BUILD) -v -C /usr --strip-components=1

          # Install everything else we need, and configure
          sudo apt-get install -y mysql-server mysql-client eatmydata xz-utils
          sudo service mysql stop
          sudo service etcd stop
          sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
          sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld
        elif [ ${{matrix.os}} = "macos-latest" ]; then
          brew install mysql@5.7 make unzip etcd curl git wget
        fi
        go mod download

    - name: Run make minimaltools
      run: |
        make minimaltools

    - name: Build
      run: |
        make build

    - name: local_example
      timeout-minutes: 30
      run: |
        export TOPO=${{matrix.topo}}
        if [ ${{matrix.os}} = "macos-latest" ]; then
          export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"
        fi
        eatmydata -- go run test.go -print-log -follow -retry=1 local_example
