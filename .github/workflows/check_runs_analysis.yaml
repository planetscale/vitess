on:
  pull_request:
    branches:
      - master
  # schedule:
  #   - cron:  '*/5 * * * *'

jobs:
  analyze:
    name: analyze_check_runs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: metrics
    - name: analyze check runs
      run: |
        GITHUB_REPOSITORY="vitessio/vitess"
        FAILED_RUNS_JSON="/tmp/failed_runs.json"
        FAILED_RUNS_CSV="/tmp/failed_runs.csv"
        FAILED_RUNS_COMBINED="/tmp/failed_runs.csv"
        WORKFLOW_FAILURES_FILE=".metrics/workflow-failures"

        # Get latest failed check runs
        curl \
          -H 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Content-type: application/json" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/actions/runs?per_page=100&status=failure" \
          > "$FAILED_RUNS_JSON"

        # extract .created_at, .name, .html_url for each failed check run
        cat "$FAILED_RUNS_JSON" |
          jq -r '.workflow_runs[] | (.created_at + "," + .name + "," + .html_url)' > "$FAILED_RUNS_CSV"

        # now combine back into $WORKFLOW_FAILURES_FILE, skipping duplicates
        tmpfile="$(mktemp)"
        cat $WORKFLOW_FAILURES_FILE $FAILED_RUNS_CSV | sort | uniq > $tmpfile
        cp $tmpfile $WORKFLOW_FAILURES_FILE

    - name: Commit report
      run: |
        git config --global user.name 'planetscalebot'
        git config --global user.email 'planetscalebot@planetscale.com'
        git commit -am "Automated: append failed workflow runs metrics" .metrics/workflow-failures
        git push
