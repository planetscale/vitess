name: Upgrade Downgrade Testing
on: [push, pull_request]
concurrency:
  group: format('{0}-{1}', ${{ github.ref }}, 'Upgrade Downgrade Testing')
  cancel-in-progress: true

# This test ensures that our end-to-end tests work using Vitess components
# (vtgate, vttablet, etc) built on different versions.

jobs:
  upgrade_downgrade_test:
    name: Run Upgrade Downgrade Test
    runs-on: ubuntu-18.04

    steps:
    - name: Check latest versions
      run: echo ${{ needs.get_latest_versions.outputs.matrix }}

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Set up python
      uses: actions/setup-python@v2

    - name: Tune the OS
      run: |
        echo '1024 65535' | sudo tee -a /proc/sys/net/ipv4/ip_local_port_range

    - name: Get base dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-server mysql-client make unzip g++ etcd curl git wget eatmydata
        sudo service mysql stop
        sudo service etcd stop
        sudo ln -s /etc/apparmor.d/usr.sbin.mysqld /etc/apparmor.d/disable/
        sudo apparmor_parser -R /etc/apparmor.d/usr.sbin.mysqld

        # install JUnit report formatter
        go get -u github.com/vitessio/go-junit-report@HEAD

        wget https://repo.percona.com/apt/percona-release_latest.$(lsb_release -sc)_all.deb
        sudo apt-get install -y gnupg2
        sudo dpkg -i percona-release_latest.$(lsb_release -sc)_all.deb
        sudo apt-get update
        sudo apt-get install percona-xtrabackup-24

    # Checkout to the other version of Vitess
    - name: Check out other version's code
      uses: actions/checkout@v2
      with:
        # TODO: use a not-hardcoded git ref
        ref: "de06fcaa9252bf36cf4723af40ad05f7e5f214dd"

    - name: Get dependencies for other version
      run: |
        go mod download

    - name: Building other version's binaries
      timeout-minutes: 10
      run: |
        source build.env
        make build
        mkdir -p /tmp/vitess-build-other/
        cp -R bin /tmp/vitess-build-other/
        rm -Rf bin/*

      # Checkout to the current version of Vitess
    - name: Check out current version's code
      uses: actions/checkout@v2

    - name: Get dependencies for current version
      run: |
        go mod download

    - name: Building current version's binaries
      timeout-minutes: 10
      run: |
        source build.env
        make build
        mkdir -p /tmp/vitess-build-current/
        cp -R bin /tmp/vitess-build-current/

    - name: Create Vitess cluster with current version and insert data
      run: |
        cd examples/local
        chmod +x ./*.sh ./scripts/*.sh
        ./all.sh
        cat ../common/insert_commerce_data.sql | mysql

#    - name: Use other version VTGate
#      run: |
#        echo $PWD
#        ls -lR /tmp/vitess-build-current/
#        ls -lR /tmp/vitess-build-other/
#        ls -lR $PWD/bin
#        source build.env
#        cp /tmp/vitess-build-other/bin/vtgate $PWD/bin/vtgate
#        vtgate --version
#        vttablet --version
#
#
#
#    - name: Use current version VTGate, and other version VTTablet
#      run: |
#        source build.env
#        cp /tmp/vitess-build-current/bin/vtgate $PWD/bin/vtgate
#        cp /tmp/vitess-build-other/bin/vttablet $PWD/bin/vttablet
#        vtgate --version
#        vttablet --version

