syntax = "proto3";
option go_package = "vitess.io/vitess/go/boost/boostrpc/packet";

package packet;

import "dataflow.proto";
import "flownode.proto";
import "sql.proto";
import "gogoproto/gogo.proto";

message SourceChannelIdentifier {
  uint64 token = 1;
  uint64 epoch = 2;
  uint32 tag = 3 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
};

message TableOperation{
  enum Tag {
    Insert = 0;
    Delete = 1;
    InsertOrUpdate = 2;
    Update = 3;
  };

  Tag tag = 1;
  string key = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/sql.Row"];
};

message FlowInput {
  uint32 dst = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  repeated TableOperation data = 2;
};

message Link {
  uint32 src = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  uint32 dst = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
};

message ColumnIndex {
  repeated int64 key = 1 [(gogoproto.casttype) = "int"];
  repeated uint32 tags = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  bool is_primary = 3;
};

message ReplayPathSegment {
  uint32 node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  uint32 force_tag_to = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  repeated int64 partial_key = 3 [(gogoproto.casttype) = "int"];
};

message SourceSelection {
  enum Kind {
   KEY_SHARD = 0;
   SAME_SHARD = 1;
   ALL_SHARDS = 2;
  };

  Kind kind = 1;
  uint64 num_shards = 2 [(gogoproto.casttype) = "uint"];
  int64 key_idx_to_shard = 3 [(gogoproto.casttype) = "int"];
}

message TriggerEndpoint {
  enum Kind {
    NONE = 0;
    START = 1;
    END = 2;
    LOCAL = 3;
    EXTERNAL = 4;
  };

  Kind kind = 1;
  repeated int64 cols = 2 [(gogoproto.casttype) = "int"];
  uint64 domain = 3 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.DomainIdx"];
  SourceSelection source_selection = 4;
};

message SetupReplayPathRequest{
  uint32 tag = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  uint32 source = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  repeated ReplayPathSegment path = 3;
  uint32 partial_unicast_sharder = 4 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
  bool notify_done = 5;
  TriggerEndpoint trigger = 6;
  string upquery = 7;
  bool last_segment = 8;
};

message ReadyRequest{
  uint32 node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  repeated ColumnIndex index = 3;
};

message Input {
  FlowInput inner = 1;
  SourceChannelIdentifier src = 2;
  repeated SourceChannelIdentifier senders = 3;
};

message Message {
  message Seen {
    int32 offset = 1;
    uint32 tag = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  };

  Link link = 1;
  repeated sql.Record records = 2 [(gogoproto.nullable) = false];
  repeated Seen seen_tags = 3 [(gogoproto.nullable) = false];
  string gtid = 4;
};

message ReplayPiece {
  Link link = 1;
  uint32 tag = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  repeated sql.Record records = 3 [(gogoproto.nullable) = false];

  message ContextPartial {
    map<string, bool> for_keys = 1 [(gogoproto.castkey) = "vitess.io/vitess/go/boost/sql.Row"];
    uint64 requesting_shard = 2 [(gogoproto.casttype) = "uint"];
    bool unishard = 3;
    bool ignore = 4;
  };
  message ContextRegular {
    bool last = 1;
  };
  message ContextReplace {
    Link original_link = 1;
  };
  oneof context {
    ContextPartial partial = 4;
    ContextRegular regular = 5;
    ContextReplace replace = 6;
  }

  message External {
    string gtid = 1;
    uint32 slot = 2;
    bool intermediate = 3;
    bool failed = 4;
  };

  External external = 8;
};

message EvictRequest{
  uint32 node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  int64 num_bytes = 2;
};

message EvictKeysRequest{
  Link link = 1;
  uint32 tag = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  repeated string keys = 3 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/sql.Row"];
};

message FinishReplayRequest{
  uint32 tag = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  uint32 node = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  string gtid = 3;
  bool notify_done = 4;
};

message AddNodeRequest{
  flownode.Node node = 1;
  repeated uint32 parents = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
};

message RemoveNodesRequest{
  repeated uint32 nodes = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
};

message UpdateEgressRequest{
  uint32 node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];

  message Tx {
    uint32 node = 1;
    uint32 local = 2;
    dataflow.DomainAddr domain = 3;
  };
  Tx new_tx = 2;

  message Tag {
    uint32 tag = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
    uint32 node = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
  };
  Tag new_tag = 3;
};

message UpdateSharderRequest{
  message Tx {
    uint32 local = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
    dataflow.DomainAddr domain = 2;
  };

  uint32 node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  repeated Tx new_txs = 2;
};

message PrepareStateRequest {
  uint32 node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];

  message PartialLocal {
    repeated ColumnIndex index = 1;
  };

  message IndexedLocal {
    repeated ColumnIndex index = 1;
  };

  message PartialGlobal {
    uint32 gid = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];

    message TriggerDomain {
      uint64 domain = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.DomainIdx"];
      uint64 shards = 2 [(gogoproto.casttype) = "uint"];
    };
    TriggerDomain trigger_domain = 2;
  };

  message Global {
    uint32 gid = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
  };

  oneof state {
    PartialLocal partial_local = 2;
    IndexedLocal indexed_local = 3;
    PartialGlobal partial_global = 4;
    Global global = 5;
  };
};

message PartialReplayRequest{
  uint32 tag = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  repeated string keys = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/sql.Row"];
  bool unishard = 3;
  uint64 requesting_shard = 4 [(gogoproto.casttype) = "uint"];
};

message ReaderReplayRequest{
  uint32 node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  repeated int64 cols = 2 [(gogoproto.casttype) = "int"];
  repeated string keys = 3 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/sql.Row"];
};

message StartReplayRequest{
  uint32 tag = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.Tag"];
  uint32 from = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
};

message WaitForReplayRequest{}

message Sync {};
message Async {};

service Domain {
  rpc SendInput(Input) returns (Async);
  rpc SendMessage(Message) returns (Async);
  rpc SendReplayPiece(ReplayPiece) returns (Async);

  rpc Evict(EvictRequest) returns (Async);
  rpc EvictKeys(EvictKeysRequest) returns (Async);

  rpc StartPartialReplay(PartialReplayRequest) returns (Async);
  rpc StartReaderReplay(ReaderReplayRequest) returns (Async);
  rpc StartReplay(StartReplayRequest) returns (Async);
  rpc FinishReplay(FinishReplayRequest) returns (Async);

  rpc AddNode(AddNodeRequest) returns (Async);
  rpc RemoveNodes(RemoveNodesRequest) returns (Async);
  rpc UpdateEgress(UpdateEgressRequest) returns (Async);
  rpc UpdateSharder(UpdateSharderRequest) returns (Async);
  rpc PrepareState(PrepareStateRequest) returns (Async);

  rpc SetupReplayPath(SetupReplayPathRequest) returns (Sync);
  rpc Ready(ReadyRequest) returns (Sync);
  rpc WaitForReplay(WaitForReplayRequest) returns (Sync);
};
