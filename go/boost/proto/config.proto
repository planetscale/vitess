syntax = "proto3";
option go_package = "vitess.io/vitess/go/boost/server/controller/config";

package config;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";

enum ReuseType {
  FINKELSTEIN = 0;
  RELAXED = 1;
  FULL = 2;
  NO_REUSE = 3;
}

enum UpqueryMode {
  SELECT_GTID = 0;
  TRACK_GTID = 1;
};

message Domain {
  int64 concurrent_replays = 1 [(gogoproto.casttype) = "int"];
  google.protobuf.Duration replay_batch_timeout = 2 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  UpqueryMode upquery_mode = 3;
}

message Config {
  uint64 shards = 1 [(gogoproto.casttype) = "uint"];
  Materialization materialization = 2;
  Domain domain = 4;
  google.protobuf.Duration heartbeat_every = 6 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  google.protobuf.Duration healthcheck_every = 7 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  uint64 quorum = 8 [(gogoproto.casttype) = "uint"];
  ReuseType reuse = 9;
  google.protobuf.Duration evict_every = 10 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  google.protobuf.Duration worker_read_timeout = 11 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  google.protobuf.Duration vstream_start_timeout = 12 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  int32 vstream_start_retries = 13 [(gogoproto.casttype) = "int"];
}

enum UpqueryGenerationMode {
  NO_MIDFLOW_UPQUERIES = 0;
  FULL_MIDFLOW_UPQUERIES = 1;
  NO_READER_MIDFLOW_UPQUERIES = 2;
}

message Materialization {
  bool partial_enabled = 1;
  UpqueryGenerationMode upquery_mode = 2;
};
