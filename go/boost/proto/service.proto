syntax = "proto3";
option go_package = "vitess.io/vitess/go/boost/boostrpc/service";

package service;

import "flownode.proto";
import "dataflow.proto";
import "config.proto";
import "sql.proto";
import "gogoproto/gogo.proto";

message WorkerSource {
  string source_uuid = 1;
  int64 epoch = 2 [(gogoproto.casttype) = "Epoch"];
}

message RegisterWorkerRequest {
  WorkerSource from = 1;
  string addr = 2;
  string read_listen_addr = 3;
  repeated string log_files = 4;
};

message RegisterWorkerResponse {
};

message AssignDomainRequest {
  WorkerSource from = 1;
  DomainBuilder domain = 2;
};

message AssignDomainResponse {
  uint64 shard = 1 [(gogoproto.casttype) = "uint"];
  string addr = 2;
};

message DomainDescriptor {
  uint64 id = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.DomainIdx"];
  uint64 shard = 2 [(gogoproto.casttype) = "uint"];
  string addr = 3;
};

message DomainBootedRequest {
  WorkerSource from = 1;
  DomainDescriptor domain = 2;
};

message DomainBootedResponse{};

message HeartbeatPacket {}

message AssignStreamRequest {
  repeated ExternalTableDescriptor tables = 1;
}

message AssignStreamResponse {}

message ViewReadRequest {
  uint32 target_node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
  uint64 target_shard = 2 [(gogoproto.casttype) = "uint"];
  string key = 3 [(gogoproto.casttype) =  "vitess.io/vitess/go/boost/sql.Row"];
  bool block = 4;
};

message ViewReadManyRequest {
  uint32 target_node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
  uint64 target_shard = 2 [(gogoproto.casttype) = "uint"];
  repeated string keys = 3 [(gogoproto.casttype) =  "vitess.io/vitess/go/boost/sql.Row"];
  bool block = 4;
};

message ViewReadResponse {
  repeated string rows = 1 [(gogoproto.casttype) =  "vitess.io/vitess/go/boost/sql.Row"];
  int32 hits = 2;
};

message ViewSizeRequest {
  uint32 target_node = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
  int64 target_col = 2 [(gogoproto.casttype) = "int"];
};

message ViewSizeResponse {
  int64 total_size = 1;
}

message ExternalTableDescriptor {
  repeated dataflow.DomainAddr txs = 1;
  uint32 node = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
  uint32 addr = 3 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  bool key_is_primary = 4;
  repeated int64 key = 5 [(gogoproto.casttype) = "int"];
  string table_name = 7;
  repeated string columns = 8;
  repeated sql.Type schema = 9 [(gogoproto.nullable) = false];
  string keyspace = 10;
}

message DomainBuilder {
  uint64 index = 1 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.DomainIdx"];
  uint64 shard = 2 [(gogoproto.casttype) = "uint"];
  uint64 num_shards = 3 [(gogoproto.casttype) = "uint"];
  map<uint32, flownode.Node> nodes = 4 [(gogoproto.castkey) = "vitess.io/vitess/go/boost/dataflow.LocalNodeIdx"];
  config.Domain config = 5;
};

message MemoryStatsRequest {}
message MemoryStatsResponse {
  message MemUsage {
    dataflow.DomainAddr domain = 1 [(gogoproto.nullable) = false];
    uint32 node = 2 [(gogoproto.casttype) = "vitess.io/vitess/go/boost/dataflow.NodeIdx"];
    int64 memory = 3;
  }
  repeated MemUsage node_usage = 1;
}

service WorkerService {
  rpc AssignDomain(AssignDomainRequest) returns (AssignDomainResponse);
  rpc AssignStream(AssignStreamRequest) returns (AssignStreamResponse);
  rpc DomainBooted(DomainBootedRequest) returns (DomainBootedResponse);
  rpc MemoryStats(MemoryStatsRequest) returns (MemoryStatsResponse);
};

service Reader {
  rpc ViewRead(ViewReadRequest) returns (ViewReadResponse);
  rpc ViewReadMany(ViewReadManyRequest) returns (ViewReadResponse);
  rpc ViewSize(ViewSizeRequest) returns (ViewSizeResponse);
};
