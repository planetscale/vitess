// Code generated by protoc-gen-go. DO NOT EDIT.
// source: binlogdata.proto

package binlogdata // import "vitess.io/vitess/go/vt/proto/binlogdata"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import query "vitess.io/vitess/go/vt/proto/query"
import topodata "vitess.io/vitess/go/vt/proto/topodata"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BinlogTransaction_Statement_Category int32

const (
	BinlogTransaction_Statement_BL_UNRECOGNIZED BinlogTransaction_Statement_Category = 0
	BinlogTransaction_Statement_BL_BEGIN        BinlogTransaction_Statement_Category = 1
	BinlogTransaction_Statement_BL_COMMIT       BinlogTransaction_Statement_Category = 2
	BinlogTransaction_Statement_BL_ROLLBACK     BinlogTransaction_Statement_Category = 3
	// BL_DML is deprecated.
	BinlogTransaction_Statement_BL_DML_DEPRECATED BinlogTransaction_Statement_Category = 4
	BinlogTransaction_Statement_BL_DDL            BinlogTransaction_Statement_Category = 5
	BinlogTransaction_Statement_BL_SET            BinlogTransaction_Statement_Category = 6
	BinlogTransaction_Statement_BL_INSERT         BinlogTransaction_Statement_Category = 7
	BinlogTransaction_Statement_BL_UPDATE         BinlogTransaction_Statement_Category = 8
	BinlogTransaction_Statement_BL_DELETE         BinlogTransaction_Statement_Category = 9
)

var BinlogTransaction_Statement_Category_name = map[int32]string{
	0: "BL_UNRECOGNIZED",
	1: "BL_BEGIN",
	2: "BL_COMMIT",
	3: "BL_ROLLBACK",
	4: "BL_DML_DEPRECATED",
	5: "BL_DDL",
	6: "BL_SET",
	7: "BL_INSERT",
	8: "BL_UPDATE",
	9: "BL_DELETE",
}
var BinlogTransaction_Statement_Category_value = map[string]int32{
	"BL_UNRECOGNIZED":   0,
	"BL_BEGIN":          1,
	"BL_COMMIT":         2,
	"BL_ROLLBACK":       3,
	"BL_DML_DEPRECATED": 4,
	"BL_DDL":            5,
	"BL_SET":            6,
	"BL_INSERT":         7,
	"BL_UPDATE":         8,
	"BL_DELETE":         9,
}

func (x BinlogTransaction_Statement_Category) String() string {
	return proto.EnumName(BinlogTransaction_Statement_Category_name, int32(x))
}
func (BinlogTransaction_Statement_Category) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{1, 0, 0}
}

// Charset is the per-statement charset info from a QUERY_EVENT binlog entry.
type Charset struct {
	// @@session.character_set_client
	Client int32 `protobuf:"varint,1,opt,name=client" json:"client,omitempty"`
	// @@session.collation_connection
	Conn int32 `protobuf:"varint,2,opt,name=conn" json:"conn,omitempty"`
	// @@session.collation_server
	Server               int32    `protobuf:"varint,3,opt,name=server" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Charset) Reset()         { *m = Charset{} }
func (m *Charset) String() string { return proto.CompactTextString(m) }
func (*Charset) ProtoMessage()    {}
func (*Charset) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{0}
}
func (m *Charset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Charset.Unmarshal(m, b)
}
func (m *Charset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Charset.Marshal(b, m, deterministic)
}
func (dst *Charset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Charset.Merge(dst, src)
}
func (m *Charset) XXX_Size() int {
	return xxx_messageInfo_Charset.Size(m)
}
func (m *Charset) XXX_DiscardUnknown() {
	xxx_messageInfo_Charset.DiscardUnknown(m)
}

var xxx_messageInfo_Charset proto.InternalMessageInfo

func (m *Charset) GetClient() int32 {
	if m != nil {
		return m.Client
	}
	return 0
}

func (m *Charset) GetConn() int32 {
	if m != nil {
		return m.Conn
	}
	return 0
}

func (m *Charset) GetServer() int32 {
	if m != nil {
		return m.Server
	}
	return 0
}

// BinlogTransaction describes a transaction inside the binlogs.
// It is streamed by vttablet for filtered replication, used during resharding.
type BinlogTransaction struct {
	// the statements in this transaction
	Statements []*BinlogTransaction_Statement `protobuf:"bytes,1,rep,name=statements" json:"statements,omitempty"`
	// The Event Token for this event.
	EventToken           *query.EventToken `protobuf:"bytes,4,opt,name=event_token,json=eventToken" json:"event_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *BinlogTransaction) Reset()         { *m = BinlogTransaction{} }
func (m *BinlogTransaction) String() string { return proto.CompactTextString(m) }
func (*BinlogTransaction) ProtoMessage()    {}
func (*BinlogTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{1}
}
func (m *BinlogTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinlogTransaction.Unmarshal(m, b)
}
func (m *BinlogTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinlogTransaction.Marshal(b, m, deterministic)
}
func (dst *BinlogTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinlogTransaction.Merge(dst, src)
}
func (m *BinlogTransaction) XXX_Size() int {
	return xxx_messageInfo_BinlogTransaction.Size(m)
}
func (m *BinlogTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_BinlogTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_BinlogTransaction proto.InternalMessageInfo

func (m *BinlogTransaction) GetStatements() []*BinlogTransaction_Statement {
	if m != nil {
		return m.Statements
	}
	return nil
}

func (m *BinlogTransaction) GetEventToken() *query.EventToken {
	if m != nil {
		return m.EventToken
	}
	return nil
}

type BinlogTransaction_Statement struct {
	// what type of statement is this?
	Category BinlogTransaction_Statement_Category `protobuf:"varint,1,opt,name=category,enum=binlogdata.BinlogTransaction_Statement_Category" json:"category,omitempty"`
	// charset of this statement, if different from pre-negotiated default.
	Charset *Charset `protobuf:"bytes,2,opt,name=charset" json:"charset,omitempty"`
	// the sql
	Sql                  []byte   `protobuf:"bytes,3,opt,name=sql,proto3" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinlogTransaction_Statement) Reset()         { *m = BinlogTransaction_Statement{} }
func (m *BinlogTransaction_Statement) String() string { return proto.CompactTextString(m) }
func (*BinlogTransaction_Statement) ProtoMessage()    {}
func (*BinlogTransaction_Statement) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{1, 0}
}
func (m *BinlogTransaction_Statement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinlogTransaction_Statement.Unmarshal(m, b)
}
func (m *BinlogTransaction_Statement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinlogTransaction_Statement.Marshal(b, m, deterministic)
}
func (dst *BinlogTransaction_Statement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinlogTransaction_Statement.Merge(dst, src)
}
func (m *BinlogTransaction_Statement) XXX_Size() int {
	return xxx_messageInfo_BinlogTransaction_Statement.Size(m)
}
func (m *BinlogTransaction_Statement) XXX_DiscardUnknown() {
	xxx_messageInfo_BinlogTransaction_Statement.DiscardUnknown(m)
}

var xxx_messageInfo_BinlogTransaction_Statement proto.InternalMessageInfo

func (m *BinlogTransaction_Statement) GetCategory() BinlogTransaction_Statement_Category {
	if m != nil {
		return m.Category
	}
	return BinlogTransaction_Statement_BL_UNRECOGNIZED
}

func (m *BinlogTransaction_Statement) GetCharset() *Charset {
	if m != nil {
		return m.Charset
	}
	return nil
}

func (m *BinlogTransaction_Statement) GetSql() []byte {
	if m != nil {
		return m.Sql
	}
	return nil
}

// StreamKeyRangeRequest is the payload to StreamKeyRange
type StreamKeyRangeRequest struct {
	// where to start
	Position string `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	// what to get
	KeyRange *topodata.KeyRange `protobuf:"bytes,2,opt,name=key_range,json=keyRange" json:"key_range,omitempty"`
	// default charset on the player side
	Charset              *Charset `protobuf:"bytes,3,opt,name=charset" json:"charset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamKeyRangeRequest) Reset()         { *m = StreamKeyRangeRequest{} }
func (m *StreamKeyRangeRequest) String() string { return proto.CompactTextString(m) }
func (*StreamKeyRangeRequest) ProtoMessage()    {}
func (*StreamKeyRangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{2}
}
func (m *StreamKeyRangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamKeyRangeRequest.Unmarshal(m, b)
}
func (m *StreamKeyRangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamKeyRangeRequest.Marshal(b, m, deterministic)
}
func (dst *StreamKeyRangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamKeyRangeRequest.Merge(dst, src)
}
func (m *StreamKeyRangeRequest) XXX_Size() int {
	return xxx_messageInfo_StreamKeyRangeRequest.Size(m)
}
func (m *StreamKeyRangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamKeyRangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamKeyRangeRequest proto.InternalMessageInfo

func (m *StreamKeyRangeRequest) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *StreamKeyRangeRequest) GetKeyRange() *topodata.KeyRange {
	if m != nil {
		return m.KeyRange
	}
	return nil
}

func (m *StreamKeyRangeRequest) GetCharset() *Charset {
	if m != nil {
		return m.Charset
	}
	return nil
}

// StreamKeyRangeResponse is the response from StreamKeyRange
type StreamKeyRangeResponse struct {
	BinlogTransaction    *BinlogTransaction `protobuf:"bytes,1,opt,name=binlog_transaction,json=binlogTransaction" json:"binlog_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StreamKeyRangeResponse) Reset()         { *m = StreamKeyRangeResponse{} }
func (m *StreamKeyRangeResponse) String() string { return proto.CompactTextString(m) }
func (*StreamKeyRangeResponse) ProtoMessage()    {}
func (*StreamKeyRangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{3}
}
func (m *StreamKeyRangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamKeyRangeResponse.Unmarshal(m, b)
}
func (m *StreamKeyRangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamKeyRangeResponse.Marshal(b, m, deterministic)
}
func (dst *StreamKeyRangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamKeyRangeResponse.Merge(dst, src)
}
func (m *StreamKeyRangeResponse) XXX_Size() int {
	return xxx_messageInfo_StreamKeyRangeResponse.Size(m)
}
func (m *StreamKeyRangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamKeyRangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamKeyRangeResponse proto.InternalMessageInfo

func (m *StreamKeyRangeResponse) GetBinlogTransaction() *BinlogTransaction {
	if m != nil {
		return m.BinlogTransaction
	}
	return nil
}

// StreamTablesRequest is the payload to StreamTables
type StreamTablesRequest struct {
	// where to start
	Position string `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	// what to get
	Tables []string `protobuf:"bytes,2,rep,name=tables" json:"tables,omitempty"`
	// default charset on the player side
	Charset              *Charset `protobuf:"bytes,3,opt,name=charset" json:"charset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StreamTablesRequest) Reset()         { *m = StreamTablesRequest{} }
func (m *StreamTablesRequest) String() string { return proto.CompactTextString(m) }
func (*StreamTablesRequest) ProtoMessage()    {}
func (*StreamTablesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{4}
}
func (m *StreamTablesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamTablesRequest.Unmarshal(m, b)
}
func (m *StreamTablesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamTablesRequest.Marshal(b, m, deterministic)
}
func (dst *StreamTablesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamTablesRequest.Merge(dst, src)
}
func (m *StreamTablesRequest) XXX_Size() int {
	return xxx_messageInfo_StreamTablesRequest.Size(m)
}
func (m *StreamTablesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamTablesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamTablesRequest proto.InternalMessageInfo

func (m *StreamTablesRequest) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *StreamTablesRequest) GetTables() []string {
	if m != nil {
		return m.Tables
	}
	return nil
}

func (m *StreamTablesRequest) GetCharset() *Charset {
	if m != nil {
		return m.Charset
	}
	return nil
}

// StreamTablesResponse is the response from StreamTables
type StreamTablesResponse struct {
	BinlogTransaction    *BinlogTransaction `protobuf:"bytes,1,opt,name=binlog_transaction,json=binlogTransaction" json:"binlog_transaction,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *StreamTablesResponse) Reset()         { *m = StreamTablesResponse{} }
func (m *StreamTablesResponse) String() string { return proto.CompactTextString(m) }
func (*StreamTablesResponse) ProtoMessage()    {}
func (*StreamTablesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{5}
}
func (m *StreamTablesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamTablesResponse.Unmarshal(m, b)
}
func (m *StreamTablesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamTablesResponse.Marshal(b, m, deterministic)
}
func (dst *StreamTablesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamTablesResponse.Merge(dst, src)
}
func (m *StreamTablesResponse) XXX_Size() int {
	return xxx_messageInfo_StreamTablesResponse.Size(m)
}
func (m *StreamTablesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamTablesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamTablesResponse proto.InternalMessageInfo

func (m *StreamTablesResponse) GetBinlogTransaction() *BinlogTransaction {
	if m != nil {
		return m.BinlogTransaction
	}
	return nil
}

// BinlogFilter specifies the filter parameters for Filtered Replication.
// It currently supports a keyrange or a list of tables.
type BinlogFilter struct {
	// key_range is set if the request is for a keyrange
	KeyRange *topodata.KeyRange `protobuf:"bytes,1,opt,name=key_range,json=keyRange" json:"key_range,omitempty"`
	// tables is set if the request is for a list of tables
	Tables               []string `protobuf:"bytes,2,rep,name=tables" json:"tables,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinlogFilter) Reset()         { *m = BinlogFilter{} }
func (m *BinlogFilter) String() string { return proto.CompactTextString(m) }
func (*BinlogFilter) ProtoMessage()    {}
func (*BinlogFilter) Descriptor() ([]byte, []int) {
	return fileDescriptor_binlogdata_a98679d9c88b7047, []int{6}
}
func (m *BinlogFilter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinlogFilter.Unmarshal(m, b)
}
func (m *BinlogFilter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinlogFilter.Marshal(b, m, deterministic)
}
func (dst *BinlogFilter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinlogFilter.Merge(dst, src)
}
func (m *BinlogFilter) XXX_Size() int {
	return xxx_messageInfo_BinlogFilter.Size(m)
}
func (m *BinlogFilter) XXX_DiscardUnknown() {
	xxx_messageInfo_BinlogFilter.DiscardUnknown(m)
}

var xxx_messageInfo_BinlogFilter proto.InternalMessageInfo

func (m *BinlogFilter) GetKeyRange() *topodata.KeyRange {
	if m != nil {
		return m.KeyRange
	}
	return nil
}

func (m *BinlogFilter) GetTables() []string {
	if m != nil {
		return m.Tables
	}
	return nil
}

func init() {
	proto.RegisterType((*Charset)(nil), "binlogdata.Charset")
	proto.RegisterType((*BinlogTransaction)(nil), "binlogdata.BinlogTransaction")
	proto.RegisterType((*BinlogTransaction_Statement)(nil), "binlogdata.BinlogTransaction.Statement")
	proto.RegisterType((*StreamKeyRangeRequest)(nil), "binlogdata.StreamKeyRangeRequest")
	proto.RegisterType((*StreamKeyRangeResponse)(nil), "binlogdata.StreamKeyRangeResponse")
	proto.RegisterType((*StreamTablesRequest)(nil), "binlogdata.StreamTablesRequest")
	proto.RegisterType((*StreamTablesResponse)(nil), "binlogdata.StreamTablesResponse")
	proto.RegisterType((*BinlogFilter)(nil), "binlogdata.BinlogFilter")
	proto.RegisterEnum("binlogdata.BinlogTransaction_Statement_Category", BinlogTransaction_Statement_Category_name, BinlogTransaction_Statement_Category_value)
}

func init() { proto.RegisterFile("binlogdata.proto", fileDescriptor_binlogdata_a98679d9c88b7047) }

var fileDescriptor_binlogdata_a98679d9c88b7047 = []byte{
	// 583 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0xdd, 0x4e, 0xdb, 0x30,
	0x14, 0x5e, 0x9a, 0x52, 0xd2, 0x13, 0x06, 0xae, 0x19, 0xa8, 0xaa, 0x34, 0xa9, 0xea, 0x0d, 0xdd,
	0xc5, 0x92, 0x29, 0x7b, 0x02, 0x92, 0x78, 0xa8, 0xe0, 0x16, 0xe4, 0x06, 0x4d, 0xe2, 0x26, 0x4a,
	0x8b, 0xd7, 0x45, 0x94, 0xb8, 0xc4, 0xa6, 0x5a, 0x9f, 0x63, 0x4f, 0xb1, 0x17, 0xd9, 0x9b, 0xec,
	0x3d, 0xa6, 0xfc, 0x90, 0x16, 0xa6, 0x6d, 0xec, 0x62, 0x77, 0xe7, 0x3b, 0xfe, 0xce, 0xe7, 0xf3,
	0x7d, 0x8e, 0x02, 0x68, 0x12, 0x27, 0x73, 0x31, 0xbb, 0x8e, 0x54, 0x64, 0x2d, 0x52, 0xa1, 0x04,
	0x86, 0x75, 0xa7, 0x63, 0xde, 0xdd, 0xf3, 0x74, 0x55, 0x1c, 0x74, 0x76, 0x95, 0x58, 0x88, 0x35,
	0xb1, 0x37, 0x84, 0x6d, 0xef, 0x73, 0x94, 0x4a, 0xae, 0xf0, 0x21, 0x34, 0xa6, 0xf3, 0x98, 0x27,
	0xaa, 0xad, 0x75, 0xb5, 0xfe, 0x16, 0x2b, 0x11, 0xc6, 0x50, 0x9f, 0x8a, 0x24, 0x69, 0xd7, 0xf2,
	0x6e, 0x5e, 0x67, 0x5c, 0xc9, 0xd3, 0x25, 0x4f, 0xdb, 0x7a, 0xc1, 0x2d, 0x50, 0xef, 0x87, 0x0e,
	0x2d, 0x37, 0xbf, 0x3a, 0x48, 0xa3, 0x44, 0x46, 0x53, 0x15, 0x8b, 0x04, 0x9f, 0x00, 0x48, 0x15,
	0x29, 0x7e, 0xcb, 0x13, 0x25, 0xdb, 0x5a, 0x57, 0xef, 0x9b, 0xce, 0x91, 0xb5, 0xb1, 0xf4, 0x2f,
	0x23, 0xd6, 0xf8, 0x81, 0xcf, 0x36, 0x46, 0xb1, 0x03, 0x26, 0x5f, 0xf2, 0x44, 0x85, 0x4a, 0xdc,
	0xf0, 0xa4, 0x5d, 0xef, 0x6a, 0x7d, 0xd3, 0x69, 0x59, 0x85, 0x41, 0x92, 0x9d, 0x04, 0xd9, 0x01,
	0x03, 0x5e, 0xd5, 0x9d, 0xef, 0x35, 0x68, 0x56, 0x6a, 0x98, 0x82, 0x31, 0x8d, 0x14, 0x9f, 0x89,
	0x74, 0x95, 0xdb, 0xdc, 0x75, 0xde, 0x3d, 0x73, 0x11, 0xcb, 0x2b, 0xe7, 0x58, 0xa5, 0x80, 0xdf,
	0xc2, 0xf6, 0xb4, 0x48, 0x2f, 0x4f, 0xc7, 0x74, 0xf6, 0x37, 0xc5, 0xca, 0x60, 0xd9, 0x03, 0x07,
	0x23, 0xd0, 0xe5, 0xdd, 0x3c, 0x8f, 0x6c, 0x87, 0x65, 0x65, 0xef, 0x9b, 0x06, 0xc6, 0x83, 0x2e,
	0xde, 0x87, 0x3d, 0x97, 0x86, 0x97, 0x23, 0x46, 0xbc, 0xf3, 0x93, 0xd1, 0xe0, 0x8a, 0xf8, 0xe8,
	0x05, 0xde, 0x01, 0xc3, 0xa5, 0xa1, 0x4b, 0x4e, 0x06, 0x23, 0xa4, 0xe1, 0x97, 0xd0, 0x74, 0x69,
	0xe8, 0x9d, 0x0f, 0x87, 0x83, 0x00, 0xd5, 0xf0, 0x1e, 0x98, 0x2e, 0x0d, 0xd9, 0x39, 0xa5, 0xee,
	0xb1, 0x77, 0x86, 0x74, 0x7c, 0x00, 0x2d, 0x97, 0x86, 0xfe, 0x90, 0x86, 0x3e, 0xb9, 0x60, 0xc4,
	0x3b, 0x0e, 0x88, 0x8f, 0xea, 0x18, 0xa0, 0x91, 0xb5, 0x7d, 0x8a, 0xb6, 0xca, 0x7a, 0x4c, 0x02,
	0xd4, 0x28, 0xe5, 0x06, 0xa3, 0x31, 0x61, 0x01, 0xda, 0x2e, 0xe1, 0xe5, 0x85, 0x7f, 0x1c, 0x10,
	0x64, 0x94, 0xd0, 0x27, 0x94, 0x04, 0x04, 0x35, 0x4f, 0xeb, 0x46, 0x0d, 0xe9, 0xa7, 0x75, 0x43,
	0x47, 0xf5, 0xde, 0x57, 0x0d, 0x0e, 0xc6, 0x2a, 0xe5, 0xd1, 0xed, 0x19, 0x5f, 0xb1, 0x28, 0x99,
	0x71, 0xc6, 0xef, 0xee, 0xb9, 0x54, 0xb8, 0x03, 0xc6, 0x42, 0xc8, 0x38, 0xcb, 0x2e, 0x0f, 0xb8,
	0xc9, 0x2a, 0x8c, 0x6d, 0x68, 0xde, 0xf0, 0x55, 0x98, 0x66, 0xfc, 0x32, 0x30, 0x6c, 0x55, 0x1f,
	0x64, 0xa5, 0x64, 0xdc, 0x94, 0xd5, 0x66, 0xbe, 0xfa, 0xdf, 0xf3, 0xed, 0x7d, 0x82, 0xc3, 0xa7,
	0x4b, 0xc9, 0x85, 0x48, 0x24, 0xc7, 0x14, 0x70, 0x31, 0x18, 0xaa, 0xf5, 0xdb, 0xe6, 0xfb, 0x99,
	0xce, 0xeb, 0x3f, 0x7e, 0x00, 0xac, 0x35, 0x79, 0xda, 0xea, 0x7d, 0x81, 0xfd, 0xe2, 0x9e, 0x20,
	0x9a, 0xcc, 0xb9, 0x7c, 0x8e, 0xf5, 0x43, 0x68, 0xa8, 0x9c, 0xdc, 0xae, 0x75, 0xf5, 0x7e, 0x93,
	0x95, 0xe8, 0x5f, 0x1d, 0x5e, 0xc3, 0xab, 0xc7, 0x37, 0xff, 0x17, 0x7f, 0x1f, 0x61, 0xa7, 0xe0,
	0x7d, 0x88, 0xe7, 0x8a, 0xa7, 0x8f, 0xdf, 0x4d, 0x7b, 0xc6, 0xbb, 0xfd, 0xc6, 0xad, 0xfb, 0xe6,
	0xea, 0x68, 0x19, 0x2b, 0x2e, 0xa5, 0x15, 0x0b, 0xbb, 0xa8, 0xec, 0x99, 0xb0, 0x97, 0xca, 0xce,
	0xff, 0x46, 0xf6, 0x7a, 0xd1, 0x49, 0x23, 0xef, 0xbc, 0xff, 0x19, 0x00, 0x00, 0xff, 0xff, 0x55,
	0xaa, 0x37, 0x05, 0xdc, 0x04, 0x00, 0x00,
}
