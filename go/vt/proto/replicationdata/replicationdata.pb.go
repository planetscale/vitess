// Code generated by protoc-gen-go. DO NOT EDIT.
// source: replicationdata.proto

package replicationdata

import (
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Status is the replication status for MySQL (returned by 'show slave status'
// and parsed into a Position and fields).
type Status struct {
	Position string `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	// RelayLogPosition will be empty for flavors that do not support returning the full GTIDSet from the relay log, such as MariaDB.
	RelayLogPosition     string   `protobuf:"bytes,8,opt,name=relay_log_position,json=relayLogPosition,proto3" json:"relay_log_position,omitempty"`
	SlaveIoRunning       bool     `protobuf:"varint,2,opt,name=slave_io_running,json=slaveIoRunning,proto3" json:"slave_io_running,omitempty"`
	SlaveSqlRunning      bool     `protobuf:"varint,3,opt,name=slave_sql_running,json=slaveSqlRunning,proto3" json:"slave_sql_running,omitempty"`
	SecondsBehindMaster  uint32   `protobuf:"varint,4,opt,name=seconds_behind_master,json=secondsBehindMaster,proto3" json:"seconds_behind_master,omitempty"`
	MasterHost           string   `protobuf:"bytes,5,opt,name=master_host,json=masterHost,proto3" json:"master_host,omitempty"`
	MasterPort           int32    `protobuf:"varint,6,opt,name=master_port,json=masterPort,proto3" json:"master_port,omitempty"`
	MasterConnectRetry   int32    `protobuf:"varint,7,opt,name=master_connect_retry,json=masterConnectRetry,proto3" json:"master_connect_retry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_ee8ee22b8c4b9d06, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetPosition() string {
	if m != nil {
		return m.Position
	}
	return ""
}

func (m *Status) GetRelayLogPosition() string {
	if m != nil {
		return m.RelayLogPosition
	}
	return ""
}

func (m *Status) GetSlaveIoRunning() bool {
	if m != nil {
		return m.SlaveIoRunning
	}
	return false
}

func (m *Status) GetSlaveSqlRunning() bool {
	if m != nil {
		return m.SlaveSqlRunning
	}
	return false
}

func (m *Status) GetSecondsBehindMaster() uint32 {
	if m != nil {
		return m.SecondsBehindMaster
	}
	return 0
}

func (m *Status) GetMasterHost() string {
	if m != nil {
		return m.MasterHost
	}
	return ""
}

func (m *Status) GetMasterPort() int32 {
	if m != nil {
		return m.MasterPort
	}
	return 0
}

func (m *Status) GetMasterConnectRetry() int32 {
	if m != nil {
		return m.MasterConnectRetry
	}
	return 0
}

func init() {
	proto.RegisterType((*Status)(nil), "replicationdata.Status")
}

func init() { proto.RegisterFile("replicationdata.proto", fileDescriptor_ee8ee22b8c4b9d06) }

var fileDescriptor_ee8ee22b8c4b9d06 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xd1, 0x41, 0x4b, 0xfb, 0x30,
	0x18, 0xc7, 0x71, 0xba, 0xff, 0x7f, 0xb5, 0x46, 0x74, 0x33, 0x3a, 0x08, 0x5e, 0x2c, 0x9e, 0x8a,
	0x8c, 0x56, 0xf4, 0x1d, 0xcc, 0x8b, 0x82, 0xc2, 0xe8, 0x6e, 0x5e, 0x42, 0xd6, 0x86, 0x2e, 0x10,
	0xf3, 0x74, 0xc9, 0xb3, 0xc2, 0xde, 0xa5, 0x2f, 0x49, 0x96, 0xac, 0x45, 0x76, 0x6b, 0x7f, 0xdf,
	0xcf, 0x21, 0xf0, 0x90, 0x99, 0x95, 0xad, 0x56, 0x95, 0x40, 0x05, 0xa6, 0x16, 0x28, 0xf2, 0xd6,
	0x02, 0x02, 0x9d, 0x9c, 0xcc, 0x0f, 0x3f, 0x23, 0x12, 0xaf, 0x50, 0xe0, 0xce, 0xd1, 0x3b, 0x92,
	0xb4, 0xe0, 0xd4, 0x21, 0xb1, 0x28, 0x8d, 0xb2, 0xf3, 0x72, 0xf8, 0xa7, 0x73, 0x42, 0xad, 0xd4,
	0x62, 0xcf, 0x35, 0x34, 0x7c, 0x50, 0x89, 0x57, 0x53, 0x5f, 0x3e, 0xa0, 0x59, 0xf6, 0x3a, 0x23,
	0x53, 0xa7, 0x45, 0x27, 0xb9, 0x02, 0x6e, 0x77, 0xc6, 0x28, 0xd3, 0xb0, 0x51, 0x1a, 0x65, 0x49,
	0x79, 0xe5, 0xf7, 0x77, 0x28, 0xc3, 0x4a, 0x1f, 0xc9, 0x75, 0x90, 0x6e, 0xab, 0x07, 0xfa, 0xcf,
	0xd3, 0x89, 0x0f, 0xab, 0xad, 0xee, 0xed, 0x33, 0x99, 0x39, 0x59, 0x81, 0xa9, 0x1d, 0x5f, 0xcb,
	0x8d, 0x32, 0x35, 0xff, 0x16, 0x0e, 0xa5, 0x65, 0xff, 0xd3, 0x28, 0xbb, 0x2c, 0x6f, 0x8e, 0x71,
	0xe1, 0xdb, 0xa7, 0x4f, 0xf4, 0x9e, 0x5c, 0x04, 0xc4, 0x37, 0xe0, 0x90, 0x8d, 0xfd, 0x83, 0x49,
	0x98, 0xde, 0xc0, 0xe1, 0x1f, 0xd0, 0x82, 0x45, 0x16, 0xa7, 0x51, 0x36, 0xee, 0xc1, 0x12, 0x2c,
	0xd2, 0x27, 0x72, 0x7b, 0x04, 0x15, 0x18, 0x23, 0x2b, 0xe4, 0x56, 0xa2, 0xdd, 0xb3, 0x33, 0x2f,
	0x69, 0x68, 0xaf, 0x21, 0x95, 0x87, 0xb2, 0xc8, 0xbf, 0xe6, 0x9d, 0x42, 0xe9, 0x5c, 0xae, 0xa0,
	0x08, 0x5f, 0x45, 0x03, 0x45, 0x87, 0x85, 0xbf, 0x41, 0x71, 0x72, 0x82, 0x75, 0xec, 0xe7, 0x97,
	0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf2, 0x5e, 0x2a, 0x18, 0xb3, 0x01, 0x00, 0x00,
}
