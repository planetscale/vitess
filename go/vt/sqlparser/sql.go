// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const ALGORITHM = 57422
const NONE = 57423
const SHARED = 57424
const EXCLUSIVE = 57425
const SUBQUERY_AS_EXPR = 57426
const ID = 57427
const AT_ID = 57428
const AT_AT_ID = 57429
const HEX = 57430
const STRING = 57431
const NCHAR_STRING = 57432
const INTEGRAL = 57433
const FLOAT = 57434
const DECIMAL = 57435
const HEXNUM = 57436
const VALUE_ARG = 57437
const LIST_ARG = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BIT_LITERAL = 57441
const COMPRESSION = 57442
const JSON_PRETTY = 57443
const JSON_STORAGE_SIZE = 57444
const JSON_STORAGE_FREE = 57445
const JSON_CONTAINS = 57446
const JSON_CONTAINS_PATH = 57447
const JSON_EXTRACT = 57448
const JSON_KEYS = 57449
const JSON_OVERLAPS = 57450
const JSON_SEARCH = 57451
const JSON_VALUE = 57452
const EXTRACT = 57453
const NULL = 57454
const TRUE = 57455
const FALSE = 57456
const OFF = 57457
const DISCARD = 57458
const IMPORT = 57459
const ENABLE = 57460
const DISABLE = 57461
const TABLESPACE = 57462
const VIRTUAL = 57463
const STORED = 57464
const BOTH = 57465
const LEADING = 57466
const TRAILING = 57467
const EMPTY_FROM_CLAUSE = 57468
const LOWER_THAN_CHARSET = 57469
const CHARSET = 57470
const UNIQUE = 57471
const KEY = 57472
const EXPRESSION_PREC_SETTER = 57473
const OR = 57474
const XOR = 57475
const AND = 57476
const NOT = 57477
const BETWEEN = 57478
const CASE = 57479
const WHEN = 57480
const THEN = 57481
const ELSE = 57482
const END = 57483
const LE = 57484
const GE = 57485
const NE = 57486
const NULL_SAFE_EQUAL = 57487
const IS = 57488
const LIKE = 57489
const REGEXP = 57490
const IN = 57491
const SHIFT_LEFT = 57492
const SHIFT_RIGHT = 57493
const DIV = 57494
const MOD = 57495
const UNARY = 57496
const COLLATE = 57497
const BINARY = 57498
const UNDERSCORE_ARMSCII8 = 57499
const UNDERSCORE_ASCII = 57500
const UNDERSCORE_BIG5 = 57501
const UNDERSCORE_BINARY = 57502
const UNDERSCORE_CP1250 = 57503
const UNDERSCORE_CP1251 = 57504
const UNDERSCORE_CP1256 = 57505
const UNDERSCORE_CP1257 = 57506
const UNDERSCORE_CP850 = 57507
const UNDERSCORE_CP852 = 57508
const UNDERSCORE_CP866 = 57509
const UNDERSCORE_CP932 = 57510
const UNDERSCORE_DEC8 = 57511
const UNDERSCORE_EUCJPMS = 57512
const UNDERSCORE_EUCKR = 57513
const UNDERSCORE_GB18030 = 57514
const UNDERSCORE_GB2312 = 57515
const UNDERSCORE_GBK = 57516
const UNDERSCORE_GEOSTD8 = 57517
const UNDERSCORE_GREEK = 57518
const UNDERSCORE_HEBREW = 57519
const UNDERSCORE_HP8 = 57520
const UNDERSCORE_KEYBCS2 = 57521
const UNDERSCORE_KOI8R = 57522
const UNDERSCORE_KOI8U = 57523
const UNDERSCORE_LATIN1 = 57524
const UNDERSCORE_LATIN2 = 57525
const UNDERSCORE_LATIN5 = 57526
const UNDERSCORE_LATIN7 = 57527
const UNDERSCORE_MACCE = 57528
const UNDERSCORE_MACROMAN = 57529
const UNDERSCORE_SJIS = 57530
const UNDERSCORE_SWE7 = 57531
const UNDERSCORE_TIS620 = 57532
const UNDERSCORE_UCS2 = 57533
const UNDERSCORE_UJIS = 57534
const UNDERSCORE_UTF16 = 57535
const UNDERSCORE_UTF16LE = 57536
const UNDERSCORE_UTF32 = 57537
const UNDERSCORE_UTF8 = 57538
const UNDERSCORE_UTF8MB4 = 57539
const UNDERSCORE_UTF8MB3 = 57540
const INTERVAL = 57541
const JSON_EXTRACT_OP = 57542
const JSON_UNQUOTE_EXTRACT_OP = 57543
const CREATE = 57544
const ALTER = 57545
const DROP = 57546
const RENAME = 57547
const ANALYZE = 57548
const ADD = 57549
const FLUSH = 57550
const CHANGE = 57551
const MODIFY = 57552
const DEALLOCATE = 57553
const REVERT = 57554
const SCHEMA = 57555
const TABLE = 57556
const INDEX = 57557
const VIEW = 57558
const TO = 57559
const IGNORE = 57560
const IF = 57561
const PRIMARY = 57562
const COLUMN = 57563
const SPATIAL = 57564
const FULLTEXT = 57565
const KEY_BLOCK_SIZE = 57566
const CHECK = 57567
const INDEXES = 57568
const ACTION = 57569
const CASCADE = 57570
const CONSTRAINT = 57571
const FOREIGN = 57572
const NO = 57573
const REFERENCES = 57574
const RESTRICT = 57575
const SHOW = 57576
const DESCRIBE = 57577
const EXPLAIN = 57578
const DATE = 57579
const ESCAPE = 57580
const REPAIR = 57581
const OPTIMIZE = 57582
const TRUNCATE = 57583
const COALESCE = 57584
const EXCHANGE = 57585
const REBUILD = 57586
const PARTITIONING = 57587
const REMOVE = 57588
const PREPARE = 57589
const EXECUTE = 57590
const MAXVALUE = 57591
const PARTITION = 57592
const REORGANIZE = 57593
const LESS = 57594
const THAN = 57595
const PROCEDURE = 57596
const TRIGGER = 57597
const VINDEX = 57598
const VINDEXES = 57599
const DIRECTORY = 57600
const NAME = 57601
const UPGRADE = 57602
const STATUS = 57603
const VARIABLES = 57604
const WARNINGS = 57605
const CASCADED = 57606
const DEFINER = 57607
const OPTION = 57608
const SQL = 57609
const UNDEFINED = 57610
const SEQUENCE = 57611
const MERGE = 57612
const TEMPORARY = 57613
const TEMPTABLE = 57614
const INVOKER = 57615
const SECURITY = 57616
const FIRST = 57617
const AFTER = 57618
const LAST = 57619
const VITESS_MIGRATION = 57620
const CANCEL = 57621
const RETRY = 57622
const COMPLETE = 57623
const CLEANUP = 57624
const BEGIN = 57625
const START = 57626
const TRANSACTION = 57627
const COMMIT = 57628
const ROLLBACK = 57629
const SAVEPOINT = 57630
const RELEASE = 57631
const WORK = 57632
const BIT = 57633
const TINYINT = 57634
const SMALLINT = 57635
const MEDIUMINT = 57636
const INT = 57637
const INTEGER = 57638
const BIGINT = 57639
const INTNUM = 57640
const REAL = 57641
const DOUBLE = 57642
const FLOAT_TYPE = 57643
const DECIMAL_TYPE = 57644
const NUMERIC = 57645
const TIME = 57646
const TIMESTAMP = 57647
const DATETIME = 57648
const YEAR = 57649
const CHAR = 57650
const VARCHAR = 57651
const BOOL = 57652
const CHARACTER = 57653
const VARBINARY = 57654
const NCHAR = 57655
const TEXT = 57656
const TINYTEXT = 57657
const MEDIUMTEXT = 57658
const LONGTEXT = 57659
const BLOB = 57660
const TINYBLOB = 57661
const MEDIUMBLOB = 57662
const LONGBLOB = 57663
const JSON = 57664
const JSON_SCHEMA_VALID = 57665
const JSON_SCHEMA_VALIDATION_REPORT = 57666
const ENUM = 57667
const GEOMETRY = 57668
const POINT = 57669
const LINESTRING = 57670
const POLYGON = 57671
const GEOMETRYCOLLECTION = 57672
const MULTIPOINT = 57673
const MULTILINESTRING = 57674
const MULTIPOLYGON = 57675
const ASCII = 57676
const UNICODE = 57677
const NULLX = 57678
const AUTO_INCREMENT = 57679
const APPROXNUM = 57680
const SIGNED = 57681
const UNSIGNED = 57682
const ZEROFILL = 57683
const CODE = 57684
const COLLATION = 57685
const COLUMNS = 57686
const DATABASES = 57687
const ENGINES = 57688
const EVENT = 57689
const EXTENDED = 57690
const FIELDS = 57691
const FULL = 57692
const FUNCTION = 57693
const GTID_EXECUTED = 57694
const KEYSPACES = 57695
const OPEN = 57696
const PLUGINS = 57697
const PRIVILEGES = 57698
const PROCESSLIST = 57699
const SCHEMAS = 57700
const TABLES = 57701
const TRIGGERS = 57702
const USER = 57703
const VGTID_EXECUTED = 57704
const VITESS_KEYSPACES = 57705
const VITESS_METADATA = 57706
const VITESS_MIGRATIONS = 57707
const VITESS_REPLICATION_STATUS = 57708
const VITESS_SHARDS = 57709
const VITESS_TABLETS = 57710
const VITESS_TARGET = 57711
const VSCHEMA = 57712
const NAMES = 57713
const GLOBAL = 57714
const SESSION = 57715
const ISOLATION = 57716
const LEVEL = 57717
const READ = 57718
const WRITE = 57719
const ONLY = 57720
const REPEATABLE = 57721
const COMMITTED = 57722
const UNCOMMITTED = 57723
const SERIALIZABLE = 57724
const CURRENT_TIMESTAMP = 57725
const DATABASE = 57726
const CURRENT_DATE = 57727
const NOW = 57728
const CURRENT_TIME = 57729
const LOCALTIME = 57730
const LOCALTIMESTAMP = 57731
const CURRENT_USER = 57732
const UTC_DATE = 57733
const UTC_TIME = 57734
const UTC_TIMESTAMP = 57735
const DAY = 57736
const DAY_HOUR = 57737
const DAY_MICROSECOND = 57738
const DAY_MINUTE = 57739
const DAY_SECOND = 57740
const HOUR = 57741
const HOUR_MICROSECOND = 57742
const HOUR_MINUTE = 57743
const HOUR_SECOND = 57744
const MICROSECOND = 57745
const MINUTE = 57746
const MINUTE_MICROSECOND = 57747
const MINUTE_SECOND = 57748
const MONTH = 57749
const QUARTER = 57750
const SECOND = 57751
const SECOND_MICROSECOND = 57752
const YEAR_MONTH = 57753
const WEEK = 57754
const REPLACE = 57755
const CONVERT = 57756
const CAST = 57757
const SUBSTR = 57758
const SUBSTRING = 57759
const GROUP_CONCAT = 57760
const SEPARATOR = 57761
const TIMESTAMPADD = 57762
const TIMESTAMPDIFF = 57763
const WEIGHT_STRING = 57764
const LTRIM = 57765
const RTRIM = 57766
const TRIM = 57767
const JSON_ARRAY = 57768
const JSON_OBJECT = 57769
const JSON_QUOTE = 57770
const JSON_DEPTH = 57771
const JSON_TYPE = 57772
const JSON_LENGTH = 57773
const JSON_VALID = 57774
const JSON_ARRAY_APPEND = 57775
const JSON_ARRAY_INSERT = 57776
const JSON_INSERT = 57777
const JSON_MERGE = 57778
const JSON_MERGE_PATCH = 57779
const JSON_MERGE_PRESERVE = 57780
const JSON_REMOVE = 57781
const JSON_REPLACE = 57782
const JSON_SET = 57783
const JSON_UNQUOTE = 57784
const MATCH = 57785
const AGAINST = 57786
const BOOLEAN = 57787
const LANGUAGE = 57788
const WITH = 57789
const QUERY = 57790
const EXPANSION = 57791
const WITHOUT = 57792
const VALIDATION = 57793
const UNUSED = 57794
const ARRAY = 57795
const CUME_DIST = 57796
const DESCRIPTION = 57797
const DENSE_RANK = 57798
const EMPTY = 57799
const EXCEPT = 57800
const FIRST_VALUE = 57801
const GROUPING = 57802
const GROUPS = 57803
const JSON_TABLE = 57804
const LAG = 57805
const LAST_VALUE = 57806
const LATERAL = 57807
const LEAD = 57808
const NTH_VALUE = 57809
const NTILE = 57810
const OF = 57811
const OVER = 57812
const PERCENT_RANK = 57813
const RANK = 57814
const RECURSIVE = 57815
const ROW_NUMBER = 57816
const SYSTEM = 57817
const WINDOW = 57818
const ACTIVE = 57819
const ADMIN = 57820
const AUTOEXTEND_SIZE = 57821
const BUCKETS = 57822
const CLONE = 57823
const COLUMN_FORMAT = 57824
const COMPONENT = 57825
const DEFINITION = 57826
const ENFORCED = 57827
const ENGINE_ATTRIBUTE = 57828
const EXCLUDE = 57829
const FOLLOWING = 57830
const GEOMCOLLECTION = 57831
const GET_MASTER_PUBLIC_KEY = 57832
const HISTOGRAM = 57833
const HISTORY = 57834
const INACTIVE = 57835
const INVISIBLE = 57836
const LOCKED = 57837
const MASTER_COMPRESSION_ALGORITHMS = 57838
const MASTER_PUBLIC_KEY_PATH = 57839
const MASTER_TLS_CIPHERSUITES = 57840
const MASTER_ZSTD_COMPRESSION_LEVEL = 57841
const NESTED = 57842
const NETWORK_NAMESPACE = 57843
const NOWAIT = 57844
const NULLS = 57845
const OJ = 57846
const OLD = 57847
const OPTIONAL = 57848
const ORDINALITY = 57849
const ORGANIZATION = 57850
const OTHERS = 57851
const PARTIAL = 57852
const PATH = 57853
const PERSIST = 57854
const PERSIST_ONLY = 57855
const PRECEDING = 57856
const PRIVILEGE_CHECKS_USER = 57857
const PROCESS = 57858
const RANDOM = 57859
const REFERENCE = 57860
const REQUIRE_ROW_FORMAT = 57861
const RESOURCE = 57862
const RESPECT = 57863
const RESTART = 57864
const RETAIN = 57865
const REUSE = 57866
const ROLE = 57867
const SECONDARY = 57868
const SECONDARY_ENGINE = 57869
const SECONDARY_ENGINE_ATTRIBUTE = 57870
const SECONDARY_LOAD = 57871
const SECONDARY_UNLOAD = 57872
const SIMPLE = 57873
const SKIP = 57874
const SRID = 57875
const THREAD_PRIORITY = 57876
const TIES = 57877
const UNBOUNDED = 57878
const VCPU = 57879
const VISIBLE = 57880
const RETURNING = 57881
const FORMAT = 57882
const TREE = 57883
const VITESS = 57884
const TRADITIONAL = 57885
const LOCAL = 57886
const LOW_PRIORITY = 57887
const NO_WRITE_TO_BINLOG = 57888
const LOGS = 57889
const ERROR = 57890
const GENERAL = 57891
const HOSTS = 57892
const OPTIMIZER_COSTS = 57893
const USER_RESOURCES = 57894
const SLOW = 57895
const CHANNEL = 57896
const RELAY = 57897
const EXPORT = 57898
const AVG_ROW_LENGTH = 57899
const CONNECTION = 57900
const CHECKSUM = 57901
const DELAY_KEY_WRITE = 57902
const ENCRYPTION = 57903
const ENGINE = 57904
const INSERT_METHOD = 57905
const MAX_ROWS = 57906
const MIN_ROWS = 57907
const PACK_KEYS = 57908
const PASSWORD = 57909
const FIXED = 57910
const DYNAMIC = 57911
const COMPRESSED = 57912
const REDUNDANT = 57913
const COMPACT = 57914
const ROW_FORMAT = 57915
const STATS_AUTO_RECALC = 57916
const STATS_PERSISTENT = 57917
const STATS_SAMPLE_PAGES = 57918
const STORAGE = 57919
const MEMORY = 57920
const DISK = 57921
const PARTITIONS = 57922
const LINEAR = 57923
const RANGE = 57924
const LIST = 57925
const SUBPARTITION = 57926
const SUBPARTITIONS = 57927
const HASH = 57928

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	604, 145,
	-2, 153,
	-1, 48,
	131, 153,
	171, 153,
	328, 153,
	-2, 487,
	-1, 55,
	35, 705,
	232, 705,
	243, 705,
	278, 719,
	279, 719,
	-2, 707,
	-1, 60,
	234, 732,
	-2, 730,
	-1, 114,
	231, 1256,
	-2, 119,
	-1, 116,
	1, 146,
	604, 146,
	-2, 153,
	-1, 127,
	132, 378,
	237, 378,
	-2, 481,
	-1, 146,
	131, 153,
	171, 153,
	328, 153,
	-2, 496,
	-1, 687,
	216, 1277,
	-2, 1273,
	-1, 688,
	216, 1278,
	-2, 1274,
	-1, 763,
	59, 800,
	-2, 815,
	-1, 800,
	147, 1681,
	-2, 112,
	-1, 801,
	147, 1524,
	-2, 113,
	-1, 807,
	147, 1607,
	-2, 1250,
	-1, 955,
	147, 1453,
	-2, 1247,
	-1, 996,
	242, 41,
	247, 41,
	-2, 389,
	-1, 1079,
	1, 538,
	604, 538,
	-2, 153,
	-1, 1316,
	59, 801,
	-2, 820,
	-1, 1317,
	59, 802,
	-2, 821,
	-1, 1370,
	131, 153,
	171, 153,
	328, 153,
	-2, 428,
	-1, 1449,
	132, 378,
	237, 378,
	-2, 481,
	-1, 1458,
	242, 42,
	247, 42,
	-2, 390,
	-1, 1763,
	216, 1282,
	-2, 1276,
	-1, 1846,
	131, 153,
	171, 153,
	328, 153,
	-2, 429,
	-1, 1853,
	25, 174,
	-2, 176,
	-1, 2096,
	86, 39,
	-2, 857,
	-1, 2148,
	77, 94,
	86, 94,
	-2, 877,
	-1, 2215,
	579, 633,
	-2, 620,
	-1, 2349,
	49, 1218,
	-2, 1212,
	-1, 2563,
	86, 39,
	-2, 858,
	-1, 2601,
	7, 53,
	18, 53,
	20, 53,
	87, 53,
	-2, 849,
	-1, 2921,
	22, 1609,
	32, 1609,
	172, 1609,
	254, 1609,
	308, 1609,
	309, 1609,
	310, 1609,
	311, 1609,
	312, 1609,
	313, 1609,
	314, 1609,
	316, 1609,
	317, 1609,
	318, 1609,
	319, 1609,
	320, 1609,
	321, 1609,
	322, 1609,
	323, 1609,
	324, 1609,
	325, 1609,
	326, 1609,
	327, 1609,
	329, 1609,
	331, 1609,
	332, 1609,
	333, 1609,
	334, 1609,
	335, 1609,
	336, 1609,
	337, 1609,
	338, 1609,
	339, 1609,
	342, 1609,
	343, 1609,
	344, 1609,
	345, 1609,
	346, 1609,
	347, 1609,
	348, 1609,
	349, 1609,
	350, 1609,
	462, 1609,
	-2, 578,
}

const yyPrivate = 57344

const yyLast = 42408

var yyAct = [...]int{
	687, 2698, 2699, 2975, 2697, 2983, 2853, 2494, 2951, 1843,
	696, 2952, 1373, 2903, 2674, 2308, 2402, 2919, 2409, 2050,
	1142, 1777, 3, 2363, 1797, 2806, 2450, 2712, 1779, 2360,
	1295, 2829, 1913, 2417, 689, 2084, 756, 2476, 605, 1331,
	2119, 96, 681, 2566, 2364, 2717, 2477, 680, 37, 2361,
	690, 186, 2307, 2270, 186, 602, 570, 186, 1801, 678,
	679, 2306, 585, 778, 186, 2572, 631, 2479, 1816, 2358,
	2350, 2592, 186, 2111, 2142, 2558, 2180, 2212, 1876, 603,
	2253, 1881, 601, 958, 1091, 1901, 2181, 186, 2182, 1832,
	2131, 1944, 155, 779, 1318, 38, 2103, 1427, 597, 2086,
	36, 1821, 805, 1733, 1820, 1673, 1663, 1004, 1757, 585,
	1922, 141, 585, 186, 585, 1808, 1900, 1120, 758, 1958,
	1883, 2174, 2150, 986, 1362, 760, 991, 764, 91, 802,
	1621, 95, 1028, 1340, 1823, 1298, 1456, 1227, 1685, 1570,
	1640, 1732, 1760, 614, 1163, 781, 965, 1463, 1898, 962,
	1474, 1552, 966, 1566, 997, 1872, 992, 993, 1361, 1345,
	609, 1359, 770, 1729, 1134, 1802, 98, 1140, 994, 1575,
	159, 1448, 124, 1075, 1422, 766, 125, 768, 792, 1770,
	765, 76, 85, 97, 592, 2862, 1234, 2205, 89, 2976,
	2447, 1230, 1915, 1916, 1917, 1915, 2203, 188, 189, 190,
	2232, 2231, 119, 117, 118, 1956, 2657, 1537, 786, 574,
	791, 2261, 2621, 767, 77, 2262, 90, 2884, 120, 772,
	126, 542, 8, 7, 6, 1774, 1775, 1164, 188, 189,
	190, 1628, 2883, 1627, 1626, 1625, 1008, 1624, 959, 1033,
	574, 1623, 1606, 2702, 595, 1615, 596, 1164, 2940, 984,
	593, 2082, 2346, 2546, 970, 2992, 975, 2955, 2950, 759,
	757, 1892, 1042, 2113, 2966, 2226, 2702, 1633, 2802, 2468,
	799, 773, 1946, 2801, 806, 2667, 1030, 1032, 2668, 2991,
	780, 571, 2465, 1031, 2913, 1886, 983, 120, 102, 1045,
	1046, 1047, 78, 1050, 1051, 1052, 1053, 1007, 2979, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1034, 1036, 1037, 982,
	981, 980, 1325, 2884, 2879, 1048, 2466, 2701, 558, 104,
	105, 2964, 108, 1174, 78, 114, 182, 2675, 183, 78,
	556, 537, 2904, 1941, 2912, 1996, 2878, 2269, 2472, 2924,
	2701, 2528, 1437, 1174, 2083, 120, 2399, 2400, 2122, 2398,
	121, 752, 753, 754, 755, 1078, 2240, 763, 2159, 87,
	2239, 2158, 2260, 164, 2160, 1993, 2929, 1838, 1839, 1363,
	553, 1364, 1837, 2123, 1115, 1116, 1137, 1110, 2730, 566,
	2927, 750, 749, 1098, 1776, 794, 795, 2206, 1099, 2933,
	2934, 2854, 1111, 2171, 563, 2519, 575, 2419, 2420, 1994,
	979, 87, 1084, 1085, 2928, 2164, 87, 2956, 2569, 1104,
	78, 1098, 1127, 80, 1129, 1885, 1099, 2496, 1170, 574,
	161, 1162, 162, 2296, 1097, 2517, 1096, 575, 2957, 574,
	1074, 1856, 1855, 583, 1087, 581, 1302, 1614, 1170, 587,
	2213, 1923, 181, 1959, 2235, 1558, 2405, 2469, 1970, 1967,
	1969, 1968, 1126, 1128, 1616, 1617, 1618, 574, 977, 543,
	2489, 545, 559, 2978, 577, 1117, 576, 549, 2490, 547,
	551, 560, 552, 1112, 546, 1118, 557, 1527, 1136, 548,
	561, 562, 564, 567, 568, 569, 565, 87, 555, 578,
	1105, 2406, 974, 1553, 1119, 976, 1131, 1049, 2497, 1972,
	1964, 1973, 2418, 1974, 1080, 979, 1073, 2248, 1113, 1114,
	2659, 2658, 1196, 1975, 2421, 1055, 2408, 1054, 2941, 2498,
	1961, 1528, 2789, 1529, 1963, 1926, 1817, 186, 1017, 186,
	2403, 988, 186, 2811, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1205, 1204, 1206, 1207, 1124, 987, 2419, 2420, 1125,
	988, 165, 1006, 87, 2404, 1965, 2655, 1026, 1025, 1130,
	171, 585, 1144, 585, 585, 1441, 1962, 1024, 1023, 1305,
	1077, 978, 1015, 1022, 1021, 1020, 2297, 1019, 585, 585,
	1027, 1014, 1123, 1208, 1994, 1208, 2410, 2421, 963, 2993,
	979, 963, 971, 1000, 999, 961, 2962, 963, 1035, 973,
	972, 999, 1156, 2987, 2252, 1567, 1899, 793, 1715, 1169,
	1166, 1167, 1168, 1173, 1175, 1172, 575, 1171, 1094, 1462,
	1100, 1101, 1102, 1103, 1165, 1945, 575, 37, 1006, 1169,
	1166, 1167, 1168, 1173, 1175, 1172, 2440, 1171, 1889, 1803,
	1804, 1108, 1138, 1139, 1165, 2861, 985, 2204, 977, 1559,
	2249, 1005, 2418, 2234, 575, 1950, 1563, 999, 1002, 1003,
	579, 963, 1076, 2207, 2421, 996, 1000, 2265, 2654, 2008,
	1132, 1150, 1018, 156, 1038, 2237, 978, 1890, 572, 1044,
	1211, 1212, 1213, 1214, 2271, 1888, 995, 1435, 2570, 1434,
	1219, 1433, 1222, 573, 1145, 1707, 1696, 1697, 1698, 1699,
	1709, 1700, 1701, 1702, 1714, 1710, 1703, 1704, 1711, 1712,
	1713, 1705, 1706, 1708, 2087, 2089, 1016, 2223, 1006, 1891,
	1564, 1431, 541, 536, 1461, 2877, 2850, 1005, 116, 1887,
	1146, 1147, 1009, 999, 2867, 1943, 1293, 1011, 86, 2608,
	186, 1012, 1010, 2255, 585, 585, 2247, 2588, 2254, 2246,
	1215, 1539, 1538, 1540, 1541, 1542, 2619, 2620, 1209, 1210,
	186, 978, 1013, 2255, 2155, 2118, 2273, 2700, 2254, 2407,
	2074, 1006, 1557, 1769, 1349, 1274, 2932, 1995, 1089, 585,
	86, 1844, 1083, 186, 1086, 86, 1309, 1006, 585, 1294,
	2700, 758, 1311, 77, 585, 1308, 2470, 2471, 1095, 1312,
	1208, 1207, 1159, 1157, 1158, 760, 2397, 775, 802, 2473,
	1306, 1236, 1232, 1121, 1233, 157, 2985, 1005, 1576, 2986,
	2931, 2984, 169, 188, 189, 190, 1093, 1665, 2283, 2282,
	2281, 2275, 81, 2279, 1135, 2274, 2873, 2272, 1107, 1029,
	2812, 1006, 2277, 2289, 1310, 2650, 111, 1288, 95, 1109,
	1686, 2276, 1294, 1202, 1203, 1205, 1204, 1206, 1207, 1280,
	1281, 1282, 1283, 1284, 177, 2582, 86, 1960, 2278, 2280,
	1005, 1560, 1365, 1160, 1299, 2088, 999, 1002, 1003, 1686,
	963, 2022, 2196, 98, 996, 1000, 1005, 1940, 1043, 1179,
	1645, 1178, 1179, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1646, 1647, 1644, 1666, 2726, 176,
	178, 179, 180, 1079, 2411, 1554, 112, 1555, 2415, 2626,
	1556, 2625, 1930, 1296, 1942, 1471, 2414, 1470, 1460, 1938,
	1307, 1935, 1180, 757, 2958, 1327, 2609, 1330, 1017, 759,
	1005, 1015, 1350, 2994, 2889, 1009, 999, 1935, 186, 1196,
	1011, 2264, 1423, 806, 1012, 1010, 1122, 2989, 2843, 2797,
	2416, 1577, 1432, 1355, 1356, 2412, 1092, 1360, 1939, 87,
	2413, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1204,
	1206, 1207, 1547, 1643, 1937, 585, 2890, 1458, 2000, 2001,
	2002, 1180, 701, 702, 703, 1467, 1180, 2796, 2787, 1469,
	2844, 2690, 1472, 1473, 585, 585, 2039, 585, 1545, 585,
	585, 2689, 585, 585, 585, 585, 585, 585, 1200, 1201,
	1202, 1203, 1205, 1204, 1206, 1207, 1503, 2995, 585, 1196,
	2633, 2007, 186, 1508, 2632, 1534, 1325, 2622, 2448, 2436,
	2178, 1313, 1180, 1690, 2177, 1546, 182, 1691, 1895, 186,
	1180, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1204,
	1206, 1207, 585, 1177, 186, 1178, 1179, 1180, 1454, 1548,
	121, 1544, 2291, 2822, 1325, 1565, 797, 1522, 585, 1325,
	186, 2959, 1532, 164, 1184, 1185, 1186, 1187, 1188, 1189,
	1190, 1182, 1447, 188, 189, 190, 186, 2616, 1533, 1334,
	1464, 1464, 1531, 186, 1530, 1520, 1438, 1439, 1440, 1514,
	1511, 1505, 186, 186, 186, 186, 186, 186, 186, 186,
	186, 585, 1177, 2013, 1178, 1179, 1180, 1177, 1510, 1178,
	1179, 1466, 2012, 1430, 1509, 585, 585, 1483, 2493, 2870,
	161, 1465, 162, 2869, 2525, 1635, 1637, 1638, 1335, 2523,
	1325, 1444, 1445, 186, 2847, 1476, 1443, 1477, 1468, 1479,
	1481, 1457, 181, 1485, 1487, 1489, 1491, 1493, 2846, 1636,
	2845, 1512, 1513, 1177, 2792, 1178, 1179, 1518, 1519, 1580,
	2777, 1177, 1572, 1178, 1179, 1502, 1584, 1504, 1586, 1587,
	1588, 1589, 2776, 1180, 1506, 1593, 2725, 1180, 1177, 1664,
	1178, 1179, 2723, 2686, 1578, 1579, 2630, 1605, 2615, 1325,
	1670, 1670, 1676, 585, 2581, 1667, 1671, 2439, 1583, 2438,
	1809, 1810, 2187, 2175, 1641, 1590, 1591, 1592, 585, 585,
	1568, 188, 189, 190, 1668, 1668, 1290, 1954, 1953, 1648,
	120, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1436, 1800, 1639, 1177, 1782, 1178,
	1179, 188, 189, 190, 1649, 2162, 1582, 1607, 1180, 1573,
	1730, 165, 982, 981, 980, 2059, 1325, 1543, 2018, 1535,
	171, 1325, 1180, 1525, 1521, 1761, 1604, 1196, 1603, 1517,
	1192, 186, 1193, 188, 189, 190, 585, 1911, 1516, 1338,
	1515, 1336, 1611, 1612, 1133, 1149, 1194, 1195, 1191, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1205, 1204, 1206, 1207,
	186, 2819, 1730, 585, 1177, 1642, 1178, 1179, 1177, 2818,
	1178, 1179, 2781, 186, 188, 189, 190, 585, 1909, 188,
	189, 190, 186, 1907, 186, 2780, 186, 186, 585, 1672,
	2017, 585, 2109, 2977, 2946, 1325, 1678, 1679, 92, 1196,
	1761, 101, 585, 1787, 1337, 1788, 2673, 1763, 802, 93,
	2214, 802, 100, 1853, 99, 1765, 1766, 95, 2109, 2910,
	1687, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1205, 1204,
	1206, 1207, 1180, 156, 2109, 2897, 95, 2192, 1180, 1177,
	1852, 1178, 1179, 1793, 1762, 2120, 1180, 94, 1764, 2109,
	2893, 1767, 1768, 1177, 2583, 1178, 1179, 585, 1180, 1176,
	1819, 2885, 1325, 1325, 1902, 1903, 1904, 2109, 2863, 1906,
	1908, 1910, 2872, 1862, 1863, 1864, 1865, 1180, 2665, 2860,
	2120, 1325, 1763, 2109, 585, 1848, 772, 2128, 1792, 2359,
	585, 1467, 1180, 1847, 1467, 1781, 1467, 2542, 1325, 2581,
	1180, 2542, 1934, 2109, 2788, 1325, 1857, 2427, 1858, 1859,
	1860, 1861, 2665, 1325, 1180, 2960, 2128, 1830, 2334, 1814,
	2051, 1936, 1795, 2105, 1868, 1869, 1870, 1871, 1851, 2858,
	1878, 1836, 1924, 1180, 2009, 585, 1812, 1664, 94, 101,
	2603, 1884, 2044, 1664, 1664, 2109, 2663, 1835, 2028, 1834,
	100, 2581, 99, 806, 2027, 1180, 806, 92, 1850, 1849,
	1325, 94, 1935, 1177, 94, 1178, 1179, 1921, 93, 1177,
	1180, 1178, 1179, 1894, 2544, 157, 1918, 1177, 1935, 1178,
	1179, 186, 169, 2785, 1935, 1325, 2586, 1325, 186, 1177,
	1008, 1178, 1179, 186, 186, 2009, 2540, 186, 2392, 186,
	1464, 1180, 1879, 1807, 1874, 1875, 186, 1994, 1177, 1893,
	1178, 1179, 1897, 186, 1329, 1905, 2651, 1772, 1947, 1325,
	1180, 2937, 1325, 1177, 177, 1178, 1179, 1929, 688, 1619,
	1932, 1177, 1933, 1178, 1179, 1562, 1928, 1879, 2179, 186,
	1931, 1357, 1927, 1949, 585, 1177, 1948, 1178, 1179, 1951,
	1952, 1007, 2531, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 1177, 1180, 1178, 1179, 100, 176,
	178, 179, 180, 1180, 1176, 1325, 2044, 1325, 990, 187,
	2429, 2428, 187, 2530, 2900, 187, 1177, 989, 1178, 1179,
	586, 87, 187, 1985, 1986, 2425, 2426, 1180, 1988, 762,
	187, 1177, 2068, 1178, 1179, 2425, 2424, 1989, 2128, 1325,
	1180, 1957, 2009, 1325, 2808, 187, 1332, 1641, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1205, 1204, 1206, 1207, 2778,
	1180, 2004, 1177, 2006, 1178, 1179, 2009, 586, 2151, 1180,
	586, 187, 586, 1180, 1994, 2233, 2127, 2067, 1978, 2737,
	1180, 1177, 2649, 1178, 1179, 2066, 2005, 1198, 1199, 1200,
	1201, 1202, 1203, 1205, 1204, 1206, 1207, 1180, 1426, 2217,
	2210, 2211, 2646, 1180, 2628, 2151, 87, 1180, 2495, 2065,
	2109, 2108, 2534, 1180, 1426, 1425, 1371, 1370, 2533, 1428,
	1877, 2451, 2064, 2491, 1992, 2453, 1177, 2449, 1178, 1179,
	2128, 2152, 2218, 186, 1177, 1873, 1178, 1179, 1867, 1180,
	2154, 186, 2063, 1866, 1550, 2003, 585, 1459, 1642, 1455,
	2080, 2062, 585, 1424, 1670, 2061, 113, 2184, 1177, 2093,
	1178, 1179, 2060, 585, 1078, 2634, 2593, 2594, 2152, 2091,
	2097, 1177, 1180, 1178, 1179, 1498, 1180, 1994, 1668, 2054,
	2599, 2809, 1180, 2021, 2019, 2053, 186, 1892, 2183, 2052,
	186, 1177, 1785, 1178, 1179, 2049, 2972, 2970, 1609, 2124,
	1177, 2953, 1178, 1179, 1177, 2161, 1178, 1179, 2638, 2882,
	2943, 1177, 1180, 1178, 1179, 2635, 2636, 2637, 2827, 2110,
	2037, 2048, 2596, 2445, 37, 1499, 1500, 1501, 1177, 2444,
	1178, 1179, 1763, 2144, 1177, 2184, 1178, 1179, 1177, 2443,
	1178, 1179, 1180, 2359, 1177, 2197, 1178, 1179, 2106, 1979,
	1495, 2598, 2381, 585, 2047, 2639, 2640, 2382, 2045, 186,
	1610, 2071, 2072, 2031, 2041, 2378, 186, 1299, 2081, 1762,
	1177, 2379, 1178, 1179, 1180, 2377, 2380, 2172, 2173, 2911,
	585, 2102, 2383, 1799, 2137, 2138, 2143, 585, 2707, 1333,
	2706, 1467, 1467, 1791, 2040, 2011, 585, 1496, 1497, 2165,
	2107, 2117, 2587, 1177, 2209, 1178, 1179, 1177, 2339, 1178,
	1179, 2230, 2338, 1177, 2153, 1178, 1179, 2842, 2716, 2229,
	2149, 2156, 186, 186, 186, 186, 186, 2718, 1884, 2163,
	2133, 2136, 2137, 2138, 2134, 2166, 2135, 2139, 2705, 186,
	186, 2577, 2348, 1177, 1561, 1178, 1179, 1323, 1319, 2176,
	2133, 2136, 2137, 2138, 2134, 186, 2135, 2139, 2351, 2353,
	2593, 2594, 1320, 2185, 748, 2188, 2423, 2354, 2169, 671,
	1323, 1319, 2193, 1177, 1664, 1178, 1179, 2194, 2186, 2198,
	2199, 2200, 1682, 2189, 2190, 1320, 2228, 1789, 1790, 1322,
	1447, 1321, 2574, 776, 1040, 1039, 1683, 2505, 2183, 2258,
	2573, 777, 92, 1148, 92, 1177, 2225, 1178, 1179, 94,
	1316, 1317, 1322, 93, 1321, 93, 2288, 2224, 2227, 121,
	1670, 758, 1670, 101, 2579, 1670, 2284, 2219, 2220, 94,
	1670, 584, 1809, 1810, 100, 585, 99, 2981, 2441, 1982,
	2859, 2559, 2804, 2422, 1668, 94, 1668, 2141, 2267, 1668,
	2266, 585, 1796, 1971, 1668, 2328, 2321, 2322, 2323, 2324,
	784, 785, 2256, 2337, 1998, 2257, 186, 2314, 99, 2250,
	585, 2336, 2315, 2311, 2834, 2268, 2833, 2724, 804, 585,
	2285, 960, 2722, 967, 2721, 101, 585, 585, 2714, 186,
	186, 186, 186, 186, 2647, 187, 100, 187, 99, 2328,
	187, 186, 2578, 2576, 2341, 2454, 186, 1919, 2302, 186,
	1442, 186, 101, 783, 186, 186, 186, 2371, 100, 2713,
	2567, 2120, 2105, 100, 2974, 2973, 2365, 2298, 2029, 586,
	2391, 586, 586, 764, 1783, 1351, 1342, 106, 107, 2973,
	2342, 2974, 2327, 2356, 2848, 2329, 586, 586, 2614, 2437,
	774, 103, 88, 1312, 2144, 2330, 2331, 2332, 186, 2340,
	1, 2343, 2316, 2317, 2318, 2319, 2320, 2618, 2926, 554,
	2309, 585, 2309, 1773, 1297, 2309, 2954, 2922, 2923, 585,
	2309, 766, 1536, 1526, 186, 2393, 765, 2676, 2394, 1731,
	2384, 2373, 2374, 2372, 2376, 186, 2375, 2805, 95, 2459,
	2457, 2333, 1925, 2475, 2395, 2645, 2388, 2389, 1882, 998,
	186, 146, 1845, 186, 1846, 2906, 110, 2401, 1572, 956,
	109, 2464, 1001, 2506, 1106, 1920, 2666, 2170, 1854, 2433,
	2432, 2431, 2461, 2460, 2458, 1377, 1375, 2370, 1376, 1374,
	1379, 1378, 2030, 2362, 2545, 2483, 2482, 1613, 2362, 582,
	2140, 184, 1366, 1343, 2455, 1041, 544, 2430, 1955, 2474,
	550, 1220, 1608, 1884, 2335, 2486, 2157, 803, 796, 1784,
	2095, 2367, 2571, 2347, 2349, 2112, 2434, 2435, 2352, 2345,
	2841, 2715, 2898, 2167, 2539, 1339, 2020, 1684, 2501, 1824,
	1634, 2500, 607, 606, 604, 585, 186, 2098, 2121, 1183,
	691, 2503, 2504, 2085, 1352, 2509, 2132, 2508, 187, 2130,
	2129, 1980, 586, 586, 2515, 1831, 2595, 2591, 2918, 1826,
	1822, 2104, 615, 608, 600, 2611, 2481, 2236, 187, 2512,
	2513, 2492, 2514, 2238, 2456, 2516, 2168, 2518, 2488, 2520,
	1161, 2565, 1315, 594, 969, 1681, 2810, 586, 2865, 1997,
	2527, 187, 1314, 186, 1694, 1695, 586, 2446, 2215, 1912,
	63, 41, 586, 1722, 589, 2939, 1152, 2560, 2561, 790,
	32, 2617, 2590, 31, 30, 29, 28, 23, 22, 2568,
	2575, 21, 186, 20, 19, 2600, 25, 18, 17, 16,
	2580, 2467, 2949, 2980, 2606, 2607, 115, 50, 47, 45,
	123, 186, 122, 48, 186, 186, 186, 2597, 44, 1081,
	42, 27, 26, 15, 585, 585, 14, 13, 12, 11,
	2604, 10, 9, 5, 4, 2483, 2482, 2605, 35, 34,
	33, 1155, 2612, 2613, 24, 2, 2463, 2462, 2652, 2653,
	2202, 1914, 0, 2629, 0, 2631, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 585, 585, 585, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2672, 0, 0,
	0, 0, 0, 0, 0, 2670, 2671, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2623, 2624,
	0, 1670, 0, 1670, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 2681, 0, 0, 0,
	0, 0, 2682, 0, 0, 1668, 0, 1668, 0, 0,
	804, 0, 804, 804, 2710, 0, 0, 585, 0, 585,
	0, 2685, 0, 586, 0, 2694, 0, 1151, 1153, 2656,
	2703, 0, 2693, 2660, 2661, 2662, 0, 0, 2731, 2711,
	0, 2733, 586, 586, 1670, 586, 2719, 586, 586, 2739,
	586, 586, 586, 586, 586, 586, 2365, 2735, 2729, 0,
	2365, 2727, 758, 37, 0, 0, 586, 2720, 1668, 0,
	187, 0, 0, 0, 0, 2740, 2741, 0, 0, 0,
	585, 0, 0, 2743, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	586, 0, 187, 0, 2786, 0, 585, 0, 0, 0,
	2784, 2782, 0, 0, 2783, 0, 586, 0, 187, 0,
	0, 2798, 0, 0, 0, 0, 2807, 2799, 2790, 2824,
	2825, 2309, 0, 2309, 187, 585, 1291, 0, 0, 585,
	585, 187, 2800, 1670, 0, 0, 0, 0, 2828, 0,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 586,
	0, 0, 0, 0, 0, 0, 0, 1668, 585, 2838,
	2835, 2836, 2362, 586, 586, 2840, 2837, 0, 0, 0,
	0, 0, 0, 0, 2849, 0, 0, 0, 0, 0,
	0, 187, 2852, 1303, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 2365, 0, 0, 0, 2855, 0, 585,
	0, 0, 758, 0, 0, 0, 0, 0, 0, 0,
	2793, 2794, 2795, 0, 186, 0, 0, 0, 1347, 2851,
	0, 0, 0, 2857, 0, 0, 0, 804, 0, 585,
	186, 0, 0, 1367, 0, 0, 0, 0, 0, 0,
	0, 586, 2868, 0, 0, 0, 0, 2871, 0, 0,
	0, 0, 2864, 2874, 0, 0, 586, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 585, 37, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 585, 585, 0, 0, 0, 2891, 0,
	0, 0, 2899, 0, 0, 0, 585, 0, 0, 2901,
	0, 0, 0, 2807, 2907, 186, 585, 0, 2905, 187,
	2914, 0, 0, 0, 586, 0, 0, 37, 0, 0,
	0, 0, 0, 2935, 0, 2925, 2917, 2930, 2942, 2896,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 586, 0, 2948, 0, 0, 0, 0, 585, 0,
	0, 187, 0, 0, 0, 586, 0, 585, 0, 0,
	187, 0, 187, 0, 187, 187, 586, 2963, 2967, 586,
	1670, 2971, 2961, 2969, 2965, 2968, 0, 0, 0, 0,
	586, 0, 0, 0, 0, 2982, 0, 0, 0, 0,
	2988, 2990, 0, 0, 1668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2998, 2999,
	2825, 2997, 0, 1670, 960, 0, 0, 0, 2996, 2362,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 0, 0, 1475, 1475, 586, 1475, 1668, 1475, 1475,
	0, 1484, 1475, 1475, 1475, 1475, 1475, 0, 0, 0,
	0, 0, 0, 0, 1291, 0, 1291, 960, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2208, 0, 0, 0, 0, 0,
	0, 1549, 0, 0, 0, 0, 0, 121, 0, 143,
	0, 0, 0, 0, 0, 0, 0, 1569, 0, 0,
	164, 0, 0, 586, 0, 0, 0, 2745, 2747, 2746,
	2756, 2757, 2758, 2759, 2760, 2761, 2762, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 142, 0, 0, 0,
	804, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 804, 804, 187, 161, 0, 162,
	0, 187, 187, 0, 0, 187, 0, 187, 0, 0,
	0, 0, 0, 0, 187, 1450, 1451, 152, 151, 181,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 672,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1324, 0, 1677, 0, 0, 0, 0, 0, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 1692, 1693, 0,
	185, 0, 0, 540, 0, 0, 580, 0, 0, 0,
	0, 0, 0, 540, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 147, 1452, 154, 0,
	1449, 0, 148, 149, 804, 0, 771, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 789, 0, 789, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1798, 2751, 2752, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1347, 0, 0, 804,
	0, 0, 0, 0, 0, 0, 0, 804, 0, 0,
	804, 187, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 960, 0, 0, 586, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 0, 682, 0, 632, 686, 634, 683, 684,
	156, 630, 633, 685, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 967, 0, 0, 0,
	635, 636, 2744, 2748, 2749, 2750, 2753, 2754, 2755, 2763,
	2765, 660, 2764, 2766, 2767, 2768, 2771, 2772, 2773, 2774,
	2769, 2770, 2775, 960, 0, 0, 0, 0, 0, 967,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 960, 0, 0, 0, 586, 0,
	144, 0, 0, 145, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 169,
	187, 187, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1991, 0, 0, 0, 0, 0, 0,
	158, 163, 160, 166, 167, 168, 170, 172, 173, 174,
	175, 0, 0, 0, 0, 0, 176, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 586, 586, 0, 187, 187, 187,
	187, 187, 0, 0, 0, 0, 540, 0, 540, 187,
	0, 540, 0, 0, 187, 0, 0, 187, 0, 187,
	0, 0, 187, 187, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1798, 187, 182, 0, 0,
	0, 2099, 0, 0, 788, 0, 0, 0, 0, 586,
	0, 0, 2114, 0, 0, 0, 0, 586, 0, 0,
	0, 121, 187, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	142, 0, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 161, 0, 162, 0, 0, 1292, 0, 0, 0,
	0, 0, 2191, 0, 782, 0, 0, 0, 0, 130,
	131, 152, 151, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1798,
	0, 0, 0, 586, 187, 0, 2216, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 540, 0, 0, 0, 1326, 1328, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	147, 128, 154, 135, 127, 0, 148, 149, 0, 0,
	187, 0, 165, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 136, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 187, 187, 187, 0, 139, 137, 132, 133,
	134, 138, 586, 586, 0, 0, 0, 0, 129, 1291,
	0, 1291, 0, 0, 1291, 0, 0, 140, 0, 1291,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 586, 586, 586, 586, 0, 0,
	1475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2344,
	0, 0, 0, 0, 0, 0, 0, 0, 804, 0,
	0, 0, 1291, 0, 0, 2369, 1475, 1291, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1292, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	960, 150, 0, 1291, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 0, 1292, 0, 1292, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 144, 0, 0, 145, 1523, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 540, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 157, 0, 0, 1571,
	0, 0, 0, 169, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 540, 0, 586, 586, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 1594, 1595, 540, 540, 540, 540, 540, 540, 540,
	2947, 0, 0, 0, 0, 177, 586, 0, 0, 0,
	1394, 0, 0, 0, 2344, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 158, 163, 160, 166, 167, 168,
	170, 172, 173, 174, 175, 0, 0, 586, 0, 0,
	176, 178, 179, 180, 0, 0, 0, 1394, 0, 0,
	0, 0, 187, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1181, 0, 0, 586, 187, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	0, 0, 0, 789, 789, 0, 0, 0, 0, 1292,
	0, 0, 1228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1688, 1798, 1798, 0, 1689, 0, 0, 0,
	0, 586, 586, 789, 1571, 789, 789, 789, 789, 789,
	1382, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 586, 0, 0, 0, 0, 0,
	1523, 0, 0, 598, 0, 2677, 2678, 2679, 2680, 0,
	0, 0, 0, 0, 0, 789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1326, 1771, 1382, 0, 771,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 0,
	0, 0, 540, 0, 0, 586, 0, 0, 0, 1571,
	1291, 540, 1291, 540, 0, 540, 1833, 0, 1794, 0,
	0, 0, 1395, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1341, 0,
	0, 1291, 0, 0, 0, 0, 2732, 0, 2734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1395,
	0, 0, 0, 0, 0, 0, 1408, 1411, 1412, 1413,
	1414, 1415, 1416, 0, 1417, 1418, 1419, 1420, 1421, 1396,
	1397, 1398, 1399, 1380, 1381, 1409, 0, 1383, 0, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 0, 0,
	1393, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1798,
	1896, 0, 0, 1408, 1411, 1412, 1413, 1414, 1415, 1416,
	0, 1417, 1418, 1419, 1420, 1421, 1396, 1397, 1398, 1399,
	1380, 1381, 1409, 0, 1383, 804, 1384, 1385, 1386, 1387,
	1388, 1389, 1390, 1391, 1392, 0, 0, 1393, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 0, 0, 0, 0,
	0, 0, 0, 0, 2831, 0, 0, 0, 2831, 2831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 540, 540, 0, 0, 540, 0, 1983, 0,
	1410, 0, 0, 1429, 0, 540, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 1798, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 1798, 0,
	0, 1300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1291, 0,
	2892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 0, 0, 0, 0,
	0, 789, 804, 804, 0, 588, 0, 0, 0, 0,
	0, 0, 0, 751, 0, 2915, 0, 0, 1574, 0,
	0, 0, 0, 2010, 0, 2920, 0, 2014, 0, 2015,
	2016, 0, 0, 0, 0, 0, 0, 0, 2024, 0,
	0, 2025, 2026, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 964, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1798, 2032, 2033,
	2034, 2035, 2036, 0, 2038, 0, 2920, 0, 789, 789,
	2042, 0, 2043, 0, 0, 0, 2046, 0, 0, 1571,
	0, 0, 540, 0, 2055, 2056, 2057, 2058, 0, 0,
	1523, 1629, 1630, 1631, 1632, 0, 0, 2069, 2070, 0,
	0, 0, 0, 0, 0, 2075, 2076, 2077, 2078, 2079,
	0, 1794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 1675, 0, 540, 0, 0, 0, 540,
	1680, 0, 0, 0, 698, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1716, 1717, 1718, 1719, 1720,
	1721, 1723, 1727, 1728, 598, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 540, 0,
	0, 0, 0, 0, 0, 2201, 598, 0, 0, 0,
	0, 0, 761, 0, 79, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 1806, 0, 0, 0, 0, 968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 540, 540, 540, 540, 0, 0, 0, 0,
	1842, 78, 39, 40, 80, 0, 0, 0, 540, 540,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 540, 43, 69, 70, 0, 67,
	71, 0, 0, 0, 0, 0, 0, 0, 68, 789,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 0, 0, 56, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 1292,
	0, 1292, 0, 0, 1292, 0, 0, 0, 0, 1292,
	0, 2295, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 0, 0, 0, 0, 0,
	0, 2310, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2325, 2326, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 0, 0, 0, 0, 1292, 540, 540,
	540, 540, 540, 0, 0, 0, 0, 0, 0, 0,
	2385, 0, 0, 0, 0, 540, 0, 0, 1523, 0,
	540, 0, 0, 540, 2396, 1571, 2368, 0, 1082, 0,
	1088, 0, 0, 1090, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2386, 2387, 0, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 0,
	0, 75, 72, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1292, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 540, 0, 0, 0, 73, 74, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 57, 58, 0, 59, 60, 61, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2023, 0, 0, 2507, 0, 0, 0, 0, 0,
	0, 2511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2521, 2522, 2524, 2526, 0,
	0, 0, 0, 0, 0, 2532, 0, 1228, 0, 0,
	2536, 2537, 2538, 0, 0, 540, 0, 2541, 0, 0,
	0, 0, 0, 2543, 0, 0, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 0, 0, 2557, 0,
	0, 0, 0, 0, 2562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 81, 0, 0, 0, 2584, 2585, 0,
	0, 2589, 0, 0, 0, 1141, 0, 1141, 1141, 0,
	0, 0, 1341, 0, 1354, 0, 0, 0, 0, 2601,
	2602, 540, 0, 0, 79, 0, 0, 86, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 540, 540, 540, 0, 0, 0, 0,
	0, 761, 1216, 1217, 1218, 0, 1221, 0, 1223, 1224,
	1225, 1226, 0, 1229, 1231, 1231, 0, 1231, 1235, 1235,
	1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246,
	1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 1271, 1272, 1273, 2664, 1275, 1276,
	1277, 1278, 1279, 0, 0, 0, 0, 1235, 1235, 1235,
	1235, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1292, 0, 1292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1523, 0, 0, 0, 2691, 0, 0, 0,
	2692, 0, 0, 0, 0, 0, 2696, 0, 0, 1372,
	0, 1292, 0, 0, 0, 0, 1301, 0, 0, 0,
	0, 0, 761, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 761, 0, 2263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2286, 2287, 0, 0, 0, 2290, 0, 0,
	0, 0, 2292, 2293, 2294, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2299, 2300, 2301, 0, 0, 1734,
	2303, 0, 2304, 2305, 0, 0, 0, 2312, 2313, 0,
	0, 0, 1523, 1507, 0, 1734, 1734, 1734, 1734, 1734,
	598, 598, 598, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1551, 0, 0, 0, 0,
	2803, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2813, 2814, 2815, 0, 2816, 2817,
	0, 0, 0, 0, 2820, 2357, 2821, 1581, 2823, 2826,
	0, 0, 0, 0, 1585, 2830, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 2390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2856, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1622, 0, 182, 0, 0, 0,
	0, 0, 0, 1523, 0, 0, 0, 1446, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	121, 2452, 143, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2876, 0, 0, 0, 0, 0, 0, 1292, 0,
	0, 0, 0, 0, 153, 2881, 0, 0, 0, 142,
	2886, 0, 0, 0, 0, 0, 2887, 2888, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 162, 0, 2894, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 2529, 0, 1450, 1451,
	152, 151, 181, 2535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2944, 0, 0, 0, 2945,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1811, 1141, 0, 0, 0, 0,
	0, 598, 0, 1815, 0, 1818, 0, 0, 1622, 1141,
	1141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 147,
	1452, 154, 0, 1449, 0, 148, 149, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2648, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2683, 0,
	2684, 0, 0, 156, 0, 2687, 2688, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1622, 0, 0, 0, 0, 0, 0, 1966,
	0, 0, 0, 0, 1976, 1977, 0, 2728, 1981, 0,
	1825, 0, 0, 0, 0, 0, 0, 1984, 2736, 0,
	0, 2738, 0, 0, 1987, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 2742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1990, 0, 0, 2779, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 0, 0, 145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 968, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 157, 0, 0, 0, 0,
	0, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2839, 598,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2880, 0, 0,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 692,
	699, 700, 701, 702, 703, 693, 695, 0, 0, 0,
	694, 2148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 697, 704, 705, 0, 0, 1999, 0,
	0, 598, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2936, 0, 0, 0, 2484,
	2485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2195, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2241, 2242, 2243, 2244, 2245, 0, 0,
	0, 0, 0, 0, 0, 0, 2073, 87, 0, 0,
	1622, 2251, 0, 692, 699, 700, 701, 702, 703, 693,
	695, 0, 0, 2090, 694, 0, 2259, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 704, 705,
	0, 761, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2125, 2126, 0, 0, 0, 0, 0, 0, 0,
	2145, 0, 2146, 2147, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2484, 2485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 682, 0,
	0, 686, 0, 683, 684, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2094, 0, 0, 699, 700, 0, 0, 0, 0,
	1669, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2487, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2499, 0, 0, 2502, 706, 707, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 727, 728, 729, 730,
	731, 732, 733, 734, 735, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 746, 747, 699, 700, 0,
	0, 0, 0, 1669, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2564, 2366, 0,
	79, 0, 0, 1825, 1825, 1825, 1825, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2145, 761, 0, 0, 0, 1825, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 706, 707,
	708, 709, 710, 711, 712, 713, 714, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 727,
	728, 729, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 740, 741, 742, 743, 744, 745, 746, 747,
	0, 0, 0, 2627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2480, 0, 2641, 0, 0, 2642, 2643, 2644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2704, 0, 2708, 2709, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2366, 0,
	79, 0, 2366, 0, 0, 0, 0, 0, 0, 0,
	0, 2875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2866, 0, 0, 0, 0, 0,
	0, 0, 0, 359, 0, 0, 938, 923, 460, 79,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 2895,
	444, 362, 0, 0, 79, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 2908, 0, 2909, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	214, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 0, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1143, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	214, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 2397, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1143, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	214, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 2355, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1143, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	214, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 1813, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1143, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	214, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 0, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1143, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	214, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 0, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 1143, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	955, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 0, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 821, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 807, 801, 800,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	955, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 0, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 1358, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 821, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 807, 801, 800,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 938, 923, 460, 0,
	869, 941, 838, 857, 951, 860, 863, 905, 817, 883,
	377, 854, 809, 842, 812, 849, 813, 840, 871, 250,
	837, 925, 887, 940, 332, 247, 819, 843, 391, 859,
	197, 907, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 947, 336, 893, 0,
	444, 362, 0, 0, 0, 873, 929, 881, 919, 868,
	906, 827, 892, 942, 855, 902, 943, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 851, 899, 937, 852, 901, 245, 292,
	252, 244, 464, 948, 928, 816, 880, 936, 0, 0,
	955, 939, 875, 0, 904, 0, 954, 811, 895, 0,
	814, 818, 950, 932, 846, 255, 0, 0, 0, 0,
	0, 0, 0, 872, 882, 916, 866, 0, 0, 0,
	0, 0, 0, 0, 844, 0, 891, 0, 0, 0,
	823, 815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 826, 0,
	845, 917, 0, 808, 275, 820, 363, 237, 0, 921,
	931, 867, 498, 935, 865, 864, 911, 824, 927, 858,
	331, 822, 300, 192, 210, 0, 856, 373, 415, 421,
	926, 841, 850, 235, 848, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 890, 909, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 798, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 821, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 836, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 922, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 807, 801, 800,
	301, 338, 914, 953, 386, 420, 225, 484, 443, 831,
	835, 829, 896, 830, 885, 886, 832, 944, 945, 946,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 918,
	825, 0, 833, 834, 0, 924, 933, 934, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 889,
	191, 207, 334, 949, 409, 268, 513, 492, 488, 810,
	828, 242, 839, 847, 0, 853, 861, 862, 874, 876,
	877, 878, 879, 897, 898, 900, 908, 910, 913, 915,
	920, 930, 952, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 888, 894, 345, 261, 280, 291, 903, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 884, 912, 341,
	461, 462, 287, 359, 0, 0, 0, 0, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 1758, 0, 616, 0, 0, 0, 250,
	621, 0, 0, 0, 332, 247, 0, 1759, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 628, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	223, 694, 230, 639, 641, 640, 650, 651, 652, 653,
	654, 655, 656, 637, 697, 704, 705, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 599, 613,
	0, 627, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 787, 0, 0, 0, 676, 0, 612, 0,
	0, 620, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 675,
	0, 0, 498, 0, 0, 673, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 645,
	646, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 682,
	674, 632, 686, 634, 683, 684, 629, 630, 633, 685,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 677,
	619, 618, 0, 625, 626, 0, 635, 636, 638, 642,
	643, 644, 647, 648, 649, 657, 659, 660, 658, 661,
	662, 663, 666, 667, 668, 669, 664, 665, 670, 617,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	616, 0, 0, 0, 250, 621, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 628, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 623, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 639, 641,
	640, 650, 651, 652, 653, 654, 655, 656, 637, 697,
	704, 705, 0, 245, 292, 252, 244, 464, 0, 0,
	1724, 1725, 1726, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 599, 613, 0, 627, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 0, 0, 0,
	0, 676, 0, 612, 0, 0, 620, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 675, 0, 0, 498, 0, 0,
	673, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 645, 646, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 682, 674, 632, 686, 634, 683,
	684, 629, 630, 633, 685, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 677, 619, 618, 0, 625, 626,
	0, 635, 636, 638, 642, 643, 644, 647, 648, 649,
	657, 659, 660, 658, 661, 662, 663, 666, 667, 668,
	669, 664, 665, 670, 617, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 616, 0, 0, 0, 250,
	621, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 628, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 1840, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	223, 694, 230, 639, 641, 640, 650, 651, 652, 653,
	654, 655, 656, 637, 697, 704, 705, 1841, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 599, 613,
	0, 627, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 0, 0, 0, 0, 676, 0, 612, 0,
	0, 620, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 675,
	0, 0, 498, 0, 0, 673, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 645,
	646, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 682,
	674, 632, 686, 634, 683, 684, 629, 630, 633, 685,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 677,
	619, 618, 0, 625, 626, 0, 635, 636, 638, 642,
	643, 644, 647, 648, 649, 657, 659, 660, 658, 661,
	662, 663, 666, 667, 668, 669, 664, 665, 670, 617,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 0, 341,
	461, 462, 287, 359, 0, 0, 0, 78, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 616, 0, 0, 0, 250,
	621, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 628, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	223, 694, 230, 639, 641, 640, 650, 651, 652, 653,
	654, 655, 656, 637, 697, 704, 705, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 599, 613,
	0, 627, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 0, 0, 0, 0, 676, 0, 612, 0,
	0, 620, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 675,
	0, 0, 498, 0, 0, 673, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 645,
	646, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 682,
	674, 632, 686, 634, 683, 684, 629, 630, 633, 685,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 677,
	619, 618, 0, 625, 626, 0, 635, 636, 638, 642,
	643, 644, 647, 648, 649, 657, 659, 660, 658, 661,
	662, 663, 666, 667, 668, 669, 664, 665, 670, 617,
	191, 207, 334, 86, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	616, 0, 0, 0, 250, 621, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 628, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 623, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 639, 641,
	640, 650, 651, 652, 653, 654, 655, 656, 637, 697,
	704, 705, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 599, 613, 0, 627, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 0, 0, 0,
	0, 676, 0, 612, 0, 0, 620, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 675, 0, 0, 498, 0, 0,
	673, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	2902, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 645, 646, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 682, 674, 632, 686, 634, 683,
	684, 629, 630, 633, 685, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 677, 619, 618, 0, 625, 626,
	0, 635, 636, 638, 642, 643, 644, 647, 648, 649,
	657, 659, 660, 658, 661, 662, 663, 666, 667, 668,
	669, 664, 665, 670, 617, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 616, 0, 0, 0, 250,
	621, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 628, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 1325, 188, 189, 190,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	223, 694, 230, 639, 641, 640, 650, 651, 652, 653,
	654, 655, 656, 637, 697, 704, 705, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 599, 613,
	0, 627, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 0, 0, 0, 0, 676, 0, 612, 0,
	0, 620, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 675,
	0, 0, 498, 0, 0, 673, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 645,
	646, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 682,
	674, 632, 686, 634, 683, 684, 629, 630, 633, 685,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 677,
	619, 618, 0, 625, 626, 0, 635, 636, 638, 642,
	643, 644, 647, 648, 649, 657, 659, 660, 658, 661,
	662, 663, 666, 667, 668, 669, 664, 665, 670, 617,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	616, 0, 0, 0, 250, 621, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 628, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 623, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 639, 641,
	640, 650, 651, 652, 653, 654, 655, 656, 637, 697,
	704, 705, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 599, 613, 0, 627, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 787, 0, 0,
	0, 676, 0, 612, 0, 0, 620, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 675, 0, 0, 498, 0, 0,
	673, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 645, 646, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 682, 674, 632, 686, 634, 683,
	684, 629, 630, 633, 685, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 677, 619, 618, 0, 625, 626,
	0, 635, 636, 638, 642, 643, 644, 647, 648, 649,
	657, 659, 660, 658, 661, 662, 663, 666, 667, 668,
	669, 664, 665, 670, 617, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 616, 0, 0, 0, 250,
	621, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 628, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 623, 624, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	692, 699, 700, 701, 702, 703, 693, 695, 0, 0,
	223, 694, 230, 639, 641, 640, 650, 651, 652, 653,
	654, 655, 656, 637, 697, 704, 705, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 599, 613,
	0, 627, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	610, 611, 0, 0, 0, 0, 676, 0, 612, 0,
	0, 620, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 622, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 675,
	0, 0, 498, 0, 0, 673, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 645,
	646, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 682,
	674, 632, 686, 634, 683, 684, 629, 630, 633, 685,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 677,
	619, 618, 0, 625, 626, 0, 635, 636, 638, 642,
	643, 644, 647, 648, 649, 657, 659, 660, 658, 661,
	662, 663, 666, 667, 668, 669, 664, 665, 670, 617,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	616, 0, 0, 0, 250, 621, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 628, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 623, 624, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 692, 699, 700, 701, 702,
	703, 693, 695, 0, 0, 223, 694, 230, 639, 641,
	640, 650, 651, 652, 653, 654, 655, 656, 637, 697,
	704, 705, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 613, 0, 627, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 610, 611, 0, 0, 0,
	0, 676, 0, 612, 0, 0, 620, 706, 707, 708,
	709, 710, 711, 712, 713, 714, 715, 716, 717, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 727, 728,
	729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
	739, 740, 741, 742, 743, 744, 745, 746, 747, 622,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 675, 0, 0, 498, 0, 0,
	673, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 645, 646, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 682, 674, 632, 686, 634, 683,
	684, 629, 630, 633, 685, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 677, 619, 618, 0, 625, 626,
	0, 635, 636, 638, 642, 643, 644, 647, 648, 649,
	657, 659, 660, 658, 661, 662, 663, 666, 667, 668,
	669, 664, 665, 670, 617, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 699, 700, 0, 0, 0, 0, 1669, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 1006, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 1005, 498, 0, 0,
	0, 0, 0, 1002, 1003, 331, 963, 300, 192, 210,
	996, 1000, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 0, 341, 461, 462, 287, 359, 0,
	0, 0, 78, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 86, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 1827, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 1344, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 1346, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 1348, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 1177, 0, 1178, 1179, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 1287, 1290, 0, 0, 0,
	0, 1286, 1289, 0, 0, 223, 1285, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 0, 341, 461, 462, 287, 359, 0,
	0, 0, 78, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 1325, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 86, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 87, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 1780,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 1778, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 957, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 963, 300, 192, 210, 961, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 1780,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 1325, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 2832, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 2115, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 2100, 0, 0, 0, 2101, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 1369, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1368, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 2916, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1524, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 2832, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 1348, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1208, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 1620, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 1494, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 1492, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 1490, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 1488, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 1486, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 1482, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 1480, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 1478, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 1453, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 1353, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 1154, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 769, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 591, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 590, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 538, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 2921, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 359, 341, 461, 462, 287, 460, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 250,
	0, 0, 0, 0, 332, 247, 0, 0, 391, 0,
	197, 0, 434, 234, 342, 339, 467, 262, 253, 249,
	233, 288, 349, 389, 454, 383, 0, 336, 0, 0,
	444, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 294, 232, 196,
	374, 445, 266, 0, 0, 0, 0, 188, 2563, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	223, 0, 230, 317, 326, 325, 306, 307, 309, 311,
	316, 323, 329, 0, 0, 0, 0, 0, 245, 292,
	252, 244, 464, 0, 0, 0, 0, 0, 0, 0,
	214, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 0, 363, 237, 0, 0,
	0, 0, 498, 0, 0, 0, 0, 0, 0, 0,
	331, 0, 300, 192, 210, 0, 0, 373, 415, 421,
	0, 0, 0, 235, 0, 419, 387, 482, 218, 264,
	412, 393, 417, 400, 267, 0, 0, 418, 337, 469,
	407, 479, 499, 500, 243, 367, 489, 458, 495, 512,
	211, 240, 381, 451, 485, 441, 360, 465, 466, 299,
	440, 273, 195, 335, 505, 209, 427, 227, 216, 202,
	453, 477, 224, 431, 0, 0, 514, 204, 475, 450,
	356, 296, 297, 203, 0, 411, 248, 271, 238, 376,
	472, 473, 236, 515, 213, 494, 206, 0, 493, 369,
	468, 476, 357, 347, 205, 474, 355, 346, 302, 321,
	322, 260, 282, 405, 340, 406, 283, 365, 364, 366,
	198, 486, 0, 199, 0, 446, 487, 516, 219, 220,
	222, 0, 259, 263, 270, 272, 278, 279, 286, 333,
	380, 404, 402, 408, 0, 463, 480, 490, 497, 503,
	504, 506, 507, 508, 509, 510, 511, 368, 285, 442,
	301, 338, 0, 0, 386, 420, 225, 484, 443, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	517, 518, 519, 520, 521, 522, 523, 524, 525, 526,
	527, 528, 529, 530, 531, 532, 533, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 535, 348,
	433, 481, 303, 315, 318, 308, 327, 0, 328, 304,
	305, 310, 312, 313, 314, 319, 320, 324, 330, 0,
	191, 207, 334, 0, 409, 268, 513, 492, 488, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 200, 208, 217, 221, 228,
	241, 256, 258, 265, 276, 281, 284, 289, 290, 293,
	298, 344, 350, 351, 352, 353, 370, 371, 372, 375,
	378, 379, 382, 384, 385, 388, 392, 396, 397, 398,
	399, 401, 403, 410, 414, 422, 423, 424, 425, 426,
	429, 430, 435, 436, 437, 438, 439, 447, 448, 452,
	470, 471, 483, 496, 501, 428, 277, 478, 502, 0,
	343, 0, 0, 345, 261, 280, 291, 0, 491, 449,
	212, 416, 269, 201, 231, 215, 239, 254, 257, 295,
	354, 361, 390, 395, 274, 251, 229, 413, 226, 432,
	455, 456, 457, 459, 358, 246, 394, 0, 359, 341,
	461, 462, 287, 460, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 250, 0, 0, 0, 0, 332,
	247, 0, 0, 391, 0, 197, 0, 434, 234, 342,
	339, 467, 262, 253, 249, 233, 288, 349, 389, 454,
	383, 0, 336, 0, 0, 444, 362, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 294, 232, 196, 374, 445, 266, 0, 0,
	0, 0, 188, 2096, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 230, 317, 326,
	325, 306, 307, 309, 311, 316, 323, 329, 0, 0,
	0, 0, 0, 245, 292, 252, 244, 464, 0, 0,
	0, 0, 0, 0, 0, 214, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 363, 237, 0, 0, 0, 0, 498, 0, 0,
	0, 0, 0, 0, 0, 331, 0, 300, 192, 210,
	0, 0, 373, 415, 421, 0, 0, 0, 235, 0,
	419, 387, 482, 218, 264, 412, 393, 417, 400, 267,
	0, 0, 418, 337, 469, 407, 479, 499, 500, 243,
	367, 489, 458, 495, 512, 211, 240, 381, 451, 485,
	441, 360, 465, 466, 299, 440, 273, 195, 335, 505,
	209, 427, 227, 216, 202, 453, 477, 224, 431, 0,
	0, 514, 204, 475, 450, 356, 296, 297, 203, 0,
	411, 248, 271, 238, 376, 472, 473, 236, 515, 213,
	494, 206, 0, 493, 369, 468, 476, 357, 347, 205,
	474, 355, 346, 302, 321, 322, 260, 282, 405, 340,
	406, 283, 365, 364, 366, 198, 486, 0, 199, 0,
	446, 487, 516, 219, 220, 222, 0, 259, 263, 270,
	272, 278, 279, 286, 333, 380, 404, 402, 408, 0,
	463, 480, 490, 497, 503, 504, 506, 507, 508, 509,
	510, 511, 368, 285, 442, 301, 338, 0, 0, 386,
	420, 225, 484, 443, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 517, 518, 519, 520, 521,
	522, 523, 524, 525, 526, 527, 528, 529, 530, 531,
	532, 533, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 535, 348, 433, 481, 303, 315, 318,
	308, 327, 0, 328, 304, 305, 310, 312, 313, 314,
	319, 320, 324, 330, 0, 191, 207, 334, 0, 409,
	268, 513, 492, 488, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 194,
	200, 208, 217, 221, 228, 241, 256, 258, 265, 276,
	281, 284, 289, 290, 293, 298, 344, 350, 351, 352,
	353, 370, 371, 372, 375, 378, 379, 382, 384, 385,
	388, 392, 396, 397, 398, 399, 401, 403, 410, 414,
	422, 423, 424, 425, 426, 429, 430, 435, 436, 437,
	438, 439, 447, 448, 452, 470, 471, 483, 496, 501,
	428, 277, 478, 502, 0, 343, 0, 0, 345, 261,
	280, 291, 0, 491, 449, 212, 416, 269, 201, 231,
	215, 239, 254, 257, 295, 354, 361, 390, 395, 274,
	251, 229, 413, 226, 432, 455, 456, 457, 459, 358,
	246, 394, 0, 0, 341, 461, 462, 287,
}

var yyPact = [...]int{
	5163, -1000, -416, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2020, 2056, -1000, -1000,
	-1000, -1000, 2165, -1000, 771, 1711, -1000, 2028, 3790, -1000,
	40614, 502, -1000, 39424, 501, 109, 40614, -1000, 143, -1000,
	136, 40614, 144, 38829, -1000, -1000, -317, 17399, 1960, 16,
	15, 40614, -1000, -1000, -1000, -1000, 2145, 1661, -1000, 284,
	-1000, -1000, -1000, -1000, -1000, -1000, 38234, -1000, -1000, -1000,
	2040, 2022, 2178, 660, 1991, -1000, 2088, 1661, -1000, 17399,
	2134, 2077, 16804, -1000, 16804, 382, -1000, -1000, 12629, -1000,
	-1000, 23359, 40614, 28714, 370, -1000, 2028, -1000, -1000, -1000,
	78, -1000, 293, 1571, -1000, 1562, -1000, 429, 505, 324,
	459, 415, 320, 318, 317, 316, 311, 310, 301, 300,
	328, -1000, 702, 702, -185, -191, 1049, 366, 373, 373,
	450, 2000, 1999, -1000, 664, -1000, 702, 702, 702, 336,
	702, 702, 702, 702, 252, 250, 702, 702, 702, 702,
	702, 702, 702, 702, 702, 702, 702, 702, 702, 702,
	702, 702, 702, 285, 2028, 237, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 40614, 180, 40614, -1000,
	572, 40614, 821, 821, 60, 821, 821, 821, 821, 141,
	616, 11, -1000, 124, 240, 106, 226, 809, 191, -1000,
	-1000, 227, 809, 1222, 689, 112, -1000, 821, 821, -1000,
	10229, 140, 10229, 10229, -1000, 2011, -1000, -1000, -1000, -1000,
	1226, -1000, 447, -1000, -1000, -1000, -1000, 40614, 37639, 412,
	736, -1000, -1000, -1000, 55, -1000, -1000, 1343, 1048, 17399,
	947, -1000, 1161, 639, -1000, -1000, -1000, -1000, -1000, 551,
	17994, 17994, 17994, 17994, -1000, -1000, 1576, 1576, 1576, 1576,
	17994, 1576, 17994, 1576, 1576, 1576, 1576, 17399, 1576, 1576,
	1576, -1000, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576,
	1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576,
	1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576,
	1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576,
	1576, 1576, 569, 1576, 1576, 1576, 1576, 1576, -1000, -1000,
	-1000, -1000, 1576, 1576, 1576, 1576, 1576, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20974, -1000, 15019, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40614,
	-1000, 1576, 151, 40614, 40614, 315, 2088, 1661, -1000, 2145,
	2118, 284, -1000, 1987, 1502, 1505, 1204, 1661, 1498, 40614,
	-1000, 1601, -1000, -1000, -1000, 1868, 1066, 1219, -1000, -1000,
	-1000, -1000, 1288, 17399, -1000, -1000, 2162, -1000, 20379, 568,
	852, 2161, 37044, -1000, 382, 382, 1525, 12029, -12, -1000,
	-1000, -1000, 735, 26334, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2011, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1670, 40614, -1000, -1000,
	4355, 1153, -1000, 1708, -1000, 1668, -1000, 1674, 17399, 1724,
	500, 1153, 469, 467, 465, -1000, -78, -1000, -1000, -1000,
	-1000, -1000, -1000, 702, 702, 702, -1000, 313, 2131, 3790,
	5979, -1000, -1000, -1000, 36449, 1704, 1153, -1000, 1702, -1000,
	805, 497, 595, 595, 1153, -1000, -1000, 40614, 1153, 804,
	802, 1153, 1153, 40614, 40614, -1000, 35854, -1000, 35259, 34664,
	1053, 40614, 34069, 33474, 32879, 32284, 31689, -1000, 1859, -1000,
	1784, -1000, -1000, -1000, 40614, 1153, 40614, 40614, 308, -1000,
	-1000, 40614, 1153, -1000, -1000, 1050, 1044, 1026, 702, 702,
	1025, 1218, 1216, 1207, 702, 702, 1021, 1202, 27524, 1201,
	239, 1020, 1018, 998, 1014, 1197, 176, 1195, 987, 961,
	985, 40614, 1699, 40614, -1000, 221, 706, 363, 734, 2028,
	1940, 1519, 432, 499, 1153, 379, 379, 40614, -1000, 10829,
	-1000, -1000, 1187, 17399, -1000, 814, 809, 809, -1000, -1000,
	-1000, -1000, -1000, -1000, 821, 40614, 814, -1000, -1000, -1000,
	809, 821, 40614, 821, 821, 821, 821, 809, 809, 809,
	821, 40614, 40614, 40614, 40614, 40614, 40614, 40614, 40614, 40614,
	10229, 689, 821, -322, -1000, 1185, -1000, 1824, -1000, -1000,
	-1000, -1000, -1000, -1000, 10229, 10229, -1000, -1000, -1000, -1000,
	142, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-94, 1513, 31094, -1000, -323, -327, -329, -330, -1000, -1000,
	-1000, -331, -333, -1000, -1000, -1000, 17399, 17399, 17399, 17399,
	-219, -1000, 1040, 17994, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 894, 759, 17994, 17994, 17994, 17994, 17994, 17994, 17994,
	17994, 17994, 17994, 17994, 17994, 17994, 17994, 17994, 745, 7025,
	7025, 639, 639, 639, 639, -1000, 16804, 17399, 17399, 639,
	-1000, 1153, 30499, 16804, 16804, 17399, 1998, 717, 1048, 40614,
	-1000, 1204, -1000, -1000, -1000, 959, -1000, 40614, 40614, 294,
	17399, 17399, 17399, 17399, 17399, 17399, 13824, 17399, 17399, 17399,
	17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399,
	17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399,
	17399, 17399, 17399, 13229, 10829, 16804, 16804, 16804, 16804, 16804,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 567, 1364, 1346, 1558, -1000, 1501, -1000, -168,
	22764, 17399, 1176, 2160, 1755, 40614, -1000, -1000, -1000, 2088,
	-1000, 2088, 1364, 1964, 1874, 16804, -1000, -1000, 1964, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1388, -1000, 40614,
	1498, 2067, 40614, 1861, 1173, 298, -1000, 17399, 17399, 1487,
	-1000, 1203, 40614, -1000, -219, -1000, 29904, -1000, -1000, 9629,
	-1000, 40614, 269, 40614, -1000, 22169, 29309, 11429, -12, -1000,
	11429, 1415, -1000, -10, -17, 14419, 620, -1000, -1000, -1000,
	1049, 19184, 1323, 620, 85, -1000, -1000, -1000, 1674, -1000,
	1674, 1674, 1674, 1674, 298, 298, 298, 298, -1000, -1000,
	-1000, -1000, -1000, 1698, 1693, -1000, 1674, 1674, 1674, 1674,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1690, 1690, 1690,
	1675, 1675, 365, -1000, 17399, 184, 28714, 2045, 964, 1443,
	221, 380, 1750, 1153, 1153, 1153, 380, -1000, 1261, 1256,
	1215, -1000, -406, 1460, -1000, -1000, 2128, -1000, -1000, 648,
	828, 825, 718, 40614, 159, 268, -1000, 356, -1000, 28714,
	1153, 799, 595, 1153, -1000, 1153, -1000, -1000, -1000, -1000,
	-1000, 1153, -1000, -1000, 1446, -1000, 1462, 871, 816, 855,
	774, 1446, -1000, -1000, -121, 1446, -1000, 1446, -1000, 1446,
	-1000, 1446, -1000, 1446, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 713, 133, 40614, 159, 745, -1000, 431, -1000,
	-1000, -1000, 745, 745, -1000, -1000, -1000, -1000, 1156, 1155,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -389,
	40614, -1000, 169, 730, 257, 303, 279, 40614, 162, 2070,
	224, 248, 40614, 40614, 379, 1813, 40614, 2053, 40614, -1000,
	-1000, -1000, -1000, -1000, 1048, 40614, -1000, -1000, 821, 821,
	-1000, -1000, 40614, 821, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 821, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 40614, -1000,
	-1000, -1000, -1000, 40614, -1000, -1000, -1000, -1000, -1000, 75,
	-18, 323, -1000, -1000, -1000, -1000, -1000, 2082, -1000, 1048,
	764, 761, -1000, 1576, -1000, -1000, 883, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 894, 17994, 17994, 17994, 903, 424,
	1233, 1530, 1568, 867, 867, 700, 700, 643, 643, 643,
	643, 643, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1154, -1000, 1596, -1000, 1910, 1056, 1204, -1000, 1596, 1596,
	1274, 16804, -1000, -1000, 746, -1000, 17399, 1204, -1000, -1000,
	1204, 1204, 1438, 1432, 2154, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1878, 1443, 1443, 1443,
	1443, 1443, 17399, 1002, -1000, -1000, -1000, 1848, 1818, 1204,
	1343, 1204, 1426, -1000, 1812, 1443, 1808, 1775, 1749, 1404,
	1743, 1739, 1733, 1443, 1443, 1443, 1199, 1716, 1709, 1705,
	1696, 1676, 1663, 1639, 1631, 1586, 1443, 1204, 16804, 16804,
	1418, 1576, 564, -1000, 1596, 1204, 1204, 1596, 1596, 10829,
	1204, -1000, 40614, -1000, -310, -1000, -40, 650, 1576, -1000,
	27524, 1204, -1000, 6902, -1000, 41804, -1000, -1000, -1000, -1000,
	-1000, 25739, 1479, 1964, -1000, -1000, 1576, 1664, -1000, -1000,
	298, 32, 25144, -1000, -1000, 1048, 1048, 17399, -1000, -1000,
	-1000, -1000, -1000, -1000, 559, 2146, 326, 1576, -1000, 1684,
	1904, -1000, -1000, -1000, 2062, 19784, -1000, 1576, 1576, 40614,
	1731, 1694, -1000, 558, -1000, 1415, -12, -25, -1000, -1000,
	-1000, -1000, 1048, -1000, 1183, 274, 329, -1000, 359, -1000,
	-1000, -1000, -1000, 1968, 45, -1000, -1000, -1000, 298, 298,
	-1000, -1000, -1000, -1000, -1000, -1000, 1141, 1141, -1000, -1000,
	-1000, -1000, -1000, 960, -1000, -1000, -1000, 956, -1000, -1000,
	1521, 1795, 184, -1000, -1000, 702, 1140, -1000, -1000, 1966,
	702, 702, 40614, -1000, -1000, 1320, 2045, 169, 40614, 753,
	1809, -1000, 1750, 1750, 1750, 40614, -1000, -1000, -1000, -1000,
	-1000, -1000, -401, 54, 312, -1000, -1000, -1000, 3056, 40614,
	1654, -1000, 157, -1000, 1293, -1000, 40614, -1000, 1652, 1687,
	1153, 1153, -1000, -1000, -1000, 40614, 1576, -1000, -1000, -1000,
	-1000, 496, 2026, 2015, -1000, -1000, -237, 159, 157, 620,
	1153, -1000, -1000, -1000, -1000, -1000, -395, 1628, 430, 163,
	278, 40614, 40614, 40614, 40614, 40614, 535, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 241, 426, -1000, 40614, 40614,
	528, -1000, -1000, -1000, 809, -1000, -1000, 809, -1000, -1000,
	-1000, -1000, -1000, 2006, 40614, -21, -362, -1000, -356, 17399,
	-1000, -1000, -1000, -1000, 823, 422, 1233, 17994, 17994, 16804,
	-114, 522, 522, 745, -1000, -1000, -1000, 17399, 17399, 1620,
	707, -1000, 17399, 938, -1000, -1000, -1000, 17399, 17399, 17399,
	1204, 261, -1000, -1000, -1000, -1000, -1000, 2153, -1000, 17399,
	17399, 17399, -1000, -1000, 17399, 17399, -1000, 17399, 17399, 18589,
	1204, 18589, 17399, 17399, 18589, -1000, -1000, -1000, -1000, 18589,
	17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399, 17399, -1000,
	-1000, 1596, 1596, 16804, 10829, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 650, -1000, 595, 595, 595,
	40614, -1000, -1000, -1000, -1000, -1000, -1000, 1402, 2089, -1000,
	1895, 1891, 2148, 2146, -1000, 22169, 1964, -1000, -1000, 40614,
	-305, -1000, 1936, 1951, -1000, -1000, -1000, -1000, 9029, 2088,
	17399, 1807, 40614, 1576, -1000, 21574, 40614, 40614, 22169, 22169,
	22169, 22169, 22169, -1000, 1849, 1839, -1000, 1845, 1826, 1856,
	40614, -1000, 1592, 1204, 2118, 19784, 284, 17399, 23954, 1491,
	22169, -1000, -1000, 22169, 40614, 8429, -1000, -1000, -34, -41,
	-1000, -1000, -1000, -1000, 1049, -1000, -1000, 425, 2058, 1965,
	-1000, -1000, -1000, -1000, 1589, -1000, 1579, 1391, 1564, 133,
	-1000, 1717, 2005, 702, 702, -1000, 955, -1000, 1153, 1137,
	1135, -1000, -1000, -1000, 413, -1000, 2052, 40614, 1803, 1793,
	1787, -1000, -411, 954, 1682, 1681, 17399, 1680, 2126, 1367,
	40614, -1000, -1000, 40614, -1000, 225, -1000, 184, 40614, -1000,
	-1000, -1000, 268, 40614, -1000, 6712, -1000, 157, -1000, -1000,
	-1000, -1000, -1000, -1000, 40614, 188, -1000, 1678, 1059, -1000,
	-1000, 1671, -1000, -1000, -1000, -1000, 154, 256, -1000, 40614,
	508, 1795, 40614, -1000, -1000, -1000, 821, 821, -1000, -1000,
	2004, -1000, 1153, 1443, 17994, 17994, -1000, 639, -1000, 1576,
	1204, 1674, 1674, -1000, 1674, 1675, -1000, 1674, 122, 1674,
	92, 1674, -1000, -1000, 1204, 1204, 1073, 1132, -85, -1000,
	1048, 17399, 1567, 1536, 1443, -1000, 1673, 1667, 17399, 1443,
	1443, 1443, -1000, 1048, 1404, 1480, 1381, -1000, -1000, -1000,
	-1000, 1385, 1443, 1458, -303, 1204, 1560, 1560, 1560, 1560,
	1560, 1558, 1558, 1558, 1558, -1000, -1000, 1204, -1000, -1000,
	2059, 2059, 2059, 1468, 41209, 40614, -1000, -1000, -1000, -1000,
	2146, 2144, 1371, -1000, -1000, 32, 367, -1000, 1985, 1951,
	-1000, 2124, 1932, 2123, -1000, -1000, -1000, 1048, -1000, 2034,
	1383, -1000, 728, 1338, -1000, -1000, 16209, 1470, 1885, 541,
	1468, 1435, 1904, 1730, 1786, 1924, -1000, -1000, -1000, -1000,
	1825, -1000, 1754, -1000, -1000, 1601, -1000, -1000, 1346, 1204,
	1424, 269, 22169, 1400, 1400, -1000, 533, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 831, 6548, 2176, -1000, 1126, -1000,
	1015, 181, 953, -1000, -1000, 702, 702, -1000, 798, 796,
	-1000, 40614, 1659, -1000, 298, 1124, 298, 950, -1000, 946,
	-1000, -1000, -1000, -1000, 1774, 1817, -1000, -1000, -1000, -1000,
	40614, -1000, -1000, 40614, 40614, 40614, 1657, 2115, -1000, 17399,
	1637, 708, 1499, 40614, 40614, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 409, 702, -373, 246, 245,
	702, 702, 702, -1000, -1000, 1429, 1396, -1000, -189, -1000,
	17399, -1000, -1000, -1000, 908, 908, -1000, 1601, -1000, -1000,
	-1000, 1289, -1000, -1000, -127, 40614, 40614, 40614, 40614, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 639,
	17994, -1000, -1000, 298, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 17399, -1000, 17399, -1000, 2088, 1121, 1048,
	17399, 17399, -1000, 927, 917, 1443, -1000, -1000, -1000, 1204,
	18589, -1000, 18589, -1000, 17399, 235, 522, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1576, 1912,
	1576, 1576, 23954, -1000, -1000, 2144, 2142, 2109, 1905, 1915,
	1915, 1985, -1000, 2105, 2103, -1000, 1120, 2098, 1114, 785,
	-1000, 40614, 17399, 1576, -1000, 331, 40614, 1576, 40614, -1000,
	2140, -1000, -1000, 17399, 1634, -1000, 17399, -1000, -1000, -1000,
	-1000, -1000, -1000, 7025, 2146, 1400, -1000, -1000, 653, -1000,
	17399, -1000, -1000, -1000, 3003, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1110, 1098, -1000, -1000, 1614, 17399, -1000,
	-1000, -1000, 1268, 1255, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1601, -1000, -1000, -1000, -1000, 268, -403, 1466, 40614,
	914, -1000, 1387, 1367, 262, 1576, 1092, 702, 702, 702,
	913, 875, 27524, 348, -1000, 268, -1000, -195, -200, 1443,
	-1000, -1000, 2057, -1000, -1000, 10829, -1000, -1000, 1599, 1744,
	-1000, 386, -1000, 1443, 1443, 1204, -1000, 1443, 1443, 1252,
	1244, -1000, -1000, 1381, -1000, 997, -1000, 235, 1204, 1782,
	-1000, -1000, 7025, -1000, 24549, -1000, 2097, 2095, 28119, 28119,
	650, 2142, -1000, 17399, 17399, 1903, 892, -1000, -1000, -1000,
	-1000, 1088, 1086, -1000, 1072, -1000, 2172, -1000, 1048, -1000,
	1576, -1000, 520, 1338, -1000, 2088, 1048, 40614, 1048, 40,
	2140, -1000, 1443, -1000, 1576, 1576, 1576, 1576, 1576, 1576,
	1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576,
	1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576, 1576,
	1576, 1576, 1576, 1576, 1576, 1576, -1000, -1000, 40614, 1412,
	-1000, -1000, 2055, 1362, 52, -1000, 1351, -1000, -1000, 478,
	-1000, 17399, -1000, 27524, 1061, 1057, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 284, 1356, -1000, 699, 40614, 40614,
	1204, 273, -141, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 17399, -1000, 1204, 1773, -1000, -242, -1000, 1345,
	-1000, -1000, -1000, -1000, -1000, 1345, 1345, -1000, -1000, 1048,
	1343, -1000, 878, -1000, -1000, -1000, -1000, -1000, 40614, 1338,
	40614, -1000, 1333, 1204, 1576, 2088, -1000, 1318, -1000, 284,
	-1000, 1569, 1681, -1000, -1000, -1000, 15614, -1000, -1000, -1000,
	-1000, -122, 10829, 7829, 1302, -1000, -1000, 1857, -119, -182,
	1404, -1000, -348, -1000, -1000, 26929, -1000, -1000, -1000, -1000,
	-1000, 1138, -1000, -1000, 23954, 40019, -1000, -111, 275, -122,
	17399, 1506, 1204, -1000, -33, -1000, -1000, -1000, -1000, -1000,
	1671, -1000, 1788, -1000, 1204, -1000, -1000, -1000, 1278, -1000,
	4308, -270, 1765, -1000, -110, -1000, -1000, -1000, 829, 999,
	-1000, -1000, -1000, -1000, -1000, -1000, 1398, 40614, -1000, 364,
	-1000, -1000, -127, -133, -1000, -1000, 40019, -260, 620, 7025,
	-1000, 1761, 1760, 2152, -1000, -1000, -1000, -1000, -1000, -1000,
	-413, 1276, 190, -1000, -167, -1000, -1000, 2051, 40, -1000,
	2169, -1000, 2166, 581, 581, -1000, 873, -413, -1000, -187,
	-273, -1000, -1000, -1000, -1000, -1000, 355, 922, -1000, -1000,
	-1000, -1000, 7025, -1000, -1000, -1000, 212, 212, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2481, 2480, 26, 3, 2477, 2476, 2475, 47, 100,
	181, 22, 182, 95, 2474, 2471, 2470, 2469, 2468, 2464,
	2463, 224, 223, 222, 2462, 2461, 2459, 2458, 2457, 2456,
	2453, 2452, 2451, 2450, 213, 162, 177, 2449, 2448, 2443,
	111, 171, 86, 88, 176, 2442, 2440, 76, 2439, 2438,
	2437, 204, 203, 202, 738, 2436, 170, 110, 32, 2433,
	2432, 2431, 2429, 2428, 2427, 2426, 2424, 2423, 2421, 2418,
	2417, 2416, 2415, 2414, 2413, 2410, 288, 2409, 2406, 13,
	2405, 80, 2404, 2403, 2401, 2400, 123, 2399, 2398, 2397,
	2395, 2394, 2392, 2390, 144, 2389, 2388, 2386, 2385, 183,
	2384, 2383, 142, 108, 105, 2382, 2380, 94, 173, 2378,
	119, 2376, 2373, 2371, 151, 2367, 3804, 2366, 67, 60,
	2365, 55, 79, 59, 50, 34, 15, 2364, 2363, 66,
	82, 2362, 96, 74, 2361, 104, 101, 2360, 2359, 17,
	6, 2358, 1, 4, 2, 71, 2357, 2356, 130, 2355,
	2351, 2350, 90, 2349, 2346, 4821, 2344, 89, 134, 99,
	75, 2343, 35, 40, 2340, 2339, 2338, 2337, 2334, 38,
	2333, 2332, 2330, 140, 30, 163, 23, 42, 44, 143,
	2329, 160, 77, 2327, 138, 137, 2326, 43, 27, 36,
	2325, 41, 133, 115, 63, 93, 128, 2323, 2322, 45,
	73, 2321, 2320, 2319, 2318, 2315, 2314, 70, 2313, 65,
	2312, 179, 2311, 24, 2310, 39, 31, 2309, 68, 150,
	69, 29, 2308, 165, 2307, 49, 161, 124, 158, 2306,
	2304, 2302, 2301, 178, 263, 2300, 2298, 84, 164, 153,
	148, 91, 2297, 254, 2296, 2295, 102, 1598, 2009, 20,
	159, 2293, 2292, 3199, 139, 28, 21, 2291, 117, 2290,
	2289, 2287, 184, 167, 106, 977, 53, 2284, 2282, 12,
	2281, 2280, 2279, 2278, 2276, 2275, 97, 2274, 2273, 2272,
	186, 58, 9, 155, 78, 2268, 2267, 2266, 121, 83,
	2265, 157, 156, 126, 107, 2264, 169, 147, 136, 2262,
	132, 2261, 2260, 2259, 2256, 2255, 92, 2254, 2252, 2251,
	2249, 152, 146, 120, 85, 2248, 81, 116, 154, 149,
	37, 2245, 46, 2242, 2240, 2239, 172, 25, 2237, 14,
	52, 61, 19, 103, 141, 2229, 0, 2227, 7, 174,
	256, 168, 2223, 2222, 5, 8, 11, 2218, 2217, 2216,
	2214, 135, 2213, 2209, 2208, 2207, 18, 33, 16, 10,
	2200, 2192, 5034, 3230, 122, 2191, 191,
}

//line sql.y:6926
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 360, 361, 361, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 336, 336,
	336, 339, 339, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 84, 84, 22, 23, 23, 23, 23,
	364, 364, 150, 150, 148, 148, 149, 149, 218, 218,
	24, 25, 25, 228, 228, 227, 227, 227, 229, 229,
	229, 229, 265, 265, 26, 26, 26, 26, 26, 100,
	100, 338, 338, 337, 329, 329, 328, 328, 327, 335,
	335, 334, 334, 333, 38, 39, 48, 48, 48, 48,
	49, 50, 340, 340, 302, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 304, 304, 290, 290, 303, 303, 303, 303, 303,
	303, 303, 289, 289, 111, 111, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 355, 355, 355, 354, 354, 198, 198,
	198, 198, 198, 198, 198, 198, 120, 120, 129, 129,
	129, 129, 129, 118, 118, 119, 117, 117, 117, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 359, 359, 359, 359, 359, 359,
	359, 359, 359, 128, 128, 124, 124, 124, 125, 125,
	125, 126, 126, 356, 356, 356, 356, 269, 269, 269,
	269, 272, 272, 270, 270, 270, 270, 270, 270, 270,
	270, 270, 271, 271, 271, 271, 271, 273, 273, 273,
	273, 273, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 275, 275, 275,
	275, 275, 275, 275, 275, 288, 288, 276, 276, 283,
	283, 284, 284, 284, 285, 285, 285, 286, 286, 281,
	281, 281, 281, 281, 281, 282, 282, 282, 291, 316,
	316, 315, 315, 313, 313, 313, 313, 313, 313, 313,
	313, 300, 300, 310, 310, 310, 310, 310, 299, 299,
	295, 295, 295, 296, 296, 297, 297, 294, 294, 298,
	298, 312, 312, 311, 311, 292, 292, 293, 293, 318,
	357, 357, 357, 357, 357, 358, 358, 319, 347, 349,
	349, 349, 348, 348, 345, 346, 344, 344, 344, 344,
	344, 81, 81, 81, 241, 241, 242, 242, 308, 308,
	307, 307, 307, 309, 309, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 306, 306, 306, 236, 236, 236, 343,
	343, 343, 343, 343, 343, 342, 342, 342, 305, 305,
	305, 341, 341, 57, 57, 182, 182, 45, 45, 45,
	45, 45, 45, 44, 44, 44, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 46, 46, 41, 41, 41, 41, 41, 41,
	41, 41, 41, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 86, 86, 87, 87, 87, 87, 89,
	89, 89, 321, 321, 58, 58, 3, 3, 138, 140,
	141, 141, 139, 139, 139, 139, 139, 139, 60, 60,
	59, 59, 143, 142, 144, 144, 144, 1, 1, 2,
	2, 4, 4, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 326, 326, 326, 326, 326,
	326, 326, 326, 326, 326, 287, 287, 287, 320, 320,
	322, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	324, 324, 324, 61, 61, 325, 277, 278, 279, 5,
	6, 301, 323, 96, 96, 28, 37, 37, 29, 29,
	29, 29, 30, 30, 62, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 235, 235, 244, 244, 234,
	234, 258, 258, 258, 237, 237, 237, 238, 238, 353,
	353, 353, 231, 231, 64, 64, 64, 66, 66, 67,
	68, 68, 260, 260, 261, 261, 69, 70, 82, 82,
	82, 82, 82, 82, 85, 85, 85, 15, 15, 15,
	15, 78, 78, 78, 14, 14, 65, 65, 72, 350,
	350, 351, 352, 352, 352, 352, 73, 75, 31, 31,
	31, 31, 31, 31, 106, 106, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 101, 101,
	101, 95, 95, 365, 76, 77, 77, 99, 99, 99,
	92, 92, 92, 98, 98, 98, 16, 16, 17, 217,
	217, 18, 18, 103, 103, 105, 105, 105, 105, 105,
	107, 107, 107, 107, 107, 107, 107, 102, 102, 104,
	104, 104, 104, 251, 251, 251, 250, 250, 132, 132,
	134, 133, 133, 135, 135, 136, 136, 136, 136, 180,
	180, 158, 158, 215, 215, 213, 213, 214, 214, 216,
	216, 216, 216, 219, 219, 137, 137, 137, 137, 145,
	145, 146, 146, 147, 147, 259, 259, 256, 256, 256,
	255, 255, 151, 151, 151, 153, 152, 152, 152, 152,
	154, 154, 156, 156, 155, 155, 157, 162, 162, 161,
	161, 159, 159, 159, 159, 160, 160, 160, 160, 163,
	163, 116, 116, 116, 116, 116, 116, 116, 127, 127,
	127, 127, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 83,
	83, 83, 232, 232, 164, 164, 172, 172, 172, 172,
	165, 165, 165, 165, 165, 165, 165, 173, 173, 173,
	179, 174, 174, 170, 170, 170, 170, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 169, 169, 267, 267, 332, 332, 331,
	331, 330, 330, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 91, 91, 91, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 366, 366, 280, 280, 280, 280,
	171, 171, 171, 171, 171, 97, 97, 97, 97, 97,
	264, 264, 264, 268, 268, 268, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 185, 185, 93, 93, 183, 183, 184, 186, 186,
	181, 181, 181, 167, 167, 167, 187, 187, 188, 188,
	189, 189, 191, 190, 190, 192, 193, 193, 193, 194,
	194, 195, 195, 195, 47, 47, 47, 47, 47, 42,
	42, 42, 42, 43, 43, 43, 108, 108, 108, 108,
	110, 110, 109, 109, 79, 79, 80, 80, 80, 114,
	114, 115, 115, 115, 112, 112, 113, 113, 211, 211,
	196, 196, 196, 203, 203, 203, 199, 199, 201, 201,
	201, 202, 202, 202, 200, 208, 208, 210, 210, 209,
	209, 205, 205, 206, 206, 207, 207, 207, 204, 204,
	166, 166, 166, 166, 166, 212, 212, 212, 212, 220,
	220, 176, 176, 178, 178, 177, 131, 221, 221, 225,
	222, 222, 226, 226, 226, 226, 226, 223, 223, 224,
	224, 252, 252, 252, 230, 230, 243, 243, 239, 239,
	240, 240, 233, 233, 245, 245, 245, 74, 175, 175,
	317, 317, 314, 248, 248, 249, 249, 253, 253, 257,
	257, 254, 254, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	246, 246, 246, 246, 246, 246, 246, 246, 246, 246,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 247, 362, 363, 262, 263, 263,
	263,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 2, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 5, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 1, 0, 1, 0,
	2, 2, 2, 1, 1, 0, 2, 2, 5, 0,
	1, 1, 2, 1, 3, 2, 1, 1, 3, 3,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 4, 3, 1, 3, 1, 7,
	6, 7, 7, 8, 8, 0, 1, 5, 2, 1,
	1, 1, 0, 1, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 1, 1, 2, 0, 1, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 4, 6, 5, 5, 2,
	2, 2, 2, 3, 3, 3, 4, 3, 3, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 3, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 5, 5, 0, 6, 5, 6, 4, 5, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 8, 4,
	1, 3, 3, 6, 7, 7, 8, 4, 0, 1,
	0, 1, 3, 3, 1, 1, 2, 1, 1, 0,
	2, 0, 2, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 2, 2,
	4, 4, 3, 0, 1, 4, 3, 4, 4, 3,
	3, 3, 2, 1, 3, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 2, 4, 4, 4, 4, 4, 3, 3,
	3, 5, 2, 3, 3, 2, 3, 4, 4, 4,
	3, 4, 4, 5, 3, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 1, 1, 2, 1, 3, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 4, 3, 3,
	6, 4, 7, 6, 1, 3, 2, 2, 2, 2,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 5, 5, 4, 0,
	2, 4, 4, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 1, 3,
	4, 3, 7, 0, 3, 1, 3, 1, 3, 1,
	1, 3, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 1, 1,
	2, 6, 5, 6, 6, 0, 2, 3, 3, 0,
	2, 3, 3, 3, 2, 3, 1, 6, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	9, 6, 6, 6, 2, 2, 3, 3, 3, 1,
	1, 1, 0, 3, 1, 1, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 5, 5, 6, 4, 4, 8,
	6, 8, 6, 8, 5, 4, 2, 2, 1, 2,
	2, 2, 8, 8, 6, 5, 4, 4, 4, 4,
	4, 7, 4, 6, 6, 6, 4, 4, 4, 7,
	8, 6, 5, 6, 8, 11, 7, 8, 8, 9,
	4, 4, 4, 4, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 4, 0, 2, 0, 2, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 2, 3, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 0, 5, 5, 2, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 2, 1,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	0, 1, 3, 1, 3, 2, 0, 1, 1, 0,
	1, 2, 4, 4, 0, 2, 2, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 0, 3, 3, 3,
	0, 3, 1, 1, 0, 4, 0, 1, 1, 0,
	3, 1, 3, 2, 1, 1, 0, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -360, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -84, -33, 32, -38, -48, 219, -49, -39, 220,
	-50, 222, 221, 258, 223, 251, 74, 300, 301, 303,
	304, 305, 306, -85, 256, 257, 225, 36, 45, 33,
	34, 37, 229, 264, 265, 228, -10, -34, 8, -362,
	11, 430, 253, 252, 28, -12, 464, 85, -361, 604,
	-211, -196, 22, 33, 29, -195, -191, -99, -196, 20,
	18, 7, -76, -365, -76, -76, 12, 13, -76, -302,
	-304, 85, 155, 85, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -326, -44, -41, 224, 221, 268,
	119, 120, 258, 259, 260, 223, 242, 257, 261, 256,
	277, -40, 80, 33, 464, 467, -309, 220, 226, 227,
	431, 122, 121, 75, 222, -306, 354, 496, 574, -56,
	576, 101, 103, 575, 44, 232, 577, 578, 579, 503,
	580, 241, 581, 582, 583, 584, 590, 545, 591, 592,
	593, 123, 7, -76, -257, -253, -336, -247, 88, 89,
	90, 461, 244, 494, 495, 293, 80, 41, 351, 354,
	496, 574, 300, 314, 308, 335, 327, 462, 497, 296,
	245, 281, 571, 325, 131, 576, 299, 498, 259, 359,
	360, 499, 361, 101, 303, 397, 589, 298, 500, 587,
	103, 575, 79, 51, 44, 254, 323, 228, 319, 577,
	282, 501, 472, 275, 122, 119, 596, 36, 317, 50,
	30, 586, 121, 49, 578, 146, 502, 579, 503, 363,
	342, 565, 48, 364, 260, 504, 83, 265, 466, 573,
	365, 318, 366, 292, 585, 225, 505, 557, 367, 368,
	566, 506, 343, 347, 507, 389, 369, 603, 52, 508,
	509, 567, 120, 510, 78, 580, 312, 313, 511, 290,
	243, 391, 339, 443, 450, 451, 107, 108, 446, 109,
	452, 110, 453, 454, 455, 444, 111, 104, 445, 456,
	457, 340, 341, 112, 458, 106, 105, 447, 449, 113,
	459, 241, 35, 370, 463, 294, 58, 269, 392, 46,
	345, 600, 45, 561, 512, 564, 338, 334, 440, 53,
	513, 514, 515, 516, 581, 337, 311, 333, 595, 4,
	287, 582, 62, 227, 349, 348, 350, 276, 388, 330,
	517, 518, 519, 248, 81, 520, 320, 21, 521, 522,
	371, 283, 523, 56, 524, 525, 395, 257, 526, 54,
	583, 39, 527, 262, 597, 584, 528, 529, 530, 531,
	264, 532, 373, 533, 372, 344, 346, 271, 374, 465,
	534, 316, 261, 588, 535, 249, 572, 263, 268, 256,
	396, 250, 536, 537, 538, 539, 540, 297, 556, 541,
	542, 304, 590, 441, 43, 543, 544, 545, 546, 547,
	291, 286, 390, 399, 61, 82, 356, 548, 549, 570,
	310, 284, 550, 301, 55, 591, 592, 593, 278, 594,
	9, 601, 602, 376, 123, 288, 289, 47, 331, 270,
	551, 552, 321, 322, 336, 309, 332, 302, 558, 272,
	377, 442, 258, 553, 398, 285, 352, 357, 469, 277,
	378, 569, 468, 329, 326, 279, 554, 379, 233, 273,
	274, 555, 559, 380, 381, 295, 382, 383, 384, 385,
	386, 387, 280, 467, 307, 324, 358, 411, 412, 413,
	414, 415, 416, 417, 418, 419, 420, 421, 422, 423,
	424, 425, 426, 427, 428, 439, 231, -76, 231, -155,
	-253, 231, -223, 360, -244, 362, 375, 370, 380, 368,
	-235, 371, 373, 271, -353, 389, 231, 377, 219, 363,
	372, 381, 382, 295, 383, 387, 280, 384, 385, 386,
	-336, 172, 579, 594, 131, 328, 367, 365, 390, 561,
	-253, 302, -260, 307, -248, -336, -247, 305, -155, -82,
	557, 223, -262, -262, -101, 561, 563, -174, -116, 139,
	-127, -130, -121, -122, -168, -169, -170, -171, -128, -181,
	161, 162, 169, 140, -179, -131, 26, 460, 432, 431,
	172, 31, 215, 68, 69, 434, 435, 142, 57, 407,
	408, -129, 402, 409, 404, 437, 438, 114, 439, 104,
	106, 105, 440, 441, 442, 340, 341, 443, 444, 445,
	107, 108, 109, 110, 111, 112, 113, 446, 449, 447,
	448, 450, 451, 452, 457, 458, 453, 454, 455, 456,
	459, -248, -253, 236, 401, 230, 167, 430, -123, -119,
	-8, -177, 400, 405, 406, 410, 403, -336, -247, -125,
	-124, -164, 91, 97, 102, 98, -359, 115, -362, 92,
	93, 94, 95, 96, 116, 117, 173, 174, 175, 176,
	177, 178, 179, 180, 181, 182, 183, 184, 185, 186,
	187, 188, 189, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 44, 376,
	376, -155, -76, -76, -76, -76, -189, -99, -191, -10,
	-8, -362, 8, -76, -8, -9, -13, -34, -36, 490,
	-35, -253, -196, -211, 12, 157, 42, 50, -194, -195,
	-12, -8, -116, 19, 23, 24, -104, 163, -116, -253,
	-77, -104, -233, 235, -76, -76, -222, -265, 302, -226,
	390, 389, -249, -224, -248, -246, -223, 388, 224, 23,
	470, 138, 25, 27, 141, 172, 126, 19, 142, 37,
	226, 328, 242, 171, 238, 431, 219, 72, 471, 402,
	404, 400, 407, 433, 434, 401, 362, 31, 13, 473,
	28, 252, 24, 38, 165, 221, 145, 474, 255, 26,
	253, 114, 117, 476, 22, 75, 247, 14, 240, 40,
	16, 477, 478, 17, 236, 235, 157, 232, 70, 11,
	215, 29, 154, 66, 479, 133, 480, 481, 482, 483,
	127, 68, 155, 20, 598, 405, 406, 33, 562, 460,
	266, 167, 73, 59, 563, 139, 403, 484, 485, 115,
	486, 118, 76, 568, 135, 18, 71, 42, 487, 267,
	488, 237, 599, 489, 393, 490, 156, 222, 430, 69,
	491, 230, 375, 8, 436, 32, 251, 239, 125, 67,
	492, 231, 144, 437, 438, 234, 128, 116, 7, 132,
	34, 12, 74, 77, 408, 409, 410, 57, 124, 464,
	143, 15, 493, 394, 137, 131, -303, 155, -289, -293,
	-248, 246, -319, 242, -155, -312, -311, -248, -362, -100,
	-243, 232, 240, 239, 132, -340, 135, 288, 401, 230,
	-51, -52, -53, -223, 171, 578, -86, 263, 267, 86,
	86, -293, -292, -291, -341, 267, 246, -318, -310, 238,
	247, -299, 239, 240, -294, 232, 133, -341, -294, 237,
	247, 242, 246, 267, 267, 123, 267, 123, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 262, -300, 147,
	-300, 468, 468, -306, -341, 242, -341, -341, 234, 35,
	35, -245, -294, 234, 25, -300, -300, -300, -223, 171,
	-300, -300, -300, -300, 275, 275, -300, -300, -300, -300,
	-300, -300, -300, -300, -300, -300, -300, -300, -300, -300,
	-300, -300, -300, 231, -340, -108, 387, 295, 80, -54,
	277, -37, -155, -243, 232, 233, -340, 264, -155, 216,
	-155, -237, 155, 15, -237, -234, 376, 374, 361, 366,
	-237, -237, -237, -237, 278, 359, -295, 232, 35, 243,
	376, 278, 359, 278, 279, 278, 279, 369, 379, 278,
	-258, 14, 157, 401, 364, 368, 271, 231, 272, 233,
	378, 279, -258, 92, -238, 155, 376, 274, -237, -237,
	-263, -362, -249, 328, -336, 564, -263, -263, 32, 89,
	234, -248, -78, -248, 92, -15, -11, -22, -21, -23,
	147, -106, 376, -94, 172, 579, 565, 566, 567, 564,
	373, 572, 570, 568, 278, 569, 86, 135, 137, 138,
	4, -116, 154, -165, 147, 148, 149, 150, 151, 152,
	153, 157, 139, 141, 155, 156, 136, 158, 159, 160,
	161, 162, 163, 164, 166, 165, 167, 168, 171, 217,
	218, -122, -122, -122, -122, -179, -362, -362, -362, -122,
	-232, -362, -122, -362, -362, -362, -362, -185, -116, -362,
	-366, -362, -366, -366, -280, -362, -280, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, -362, -362, -362, -362, -362, -362,
	-362, -362, -362, -362, 216, -362, -362, -362, -362, -362,
	-280, -280, -280, -280, -280, 102, 97, 91, -181, 98,
	92, -248, -253, -8, -9, -174, -262, -350, -351, -158,
	-155, -362, 295, -248, -248, 264, -194, -12, -8, -189,
	-195, -191, -8, -76, -92, -105, 63, 64, -107, 24,
	38, 67, 65, 23, -363, 87, -363, -211, -363, 86,
	-36, -215, 85, 61, 43, 92, 92, 86, 21, -190,
	-192, -116, 14, -251, 4, -250, 25, -248, 92, 216,
	100, 14, -156, 29, -155, -233, -233, 86, 302, -226,
	-265, -228, -227, 391, 393, 147, -252, -248, 92, 31,
	87, 86, -155, -269, -272, -274, -273, -275, -270, -271,
	325, 326, 172, 329, 331, 332, 333, 334, 335, 336,
	337, 338, 339, 342, 32, 254, 321, 322, 323, 324,
	343, 344, 345, 346, 347, 348, 349, 350, 308, 327,
	462, 309, 310, 311, 312, 313, 314, 316, 317, 318,
	319, 320, -339, -336, 85, 87, 86, -276, 85, -116,
	-108, 231, -336, 232, 232, 232, -76, 430, -300, -300,
	-300, 262, 19, -44, -41, -326, 18, -40, -41, 224,
	119, 120, 221, 85, -289, 85, -298, -339, -336, 85,
	133, 237, 132, -297, -294, -297, -298, -336, -181, -336,
	133, 133, -336, -336, -219, -248, -219, -219, 23, -219,
	23, -219, 23, 94, -248, -219, 23, -219, 23, -219,
	23, -219, 23, -219, 23, 31, 78, 79, 31, 81,
	82, 83, -181, -336, -181, -289, -223, -155, -336, 94,
	94, 94, -300, -300, 94, 92, 92, 92, -300, -300,
	94, 92, -255, -253, 92, 92, -342, 248, 292, 294,
	94, 94, 94, 94, 31, 92, -343, 31, 586, 585,
	587, 588, 589, 92, 94, 31, 94, 31, 94, -248,
	85, -155, -114, 282, 219, 221, 224, 76, 92, 296,
	147, 44, 86, 234, 231, -336, -239, 236, -239, -248,
	-254, -253, -246, 92, -116, -296, 14, 157, -258, -258,
	-237, -155, -296, -258, -237, -155, -237, -237, -237, -237,
	-258, -258, -258, -237, -253, -253, -155, -155, -155, -155,
	-155, -155, -155, -263, -238, -237, 564, 92, -231, 14,
	76, -263, -263, -261, 305, 339, 558, 559, 560, 86,
	464, -148, -155, 564, 564, 564, 564, 564, 564, -116,
	-116, -116, -116, 486, -172, 115, 139, 116, 117, -130,
	-173, -177, -179, 99, 157, 141, 155, 156, -121, -122,
	-121, -121, -121, -121, -121, -121, -121, -121, -121, -121,
	-121, -121, -121, -264, -336, 92, 172, -126, -125, 98,
	-359, -126, -102, -104, -116, -116, -336, -248, -102, -102,
	-116, -98, 24, 38, -183, -184, 143, -181, -363, -363,
	94, 98, -248, -248, -91, -90, 412, 413, 414, 415,
	417, 418, 419, 422, 423, 427, 428, 411, 429, 416,
	421, 424, 425, 426, 420, 324, -116, -116, -116, -116,
	-116, -116, -83, -116, 126, 127, 128, -116, -116, -175,
	-174, -335, -334, -333, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -103, 24, 38,
	-102, -249, -254, -246, -102, -103, -103, -102, -102, 216,
	-211, -363, 86, -352, 393, 394, 562, -256, 267, -255,
	25, -175, 92, 14, -217, 77, -248, -194, -194, 63,
	64, 59, -102, -107, -363, -35, 25, -213, -248, 62,
	92, -281, -223, 351, 352, -116, -116, 86, -193, 27,
	28, -155, -250, 163, -254, -155, -218, 267, -155, -133,
	-135, -136, -137, -158, -180, -362, -138, 482, 479, 14,
	-148, -149, -157, -253, -226, -228, 86, 392, 394, 395,
	76, 118, -116, -282, 171, -308, -307, -306, -289, -291,
	-292, -293, 87, -282, -285, 357, 356, -276, -276, -276,
	-276, -276, -281, -281, -281, -281, 85, 85, -276, -276,
	-276, -276, -283, 85, -283, -283, -284, 85, -284, -319,
	-116, -316, -315, -313, -314, 241, 101, 555, 511, 464,
	503, 545, 77, -311, -193, 94, -363, -114, -240, 236,
	-317, -314, -336, -336, -336, -240, -336, 92, -336, 92,
	-336, 92, -87, -58, -1, 598, 599, 600, 86, 19,
	-290, -289, -57, 292, -322, -323, 267, -318, -312, -298,
	133, -297, -298, -298, -336, 86, 29, 123, 123, 123,
	123, 464, 221, 32, -241, 502, 139, -289, -57, -264,
	234, -264, -264, 92, 92, -236, 594, -148, -110, 284,
	147, 273, 273, 231, 231, 286, -155, 297, 299, 298,
	296, 23, 285, 287, 289, 275, -155, -155, -239, 76,
	-150, -155, 26, -253, -155, -237, -237, -155, -237, -237,
	-155, -248, -94, 393, 86, 464, 22, -95, 22, -362,
	115, 116, 117, -173, -121, -122, -121, 138, 255, 86,
	-363, 25, 86, 77, -363, -363, -363, 86, 14, -102,
	-186, -184, 145, -116, -363, -363, -363, 86, 86, 14,
	-268, 25, -363, -363, -363, -363, -363, -185, -363, 14,
	86, 86, -363, -363, 86, 86, -363, 86, 86, 86,
	-332, 86, 86, 86, 86, -363, -363, -363, -363, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, -363,
	-363, -102, -102, -362, 216, -363, -363, -363, -363, -363,
	-249, -351, 561, 394, -162, -161, -159, 74, 235, 75,
	-362, -255, -363, -126, 89, -214, 89, -213, -167, -248,
	94, 98, -196, -132, -134, 14, -107, -179, 87, 86,
	-281, -200, -205, -234, -248, 92, 172, -192, 216, -163,
	15, -166, 32, 57, -11, -362, -362, 32, 86, -151,
	-153, -152, -154, 66, 70, 72, 67, 68, 69, 73,
	-259, 25, -133, -9, -8, -362, -362, -362, -155, -148,
	-364, 14, 77, -364, 86, 216, -227, -229, 396, 393,
	399, -336, 92, -86, 86, -306, -293, -197, -111, 40,
	-286, 358, -281, -281, -288, 92, -288, 94, 94, 87,
	-47, -42, -43, 33, 80, -313, -300, 92, 39, -300,
	-300, -248, 87, -193, -110, -155, 139, 76, -317, -317,
	-317, -253, -2, 597, 603, 133, 85, 361, 18, -213,
	86, 87, -182, 293, 87, -88, -248, 87, 85, -298,
	-298, -248, -362, 231, 31, 31, 502, -57, -182, -282,
	-336, 596, 595, 87, 233, 291, -115, 407, -112, 92,
	88, -155, -155, -155, -155, -155, 224, 221, 276, 234,
	-148, -155, 86, -81, 250, 245, -258, -258, 33, -155,
	393, 573, 571, -116, 138, 255, -130, -122, -104, 461,
	-266, 172, 325, 254, 323, 319, 339, 330, 356, 321,
	357, 318, 317, 316, -266, -264, -116, -116, -189, 146,
	-116, 144, -116, -116, -116, -363, 172, 325, 14, -116,
	-116, -116, -333, -116, -116, -116, -331, -330, -126, -181,
	-363, -331, -116, -116, -330, -330, -334, -334, -334, -334,
	-334, -174, -174, -174, -174, -363, -363, -103, -249, -159,
	-294, -294, -294, -219, 86, -230, 22, 14, 57, 57,
	-132, -163, -133, -107, -248, -203, 557, -208, 46, -206,
	-207, 47, -204, 48, 56, 163, -194, -116, -220, 76,
	-221, -225, -181, -176, -178, -177, -362, -212, -363, -248,
	-219, -221, -135, -136, -136, -135, -136, 66, 66, 66,
	71, 66, 71, 66, -152, -253, -363, -363, -9, -9,
	-116, -256, 77, -133, -133, -157, -253, 163, 393, 397,
	398, -306, -358, 115, 139, 31, 76, 354, 101, -356,
	171, 499, 550, 555, 511, 503, 545, -357, 237, 132,
	133, 249, 25, 41, 87, 86, 87, 86, 87, 86,
	-242, -241, -43, -42, -300, -300, 94, -336, 92, 92,
	233, 26, -155, 76, 76, 76, -89, 601, 94, 85,
	-3, 80, -116, 85, 19, -289, -181, -324, -277, -325,
	-278, -279, -5, -6, -301, 57, 101, -61, 44, 232,
	581, 582, 123, 594, -316, -213, -320, -322, -155, -118,
	-362, -117, -119, -123, 161, 162, -182, -155, -109, 282,
	290, 85, -113, 89, -338, 77, 273, 354, 273, -155,
	-81, -47, -155, -237, -237, 33, -336, -363, -130, -122,
	-362, -363, -276, -276, -276, -284, -276, 313, -276, 313,
	-276, -363, -363, 86, -363, 22, -363, -93, 436, -116,
	86, 86, -363, 85, 85, -116, -363, -363, -363, -332,
	86, -363, 86, -363, 86, -267, 556, -363, -363, -363,
	-363, -363, -363, -363, -363, -363, -363, -363, -160, 22,
	-160, -160, -363, 89, -155, -163, -187, 16, -200, 51,
	331, -210, -209, 55, 47, -207, 19, 49, 19, 30,
	-220, 86, 147, 86, -363, -363, 86, 57, 216, -363,
	-163, -146, -145, 76, 77, -147, 76, -145, 66, 66,
	-215, -363, -363, 86, -218, -133, -163, -163, 216, 115,
	-362, -120, -129, -118, 12, 92, 92, -336, -355, 585,
	586, 31, 94, -300, -300, 133, 133, -155, 85, -281,
	92, -281, 94, 94, 31, 81, 82, 83, 31, 78,
	79, -155, -155, -155, -155, -321, 85, 19, -116, 85,
	147, 87, -213, -213, 269, 157, -300, 579, 275, 275,
	-300, -300, -300, 87, -363, 86, -287, 464, 467, -116,
	-124, -124, -215, 87, -329, 464, -337, -248, -248, -248,
	-248, -121, -281, -116, -116, -194, 92, -116, -116, 94,
	94, -363, -363, -331, -330, -116, -363, -143, -142, -144,
	565, 115, 31, -266, -362, 66, 18, 16, -362, -362,
	-256, -187, -188, 17, 19, -201, 53, -199, 52, -199,
	-209, 19, 19, 92, 19, 92, 133, -225, -116, -178,
	57, -11, -248, -176, -248, -189, -116, 85, -116, -126,
	-163, -163, -116, -169, 439, 104, 106, 105, 440, 441,
	442, 340, 341, 443, 444, 445, 107, 108, 109, 110,
	111, 112, 113, 446, 449, 447, 450, 451, 452, 457,
	458, 453, 454, 455, 456, 459, 92, 92, 85, -116,
	87, 87, -215, -320, -58, 87, -213, 94, 87, 270,
	-177, -362, 92, -300, -300, -300, 94, 94, -255, -357,
	-322, 468, 468, -363, 25, -328, -327, -249, 85, 77,
	-97, 157, 464, -363, -363, -363, -363, -363, 87, 87,
	-363, -363, 86, -363, -142, -144, -363, 76, -126, -216,
	-363, -248, 237, 19, 19, -216, -216, -162, -188, -116,
	-174, -202, 54, 76, 118, 92, 92, 92, 12, -176,
	216, -194, -213, -140, 361, -189, -363, -213, 87, 25,
	87, 603, 133, 87, -177, -96, -362, 266, -255, 92,
	92, -11, 86, 147, -213, -155, -363, 462, 73, 465,
	-116, -363, 76, 474, 565, 86, -363, -363, -363, 76,
	118, -221, -248, 87, -363, -362, -194, 87, -198, -11,
	85, -3, 266, -79, 464, -327, -305, -249, 92, 94,
	87, 62, 463, 466, -332, -248, 237, -256, -141, -139,
	-248, 517, -348, -347, 460, -358, -354, 115, 139, 101,
	-356, 555, 511, 124, 125, -79, -116, 85, -363, -80,
	281, 561, -338, 62, -363, -363, 86, 22, -269, -60,
	528, -345, -346, 76, -349, 367, 527, 548, 115, 92,
	87, -213, 242, -329, 464, -139, 524, -282, -126, -346,
	76, -345, 76, 13, 12, -4, 602, 87, 283, 465,
	-59, 26, -140, -344, 250, 245, 248, 32, -344, 94,
	-4, 466, 528, 244, 31, 115, -126, -143, -142, -142,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 793,
	793, 793, 0, 793, 0, 0, 793, -2, -2, 793,
	1279, 0, 793, 0, 0, -2, 725, 727, 0, 729,
	-2, 0, 0, 738, 1777, 1777, 788, 0, 0, 0,
	0, 0, 793, 793, 793, 793, 1140, 48, 793, 0,
	83, 84, 744, 745, 746, 63, 0, 1775, 1, 3,
	69, 73, 0, 0, 0, 56, 1149, 0, 76, 0,
	0, 797, 0, 795, 0, 1262, 793, 793, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 553, 490, 536, 488, 522, -2, 481, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 371, 371, 0, 0, -2, 481, 481, 481,
	0, 0, 0, 519, 1264, 433, 371, 371, 371, 0,
	371, 371, 371, 371, 0, 0, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 1166, 153, 1280, 1277, 1278, 38, 39,
	40, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758,
	1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768,
	1769, 1770, 1771, 1772, 1773, 1774, 0, 1256, 0, 653,
	894, 0, 714, 714, 0, 714, 714, 714, 714, 0,
	0, 0, 665, 0, 0, 0, 0, 711, 0, 681,
	682, 0, 711, 0, 717, 0, 692, 714, 714, 695,
	1778, 0, 1778, 1778, 1247, 0, 708, 706, 720, 721,
	724, 728, 0, 733, 736, 1273, 1274, 0, 751, 47,
	1516, 743, 756, 757, 0, 789, 790, 43, 991, 0,
	916, 921, 932, 945, 946, 947, 948, 949, 951, 952,
	0, 0, 0, 0, 957, 958, 0, 0, 0, 0,
	0, 972, 0, 0, 0, 0, 0, 1121, 0, 1084,
	1084, 1008, 1084, 1086, 1086, 0, 0, 0, 1774, 1556,
	1564, 1565, 1587, 1672, 1720, 1560, 1561, 1542, 1554, 1557,
	1545, 1546, 1548, 1550, 1555, 1562, 1568, 1547, 1567, 1566,
	0, 1543, 1544, 1549, 1559, 1563, 1551, 1552, 1553, 1558,
	1569, 1130, 0, 0, 0, 0, 0, 0, 273, 274,
	990, 1236, 1086, 1086, 1086, 1086, 1086, -2, -2, 219,
	220, 221, 222, 223, 224, 225, 0, 215, 0, 278,
	279, 275, 276, 277, 974, 975, 231, 232, 233, 234,
	235, 236, 237, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 1777, 0,
	766, 0, 0, 0, 0, 0, 1149, 0, 1141, 1140,
	61, 0, 793, -2, 0, 0, 0, 0, 45, 0,
	50, 853, 75, 74, 1188, 0, 0, 0, 57, 1150,
	65, 67, 1151, 0, 798, 799, 0, 829, 833, 0,
	794, 0, 0, 1263, 1262, 1262, 100, 0, 1716, 1240,
	-2, -2, 0, 0, 1275, 1276, 1249, -2, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, -2, 0, 0, 165, 166,
	0, 41, 398, 0, 161, 0, 391, 337, 0, 1166,
	0, 0, 0, 0, 0, 793, 0, 1257, 142, 143,
	150, 151, 152, 371, 371, 371, 533, 0, 0, 153,
	153, 497, 498, 499, 0, 0, -2, 396, 0, 482,
	0, 0, 385, 385, 389, 387, 388, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 614, 0, 372,
	0, 531, 532, 434, 0, 0, 0, 0, 0, 509,
	510, 0, 0, 1265, 1266, 0, 0, 0, 371, 371,
	0, 0, 0, 0, 371, 371, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1179, 0, 0, 0, -2,
	0, 645, 0, 0, 0, 1258, 1258, 0, 652, 0,
	654, 655, 0, 0, 656, 0, 711, 711, 709, 710,
	658, 659, 660, 661, 714, 0, 0, 380, 381, 382,
	711, 714, 0, 714, 714, 714, 714, 711, 711, 711,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1778, 717, 714, 0, 688, 0, 689, 690, 693, 694,
	696, 1779, 1780, 1296, 1778, 1778, 700, 704, 1248, 726,
	734, 737, 754, 752, 753, 755, 747, 748, 749, 750,
	0, 768, 769, 774, 0, 0, 0, 0, 780, 781,
	782, 0, 0, 785, 786, 787, 0, 0, 0, 0,
	0, 914, 0, 0, 980, 981, 982, 983, 984, 985,
	986, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 953, 954, 955, 956, 959, 0, 0, 0, 964,
	965, 0, 0, 0, 0, 0, 803, 0, 1122, 0,
	1006, 0, 1007, 1009, 1010, 0, 1011, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 813, 0, 0, 813, 813, 0, 0,
	208, 209, 210, 211, 212, 226, 227, 228, 229, 230,
	280, 1130, 0, 990, 0, 0, 44, 758, 759, 0,
	877, 1268, 0, 0, 809, 0, 55, 64, 66, 1149,
	59, 1149, 0, 815, 0, 0, -2, -2, 816, 822,
	823, 824, 825, 826, 52, 1776, 53, 0, 72, 0,
	46, 0, 0, 0, 0, 349, 1191, 0, 0, 1142,
	1143, 1146, 0, 830, 1598, 834, 0, 836, 837, 0,
	796, 0, 98, 0, 893, 0, 0, 0, 1716, 1246,
	0, 102, 103, 0, 0, 0, 355, 1251, 1252, 1253,
	-2, 378, 0, 355, 344, 288, 289, 290, 337, 292,
	337, 337, 337, 337, 349, 349, 349, 349, 320, 321,
	322, 323, 324, 0, 0, 307, 337, 337, 337, 337,
	327, 328, 329, 330, 331, 332, 333, 334, 293, 294,
	295, 296, 297, 298, 299, 300, 301, 339, 339, 339,
	341, 341, 0, 42, 0, 359, 0, 1146, 0, 0,
	1179, 1260, 1270, 0, 0, 0, 1260, 120, 0, 0,
	0, 534, 564, 491, 523, 535, 0, 494, 495, -2,
	0, 0, 481, 0, 483, 0, 379, 0, -2, 0,
	389, 0, 385, 389, 386, 389, 377, 390, 513, 514,
	515, 0, 517, 518, 594, 863, 0, 0, 0, 0,
	0, 600, 601, 602, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 612, 613, 524, 525, 526, 527, 528,
	529, 530, 0, 0, 0, 483, 0, 520, 0, 435,
	436, 437, 0, 0, 440, 441, 442, 443, 0, 0,
	446, 447, 448, 880, 881, 449, 450, 475, 476, 477,
	451, 452, 453, 454, 455, 456, 457, 469, 470, 471,
	472, 473, 474, 458, 459, 460, 461, 462, 463, 466,
	0, 135, 1170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1258, 0, 0, 0, 0, 812,
	895, 1281, 1282, 715, 716, 0, 383, 384, 714, 714,
	662, 701, 0, 714, 666, 702, 667, 669, 668, 670,
	683, 684, 714, 673, 712, 713, 674, 675, 676, 677,
	678, 679, 680, 697, 685, 686, 687, 718, 0, 722,
	723, 698, 699, 0, 735, 739, 740, 741, 742, 0,
	0, 771, 94, 776, 777, 778, 779, 791, 784, 992,
	911, 912, 913, 0, 915, 918, 0, 976, 978, 920,
	922, 987, 988, 989, 0, 0, 0, 0, 0, 926,
	930, 933, 934, 935, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 950, 1100, 1101, 1102, 967, 281, 282,
	0, 968, 0, 827, 0, 0, 0, 966, 0, 0,
	0, 0, 804, 805, 1128, 1125, 0, 0, 1085, 1087,
	0, 0, 0, 0, 0, 1063, 1064, 1065, 1066, 1067,
	1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077,
	1078, 1079, 1080, 1081, 1082, 1083, 1103, 0, 0, 0,
	0, 0, 1121, 0, 969, 970, 971, 0, 0, 0,
	1269, 0, 130, 131, 0, 0, 0, 0, 0, 1057,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	814, 1131, 0, -2, 0, 0, 0, 0, 0, 0,
	0, 1235, 0, 761, 762, 764, 0, 897, 0, 878,
	0, 0, 767, 0, 808, 0, 811, 58, 60, 820,
	821, 0, 838, 817, 54, 49, 0, 0, 855, 1189,
	349, 1211, 0, 353, 354, 1152, 1153, 0, 1145, 1147,
	1148, 77, 835, 831, 0, 909, 0, 0, 892, 0,
	841, 843, 844, 845, 875, 0, 848, 0, 0, 0,
	0, 0, 96, 894, 1241, 101, 0, 0, 106, 107,
	1242, 1243, 1244, 1245, 0, 553, -2, 430, 167, 169,
	170, 171, 162, -2, 347, 345, 346, 291, 349, 349,
	314, 315, 316, 317, 318, 319, 0, 0, 308, 309,
	310, 311, 302, 0, 303, 304, 305, 0, 306, 397,
	0, 1154, 360, 361, 363, 371, 0, 366, 367, 0,
	371, 371, 0, 392, 393, 0, 1146, 1170, 0, 0,
	0, 1271, 1270, 1270, 1270, 0, 155, 156, 157, 158,
	159, 160, 589, 0, 0, 565, 587, 588, 153, 0,
	0, 163, 485, 484, 0, 621, 0, 395, 0, 0,
	389, 389, 374, 375, 516, 0, 0, 596, 597, 598,
	599, 0, 0, 0, 505, 424, 0, 483, 485, 355,
	0, 438, 439, 444, 445, 464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 548, 549, 550,
	551, 552, 1167, 1168, 1169, 0, 0, 646, 0, 0,
	421, 92, 1259, 651, 711, 672, 703, 711, 664, 671,
	691, 731, 775, 0, 0, 0, 0, 783, 0, 0,
	919, 977, 979, 923, 0, 927, 931, 0, 0, 0,
	0, 0, 0, 0, 973, 997, 998, 0, 0, 1140,
	0, 1126, 0, 0, 1005, 1088, 1089, 0, 0, 0,
	0, 0, 1016, 1017, 1018, 1019, 1020, 0, 1022, 0,
	0, 0, 1026, 1027, 0, 0, 1028, 0, 0, 0,
	0, 0, 0, 0, 0, 1040, 1041, 1042, 1043, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1054,
	993, 0, 0, 813, 0, 1090, 1091, 1092, 1093, 1094,
	1131, 760, 763, 765, 851, 898, 899, 0, 0, 0,
	0, 879, 1267, 806, 807, 810, -2, 0, 0, 1133,
	0, 0, 838, 909, 839, 0, 818, 51, 854, 0,
	1193, 1192, 1205, 1218, 350, 351, 352, 1144, 0, 1149,
	0, 1229, 0, 0, 1221, 0, 0, 0, 0, 0,
	0, 0, 0, 882, 0, 0, 885, 0, 0, 0,
	0, 876, 0, 0, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 356, 357, 144, 153, 432, 168, 405, 0, 0,
	287, 348, 312, 313, 0, 335, 0, 0, 0, 426,
	116, 1158, 1157, 371, 371, 362, 0, 365, 0, 0,
	0, 1272, 338, 394, 0, 134, 0, 0, 0, 0,
	0, 140, 559, 0, 0, 566, 0, 0, 0, 489,
	0, 500, 501, 0, 593, -2, 642, 359, 0, 373,
	376, 864, 0, 0, 502, 0, 425, 485, 507, 508,
	521, 467, 468, 465, 0, 0, 1180, 1181, 1186, 1184,
	1185, 121, 541, 543, 542, 546, 0, 0, 539, 0,
	421, 1154, 0, 650, 422, 423, 714, 714, 770, 95,
	0, 773, 0, 0, 0, 0, 924, 928, 828, 0,
	0, 337, 337, 1108, 337, 341, 1111, 337, 1113, 337,
	1116, 337, 1119, 1120, 0, 0, 0, 0, 1123, 1004,
	1129, 0, 0, 0, 0, 1015, 0, 0, 0, 0,
	0, 0, 132, 133, 1057, 0, 0, 1059, 1061, 1062,
	1032, 1058, 0, 0, 1055, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 994, 995, 0, 1132, 900,
	905, 905, 905, 0, 0, 0, 1254, 1255, 1134, 1135,
	909, 1136, 840, 819, 856, 1211, 0, 1204, 0, -2,
	1213, 0, 0, 0, 1219, 832, 78, 910, 81, 0,
	1229, 1237, 0, 1220, 1231, 1233, 0, 0, 0, 1225,
	0, 909, 842, 871, 873, 0, 868, 883, 884, 886,
	0, 888, 0, 890, 891, 853, 847, 849, 0, 0,
	0, 98, 0, 909, 909, 97, 0, 896, 108, 109,
	110, 431, 172, 177, 0, 0, 0, 182, 0, 184,
	0, 0, 0, 189, 190, 371, 371, 406, 0, 284,
	286, 0, 0, 175, 349, 0, 349, 0, 342, 0,
	407, 427, 1155, 1156, 0, 0, 364, 368, 369, 370,
	0, 1261, 136, 0, 0, 0, 562, 0, 590, 0,
	0, 0, 0, 0, 0, 164, 486, 622, 623, 624,
	625, 626, 627, 628, 629, 0, 371, 0, 0, 0,
	371, 371, 371, 634, 358, 0, 0, 618, 615, 503,
	0, 213, 214, 216, 0, 0, 506, 853, 1171, 1172,
	1173, 0, 1183, 1187, 124, 0, 0, 0, 0, 647,
	648, 649, 93, 657, 663, 772, 792, 917, 925, 929,
	0, 961, 1106, 349, 1109, 1110, 1112, 1114, 1115, 1117,
	1118, 962, 963, 0, 1000, 0, 1002, 1149, 0, 1127,
	0, 0, 1014, 0, 0, 0, 1023, 1024, 1025, 0,
	0, 1031, 0, 1033, 0, 0, 0, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 996, 0, 0,
	0, 0, 877, -2, 62, 1136, 1138, 0, 1198, 1196,
	1196, 1206, 1207, 0, 0, 1214, 0, 0, 0, 0,
	82, 0, 0, 0, 1234, 0, 0, 0, 0, 99,
	1140, 865, 872, 0, 0, 866, 0, 867, 887, 889,
	846, -2, 850, 0, 909, 909, 88, 89, 0, 178,
	0, 180, 206, 207, 0, 183, 185, 186, 187, 193,
	194, 195, 188, 0, 0, 283, 285, 0, 0, 325,
	336, 326, 0, 0, 1159, 1160, 1161, 1162, 1163, 1164,
	1165, 853, 137, 138, 139, 554, 0, 564, 0, 0,
	0, 557, 0, 492, 0, 0, 0, 371, 371, 371,
	0, 0, 0, 0, 595, 0, 603, 0, 0, 0,
	217, 218, 0, 1182, 540, 0, 122, 123, 0, 0,
	545, 1095, 1107, 0, 0, 0, 1124, 0, 0, 0,
	0, 1021, 1029, 0, 1060, 0, 1036, 0, 0, 0,
	584, 585, 0, 1056, 0, 906, 0, 0, 0, 0,
	897, 1138, 80, 0, 0, 1201, 0, 1194, 1197, 1195,
	1208, 0, 0, 1215, 0, 1217, 0, 1238, 1239, 1232,
	0, 1224, 1227, 1223, 1226, 1149, 869, 0, 874, 0,
	1140, 87, 0, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 191, 192, 0, 0,
	340, 343, 0, 0, 0, 555, 0, 567, 558, 0,
	632, 0, 636, 0, 0, 0, 639, 640, 641, 399,
	619, 616, 617, 504, 0, 125, 126, 0, 0, 0,
	0, 0, 0, 999, 1001, 1003, 1012, 1013, 1104, 1105,
	1030, 1034, 0, 1037, 0, 0, 1038, 0, 586, 0,
	902, 859, 860, 907, 908, 0, 0, 852, 79, 1139,
	1137, 1190, 0, 1199, 1200, 1209, 1210, 1216, 0, 1222,
	0, 85, 0, 0, 0, 1149, 179, 0, 198, 0,
	563, 0, 566, 556, 630, 631, 0, 643, 635, 637,
	638, 1174, 0, 0, 0, 547, 960, 0, 0, 0,
	1057, 1039, 0, 582, 583, 0, 901, 903, 904, 1202,
	1203, 1230, 1228, 870, 877, 0, 86, 412, 405, 1174,
	0, 0, 0, 537, 1176, 127, 128, 478, 479, 480,
	121, 1096, 0, 1099, 0, 861, 862, 568, 0, 570,
	0, -2, 400, 413, 0, 173, 199, 200, 0, 0,
	203, 204, 205, 196, 197, 117, 0, 0, 644, 0,
	1177, 1178, 124, 1097, 1035, 569, 0, 0, 355, 0,
	579, 401, 402, 0, 408, 409, 410, 411, 201, 202,
	591, 0, 0, 544, 0, 571, 572, 580, 0, 403,
	0, 404, 0, 0, 0, 560, 0, 591, 1175, 0,
	0, 581, 577, 414, 416, 417, 0, 0, 415, 592,
	561, 1098, 0, 418, 419, 420, 573, 574, 575, 576,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 140, 3, 3, 3, 166, 158, 3,
	85, 87, 163, 161, 86, 162, 216, 164, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 604,
	148, 147, 149, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 136, 3, 169,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 137, 138, 139, 141, 142, 143, 144, 145, 146,
	150, 151, 152, 153, 154, 155, 156, 157, 159, 160,
	165, 167, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:521
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:526
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:531
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:567
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:573
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:586
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:596
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:602
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:608
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:612
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:621
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:627
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:631
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:637
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:685
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:711
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:715
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:721
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:752
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:766
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:771
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:777
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:783
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:796
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:804
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:808
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:816
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:828
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:840
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:844
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:850
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:868
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:873
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:874
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:878
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:882
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:888
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:892
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:898
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:907
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:911
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:923
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:933
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:943
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:947
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:951
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:957
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:961
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:965
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:969
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:975
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:979
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:985
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:991
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:998
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1011
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1018
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1022
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1027
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1031
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1042
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1047
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1053
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1064
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1069
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1073
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1079
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1083
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1095
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1102
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1109
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1114
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1119
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1124
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1131
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1138
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1149
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1156
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1160
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1166
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1170
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1174
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1182
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1186
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1202
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1206
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1212
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1216
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1222
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1232
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1236
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1242
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1246
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1252
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1257
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1262
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1266
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1271
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1275
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1290
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1299
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1308
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1321
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1337
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1342
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1352
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1357
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1371
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1380
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1385
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1391
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1397
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1401
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1407
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1411
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1415
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1421
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1425
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1430
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1434
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1439
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1445
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1456
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1461
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1467
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1475
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1482
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1486
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1490
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1494
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1498
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1509
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1516
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1520
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1530
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1534
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1538
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1542
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1546
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1550
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1555
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1563
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1567
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1571
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1590
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1606
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1622
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1626
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1630
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1634
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1714
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1718
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1734
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1738
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1752
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1756
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1760
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1766
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1770
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1774
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1780
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1784
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1791
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1795
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1799
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1803
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1893
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1943
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1951
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1955
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2030
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2034
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2039
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2043
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2051
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2055
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2061
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2069
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2073
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2082
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2086
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = ""
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2099
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2112
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2118
		{
			yyVAL.str = ""
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2122
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2126
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2133
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2138
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2142
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2148
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2158
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2162
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2167
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2171
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2175
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2179
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2183
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2187
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2193
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2197
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2203
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2207
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2211
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2215
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2219
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2224
		{
			yyVAL.str = ""
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2228
		{
			yyVAL.str = yyDollar[2].str
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2249
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2253
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2258
		{
			yyVAL.str = "key"
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2262
		{
			yyVAL.str = yyDollar[1].str
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2277
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2287
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2297
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2301
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2307
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2311
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2317
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2321
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2327
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2333
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2337
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2341
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2345
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2349
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2354
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2358
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2364
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2370
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2376
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2380
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2384
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2389
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2393
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2399
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2405
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2411
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2415
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2419
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2423
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2427
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2440
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2446
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2450
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2455
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2459
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2468
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2474
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2488
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2492
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2498
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2502
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2506
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2510
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2514
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2518
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2522
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2526
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2530
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2534
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2538
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2542
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2546
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2550
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2554
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2558
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2562
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2566
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2570
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2574
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2578
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2582
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2586
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2590
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2594
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2598
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2602
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2606
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2610
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2614
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2618
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2623
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2627
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2631
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2669
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2673
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2678
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2682
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2687
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2691
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2695
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2699
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 492:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2707
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2713
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2721
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2727
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2731
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2735
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2739
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2743
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2747
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2751
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2755
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2759
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2763
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2767
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2771
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2775
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2779
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2783
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2787
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2791
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2795
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2799
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2803
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2807
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2811
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2815
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2819
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2823
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2827
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2833
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2843
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2847
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2851
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2855
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2859
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2863
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2867
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2871
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2875
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2881
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2888
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2895
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2902
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2908
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2918
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2925
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2932
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2944
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2954
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2958
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2962
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2975
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2985
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2989
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3000
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3007
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3021
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3028
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3039
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3048
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3056
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3065
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3072
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3080
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3084
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3093
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3108
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3113
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3117
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3122
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3126
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3132
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3138
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3144
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3148
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3154
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3158
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3164
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3170
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3176
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3182
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3188
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3192
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3196
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3206
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3212
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3218
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3222
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3226
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3232
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3236
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3241
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3245
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3250
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3254
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3260
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3264
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3268
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3272
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3276
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3280
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3284
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3288
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3292
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3296
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3300
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3304
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3308
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3312
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3316
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3320
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3324
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3328
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3332
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3336
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3340
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3344
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3364
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3368
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3379
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3383
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3388
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3393
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3398
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3403
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3408
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3414
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3420
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3427
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3434
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3441
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3449
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3453
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3459
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3465
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3471
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3477
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3483
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3489
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3495
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3501
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = ""
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = ""
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3517
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3523
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3527
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 648:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3533
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3537
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3546
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3550
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3556
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3560
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3565
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3583
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3587
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3591
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3595
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3603
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3607
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3619
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3623
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3627
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3631
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3635
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3639
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3643
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3647
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3651
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3655
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3659
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3663
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3667
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3671
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3675
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3679
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3687
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3691
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3699
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3703
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3707
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3711
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3715
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3719
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3723
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3727
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3731
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3738
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3742
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3750
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3754
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3758
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3770
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = "extended "
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3786
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3790
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 710:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3806
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3810
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3814
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3824
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3828
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3838
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3844
		{
			yyVAL.empty = struct{}{}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3848
		{
			yyVAL.empty = struct{}{}
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3852
		{
			yyVAL.empty = struct{}{}
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3882
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3886
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3898
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3902
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3907
		{
			yyVAL.empty = struct{}{}
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3912
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3914
		{
			yyVAL.empty = struct{}{}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3925
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3930
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3934
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3938
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3942
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3946
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3950
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = yyDollar[1].str
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = yyDollar[1].str
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3964
		{
			yyVAL.str = yyDollar[1].str
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3982
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = ""
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4021
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4027
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4031
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4037
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4043
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4047
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4051
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4055
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4061
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4067
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4073
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4077
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4081
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4085
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4089
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4093
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4099
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 778:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4121
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4137
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4141
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4145
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4153
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4158
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4166
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = ""
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4175
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4180
		{
			setAllowComments(yylex, true)
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4184
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4190
		{
			yyVAL.strs = nil
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4194
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4200
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4208
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = ""
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = SQLCacheStr
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4226
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4230
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4234
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4244
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4261
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4265
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4271
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4275
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4284
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4289
		{
			yyVAL.strs = nil
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4293
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4297
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4305
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4311
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = SQLCacheStr
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = DistinctStr
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = DistinctStr
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4327
		{
			yyVAL.str = StraightJoinHint
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4331
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4341
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4345
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4351
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4355
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4359
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4363
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4368
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4372
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4388
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4392
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4398
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4404
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4408
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4418
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4422
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4426
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4430
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4436
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4440
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4446
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4450
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4459
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4465
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4469
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4475
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4479
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4485
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4489
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4493
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4497
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4503
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4507
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4520
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4524
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4528
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4532
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4538
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4540
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4544
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4550
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4552
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4555
		{
			yyVAL.empty = struct{}{}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4557
		{
			yyVAL.empty = struct{}{}
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4560
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4564
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4568
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4575
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4581
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4585
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4589
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4595
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4601
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4605
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4609
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4613
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4619
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4623
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4633
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4637
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4643
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4647
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4653
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4662
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4668
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4672
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 901:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4678
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4682
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4686
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4690
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4695
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4699
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4703
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4707
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4717
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4724
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4728
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4732
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4736
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4740
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4744
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4748
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4755
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4759
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4763
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4767
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4773
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4777
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4781
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4785
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4789
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4793
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4797
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4801
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4805
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4809
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4813
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4819
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4823
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4839
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4859
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4863
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4867
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4873
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4877
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4881
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4885
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4897
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4901
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4905
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4909
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4913
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4917
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4921
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4925
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4929
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4933
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4937
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4941
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4945
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4953
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4957
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4965
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4969
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4975
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4979
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4983
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4989
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4993
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4999
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5003
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5010
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5014
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5018
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5022
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5028
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5032
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5036
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5040
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5044
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5048
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5052
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5058
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5062
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5066
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5073
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5079
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5083
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 993:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5093
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5097
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5101
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5105
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5115
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5135
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5139
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5233
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5249
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5253
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5257
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5261
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5265
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5269
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5273
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5277
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5281
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5285
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5297
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5301
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5305
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5309
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5313
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5317
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5321
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5325
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5329
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5333
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5337
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5341
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5353
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5358
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5362
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5367
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5371
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5377
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5381
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5387
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5391
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5397
		{
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5399
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5403
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5407
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5411
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5415
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5419
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5423
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5427
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5431
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5435
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5439
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5445
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5449
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5453
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5457
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5461
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5465
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5469
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5473
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5477
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5491
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5495
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5499
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5510
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5514
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5518
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5522
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5526
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5532
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5536
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5540
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5544
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5548
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5554
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5558
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5562
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5572
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5576
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5582
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5586
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5590
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5594
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5598
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5604
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5608
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5612
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5616
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5620
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5624
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5628
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5632
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5636
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5640
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5650
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5655
		{
			yyVAL.str = string("")
		}
	case 1124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5659
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5665
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5669
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5675
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5684
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5690
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5694
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5698
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5713
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5717
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5723
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5727
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5745
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5751
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5757
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5761
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5767
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5772
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5776
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5780
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5789
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5795
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5799
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5803
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5808
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5812
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5816
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5820
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5824
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5831
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5835
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5839
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5843
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5849
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5853
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5857
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5862
		{
			yyVAL.str = ""
		}
	case 1167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5866
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5870
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5874
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5879
		{
			yyVAL.str = ""
		}
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5883
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5898
		{
			yyVAL.str = ""
		}
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5902
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5907
		{
			yyVAL.str = "cascaded"
		}
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5911
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5915
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1179:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5920
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5924
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5930
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5936
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5942
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5951
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5955
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5960
		{
			yyVAL.str = ""
		}
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5964
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5970
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5974
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5980
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5984
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5988
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5993
		{
			yyVAL.str = ""
		}
	case 1194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5997
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6001
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6006
		{
			yyVAL.str = ""
		}
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6010
		{
			yyVAL.str = " header"
		}
	case 1198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6015
		{
			yyVAL.str = ""
		}
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6019
		{
			yyVAL.str = " manifest on"
		}
	case 1200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6023
		{
			yyVAL.str = " manifest off"
		}
	case 1201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6028
		{
			yyVAL.str = ""
		}
	case 1202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6032
		{
			yyVAL.str = " overwrite on"
		}
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6036
		{
			yyVAL.str = " overwrite off"
		}
	case 1204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6042
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6047
		{
			yyVAL.str = ""
		}
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6051
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6057
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6061
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6067
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6071
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6076
		{
			yyVAL.str = ""
		}
	case 1212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6080
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6086
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6090
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6096
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1216:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6100
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6104
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6109
		{
			yyVAL.str = ""
		}
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6113
		{
			yyVAL.str = " optionally"
		}
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6126
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6130
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6134
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6138
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6142
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6148
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6152
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6156
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6160
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6165
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6169
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6175
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6179
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6185
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6189
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6195
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6200
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6210
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6214
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6220
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6226
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6230
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6236
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6240
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6244
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6248
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6252
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6260
		{
			yyVAL.str = "charset"
		}
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6270
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6274
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6278
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6287
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6292
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6294
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6299
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6302
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6304
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6307
		{
			yyVAL.empty = struct{}{}
		}
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6309
		{
			yyVAL.empty = struct{}{}
		}
	case 1266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6311
		{
			yyVAL.empty = struct{}{}
		}
	case 1267:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6315
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6324
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6329
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6331
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6335
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6341
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6345
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6352
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6358
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6362
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6368
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6372
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6379
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6896
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6905
		{
			decNesting(yylex)
		}
	case 1777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6910
		{
			skipToEnd(yylex)
		}
	case 1778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6915
		{
			skipToEnd(yylex)
		}
	case 1779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6919
		{
			skipToEnd(yylex)
		}
	case 1780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6923
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
