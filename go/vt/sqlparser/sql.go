// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const JSON_PRETTY = 57441
const JSON_STORAGE_SIZE = 57442
const JSON_STORAGE_FREE = 57443
const JSON_CONTAINS = 57444
const JSON_CONTAINS_PATH = 57445
const JSON_EXTRACT = 57446
const JSON_KEYS = 57447
const JSON_OVERLAPS = 57448
const JSON_SEARCH = 57449
const JSON_VALUE = 57450
const EXTRACT = 57451
const NULL = 57452
const TRUE = 57453
const FALSE = 57454
const OFF = 57455
const DISCARD = 57456
const IMPORT = 57457
const ENABLE = 57458
const DISABLE = 57459
const TABLESPACE = 57460
const VIRTUAL = 57461
const STORED = 57462
const BOTH = 57463
const LEADING = 57464
const TRAILING = 57465
const EMPTY_FROM_CLAUSE = 57466
const LOWER_THAN_CHARSET = 57467
const CHARSET = 57468
const MEMBER = 57469
const UNIQUE = 57470
const KEY = 57471
const EXPRESSION_PREC_SETTER = 57472
const OR = 57473
const XOR = 57474
const AND = 57475
const NOT = 57476
const BETWEEN = 57477
const CASE = 57478
const WHEN = 57479
const THEN = 57480
const ELSE = 57481
const END = 57482
const LE = 57483
const GE = 57484
const NE = 57485
const NULL_SAFE_EQUAL = 57486
const IS = 57487
const LIKE = 57488
const REGEXP = 57489
const IN = 57490
const SHIFT_LEFT = 57491
const SHIFT_RIGHT = 57492
const DIV = 57493
const MOD = 57494
const UNARY = 57495
const COLLATE = 57496
const BINARY = 57497
const UNDERSCORE_ARMSCII8 = 57498
const UNDERSCORE_ASCII = 57499
const UNDERSCORE_BIG5 = 57500
const UNDERSCORE_BINARY = 57501
const UNDERSCORE_CP1250 = 57502
const UNDERSCORE_CP1251 = 57503
const UNDERSCORE_CP1256 = 57504
const UNDERSCORE_CP1257 = 57505
const UNDERSCORE_CP850 = 57506
const UNDERSCORE_CP852 = 57507
const UNDERSCORE_CP866 = 57508
const UNDERSCORE_CP932 = 57509
const UNDERSCORE_DEC8 = 57510
const UNDERSCORE_EUCJPMS = 57511
const UNDERSCORE_EUCKR = 57512
const UNDERSCORE_GB18030 = 57513
const UNDERSCORE_GB2312 = 57514
const UNDERSCORE_GBK = 57515
const UNDERSCORE_GEOSTD8 = 57516
const UNDERSCORE_GREEK = 57517
const UNDERSCORE_HEBREW = 57518
const UNDERSCORE_HP8 = 57519
const UNDERSCORE_KEYBCS2 = 57520
const UNDERSCORE_KOI8R = 57521
const UNDERSCORE_KOI8U = 57522
const UNDERSCORE_LATIN1 = 57523
const UNDERSCORE_LATIN2 = 57524
const UNDERSCORE_LATIN5 = 57525
const UNDERSCORE_LATIN7 = 57526
const UNDERSCORE_MACCE = 57527
const UNDERSCORE_MACROMAN = 57528
const UNDERSCORE_SJIS = 57529
const UNDERSCORE_SWE7 = 57530
const UNDERSCORE_TIS620 = 57531
const UNDERSCORE_UCS2 = 57532
const UNDERSCORE_UJIS = 57533
const UNDERSCORE_UTF16 = 57534
const UNDERSCORE_UTF16LE = 57535
const UNDERSCORE_UTF32 = 57536
const UNDERSCORE_UTF8 = 57537
const UNDERSCORE_UTF8MB4 = 57538
const INTERVAL = 57539
const JSON_EXTRACT_OP = 57540
const JSON_UNQUOTE_EXTRACT_OP = 57541
const CREATE = 57542
const ALTER = 57543
const DROP = 57544
const RENAME = 57545
const ANALYZE = 57546
const ADD = 57547
const FLUSH = 57548
const CHANGE = 57549
const MODIFY = 57550
const DEALLOCATE = 57551
const REVERT = 57552
const SCHEMA = 57553
const TABLE = 57554
const INDEX = 57555
const VIEW = 57556
const TO = 57557
const IGNORE = 57558
const IF = 57559
const PRIMARY = 57560
const COLUMN = 57561
const SPATIAL = 57562
const FULLTEXT = 57563
const KEY_BLOCK_SIZE = 57564
const CHECK = 57565
const INDEXES = 57566
const ACTION = 57567
const CASCADE = 57568
const CONSTRAINT = 57569
const FOREIGN = 57570
const NO = 57571
const REFERENCES = 57572
const RESTRICT = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const COALESCE = 57582
const EXCHANGE = 57583
const REBUILD = 57584
const PARTITIONING = 57585
const REMOVE = 57586
const PREPARE = 57587
const EXECUTE = 57588
const MAXVALUE = 57589
const PARTITION = 57590
const REORGANIZE = 57591
const LESS = 57592
const THAN = 57593
const PROCEDURE = 57594
const TRIGGER = 57595
const VINDEX = 57596
const VINDEXES = 57597
const DIRECTORY = 57598
const NAME = 57599
const UPGRADE = 57600
const STATUS = 57601
const VARIABLES = 57602
const WARNINGS = 57603
const CASCADED = 57604
const DEFINER = 57605
const OPTION = 57606
const SQL = 57607
const UNDEFINED = 57608
const SEQUENCE = 57609
const MERGE = 57610
const TEMPORARY = 57611
const TEMPTABLE = 57612
const INVOKER = 57613
const SECURITY = 57614
const FIRST = 57615
const AFTER = 57616
const LAST = 57617
const VITESS_MIGRATION = 57618
const CANCEL = 57619
const RETRY = 57620
const COMPLETE = 57621
const CLEANUP = 57622
const BEGIN = 57623
const START = 57624
const TRANSACTION = 57625
const COMMIT = 57626
const ROLLBACK = 57627
const SAVEPOINT = 57628
const RELEASE = 57629
const WORK = 57630
const BIT = 57631
const TINYINT = 57632
const SMALLINT = 57633
const MEDIUMINT = 57634
const INT = 57635
const INTEGER = 57636
const BIGINT = 57637
const INTNUM = 57638
const REAL = 57639
const DOUBLE = 57640
const FLOAT_TYPE = 57641
const DECIMAL_TYPE = 57642
const NUMERIC = 57643
const TIME = 57644
const TIMESTAMP = 57645
const DATETIME = 57646
const YEAR = 57647
const CHAR = 57648
const VARCHAR = 57649
const BOOL = 57650
const CHARACTER = 57651
const VARBINARY = 57652
const NCHAR = 57653
const TEXT = 57654
const TINYTEXT = 57655
const MEDIUMTEXT = 57656
const LONGTEXT = 57657
const BLOB = 57658
const TINYBLOB = 57659
const MEDIUMBLOB = 57660
const LONGBLOB = 57661
const JSON = 57662
const JSON_SCHEMA_VALID = 57663
const JSON_SCHEMA_VALIDATION_REPORT = 57664
const ENUM = 57665
const GEOMETRY = 57666
const POINT = 57667
const LINESTRING = 57668
const POLYGON = 57669
const GEOMETRYCOLLECTION = 57670
const MULTIPOINT = 57671
const MULTILINESTRING = 57672
const MULTIPOLYGON = 57673
const ASCII = 57674
const UNICODE = 57675
const NULLX = 57676
const AUTO_INCREMENT = 57677
const APPROXNUM = 57678
const SIGNED = 57679
const UNSIGNED = 57680
const ZEROFILL = 57681
const CODE = 57682
const COLLATION = 57683
const COLUMNS = 57684
const DATABASES = 57685
const ENGINES = 57686
const EVENT = 57687
const EXTENDED = 57688
const FIELDS = 57689
const FULL = 57690
const FUNCTION = 57691
const GTID_EXECUTED = 57692
const KEYSPACES = 57693
const OPEN = 57694
const PLUGINS = 57695
const PRIVILEGES = 57696
const PROCESSLIST = 57697
const SCHEMAS = 57698
const TABLES = 57699
const TRIGGERS = 57700
const USER = 57701
const VGTID_EXECUTED = 57702
const VITESS_KEYSPACES = 57703
const VITESS_METADATA = 57704
const VITESS_MIGRATIONS = 57705
const VITESS_REPLICATION_STATUS = 57706
const VITESS_SHARDS = 57707
const VITESS_TABLETS = 57708
const VITESS_TARGET = 57709
const VSCHEMA = 57710
const NAMES = 57711
const GLOBAL = 57712
const SESSION = 57713
const ISOLATION = 57714
const LEVEL = 57715
const READ = 57716
const WRITE = 57717
const ONLY = 57718
const REPEATABLE = 57719
const COMMITTED = 57720
const UNCOMMITTED = 57721
const SERIALIZABLE = 57722
const CURRENT_TIMESTAMP = 57723
const DATABASE = 57724
const CURRENT_DATE = 57725
const CURRENT_TIME = 57726
const LOCALTIME = 57727
const LOCALTIMESTAMP = 57728
const CURRENT_USER = 57729
const UTC_DATE = 57730
const UTC_TIME = 57731
const UTC_TIMESTAMP = 57732
const DAY = 57733
const DAY_HOUR = 57734
const DAY_MICROSECOND = 57735
const DAY_MINUTE = 57736
const DAY_SECOND = 57737
const HOUR = 57738
const HOUR_MICROSECOND = 57739
const HOUR_MINUTE = 57740
const HOUR_SECOND = 57741
const MICROSECOND = 57742
const MINUTE = 57743
const MINUTE_MICROSECOND = 57744
const MINUTE_SECOND = 57745
const MONTH = 57746
const QUARTER = 57747
const SECOND = 57748
const SECOND_MICROSECOND = 57749
const YEAR_MONTH = 57750
const WEEK = 57751
const REPLACE = 57752
const CONVERT = 57753
const CAST = 57754
const SUBSTR = 57755
const SUBSTRING = 57756
const GROUP_CONCAT = 57757
const SEPARATOR = 57758
const TIMESTAMPADD = 57759
const TIMESTAMPDIFF = 57760
const WEIGHT_STRING = 57761
const LTRIM = 57762
const RTRIM = 57763
const TRIM = 57764
const JSON_ARRAY = 57765
const JSON_OBJECT = 57766
const JSON_QUOTE = 57767
const MATCH = 57768
const AGAINST = 57769
const BOOLEAN = 57770
const LANGUAGE = 57771
const WITH = 57772
const QUERY = 57773
const EXPANSION = 57774
const WITHOUT = 57775
const VALIDATION = 57776
const UNUSED = 57777
const ARRAY = 57778
const CUME_DIST = 57779
const DESCRIPTION = 57780
const DENSE_RANK = 57781
const EMPTY = 57782
const EXCEPT = 57783
const FIRST_VALUE = 57784
const GROUPING = 57785
const GROUPS = 57786
const JSON_TABLE = 57787
const LAG = 57788
const LAST_VALUE = 57789
const LATERAL = 57790
const LEAD = 57791
const NTH_VALUE = 57792
const NTILE = 57793
const OF = 57794
const OVER = 57795
const PERCENT_RANK = 57796
const RANK = 57797
const RECURSIVE = 57798
const ROW_NUMBER = 57799
const SYSTEM = 57800
const WINDOW = 57801
const ACTIVE = 57802
const ADMIN = 57803
const BUCKETS = 57804
const CLONE = 57805
const COMPONENT = 57806
const DEFINITION = 57807
const ENFORCED = 57808
const EXCLUDE = 57809
const FOLLOWING = 57810
const GEOMCOLLECTION = 57811
const GET_MASTER_PUBLIC_KEY = 57812
const HISTOGRAM = 57813
const HISTORY = 57814
const INACTIVE = 57815
const INVISIBLE = 57816
const LOCKED = 57817
const MASTER_COMPRESSION_ALGORITHMS = 57818
const MASTER_PUBLIC_KEY_PATH = 57819
const MASTER_TLS_CIPHERSUITES = 57820
const MASTER_ZSTD_COMPRESSION_LEVEL = 57821
const NESTED = 57822
const NETWORK_NAMESPACE = 57823
const NOWAIT = 57824
const NULLS = 57825
const OJ = 57826
const OLD = 57827
const OPTIONAL = 57828
const ORDINALITY = 57829
const ORGANIZATION = 57830
const OTHERS = 57831
const PATH = 57832
const PERSIST = 57833
const PERSIST_ONLY = 57834
const PRECEDING = 57835
const PRIVILEGE_CHECKS_USER = 57836
const PROCESS = 57837
const RANDOM = 57838
const REFERENCE = 57839
const REQUIRE_ROW_FORMAT = 57840
const RESOURCE = 57841
const RESPECT = 57842
const RESTART = 57843
const RETAIN = 57844
const REUSE = 57845
const ROLE = 57846
const SECONDARY = 57847
const SECONDARY_ENGINE = 57848
const SECONDARY_LOAD = 57849
const SECONDARY_UNLOAD = 57850
const SKIP = 57851
const SRID = 57852
const THREAD_PRIORITY = 57853
const TIES = 57854
const UNBOUNDED = 57855
const VCPU = 57856
const VISIBLE = 57857
const FORMAT = 57858
const TREE = 57859
const VITESS = 57860
const TRADITIONAL = 57861
const LOCAL = 57862
const LOW_PRIORITY = 57863
const NO_WRITE_TO_BINLOG = 57864
const LOGS = 57865
const ERROR = 57866
const GENERAL = 57867
const HOSTS = 57868
const OPTIMIZER_COSTS = 57869
const USER_RESOURCES = 57870
const SLOW = 57871
const CHANNEL = 57872
const RELAY = 57873
const EXPORT = 57874
const AVG_ROW_LENGTH = 57875
const CONNECTION = 57876
const CHECKSUM = 57877
const DELAY_KEY_WRITE = 57878
const ENCRYPTION = 57879
const ENGINE = 57880
const INSERT_METHOD = 57881
const MAX_ROWS = 57882
const MIN_ROWS = 57883
const PACK_KEYS = 57884
const PASSWORD = 57885
const FIXED = 57886
const DYNAMIC = 57887
const COMPRESSED = 57888
const REDUNDANT = 57889
const COMPACT = 57890
const ROW_FORMAT = 57891
const STATS_AUTO_RECALC = 57892
const STATS_PERSISTENT = 57893
const STATS_SAMPLE_PAGES = 57894
const STORAGE = 57895
const MEMORY = 57896
const DISK = 57897
const PARTITIONS = 57898
const LINEAR = 57899
const RANGE = 57900
const LIST = 57901
const SUBPARTITION = 57902
const SUBPARTITIONS = 57903
const HASH = 57904

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"MEMBER",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	580, 145,
	-2, 151,
	-1, 48,
	129, 151,
	170, 151,
	326, 151,
	-2, 454,
	-1, 55,
	33, 652,
	230, 652,
	241, 652,
	276, 666,
	277, 666,
	-2, 654,
	-1, 60,
	232, 679,
	-2, 677,
	-1, 114,
	229, 1183,
	-2, 119,
	-1, 116,
	1, 146,
	580, 146,
	-2, 151,
	-1, 126,
	131, 357,
	235, 357,
	-2, 448,
	-1, 145,
	129, 151,
	170, 151,
	326, 151,
	-2, 463,
	-1, 648,
	214, 1204,
	-2, 1200,
	-1, 649,
	214, 1205,
	-2, 1201,
	-1, 723,
	57, 747,
	-2, 762,
	-1, 760,
	146, 1588,
	-2, 112,
	-1, 761,
	146, 1447,
	-2, 113,
	-1, 767,
	146, 1517,
	-2, 1177,
	-1, 914,
	146, 1378,
	-2, 1174,
	-1, 952,
	240, 41,
	245, 41,
	-2, 368,
	-1, 1029,
	1, 502,
	580, 502,
	-2, 151,
	-1, 1251,
	57, 748,
	-2, 767,
	-1, 1252,
	57, 749,
	-2, 768,
	-1, 1305,
	129, 151,
	170, 151,
	326, 151,
	-2, 398,
	-1, 1382,
	131, 357,
	235, 357,
	-2, 448,
	-1, 1391,
	240, 42,
	245, 42,
	-2, 369,
	-1, 1676,
	214, 1209,
	-2, 1203,
	-1, 1759,
	129, 151,
	170, 151,
	326, 151,
	-2, 399,
	-1, 1766,
	23, 170,
	-2, 172,
	-1, 1984,
	84, 39,
	-2, 804,
	-1, 2036,
	75, 94,
	84, 94,
	-2, 824,
	-1, 2224,
	47, 1145,
	-2, 1139,
	-1, 2405,
	84, 39,
	-2, 805,
	-1, 2443,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 796,
	-1, 2706,
	20, 1519,
	30, 1519,
	171, 1519,
	252, 1519,
	306, 1519,
	307, 1519,
	308, 1519,
	309, 1519,
	310, 1519,
	311, 1519,
	312, 1519,
	314, 1519,
	315, 1519,
	316, 1519,
	317, 1519,
	318, 1519,
	319, 1519,
	320, 1519,
	321, 1519,
	322, 1519,
	323, 1519,
	324, 1519,
	325, 1519,
	327, 1519,
	329, 1519,
	330, 1519,
	331, 1519,
	332, 1519,
	333, 1519,
	334, 1519,
	335, 1519,
	336, 1519,
	337, 1519,
	340, 1519,
	341, 1519,
	342, 1519,
	343, 1519,
	344, 1519,
	345, 1519,
	346, 1519,
	347, 1519,
	348, 1519,
	445, 1519,
	-2, 542,
}

const yyPrivate = 57344

const yyLast = 39846

var yyAct = [...]int{
	648, 2193, 2772, 657, 2771, 2754, 2648, 650, 2748, 1756,
	2347, 2504, 2704, 1308, 2708, 2277, 2688, 1690, 2284, 1953,
	1092, 2238, 1710, 2607, 642, 37, 2624, 738, 2318, 3,
	1230, 2235, 2330, 1819, 96, 2534, 716, 1972, 2329, 2286,
	581, 2007, 2236, 2539, 585, 643, 1266, 2239, 2414, 2191,
	2192, 182, 2408, 578, 182, 651, 546, 182, 640, 1714,
	641, 607, 561, 1729, 182, 2332, 1999, 2225, 2434, 2030,
	2233, 2068, 182, 2400, 2097, 1789, 579, 1041, 577, 2138,
	1809, 1794, 2069, 154, 2070, 982, 1745, 182, 36, 2019,
	38, 1253, 1974, 917, 1734, 1590, 1362, 1991, 573, 739,
	765, 1733, 720, 1660, 724, 1389, 1670, 2155, 140, 561,
	1808, 718, 561, 182, 561, 1600, 1828, 1796, 1861, 2062,
	942, 1297, 741, 1275, 590, 1692, 947, 1548, 2038, 762,
	1405, 1736, 1233, 91, 1177, 1612, 1567, 95, 1497, 1493,
	1113, 924, 921, 1806, 953, 1721, 1396, 1479, 948, 925,
	949, 1785, 1280, 950, 1296, 730, 1294, 1715, 1656, 1502,
	1084, 157, 1090, 117, 960, 118, 1357, 752, 725, 123,
	726, 98, 1381, 728, 124, 1683, 85, 1025, 1180, 1070,
	1184, 2657, 568, 2090, 89, 2755, 1821, 1822, 1823, 1821,
	76, 2315, 97, 2117, 2116, 1859, 2088, 727, 77, 1465,
	8, 7, 6, 2146, 2147, 2781, 2782, 2775, 1555, 119,
	1687, 1688, 90, 518, 184, 185, 186, 1554, 746, 1553,
	751, 125, 1552, 1551, 732, 1550, 1533, 1542, 984, 987,
	571, 1970, 572, 2722, 2221, 2768, 2001, 928, 918, 2732,
	2745, 998, 999, 2301, 1002, 1003, 1004, 1005, 569, 2469,
	1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 759, 766, 733, 719, 717,
	1114, 1560, 1673, 2603, 740, 933, 2602, 940, 119, 102,
	939, 963, 938, 2497, 986, 985, 2498, 2767, 1801, 2782,
	2698, 2774, 964, 2758, 2668, 2743, 2505, 78, 2689, 1847,
	988, 989, 990, 2697, 78, 2667, 78, 80, 2154, 2381,
	1371, 1971, 1799, 2125, 1899, 1000, 1114, 2124, 995, 2273,
	104, 105, 2145, 108, 78, 1028, 114, 2047, 1896, 179,
	2046, 1750, 513, 2048, 1298, 178, 1299, 932, 1060, 1146,
	934, 710, 119, 2274, 2275, 1087, 2552, 709, 2010, 1751,
	1752, 1048, 712, 713, 714, 715, 1049, 1689, 723, 120,
	2612, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1154,
	1156, 1157, 162, 2011, 87, 1124, 1065, 1066, 1897, 2091,
	2649, 87, 937, 87, 1034, 1035, 754, 755, 1061, 2059,
	1054, 1769, 1768, 178, 550, 1048, 2411, 2349, 2372, 550,
	1049, 87, 2181, 2370, 2093, 1077, 559, 1079, 1047, 1541,
	1046, 563, 550, 557, 2052, 1237, 1037, 120, 1455, 142,
	2098, 1124, 550, 1829, 1543, 1544, 1545, 2342, 2120, 159,
	162, 160, 1485, 1642, 937, 2343, 929, 1862, 1867, 2757,
	935, 1480, 1081, 931, 930, 1076, 1078, 1086, 2133, 1063,
	1064, 177, 1798, 1001, 1030, 1024, 1873, 1870, 1872, 1871,
	1069, 152, 1456, 941, 1457, 1878, 141, 1067, 1007, 1062,
	1120, 1055, 1006, 1112, 2351, 937, 1023, 1068, 2350, 1875,
	2490, 1876, 1864, 1877, 943, 971, 1832, 159, 944, 160,
	969, 2723, 935, 1868, 1730, 944, 87, 1866, 980, 1158,
	2326, 979, 978, 977, 976, 1383, 1384, 151, 150, 177,
	975, 974, 1240, 182, 973, 182, 1120, 968, 182, 1634,
	1623, 1624, 1625, 1626, 1636, 1627, 1628, 1629, 1641, 1637,
	1630, 1631, 1638, 1639, 1640, 1632, 1633, 1635, 1074, 1865,
	1027, 1374, 1075, 1158, 981, 1897, 2290, 561, 1094, 561,
	561, 922, 1080, 936, 2182, 922, 956, 2752, 2762, 920,
	163, 2741, 2137, 922, 561, 561, 1395, 955, 1494, 168,
	1807, 753, 997, 2134, 1058, 1073, 2308, 184, 185, 186,
	1853, 1490, 2150, 1100, 991, 962, 2119, 1369, 2300, 1368,
	37, 551, 1367, 2645, 962, 1106, 551, 1044, 2450, 1050,
	1051, 1052, 1053, 2109, 1491, 936, 146, 1385, 153, 551,
	1382, 2325, 147, 148, 1716, 1717, 1975, 1977, 163, 551,
	550, 1088, 1089, 1365, 517, 512, 1911, 168, 2656, 972,
	2089, 2122, 1026, 2430, 970, 2132, 1486, 2043, 2131, 1119,
	1116, 1117, 1118, 1123, 1125, 1122, 936, 1121, 1849, 1159,
	1160, 2613, 2006, 1962, 1115, 2092, 2156, 1682, 1284, 1210,
	1800, 1039, 547, 1161, 1162, 1163, 1164, 116, 1095, 1757,
	1394, 1158, 1157, 1169, 2272, 1172, 2412, 2599, 735, 2666,
	1085, 962, 155, 961, 1228, 1119, 1116, 1117, 1118, 1123,
	1125, 1122, 961, 1121, 962, 1043, 2662, 965, 955, 1484,
	1115, 2486, 1223, 111, 2140, 2424, 1071, 966, 534, 2139,
	182, 1096, 1097, 983, 561, 561, 1863, 1165, 1082, 2773,
	532, 2140, 1487, 1503, 1300, 81, 2139, 967, 1110, 2174,
	182, 1467, 1466, 1468, 1469, 1470, 1613, 2158, 86, 2081,
	155, 1898, 1243, 1129, 1241, 86, 1247, 86, 1229, 561,
	1846, 1033, 720, 182, 718, 1246, 1244, 1045, 561, 1613,
	529, 1925, 2548, 77, 561, 86, 1109, 1107, 1108, 542,
	2750, 1057, 2737, 2751, 112, 2749, 2461, 1976, 762, 961,
	1572, 996, 1059, 2460, 539, 1182, 1836, 1183, 1404, 1036,
	2378, 1186, 961, 1403, 1573, 1574, 1571, 965, 955, 2168,
	2167, 2166, 2160, 1393, 2164, 1130, 2159, 966, 2157, 1127,
	1229, 1128, 1129, 2162, 1128, 1129, 149, 551, 2176, 1844,
	1245, 962, 2161, 971, 95, 1216, 1217, 1218, 1219, 184,
	185, 186, 2451, 1592, 969, 143, 1042, 1848, 144, 2163,
	2165, 1234, 1481, 1285, 1482, 2765, 2594, 1483, 1029, 519,
	1072, 521, 535, 1934, 553, 1260, 552, 525, 98, 523,
	527, 536, 528, 1295, 522, 1841, 533, 1504, 1841, 524,
	537, 538, 540, 543, 544, 545, 541, 2520, 531, 554,
	156, 161, 158, 164, 165, 166, 167, 169, 170, 171,
	172, 1231, 1722, 1723, 1242, 87, 173, 174, 175, 176,
	1130, 1262, 1845, 1265, 1127, 1843, 1128, 1129, 962, 1570,
	2674, 2519, 717, 178, 1593, 766, 2638, 182, 719, 961,
	2468, 1358, 1290, 1291, 2467, 955, 958, 959, 2738, 922,
	1366, 2763, 2316, 952, 956, 2306, 2066, 120, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 2065,
	162, 561, 2675, 1391, 173, 174, 175, 176, 2639, 2642,
	1130, 1400, 1474, 1804, 1127, 1402, 1128, 1129, 561, 561,
	1475, 561, 757, 561, 561, 1460, 561, 561, 561, 561,
	561, 561, 1150, 1151, 1152, 1153, 1155, 1154, 1156, 1157,
	1459, 561, 1562, 1564, 1565, 182, 1438, 1130, 662, 663,
	664, 1127, 1248, 1128, 1129, 1458, 961, 159, 1401, 160,
	1449, 182, 955, 958, 959, 2764, 922, 1563, 2623, 1260,
	952, 956, 561, 1443, 182, 1473, 1372, 1373, 555, 177,
	1903, 1904, 1905, 1433, 1434, 1492, 1440, 1472, 561, 1462,
	182, 951, 1439, 1414, 1387, 2641, 548, 1152, 1153, 1155,
	1154, 1156, 1157, 1130, 2640, 1380, 182, 1127, 1260, 1128,
	1129, 549, 2547, 182, 1130, 1617, 1399, 1269, 1127, 1618,
	1128, 1129, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 561, 2545, 2516, 1435, 2465, 1441, 1442, 2457, 184,
	185, 186, 1447, 1448, 1260, 561, 561, 2075, 2714, 1407,
	1471, 1408, 1461, 1410, 1412, 1364, 1398, 1416, 1418, 1420,
	1422, 1424, 2712, 182, 2063, 1378, 1270, 1225, 1377, 1390,
	1376, 2716, 2717, 1397, 1397, 184, 185, 186, 1857, 2458,
	2288, 2289, 1507, 1856, 1713, 1695, 1451, 2713, 163, 1511,
	1499, 1513, 1514, 1515, 1516, 1534, 1500, 168, 1520, 1436,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1132, 1463, 1591,
	1532, 1594, 1598, 1597, 1597, 1450, 1446, 1595, 1595, 1445,
	1444, 1271, 1603, 561, 1083, 2346, 1495, 1148, 1149, 1150,
	1151, 1152, 1153, 1155, 1154, 1156, 1157, 1568, 561, 561,
	1942, 119, 1099, 939, 2620, 938, 2619, 1575, 2588, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1566, 1370, 2587, 1273, 1509, 2008, 92, 1997,
	2756, 1576, 649, 2503, 1614, 94, 1505, 1506, 1921, 93,
	1657, 1674, 94, 92, 2287, 2234, 182, 2728, 1260, 2008,
	1510, 561, 1531, 1530, 93, 2423, 2290, 1517, 1518, 1519,
	2267, 2376, 1260, 1997, 2695, 1997, 2682, 1538, 1539, 1897,
	155, 2099, 1916, 1260, 101, 182, 1569, 1657, 561, 1997,
	2678, 1915, 1700, 183, 1701, 100, 183, 99, 182, 183,
	1272, 2423, 561, 1260, 562, 2078, 183, 182, 2016, 182,
	1260, 182, 182, 561, 183, 1765, 561, 1130, 1260, 2425,
	1920, 1127, 1842, 1128, 1129, 1674, 2739, 561, 1130, 183,
	2423, 1676, 1127, 762, 1128, 1129, 762, 1130, 1766, 1678,
	1679, 1127, 2015, 1128, 1129, 1954, 1130, 1126, 95, 2039,
	1127, 562, 1128, 1129, 562, 183, 562, 2670, 1260, 2653,
	1997, 2658, 2495, 2655, 1260, 1706, 1130, 95, 2661, 1675,
	1127, 1130, 1128, 1129, 1997, 1127, 2445, 1128, 1129, 1841,
	1732, 2720, 561, 184, 185, 186, 2016, 2050, 1810, 1811,
	1812, 1130, 2397, 1814, 1816, 1127, 2016, 1128, 1129, 1775,
	1776, 1777, 1778, 2395, 1130, 1676, 100, 561, 1127, 1760,
	1128, 1129, 2040, 561, 1400, 1694, 732, 1400, 2296, 1400,
	1761, 2042, 1130, 2395, 1260, 1840, 1127, 2209, 1128, 1129,
	1770, 1749, 1771, 1772, 1773, 1774, 1997, 2595, 1130, 1743,
	1708, 1830, 1127, 1727, 1128, 1129, 2495, 1260, 1781, 1782,
	1783, 1784, 1791, 1764, 1725, 561, 1912, 1591, 1947, 1599,
	1931, 1797, 1591, 1591, 1914, 1930, 1605, 1606, 1748, 1747,
	766, 1997, 2493, 766, 1912, 1763, 1841, 1762, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 1824,
	2280, 1841, 1260, 1260, 173, 174, 175, 176, 182, 1720,
	1827, 2428, 1260, 1264, 1677, 182, 1685, 1680, 1681, 1546,
	182, 182, 2298, 2297, 182, 1489, 182, 2294, 2295, 1835,
	1792, 1292, 1838, 182, 1839, 1787, 1788, 946, 1803, 945,
	182, 1802, 1805, 2685, 1813, 2281, 2294, 2293, 1130, 2016,
	1260, 87, 1127, 1705, 1128, 1129, 1912, 1260, 1850, 2592,
	1897, 2118, 1852, 1792, 1834, 1833, 182, 1854, 1855, 963,
	2283, 561, 1837, 2609, 2487, 1361, 2103, 2319, 2393, 1267,
	964, 1130, 1851, 2585, 2278, 1127, 2384, 1128, 1129, 2559,
	1397, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1154,
	1156, 1157, 2288, 2289, 1130, 2095, 2096, 1993, 1127, 2279,
	1128, 1129, 2485, 1888, 1889, 1997, 1996, 2482, 1891, 1130,
	1126, 1260, 94, 1127, 1130, 1128, 1129, 1892, 1127, 2463,
	1128, 1129, 1130, 1361, 1360, 1860, 1127, 722, 1128, 1129,
	2387, 2285, 2386, 1146, 1306, 1305, 1142, 1568, 1143, 2383,
	184, 185, 186, 1363, 1817, 1790, 1907, 2344, 1909, 1146,
	2067, 1881, 1144, 1145, 1141, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1155, 1154, 1156, 1157, 2039, 2321, 2071, 1912,
	1908, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1155, 1154,
	1156, 1157, 184, 185, 186, 1130, 1815, 1957, 2317, 1127,
	2104, 1128, 1129, 1786, 1780, 1130, 2287, 1956, 1779, 1127,
	1477, 1128, 1129, 1392, 87, 1388, 182, 1895, 2290, 1359,
	113, 2072, 1955, 1028, 182, 2072, 1569, 2348, 1981, 561,
	1597, 2474, 2610, 1968, 1595, 561, 2435, 2436, 1906, 2040,
	1801, 1698, 2780, 1130, 1952, 2778, 561, 1127, 1897, 1128,
	1129, 1985, 2734, 1130, 1951, 2709, 1536, 1127, 2438, 1128,
	1129, 2313, 1426, 2312, 2311, 183, 2234, 183, 1130, 182,
	183, 2256, 1127, 182, 1128, 1129, 2257, 1924, 2475, 2476,
	2082, 1950, 1882, 2441, 37, 2529, 2254, 2528, 2049, 2012,
	1130, 2255, 2440, 2032, 1127, 2253, 1128, 1129, 2252, 562,
	1130, 562, 562, 1998, 1127, 1268, 1128, 1129, 101, 1427,
	1428, 2725, 2696, 1676, 1940, 1712, 562, 562, 1537, 100,
	1704, 99, 2258, 2282, 2025, 2026, 2637, 1130, 1994, 1948,
	94, 1127, 561, 1128, 1129, 2527, 2429, 182, 2214, 2213,
	2101, 1944, 2416, 2538, 182, 2226, 2228, 1234, 1969, 1979,
	2415, 1675, 2540, 2419, 2229, 2223, 561, 2031, 736, 1488,
	2292, 2060, 2061, 561, 1995, 708, 737, 1400, 1400, 1990,
	1943, 2057, 561, 2053, 2005, 1130, 2076, 993, 2094, 1127,
	992, 1128, 1129, 2470, 2115, 1098, 1429, 1130, 1260, 2358,
	2071, 1127, 2114, 1128, 1129, 182, 182, 182, 182, 182,
	2037, 2044, 2143, 2041, 1258, 1254, 1797, 1609, 2111, 2051,
	2110, 1922, 182, 182, 2074, 92, 1130, 120, 2054, 1255,
	1127, 1610, 1128, 1129, 2421, 94, 93, 2760, 182, 2309,
	2064, 1722, 1723, 2471, 2472, 2473, 1430, 1431, 1432, 1885,
	2654, 2605, 2291, 2073, 1702, 1703, 1257, 1591, 1256, 2029,
	92, 2083, 2084, 2085, 2079, 1709, 2113, 94, 744, 745,
	2212, 93, 183, 1380, 1874, 2401, 562, 562, 2211, 1901,
	99, 2629, 2105, 2106, 1959, 1960, 2628, 2021, 2024, 2025,
	2026, 2022, 183, 2023, 2027, 101, 1597, 718, 1597, 2173,
	1595, 1597, 1595, 561, 2546, 1595, 100, 2112, 99, 2544,
	2543, 562, 2536, 2483, 101, 183, 2420, 94, 2418, 561,
	562, 2322, 1825, 2203, 1375, 100, 562, 99, 2152, 2151,
	101, 743, 100, 2535, 182, 2409, 2008, 2194, 561, 2194,
	1993, 100, 2194, 2183, 2196, 2736, 2735, 561, 2199, 2135,
	1932, 1696, 2170, 1286, 561, 561, 633, 182, 182, 182,
	182, 182, 103, 2169, 1277, 106, 107, 2203, 2153, 182,
	2736, 1258, 1254, 2216, 182, 2231, 2643, 182, 724, 182,
	2456, 734, 182, 182, 182, 88, 1255, 2246, 1, 2711,
	530, 2187, 1686, 1232, 2266, 2237, 2707, 2240, 1247, 2032,
	2237, 1464, 1454, 2217, 2506, 1658, 2204, 2141, 2202, 1659,
	2142, 1251, 1252, 1257, 2606, 1256, 2100, 2307, 560, 1831,
	2481, 1795, 954, 182, 145, 1758, 2218, 1759, 2215, 2691,
	110, 915, 109, 957, 1056, 1826, 561, 2496, 2058, 1767,
	1312, 1310, 725, 1311, 726, 561, 1309, 1314, 2268, 2208,
	182, 2269, 2248, 2249, 1313, 2251, 1933, 2259, 2247, 1540,
	182, 2250, 2263, 2264, 558, 764, 2028, 2328, 919, 2270,
	926, 180, 95, 1301, 1278, 182, 2276, 994, 182, 183,
	2205, 2206, 2207, 2324, 1499, 2245, 520, 2299, 2359, 1858,
	526, 1170, 1535, 2303, 2302, 2210, 2045, 2304, 2305, 763,
	756, 1697, 1983, 2242, 2413, 2222, 2224, 2000, 2227, 2220,
	2336, 2636, 2335, 562, 2537, 2683, 2055, 1274, 1923, 1611,
	1737, 1561, 583, 582, 1797, 2327, 580, 2339, 1986, 2323,
	562, 562, 2009, 562, 1133, 562, 562, 652, 562, 562,
	562, 562, 562, 562, 1973, 1287, 2020, 2018, 2354, 2392,
	561, 182, 2017, 562, 1883, 2353, 1744, 183, 2437, 2356,
	2357, 2433, 2770, 2703, 1739, 1735, 1992, 2362, 2361, 591,
	584, 576, 2453, 183, 2334, 2121, 2368, 2345, 2123, 2056,
	2341, 1111, 1250, 570, 562, 927, 183, 1608, 2611, 2597,
	1900, 2380, 1249, 2365, 2366, 1621, 2367, 2407, 1622, 2369,
	562, 2371, 183, 2373, 2314, 1818, 63, 41, 182, 1649,
	565, 2721, 1102, 750, 32, 31, 30, 29, 183, 28,
	2402, 2403, 23, 22, 21, 183, 2459, 2410, 2432, 20,
	19, 182, 2417, 25, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 562, 18, 17, 2422, 2442, 16, 182,
	2448, 2449, 182, 182, 182, 2731, 2759, 562, 562, 2439,
	115, 50, 561, 561, 47, 45, 122, 121, 48, 44,
	2446, 1031, 42, 27, 1146, 183, 2149, 2447, 26, 2336,
	15, 2335, 2454, 14, 2488, 2489, 2455, 13, 12, 561,
	561, 561, 561, 2464, 11, 2466, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1155, 1154, 1156, 1157, 2021, 2024, 2025,
	2026, 2022, 2491, 2023, 2027, 10, 9, 2435, 2436, 5,
	4, 35, 34, 33, 1105, 24, 2, 2502, 2087, 1820,
	0, 0, 0, 2500, 2501, 562, 0, 1597, 0, 1597,
	0, 1595, 0, 1595, 0, 182, 0, 0, 2515, 0,
	562, 562, 0, 0, 0, 0, 0, 2511, 0, 0,
	0, 0, 2532, 0, 0, 0, 2512, 0, 0, 561,
	0, 561, 0, 0, 0, 0, 0, 0, 2194, 0,
	2194, 0, 0, 2523, 0, 0, 2524, 2561, 0, 1597,
	0, 2555, 37, 1595, 0, 0, 2541, 2553, 183, 0,
	2533, 0, 2542, 562, 0, 0, 2549, 718, 2237, 2557,
	0, 2240, 0, 2551, 0, 2240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 183, 2562, 2563,
	562, 0, 0, 0, 0, 0, 0, 2565, 0, 0,
	183, 0, 0, 0, 562, 0, 561, 0, 2593, 183,
	2729, 183, 0, 183, 183, 562, 0, 2591, 562, 0,
	1329, 2590, 0, 1146, 2589, 1910, 2608, 561, 2601, 562,
	0, 561, 561, 2600, 0, 0, 2596, 0, 0, 0,
	0, 0, 0, 0, 0, 1147, 1148, 1149, 1150, 1151,
	1152, 1153, 1155, 1154, 1156, 1157, 0, 2630, 2631, 0,
	561, 0, 0, 764, 1329, 764, 764, 2635, 0, 2633,
	2632, 0, 0, 0, 2644, 0, 0, 0, 0, 0,
	1101, 1103, 2647, 0, 562, 2646, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 718, 2240, 2650,
	0, 0, 0, 0, 0, 0, 0, 0, 2652, 562,
	561, 182, 0, 0, 0, 562, 0, 1259, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	37, 0, 2663, 0, 0, 2660, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 561, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 562, 0, 0,
	0, 1317, 561, 561, 0, 0, 0, 0, 0, 0,
	0, 561, 0, 0, 1226, 2676, 0, 0, 2681, 37,
	182, 561, 2608, 2692, 2684, 2690, 2686, 0, 2237, 2699,
	0, 0, 0, 0, 0, 0, 0, 2702, 0, 2710,
	183, 2718, 2715, 0, 0, 1317, 2724, 183, 0, 0,
	0, 0, 183, 183, 0, 0, 183, 0, 183, 2730,
	0, 561, 2733, 0, 0, 183, 0, 0, 0, 561,
	1238, 1239, 183, 2747, 0, 1597, 2742, 0, 0, 1595,
	2746, 2744, 1330, 2740, 0, 2753, 0, 0, 0, 0,
	0, 0, 0, 0, 2761, 0, 0, 0, 183, 0,
	0, 0, 2766, 562, 0, 1282, 0, 0, 0, 0,
	2769, 0, 1597, 2777, 764, 2776, 1595, 2779, 0, 1597,
	1302, 0, 0, 1595, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 1346, 1347, 1348,
	1349, 1350, 1351, 0, 1352, 1353, 1354, 1355, 1356, 1331,
	1332, 1333, 1334, 1315, 1316, 1344, 0, 1318, 0, 1319,
	1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 0, 0,
	1328, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 0,
	1343, 1346, 1347, 1348, 1349, 1350, 1351, 0, 1352, 1353,
	1354, 1355, 1356, 1331, 1332, 1333, 1334, 1315, 1316, 1344,
	0, 1318, 0, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 0, 0, 1328, 1335, 1336, 1337, 1338, 1339,
	1340, 1341, 1342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 562, 0, 0, 0, 0, 0, 562, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 183, 0, 919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1345,
	1226, 0, 0, 0, 1406, 1406, 0, 1406, 0, 1406,
	1406, 0, 1415, 1406, 1406, 1406, 1406, 1406, 0, 0,
	0, 0, 0, 0, 0, 1226, 1226, 919, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 183, 0, 1476, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 0,
	0, 0, 0, 0, 1496, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 562, 0, 0, 0, 0, 0,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 183, 183,
	183, 183, 0, 0, 0, 0, 0, 764, 0, 0,
	0, 0, 0, 0, 183, 183, 0, 0, 0, 0,
	0, 764, 764, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 181, 0, 0, 516, 0, 0, 556, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 731, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 0, 749, 0, 0, 0,
	0, 0, 0, 0, 516, 562, 0, 0, 0, 1604,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 562, 0, 0, 1619, 1620, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	562, 0, 0, 178, 0, 0, 0, 764, 0, 562,
	0, 0, 0, 0, 0, 0, 562, 562, 0, 183,
	183, 183, 183, 183, 0, 0, 0, 120, 0, 142,
	0, 183, 0, 0, 0, 0, 183, 1699, 0, 183,
	162, 183, 0, 0, 183, 183, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 152, 0, 0, 0, 0, 141, 0, 1282, 0,
	0, 764, 0, 0, 0, 183, 0, 0, 0, 764,
	0, 0, 764, 0, 0, 0, 0, 159, 562, 160,
	0, 0, 0, 919, 0, 0, 0, 562, 0, 0,
	0, 0, 183, 0, 0, 129, 130, 151, 150, 177,
	0, 0, 183, 1261, 1263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 926, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1379, 0, 0,
	0, 0, 0, 919, 0, 0, 0, 0, 0, 926,
	120, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 562, 183, 0, 0, 146, 127, 153, 134,
	126, 0, 147, 148, 0, 0, 0, 0, 163, 0,
	0, 919, 0, 0, 152, 0, 0, 168, 135, 141,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 136, 131, 132, 133, 137, 0, 0,
	159, 0, 160, 0, 128, 0, 0, 0, 0, 0,
	183, 0, 0, 139, 0, 0, 0, 0, 1383, 1384,
	151, 150, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 183, 183, 183, 0, 0, 0,
	0, 0, 0, 0, 562, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1894, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 562, 562, 562, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 516, 0, 0, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	1385, 153, 0, 1382, 0, 147, 148, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 562, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 143, 0, 0, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 0,
	0, 0, 0, 0, 0, 1711, 0, 0, 0, 0,
	0, 1987, 0, 0, 0, 0, 0, 0, 562, 1227,
	0, 0, 2002, 155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 562,
	0, 0, 0, 562, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 516, 562, 0, 173, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1615,
	0, 731, 0, 1616, 0, 0, 0, 0, 562, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 2077, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 143, 0,
	0, 144, 562, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 0, 0, 0, 0, 1261, 1684, 2102,
	0, 0, 0, 0, 0, 0, 0, 0, 2107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1707, 0, 0, 0, 562, 562, 0, 0, 0, 0,
	0, 0, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 161, 158, 164, 165, 166, 167, 169, 170,
	171, 172, 0, 562, 0, 0, 0, 173, 174, 175,
	176, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 1226, 0, 0, 1226, 0, 0, 0, 0, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 516, 0,
	0, 0, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2219, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 0, 0, 0, 1226, 0, 0,
	2244, 1406, 1226, 0, 0, 1227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1227, 1227, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1498, 919, 0, 0, 1226, 0, 0, 0, 0,
	0, 1711, 0, 0, 0, 0, 0, 516, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 1521, 1522, 516, 516, 516, 516, 516,
	516, 516, 0, 2567, 2569, 2568, 2578, 2579, 2580, 2581,
	2582, 2583, 2584, 613, 0, 0, 0, 0, 0, 0,
	0, 78, 39, 40, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 0,
	0, 84, 0, 0, 0, 43, 69, 70, 0, 67,
	71, 0, 0, 0, 0, 0, 0, 0, 68, 0,
	0, 0, 0, 0, 0, 0, 0, 1913, 0, 0,
	0, 1917, 0, 1918, 1919, 0, 2219, 0, 0, 0,
	0, 0, 1927, 0, 0, 1928, 1929, 56, 749, 0,
	0, 0, 0, 0, 0, 749, 749, 0, 87, 0,
	0, 1227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1935, 1936, 1937, 1938, 1939, 0, 1941, 0,
	0, 0, 0, 0, 1945, 0, 1946, 0, 0, 0,
	1949, 749, 1498, 749, 749, 749, 749, 749, 1958, 0,
	0, 0, 0, 0, 0, 1963, 1964, 1965, 1966, 1967,
	0, 1707, 0, 0, 0, 0, 0, 1452, 0, 0,
	0, 0, 1980, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 749, 0, 0, 0, 0, 0, 0, 0,
	0, 748, 0, 0, 0, 0, 731, 0, 1711, 1711,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 0, 0, 1498, 0, 516, 0,
	516, 0, 516, 1746, 0, 2507, 2508, 2509, 2510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 46, 49, 52, 51, 54, 0, 66, 2573,
	2574, 75, 72, 0, 0, 0, 0, 0, 0, 574,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 1226, 0, 55, 83, 82, 0, 0, 64,
	65, 53, 0, 0, 0, 0, 0, 73, 74, 0,
	0, 742, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 2554, 0, 2556, 0, 644,
	0, 608, 610, 645, 646, 0, 606, 609, 647, 0,
	0, 0, 0, 57, 58, 0, 59, 60, 61, 62,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 611, 612, 2566, 2570, 2571,
	2572, 2575, 2576, 2577, 0, 0, 0, 0, 0, 0,
	0, 0, 1711, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 764, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2626, 0, 0, 1235, 2626, 2626, 516,
	0, 2180, 0, 0, 0, 0, 516, 0, 0, 0,
	0, 516, 516, 0, 0, 516, 0, 1886, 0, 0,
	0, 2195, 0, 0, 516, 0, 1711, 2200, 2201, 0,
	0, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 0, 0, 0, 0, 0, 0, 0,
	515, 0, 1711, 0, 0, 0, 0, 516, 0, 0,
	564, 0, 86, 0, 0, 0, 0, 0, 711, 0,
	0, 0, 0, 0, 0, 0, 1711, 0, 0, 0,
	0, 2243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2261, 2262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 923,
	1226, 0, 2677, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 764, 764,
	749, 0, 0, 0, 0, 0, 0, 2700, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1711, 0, 0,
	0, 0, 0, 749, 749, 2705, 0, 0, 0, 0,
	0, 0, 0, 0, 1498, 0, 0, 516, 0, 0,
	0, 0, 0, 0, 0, 1452, 2360, 0, 0, 0,
	0, 0, 0, 2364, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2374, 2375, 2377,
	2379, 0, 0, 659, 79, 0, 0, 2385, 0, 0,
	0, 0, 2389, 2390, 2391, 0, 0, 0, 0, 2394,
	516, 0, 0, 0, 516, 2396, 0, 2398, 0, 0,
	2399, 0, 0, 0, 0, 0, 2404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2426,
	2427, 0, 0, 2431, 0, 0, 0, 0, 0, 0,
	0, 721, 0, 79, 0, 0, 0, 0, 516, 0,
	0, 2443, 2444, 0, 0, 2086, 0, 0, 0, 0,
	0, 721, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 516, 516, 516, 516,
	516, 0, 0, 0, 0, 0, 0, 2494, 0, 0,
	0, 0, 0, 516, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 0, 0, 0, 0, 0,
	0, 574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2521, 0, 0, 0,
	2522, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1227, 0, 1227, 0, 0, 1227,
	0, 0, 0, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1032,
	0, 1038, 0, 0, 1040, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1276, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 1227, 516, 516,
	516, 516, 516, 0, 0, 0, 0, 0, 0, 0,
	2260, 0, 0, 0, 0, 516, 0, 0, 1452, 0,
	516, 0, 0, 516, 2271, 1498, 0, 2604, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2614, 2615, 2616, 0, 2617, 2618, 0, 0, 0,
	0, 2621, 0, 2622, 2625, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 2651, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2671, 0, 0, 0, 0, 0, 2672, 2673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2679, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2687, 0, 0,
	0, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1289,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2726, 0, 0,
	0, 2727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 516,
	1091, 0, 1091, 1091, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1501, 0, 0, 0, 0,
	516, 0, 0, 516, 516, 516, 721, 1166, 1167, 1168,
	0, 1171, 0, 1173, 1174, 1175, 1176, 0, 1179, 1181,
	1181, 0, 1181, 1185, 1185, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 0, 1211,
	1212, 1213, 1214, 1215, 0, 0, 0, 0, 1185, 1185,
	1185, 1185, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1556, 1557,
	1558, 1559, 0, 1307, 0, 1227, 0, 1227, 0, 0,
	0, 0, 0, 0, 0, 0, 1452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1227, 0, 0, 0, 1601,
	1602, 0, 0, 0, 0, 1236, 0, 1607, 0, 0,
	0, 721, 0, 0, 0, 721, 0, 0, 0, 0,
	0, 721, 1643, 1644, 1645, 1646, 1647, 1648, 1650, 1654,
	1655, 574, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 574, 0,
	1478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 1718, 1719, 0, 0, 0, 1512,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 0, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1549,
	0, 0, 0, 87, 0, 0, 0, 0, 0, 653,
	660, 661, 662, 663, 664, 654, 656, 0, 0, 0,
	655, 0, 516, 0, 0, 0, 0, 0, 0, 0,
	0, 1793, 0, 658, 665, 666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2337, 2338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1452, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	0, 0, 0, 0, 0, 653, 660, 661, 662, 663,
	664, 654, 656, 0, 1724, 0, 655, 0, 0, 0,
	0, 0, 0, 1728, 0, 1731, 0, 0, 1549, 658,
	665, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2337, 2338, 1091, 1091,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 0,
	0, 0, 0, 0, 0, 1926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 644, 0,
	0, 1178, 645, 646, 0, 0, 0, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 660, 661, 0, 0, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1549, 0, 0, 0, 0, 0,
	0, 1869, 0, 0, 0, 0, 1879, 1880, 0, 0,
	1884, 0, 0, 0, 660, 661, 0, 0, 0, 1887,
	1596, 0, 1276, 0, 0, 0, 1890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1893, 0, 1738, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 667, 668, 669, 670,
	671, 672, 673, 674, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 684, 685, 686, 687, 688, 689, 690,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	701, 702, 703, 704, 705, 706, 707, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2148, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2171, 2172, 0, 0, 0, 2175, 0, 0,
	0, 0, 2177, 2178, 2179, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2184, 2185, 2186, 0, 0, 1661,
	2188, 0, 2189, 2190, 0, 0, 0, 2197, 2198, 2036,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2232, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2080, 1902, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2126, 2127, 2128, 2129, 2130, 0, 0, 0, 0,
	0, 0, 0, 2320, 0, 0, 0, 0, 1549, 2136,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1961, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1978, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 0, 0, 0, 2382, 0,
	0, 0, 0, 0, 0, 2388, 0, 0, 0, 0,
	0, 0, 0, 2013, 2014, 0, 0, 0, 0, 0,
	0, 0, 2033, 0, 2034, 2035, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2310,
	0, 0, 0, 0, 0, 0, 2108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2484,
	0, 0, 0, 0, 0, 0, 2331, 0, 0, 0,
	0, 0, 0, 0, 0, 2499, 2340, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2352, 0, 0, 2355, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2513, 0,
	2514, 0, 0, 0, 0, 2517, 2518, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2525,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2550, 2406, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2558, 0, 0,
	2560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2564, 0, 0, 1738, 0, 0,
	0, 0, 0, 0, 0, 2586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2241, 0, 79, 0, 0,
	1738, 1738, 1738, 1738, 1738, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 574, 0, 0, 2033, 721, 0,
	0, 0, 1738, 0, 0, 1738, 0, 2462, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2477, 0, 0, 2478, 2479,
	2480, 0, 0, 0, 0, 0, 0, 2634, 574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2363, 0,
	0, 0, 0, 0, 0, 2669, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1738, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2492, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2664, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2526, 0, 2530, 2531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	0, 79, 0, 2241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2598, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199,
	1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2680, 0, 897, 882, 436, 79, 829,
	900, 798, 817, 910, 820, 823, 864, 777, 843, 357,
	814, 769, 802, 772, 809, 773, 800, 831, 244, 797,
	884, 847, 899, 312, 241, 779, 803, 371, 819, 193,
	866, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 906, 316, 853, 0, 421,
	342, 0, 0, 0, 833, 888, 841, 878, 828, 865,
	787, 852, 901, 815, 861, 902, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	2693, 0, 2694, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 811, 858, 896, 812, 860, 239, 285, 246,
	238, 440, 907, 887, 776, 840, 895, 0, 0, 209,
	339, 898, 835, 0, 863, 0, 913, 771, 855, 0,
	774, 778, 909, 891, 806, 249, 0, 0, 0, 0,
	0, 0, 0, 832, 842, 875, 826, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 851, 0, 0, 0,
	783, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 786, 0, 805,
	876, 0, 768, 268, 780, 343, 231, 0, 880, 890,
	827, 474, 894, 825, 824, 870, 784, 886, 818, 311,
	782, 293, 188, 205, 0, 816, 353, 394, 400, 885,
	801, 810, 229, 808, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 850, 868, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 1093, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	796, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 881, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 873, 912, 366, 399, 219, 460, 420, 791, 795,
	789, 790, 845, 846, 792, 903, 904, 905, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 877, 785, 0,
	793, 794, 0, 883, 892, 893, 511, 328, 411, 457,
	296, 301, 304, 849, 187, 202, 314, 908, 388, 261,
	489, 468, 464, 770, 788, 236, 799, 807, 0, 813,
	821, 822, 834, 836, 837, 838, 839, 856, 857, 859,
	867, 869, 872, 874, 879, 889, 911, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 848, 854,
	325, 254, 273, 284, 862, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 844, 871, 321, 437, 438, 280,
	897, 882, 436, 0, 829, 900, 798, 817, 910, 820,
	823, 864, 777, 843, 357, 814, 769, 802, 772, 809,
	773, 800, 831, 244, 797, 884, 847, 899, 312, 241,
	779, 803, 371, 819, 193, 866, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	906, 316, 853, 0, 421, 342, 0, 0, 0, 833,
	888, 841, 878, 828, 865, 787, 852, 901, 815, 861,
	902, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 811, 858, 896,
	812, 860, 239, 285, 246, 238, 440, 907, 887, 776,
	840, 895, 0, 0, 209, 339, 898, 835, 0, 863,
	0, 913, 771, 855, 0, 774, 778, 909, 891, 806,
	249, 0, 0, 0, 0, 0, 0, 0, 832, 842,
	875, 826, 0, 0, 0, 0, 0, 2272, 0, 804,
	0, 851, 0, 0, 0, 783, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 786, 0, 805, 876, 0, 768, 268, 780,
	343, 231, 0, 880, 890, 827, 474, 894, 825, 824,
	870, 784, 886, 818, 311, 782, 293, 188, 205, 0,
	816, 353, 394, 400, 885, 801, 810, 229, 808, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 850,
	868, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 1093, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 796, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 881, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 873, 912, 366, 399,
	219, 460, 420, 791, 795, 789, 790, 845, 846, 792,
	903, 904, 905, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 877, 785, 0, 793, 794, 0, 883, 892,
	893, 511, 328, 411, 457, 296, 301, 304, 849, 187,
	202, 314, 908, 388, 261, 489, 468, 464, 770, 788,
	236, 799, 807, 0, 813, 821, 822, 834, 836, 837,
	838, 839, 856, 857, 859, 867, 869, 872, 874, 879,
	889, 911, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 848, 854, 325, 254, 273, 284, 862,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 844,
	871, 321, 437, 438, 280, 897, 882, 436, 0, 829,
	900, 798, 817, 910, 820, 823, 864, 777, 843, 357,
	814, 769, 802, 772, 809, 773, 800, 831, 244, 797,
	884, 847, 899, 312, 241, 779, 803, 371, 819, 193,
	866, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 906, 316, 853, 0, 421,
	342, 0, 0, 0, 833, 888, 841, 878, 828, 865,
	787, 852, 901, 815, 861, 902, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 811, 858, 896, 812, 860, 239, 285, 246,
	238, 440, 907, 887, 776, 840, 895, 0, 0, 209,
	339, 898, 835, 0, 863, 0, 913, 771, 855, 0,
	774, 778, 909, 891, 806, 249, 0, 0, 0, 0,
	0, 0, 0, 832, 842, 875, 826, 0, 0, 0,
	0, 0, 2230, 0, 804, 0, 851, 0, 0, 0,
	783, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 786, 0, 805,
	876, 0, 768, 268, 780, 343, 231, 0, 880, 890,
	827, 474, 894, 825, 824, 870, 784, 886, 818, 311,
	782, 293, 188, 205, 0, 816, 353, 394, 400, 885,
	801, 810, 229, 808, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 850, 868, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 1093, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	796, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 881, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 873, 912, 366, 399, 219, 460, 420, 791, 795,
	789, 790, 845, 846, 792, 903, 904, 905, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 877, 785, 0,
	793, 794, 0, 883, 892, 893, 511, 328, 411, 457,
	296, 301, 304, 849, 187, 202, 314, 908, 388, 261,
	489, 468, 464, 770, 788, 236, 799, 807, 0, 813,
	821, 822, 834, 836, 837, 838, 839, 856, 857, 859,
	867, 869, 872, 874, 879, 889, 911, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 848, 854,
	325, 254, 273, 284, 862, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 844, 871, 321, 437, 438, 280,
	897, 882, 436, 0, 829, 900, 798, 817, 910, 820,
	823, 864, 777, 843, 357, 814, 769, 802, 772, 809,
	773, 800, 831, 244, 797, 884, 847, 899, 312, 241,
	779, 803, 371, 819, 193, 866, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	906, 316, 853, 0, 421, 342, 0, 0, 0, 833,
	888, 841, 878, 828, 865, 787, 852, 901, 815, 861,
	902, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 811, 858, 896,
	812, 860, 239, 285, 246, 238, 440, 907, 887, 776,
	840, 895, 0, 0, 209, 339, 898, 835, 0, 863,
	0, 913, 771, 855, 0, 774, 778, 909, 891, 806,
	249, 0, 0, 0, 0, 0, 0, 0, 832, 842,
	875, 826, 0, 0, 0, 0, 0, 1726, 0, 804,
	0, 851, 0, 0, 0, 783, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 786, 0, 805, 876, 0, 768, 268, 780,
	343, 231, 0, 880, 890, 827, 474, 894, 825, 824,
	870, 784, 886, 818, 311, 782, 293, 188, 205, 0,
	816, 353, 394, 400, 885, 801, 810, 229, 808, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 850,
	868, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 1093, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 796, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 881, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 873, 912, 366, 399,
	219, 460, 420, 791, 795, 789, 790, 845, 846, 792,
	903, 904, 905, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 877, 785, 0, 793, 794, 0, 883, 892,
	893, 511, 328, 411, 457, 296, 301, 304, 849, 187,
	202, 314, 908, 388, 261, 489, 468, 464, 770, 788,
	236, 799, 807, 0, 813, 821, 822, 834, 836, 837,
	838, 839, 856, 857, 859, 867, 869, 872, 874, 879,
	889, 911, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 848, 854, 325, 254, 273, 284, 862,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 844,
	871, 321, 437, 438, 280, 897, 882, 436, 0, 829,
	900, 798, 817, 910, 820, 823, 864, 777, 843, 357,
	814, 769, 802, 772, 809, 773, 800, 831, 244, 797,
	884, 847, 899, 312, 241, 779, 803, 371, 819, 193,
	866, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 906, 316, 853, 0, 421,
	342, 0, 0, 0, 833, 888, 841, 878, 828, 865,
	787, 852, 901, 815, 861, 902, 287, 226, 192, 354,
	422, 259, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 811, 858, 896, 812, 860, 239, 285, 246,
	238, 440, 907, 887, 776, 840, 895, 0, 0, 209,
	339, 898, 835, 0, 863, 0, 913, 771, 855, 0,
	774, 778, 909, 891, 806, 249, 0, 0, 0, 0,
	0, 0, 0, 832, 842, 875, 826, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 851, 0, 0, 0,
	783, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 786, 0, 805,
	876, 0, 768, 268, 780, 343, 231, 0, 880, 890,
	827, 474, 894, 825, 824, 870, 784, 886, 818, 311,
	782, 293, 188, 205, 0, 816, 353, 394, 400, 885,
	801, 810, 229, 808, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 850, 868, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 1093, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	796, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 881, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 873, 912, 366, 399, 219, 460, 420, 791, 795,
	789, 790, 845, 846, 792, 903, 904, 905, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 877, 785, 0,
	793, 794, 0, 883, 892, 893, 511, 328, 411, 457,
	296, 301, 304, 849, 187, 202, 314, 908, 388, 261,
	489, 468, 464, 770, 788, 236, 799, 807, 0, 813,
	821, 822, 834, 836, 837, 838, 839, 856, 857, 859,
	867, 869, 872, 874, 879, 889, 911, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 848, 854,
	325, 254, 273, 284, 862, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 844, 871, 321, 437, 438, 280,
	897, 882, 436, 0, 829, 900, 798, 817, 910, 820,
	823, 864, 777, 843, 357, 814, 769, 802, 772, 809,
	773, 800, 831, 244, 797, 884, 847, 899, 312, 241,
	779, 803, 371, 819, 193, 866, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	906, 316, 853, 0, 421, 342, 0, 0, 0, 833,
	888, 841, 878, 828, 865, 787, 852, 901, 815, 861,
	902, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 811, 858, 896,
	812, 860, 239, 285, 246, 238, 440, 907, 887, 776,
	840, 895, 0, 0, 209, 339, 898, 835, 0, 863,
	0, 913, 771, 855, 0, 774, 778, 909, 891, 806,
	249, 0, 0, 0, 0, 0, 0, 0, 832, 842,
	875, 826, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 851, 0, 0, 0, 783, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 786, 0, 805, 876, 0, 768, 268, 780,
	343, 231, 0, 880, 890, 827, 474, 894, 825, 824,
	870, 784, 886, 818, 311, 782, 293, 188, 205, 0,
	816, 353, 394, 400, 885, 801, 810, 229, 808, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 850,
	868, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 1093, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 796, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 881, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 873, 912, 366, 399,
	219, 460, 420, 791, 795, 789, 790, 845, 846, 792,
	903, 904, 905, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 877, 785, 0, 793, 794, 0, 883, 892,
	893, 511, 328, 411, 457, 296, 301, 304, 849, 187,
	202, 314, 908, 388, 261, 489, 468, 464, 770, 788,
	236, 799, 807, 0, 813, 821, 822, 834, 836, 837,
	838, 839, 856, 857, 859, 867, 869, 872, 874, 879,
	889, 911, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 848, 854, 325, 254, 273, 284, 862,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 844,
	871, 321, 437, 438, 280, 897, 882, 436, 0, 829,
	900, 798, 817, 910, 820, 823, 864, 777, 843, 357,
	814, 769, 802, 772, 809, 773, 800, 831, 244, 797,
	884, 847, 899, 312, 241, 779, 803, 371, 819, 193,
	866, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 906, 316, 853, 0, 421,
	342, 0, 0, 0, 833, 888, 841, 878, 828, 865,
	787, 852, 901, 815, 861, 902, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 811, 858, 896, 812, 860, 239, 285, 246,
	238, 440, 907, 887, 776, 840, 895, 0, 0, 914,
	339, 898, 835, 0, 863, 0, 913, 771, 855, 0,
	774, 778, 909, 891, 806, 249, 0, 0, 0, 0,
	0, 0, 0, 832, 842, 875, 826, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 851, 0, 0, 0,
	783, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 786, 0, 805,
	876, 0, 768, 268, 780, 343, 231, 0, 880, 890,
	827, 474, 894, 825, 824, 870, 784, 886, 818, 311,
	782, 293, 188, 205, 0, 816, 353, 394, 400, 885,
	801, 810, 229, 808, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 850, 868, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 781, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	796, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 881, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 767, 761, 760, 294,
	318, 873, 912, 366, 399, 219, 460, 420, 791, 795,
	789, 790, 845, 846, 792, 903, 904, 905, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 877, 785, 0,
	793, 794, 0, 883, 892, 893, 511, 328, 411, 457,
	296, 301, 304, 849, 187, 202, 314, 908, 388, 261,
	489, 468, 464, 770, 788, 236, 799, 807, 0, 813,
	821, 822, 834, 836, 837, 838, 839, 856, 857, 859,
	867, 869, 872, 874, 879, 889, 911, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 848, 854,
	325, 254, 273, 284, 862, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 844, 871, 321, 437, 438, 280,
	897, 882, 436, 0, 829, 900, 798, 817, 910, 820,
	823, 864, 777, 843, 357, 814, 769, 802, 772, 809,
	773, 800, 831, 244, 797, 884, 847, 899, 312, 241,
	779, 803, 371, 819, 193, 866, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	906, 316, 853, 0, 421, 342, 0, 0, 0, 833,
	888, 841, 878, 828, 865, 787, 852, 901, 815, 861,
	902, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 811, 858, 896,
	812, 860, 239, 285, 246, 238, 440, 907, 887, 776,
	840, 895, 0, 0, 914, 339, 898, 835, 0, 863,
	0, 913, 771, 855, 0, 774, 778, 909, 891, 806,
	249, 0, 0, 0, 0, 0, 0, 0, 832, 842,
	875, 826, 0, 0, 0, 0, 0, 0, 0, 804,
	0, 851, 0, 0, 0, 783, 775, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 830, 0,
	0, 0, 786, 0, 805, 876, 0, 768, 268, 780,
	343, 231, 0, 880, 890, 827, 474, 894, 825, 824,
	870, 784, 886, 818, 311, 782, 293, 188, 205, 0,
	816, 353, 394, 400, 885, 801, 810, 229, 808, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 850,
	868, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 1293, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 781, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 796, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 881, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 767, 761, 760, 294, 318, 873, 912, 366, 399,
	219, 460, 420, 791, 795, 789, 790, 845, 846, 792,
	903, 904, 905, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 877, 785, 0, 793, 794, 0, 883, 892,
	893, 511, 328, 411, 457, 296, 301, 304, 849, 187,
	202, 314, 908, 388, 261, 489, 468, 464, 770, 788,
	236, 799, 807, 0, 813, 821, 822, 834, 836, 837,
	838, 839, 856, 857, 859, 867, 869, 872, 874, 879,
	889, 911, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 848, 854, 325, 254, 273, 284, 862,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 844,
	871, 321, 437, 438, 280, 897, 882, 436, 0, 829,
	900, 798, 817, 910, 820, 823, 864, 777, 843, 357,
	814, 769, 802, 772, 809, 773, 800, 831, 244, 797,
	884, 847, 899, 312, 241, 779, 803, 371, 819, 193,
	866, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 906, 316, 853, 0, 421,
	342, 0, 0, 0, 833, 888, 841, 878, 828, 865,
	787, 852, 901, 815, 861, 902, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 811, 858, 896, 812, 860, 239, 285, 246,
	238, 440, 907, 887, 776, 840, 895, 0, 0, 914,
	339, 898, 835, 0, 863, 0, 913, 771, 855, 0,
	774, 778, 909, 891, 806, 249, 0, 0, 0, 0,
	0, 0, 0, 832, 842, 875, 826, 0, 0, 0,
	0, 0, 0, 0, 804, 0, 851, 0, 0, 0,
	783, 775, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 830, 0, 0, 0, 786, 0, 805,
	876, 0, 768, 268, 780, 343, 231, 0, 880, 890,
	827, 474, 894, 825, 824, 870, 784, 886, 818, 311,
	782, 293, 188, 205, 0, 816, 353, 394, 400, 885,
	801, 810, 229, 808, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 850, 868, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	758, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 781, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	796, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 881, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 767, 761, 760, 294,
	318, 873, 912, 366, 399, 219, 460, 420, 791, 795,
	789, 790, 845, 846, 792, 903, 904, 905, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 877, 785, 0,
	793, 794, 0, 883, 892, 893, 511, 328, 411, 457,
	296, 301, 304, 849, 187, 202, 314, 908, 388, 261,
	489, 468, 464, 770, 788, 236, 799, 807, 0, 813,
	821, 822, 834, 836, 837, 838, 839, 856, 857, 859,
	867, 869, 872, 874, 879, 889, 911, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 848, 854,
	325, 254, 273, 284, 862, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 844, 871, 321, 437, 438, 280,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 1671, 0, 592, 0, 0,
	0, 244, 597, 0, 0, 0, 312, 241, 0, 1672,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 604, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 87, 0, 0, 184,
	185, 186, 653, 660, 661, 662, 663, 664, 654, 656,
	0, 0, 217, 655, 224, 615, 617, 616, 626, 627,
	628, 629, 630, 631, 632, 613, 658, 665, 666, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 575, 589, 0, 603, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 747, 0, 0, 0, 638,
	0, 588, 0, 0, 596, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 637, 0, 0, 474, 0, 0, 635, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 621, 622, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 644, 636, 608, 610, 645, 646, 605, 606, 609,
	647, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	639, 595, 594, 0, 601, 602, 0, 611, 612, 614,
	618, 619, 620, 623, 624, 625, 593, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 592, 0, 0, 0, 244, 597,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 604, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 87, 0, 0, 184, 185, 186, 653,
	660, 661, 662, 663, 664, 654, 656, 0, 0, 217,
	655, 224, 615, 617, 616, 626, 627, 628, 629, 630,
	631, 632, 613, 658, 665, 666, 0, 239, 285, 246,
	238, 440, 0, 0, 1651, 1652, 1653, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 575, 589,
	0, 603, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 587, 0, 0, 0, 0, 638, 0, 588, 0,
	0, 596, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 637, 0,
	0, 474, 0, 0, 635, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 621, 622,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 644, 636,
	608, 610, 645, 646, 605, 606, 609, 647, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 639, 595, 594,
	0, 601, 602, 0, 611, 612, 614, 618, 619, 620,
	623, 624, 625, 593, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 592, 0, 0, 0, 244, 597, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 604, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 599, 600, 0, 0, 0, 0, 0,
	0, 1753, 0, 287, 226, 192, 354, 422, 259, 0,
	87, 0, 0, 184, 185, 186, 653, 660, 661, 662,
	663, 664, 654, 656, 0, 0, 217, 655, 224, 615,
	617, 616, 626, 627, 628, 629, 630, 631, 632, 613,
	658, 665, 666, 1754, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 575, 589, 0, 603, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 587, 0,
	0, 0, 0, 638, 0, 588, 0, 0, 596, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 637, 0, 0, 474, 0,
	0, 635, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 621, 622, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 644, 636, 608, 610, 645,
	646, 605, 606, 609, 647, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 639, 595, 594, 0, 601, 602,
	0, 611, 612, 614, 618, 619, 620, 623, 624, 625,
	593, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 78, 436, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 592,
	0, 0, 0, 244, 597, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	604, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 599, 600, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 87, 0,
	0, 184, 185, 186, 653, 660, 661, 662, 663, 664,
	654, 656, 0, 0, 217, 655, 224, 615, 617, 616,
	626, 627, 628, 629, 630, 631, 632, 613, 658, 665,
	666, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 575, 589, 0, 603, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 587, 0, 0, 0,
	0, 638, 0, 588, 0, 0, 596, 667, 668, 669,
	670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 684, 685, 686, 687, 688, 689,
	690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 701, 702, 703, 704, 705, 706, 707, 598, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 637, 0, 0, 474, 0, 0, 635,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 621, 622, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 644, 636, 608, 610, 645, 646, 605,
	606, 609, 647, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 639, 595, 594, 0, 601, 602, 0, 611,
	612, 614, 618, 619, 620, 623, 624, 625, 593, 187,
	202, 314, 86, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 592, 0, 0, 0,
	244, 597, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 604, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 599, 600,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 87, 0, 0, 184, 185,
	186, 653, 660, 661, 662, 663, 664, 654, 656, 0,
	0, 217, 655, 224, 615, 617, 616, 626, 627, 628,
	629, 630, 631, 632, 613, 658, 665, 666, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	575, 589, 0, 603, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 586, 587, 0, 0, 0, 0, 638, 0,
	588, 0, 0, 596, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 598, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	637, 0, 0, 474, 0, 0, 635, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 2659, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	621, 622, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	644, 636, 608, 610, 645, 646, 605, 606, 609, 647,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 639,
	595, 594, 0, 601, 602, 0, 611, 612, 614, 618,
	619, 620, 623, 624, 625, 593, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 592, 0, 0, 0, 244, 597, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 604, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 599, 600, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 87, 0, 1260, 184, 185, 186, 653, 660,
	661, 662, 663, 664, 654, 656, 0, 0, 217, 655,
	224, 615, 617, 616, 626, 627, 628, 629, 630, 631,
	632, 613, 658, 665, 666, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 575, 589, 0,
	603, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	587, 0, 0, 0, 0, 638, 0, 588, 0, 0,
	596, 667, 668, 669, 670, 671, 672, 673, 674, 675,
	676, 677, 678, 679, 680, 681, 682, 683, 684, 685,
	686, 687, 688, 689, 690, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 701, 702, 703, 704, 705,
	706, 707, 598, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 637, 0, 0,
	474, 0, 0, 635, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 621, 622, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 644, 636, 608,
	610, 645, 646, 605, 606, 609, 647, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 639, 595, 594, 0,
	601, 602, 0, 611, 612, 614, 618, 619, 620, 623,
	624, 625, 593, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	592, 0, 0, 0, 244, 597, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 604, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 599, 600, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 87,
	0, 0, 184, 185, 186, 653, 660, 661, 662, 663,
	664, 654, 656, 0, 0, 217, 655, 224, 615, 617,
	616, 626, 627, 628, 629, 630, 631, 632, 613, 658,
	665, 666, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 575, 589, 0, 603, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 587, 747, 0,
	0, 0, 638, 0, 588, 0, 0, 596, 667, 668,
	669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 682, 683, 684, 685, 686, 687, 688,
	689, 690, 691, 692, 693, 694, 695, 696, 697, 698,
	699, 700, 701, 702, 703, 704, 705, 706, 707, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 637, 0, 0, 474, 0, 0,
	635, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 621, 622, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 644, 636, 608, 610, 645, 646,
	605, 606, 609, 647, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 639, 595, 594, 0, 601, 602, 0,
	611, 612, 614, 618, 619, 620, 623, 624, 625, 593,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 592, 0, 0,
	0, 244, 597, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 604, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 599,
	600, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 87, 0, 0, 184,
	185, 186, 653, 660, 661, 662, 663, 664, 654, 656,
	0, 0, 217, 655, 224, 615, 617, 616, 626, 627,
	628, 629, 630, 631, 632, 613, 658, 665, 666, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 575, 589, 0, 603, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 587, 0, 0, 0, 0, 638,
	0, 588, 0, 0, 596, 667, 668, 669, 670, 671,
	672, 673, 674, 675, 676, 677, 678, 679, 680, 681,
	682, 683, 684, 685, 686, 687, 688, 689, 690, 691,
	692, 693, 694, 695, 696, 697, 698, 699, 700, 701,
	702, 703, 704, 705, 706, 707, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 637, 0, 0, 474, 0, 0, 635, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 621, 622, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 644, 636, 608, 610, 645, 646, 605, 606, 609,
	647, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	639, 595, 594, 0, 601, 602, 0, 611, 612, 614,
	618, 619, 620, 623, 624, 625, 593, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 592, 0, 0, 0, 244, 597,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 604, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 599, 600, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 87, 0, 0, 184, 185, 186, 653,
	660, 661, 662, 663, 664, 654, 656, 0, 0, 217,
	655, 224, 615, 617, 616, 626, 627, 628, 629, 630,
	631, 632, 613, 658, 665, 666, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 589,
	0, 603, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 587, 0, 0, 0, 0, 638, 0, 588, 0,
	0, 596, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 637, 0,
	0, 474, 0, 0, 635, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 621, 622,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 644, 636,
	608, 610, 645, 646, 605, 606, 609, 647, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 639, 595, 594,
	0, 601, 602, 0, 611, 612, 614, 618, 619, 620,
	623, 624, 625, 593, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 660, 661, 0,
	0, 0, 0, 1596, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 667,
	668, 669, 670, 671, 672, 673, 674, 675, 676, 677,
	678, 679, 680, 681, 682, 683, 684, 685, 686, 687,
	688, 689, 690, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 701, 702, 703, 704, 705, 706, 707,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 962, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 961, 474, 0, 0, 0, 0,
	0, 958, 959, 311, 922, 293, 188, 205, 952, 956,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 78, 436,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 87, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 86,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 1741, 0, 0, 1740, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 1281, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 1283,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 1279,
	0, 0, 0, 1127, 0, 1128, 1129, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 1222, 1225, 0, 0, 0,
	0, 1221, 1224, 0, 0, 217, 1220, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	78, 436, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 87, 0, 1260,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 86, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 436, 0,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 87, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 1741, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 1693, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 1453, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 1691, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 436, 0, 321, 437, 438, 280, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 916,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 922, 293, 188, 205, 920,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 1693, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 1453, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 1260, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 2627, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 2003, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2004, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 1988, 0, 0, 0, 1989,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 1304,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 2701, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 2627,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 436, 0,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 1453, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 0, 436, 321, 437, 438,
	280, 1742, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 1283, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1158, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 0, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 1547, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 1425, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 1423, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 436, 0,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	357, 0, 1421, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 270, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 1419,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 436, 0, 321, 437, 438, 280, 0, 0,
	0, 0, 0, 0, 357, 0, 1417, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 350, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 1413, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	1411, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 185, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 1409, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	436, 0, 321, 437, 438, 280, 0, 0, 0, 0,
	0, 0, 357, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 0, 0, 0, 0, 312, 241, 0, 0,
	371, 0, 193, 0, 412, 228, 322, 319, 443, 255,
	247, 243, 227, 281, 329, 369, 430, 363, 0, 316,
	0, 0, 421, 342, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	226, 192, 354, 422, 259, 0, 1386, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 303, 307, 306, 297, 298,
	299, 300, 302, 305, 308, 0, 0, 0, 0, 0,
	239, 285, 246, 238, 440, 0, 0, 0, 0, 0,
	0, 0, 209, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 343, 231,
	0, 0, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 293, 188, 205, 0, 0, 353,
	394, 400, 0, 0, 0, 229, 0, 398, 367, 458,
	213, 257, 391, 372, 396, 379, 260, 0, 0, 397,
	317, 445, 386, 455, 475, 476, 237, 347, 465, 434,
	471, 488, 206, 234, 361, 427, 461, 418, 340, 441,
	442, 292, 417, 266, 191, 315, 481, 204, 406, 221,
	211, 197, 429, 453, 218, 409, 0, 0, 490, 199,
	451, 426, 336, 289, 290, 198, 0, 390, 242, 264,
	232, 356, 448, 449, 230, 491, 208, 470, 201, 0,
	469, 349, 444, 452, 337, 327, 200, 450, 335, 326,
	295, 309, 310, 253, 275, 384, 320, 385, 276, 345,
	344, 346, 194, 462, 0, 195, 0, 423, 463, 492,
	214, 215, 216, 0, 252, 256, 263, 265, 271, 272,
	279, 313, 360, 383, 381, 387, 0, 439, 456, 466,
	473, 479, 480, 482, 483, 484, 485, 486, 487, 348,
	278, 419, 294, 318, 0, 0, 366, 399, 219, 460,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 493, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 504, 505, 506, 507, 508, 509, 510, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	328, 411, 457, 296, 301, 304, 0, 187, 202, 314,
	0, 388, 261, 489, 468, 464, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 235, 250, 258, 269, 274,
	277, 282, 283, 286, 291, 324, 330, 331, 332, 333,
	350, 351, 352, 355, 358, 359, 362, 364, 365, 368,
	375, 376, 377, 378, 380, 382, 389, 393, 401, 402,
	403, 404, 405, 407, 408, 413, 414, 415, 416, 424,
	428, 446, 447, 459, 472, 477, 270, 454, 478, 0,
	323, 0, 0, 325, 254, 273, 284, 0, 467, 425,
	207, 395, 262, 196, 225, 210, 233, 248, 251, 288,
	334, 341, 370, 374, 267, 245, 223, 392, 220, 410,
	431, 432, 433, 435, 338, 240, 373, 436, 0, 321,
	437, 438, 280, 0, 0, 0, 0, 0, 0, 357,
	0, 0, 0, 0, 0, 0, 0, 1288, 244, 0,
	0, 0, 0, 312, 241, 0, 0, 371, 0, 193,
	0, 412, 228, 322, 319, 443, 255, 247, 243, 227,
	281, 329, 369, 430, 363, 0, 316, 0, 0, 421,
	342, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 226, 192, 354,
	422, 259, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 303, 307, 306, 297, 298, 299, 300, 302,
	305, 308, 0, 0, 0, 0, 0, 239, 285, 246,
	238, 440, 0, 0, 0, 0, 0, 0, 0, 209,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 343, 231, 0, 0, 0,
	0, 474, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 293, 188, 205, 0, 0, 353, 394, 400, 0,
	0, 0, 229, 0, 398, 367, 458, 213, 257, 391,
	372, 396, 379, 260, 0, 0, 397, 317, 445, 386,
	455, 475, 476, 237, 347, 465, 434, 471, 488, 206,
	234, 361, 427, 461, 418, 340, 441, 442, 292, 417,
	266, 191, 315, 481, 204, 406, 221, 211, 197, 429,
	453, 218, 409, 0, 0, 490, 199, 451, 426, 336,
	289, 290, 198, 0, 390, 242, 264, 232, 356, 448,
	449, 230, 491, 208, 470, 201, 0, 469, 349, 444,
	452, 337, 327, 200, 450, 335, 326, 295, 309, 310,
	253, 275, 384, 320, 385, 276, 345, 344, 346, 194,
	462, 0, 195, 0, 423, 463, 492, 214, 215, 216,
	0, 252, 256, 263, 265, 271, 272, 279, 313, 360,
	383, 381, 387, 0, 439, 456, 466, 473, 479, 480,
	482, 483, 484, 485, 486, 487, 348, 278, 419, 294,
	318, 0, 0, 366, 399, 219, 460, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 493, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 504,
	505, 506, 507, 508, 509, 510, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 328, 411, 457,
	296, 301, 304, 0, 187, 202, 314, 0, 388, 261,
	489, 468, 464, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 235, 250, 258, 269, 274, 277, 282, 283,
	286, 291, 324, 330, 331, 332, 333, 350, 351, 352,
	355, 358, 359, 362, 364, 365, 368, 375, 376, 377,
	378, 380, 382, 389, 393, 401, 402, 403, 404, 405,
	407, 408, 413, 414, 415, 416, 424, 428, 446, 447,
	459, 472, 477, 270, 454, 478, 0, 323, 0, 0,
	325, 254, 273, 284, 0, 467, 425, 207, 395, 262,
	196, 225, 210, 233, 248, 251, 288, 334, 341, 370,
	374, 267, 245, 223, 392, 220, 410, 431, 432, 433,
	435, 338, 240, 373, 436, 0, 321, 437, 438, 280,
	0, 0, 0, 0, 0, 0, 357, 0, 0, 0,
	0, 0, 0, 0, 0, 244, 0, 0, 0, 0,
	312, 241, 0, 0, 371, 0, 193, 0, 412, 228,
	322, 319, 443, 255, 247, 243, 227, 281, 329, 369,
	430, 363, 0, 316, 0, 0, 421, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 226, 192, 354, 422, 259, 0,
	0, 0, 0, 184, 185, 186, 0, 1104, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 303,
	307, 306, 297, 298, 299, 300, 302, 305, 308, 0,
	0, 0, 0, 0, 239, 285, 246, 238, 440, 0,
	0, 0, 0, 0, 0, 0, 209, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 343, 231, 0, 0, 0, 0, 474, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 293, 188,
	205, 0, 0, 353, 394, 400, 0, 0, 0, 229,
	0, 398, 367, 458, 213, 257, 391, 372, 396, 379,
	260, 0, 0, 397, 317, 445, 386, 455, 475, 476,
	237, 347, 465, 434, 471, 488, 206, 234, 361, 427,
	461, 418, 340, 441, 442, 292, 417, 266, 191, 315,
	481, 204, 406, 221, 211, 197, 429, 453, 218, 409,
	0, 0, 490, 199, 451, 426, 336, 289, 290, 198,
	0, 390, 242, 264, 232, 356, 448, 449, 230, 491,
	208, 470, 201, 0, 469, 349, 444, 452, 337, 327,
	200, 450, 335, 326, 295, 309, 310, 253, 275, 384,
	320, 385, 276, 345, 344, 346, 194, 462, 0, 195,
	0, 423, 463, 492, 214, 215, 216, 0, 252, 256,
	263, 265, 271, 272, 279, 313, 360, 383, 381, 387,
	0, 439, 456, 466, 473, 479, 480, 482, 483, 484,
	485, 486, 487, 348, 278, 419, 294, 318, 0, 0,
	366, 399, 219, 460, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 493, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 504, 505, 506, 507,
	508, 509, 510, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 511, 328, 411, 457, 296, 301, 304,
	0, 187, 202, 314, 0, 388, 261, 489, 468, 464,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 203, 212, 222, 235,
	250, 258, 269, 274, 277, 282, 283, 286, 291, 324,
	330, 331, 332, 333, 350, 351, 352, 355, 358, 359,
	362, 364, 365, 368, 375, 376, 377, 378, 380, 382,
	389, 393, 401, 402, 403, 404, 405, 407, 408, 413,
	414, 415, 416, 424, 428, 446, 447, 459, 472, 477,
	270, 454, 478, 0, 323, 0, 0, 325, 254, 273,
	284, 0, 467, 425, 207, 395, 262, 196, 225, 210,
	233, 248, 251, 288, 334, 341, 370, 374, 267, 245,
	223, 392, 220, 410, 431, 432, 433, 435, 338, 240,
	373, 436, 0, 321, 437, 438, 280, 0, 0, 0,
	0, 0, 0, 357, 0, 0, 0, 0, 0, 0,
	0, 0, 244, 0, 0, 0, 0, 312, 241, 0,
	0, 371, 0, 193, 0, 412, 228, 322, 319, 443,
	255, 247, 243, 227, 281, 329, 369, 430, 363, 0,
	316, 0, 0, 421, 342, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	287, 226, 192, 354, 422, 259, 0, 0, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 303, 307, 306, 297,
	298, 299, 300, 302, 305, 308, 0, 0, 0, 0,
	0, 239, 285, 246, 238, 440, 0, 0, 0, 0,
	0, 0, 0, 209, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 343,
	231, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 293, 188, 205, 0, 0,
	353, 394, 400, 0, 0, 0, 229, 0, 398, 367,
	458, 213, 257, 391, 372, 396, 379, 260, 0, 0,
	397, 317, 445, 386, 455, 475, 476, 237, 347, 465,
	434, 471, 488, 206, 234, 361, 427, 461, 418, 340,
	441, 442, 292, 417, 266, 191, 315, 481, 204, 406,
	221, 211, 197, 429, 453, 218, 409, 0, 0, 490,
	199, 451, 426, 336, 289, 290, 198, 0, 390, 242,
	264, 232, 356, 448, 449, 230, 491, 208, 470, 201,
	0, 469, 349, 444, 452, 337, 327, 200, 450, 335,
	326, 295, 309, 310, 253, 275, 384, 320, 385, 276,
	345, 344, 346, 194, 462, 0, 195, 0, 423, 463,
	492, 214, 215, 216, 0, 252, 256, 263, 265, 271,
	272, 279, 313, 360, 383, 381, 387, 0, 439, 456,
	466, 473, 479, 480, 482, 483, 484, 485, 486, 487,
	348, 278, 419, 294, 318, 0, 0, 366, 399, 219,
	460, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 493, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 504, 505, 506, 507, 508, 509, 510,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 328, 411, 457, 296, 301, 304, 0, 187, 202,
	314, 0, 388, 261, 489, 468, 464, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 729, 0, 0,
	0, 189, 190, 203, 212, 222, 235, 250, 258, 269,
	274, 277, 282, 283, 286, 291, 324, 330, 331, 332,
	333, 350, 351, 352, 355, 358, 359, 362, 364, 365,
	368, 375, 376, 377, 378, 380, 382, 389, 393, 401,
	402, 403, 404, 405, 407, 408, 413, 414, 415, 416,
	424, 428, 446, 447, 459, 472, 477, 270, 454, 478,
	0, 323, 0, 0, 325, 254, 273, 284, 0, 467,
	425, 207, 395, 262, 196, 225, 210, 233, 248, 251,
	288, 334, 341, 370, 374, 267, 245, 223, 392, 220,
	410, 431, 432, 433, 435, 338, 240, 373, 436, 0,
	321, 437, 438, 280, 0, 0, 0, 0, 0, 0,
	357, 0, 0, 0, 0, 0, 0, 0, 0, 244,
	0, 0, 0, 0, 312, 241, 0, 0, 371, 0,
	193, 0, 412, 228, 322, 319, 443, 255, 247, 243,
	227, 281, 329, 369, 430, 363, 0, 316, 0, 0,
	421, 342, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 226, 192,
	354, 422, 259, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 303, 307, 306, 297, 298, 299, 300,
	302, 305, 308, 0, 0, 0, 0, 0, 239, 285,
	246, 238, 440, 0, 0, 0, 0, 0, 0, 0,
	209, 339, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 567, 0, 268, 0, 343, 231, 0, 0,
	0, 0, 474, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 293, 188, 205, 0, 0, 353, 394, 400,
	0, 0, 0, 229, 0, 398, 367, 458, 213, 257,
	391, 372, 396, 379, 260, 0, 0, 397, 317, 445,
	386, 455, 475, 476, 237, 347, 465, 434, 471, 488,
	206, 234, 361, 427, 461, 418, 340, 441, 442, 292,
	417, 266, 191, 315, 481, 204, 406, 221, 211, 197,
	429, 453, 218, 409, 0, 0, 490, 199, 451, 426,
	336, 289, 290, 198, 0, 390, 242, 264, 232, 356,
	448, 449, 230, 491, 208, 470, 201, 0, 469, 349,
	444, 452, 337, 327, 200, 450, 335, 326, 295, 309,
	310, 253, 275, 384, 320, 385, 276, 345, 344, 346,
	194, 462, 0, 195, 0, 423, 463, 492, 214, 215,
	216, 0, 252, 256, 263, 265, 271, 272, 279, 313,
	360, 383, 381, 387, 0, 439, 456, 466, 473, 479,
	480, 482, 483, 484, 485, 486, 487, 348, 278, 419,
	294, 318, 0, 0, 366, 399, 219, 460, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 493,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 328, 411,
	457, 296, 301, 304, 0, 187, 202, 314, 0, 388,
	261, 489, 468, 464, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 235, 250, 258, 269, 274, 277, 282,
	283, 286, 291, 324, 330, 331, 332, 333, 350, 351,
	352, 355, 358, 359, 362, 364, 365, 368, 375, 376,
	377, 378, 380, 382, 389, 393, 401, 402, 403, 404,
	405, 407, 408, 413, 414, 415, 416, 424, 428, 446,
	447, 459, 472, 477, 566, 454, 478, 0, 323, 0,
	0, 325, 254, 273, 284, 0, 467, 425, 207, 395,
	262, 196, 225, 210, 233, 248, 251, 288, 334, 341,
	370, 374, 267, 245, 223, 392, 220, 410, 431, 432,
	433, 435, 338, 240, 373, 436, 0, 321, 437, 438,
	280, 0, 0, 0, 0, 0, 0, 357, 0, 0,
	0, 0, 0, 0, 0, 0, 244, 0, 0, 0,
	0, 312, 241, 0, 0, 371, 0, 193, 0, 412,
	228, 322, 319, 443, 255, 247, 243, 227, 281, 329,
	369, 430, 363, 0, 316, 0, 0, 421, 342, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 226, 192, 354, 422, 259,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	303, 307, 306, 297, 298, 299, 300, 302, 305, 308,
	0, 0, 0, 0, 0, 239, 285, 246, 238, 440,
	0, 0, 0, 0, 0, 0, 0, 209, 339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 343, 231, 0, 0, 514, 0, 474,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 293,
	188, 205, 0, 0, 353, 394, 400, 0, 0, 0,
	229, 0, 398, 367, 458, 213, 257, 391, 372, 396,
	379, 260, 0, 0, 397, 317, 445, 386, 455, 475,
	476, 237, 347, 465, 434, 471, 488, 206, 234, 361,
	427, 461, 418, 340, 441, 442, 292, 417, 266, 191,
	315, 481, 204, 406, 221, 211, 197, 429, 453, 218,
	409, 0, 0, 490, 199, 451, 426, 336, 289, 290,
	198, 0, 390, 242, 264, 232, 356, 448, 449, 230,
	491, 208, 470, 201, 0, 469, 349, 444, 452, 337,
	327, 200, 450, 335, 326, 295, 309, 310, 253, 275,
	384, 320, 385, 276, 345, 344, 346, 194, 462, 0,
	195, 0, 423, 463, 492, 214, 215, 216, 0, 252,
	256, 263, 265, 271, 272, 279, 313, 360, 383, 381,
	387, 0, 439, 456, 466, 473, 479, 480, 482, 483,
	484, 485, 486, 487, 348, 278, 419, 294, 318, 0,
	0, 366, 399, 219, 460, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 493, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 504, 505, 506,
	507, 508, 509, 510, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 511, 328, 411, 457, 296, 301,
	304, 0, 187, 202, 314, 0, 388, 261, 489, 468,
	464, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	235, 250, 258, 269, 274, 277, 282, 283, 286, 291,
	324, 330, 331, 332, 333, 350, 351, 352, 355, 358,
	359, 362, 364, 365, 368, 375, 376, 377, 378, 380,
	382, 389, 393, 401, 402, 403, 404, 405, 407, 408,
	413, 414, 415, 416, 424, 428, 446, 447, 459, 472,
	477, 270, 454, 478, 0, 323, 0, 0, 325, 254,
	273, 284, 0, 467, 425, 207, 395, 262, 196, 225,
	210, 233, 248, 251, 288, 334, 341, 370, 374, 267,
	245, 223, 392, 220, 410, 431, 432, 433, 435, 338,
	240, 373, 436, 0, 321, 437, 438, 280, 0, 0,
	0, 0, 0, 0, 357, 0, 0, 0, 0, 0,
	0, 0, 0, 244, 0, 0, 0, 0, 312, 241,
	0, 0, 371, 0, 193, 0, 412, 228, 322, 319,
	443, 255, 247, 243, 227, 281, 329, 369, 430, 363,
	0, 316, 0, 0, 421, 342, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 287, 226, 192, 354, 422, 259, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 303, 307, 306,
	297, 298, 299, 300, 302, 305, 308, 0, 0, 0,
	0, 0, 239, 285, 246, 238, 440, 0, 0, 0,
	0, 0, 0, 0, 209, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	343, 231, 0, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 293, 188, 205, 0,
	0, 353, 394, 400, 0, 0, 0, 229, 0, 398,
	367, 458, 213, 257, 391, 372, 396, 379, 260, 0,
	0, 397, 317, 445, 386, 455, 475, 476, 237, 347,
	465, 434, 471, 488, 206, 234, 361, 427, 461, 418,
	340, 441, 442, 292, 417, 266, 191, 315, 481, 204,
	406, 221, 211, 197, 429, 453, 218, 409, 0, 0,
	490, 199, 451, 426, 336, 289, 290, 198, 0, 390,
	242, 264, 232, 356, 448, 449, 230, 491, 208, 470,
	201, 0, 469, 349, 444, 452, 337, 327, 200, 450,
	335, 326, 295, 309, 310, 253, 275, 384, 320, 385,
	276, 345, 344, 346, 194, 462, 0, 195, 0, 423,
	463, 492, 214, 215, 216, 0, 252, 256, 263, 265,
	271, 272, 279, 313, 360, 383, 381, 387, 0, 439,
	456, 466, 473, 479, 480, 482, 483, 484, 485, 486,
	487, 348, 278, 419, 294, 318, 0, 0, 366, 399,
	219, 460, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 493, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 504, 505, 506, 507, 508, 509,
	510, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 328, 411, 457, 296, 301, 304, 0, 187,
	202, 314, 0, 388, 261, 489, 468, 464, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 235, 250, 258,
	269, 274, 277, 282, 283, 286, 291, 324, 330, 331,
	332, 333, 2706, 351, 352, 355, 358, 359, 362, 364,
	365, 368, 375, 376, 377, 378, 380, 382, 389, 393,
	401, 402, 403, 404, 405, 407, 408, 413, 414, 415,
	416, 424, 428, 446, 447, 459, 472, 477, 270, 454,
	478, 0, 323, 0, 0, 325, 254, 273, 284, 0,
	467, 425, 207, 395, 262, 196, 225, 210, 233, 248,
	251, 288, 334, 341, 370, 374, 267, 245, 223, 392,
	220, 410, 431, 432, 433, 435, 338, 240, 373, 436,
	0, 321, 437, 438, 280, 0, 0, 0, 0, 0,
	0, 357, 0, 0, 0, 0, 0, 0, 0, 0,
	244, 0, 0, 0, 0, 312, 241, 0, 0, 371,
	0, 193, 0, 412, 228, 322, 319, 443, 255, 247,
	243, 227, 281, 329, 369, 430, 363, 0, 316, 0,
	0, 421, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 287, 226,
	192, 354, 422, 259, 0, 0, 0, 0, 184, 185,
	186, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 303, 307, 306, 297, 298, 299,
	300, 302, 305, 308, 0, 0, 0, 0, 0, 239,
	285, 246, 238, 440, 0, 0, 0, 0, 0, 0,
	0, 209, 339, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 343, 231, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 293, 188, 205, 0, 0, 353, 394,
	400, 0, 0, 0, 229, 0, 398, 367, 458, 213,
	257, 391, 372, 396, 379, 260, 0, 0, 397, 317,
	445, 386, 455, 475, 476, 237, 347, 465, 434, 471,
	488, 206, 234, 361, 427, 461, 418, 340, 441, 442,
	292, 417, 266, 191, 315, 481, 204, 406, 221, 211,
	197, 429, 453, 218, 409, 0, 0, 490, 199, 451,
	426, 336, 289, 290, 198, 0, 390, 242, 264, 232,
	356, 448, 449, 230, 491, 208, 470, 201, 0, 469,
	349, 444, 452, 337, 327, 200, 450, 335, 326, 295,
	309, 310, 253, 275, 384, 320, 385, 276, 345, 344,
	346, 194, 462, 0, 195, 0, 423, 463, 492, 214,
	215, 216, 0, 252, 256, 263, 265, 271, 272, 279,
	313, 360, 383, 381, 387, 0, 439, 456, 466, 473,
	479, 480, 482, 483, 484, 485, 486, 487, 348, 278,
	419, 294, 318, 0, 0, 366, 399, 219, 460, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 504, 505, 506, 507, 508, 509, 510, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 328,
	411, 457, 296, 301, 304, 0, 187, 202, 314, 0,
	388, 261, 489, 468, 464, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 235, 250, 258, 269, 274, 277,
	282, 283, 286, 291, 324, 330, 331, 332, 333, 350,
	351, 352, 355, 358, 359, 362, 364, 365, 368, 375,
	376, 377, 378, 380, 382, 389, 393, 401, 402, 403,
	404, 405, 407, 408, 413, 414, 415, 416, 424, 428,
	446, 447, 459, 472, 477, 270, 454, 478, 0, 323,
	0, 0, 325, 254, 273, 284, 0, 467, 425, 207,
	395, 262, 196, 225, 210, 233, 248, 251, 288, 334,
	341, 370, 374, 267, 245, 223, 392, 220, 410, 431,
	432, 433, 435, 338, 240, 373, 436, 0, 321, 437,
	438, 280, 0, 0, 0, 0, 0, 0, 357, 0,
	0, 0, 0, 0, 0, 0, 0, 244, 0, 0,
	0, 0, 312, 241, 0, 0, 371, 0, 193, 0,
	412, 228, 322, 319, 443, 255, 247, 243, 227, 281,
	329, 369, 430, 363, 0, 316, 0, 0, 421, 342,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 287, 226, 192, 354, 422,
	259, 0, 0, 0, 0, 184, 2405, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	224, 303, 307, 306, 297, 298, 299, 300, 302, 305,
	308, 0, 0, 0, 0, 0, 239, 285, 246, 238,
	440, 0, 0, 0, 0, 0, 0, 0, 209, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 343, 231, 0, 0, 0, 0,
	474, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	293, 188, 205, 0, 0, 353, 394, 400, 0, 0,
	0, 229, 0, 398, 367, 458, 213, 257, 391, 372,
	396, 379, 260, 0, 0, 397, 317, 445, 386, 455,
	475, 476, 237, 347, 465, 434, 471, 488, 206, 234,
	361, 427, 461, 418, 340, 441, 442, 292, 417, 266,
	191, 315, 481, 204, 406, 221, 211, 197, 429, 453,
	218, 409, 0, 0, 490, 199, 451, 426, 336, 289,
	290, 198, 0, 390, 242, 264, 232, 356, 448, 449,
	230, 491, 208, 470, 201, 0, 469, 349, 444, 452,
	337, 327, 200, 450, 335, 326, 295, 309, 310, 253,
	275, 384, 320, 385, 276, 345, 344, 346, 194, 462,
	0, 195, 0, 423, 463, 492, 214, 215, 216, 0,
	252, 256, 263, 265, 271, 272, 279, 313, 360, 383,
	381, 387, 0, 439, 456, 466, 473, 479, 480, 482,
	483, 484, 485, 486, 487, 348, 278, 419, 294, 318,
	0, 0, 366, 399, 219, 460, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 493, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 504, 505,
	506, 507, 508, 509, 510, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 328, 411, 457, 296,
	301, 304, 0, 187, 202, 314, 0, 388, 261, 489,
	468, 464, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 235, 250, 258, 269, 274, 277, 282, 283, 286,
	291, 324, 330, 331, 332, 333, 350, 351, 352, 355,
	358, 359, 362, 364, 365, 368, 375, 376, 377, 378,
	380, 382, 389, 393, 401, 402, 403, 404, 405, 407,
	408, 413, 414, 415, 416, 424, 428, 446, 447, 459,
	472, 477, 270, 454, 478, 0, 323, 0, 0, 325,
	254, 273, 284, 0, 467, 425, 207, 395, 262, 196,
	225, 210, 233, 248, 251, 288, 334, 341, 370, 374,
	267, 245, 223, 392, 220, 410, 431, 432, 433, 435,
	338, 240, 373, 436, 0, 321, 437, 438, 280, 0,
	0, 0, 0, 0, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 244, 0, 0, 0, 0, 312,
	241, 0, 0, 371, 0, 193, 0, 412, 228, 322,
	319, 443, 255, 247, 243, 227, 281, 329, 369, 430,
	363, 0, 316, 0, 0, 421, 342, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 226, 192, 354, 422, 259, 0, 0,
	0, 0, 184, 1984, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 303, 307,
	306, 297, 298, 299, 300, 302, 305, 308, 0, 0,
	0, 0, 0, 239, 285, 246, 238, 440, 0, 0,
	0, 0, 0, 0, 0, 209, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 343, 231, 0, 0, 0, 0, 474, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 293, 188, 205,
	0, 0, 353, 394, 400, 0, 0, 0, 229, 0,
	398, 367, 458, 213, 257, 391, 372, 396, 379, 260,
	0, 0, 397, 317, 445, 386, 455, 475, 476, 237,
	347, 465, 434, 471, 488, 206, 234, 361, 427, 461,
	418, 340, 441, 442, 292, 417, 266, 191, 315, 481,
	204, 406, 221, 211, 197, 429, 453, 218, 409, 0,
	0, 490, 199, 451, 426, 336, 289, 290, 198, 0,
	390, 242, 264, 232, 356, 448, 449, 230, 491, 208,
	470, 201, 0, 469, 349, 444, 452, 337, 327, 200,
	450, 335, 326, 295, 309, 310, 253, 275, 384, 320,
	385, 276, 345, 344, 346, 194, 462, 0, 195, 0,
	423, 463, 492, 214, 215, 216, 0, 252, 256, 263,
	265, 271, 272, 279, 313, 360, 383, 381, 387, 0,
	439, 456, 466, 473, 479, 480, 482, 483, 484, 485,
	486, 487, 348, 278, 419, 294, 318, 0, 0, 366,
	399, 219, 460, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	509, 510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 328, 411, 457, 296, 301, 304, 0,
	187, 202, 314, 0, 388, 261, 489, 468, 464, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 235, 250,
	258, 269, 274, 277, 282, 283, 286, 291, 324, 330,
	331, 332, 333, 350, 351, 352, 355, 358, 359, 362,
	364, 365, 368, 375, 376, 377, 378, 380, 382, 389,
	393, 401, 402, 403, 404, 405, 407, 408, 413, 414,
	415, 416, 424, 428, 446, 447, 459, 472, 477, 270,
	454, 478, 0, 323, 0, 0, 325, 254, 273, 284,
	0, 467, 425, 207, 395, 262, 196, 225, 210, 233,
	248, 251, 288, 334, 341, 370, 374, 267, 245, 223,
	392, 220, 410, 431, 432, 433, 435, 338, 240, 373,
	0, 0, 321, 437, 438, 280,
}

var yyPact = [...]int{
	4165, -1000, -396, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1900, 1950, -1000, -1000,
	-1000, -1000, 2015, -1000, 620, 1607, -1000, 1858, 3218, -1000,
	38132, 396, -1000, 36998, 395, 491, 38132, -1000, 113, -1000,
	101, 38132, 108, 36431, -1000, -1000, -307, 16583, 1793, -27,
	-33, 38132, -1000, -1000, -1000, -1000, 1985, 1601, -1000, 300,
	-1000, -1000, -1000, -1000, -1000, -1000, 35864, -1000, -1000, -1000,
	1868, 1865, 2031, 522, 1788, -1000, 1922, 1601, -1000, 16583,
	1974, 1907, 16016, -1000, 16016, 338, -1000, -1000, 12040, -1000,
	-1000, 22255, 38132, 38132, 206, -1000, 1858, -1000, -1000, 293,
	-1000, 223, 1425, -1000, 1423, -1000, 776, 462, 252, 369,
	364, 249, 246, 245, 239, 238, 237, 236, 233, 284,
	-1000, 567, 567, -166, -167, 908, 331, 331, 331, 352,
	1817, 1814, -1000, 549, -1000, 567, 567, 283, 567, 567,
	567, 567, 199, 195, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 247,
	1858, 179, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 38132, 154, 38132, -1000, 447, 38132, 682, 682,
	36, 682, 682, 682, 682, 114, 541, -36, -1000, 112,
	173, 100, 184, 694, 176, -1000, -1000, 165, 694, 1084,
	526, 73, -1000, 682, 682, -1000, 9740, 128, 9740, 9740,
	-1000, 1825, -1000, -1000, -1000, -1000, 1105, -1000, 351, -1000,
	-1000, -1000, -1000, 38132, 35297, 298, 582, -1000, -1000, -1000,
	99, -1000, -1000, 1243, 923, 16583, 1004, -1000, 1478, 501,
	-1000, -1000, -1000, -1000, -1000, 434, 17150, 17150, 17150, 17150,
	-1000, -1000, 1438, 1438, 1438, 1438, 17150, 1438, 17150, 1438,
	1438, 1438, 1438, 16583, 1438, 1438, 1438, -1000, 1438, 1438,
	1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438,
	1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438,
	1438, 1438, 1438, 1438, 445, 1438, 1438, 1438, 1438, 1438,
	-1000, -1000, -1000, -1000, 1438, 1438, 1438, 1438, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19986, -1000, 14315,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 38132,
	-1000, 1438, 122, 38132, 38132, 250, 1922, 1601, -1000, 1985,
	1969, 300, -1000, 2010, 1773, 1198, 1009, 1601, 1399, 38132,
	-1000, 1466, -1000, -1000, -1000, 1716, 1026, 1081, -1000, -1000,
	-1000, -1000, 1196, 16583, -1000, -1000, 2012, -1000, 19419, 444,
	745, 2001, 34730, -1000, 338, 338, 1417, 11465, -55, -1000,
	-1000, -1000, 578, 25090, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1825, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1530, 38132, -1000, -1000, 2534,
	1003, -1000, 1606, -1000, 1519, -1000, 1540, 1615, 394, 1003,
	362, 359, 357, -1000, -117, -1000, -1000, -1000, -1000, -1000,
	567, 567, -1000, 281, 1967, 3218, 3381, -1000, -1000, -1000,
	34163, 1602, 1003, -1000, 1600, -1000, 671, 435, 453, 453,
	1003, -1000, -1000, 38132, 1003, 661, 656, 38132, 38132, -1000,
	33596, -1000, 33029, 32462, 951, 38132, 31895, 31328, 30761, 30194,
	29627, -1000, 1703, -1000, 1827, -1000, -1000, -1000, 38132, 38132,
	38132, 270, -1000, -1000, 38132, 1003, -1000, -1000, 950, 944,
	567, 567, 931, 1080, 1079, 1076, 567, 567, 918, 1075,
	26791, 172, 913, 898, 883, 1010, 1068, 170, 1008, 933,
	878, 38132, 1597, 38132, -1000, 161, 625, 342, 576, 1858,
	1787, 1411, 349, 375, 1003, 334, 334, 38132, -1000, 10315,
	-1000, -1000, 1056, 16583, -1000, 711, 694, 694, -1000, -1000,
	-1000, -1000, -1000, -1000, 682, 38132, 711, -1000, -1000, -1000,
	694, 682, 38132, 682, 682, 682, 682, 694, 694, 694,
	682, 38132, 38132, 38132, 38132, 38132, 38132, 38132, 38132, 38132,
	9740, 526, 682, -314, -1000, 1055, -1000, 1714, -1000, -1000,
	-1000, -1000, -1000, -1000, 9740, 9740, -1000, -1000, -1000, -1000,
	106, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-110, 1405, 29060, -1000, -315, -317, -318, -321, -1000, -1000,
	-1000, -323, -332, -1000, -1000, -1000, 16583, 16583, 16583, 16583,
	-198, -1000, 879, 17150, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 812, 640, 17150, 17150, 17150, 17150, 17150, 17150, 17150,
	17150, 17150, 17150, 17150, 17150, 17150, 17150, 17150, 743, 5954,
	5954, 501, 501, 501, 501, -1000, 16016, 16583, 16583, 501,
	-1000, 1003, 28493, 16016, 16016, 16583, 1855, 594, 923, 38132,
	-1000, 1009, -1000, -1000, -1000, 973, -1000, 38132, 38132, 111,
	16583, 16583, 16583, 16583, 16583, 16583, 13180, 16583, 16583, 16583,
	16583, 16583, 16583, 16583, 16583, 16583, 16583, 16583, 16583, 12613,
	10315, 16016, 16016, 16016, 16016, 16016, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 443, 1259, 1213,
	1506, -1000, 1402, -1000, -181, 21688, 16583, 1045, 1999, 1636,
	38132, -1000, -1000, -1000, 1922, -1000, 1922, 1259, 1853, 1733,
	16016, -1000, -1000, 1853, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1205, -1000, 38132, 1399, 1902, 38132, 1725, 1044,
	265, -1000, 16583, 16583, 1395, -1000, 867, 38132, -1000, -198,
	-1000, 27926, -1000, -1000, 9165, -1000, 38132, 229, 38132, -1000,
	21121, 27359, 10890, -55, -1000, 10890, 1327, -1000, -59, -43,
	13747, 499, -1000, -1000, -1000, 908, 18284, 1210, 499, 37,
	-1000, -1000, -1000, 1540, -1000, 1540, 1540, 1540, 1540, 265,
	265, 265, 265, -1000, -1000, -1000, -1000, -1000, 1595, 1591,
	-1000, 1540, 1540, 1540, 1540, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1590, 1590, 1590, 1542, 1542, 323, -1000, 16583,
	213, 38132, 1876, 871, 161, 336, 1635, 1003, 1003, 1003,
	336, -1000, 1576, 1534, -1000, -388, 1385, -1000, -1000, 1965,
	-1000, -1000, 689, 713, 702, 562, 38132, 133, 221, -1000,
	311, -1000, 38132, 1003, 654, 453, 1003, -1000, 1003, -1000,
	-1000, -1000, -1000, -1000, 1003, 1372, -1000, 1275, 784, 698,
	781, 629, 1372, -1000, -1000, -148, 1372, -1000, 1372, -1000,
	1372, -1000, 1372, -1000, 1372, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 618, 38132, 133, 743, -1000, 348, -1000,
	-1000, 743, 743, -1000, -1000, -1000, -1000, 1043, 1038, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -375, 38132, -1000, 155,
	570, 211, 268, 209, 38132, 162, 1913, 196, 192, 38132,
	38132, 334, 1678, 38132, 1885, 38132, -1000, -1000, -1000, -1000,
	-1000, 923, 38132, -1000, -1000, 682, 682, -1000, -1000, 38132,
	682, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 682,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 38132, -1000, -1000, -1000, -1000,
	38132, -1000, -1000, -1000, -1000, -1000, 145, -63, 294, -1000,
	-1000, -1000, -1000, -1000, 1919, -1000, 923, 678, 606, -1000,
	1438, -1000, -1000, 917, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 812, 17150, 17150, 17150, 2388, 373, 1494, 1404, 1019,
	822, 822, 885, 885, 505, 505, 505, 505, 505, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1027, -1000, 1442,
	-1000, 1421, 1187, 1009, -1000, 1442, 1442, 1216, 16016, -1000,
	-1000, 617, -1000, 16583, 1009, -1000, -1000, 1009, 1009, 1361,
	1356, 1998, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 830, 1388, 1388, 1388, 1388, 1388, 16583,
	1178, -1000, -1000, -1000, 1756, 1727, 1009, 1243, 1009, 1354,
	-1000, 1715, 1388, 1667, 1640, 1630, 1241, 1608, 1593, 1583,
	1009, 16016, 16016, 1352, 1438, 439, -1000, 1442, 1009, 1009,
	1442, 1442, 10315, 1009, -1000, 38132, -1000, -306, -1000, -81,
	544, 1438, -1000, 26791, 1009, -1000, 5913, -1000, 39266, -1000,
	-1000, -1000, -1000, -1000, 24523, 1565, 1853, -1000, -1000, 1438,
	1501, -1000, -1000, 265, -8, 23956, -1000, -1000, 923, 923,
	16583, -1000, -1000, -1000, -1000, -1000, -1000, 438, 1983, 318,
	1438, -1000, 1292, 1883, -1000, -1000, -1000, 1896, 18852, -1000,
	1438, 1438, 38132, 1634, 1317, -1000, 423, -1000, 1327, -55,
	-64, -1000, -1000, -1000, -1000, 923, -1000, 1277, 230, 330,
	-1000, 315, -1000, -1000, -1000, -1000, 1803, 33, -1000, -1000,
	-1000, 265, 265, -1000, -1000, -1000, -1000, -1000, -1000, 1024,
	1024, -1000, -1000, -1000, -1000, -1000, 857, -1000, -1000, -1000,
	844, -1000, -1000, 1545, 1617, 213, -1000, -1000, 567, 1007,
	1809, 38132, -1000, -1000, 1200, 155, 38132, 601, 1676, -1000,
	1635, 1635, 1635, 38132, -1000, -1000, -1000, -1000, -377, 51,
	296, -1000, -1000, -1000, 388, 38132, 1491, -1000, 129, -1000,
	1176, 1755, 38132, -1000, 1461, 1587, 1003, 1003, -1000, -1000,
	-1000, 38132, 1438, -1000, -1000, -1000, -1000, 374, 1851, 1849,
	133, 129, 499, 1003, -1000, -1000, -1000, -1000, -1000, -378,
	1446, 355, 139, 227, 38132, 38132, 38132, 38132, 38132, 416,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 174, 341,
	-1000, 38132, 38132, 478, -1000, -1000, -1000, 694, -1000, -1000,
	694, -1000, -1000, -1000, -1000, -1000, 1841, 38132, -69, -346,
	-1000, -343, 16583, -1000, -1000, -1000, -1000, 2199, 329, 1494,
	17150, 17150, 16016, -136, 485, 485, 743, -1000, -1000, -1000,
	16583, 16583, 1370, 584, -1000, 16583, 675, -1000, -1000, -1000,
	16583, 16583, 16583, 1009, 231, -1000, -1000, -1000, -1000, -1000,
	1991, -1000, 16583, 16583, 16583, -1000, -1000, 16583, 16583, -1000,
	16583, 16583, 17717, 1009, 17717, 16583, 16583, 17717, -1000, 1442,
	1442, 16016, 10315, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 544, -1000, 453, 453, 453, 38132, -1000,
	-1000, -1000, -1000, -1000, -1000, 1323, 1918, -1000, 1754, 1753,
	1988, 1983, -1000, 21121, 1853, -1000, -1000, 38132, -299, -1000,
	1781, 1770, -1000, -1000, -1000, -1000, 8590, 1922, 16583, 1662,
	38132, 1438, -1000, 20554, 38132, 38132, 21121, 21121, 21121, 21121,
	21121, -1000, 1704, 1701, -1000, 1692, 1677, 1728, 38132, -1000,
	1435, 1009, 1969, 18852, 300, 16583, 22822, 1175, 21121, -1000,
	-1000, 21121, 38132, 8015, -1000, -1000, -72, -52, -1000, -1000,
	-1000, -1000, 908, -1000, -1000, 1441, 1889, 1791, -1000, -1000,
	-1000, -1000, 1432, -1000, 1413, 1314, 1408, 105, -1000, 1613,
	1829, 567, 567, -1000, 843, -1000, 1003, -1000, -1000, 345,
	-1000, 1875, 38132, 1660, 1659, 1657, -1000, -386, 840, 1585,
	1469, 16583, 1564, 1964, 1270, 38132, -1000, -1000, 38132, -1000,
	-1000, 344, -1000, 213, 38132, -1000, -1000, -1000, 221, 38132,
	-1000, 5726, 129, -1000, -1000, -1000, -1000, -1000, -1000, 38132,
	147, -1000, 1544, 1088, -1000, -1000, 1622, -1000, -1000, -1000,
	-1000, 126, 203, -1000, 38132, 461, 1617, 38132, -1000, -1000,
	-1000, 682, 682, -1000, -1000, 1828, -1000, 1003, 1388, 17150,
	17150, -1000, 501, -1000, 1438, 1009, 1540, 1540, -1000, 1540,
	1542, -1000, 1540, 92, 1540, 87, 1540, -1000, -1000, 1009,
	1009, 1167, 770, -124, -1000, 923, 16583, 1535, 1472, 1388,
	-1000, 1529, 1527, 16583, 1388, 1388, 1388, -1000, 923, 1241,
	1464, 1319, -1000, -1000, -1000, -1000, 1299, 1388, 1288, 1009,
	-1000, -1000, 1009, -1000, -1000, 1915, 1915, 1915, 1387, 38699,
	38132, -1000, -1000, -1000, -1000, 1983, 1981, 1282, -1000, -1000,
	-8, 347, -1000, 1767, 1770, -1000, 1961, 1776, 1959, -1000,
	-1000, -1000, 923, -1000, 1866, 1161, -1000, 559, 1215, -1000,
	-1000, 15449, 1397, 1751, 419, 1387, 1226, 1883, 1632, 1654,
	2303, -1000, -1000, -1000, -1000, 1698, -1000, 1689, -1000, -1000,
	1466, -1000, -1000, 1213, 1009, 1272, 229, 21121, 1204, 1204,
	-1000, 384, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 719,
	5580, 2030, -1000, 998, -1000, 1039, -1000, 651, 644, -1000,
	38132, 1516, -1000, 265, 995, 265, 832, -1000, 828, -1000,
	-1000, -234, -1000, -1000, 1824, 1672, -1000, -1000, 38132, -1000,
	-1000, 38132, 38132, 38132, 1504, 1956, -1000, 16583, 1499, 555,
	1459, 38132, 38132, -1000, -1000, 212, 1438, -1000, 1367, 1342,
	-1000, -164, -1000, 16583, -1000, -1000, -1000, 906, 906, -1000,
	1466, -1000, -1000, -1000, 1138, -1000, -1000, -151, 38132, 38132,
	38132, 38132, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 501, 17150, -1000, -1000, 265, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 16583, -1000, 16583, -1000,
	1922, 993, 923, 16583, 16583, -1000, 819, 785, 1388, -1000,
	-1000, -1000, 1009, 17717, -1000, 17717, -1000, 16583, -1000, -1000,
	1438, 1741, 1438, 1438, 22822, -1000, -1000, 1981, 1978, 1955,
	1762, 1772, 1772, 1767, -1000, 1953, 1952, -1000, 992, 1947,
	972, 630, -1000, 38132, 16583, 1438, -1000, 291, 38132, 1438,
	38132, -1000, 1976, -1000, -1000, 16583, 1476, -1000, 16583, -1000,
	-1000, -1000, -1000, -1000, -1000, 5954, 1983, 1204, -1000, -1000,
	512, -1000, 16583, -1000, -1000, -1000, 4051, -1000, -1000, -1000,
	-1000, -1000, 1470, 16583, -1000, -1000, -1000, 1129, 1113, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1466, -1000, -1000,
	-1000, -1000, 221, -385, 1444, 38132, 754, -1000, 1332, 1270,
	413, -1000, 16583, 299, -1000, 221, -1000, -175, -178, 1388,
	-1000, -1000, 1888, -1000, -1000, 10315, -1000, -1000, 1460, 1627,
	-1000, 204, -1000, 1388, 1388, 1009, -1000, 1388, 1388, 1111,
	1109, -1000, -1000, 1319, -1000, 934, 23389, -1000, 1929, 1924,
	26224, 26224, 544, 1978, -1000, 16583, 16583, 1744, 842, -1000,
	-1000, -1000, -1000, 964, 955, -1000, 869, -1000, 2026, -1000,
	923, -1000, 1438, -1000, 379, 1215, -1000, 1922, 923, 38132,
	923, 21, 1976, -1000, 1388, -1000, 1438, 1438, 1438, 1438,
	1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438, 1438,
	1438, 1438, 1438, 1438, 1438, 38132, 1254, -1000, -1000, 1887,
	1258, 49, -1000, 1256, -1000, -1000, -1000, -1000, 14882, -1000,
	-1000, -1000, -1000, -1000, -1000, 300, 1264, -1000, 550, 38132,
	38132, 1009, 234, -154, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 16583, 1253, -1000, -1000, -1000, -1000, -1000,
	1253, 1253, -1000, -1000, 923, 1243, -1000, 836, -1000, -1000,
	-1000, -1000, -1000, 38132, 1215, 38132, -1000, 1185, 1009, 1438,
	1922, -1000, 1171, -1000, 300, -1000, 1430, 1469, -1000, 1009,
	-149, 10315, 7440, 1169, -1000, -1000, 1722, -143, -159, 1241,
	25657, -1000, -1000, -1000, -1000, -1000, 1197, -1000, -1000, 22822,
	37565, -1000, 1651, 999, -149, 16583, 1278, -1000, -1000, -46,
	-1000, -1000, -1000, -1000, -1000, 1622, -1000, 1721, -1000, 1009,
	-1000, -1000, -1000, 1153, -1000, 2490, -268, 1648, -1000, 1995,
	-1000, -1000, -1000, 659, 838, -1000, -1000, -1000, -1000, 1221,
	38132, 321, -1000, -1000, -151, -152, -1000, -1000, 37565, -264,
	499, 5954, -1000, -1000, 2020, 527, 527, -1000, -1000, -393,
	1135, 158, -1000, -155, -1000, -1000, 1873, 21, -1000, -1000,
	-1000, 316, 902, -1000, -1000, 753, -393, -1000, -162, -272,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 5954, 178,
	178, -1000, 1641, -1000, -1000, 5954, -1000, 1638, -252, -1000,
	-335, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2389, 2388, 28, 5, 2386, 24, 88, 190, 29,
	176, 90, 2385, 2384, 2383, 2382, 2381, 2380, 2379, 202,
	201, 200, 2376, 2375, 2354, 2348, 2347, 2343, 2340, 2338,
	2333, 2332, 197, 155, 173, 2331, 2329, 2328, 108, 172,
	82, 84, 174, 2327, 2326, 71, 2325, 2324, 2321, 165,
	163, 667, 2320, 161, 116, 33, 2316, 2315, 2308, 2305,
	2304, 2293, 2290, 2289, 2284, 2283, 2282, 2279, 2277, 2276,
	2275, 2274, 279, 2273, 2272, 16, 2271, 79, 2270, 2269,
	2267, 2266, 120, 2265, 2264, 2258, 2255, 2252, 2251, 140,
	2250, 2249, 2248, 2247, 192, 2245, 2243, 272, 106, 115,
	2242, 2241, 91, 177, 2240, 118, 2239, 2238, 2237, 147,
	2235, 4331, 2234, 65, 60, 2232, 53, 76, 58, 55,
	7, 1, 2231, 2230, 61, 78, 2229, 97, 69, 2226,
	101, 94, 2225, 2224, 12, 6, 2223, 4, 2222, 2,
	68, 2221, 2218, 127, 2216, 2214, 2212, 89, 2207, 2206,
	4546, 2205, 86, 131, 92, 73, 2204, 37, 41, 2197,
	2194, 2192, 2188, 2186, 40, 2183, 2182, 2181, 136, 30,
	158, 21, 45, 47, 124, 2180, 44, 74, 2179, 135,
	134, 2178, 52, 35, 36, 2177, 34, 123, 145, 27,
	99, 133, 2176, 2175, 43, 66, 2174, 2171, 2169, 2168,
	2167, 2166, 67, 2165, 48, 2164, 175, 2163, 22, 2162,
	46, 26, 2161, 63, 130, 70, 31, 2160, 157, 2159,
	42, 156, 121, 154, 2156, 2155, 2152, 2151, 167, 236,
	2150, 2149, 77, 160, 139, 143, 2147, 237, 2146, 2137,
	100, 1222, 2016, 20, 152, 2134, 2133, 3071, 138, 125,
	17, 2131, 179, 2126, 2124, 2119, 182, 162, 95, 863,
	107, 2116, 13, 2114, 2107, 2106, 2103, 2101, 2100, 96,
	180, 59, 9, 151, 75, 2099, 2098, 2097, 119, 93,
	2095, 150, 148, 126, 164, 2094, 159, 146, 105, 2093,
	85, 2092, 2091, 2090, 2089, 83, 2087, 2085, 2084, 2082,
	149, 141, 117, 80, 2081, 81, 110, 144, 142, 38,
	2080, 32, 2079, 2076, 169, 23, 2074, 11, 50, 49,
	19, 103, 2069, 2065, 0, 2064, 10, 166, 275, 153,
	2062, 2061, 8, 2056, 14, 2053, 132, 2052, 2050, 2049,
	18, 39, 15, 3, 2048, 2045, 4793, 2617, 128, 2022,
	178,
}

//line sql.y:6537
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 344, 345, 345, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 324, 324,
	324, 327, 327, 30, 67, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 80, 80, 20, 21, 21, 21, 21,
	348, 348, 145, 145, 143, 143, 144, 144, 213, 213,
	22, 23, 23, 223, 223, 222, 222, 222, 224, 224,
	224, 224, 259, 259, 24, 24, 24, 24, 24, 95,
	95, 326, 326, 325, 317, 317, 316, 316, 315, 323,
	323, 322, 322, 321, 36, 37, 46, 46, 46, 46,
	47, 48, 328, 328, 291, 52, 52, 51, 51, 51,
	51, 53, 53, 50, 50, 49, 49, 293, 293, 280,
	280, 292, 292, 292, 292, 292, 292, 292, 279, 279,
	106, 106, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 339, 339, 193, 193, 193, 193, 193,
	193, 115, 115, 124, 124, 124, 124, 113, 113, 114,
	112, 112, 112, 118, 118, 118, 118, 118, 118, 118,
	118, 118, 118, 118, 118, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 123, 123, 119, 119,
	119, 120, 120, 120, 121, 121, 340, 340, 340, 340,
	262, 262, 262, 262, 265, 265, 263, 263, 263, 263,
	263, 263, 263, 263, 263, 264, 264, 264, 264, 264,
	266, 266, 266, 266, 266, 267, 267, 267, 267, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 267, 267,
	268, 268, 268, 268, 268, 268, 268, 268, 278, 278,
	269, 269, 273, 273, 274, 274, 274, 275, 275, 275,
	276, 276, 271, 271, 271, 271, 271, 271, 272, 272,
	272, 281, 305, 305, 304, 304, 302, 302, 302, 302,
	290, 290, 299, 299, 299, 299, 299, 289, 289, 285,
	285, 285, 286, 286, 287, 287, 284, 284, 288, 288,
	301, 301, 300, 282, 282, 283, 283, 307, 341, 341,
	341, 341, 342, 342, 308, 333, 334, 332, 332, 332,
	332, 332, 77, 77, 77, 236, 236, 236, 297, 297,
	296, 296, 296, 298, 298, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 231, 231, 231, 331, 331, 331, 331,
	331, 331, 330, 330, 330, 294, 294, 294, 329, 329,
	54, 54, 177, 177, 43, 43, 43, 43, 43, 43,
	42, 42, 42, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 44, 44, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 82, 82, 83,
	83, 83, 83, 84, 84, 84, 310, 310, 55, 55,
	3, 3, 133, 135, 136, 136, 134, 134, 134, 134,
	134, 134, 57, 57, 56, 56, 138, 137, 139, 139,
	139, 1, 1, 2, 2, 4, 4, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 314,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 277,
	277, 277, 309, 309, 311, 313, 313, 313, 313, 312,
	91, 91, 26, 35, 35, 27, 27, 27, 27, 28,
	28, 58, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 59, 59, 59, 59, 59, 59, 59, 59,
	59, 59, 230, 230, 238, 238, 229, 229, 252, 252,
	252, 232, 232, 232, 233, 233, 338, 338, 338, 226,
	226, 60, 60, 60, 62, 62, 63, 64, 64, 254,
	254, 255, 255, 65, 66, 78, 78, 78, 78, 78,
	78, 81, 81, 81, 13, 13, 13, 13, 74, 74,
	74, 12, 12, 61, 61, 68, 335, 335, 336, 337,
	337, 337, 337, 69, 71, 29, 29, 29, 29, 29,
	29, 101, 101, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 96, 96, 96, 90, 90,
	349, 72, 73, 73, 94, 94, 94, 87, 87, 87,
	93, 93, 93, 14, 14, 15, 212, 212, 16, 16,
	98, 98, 100, 100, 100, 100, 100, 102, 102, 102,
	102, 102, 102, 102, 97, 97, 99, 99, 99, 99,
	245, 245, 245, 244, 244, 127, 127, 129, 128, 128,
	130, 130, 131, 131, 131, 131, 175, 175, 153, 153,
	210, 210, 208, 208, 209, 209, 211, 211, 211, 211,
	214, 214, 132, 132, 132, 132, 140, 140, 141, 141,
	142, 142, 253, 253, 250, 250, 250, 249, 249, 146,
	146, 146, 148, 147, 147, 147, 147, 149, 149, 151,
	151, 150, 150, 152, 157, 157, 156, 156, 154, 154,
	154, 154, 155, 155, 155, 155, 158, 158, 111, 111,
	111, 111, 111, 111, 111, 122, 122, 122, 122, 125,
	125, 125, 125, 125, 125, 125, 125, 125, 125, 125,
	116, 116, 116, 116, 116, 116, 116, 116, 116, 116,
	116, 116, 116, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 79, 79, 79, 227,
	227, 159, 159, 167, 167, 167, 167, 160, 160, 160,
	160, 160, 160, 160, 168, 168, 168, 174, 169, 169,
	165, 165, 165, 165, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 320, 320, 319, 319, 318, 318,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 350, 350, 270, 270, 270, 270, 166, 166, 166,
	166, 166, 92, 92, 92, 92, 92, 258, 258, 258,
	261, 261, 261, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 180, 180,
	88, 88, 178, 178, 179, 181, 181, 176, 176, 176,
	162, 162, 162, 182, 182, 183, 183, 184, 184, 186,
	185, 185, 187, 188, 188, 188, 189, 189, 190, 190,
	190, 45, 45, 45, 45, 45, 40, 40, 40, 40,
	41, 41, 41, 103, 103, 103, 103, 105, 105, 104,
	104, 75, 75, 76, 76, 76, 109, 109, 110, 110,
	110, 107, 107, 108, 108, 206, 206, 191, 191, 191,
	198, 198, 198, 194, 194, 196, 196, 196, 197, 197,
	197, 195, 203, 203, 205, 205, 204, 204, 200, 200,
	201, 201, 202, 202, 202, 199, 199, 161, 161, 161,
	161, 161, 207, 207, 207, 207, 215, 215, 171, 171,
	173, 173, 172, 126, 216, 216, 220, 217, 217, 221,
	221, 221, 221, 221, 218, 218, 219, 219, 246, 246,
	246, 225, 225, 237, 237, 234, 234, 235, 235, 228,
	228, 239, 239, 239, 70, 170, 170, 306, 306, 303,
	242, 242, 243, 243, 247, 247, 251, 251, 248, 248,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 346, 347, 256, 257, 257, 257,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 5, 10,
	0, 2, 0, 2, 3, 5, 3, 4, 2, 3,
	2, 3, 3, 1, 1, 0, 2, 2, 3, 3,
	2, 1, 1, 2, 2, 2, 2, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 1, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 6, 5,
	6, 4, 5, 0, 8, 9, 0, 3, 0, 1,
	0, 3, 8, 4, 1, 3, 3, 6, 7, 7,
	8, 4, 0, 1, 0, 1, 3, 3, 1, 1,
	2, 1, 1, 0, 2, 0, 2, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 2, 0, 4, 4, 3, 2,
	1, 3, 3, 3, 5, 7, 7, 6, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 2,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 5, 5, 4, 0, 2, 4, 4,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 1, 2, 1, 3,
	1, 1, 1, 4, 3, 1, 3, 4, 3, 7,
	0, 3, 1, 3, 1, 3, 1, 1, 3, 3,
	1, 3, 4, 4, 4, 3, 2, 4, 0, 1,
	0, 2, 0, 1, 0, 1, 2, 1, 1, 1,
	2, 2, 1, 2, 3, 2, 3, 2, 2, 2,
	1, 1, 3, 3, 0, 1, 1, 2, 6, 5,
	6, 6, 0, 2, 3, 3, 0, 2, 3, 3,
	3, 2, 3, 1, 6, 3, 4, 3, 1, 3,
	4, 5, 6, 3, 4, 5, 6, 3, 4, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 3, 1, 1,
	2, 2, 2, 2, 1, 1, 2, 9, 6, 6,
	6, 2, 2, 3, 3, 3, 1, 1, 1, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	6, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 6, 0, 2, 1, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 2, 3, 3, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	0, 5, 5, 2, 3, 1, 2, 2, 1, 2,
	1, 2, 2, 1, 2, 2, 1, 1, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 2, 2, 0, 3, 0, 2, 0, 1, 3,
	1, 3, 2, 0, 1, 1, 0, 1, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 1, 0, 1, 2, 4, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -344, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -58, -59, -60, -62,
	-63, -64, -65, -66, -12, -61, -29, -30, -67, -68,
	-69, -70, -71, -14, -15, -16, -7, -6, -11, 7,
	8, -80, -31, 30, -36, -46, 217, -47, -37, 218,
	-48, 220, 219, 256, 221, 249, 72, 298, 299, 301,
	302, 303, 304, -81, 254, 255, 223, 34, 43, 31,
	32, 35, 227, 262, 263, 226, -8, -32, 6, -346,
	9, 427, 251, 250, 26, -10, 447, 83, -345, 580,
	-206, -191, 20, 31, 27, -190, -186, -94, -191, 18,
	16, 5, -72, -349, -72, -72, 10, 11, -72, -291,
	-293, 83, 154, 83, -72, -52, -51, -50, -49, -53,
	29, -43, -44, -314, -42, -39, 222, 219, 266, 117,
	118, 256, 257, 258, 221, 240, 255, 259, 254, 275,
	-38, 78, 31, 447, 450, -298, 218, 224, 225, 428,
	120, 119, 73, 220, -295, 352, 550, -53, 552, 99,
	101, 551, 42, 230, 553, 554, 555, 556, 239, 557,
	558, 559, 560, 566, 567, 568, 569, 121, 5, -72,
	-251, -247, -324, -241, 86, 87, 88, 444, 242, 477,
	478, 291, 78, 39, 349, 352, 550, 298, 312, 306,
	333, 325, 445, 479, 294, 243, 279, 547, 323, 129,
	552, 297, 480, 257, 357, 358, 359, 99, 301, 395,
	565, 296, 481, 563, 101, 551, 77, 49, 42, 252,
	321, 226, 317, 553, 280, 482, 455, 273, 120, 117,
	572, 34, 315, 48, 28, 562, 119, 47, 554, 145,
	483, 555, 361, 340, 541, 46, 362, 258, 484, 81,
	263, 449, 549, 363, 316, 364, 290, 561, 223, 485,
	533, 365, 366, 542, 486, 341, 345, 487, 387, 367,
	579, 50, 488, 489, 543, 118, 490, 76, 556, 310,
	311, 491, 288, 241, 389, 337, 440, 105, 106, 107,
	108, 441, 109, 102, 442, 110, 104, 103, 111, 338,
	339, 239, 33, 368, 446, 292, 56, 267, 390, 44,
	343, 576, 43, 537, 492, 540, 336, 332, 437, 51,
	493, 494, 495, 496, 557, 335, 309, 331, 571, 130,
	285, 558, 60, 225, 347, 346, 348, 274, 386, 328,
	497, 498, 499, 246, 79, 500, 318, 19, 501, 502,
	369, 281, 503, 54, 504, 505, 393, 255, 506, 52,
	559, 37, 260, 573, 560, 507, 508, 509, 510, 262,
	511, 371, 512, 370, 342, 344, 269, 372, 448, 513,
	314, 259, 564, 514, 247, 548, 261, 266, 254, 394,
	248, 515, 516, 517, 518, 519, 295, 520, 521, 302,
	566, 438, 41, 522, 523, 524, 525, 289, 284, 388,
	397, 59, 80, 354, 526, 546, 308, 282, 527, 299,
	53, 567, 568, 569, 276, 570, 7, 577, 578, 374,
	121, 286, 287, 45, 329, 268, 528, 529, 319, 320,
	334, 307, 330, 300, 534, 270, 375, 439, 256, 530,
	396, 283, 350, 355, 452, 275, 376, 545, 451, 327,
	324, 277, 531, 377, 231, 271, 272, 532, 535, 378,
	379, 293, 380, 381, 382, 383, 384, 385, 278, 450,
	305, 322, 356, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 420, 421, 422, 423, 424,
	425, 436, 229, -72, 229, -150, -247, 229, -218, 358,
	-238, 360, 373, 368, 378, 366, -230, 369, 371, 269,
	-338, 387, 229, 375, 217, 361, 370, 379, 380, 293,
	381, 385, 278, 382, 383, 384, -324, 171, 555, 570,
	129, 326, 365, 363, 388, 537, -247, 300, -254, 305,
	-242, -324, -241, 303, -150, -78, 533, 221, -256, -256,
	-96, 537, 539, -169, -111, 138, -122, -125, -116, -117,
	-163, -164, -165, -166, -123, -176, 160, 161, 168, 139,
	-174, -126, 24, 443, 429, 428, 171, 29, 213, 66,
	67, 431, 432, 141, 55, 404, 405, -124, 400, 406,
	401, 434, 435, 112, 436, 102, 104, 103, 437, 438,
	439, 338, 339, 440, 441, 442, 105, 106, 107, 108,
	109, 110, 111, -242, -247, 234, 399, 228, 166, 427,
	-118, -114, -6, -172, 398, 402, 403, 407, -324, -241,
	-120, -119, -159, 89, 95, 100, 96, -343, 113, -346,
	90, 91, 92, 93, 94, 114, 115, 172, 173, 174,
	175, 176, 177, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 42, 374,
	374, -150, -72, -72, -72, -72, -184, -94, -186, -8,
	-6, -346, 6, -72, -6, -7, -11, -32, -34, 473,
	-33, -247, -191, -206, 10, 156, 40, 48, -189, -190,
	-10, -6, -111, 17, 21, 22, -99, 162, -111, -247,
	-73, -99, -228, 233, -72, -72, -217, -259, 300, -221,
	388, 387, -243, -219, -242, -240, -218, 386, 222, 21,
	453, 137, 23, 25, 140, 171, 124, 17, 141, 35,
	224, 326, 240, 170, 236, 428, 217, 70, 454, 400,
	401, 398, 404, 430, 431, 399, 360, 29, 11, 456,
	26, 250, 22, 36, 164, 219, 144, 457, 253, 24,
	251, 112, 115, 459, 20, 73, 245, 12, 238, 38,
	14, 460, 461, 15, 234, 233, 156, 230, 68, 9,
	213, 27, 153, 64, 462, 132, 463, 464, 465, 466,
	125, 66, 154, 18, 574, 402, 403, 31, 538, 443,
	264, 166, 71, 57, 539, 138, 467, 468, 113, 469,
	116, 74, 544, 134, 16, 69, 40, 470, 265, 471,
	235, 575, 472, 391, 473, 155, 220, 427, 67, 474,
	228, 373, 6, 433, 30, 249, 237, 123, 65, 475,
	229, 143, 434, 435, 232, 126, 114, 5, 131, 32,
	10, 72, 75, 405, 406, 407, 55, 122, 447, 142,
	13, 476, 392, 136, 129, -292, 154, -279, -283, -242,
	244, -308, 240, -150, -301, -300, -242, -95, -237, 230,
	238, 237, 131, -328, 134, 286, 399, 228, -49, -50,
	-218, 170, -82, 261, 265, 84, 84, -283, -282, -281,
	-329, 265, 244, -307, -299, 236, 245, -289, 237, 238,
	-284, 230, 132, -329, -284, 235, 245, 265, 265, 121,
	265, 121, 265, 265, 265, 265, 265, 265, 265, 265,
	265, 260, -290, 146, -290, 451, 451, -295, -329, -329,
	-329, 232, 33, 33, -239, -284, 232, 23, -290, -290,
	-218, 170, -290, -290, -290, -290, 273, 273, -290, -290,
	-290, -290, -290, -290, -290, -290, -290, -290, -290, -290,
	-290, -290, -290, 229, -328, -103, 385, 293, 78, -51,
	275, -35, -150, -237, 230, 231, -328, 262, -150, 214,
	-150, -232, 154, 13, -232, -229, 374, 372, 359, 364,
	-232, -232, -232, -232, 276, 357, -285, 230, 33, 241,
	374, 276, 357, 276, 277, 276, 277, 367, 377, 276,
	-252, 12, 156, 399, 362, 366, 269, 229, 270, 231,
	376, 277, -252, 90, -233, 154, 374, 272, -232, -232,
	-257, -346, -243, 326, -324, 540, -257, -257, 30, 87,
	232, -242, -74, -242, 90, -13, -9, -20, -19, -21,
	146, -101, 374, -89, 171, 555, 541, 542, 543, 540,
	371, 548, 546, 544, 276, 545, 84, 134, 136, 137,
	130, -111, 153, -160, 146, 147, 148, 149, 150, 151,
	152, 156, 138, 140, 154, 155, 135, 157, 158, 159,
	160, 161, 162, 163, 165, 164, 166, 167, 170, 215,
	216, -117, -117, -117, -117, -174, -346, -346, -346, -117,
	-227, -346, -117, -346, -346, -346, -346, -180, -111, -346,
	-350, -346, -350, -350, -270, -346, -270, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	-346, -346, -346, -346, -346, -346, -346, -346, -346, -346,
	214, -346, -346, -346, -346, -346, -270, -270, -270, -270,
	100, 95, 89, -176, 96, 90, -242, -247, -6, -7,
	-169, -256, -335, -336, -153, -150, -346, 293, -242, -242,
	262, -189, -10, -6, -184, -190, -186, -6, -72, -87,
	-100, 61, 62, -102, 22, 36, 65, 63, 21, -347,
	85, -347, -206, -347, 84, -34, -210, 83, 59, 41,
	90, 90, 84, 19, -185, -187, -111, 12, -245, 130,
	-244, 23, -242, 90, 214, 98, 12, -151, 27, -150,
	-228, -228, 84, 300, -221, -259, -223, -222, 389, 391,
	146, -246, -242, 90, 29, 85, 84, -150, -262, -265,
	-267, -266, -268, -263, -264, 323, 324, 171, 327, 329,
	330, 331, 332, 333, 334, 335, 336, 337, 340, 30,
	252, 319, 320, 321, 322, 341, 342, 343, 344, 345,
	346, 347, 348, 306, 325, 445, 307, 308, 309, 310,
	311, 312, 314, 315, 316, 317, 318, -327, -324, 83,
	85, 84, -269, 83, -103, 229, -324, 230, 230, 230,
	-72, 427, -290, -290, 260, 17, -42, -39, -314, 16,
	-38, -39, 222, 117, 118, 219, 83, -279, 83, -288,
	-327, -324, 83, 132, 235, 131, -287, -284, -287, -288,
	-324, -176, -324, 132, 132, -214, -242, -214, -214, 21,
	-214, 21, -214, 21, 92, -242, -214, 21, -214, 21,
	-214, 21, -214, 21, -214, 21, 29, 76, 77, 29,
	79, 80, 81, -176, -176, -279, -218, -150, -324, 92,
	92, -290, -290, 92, 90, 90, 90, -290, -290, 92,
	90, -249, -247, 90, -330, 246, 290, 292, 92, 92,
	92, 92, 29, 90, -331, 29, 562, 561, 563, 564,
	565, 92, 29, 92, 29, 92, -242, 83, -150, -109,
	280, 217, 219, 222, 74, 90, 294, 146, 42, 84,
	232, 229, -324, -234, 234, -234, -242, -248, -247, -240,
	90, -111, -286, 12, 156, -252, -252, -232, -150, -286,
	-252, -232, -150, -232, -232, -232, -232, -252, -252, -252,
	-232, -247, -247, -150, -150, -150, -150, -150, -150, -150,
	-257, -233, -232, 540, 90, -226, 12, 74, -257, -257,
	-255, 303, 337, 534, 535, 536, 84, 447, -143, -150,
	540, 540, 540, 540, 540, 540, -111, -111, -111, -111,
	469, -167, 113, 138, 114, 115, -125, -168, -172, -174,
	97, 156, 140, 154, 155, -116, -117, -116, -116, -116,
	-116, -116, -116, -116, -116, -116, -116, -116, -116, -116,
	-258, -324, 90, 171, -121, -120, 96, -343, -121, -97,
	-99, -111, -111, -324, -242, -97, -97, -111, -93, 22,
	36, -178, -179, 142, -176, -347, -347, 92, 96, -242,
	-242, -86, -85, 409, 410, 411, 412, 414, 415, 416,
	419, 420, 424, 425, 408, 426, 413, 418, 421, 422,
	423, 417, 322, -111, -111, -111, -111, -111, -111, -79,
	-111, 124, 125, 126, -111, -111, -170, -169, -323, -322,
	-321, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-98, 22, 36, -97, -243, -248, -240, -97, -98, -98,
	-97, -97, 214, -206, -347, 84, -337, 391, 392, 538,
	-250, 265, -249, 23, -170, 90, 12, -212, 75, -242,
	-189, -189, 61, 62, 57, -97, -102, -347, -33, 23,
	-208, -242, 60, 90, -271, -218, 349, 350, -111, -111,
	84, -188, 25, 26, -150, -244, 162, -248, -150, -213,
	265, -150, -128, -130, -131, -132, -153, -175, -346, -133,
	465, 462, 12, -143, -144, -152, -247, -221, -223, 84,
	390, 392, 393, 74, 116, -111, -272, 170, -297, -296,
	-295, -279, -281, -282, -283, 85, -272, -275, 355, 354,
	-269, -269, -269, -269, -269, -271, -271, -271, -271, 83,
	83, -269, -269, -269, -269, -273, 83, -273, -273, -274,
	83, -274, -308, -111, -305, -304, -302, -303, 239, 99,
	447, 75, -300, -188, 92, -109, -235, 234, -306, -303,
	-324, -324, -324, -235, -324, 90, -324, 90, -83, -55,
	-1, 574, 575, 576, 84, 17, -280, -279, -54, 290,
	-311, -312, 265, -307, -301, -288, 132, -287, -288, -288,
	-324, 84, 27, 121, 121, 121, 121, 447, 219, 30,
	-279, -54, -258, 232, -258, -258, 90, 90, -231, 570,
	-143, -105, 282, 146, 271, 271, 229, 229, 284, -150,
	295, 297, 296, 294, 21, 283, 285, 287, 273, -150,
	-150, -234, 74, -145, -150, 24, -247, -150, -232, -232,
	-150, -232, -232, -150, -242, -89, 391, 84, 447, 20,
	-90, 20, -346, 113, 114, 115, -168, -116, -117, -116,
	137, 253, 84, -347, 23, 84, 75, -347, -347, -347,
	84, 12, -97, -181, -179, 144, -111, -347, -347, -347,
	84, 84, 12, -261, 23, -347, -347, -347, -347, -347,
	-180, -347, 12, 84, 84, -347, -347, 84, 84, -347,
	84, 84, 84, -320, 84, 84, 84, 84, -347, -97,
	-97, -346, 214, -347, -347, -347, -347, -347, -243, -336,
	537, 392, -157, -156, -154, 72, 233, 73, -346, -249,
	-347, -121, 87, -209, 87, -208, -162, -242, 92, 96,
	-191, -127, -129, 12, -102, -174, 85, 84, -271, -195,
	-200, -229, -242, 90, 171, -187, 214, -158, 13, -161,
	30, 55, -9, -346, -346, 30, 84, -146, -148, -147,
	-149, 64, 68, 70, 65, 66, 67, 71, -253, 23,
	-128, -7, -6, -346, -346, -346, -150, -143, -348, 12,
	75, -348, 84, 214, -222, -224, 394, 391, 397, -324,
	90, -82, 84, -295, -283, -192, -106, 38, -276, 356,
	-271, -271, -278, 90, -278, 92, 92, 85, -45, -40,
	-41, 31, 78, -302, -290, 90, 37, -242, 85, -105,
	-150, 138, 74, -306, -306, -306, -247, -2, 573, 579,
	132, 83, 359, 16, -208, 84, 85, -177, 291, 85,
	-313, 55, -242, 85, 83, -288, -288, -242, -346, 229,
	29, 29, -54, -177, -272, -324, 572, 571, 85, 231,
	289, -110, 404, -107, 90, 86, -150, -150, -150, -150,
	-150, 222, 219, 274, 232, -143, -150, 84, -77, 248,
	243, -252, -252, 31, -150, 391, 549, 547, -111, 137,
	253, -125, -117, -99, 444, -260, 171, 323, 252, 321,
	317, 337, 328, 354, 319, 355, 316, 315, 314, -260,
	-258, -111, -111, -184, 145, -111, 143, -111, -111, -111,
	-347, 171, 323, 12, -111, -111, -111, -321, -111, -111,
	-111, -319, -318, -121, -176, -347, -319, -111, -111, -318,
	-347, -347, -98, -243, -154, -284, -284, -284, -214, 84,
	-225, 20, 12, 55, 55, -127, -158, -128, -102, -242,
	-198, 533, -203, 44, -201, -202, 45, -199, 46, 54,
	162, -189, -111, -215, 74, -216, -220, -176, -171, -173,
	-172, -346, -207, -347, -242, -214, -216, -130, -131, -131,
	-130, -131, 64, 64, 64, 69, 64, 69, 64, -147,
	-247, -347, -347, -7, -7, -111, -250, 75, -128, -128,
	-152, -247, 162, 391, 395, 396, -295, -342, 113, 138,
	29, 74, 352, 99, -340, 170, -341, 235, 131, 132,
	247, 23, 39, 85, 84, 85, 84, 85, 84, -236,
	483, 138, -41, -40, -290, -290, 92, -324, 231, 24,
	-150, 74, 74, 74, -84, 577, 92, 83, -3, 78,
	-111, 83, 17, -279, -176, 267, 156, -305, -208, -309,
	-311, -150, -113, -346, -112, -114, -118, 160, 161, -177,
	-150, -104, 280, 288, 83, -108, 87, -326, 75, 271,
	352, 271, -150, -77, -45, -150, -232, -232, 31, -324,
	-347, -125, -117, -346, -347, -269, -269, -269, -274, -269,
	311, -269, 311, -269, -347, -347, 84, -347, 20, -347,
	-88, 433, -111, 84, 84, -347, 83, 83, -111, -347,
	-347, -347, -320, 84, -347, 84, -347, 84, -347, -347,
	-155, 20, -155, -155, -347, 87, -150, -158, -182, 14,
	-195, 49, 329, -205, -204, 53, 45, -202, 17, 47,
	17, 28, -215, 84, 146, 84, -347, -347, 84, 55,
	214, -347, -158, -141, -140, 74, 75, -142, 74, -140,
	64, 64, -210, -347, -347, 84, -213, -128, -158, -158,
	214, 113, -346, -115, -124, -113, 10, 90, 90, -324,
	132, 132, -150, 83, -271, 90, -271, 92, 92, 483,
	29, 79, 80, 81, 29, 76, 77, -150, -150, -150,
	-150, -310, 83, 17, -111, 83, 146, 85, -208, -208,
	268, -172, -346, 85, -347, 84, -277, 447, 450, -111,
	-119, -119, -210, 85, -317, 447, -325, -242, -242, -242,
	-242, -116, -271, -111, -111, -189, 90, -111, -111, 92,
	92, -347, -347, -319, -318, -111, -346, 64, 16, 14,
	-346, -346, -250, -182, -183, 15, 17, -196, 51, -194,
	50, -194, -204, 17, 17, 90, 17, 90, 132, -220,
	-111, -173, 55, -9, -242, -171, -242, -184, -111, 83,
	-111, -121, -158, -158, -111, -164, 436, 102, 104, 103,
	437, 438, 439, 338, 339, 440, 441, 442, 105, 106,
	107, 108, 109, 110, 111, 83, -111, 85, 85, -210,
	-309, -55, 85, -208, 92, 85, -172, -91, -346, 264,
	-341, -311, 451, 451, -347, 23, -316, -315, -243, 83,
	75, -92, 156, 447, -347, -347, -347, -347, -347, 85,
	85, -347, -347, 84, -211, -347, -242, 235, 17, 17,
	-211, -211, -157, -183, -111, -169, -197, 52, 74, 116,
	90, 90, 90, 10, -171, 214, -189, -208, -135, 359,
	-184, -347, -208, 85, 23, 85, 579, 132, 85, 264,
	-9, 84, 146, -208, -150, -347, 445, 71, 448, -111,
	84, -347, -347, -347, 74, 116, -216, -242, 85, -347,
	-346, -189, 85, -193, -9, 83, -3, -347, -75, 447,
	-315, -294, -243, 90, 92, 85, 60, 446, 449, -320,
	-242, 235, -250, -136, -134, -242, 497, -333, -334, 74,
	-342, -339, 113, 138, 99, -340, 122, 123, -75, -111,
	83, -76, 279, 537, -326, 60, -347, -347, 84, 20,
	-262, -57, 507, -334, 74, 11, 10, 113, 90, 85,
	-208, 240, -317, 447, -134, 504, -272, -121, -332, 248,
	243, 246, 30, -332, -4, 578, 85, 281, 448, -56,
	24, -135, 242, 29, 113, 92, -4, 449, 507, -121,
	-138, -137, -139, 541, 113, 29, -137, -139, 74, -121,
	74, 457, 541,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 740,
	740, 740, 0, 740, 0, 0, 740, -2, -2, 740,
	1206, 0, 740, 0, 0, -2, 672, 674, 0, 676,
	-2, 0, 0, 685, 1683, 1683, 735, 0, 0, 0,
	0, 0, 740, 740, 740, 740, 1067, 48, 740, 0,
	83, 84, 691, 692, 693, 63, 0, 1681, 1, 3,
	69, 73, 0, 0, 0, 56, 1076, 0, 76, 0,
	0, 744, 0, 742, 0, 1189, 740, 740, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 0,
	152, 517, 457, 500, 455, 486, -2, 448, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	460, 350, 350, 0, 0, -2, 448, 448, 448, 0,
	0, 0, 483, 1191, 403, 350, 350, 0, 350, 350,
	350, 350, 0, 0, 350, 350, 350, 350, 350, 350,
	350, 350, 350, 350, 350, 350, 350, 350, 350, 1093,
	151, 1207, 1204, 1205, 38, 39, 40, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368,
	1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378,
	1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388,
	1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398,
	1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408,
	1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418,
	1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428,
	1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438,
	1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468,
	1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478,
	1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488,
	1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498,
	1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
	1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518,
	1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528,
	1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
	1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548,
	1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568,
	1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578,
	1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588,
	1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598,
	1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608,
	1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618,
	1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628,
	1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638,
	1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648,
	1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658,
	1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668,
	1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678,
	1679, 1680, 0, 1183, 0, 600, 841, 0, 661, 661,
	0, 661, 661, 661, 661, 0, 0, 0, 612, 0,
	0, 0, 0, 658, 0, 628, 629, 0, 658, 0,
	664, 0, 639, 661, 661, 642, 1684, 0, 1684, 1684,
	1174, 0, 655, 653, 667, 668, 671, 675, 0, 680,
	683, 1200, 1201, 0, 698, 47, 1439, 690, 703, 704,
	0, 736, 737, 43, 938, 0, 863, 868, 879, 892,
	893, 894, 895, 896, 898, 899, 0, 0, 0, 0,
	904, 905, 0, 0, 0, 0, 0, 919, 0, 0,
	0, 0, 0, 1048, 0, 1011, 1011, 955, 1011, 1013,
	1013, 0, 0, 0, 1680, 1472, 1475, 1476, 1497, 1580,
	1626, 1478, 1479, 1465, 1470, 1473, 1466, 1467, 1468, 1469,
	1471, 1474, 1477, 1057, 0, 0, 0, 0, 0, 0,
	256, 257, 937, 1163, 1013, 1013, 1013, 1013, -2, -2,
	203, 204, 205, 206, 207, 208, 209, 0, 199, 0,
	261, 262, 258, 259, 260, 921, 922, 215, 216, 217,
	218, 219, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 254, 255, 1683, 0,
	713, 0, 0, 0, 0, 0, 1076, 0, 1068, 1067,
	61, 0, 740, -2, 0, 0, 0, 0, 45, 0,
	50, 800, 75, 74, 1115, 0, 0, 0, 57, 1077,
	65, 67, 1078, 0, 745, 746, 0, 776, 780, 0,
	741, 0, 0, 1190, 1189, 1189, 100, 0, 1622, 1167,
	-2, -2, 0, 0, 1202, 1203, 1176, -2, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, -2, 0, 0, 161, 162, 0,
	41, 376, 0, 157, 0, 370, 320, 1093, 0, 0,
	0, 0, 0, 740, 0, 1184, 142, 143, 149, 150,
	350, 350, 497, 0, 0, 151, 151, 464, 465, 466,
	0, 0, -2, 374, 0, 449, 0, 0, 364, 364,
	368, 366, 367, 0, 0, 0, 0, 0, 0, 477,
	0, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 578, 0, 351, 0, 495, 496, 404, 0, 0,
	0, 0, 475, 476, 0, 0, 1192, 1193, 0, 0,
	350, 350, 0, 0, 0, 0, 350, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 1106, 0, 0, 0, -2,
	0, 592, 0, 0, 0, 1185, 1185, 0, 599, 0,
	601, 602, 0, 0, 603, 0, 658, 658, 656, 657,
	605, 606, 607, 608, 661, 0, 0, 359, 360, 361,
	658, 661, 0, 661, 661, 661, 661, 658, 658, 658,
	661, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1684, 664, 661, 0, 635, 0, 636, 637, 640, 641,
	643, 1685, 1686, 1223, 1684, 1684, 647, 651, 1175, 673,
	681, 684, 701, 699, 700, 702, 694, 695, 696, 697,
	0, 715, 716, 721, 0, 0, 0, 0, 727, 728,
	729, 0, 0, 732, 733, 734, 0, 0, 0, 0,
	0, 861, 0, 0, 927, 928, 929, 930, 931, 932,
	933, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 900, 901, 902, 903, 906, 0, 0, 0, 911,
	912, 0, 0, 0, 0, 0, 750, 0, 1049, 0,
	953, 0, 954, 956, 957, 0, 958, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1195,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 760,
	0, 0, 760, 760, 0, 0, 193, 194, 195, 196,
	210, 211, 212, 213, 214, 263, 1057, 0, 937, 0,
	0, 44, 705, 706, 0, 824, 1195, 0, 0, 756,
	0, 55, 64, 66, 1076, 59, 1076, 0, 762, 0,
	0, -2, -2, 763, 769, 770, 771, 772, 773, 52,
	1682, 53, 0, 72, 0, 46, 0, 0, 0, 0,
	332, 1118, 0, 0, 1069, 1070, 1073, 0, 777, 1508,
	781, 0, 783, 784, 0, 743, 0, 98, 0, 840,
	0, 0, 0, 1622, 1173, 0, 102, 103, 0, 0,
	0, 338, 1178, 1179, 1180, -2, 357, 0, 338, 327,
	271, 272, 273, 320, 275, 320, 320, 320, 320, 332,
	332, 332, 332, 303, 304, 305, 306, 307, 0, 0,
	290, 320, 320, 320, 320, 310, 311, 312, 313, 314,
	315, 316, 317, 276, 277, 278, 279, 280, 281, 282,
	283, 284, 322, 322, 322, 324, 324, 0, 42, 0,
	342, 0, 1073, 0, 1106, 1187, 1197, 0, 0, 0,
	1187, 120, 0, 0, 498, 528, 458, 487, 499, 0,
	461, 462, -2, 0, 0, 448, 0, 450, 0, 358,
	0, -2, 0, 368, 0, 364, 368, 365, 368, 356,
	369, 479, 480, 481, 0, 558, 810, 0, 0, 0,
	0, 0, 564, 565, 566, 0, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 488, 489, 490, 491,
	492, 493, 494, 0, 0, 450, 0, 484, 0, 405,
	406, 0, 0, 409, 410, 411, 412, 0, 0, 415,
	416, 417, 827, 828, 418, 442, 443, 444, 419, 420,
	421, 422, 423, 424, 425, 436, 437, 438, 439, 440,
	441, 426, 427, 428, 429, 430, 433, 0, 135, 1097,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1185, 0, 0, 0, 0, 759, 842, 1208, 1209,
	662, 663, 0, 362, 363, 661, 661, 609, 648, 0,
	661, 613, 649, 614, 616, 615, 617, 630, 631, 661,
	620, 659, 660, 621, 622, 623, 624, 625, 626, 627,
	644, 632, 633, 634, 665, 0, 669, 670, 645, 646,
	0, 682, 686, 687, 688, 689, 0, 0, 718, 94,
	723, 724, 725, 726, 738, 731, 939, 858, 859, 860,
	0, 862, 865, 0, 923, 925, 867, 869, 934, 935,
	936, 0, 0, 0, 0, 0, 873, 877, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 890, 891,
	897, 1027, 1028, 1029, 914, 264, 265, 0, 915, 0,
	774, 0, 0, 0, 913, 0, 0, 0, 0, 751,
	752, 1055, 1052, 0, 0, 1012, 1014, 0, 0, 0,
	0, 0, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 1030, 0, 0, 0, 0, 0, 1048,
	0, 916, 917, 918, 0, 0, 0, 1196, 0, 130,
	131, 0, 0, 0, 0, 0, 984, 0, 0, 0,
	0, 0, 0, 761, 1058, 0, -2, 0, 0, 0,
	0, 0, 0, 0, 1162, 0, 708, 709, 711, 0,
	844, 0, 825, 0, 0, 714, 0, 755, 0, 758,
	58, 60, 767, 768, 0, 785, 764, 54, 49, 0,
	0, 802, 1116, 332, 1138, 0, 336, 337, 1079, 1080,
	0, 1072, 1074, 1075, 77, 782, 778, 0, 856, 0,
	0, 839, 0, 788, 790, 791, 792, 822, 0, 795,
	0, 0, 0, 0, 0, 96, 841, 1168, 101, 0,
	0, 106, 107, 1169, 1170, 1171, 1172, 0, 517, -2,
	400, 163, 165, 166, 167, 158, -2, 330, 328, 329,
	274, 332, 332, 297, 298, 299, 300, 301, 302, 0,
	0, 291, 292, 293, 294, 285, 0, 286, 287, 288,
	0, 289, 375, 0, 1081, 343, 344, 346, 350, 0,
	0, 0, 371, 372, 0, 1097, 0, 0, 0, 1198,
	1197, 1197, 1197, 0, 153, 154, 155, 156, 553, 0,
	0, 529, 551, 552, 151, 0, 0, 159, 452, 451,
	0, 585, 0, 373, 0, 0, 368, 368, 353, 354,
	482, 0, 0, 560, 561, 562, 563, 0, 0, 0,
	450, 452, 338, 0, 407, 408, 413, 414, 431, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	512, 513, 514, 515, 516, 1094, 1095, 1096, 0, 0,
	593, 0, 0, 392, 92, 1186, 598, 658, 619, 650,
	658, 611, 618, 638, 678, 722, 0, 0, 0, 0,
	730, 0, 0, 866, 924, 926, 870, 0, 874, 878,
	0, 0, 0, 0, 0, 0, 0, 920, 944, 945,
	0, 0, 1067, 0, 1053, 0, 0, 952, 1015, 1016,
	0, 0, 0, 0, 0, 963, 964, 965, 966, 967,
	0, 969, 0, 0, 0, 973, 974, 0, 0, 975,
	0, 0, 0, 0, 0, 0, 0, 0, 940, 0,
	0, 760, 0, 1017, 1018, 1019, 1020, 1021, 1058, 707,
	710, 712, 798, 845, 846, 0, 0, 0, 0, 826,
	1194, 753, 754, 757, -2, 0, 0, 1060, 0, 0,
	785, 856, 786, 0, 765, 51, 801, 0, 1120, 1119,
	1132, 1145, 333, 334, 335, 1071, 0, 1076, 0, 1156,
	0, 0, 1148, 0, 0, 0, 0, 0, 0, 0,
	0, 829, 0, 0, 832, 0, 0, 0, 0, 823,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 90,
	91, 0, 0, 0, 104, 105, 0, 0, 111, 339,
	340, 144, 151, 402, 164, 382, 0, 0, 270, 331,
	295, 296, 0, 318, 0, 0, 0, 395, 116, 1085,
	1084, 350, 350, 345, 0, 348, 0, 1199, 321, 0,
	134, 0, 0, 0, 0, 0, 140, 523, 0, 0,
	530, 0, 0, 0, 456, 0, 467, 468, 0, 557,
	584, 0, 589, 342, 0, 352, 355, 811, 0, 0,
	469, 0, 452, 473, 474, 485, 434, 435, 432, 0,
	0, 1107, 1108, 1113, 1111, 1112, 121, 505, 507, 506,
	510, 0, 0, 503, 0, 392, 1081, 0, 597, 393,
	394, 661, 661, 717, 95, 0, 720, 0, 0, 0,
	0, 871, 875, 775, 0, 0, 320, 320, 1035, 320,
	324, 1038, 320, 1040, 320, 1043, 320, 1046, 1047, 0,
	0, 0, 0, 1050, 951, 1056, 0, 0, 0, 0,
	962, 0, 0, 0, 0, 0, 0, 132, 133, 984,
	0, 0, 986, 988, 989, 979, 985, 0, 0, 0,
	941, 942, 0, 1059, 847, 852, 852, 852, 0, 0,
	0, 1181, 1182, 1061, 1062, 856, 1063, 787, 766, 803,
	1138, 0, 1131, 0, -2, 1140, 0, 0, 0, 1146,
	779, 78, 857, 81, 0, 1156, 1164, 0, 1147, 1158,
	1160, 0, 0, 0, 1152, 0, 856, 789, 818, 820,
	0, 815, 830, 831, 833, 0, 835, 0, 837, 838,
	800, 794, 796, 0, 0, 0, 98, 0, 856, 856,
	97, 0, 843, 108, 109, 110, 401, 168, 173, 0,
	0, 0, 178, 0, 180, 0, 383, 0, 267, 269,
	0, 0, 171, 332, 0, 332, 0, 325, 0, 384,
	396, 0, 1082, 1083, 0, 0, 347, 349, 0, 1188,
	136, 0, 0, 0, 526, 0, 554, 0, 0, 0,
	0, 0, 0, 160, 453, 0, 0, 341, 0, 0,
	582, 579, 470, 0, 197, 198, 200, 0, 0, 472,
	800, 1098, 1099, 1100, 0, 1110, 1114, 124, 0, 0,
	0, 0, 594, 595, 596, 93, 604, 610, 719, 739,
	864, 872, 876, 0, 908, 1033, 332, 1036, 1037, 1039,
	1041, 1042, 1044, 1045, 909, 910, 0, 947, 0, 949,
	1076, 0, 1054, 0, 0, 961, 0, 0, 0, 970,
	971, 972, 0, 0, 978, 0, 980, 0, 983, 943,
	0, 0, 0, 0, 824, -2, 62, 1063, 1065, 0,
	1125, 1123, 1123, 1133, 1134, 0, 0, 1141, 0, 0,
	0, 0, 82, 0, 0, 0, 1161, 0, 0, 0,
	0, 99, 1067, 812, 819, 0, 0, 813, 0, 814,
	834, 836, 793, -2, 797, 0, 856, 856, 88, 89,
	0, 174, 0, 176, 191, 192, 0, 179, 181, 182,
	266, 268, 0, 0, 308, 319, 309, 0, 0, 397,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 800, 137, 138,
	139, 518, 0, 528, 0, 0, 0, 521, 0, 459,
	0, 588, 0, 0, 559, 0, 567, 0, 0, 0,
	201, 202, 0, 1109, 504, 0, 122, 123, 0, 0,
	509, 1022, 1034, 0, 0, 0, 1051, 0, 0, 0,
	0, 968, 976, 0, 987, 0, 0, 853, 0, 0,
	0, 0, 844, 1065, 80, 0, 0, 1128, 0, 1121,
	1124, 1122, 1135, 0, 0, 1142, 0, 1144, 0, 1165,
	1166, 1159, 0, 1151, 1154, 1150, 1153, 1076, 816, 0,
	821, 0, 1067, 87, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 323, 326, 0,
	0, 0, 519, 0, 531, 522, 586, 587, 0, 590,
	377, 583, 580, 581, 471, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 946, 948, 950, 959, 960, 1031,
	1032, 977, 981, 0, 0, 849, 806, 807, 854, 855,
	0, 0, 799, 79, 1066, 1064, 1117, 0, 1126, 1127,
	1136, 1137, 1143, 0, 1149, 0, 85, 0, 0, 0,
	1076, 175, 0, 185, 0, 527, 0, 530, 520, 0,
	1101, 0, 0, 0, 511, 907, 0, 0, 0, 984,
	0, 848, 850, 851, 1129, 1130, 1157, 1155, 817, 824,
	0, 86, 378, 382, 1101, 0, 0, 591, 501, 1103,
	127, 128, 445, 446, 447, 121, 1023, 0, 1026, 0,
	808, 809, 532, 0, 534, 0, -2, 379, 380, 0,
	169, 186, 187, 0, 0, 190, 183, 184, 117, 0,
	0, 0, 1104, 1105, 124, 1024, 982, 533, 0, 0,
	338, 0, 543, 381, 0, 0, 0, 188, 189, 555,
	0, 0, 508, 0, 535, 536, 544, 0, 385, 387,
	388, 0, 0, 386, 524, 0, 555, 1102, 0, 0,
	545, 541, 389, 390, 391, 556, 525, 1025, 0, 537,
	538, 539, 0, 548, 549, 0, 540, 0, 0, 550,
	0, 546, 547,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 139, 3, 3, 3, 165, 157, 3,
	83, 85, 162, 160, 84, 161, 214, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 580,
	147, 146, 148, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 167, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 135, 3, 168,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	136, 137, 138, 140, 141, 142, 143, 144, 145, 149,
	150, 151, 152, 153, 154, 155, 156, 158, 159, 164,
	166, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:498
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:504
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:508
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:544
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:550
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:558
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:563
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:573
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:579
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:585
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:589
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:598
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:608
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:614
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:620
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:628
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:662
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:688
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:714
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:724
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:739
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:748
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:754
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:760
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:767
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:773
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:781
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:785
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:793
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:805
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:817
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:821
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:827
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:833
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:837
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:855
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:859
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:865
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:869
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:875
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:879
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:884
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:888
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:894
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:900
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:904
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:910
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:920
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:924
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:928
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:934
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:938
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:942
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:946
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:952
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:956
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:962
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:968
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:975
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:984
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:988
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1004
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1008
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1019
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1024
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1030
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1035
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1041
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1046
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1050
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1056
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1060
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1066
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1072
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1079
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1086
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1091
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1096
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1101
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1108
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1115
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1126
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1133
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1137
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1143
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1147
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1155
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1171
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1175
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1181
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1185
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1192
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1196
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1202
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1212
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1217
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1226
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1231
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1235
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1239
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1250
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1259
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1268
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.str = ""
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1281
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1285
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1291
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1297
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1302
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1307
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1312
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1317
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1322
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1327
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1331
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1338
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1342
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1347
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1351
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1356
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1362
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1368
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1373
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1410
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1417
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1421
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1427
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1431
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1447
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1451
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1456
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1460
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1464
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1468
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1472
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = Armscii8Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = ASCIIStr
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = Big5Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = UBinaryStr
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Cp1250Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Cp1251Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Cp1256Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Cp1257Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Cp850Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Cp852Str
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Cp866Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Cp932Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Dec8Str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = EucjpmsStr
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = EuckrStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Gb18030Str
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Gb2312Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = GbkStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Geostd8Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = GreekStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = HebrewStr
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Hp8Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Keybcs2Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = Koi8rStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Koi8uStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Latin1Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Latin2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Latin5Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Latin7Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = MacceStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = MacromanStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = SjisStr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = Swe7Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = Tis620Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = Ucs2Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1619
		{
			yyVAL.str = UjisStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = Utf16Str
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = Utf16leStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Utf32Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = Utf8Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Utf8mb4Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1649
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1653
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1657
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1663
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1677
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1681
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1688
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1692
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1696
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1700
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1717
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1722
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1760
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1772
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1784
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1820
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1828
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1840
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1852
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1856
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1864
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1917
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1927
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1931
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1936
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1940
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1948
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1952
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1958
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1966
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1970
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1974
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1979
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1983
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1988
		{
			yyVAL.str = ""
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2000
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2015
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2019
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2030
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2035
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2039
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2045
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2049
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2055
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2059
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2064
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2068
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2084
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2088
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2092
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2096
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2100
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2105
		{
			yyVAL.str = ""
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2109
		{
			yyVAL.str = yyDollar[2].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2130
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = "key"
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.str = yyDollar[1].str
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2158
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2168
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2178
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2184
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2188
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2194
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2198
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2204
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2210
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2214
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2218
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2222
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2227
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2231
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2237
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2243
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2249
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2255
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2259
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2263
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2267
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2271
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2289
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2293
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2297
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2302
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2306
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2312
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2316
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2320
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2326
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2330
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2336
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2340
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2344
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2348
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2352
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2356
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2360
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2364
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2368
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2372
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2376
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2380
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2384
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2388
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2392
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2396
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2400
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2404
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2408
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2412
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2416
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2420
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2424
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2428
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2432
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2436
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2440
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2444
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2449
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2457
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2476
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = ""
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2495
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2499
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2508
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2513
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2517
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2521
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2525
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2529
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 459:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2533
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2539
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2543
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2547
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2553
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2557
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2561
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2565
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2569
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2573
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2577
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2581
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2585
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2589
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2601
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2605
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2609
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2613
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2617
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2621
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2625
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2629
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2633
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2637
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2641
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2647
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2651
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2657
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2661
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2665
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2669
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2673
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2677
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2681
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2685
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2689
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2702
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2709
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2716
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2726
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2733
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2740
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2766
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2783
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2815
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2822
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2847
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2856
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2864
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2873
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2880
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2888
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2892
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2901
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2912
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2916
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2930
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2934
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:2940
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2946
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:2952
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2962
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2966
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2972
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2978
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2984
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:2990
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2996
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3000
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3014
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3020
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3026
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3030
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3034
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3040
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3044
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3049
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3053
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3058
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3062
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3068
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3072
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3076
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3080
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3084
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3088
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3092
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3096
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3100
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3104
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3108
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3112
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3116
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3120
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3124
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3128
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3132
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3136
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3140
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3144
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3148
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3152
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3157
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3161
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3165
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3172
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3176
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3182
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3187
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3191
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3198
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3205
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3214
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.str = ""
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3224
		{
			yyVAL.str = ""
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3236
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3240
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3259
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3263
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3269
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3273
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3278
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3304
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3308
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3312
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3316
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3320
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3324
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3328
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3332
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3336
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3348
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3352
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3356
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3360
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3364
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3376
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3380
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3384
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3388
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3392
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3396
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3400
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3404
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3408
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3412
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3416
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3420
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3424
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3428
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3432
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3436
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3440
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3444
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3451
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].colIdent.String())}}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()}}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3463
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3467
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3471
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3475
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3479
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3483
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = ""
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.str = "extended "
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3499
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3503
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3509
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3513
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3519
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3533
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3537
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3541
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3551
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3557
		{
			yyVAL.empty = struct{}{}
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3561
		{
			yyVAL.empty = struct{}{}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3565
		{
			yyVAL.empty = struct{}{}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3581
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3585
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3589
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3595
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3599
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3605
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3611
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3615
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3620
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3622
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3625
		{
			yyVAL.empty = struct{}{}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			yyVAL.empty = struct{}{}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3632
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3643
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3647
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3651
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3655
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3659
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3663
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = yyDollar[1].str
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = yyDollar[1].str
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = yyDollar[1].str
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3683
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3687
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3691
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3695
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3714
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3718
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3724
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3728
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3734
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3740
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3750
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3756
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3760
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3764
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3768
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3774
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3780
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3786
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3790
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3798
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3802
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3806
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3816
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3822
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3826
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3830
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3850
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3871
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3875
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3879
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = ""
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3893
		{
			setAllowComments(yylex, true)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3897
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3903
		{
			yyVAL.strs = nil
		}
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3907
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3913
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3930
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.str = SQLCacheStr
		}
	case 750:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3939
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3943
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3947
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3969
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3974
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3978
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3984
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3988
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3993
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3997
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4002
		{
			yyVAL.strs = nil
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4006
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4010
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 765:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4014
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4018
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4028
		{
			yyVAL.str = SQLCacheStr
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4032
		{
			yyVAL.str = DistinctStr
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4036
		{
			yyVAL.str = DistinctStr
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.str = StraightJoinHint
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4044
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4048
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4054
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4058
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4064
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4068
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4072
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4076
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4081
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4085
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4089
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4101
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4105
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4111
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4117
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4121
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4131
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4135
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4139
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4143
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4149
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4153
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4159
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4163
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4168
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4172
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4178
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4182
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4188
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4192
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4198
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4202
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4206
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4216
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4220
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4233
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4237
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4241
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4245
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4251
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 817:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4253
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4257
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4263
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4265
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4268
		{
			yyVAL.empty = struct{}{}
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4270
		{
			yyVAL.empty = struct{}{}
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4281
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4288
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4294
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4298
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4302
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4308
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4314
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4318
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4322
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4326
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4332
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4336
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4346
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4356
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4375
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4381
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4385
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 848:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4391
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4395
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4399
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4403
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4408
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4412
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4416
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4420
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4437
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4441
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4445
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4449
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4453
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4457
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4461
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4468
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4472
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4476
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4480
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4486
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4490
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4494
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4498
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4502
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4506
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4510
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4514
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4518
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4522
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4526
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4532
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4536
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4540
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4544
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4548
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4552
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4556
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4560
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4564
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4568
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4572
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4576
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4580
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4586
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4590
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4594
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4602
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4606
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4610
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4614
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4618
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4622
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4626
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4630
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4634
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4638
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4642
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4646
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4650
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4654
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4658
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4666
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4670
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4688
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4692
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:4696
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4702
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4706
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4712
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4716
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4723
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4727
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4731
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4735
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4741
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4745
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4749
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4753
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4757
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4761
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4765
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4771
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4775
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4779
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4786
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4792
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4796
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 940:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4806
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4810
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4814
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4818
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4828
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4832
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4836
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4840
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4844
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4848
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4852
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4856
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4860
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4864
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4875
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4879
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4885
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4894
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4898
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4902
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4906
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4910
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4914
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4918
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4922
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4926
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4930
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4934
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4938
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4942
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4946
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4950
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4954
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4958
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4962
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4966
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4970
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4974
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4978
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4982
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4986
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4990
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4994
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:4999
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5003
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5009
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5013
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5019
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5023
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5029
		{
		}
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5031
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5035
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5039
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5043
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5047
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5051
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5055
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5059
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5063
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5067
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5071
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5077
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5081
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5085
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5089
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5093
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5097
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5101
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5105
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5109
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5123
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5127
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5131
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5164
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5168
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5172
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5176
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:5180
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5186
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5190
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5194
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5200
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5204
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5208
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5214
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5218
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5222
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5226
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5230
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5236
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5240
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5244
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5248
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5252
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5256
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5260
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5264
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5268
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5272
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5278
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5282
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5287
		{
			yyVAL.str = string("")
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5291
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:5297
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5301
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1054:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:5307
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5312
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5316
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5322
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5326
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5330
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5336
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5349
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5355
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5359
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5368
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5373
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5377
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5383
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5389
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5393
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1072:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5399
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5404
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5408
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5412
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5417
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5421
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5427
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5431
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5435
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5440
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5444
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5448
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5452
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5456
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5463
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5467
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5471
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5475
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5481
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5485
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5489
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5494
		{
			yyVAL.str = ""
		}
	case 1094:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5498
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5502
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5506
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1097:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5511
		{
			yyVAL.str = ""
		}
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5515
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5521
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5525
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5530
		{
			yyVAL.str = ""
		}
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5534
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5539
		{
			yyVAL.str = "cascaded"
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5543
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5547
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5552
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5556
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5562
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5568
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5574
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5583
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5587
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5592
		{
			yyVAL.str = ""
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5596
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5602
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5606
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5612
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5616
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5620
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5625
		{
			yyVAL.str = ""
		}
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5629
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5633
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5638
		{
			yyVAL.str = ""
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5642
		{
			yyVAL.str = " header"
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5647
		{
			yyVAL.str = ""
		}
	case 1126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5651
		{
			yyVAL.str = " manifest on"
		}
	case 1127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5655
		{
			yyVAL.str = " manifest off"
		}
	case 1128:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5660
		{
			yyVAL.str = ""
		}
	case 1129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5664
		{
			yyVAL.str = " overwrite on"
		}
	case 1130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5668
		{
			yyVAL.str = " overwrite off"
		}
	case 1131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5674
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1132:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5679
		{
			yyVAL.str = ""
		}
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5683
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5693
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5699
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5703
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1138:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5708
		{
			yyVAL.str = ""
		}
	case 1139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5712
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5718
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5722
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1142:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5728
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1143:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5732
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5736
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1145:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5741
		{
			yyVAL.str = ""
		}
	case 1146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5745
		{
			yyVAL.str = " optionally"
		}
	case 1147:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5758
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5762
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5766
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5770
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5774
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5780
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5784
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5788
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1155:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5792
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1156:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5801
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5807
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5811
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5817
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5821
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5827
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5832
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5842
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5846
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5852
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5858
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5862
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5868
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5872
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5876
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5880
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5884
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5892
		{
			yyVAL.str = "charset"
		}
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5919
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5921
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5924
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5931
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5934
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5939
		{
			yyVAL.empty = struct{}{}
		}
	case 1192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5941
		{
			yyVAL.empty = struct{}{}
		}
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5943
		{
			yyVAL.empty = struct{}{}
		}
	case 1194:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5947
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5952
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5956
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5961
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5963
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5967
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5973
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5977
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5984
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5990
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5994
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6000
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6004
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6011
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6507
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6516
		{
			decNesting(yylex)
		}
	case 1683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6521
		{
			skipToEnd(yylex)
		}
	case 1684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6526
		{
			skipToEnd(yylex)
		}
	case 1685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6530
		{
			skipToEnd(yylex)
		}
	case 1686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6534
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
