// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const INTEGRAL = 57430
const FLOAT = 57431
const HEXNUM = 57432
const VALUE_ARG = 57433
const LIST_ARG = 57434
const COMMENT = 57435
const COMMENT_KEYWORD = 57436
const BIT_LITERAL = 57437
const COMPRESSION = 57438
const NULL = 57439
const TRUE = 57440
const FALSE = 57441
const OFF = 57442
const DISCARD = 57443
const IMPORT = 57444
const ENABLE = 57445
const DISABLE = 57446
const TABLESPACE = 57447
const VIRTUAL = 57448
const STORED = 57449
const EMPTY_FROM_CLAUSE = 57450
const LOWER_THAN_CHARSET = 57451
const CHARSET = 57452
const UNIQUE = 57453
const KEY = 57454
const OR = 57455
const XOR = 57456
const AND = 57457
const NOT = 57458
const BETWEEN = 57459
const CASE = 57460
const WHEN = 57461
const THEN = 57462
const ELSE = 57463
const END = 57464
const LE = 57465
const GE = 57466
const NE = 57467
const NULL_SAFE_EQUAL = 57468
const IS = 57469
const LIKE = 57470
const REGEXP = 57471
const IN = 57472
const SHIFT_LEFT = 57473
const SHIFT_RIGHT = 57474
const DIV = 57475
const MOD = 57476
const UNARY = 57477
const COLLATE = 57478
const BINARY = 57479
const UNDERSCORE_BINARY = 57480
const UNDERSCORE_UTF8MB4 = 57481
const UNDERSCORE_UTF8 = 57482
const UNDERSCORE_LATIN1 = 57483
const INTERVAL = 57484
const JSON_EXTRACT_OP = 57485
const JSON_UNQUOTE_EXTRACT_OP = 57486
const CREATE = 57487
const ALTER = 57488
const DROP = 57489
const RENAME = 57490
const ANALYZE = 57491
const ADD = 57492
const FLUSH = 57493
const CHANGE = 57494
const MODIFY = 57495
const REVERT = 57496
const SCHEMA = 57497
const TABLE = 57498
const INDEX = 57499
const VIEW = 57500
const TO = 57501
const IGNORE = 57502
const IF = 57503
const PRIMARY = 57504
const COLUMN = 57505
const SPATIAL = 57506
const FULLTEXT = 57507
const KEY_BLOCK_SIZE = 57508
const CHECK = 57509
const INDEXES = 57510
const ACTION = 57511
const CASCADE = 57512
const CONSTRAINT = 57513
const FOREIGN = 57514
const NO = 57515
const REFERENCES = 57516
const RESTRICT = 57517
const SHOW = 57518
const DESCRIBE = 57519
const EXPLAIN = 57520
const DATE = 57521
const ESCAPE = 57522
const REPAIR = 57523
const OPTIMIZE = 57524
const TRUNCATE = 57525
const COALESCE = 57526
const EXCHANGE = 57527
const REBUILD = 57528
const PARTITIONING = 57529
const REMOVE = 57530
const MAXVALUE = 57531
const PARTITION = 57532
const REORGANIZE = 57533
const LESS = 57534
const THAN = 57535
const PROCEDURE = 57536
const TRIGGER = 57537
const VINDEX = 57538
const VINDEXES = 57539
const DIRECTORY = 57540
const NAME = 57541
const UPGRADE = 57542
const STATUS = 57543
const VARIABLES = 57544
const WARNINGS = 57545
const CASCADED = 57546
const DEFINER = 57547
const OPTION = 57548
const SQL = 57549
const UNDEFINED = 57550
const SEQUENCE = 57551
const MERGE = 57552
const TEMPORARY = 57553
const TEMPTABLE = 57554
const INVOKER = 57555
const SECURITY = 57556
const FIRST = 57557
const AFTER = 57558
const LAST = 57559
const VITESS_MIGRATION = 57560
const CANCEL = 57561
const RETRY = 57562
const COMPLETE = 57563
const BEGIN = 57564
const START = 57565
const TRANSACTION = 57566
const COMMIT = 57567
const ROLLBACK = 57568
const SAVEPOINT = 57569
const RELEASE = 57570
const WORK = 57571
const BIT = 57572
const TINYINT = 57573
const SMALLINT = 57574
const MEDIUMINT = 57575
const INT = 57576
const INTEGER = 57577
const BIGINT = 57578
const INTNUM = 57579
const REAL = 57580
const DOUBLE = 57581
const FLOAT_TYPE = 57582
const DECIMAL = 57583
const NUMERIC = 57584
const TIME = 57585
const TIMESTAMP = 57586
const DATETIME = 57587
const YEAR = 57588
const CHAR = 57589
const VARCHAR = 57590
const BOOL = 57591
const CHARACTER = 57592
const VARBINARY = 57593
const NCHAR = 57594
const TEXT = 57595
const TINYTEXT = 57596
const MEDIUMTEXT = 57597
const LONGTEXT = 57598
const BLOB = 57599
const TINYBLOB = 57600
const MEDIUMBLOB = 57601
const LONGBLOB = 57602
const JSON = 57603
const ENUM = 57604
const GEOMETRY = 57605
const POINT = 57606
const LINESTRING = 57607
const POLYGON = 57608
const GEOMETRYCOLLECTION = 57609
const MULTIPOINT = 57610
const MULTILINESTRING = 57611
const MULTIPOLYGON = 57612
const NULLX = 57613
const AUTO_INCREMENT = 57614
const APPROXNUM = 57615
const SIGNED = 57616
const UNSIGNED = 57617
const ZEROFILL = 57618
const CODE = 57619
const COLLATION = 57620
const COLUMNS = 57621
const DATABASES = 57622
const ENGINES = 57623
const EVENT = 57624
const EXTENDED = 57625
const FIELDS = 57626
const FULL = 57627
const FUNCTION = 57628
const GTID_EXECUTED = 57629
const KEYSPACES = 57630
const OPEN = 57631
const PLUGINS = 57632
const PRIVILEGES = 57633
const PROCESSLIST = 57634
const SCHEMAS = 57635
const TABLES = 57636
const TRIGGERS = 57637
const USER = 57638
const VGTID_EXECUTED = 57639
const VITESS_KEYSPACES = 57640
const VITESS_METADATA = 57641
const VITESS_MIGRATIONS = 57642
const VITESS_SHARDS = 57643
const VITESS_TABLETS = 57644
const VSCHEMA = 57645
const NAMES = 57646
const GLOBAL = 57647
const SESSION = 57648
const ISOLATION = 57649
const LEVEL = 57650
const READ = 57651
const WRITE = 57652
const ONLY = 57653
const REPEATABLE = 57654
const COMMITTED = 57655
const UNCOMMITTED = 57656
const SERIALIZABLE = 57657
const CURRENT_TIMESTAMP = 57658
const DATABASE = 57659
const CURRENT_DATE = 57660
const CURRENT_TIME = 57661
const LOCALTIME = 57662
const LOCALTIMESTAMP = 57663
const CURRENT_USER = 57664
const UTC_DATE = 57665
const UTC_TIME = 57666
const UTC_TIMESTAMP = 57667
const REPLACE = 57668
const CONVERT = 57669
const CAST = 57670
const SUBSTR = 57671
const SUBSTRING = 57672
const GROUP_CONCAT = 57673
const SEPARATOR = 57674
const TIMESTAMPADD = 57675
const TIMESTAMPDIFF = 57676
const MATCH = 57677
const AGAINST = 57678
const BOOLEAN = 57679
const LANGUAGE = 57680
const WITH = 57681
const QUERY = 57682
const EXPANSION = 57683
const WITHOUT = 57684
const VALIDATION = 57685
const UNUSED = 57686
const ARRAY = 57687
const CUME_DIST = 57688
const DESCRIPTION = 57689
const DENSE_RANK = 57690
const EMPTY = 57691
const EXCEPT = 57692
const FIRST_VALUE = 57693
const GROUPING = 57694
const GROUPS = 57695
const JSON_TABLE = 57696
const LAG = 57697
const LAST_VALUE = 57698
const LATERAL = 57699
const LEAD = 57700
const MEMBER = 57701
const NTH_VALUE = 57702
const NTILE = 57703
const OF = 57704
const OVER = 57705
const PERCENT_RANK = 57706
const RANK = 57707
const RECURSIVE = 57708
const ROW_NUMBER = 57709
const SYSTEM = 57710
const WINDOW = 57711
const ACTIVE = 57712
const ADMIN = 57713
const BUCKETS = 57714
const CLONE = 57715
const COMPONENT = 57716
const DEFINITION = 57717
const ENFORCED = 57718
const EXCLUDE = 57719
const FOLLOWING = 57720
const GEOMCOLLECTION = 57721
const GET_MASTER_PUBLIC_KEY = 57722
const HISTOGRAM = 57723
const HISTORY = 57724
const INACTIVE = 57725
const INVISIBLE = 57726
const LOCKED = 57727
const MASTER_COMPRESSION_ALGORITHMS = 57728
const MASTER_PUBLIC_KEY_PATH = 57729
const MASTER_TLS_CIPHERSUITES = 57730
const MASTER_ZSTD_COMPRESSION_LEVEL = 57731
const NESTED = 57732
const NETWORK_NAMESPACE = 57733
const NOWAIT = 57734
const NULLS = 57735
const OJ = 57736
const OLD = 57737
const OPTIONAL = 57738
const ORDINALITY = 57739
const ORGANIZATION = 57740
const OTHERS = 57741
const PATH = 57742
const PERSIST = 57743
const PERSIST_ONLY = 57744
const PRECEDING = 57745
const PRIVILEGE_CHECKS_USER = 57746
const PROCESS = 57747
const RANDOM = 57748
const REFERENCE = 57749
const REQUIRE_ROW_FORMAT = 57750
const RESOURCE = 57751
const RESPECT = 57752
const RESTART = 57753
const RETAIN = 57754
const REUSE = 57755
const ROLE = 57756
const SECONDARY = 57757
const SECONDARY_ENGINE = 57758
const SECONDARY_LOAD = 57759
const SECONDARY_UNLOAD = 57760
const SKIP = 57761
const SRID = 57762
const THREAD_PRIORITY = 57763
const TIES = 57764
const UNBOUNDED = 57765
const VCPU = 57766
const VISIBLE = 57767
const FORMAT = 57768
const TREE = 57769
const VITESS = 57770
const TRADITIONAL = 57771
const LOCAL = 57772
const LOW_PRIORITY = 57773
const NO_WRITE_TO_BINLOG = 57774
const LOGS = 57775
const ERROR = 57776
const GENERAL = 57777
const HOSTS = 57778
const OPTIMIZER_COSTS = 57779
const USER_RESOURCES = 57780
const SLOW = 57781
const CHANNEL = 57782
const RELAY = 57783
const EXPORT = 57784
const AVG_ROW_LENGTH = 57785
const CONNECTION = 57786
const CHECKSUM = 57787
const DELAY_KEY_WRITE = 57788
const ENCRYPTION = 57789
const ENGINE = 57790
const INSERT_METHOD = 57791
const MAX_ROWS = 57792
const MIN_ROWS = 57793
const PACK_KEYS = 57794
const PASSWORD = 57795
const FIXED = 57796
const DYNAMIC = 57797
const COMPRESSED = 57798
const REDUNDANT = 57799
const COMPACT = 57800
const ROW_FORMAT = 57801
const STATS_AUTO_RECALC = 57802
const STATS_PERSISTENT = 57803
const STATS_SAMPLE_PAGES = 57804
const STORAGE = 57805
const MEMORY = 57806
const DISK = 57807

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 45,
	1, 126,
	483, 126,
	-2, 132,
	-1, 46,
	113, 132,
	152, 132,
	267, 132,
	-2, 355,
	-1, 53,
	33, 504,
	174, 504,
	185, 504,
	218, 518,
	219, 518,
	-2, 506,
	-1, 58,
	176, 528,
	-2, 526,
	-1, 107,
	173, 975,
	-2, 105,
	-1, 109,
	1, 127,
	483, 127,
	-2, 132,
	-1, 119,
	114, 258,
	179, 258,
	-2, 349,
	-1, 138,
	113, 132,
	152, 132,
	267, 132,
	-2, 364,
	-1, 580,
	159, 996,
	-2, 992,
	-1, 581,
	159, 997,
	-2, 993,
	-1, 591,
	57, 596,
	-2, 604,
	-1, 625,
	127, 1347,
	-2, 98,
	-1, 626,
	127, 1228,
	-2, 99,
	-1, 632,
	127, 1279,
	-2, 969,
	-1, 772,
	127, 1162,
	-2, 966,
	-1, 808,
	184, 38,
	189, 38,
	-2, 269,
	-1, 885,
	1, 402,
	483, 402,
	-2, 132,
	-1, 1076,
	57, 597,
	-2, 609,
	-1, 1077,
	57, 598,
	-2, 610,
	-1, 1138,
	1, 299,
	483, 299,
	-2, 132,
	-1, 1141,
	23, 151,
	-2, 153,
	-1, 1214,
	114, 258,
	179, 258,
	-2, 349,
	-1, 1223,
	184, 39,
	189, 39,
	-2, 270,
	-1, 1434,
	159, 1001,
	-2, 995,
	-1, 1519,
	75, 80,
	84, 80,
	-2, 84,
	-1, 1540,
	1, 300,
	483, 300,
	-2, 132,
	-1, 1946,
	47, 937,
	-2, 931,
	-1, 1978,
	5, 43,
	16, 43,
	18, 43,
	85, 43,
	-2, 637,
}

const yyPrivate = 57344

const yyLast = 30267

var yyAct = [...]int{
	580, 2141, 2037, 2298, 2273, 2260, 2206, 1795, 523, 946,
	1802, 1958, 553, 34, 1757, 3, 1063, 2167, 552, 1724,
	1607, 1803, 2138, 1959, 2172, 2079, 1469, 1844, 89, 2085,
	588, 538, 1758, 1955, 1947, 1741, 1824, 1572, 1887, 1848,
	2159, 1577, 1826, 147, 1749, 521, 896, 35, 1905, 175,
	1592, 775, 175, 1970, 486, 175, 1825, 601, 33, 1736,
	502, 1537, 175, 1419, 1685, 1515, 1078, 1431, 925, 1427,
	175, 1221, 1120, 133, 1638, 1605, 1591, 1579, 1123, 1330,
	1239, 803, 514, 838, 1818, 1130, 592, 1504, 1471, 1114,
	602, 1195, 1497, 84, 1113, 1116, 1450, 1098, 1066, 1396,
	590, 964, 502, 604, 630, 502, 175, 502, 1327, 816,
	525, 627, 809, 782, 1589, 1313, 1102, 1335, 613, 779,
	1084, 594, 783, 1228, 804, 88, 1489, 1568, 91, 1521,
	150, 8, 593, 805, 1129, 1190, 806, 1127, 944, 509,
	1213, 116, 7, 79, 1462, 6, 117, 82, 110, 1040,
	1484, 111, 1636, 95, 1867, 1866, 1894, 1895, 1485, 1743,
	791, 1299, 1385, 611, 881, 616, 177, 178, 179, 786,
	1466, 1467, 1384, 1037, 1383, 1382, 112, 595, 83, 1381,
	1380, 1369, 843, 512, 515, 513, 776, 118, 2294, 1373,
	1722, 97, 98, 99, 100, 101, 1943, 2117, 107, 2202,
	2006, 172, 2201, 510, 455, 2136, 842, 841, 2137, 2312,
	2283, 607, 460, 2311, 2252, 2306, 1675, 2142, 2274, 840,
	1624, 2282, 1430, 1922, 587, 2069, 591, 1204, 1723, 596,
	820, 1984, 854, 855, 603, 858, 859, 860, 861, 624,
	112, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 851, 819, 797, 1584,
	631, 796, 2251, 1893, 932, 565, 934, 571, 572, 569,
	570, 798, 568, 567, 566, 1874, 844, 845, 846, 1873,
	1522, 1582, 573, 574, 1788, 1985, 1986, 1787, 1673, 965,
	1789, 72, 1468, 171, 74, 39, 40, 795, 1531, 890,
	891, 942, 931, 933, 112, 1532, 1533, 915, 1131, 856,
	1132, 920, 921, 790, 903, 792, 585, 113, 584, 904,
	1811, 903, 2082, 916, 909, 884, 904, 902, 2060, 901,
	155, 1552, 1551, 880, 2039, 177, 178, 179, 2058, 498,
	171, 500, 177, 178, 179, 1906, 1372, 504, 1649, 1647,
	1648, 1289, 1070, 793, 975, 1374, 1375, 1376, 1606, 965,
	1849, 489, 489, 489, 113, 1870, 489, 1581, 80, 489,
	2033, 795, 1792, 787, 1639, 1644, 2310, 155, 2034, 938,
	789, 788, 1651, 1319, 1652, 152, 1653, 153, 1908, 1314,
	929, 918, 919, 1290, 930, 1291, 170, 922, 941, 917,
	910, 924, 857, 886, 935, 799, 1882, 923, 1654, 477,
	2040, 1643, 863, 862, 2295, 2198, 2041, 1641, 476, 795,
	879, 2131, 827, 1608, 975, 928, 1498, 793, 1645, 474,
	836, 835, 152, 834, 153, 825, 833, 832, 831, 830,
	829, 824, 800, 170, 971, 1207, 837, 963, 1807, 2307,
	1910, 1642, 1914, 780, 1909, 175, 1907, 175, 812, 794,
	175, 1912, 156, 2304, 780, 780, 811, 471, 778, 1328,
	1911, 161, 818, 1227, 2005, 1590, 484, 618, 936, 1883,
	2302, 1630, 883, 1913, 1915, 1324, 951, 502, 502, 502,
	2013, 482, 2215, 990, 989, 999, 1000, 992, 993, 994,
	995, 996, 997, 998, 991, 502, 502, 1001, 899, 156,
	905, 906, 907, 908, 971, 490, 490, 490, 161, 34,
	490, 828, 957, 490, 847, 1798, 913, 1522, 1872, 1320,
	937, 817, 943, 794, 826, 1869, 821, 811, 1226, 818,
	1583, 1931, 853, 2083, 1930, 2250, 822, 1886, 1725, 1727,
	939, 461, 1674, 463, 478, 1929, 492, 1202, 491, 467,
	1201, 465, 469, 479, 470, 1200, 464, 882, 475, 1859,
	1799, 466, 480, 481, 496, 495, 483, 148, 473, 493,
	818, 794, 1325, 1198, 459, 175, 970, 967, 968, 969,
	974, 976, 973, 1801, 972, 1061, 1796, 1626, 817, 454,
	109, 966, 1073, 1301, 1300, 1302, 1303, 1304, 2237, 1881,
	1805, 1806, 1880, 1703, 502, 1797, 892, 2099, 175, 1094,
	175, 175, 900, 502, 148, 889, 948, 949, 75, 502,
	1889, 1011, 627, 818, 818, 1888, 982, 2300, 960, 817,
	2301, 1062, 2299, 1700, 821, 811, 1071, 1012, 1013, 958,
	1889, 1983, 959, 1726, 822, 1888, 970, 967, 968, 969,
	974, 976, 973, 1748, 972, 1062, 1694, 912, 1616, 1527,
	1106, 966, 823, 1025, 894, 1804, 991, 1538, 914, 1001,
	1067, 1035, 1001, 88, 1784, 1112, 91, 1807, 598, 978,
	926, 1336, 817, 817, 1318, 852, 980, 978, 811, 814,
	815, 515, 780, 494, 818, 981, 808, 812, 979, 980,
	978, 2216, 1367, 981, 1086, 1088, 1043, 1045, 981, 1048,
	1050, 487, 1053, 1064, 898, 807, 981, 1099, 104, 2246,
	839, 1625, 1968, 1072, 1640, 1321, 488, 1133, 1087, 1039,
	1042, 1044, 1046, 1047, 1049, 1051, 1052, 1924, 149, 154,
	151, 157, 158, 159, 160, 162, 163, 164, 165, 1093,
	961, 1012, 1013, 817, 166, 167, 168, 169, 2181, 811,
	814, 815, 1451, 780, 885, 175, 1837, 808, 812, 1191,
	105, 631, 1315, 1993, 1316, 1800, 1992, 1317, 1199, 1612,
	1238, 1012, 1013, 1623, 1621, 149, 154, 151, 157, 158,
	159, 160, 162, 163, 164, 165, 1451, 502, 1710, 1223,
	1237, 166, 167, 168, 169, 927, 1337, 1232, 177, 178,
	179, 1236, 1421, 1225, 502, 502, 1618, 502, 1233, 502,
	502, 827, 502, 502, 502, 502, 502, 502, 992, 993,
	994, 995, 996, 997, 998, 991, 897, 502, 1001, 825,
	1622, 175, 1272, 1267, 1268, 177, 178, 179, 1219, 1745,
	994, 995, 996, 997, 998, 991, 1618, 175, 1001, 979,
	980, 978, 2288, 1391, 1393, 1394, 1212, 1926, 502, 2255,
	175, 1128, 1205, 1206, 1988, 1422, 1403, 981, 1231, 2308,
	1620, 1326, 1392, 1107, 2230, 175, 1490, 1491, 1269, 1308,
	1401, 1402, 1400, 2116, 2115, 1241, 2011, 1242, 2256, 1244,
	1246, 175, 1822, 1250, 1252, 1254, 1256, 1258, 175, 1678,
	1679, 1680, 1746, 2231, 1229, 1229, 617, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 502, 502, 502, 1230,
	1275, 1276, 1209, 1210, 1222, 1203, 1281, 1282, 1208, 1699,
	1197, 1306, 1821, 1698, 1587, 1285, 1340, 80, 1296, 1309,
	2309, 1307, 1697, 1344, 175, 1346, 1347, 1348, 1349, 1399,
	1338, 1339, 1353, 999, 1000, 992, 993, 994, 995, 996,
	997, 998, 991, 622, 1343, 1001, 1368, 979, 980, 978,
	1294, 1350, 1351, 1352, 979, 980, 978, 2266, 1293, 1332,
	2264, 1329, 1420, 1397, 1292, 981, 1270, 1283, 1277, 2268,
	2269, 1423, 981, 1305, 1805, 1806, 112, 1334, 1823, 2265,
	1295, 177, 178, 179, 502, 1791, 619, 620, 1274, 1342,
	1273, 1248, 2289, 2234, 797, 1432, 1379, 796, 1090, 1439,
	1442, 2233, 979, 980, 978, 1452, 2232, 2180, 2178, 979,
	980, 978, 2156, 2113, 1991, 502, 502, 1831, 1424, 1425,
	981, 541, 540, 543, 544, 545, 546, 981, 1819, 175,
	542, 1669, 547, 1634, 1363, 1364, 1365, 1633, 1483, 1804,
	177, 178, 179, 1475, 1600, 1333, 1474, 1091, 177, 178,
	179, 1807, 1598, 1297, 1284, 1398, 1386, 1387, 1388, 1389,
	1280, 175, 1279, 1278, 502, 1433, 177, 178, 179, 175,
	94, 175, 1092, 940, 2036, 1085, 1432, 2020, 2280, 175,
	175, 93, 2196, 92, 2020, 2244, 502, 1458, 1459, 502,
	1434, 1517, 87, 94, 2195, 627, 2020, 2239, 627, 85,
	502, 2020, 2238, 2140, 93, 1478, 92, 1437, 1438, 1850,
	86, 72, 88, 2220, 1085, 2134, 1085, 2020, 2132, 1453,
	1618, 1085, 1453, 1834, 990, 989, 999, 1000, 992, 993,
	994, 995, 996, 997, 998, 991, 1546, 1516, 1001, 2097,
	1085, 595, 1541, 1086, 1463, 88, 1495, 1967, 515, 87,
	1085, 1542, 1520, 2003, 2002, 502, 1999, 2000, 1999, 1998,
	2183, 1593, 1594, 1595, 1085, 2094, 1597, 1599, 1481, 1692,
	1085, 1434, 93, 1085, 1486, 1487, 1522, 1868, 977, 502,
	1493, 1545, 1738, 1686, 1500, 502, 1232, 1574, 80, 1232,
	1750, 1232, 1194, 1852, 1096, 1846, 1847, 87, 1553, 1617,
	1554, 1555, 1556, 1557, 1580, 1501, 1085, 1085, 2245, 1435,
	1436, 1525, 1536, 1441, 1444, 1445, 1564, 1565, 1566, 1567,
	2020, 1529, 1956, 1528, 1544, 977, 1085, 1194, 1193, 502,
	1604, 1420, 1967, 1543, 1139, 1138, 1420, 1420, 1501, 1457,
	1692, 85, 1460, 1461, 631, 1750, 72, 631, 87, 1523,
	1501, 1619, 86, 2001, 1692, 581, 1523, 1611, 1477, 1095,
	1614, 1501, 1615, 1558, 1559, 1560, 1561, 1778, 1530, 1715,
	1575, 1576, 175, 1588, 1570, 1571, 1522, 1585, 1596, 175,
	1627, 1714, 1586, 2118, 175, 175, 1692, 820, 175, 1618,
	175, 979, 980, 978, 1629, 1609, 175, 1229, 1610, 1631,
	1632, 1601, 1575, 175, 176, 1628, 1085, 176, 1618, 981,
	176, 1613, 1524, 1085, 819, 503, 1967, 176, 1488, 1524,
	1464, 1526, 1377, 80, 80, 176, 1323, 1125, 1522, 802,
	801, 175, 502, 2119, 2120, 2121, 2208, 2122, 2139, 2110,
	2105, 72, 605, 1196, 1637, 1664, 1665, 1573, 2035, 1995,
	1667, 2038, 1853, 1569, 1563, 1562, 1311, 503, 1224, 1668,
	503, 176, 503, 1220, 1192, 1752, 990, 989, 999, 1000,
	992, 993, 994, 995, 996, 997, 998, 991, 1263, 1397,
	1001, 106, 1828, 884, 2123, 2124, 2209, 985, 1827, 988,
	1753, 1971, 1972, 2072, 1657, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1584, 986, 987, 984, 990, 989, 999, 1000,
	992, 993, 994, 995, 996, 997, 998, 991, 80, 80,
	1001, 2285, 2261, 1977, 2018, 175, 2017, 2016, 1264, 1265,
	1266, 90, 1974, 175, 1956, 1828, 1838, 502, 1658, 1672,
	1370, 1771, 1260, 1510, 1511, 1976, 1744, 990, 989, 999,
	1000, 992, 993, 994, 995, 996, 997, 998, 991, 1766,
	1681, 1001, 175, 175, 175, 175, 175, 1769, 1765, 1759,
	34, 1398, 1770, 1754, 175, 1767, 2297, 2281, 1482, 175,
	1768, 1089, 175, 175, 1476, 2229, 175, 175, 175, 1261,
	1262, 1094, 2098, 2023, 1506, 1509, 1510, 1511, 1507, 1790,
	1508, 1512, 1937, 589, 1688, 1739, 1709, 1936, 1689, 1948,
	1950, 2087, 2171, 2173, 2090, 1945, 1695, 1696, 1951, 2086,
	1067, 1729, 1702, 1721, 599, 1705, 1706, 1322, 583, 1809,
	1711, 1735, 600, 1712, 1549, 1713, 1832, 1776, 1716, 1717,
	1718, 1719, 1720, 1481, 1793, 502, 1747, 1779, 1447, 849,
	175, 1781, 1761, 1762, 1730, 1764, 1760, 175, 848, 1763,
	1772, 950, 1448, 502, 85, 1782, 85, 1099, 88, 502,
	2048, 87, 1777, 1232, 1232, 86, 1785, 86, 1827, 502,
	1814, 1815, 1816, 1817, 1794, 1892, 1856, 94, 1861, 1580,
	1860, 1865, 1332, 113, 1740, 2092, 1774, 1775, 93, 2014,
	92, 87, 175, 175, 175, 175, 175, 1661, 1820, 87,
	2241, 1690, 1691, 1490, 1491, 2192, 1829, 2203, 175, 175,
	1808, 1514, 1650, 1835, 1677, 1830, 609, 610, 1863, 1707,
	1839, 1840, 1841, 1935, 92, 1212, 1506, 1509, 1510, 1511,
	1507, 1934, 1508, 1512, 1854, 1855, 1971, 1972, 2179, 94,
	2177, 1864, 2176, 2169, 2091, 502, 1433, 2089, 2019, 1420,
	93, 93, 92, 1862, 1904, 1812, 1813, 1602, 990, 989,
	999, 1000, 992, 993, 994, 995, 996, 997, 998, 991,
	608, 1434, 1001, 94, 2168, 2080, 1750, 2287, 2286, 502,
	1884, 1738, 1890, 1704, 93, 1891, 590, 1701, 1923, 175,
	1108, 1100, 2287, 2235, 1990, 597, 96, 1896, 1917, 502,
	176, 81, 176, 1, 2263, 176, 502, 502, 1904, 472,
	1902, 1759, 1916, 1903, 1465, 1065, 485, 1957, 592, 2259,
	1298, 1288, 1960, 2143, 2205, 2026, 1578, 810, 138, 175,
	1539, 1939, 503, 503, 503, 1540, 2276, 103, 773, 102,
	1083, 1079, 813, 911, 1603, 1938, 2135, 1810, 1550, 1145,
	503, 503, 1966, 594, 1940, 1080, 1941, 1953, 175, 1932,
	1143, 1900, 1901, 1144, 593, 1142, 1147, 1975, 1146, 1141,
	1371, 499, 1979, 1513, 1981, 173, 1982, 1134, 1101, 1925,
	1479, 1480, 1082, 2012, 1081, 850, 1987, 1965, 462, 175,
	2004, 1366, 1635, 468, 1980, 1009, 1933, 502, 1083, 1079,
	1786, 628, 621, 1962, 502, 2084, 1944, 1946, 2022, 1742,
	175, 1949, 1942, 1080, 2228, 2170, 2240, 1547, 2007, 1954,
	175, 1097, 1708, 1034, 1996, 1997, 1963, 1449, 1117, 2027,
	176, 2025, 524, 2008, 175, 1473, 1390, 175, 1076, 1077,
	1082, 539, 1081, 536, 2024, 2071, 2049, 1978, 2021, 537,
	1731, 1751, 2030, 1580, 983, 522, 516, 2029, 1109, 503,
	1505, 2009, 2010, 176, 1503, 176, 176, 1502, 503, 1659,
	1121, 1973, 2044, 2043, 503, 1969, 1115, 1737, 1548, 1871,
	2032, 962, 1075, 511, 175, 785, 1446, 2046, 2047, 2214,
	1676, 2068, 1074, 61, 38, 506, 2293, 953, 2056, 990,
	989, 999, 1000, 992, 993, 994, 995, 996, 997, 998,
	991, 615, 32, 1001, 31, 30, 29, 28, 23, 22,
	21, 20, 582, 73, 19, 25, 1759, 18, 2081, 17,
	16, 2088, 108, 2078, 48, 45, 43, 115, 114, 46,
	42, 2093, 887, 27, 26, 590, 15, 2101, 2053, 2054,
	2102, 2055, 14, 13, 2057, 12, 2059, 11, 590, 10,
	2107, 9, 5, 4, 175, 956, 24, 175, 175, 175,
	502, 502, 2109, 71, 2051, 2108, 2052, 2, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2061, 2062, 2144,
	502, 502, 502, 0, 0, 2070, 73, 2129, 0, 0,
	0, 0, 0, 2076, 0, 2149, 0, 0, 0, 0,
	0, 0, 0, 606, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 502, 502, 502, 175, 0, 0,
	515, 0, 2095, 2096, 0, 0, 2100, 2103, 0, 0,
	2104, 0, 0, 2106, 0, 0, 0, 0, 502, 0,
	502, 0, 503, 2165, 2166, 0, 502, 0, 2174, 34,
	2186, 502, 2184, 1960, 2175, 2163, 2164, 1960, 2182, 503,
	503, 0, 503, 0, 503, 503, 2155, 503, 503, 503,
	503, 503, 503, 2189, 0, 0, 0, 0, 2191, 0,
	502, 0, 503, 502, 0, 0, 176, 2133, 2197, 2112,
	0, 2114, 2207, 0, 2199, 2200, 0, 0, 0, 2188,
	0, 0, 176, 0, 0, 2190, 0, 2204, 0, 0,
	0, 0, 0, 503, 2193, 176, 2194, 0, 0, 0,
	0, 0, 0, 0, 2225, 2224, 2227, 0, 0, 0,
	176, 0, 0, 0, 2160, 2236, 0, 0, 0, 0,
	0, 0, 1960, 0, 2066, 2148, 176, 0, 0, 502,
	175, 0, 0, 176, 0, 0, 34, 0, 0, 2243,
	0, 502, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 503, 503, 503, 2065, 0, 2247, 0, 502, 0,
	0, 551, 0, 0, 1759, 0, 502, 502, 2262, 518,
	2257, 2267, 2275, 2064, 34, 2207, 2277, 2270, 0, 176,
	0, 0, 0, 0, 0, 2284, 0, 0, 0, 0,
	0, 2210, 2211, 2212, 2213, 2290, 2217, 0, 2218, 2219,
	2221, 0, 0, 2296, 2222, 2223, 0, 2226, 515, 0,
	174, 2303, 0, 458, 0, 0, 497, 0, 2305, 0,
	0, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	0, 458, 0, 0, 0, 0, 0, 0, 2063, 503,
	0, 0, 990, 989, 999, 1000, 992, 993, 994, 995,
	996, 997, 998, 991, 0, 2249, 1001, 614, 0, 614,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	503, 503, 990, 989, 999, 1000, 992, 993, 994, 995,
	996, 997, 998, 991, 176, 0, 1001, 0, 0, 0,
	0, 990, 989, 999, 1000, 992, 993, 994, 995, 996,
	997, 998, 991, 0, 0, 1001, 0, 0, 0, 0,
	0, 0, 2291, 2292, 0, 0, 176, 0, 0, 503,
	0, 0, 0, 0, 176, 0, 176, 0, 0, 0,
	0, 0, 0, 0, 176, 176, 0, 0, 0, 0,
	0, 503, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 990, 989, 999, 1000,
	992, 993, 994, 995, 996, 997, 998, 991, 0, 0,
	1001, 0, 0, 0, 0, 0, 0, 0, 0, 945,
	945, 945, 990, 989, 999, 1000, 992, 993, 994, 995,
	996, 997, 998, 991, 1897, 0, 1001, 0, 0, 73,
	0, 0, 0, 0, 0, 0, 1162, 0, 0, 0,
	503, 0, 1010, 606, 990, 989, 999, 1000, 992, 993,
	994, 995, 996, 997, 998, 991, 0, 0, 1001, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	503, 0, 0, 1024, 0, 0, 0, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 0, 1036, 1038, 1041, 1041,
	1041, 1038, 1041, 1041, 1038, 1041, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 0, 0, 0, 0, 0, 0, 1069,
	0, 0, 606, 0, 503, 989, 999, 1000, 992, 993,
	994, 995, 996, 997, 998, 991, 0, 0, 1001, 606,
	0, 0, 0, 550, 0, 0, 0, 0, 0, 0,
	0, 0, 1118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 1150,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 176,
	176, 0, 0, 176, 0, 176, 0, 0, 0, 0,
	0, 176, 0, 0, 1687, 0, 0, 0, 176, 0,
	0, 0, 0, 501, 0, 0, 0, 0, 0, 0,
	0, 0, 1163, 0, 990, 989, 999, 1000, 992, 993,
	994, 995, 996, 997, 998, 991, 176, 503, 1001, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 629, 0, 0, 777, 0,
	784, 0, 0, 0, 0, 0, 458, 0, 458, 0,
	0, 458, 0, 1176, 1179, 1180, 1181, 1182, 1183, 1184,
	0, 1185, 1186, 1187, 1188, 1189, 1164, 1165, 1166, 1167,
	1148, 1149, 1177, 0, 1151, 0, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1168, 1169, 1170, 1171,
	1172, 1173, 1174, 1175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 503, 0, 0, 0, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 176, 176,
	176, 176, 0, 0, 0, 0, 0, 0, 0, 176,
	1178, 0, 0, 0, 176, 0, 0, 176, 176, 0,
	0, 176, 176, 176, 0, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 458,
	0, 458, 1124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 176, 0, 0, 0, 0,
	0, 0, 176, 0, 0, 0, 0, 0, 503, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 945, 945,
	945, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 176, 176,
	176, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	0, 503, 503, 0, 0, 0, 0, 0, 1068, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	629, 629, 629, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1235, 1235, 952, 954,
	0, 1518, 458, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 0, 1286, 0,
	457, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 458, 0, 0, 0, 0, 0, 0, 586, 0,
	0, 0, 0, 0, 176, 0, 1331, 0, 0, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 458, 0, 0, 176, 0, 0, 0, 458,
	0, 0, 0, 0, 781, 176, 0, 0, 1354, 1355,
	458, 458, 458, 458, 458, 458, 458, 0, 0, 176,
	0, 0, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1104, 0, 0,
	0, 0, 0, 0, 0, 458, 629, 0, 0, 0,
	0, 0, 1135, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 1395, 0, 0, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417,
	1418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 614, 1331, 614, 614,
	0, 0, 614, 614, 614, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1454, 0, 0, 0, 0, 0, 0, 614, 614,
	614, 614, 614, 0, 0, 0, 0, 0, 0, 176,
	1286, 0, 176, 176, 176, 503, 503, 614, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 503, 503, 0, 0,
	0, 0, 458, 0, 0, 0, 0, 0, 1331, 0,
	458, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	458, 458, 0, 0, 0, 0, 0, 0, 0, 503,
	503, 503, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	777, 0, 0, 503, 0, 503, 0, 0, 0, 0,
	0, 503, 0, 1234, 0, 1693, 503, 1240, 1240, 0,
	1240, 0, 1240, 1240, 0, 1249, 1240, 1240, 1240, 1240,
	1240, 0, 0, 0, 0, 0, 0, 0, 1234, 1234,
	777, 0, 0, 0, 0, 503, 0, 0, 503, 0,
	0, 0, 0, 1728, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 0, 0, 0, 0, 0, 0, 0, 0,
	1755, 1756, 0, 0, 1118, 1118, 1118, 1118, 1118, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1518, 0, 0, 1118, 0, 0, 0, 1118, 0,
	0, 0, 0, 0, 503, 176, 0, 0, 0, 0,
	0, 0, 0, 888, 0, 893, 503, 0, 895, 629,
	629, 629, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 503, 0, 0, 0, 0, 0, 0,
	0, 503, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 0, 0, 458, 458, 0, 0, 458,
	0, 1662, 0, 0, 0, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 458, 0, 0, 0, 0, 0,
	0, 0, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1426, 0, 629,
	0, 0, 458, 0, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1455, 1456,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 1683, 1684, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	614, 614, 0, 0, 0, 0, 1111, 0, 0, 1122,
	0, 0, 0, 0, 0, 0, 0, 1104, 614, 0,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 0, 629,
	0, 1118, 629, 0, 1286, 0, 0, 0, 0, 0,
	0, 0, 0, 777, 0, 0, 1961, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1235, 458, 458, 458, 458, 458, 0, 0,
	0, 1118, 0, 0, 0, 1773, 0, 0, 0, 0,
	458, 171, 0, 458, 458, 0, 0, 458, 1783, 1331,
	0, 0, 1843, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 113, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 777, 0, 0, 0, 0, 0, 784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 145,
	0, 458, 0, 1140, 134, 0, 0, 0, 1842, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 777, 152, 0, 153, 0, 0, 1331, 0,
	1215, 1216, 144, 143, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 458, 458, 458, 458, 0, 0,
	0, 0, 0, 0, 0, 2067, 0, 0, 0, 458,
	458, 0, 2073, 2074, 2075, 0, 0, 0, 0, 1271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	1217, 146, 0, 1214, 0, 140, 141, 0, 0, 0,
	156, 0, 0, 0, 614, 614, 1898, 1899, 1312, 161,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1918, 1919, 0, 1920, 1921, 1671, 0, 0, 0, 0,
	0, 0, 0, 0, 1927, 1928, 0, 0, 0, 1341,
	0, 0, 0, 0, 0, 0, 1345, 0, 0, 0,
	458, 0, 0, 0, 0, 0, 0, 1356, 1357, 1358,
	1359, 1360, 1361, 1362, 1235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 1122, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 1989, 458,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1732, 0, 0, 0, 0, 0, 0, 1961, 0, 73,
	0, 1961, 0, 0, 0, 0, 0, 0, 0, 0,
	458, 0, 0, 0, 1234, 0, 0, 0, 0, 0,
	0, 1235, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 458, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 458, 136, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 458, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2050, 0, 0,
	0, 0, 0, 0, 0, 0, 1961, 0, 0, 1492,
	0, 0, 0, 0, 0, 0, 0, 1496, 1833, 1499,
	0, 2242, 0, 0, 0, 458, 73, 0, 1519, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	629, 0, 1857, 0, 0, 0, 0, 0, 0, 1235,
	0, 0, 0, 0, 73, 0, 149, 154, 151, 157,
	158, 159, 160, 162, 163, 164, 165, 0, 0, 0,
	0, 0, 166, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2111, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 458, 0, 0, 458, 458,
	458, 72, 36, 37, 74, 39, 40, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 629, 0,
	0, 78, 0, 0, 0, 41, 67, 68, 0, 65,
	69, 0, 0, 0, 0, 0, 0, 0, 66, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 1240, 2150, 2151, 2152, 2153, 2154, 1286, 0,
	0, 2157, 2158, 0, 0, 0, 0, 54, 0, 0,
	0, 0, 629, 0, 0, 113, 1234, 135, 80, 1964,
	1240, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1122, 0, 0, 0, 0, 0, 0, 1646, 0, 145,
	0, 0, 1655, 1656, 134, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1663, 0, 0, 0, 0, 0,
	0, 1666, 0, 152, 0, 153, 0, 0, 0, 0,
	122, 123, 144, 143, 170, 0, 0, 44, 47, 50,
	49, 52, 0, 64, 0, 0, 70, 0, 0, 1670,
	777, 0, 0, 1234, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 53, 77,
	76, 458, 0, 62, 63, 51, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 139,
	120, 146, 127, 119, 0, 140, 141, 1235, 0, 0,
	156, 0, 0, 0, 0, 0, 0, 0, 0, 161,
	128, 0, 2271, 0, 55, 56, 0, 57, 58, 59,
	60, 0, 0, 0, 131, 129, 124, 125, 126, 130,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 148, 0, 0, 75, 0,
	0, 0, 0, 1845, 2130, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2145, 2146, 2147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	142, 0, 0, 0, 0, 0, 0, 2161, 2161, 2161,
	0, 0, 136, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2185, 0, 2187, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	1875, 1876, 1877, 1878, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1122, 1885, 0, 0,
	0, 0, 0, 1845, 0, 0, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 154, 151, 157,
	158, 159, 160, 162, 163, 164, 165, 0, 0, 0,
	0, 0, 166, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1234,
	0, 2258, 0, 0, 0, 0, 0, 0, 0, 629,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1994, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2028, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2031, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2042, 0, 0, 2045, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	741, 403, 0, 690, 758, 661, 678, 768, 681, 684,
	724, 640, 703, 327, 675, 0, 665, 636, 671, 637,
	663, 692, 234, 660, 743, 706, 757, 285, 231, 642,
	666, 341, 680, 186, 726, 379, 219, 294, 292, 408,
	245, 237, 233, 218, 269, 300, 339, 397, 333, 764,
	289, 713, 2125, 388, 312, 2126, 2127, 2128, 694, 747,
	701, 737, 689, 725, 650, 712, 759, 676, 721, 760,
	275, 217, 185, 324, 389, 249, 0, 0, 0, 0,
	177, 178, 179, 0, 2278, 2279, 0, 0, 0, 0,
	0, 208, 0, 215, 718, 754, 673, 720, 229, 273,
	236, 228, 405, 765, 746, 0, 0, 201, 756, 696,
	723, 771, 635, 715, 0, 638, 641, 767, 750, 669,
	239, 0, 0, 0, 0, 0, 0, 0, 693, 702,
	734, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 711, 0, 0, 0, 646, 639, 0, 0,
	0, 0, 691, 0, 0, 0, 649, 0, 668, 735,
	0, 633, 257, 643, 313, 0, 739, 749, 688, 437,
	753, 686, 685, 730, 647, 745, 679, 284, 645, 281,
	181, 197, 0, 677, 323, 362, 368, 744, 664, 672,
	220, 670, 366, 337, 422, 204, 247, 359, 342, 364,
	710, 728, 365, 290, 410, 354, 420, 438, 439, 227,
	317, 428, 401, 434, 449, 198, 224, 331, 394, 425,
	385, 310, 406, 407, 280, 384, 255, 184, 288, 446,
	196, 374, 212, 189, 396, 418, 209, 377, 0, 0,
	451, 191, 416, 393, 307, 277, 278, 190, 2248, 358,
	232, 253, 222, 326, 413, 414, 221, 452, 200, 433,
	193, 947, 432, 319, 409, 417, 308, 299, 192, 415,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 390, 426, 453, 205, 206,
	207, 659, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 740, 404, 421, 429, 436, 442,
	443, 447, 444, 445, 448, 318, 267, 386, 282, 291,
	732, 770, 336, 367, 210, 424, 387, 654, 658, 652,
	653, 704, 705, 655, 761, 762, 763, 736, 648, 0,
	656, 657, 0, 742, 751, 752, 709, 180, 194, 287,
	766, 356, 250, 450, 431, 427, 634, 651, 226, 662,
	0, 0, 674, 682, 683, 695, 697, 698, 699, 700,
	708, 716, 717, 719, 727, 729, 731, 733, 738, 748,
	769, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 411, 412, 423, 435, 440, 259, 419, 441,
	0, 295, 707, 714, 297, 244, 262, 272, 722, 430,
	392, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	378, 398, 399, 400, 402, 309, 230, 755, 741, 403,
	0, 690, 758, 661, 678, 768, 681, 684, 724, 640,
	703, 327, 675, 0, 665, 636, 671, 637, 663, 692,
	234, 660, 743, 706, 757, 285, 231, 642, 666, 341,
	680, 186, 726, 379, 219, 294, 292, 408, 245, 237,
	233, 218, 269, 300, 339, 397, 333, 764, 289, 713,
	0, 388, 312, 0, 0, 0, 694, 747, 701, 737,
	689, 725, 650, 712, 759, 676, 721, 760, 275, 217,
	185, 324, 389, 249, 0, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 215, 718, 754, 673, 720, 229, 273, 236, 228,
	405, 765, 746, 0, 0, 201, 756, 696, 723, 771,
	635, 715, 0, 638, 641, 767, 750, 669, 239, 0,
	0, 0, 0, 0, 0, 0, 693, 702, 734, 687,
	0, 0, 0, 0, 0, 0, 1952, 0, 667, 0,
	711, 0, 0, 0, 646, 639, 0, 0, 0, 0,
	691, 0, 0, 0, 649, 0, 668, 735, 0, 633,
	257, 643, 313, 0, 739, 749, 688, 437, 753, 686,
	685, 730, 647, 745, 679, 284, 645, 281, 181, 197,
	0, 677, 323, 362, 368, 744, 664, 672, 220, 670,
	366, 337, 422, 204, 247, 359, 342, 364, 710, 728,
	365, 290, 410, 354, 420, 438, 439, 227, 317, 428,
	401, 434, 449, 198, 224, 331, 394, 425, 385, 310,
	406, 407, 280, 384, 255, 184, 288, 446, 196, 374,
	212, 189, 396, 418, 209, 377, 0, 0, 451, 191,
	416, 393, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 413, 414, 221, 452, 200, 433, 193, 947,
	432, 319, 409, 417, 308, 299, 192, 415, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 390, 426, 453, 205, 206, 207, 659,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 740, 404, 421, 429, 436, 442, 443, 447,
	444, 445, 448, 318, 267, 386, 282, 291, 732, 770,
	336, 367, 210, 424, 387, 654, 658, 652, 653, 704,
	705, 655, 761, 762, 763, 736, 648, 0, 656, 657,
	0, 742, 751, 752, 709, 180, 194, 287, 766, 356,
	250, 450, 431, 427, 634, 651, 226, 662, 0, 0,
	674, 682, 683, 695, 697, 698, 699, 700, 708, 716,
	717, 719, 727, 729, 731, 733, 738, 748, 769, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	411, 412, 423, 435, 440, 259, 419, 441, 0, 295,
	707, 714, 297, 244, 262, 272, 722, 430, 392, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 378, 398,
	399, 400, 402, 309, 230, 755, 741, 403, 0, 690,
	758, 661, 678, 768, 681, 684, 724, 640, 703, 327,
	675, 0, 665, 636, 671, 637, 663, 692, 234, 660,
	743, 706, 757, 285, 231, 642, 666, 341, 680, 186,
	726, 379, 219, 294, 292, 408, 245, 237, 233, 218,
	269, 300, 339, 397, 333, 764, 289, 713, 0, 388,
	312, 0, 0, 0, 694, 747, 701, 737, 689, 725,
	650, 712, 759, 676, 721, 760, 275, 217, 185, 324,
	389, 249, 0, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 215,
	718, 754, 673, 720, 229, 273, 236, 228, 405, 765,
	746, 0, 0, 201, 756, 696, 723, 771, 635, 715,
	0, 638, 641, 767, 750, 669, 239, 0, 0, 0,
	0, 0, 0, 0, 693, 702, 734, 687, 0, 0,
	0, 0, 0, 0, 1784, 0, 667, 0, 711, 0,
	0, 0, 646, 639, 0, 0, 0, 0, 691, 0,
	0, 0, 649, 0, 668, 735, 0, 633, 257, 643,
	313, 0, 739, 749, 688, 437, 753, 686, 685, 730,
	647, 745, 679, 284, 645, 281, 181, 197, 0, 677,
	323, 362, 368, 744, 664, 672, 220, 670, 366, 337,
	422, 204, 247, 359, 342, 364, 710, 728, 365, 290,
	410, 354, 420, 438, 439, 227, 317, 428, 401, 434,
	449, 198, 224, 331, 394, 425, 385, 310, 406, 407,
	280, 384, 255, 184, 288, 446, 196, 374, 212, 189,
	396, 418, 209, 377, 0, 0, 451, 191, 416, 393,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	413, 414, 221, 452, 200, 433, 193, 947, 432, 319,
	409, 417, 308, 299, 192, 415, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 390, 426, 453, 205, 206, 207, 659, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	740, 404, 421, 429, 436, 442, 443, 447, 444, 445,
	448, 318, 267, 386, 282, 291, 732, 770, 336, 367,
	210, 424, 387, 654, 658, 652, 653, 704, 705, 655,
	761, 762, 763, 736, 648, 0, 656, 657, 0, 742,
	751, 752, 709, 180, 194, 287, 766, 356, 250, 450,
	431, 427, 634, 651, 226, 662, 0, 0, 674, 682,
	683, 695, 697, 698, 699, 700, 708, 716, 717, 719,
	727, 729, 731, 733, 738, 748, 769, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 411, 412,
	423, 435, 440, 259, 419, 441, 0, 295, 707, 714,
	297, 244, 262, 272, 722, 430, 392, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 378, 398, 399, 400,
	402, 309, 230, 755, 741, 403, 0, 690, 758, 661,
	678, 768, 681, 684, 724, 640, 703, 327, 675, 0,
	665, 636, 671, 637, 663, 692, 234, 660, 743, 706,
	757, 285, 231, 642, 666, 341, 680, 186, 726, 379,
	219, 294, 292, 408, 245, 237, 233, 218, 269, 300,
	339, 397, 333, 764, 289, 713, 0, 388, 312, 0,
	0, 0, 694, 747, 701, 737, 689, 725, 650, 712,
	759, 676, 721, 760, 275, 217, 185, 324, 389, 249,
	0, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 215, 718, 754,
	673, 720, 229, 273, 236, 228, 405, 765, 746, 0,
	0, 201, 756, 696, 723, 771, 635, 715, 0, 638,
	641, 767, 750, 669, 239, 0, 0, 0, 0, 0,
	0, 0, 693, 702, 734, 687, 0, 0, 0, 0,
	0, 0, 1494, 0, 667, 0, 711, 0, 0, 0,
	646, 639, 0, 0, 0, 0, 691, 0, 0, 0,
	649, 0, 668, 735, 0, 633, 257, 643, 313, 0,
	739, 749, 688, 437, 753, 686, 685, 730, 647, 745,
	679, 284, 645, 281, 181, 197, 0, 677, 323, 362,
	368, 744, 664, 672, 220, 670, 366, 337, 422, 204,
	247, 359, 342, 364, 710, 728, 365, 290, 410, 354,
	420, 438, 439, 227, 317, 428, 401, 434, 449, 198,
	224, 331, 394, 425, 385, 310, 406, 407, 280, 384,
	255, 184, 288, 446, 196, 374, 212, 189, 396, 418,
	209, 377, 0, 0, 451, 191, 416, 393, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 413, 414,
	221, 452, 200, 433, 193, 947, 432, 319, 409, 417,
	308, 299, 192, 415, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 390,
	426, 453, 205, 206, 207, 659, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 740, 404,
	421, 429, 436, 442, 443, 447, 444, 445, 448, 318,
	267, 386, 282, 291, 732, 770, 336, 367, 210, 424,
	387, 654, 658, 652, 653, 704, 705, 655, 761, 762,
	763, 736, 648, 0, 656, 657, 0, 742, 751, 752,
	709, 180, 194, 287, 766, 356, 250, 450, 431, 427,
	634, 651, 226, 662, 0, 0, 674, 682, 683, 695,
	697, 698, 699, 700, 708, 716, 717, 719, 727, 729,
	731, 733, 738, 748, 769, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 369, 370, 371, 372, 373, 375, 376,
	380, 381, 382, 383, 391, 395, 411, 412, 423, 435,
	440, 259, 419, 441, 0, 295, 707, 714, 297, 244,
	262, 272, 722, 430, 392, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 378, 398, 399, 400, 402, 309,
	230, 755, 741, 403, 0, 690, 758, 661, 678, 768,
	681, 684, 724, 640, 703, 327, 675, 0, 665, 636,
	671, 637, 663, 692, 234, 660, 743, 706, 757, 285,
	231, 642, 666, 341, 680, 186, 726, 379, 219, 294,
	292, 408, 245, 237, 233, 218, 269, 300, 339, 397,
	333, 764, 289, 713, 0, 388, 312, 0, 0, 0,
	694, 747, 701, 737, 689, 725, 650, 712, 759, 676,
	721, 760, 275, 217, 185, 324, 389, 249, 0, 80,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 208, 0, 215, 718, 754, 673, 720,
	229, 273, 236, 228, 405, 765, 746, 0, 0, 201,
	756, 696, 723, 771, 635, 715, 0, 638, 641, 767,
	750, 669, 239, 0, 0, 0, 0, 0, 0, 0,
	693, 702, 734, 687, 0, 0, 0, 0, 0, 0,
	0, 0, 667, 0, 711, 0, 0, 0, 646, 639,
	0, 0, 0, 0, 691, 0, 0, 0, 649, 0,
	668, 735, 0, 633, 257, 643, 313, 0, 739, 749,
	688, 437, 753, 686, 685, 730, 647, 745, 679, 284,
	645, 281, 181, 197, 0, 677, 323, 362, 368, 744,
	664, 672, 220, 670, 366, 337, 422, 204, 247, 359,
	342, 364, 710, 728, 365, 290, 410, 354, 420, 438,
	439, 227, 317, 428, 401, 434, 449, 198, 224, 331,
	394, 425, 385, 310, 406, 407, 280, 384, 255, 184,
	288, 446, 196, 374, 212, 189, 396, 418, 209, 377,
	0, 0, 451, 191, 416, 393, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 413, 414, 221, 452,
	200, 433, 193, 947, 432, 319, 409, 417, 308, 299,
	192, 415, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 390, 426, 453,
	205, 206, 207, 659, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 740, 404, 421, 429,
	436, 442, 443, 447, 444, 445, 448, 318, 267, 386,
	282, 291, 732, 770, 336, 367, 210, 424, 387, 654,
	658, 652, 653, 704, 705, 655, 761, 762, 763, 736,
	648, 0, 656, 657, 0, 742, 751, 752, 709, 180,
	194, 287, 766, 356, 250, 450, 431, 427, 634, 651,
	226, 662, 0, 0, 674, 682, 683, 695, 697, 698,
	699, 700, 708, 716, 717, 719, 727, 729, 731, 733,
	738, 748, 769, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 369, 370, 371, 372, 373, 375, 376, 380, 381,
	382, 383, 391, 395, 411, 412, 423, 435, 440, 259,
	419, 441, 0, 295, 707, 714, 297, 244, 262, 272,
	722, 430, 392, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 378, 398, 399, 400, 402, 309, 230, 755,
	741, 403, 0, 690, 758, 661, 678, 768, 681, 684,
	724, 640, 703, 327, 675, 0, 665, 636, 671, 637,
	663, 692, 234, 660, 743, 706, 757, 285, 231, 642,
	666, 341, 680, 186, 726, 379, 219, 294, 292, 408,
	245, 237, 233, 218, 269, 300, 339, 397, 333, 764,
	289, 713, 0, 388, 312, 0, 0, 0, 694, 747,
	701, 737, 689, 725, 650, 712, 759, 676, 721, 760,
	275, 217, 185, 324, 389, 249, 0, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 215, 718, 754, 673, 720, 229, 273,
	236, 228, 405, 765, 746, 0, 0, 201, 756, 696,
	723, 771, 635, 715, 0, 638, 641, 767, 750, 669,
	239, 0, 0, 0, 0, 0, 0, 0, 693, 702,
	734, 687, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 0, 711, 0, 0, 0, 646, 639, 0, 0,
	0, 0, 691, 0, 0, 0, 649, 0, 668, 735,
	0, 633, 257, 643, 313, 0, 739, 749, 688, 437,
	753, 686, 685, 730, 647, 745, 679, 284, 645, 281,
	181, 197, 0, 677, 323, 362, 368, 744, 664, 672,
	220, 670, 366, 337, 422, 204, 247, 359, 342, 364,
	710, 728, 365, 290, 410, 354, 420, 438, 439, 227,
	317, 428, 401, 434, 449, 198, 224, 331, 394, 425,
	385, 310, 406, 407, 280, 384, 255, 184, 288, 446,
	196, 374, 212, 189, 396, 418, 209, 377, 0, 0,
	451, 191, 416, 393, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 413, 414, 221, 452, 200, 433,
	193, 947, 432, 319, 409, 417, 308, 299, 192, 415,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 390, 426, 453, 205, 206,
	207, 659, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 740, 404, 421, 429, 436, 442,
	443, 447, 444, 445, 448, 318, 267, 386, 282, 291,
	732, 770, 336, 367, 210, 424, 387, 654, 658, 652,
	653, 704, 705, 655, 761, 762, 763, 736, 648, 0,
	656, 657, 0, 742, 751, 752, 709, 180, 194, 287,
	766, 356, 250, 450, 431, 427, 634, 651, 226, 662,
	0, 0, 674, 682, 683, 695, 697, 698, 699, 700,
	708, 716, 717, 719, 727, 729, 731, 733, 738, 748,
	769, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 411, 412, 423, 435, 440, 259, 419, 441,
	0, 295, 707, 714, 297, 244, 262, 272, 722, 430,
	392, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	378, 398, 399, 400, 402, 309, 230, 755, 741, 403,
	0, 690, 758, 661, 678, 768, 681, 684, 724, 640,
	703, 327, 675, 0, 665, 636, 671, 637, 663, 692,
	234, 660, 743, 706, 757, 285, 231, 642, 666, 341,
	680, 186, 726, 379, 219, 294, 292, 408, 245, 237,
	233, 218, 269, 300, 339, 397, 333, 764, 289, 713,
	0, 388, 312, 0, 0, 0, 694, 747, 701, 737,
	689, 725, 650, 712, 759, 676, 721, 760, 275, 217,
	185, 324, 389, 249, 0, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 215, 718, 754, 673, 720, 229, 273, 236, 228,
	405, 765, 746, 0, 0, 772, 756, 696, 723, 771,
	635, 715, 0, 638, 641, 767, 750, 669, 239, 0,
	0, 0, 0, 0, 0, 0, 693, 702, 734, 687,
	0, 0, 0, 0, 0, 0, 0, 0, 667, 0,
	711, 0, 0, 0, 646, 639, 0, 0, 0, 0,
	691, 0, 0, 0, 649, 0, 668, 735, 0, 633,
	257, 643, 313, 0, 739, 749, 688, 437, 753, 686,
	685, 730, 647, 745, 679, 284, 645, 281, 181, 197,
	0, 677, 323, 362, 368, 744, 664, 672, 220, 670,
	366, 337, 422, 204, 247, 359, 342, 364, 710, 728,
	365, 290, 410, 354, 420, 438, 439, 227, 317, 428,
	401, 434, 449, 198, 224, 331, 394, 425, 385, 310,
	406, 407, 280, 384, 255, 184, 288, 446, 196, 374,
	212, 189, 396, 418, 209, 377, 0, 0, 451, 191,
	416, 393, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 413, 414, 221, 452, 200, 433, 193, 644,
	432, 319, 409, 417, 308, 299, 192, 415, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 390, 426, 453, 205, 206, 207, 659,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 740, 404, 421, 429, 436, 442, 443, 447,
	444, 445, 448, 632, 626, 625, 282, 291, 732, 770,
	336, 367, 210, 424, 387, 654, 658, 652, 653, 704,
	705, 655, 761, 762, 763, 736, 648, 0, 656, 657,
	0, 742, 751, 752, 709, 180, 194, 287, 766, 356,
	250, 450, 431, 427, 634, 651, 226, 662, 0, 0,
	674, 682, 683, 695, 697, 698, 699, 700, 708, 716,
	717, 719, 727, 729, 731, 733, 738, 748, 769, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	411, 412, 423, 435, 440, 259, 419, 441, 0, 295,
	707, 714, 297, 244, 262, 272, 722, 430, 392, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 378, 398,
	399, 400, 402, 309, 230, 755, 741, 403, 0, 690,
	758, 661, 678, 768, 681, 684, 724, 640, 703, 327,
	675, 0, 665, 636, 671, 637, 663, 692, 234, 660,
	743, 706, 757, 285, 231, 642, 666, 341, 680, 186,
	726, 379, 219, 294, 292, 408, 245, 237, 233, 218,
	269, 300, 339, 397, 333, 764, 289, 713, 0, 388,
	312, 0, 0, 0, 694, 747, 701, 737, 689, 725,
	650, 712, 759, 676, 721, 760, 275, 217, 185, 324,
	389, 249, 0, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 215,
	718, 754, 673, 720, 229, 273, 236, 228, 405, 765,
	746, 0, 0, 772, 756, 696, 723, 771, 635, 715,
	0, 638, 641, 767, 750, 669, 239, 0, 0, 0,
	0, 0, 0, 0, 693, 702, 734, 687, 0, 0,
	0, 0, 0, 0, 0, 0, 667, 0, 711, 0,
	0, 0, 646, 639, 0, 0, 0, 0, 691, 0,
	0, 0, 649, 0, 668, 735, 0, 633, 257, 643,
	313, 0, 739, 749, 688, 437, 753, 686, 685, 730,
	647, 745, 679, 284, 645, 281, 181, 197, 0, 677,
	323, 362, 368, 744, 664, 672, 220, 670, 366, 337,
	422, 204, 247, 359, 342, 364, 710, 728, 365, 290,
	410, 354, 420, 438, 439, 227, 317, 428, 401, 434,
	449, 198, 224, 331, 394, 425, 385, 310, 406, 407,
	280, 384, 255, 184, 288, 446, 196, 374, 212, 189,
	396, 1126, 209, 377, 0, 0, 451, 191, 416, 393,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	413, 414, 221, 452, 200, 433, 193, 644, 432, 319,
	409, 417, 308, 299, 192, 415, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 390, 426, 453, 205, 206, 207, 659, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	740, 404, 421, 429, 436, 442, 443, 447, 444, 445,
	448, 632, 626, 625, 282, 291, 732, 770, 336, 367,
	210, 424, 387, 654, 658, 652, 653, 704, 705, 655,
	761, 762, 763, 736, 648, 0, 656, 657, 0, 742,
	751, 752, 709, 180, 194, 287, 766, 356, 250, 450,
	431, 427, 634, 651, 226, 662, 0, 0, 674, 682,
	683, 695, 697, 698, 699, 700, 708, 716, 717, 719,
	727, 729, 731, 733, 738, 748, 769, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 411, 412,
	423, 435, 440, 259, 419, 441, 0, 295, 707, 714,
	297, 244, 262, 272, 722, 430, 392, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 378, 398, 399, 400,
	402, 309, 230, 755, 741, 403, 0, 690, 758, 661,
	678, 768, 681, 684, 724, 640, 703, 327, 675, 0,
	665, 636, 671, 637, 663, 692, 234, 660, 743, 706,
	757, 285, 231, 642, 666, 341, 680, 186, 726, 379,
	219, 294, 292, 408, 245, 237, 233, 218, 269, 300,
	339, 397, 333, 764, 289, 713, 0, 388, 312, 0,
	0, 0, 694, 747, 701, 737, 689, 725, 650, 712,
	759, 676, 721, 760, 275, 217, 185, 324, 389, 249,
	0, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 208, 0, 215, 718, 754,
	673, 720, 229, 273, 236, 228, 405, 765, 746, 0,
	0, 772, 756, 696, 723, 771, 635, 715, 0, 638,
	641, 767, 750, 669, 239, 0, 0, 0, 0, 0,
	0, 0, 693, 702, 734, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 667, 0, 711, 0, 0, 0,
	646, 639, 0, 0, 0, 0, 691, 0, 0, 0,
	649, 0, 668, 735, 0, 633, 257, 643, 313, 0,
	739, 749, 688, 437, 753, 686, 685, 730, 647, 745,
	679, 284, 645, 281, 181, 197, 0, 677, 323, 362,
	368, 744, 664, 672, 220, 670, 366, 337, 422, 204,
	247, 359, 342, 364, 710, 728, 365, 290, 410, 354,
	420, 438, 439, 227, 317, 428, 401, 434, 449, 198,
	224, 331, 394, 425, 385, 310, 406, 407, 280, 384,
	255, 184, 288, 446, 196, 374, 212, 189, 396, 623,
	209, 377, 0, 0, 451, 191, 416, 393, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 413, 414,
	221, 452, 200, 433, 193, 644, 432, 319, 409, 417,
	308, 299, 192, 415, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 390,
	426, 453, 205, 206, 207, 659, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 740, 404,
	421, 429, 436, 442, 443, 447, 444, 445, 448, 632,
	626, 625, 282, 291, 732, 770, 336, 367, 210, 424,
	387, 654, 658, 652, 653, 704, 705, 655, 761, 762,
	763, 736, 648, 0, 656, 657, 0, 742, 751, 752,
	709, 180, 194, 287, 766, 356, 250, 450, 431, 427,
	634, 651, 226, 662, 0, 0, 674, 682, 683, 695,
	697, 698, 699, 700, 708, 716, 717, 719, 727, 729,
	731, 733, 738, 748, 769, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 369, 370, 371, 372, 373, 375, 376,
	380, 381, 382, 383, 391, 395, 411, 412, 423, 435,
	440, 259, 419, 441, 0, 295, 707, 714, 297, 244,
	262, 272, 722, 430, 392, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 378, 398, 399, 400, 402, 309,
	230, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 1428, 0, 520, 0,
	0, 0, 234, 519, 0, 0, 0, 285, 231, 0,
	1429, 341, 0, 186, 0, 379, 219, 294, 292, 408,
	245, 237, 233, 218, 269, 300, 339, 397, 333, 563,
	289, 0, 0, 388, 312, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 389, 249, 0, 80, 0, 0,
	177, 178, 179, 541, 540, 543, 544, 545, 546, 0,
	0, 208, 542, 215, 547, 548, 549, 0, 229, 273,
	236, 228, 405, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 517, 534, 0, 562, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 612, 0,
	0, 0, 578, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 577, 0, 0, 437,
	0, 0, 575, 0, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 368, 0, 0, 0,
	220, 0, 366, 337, 422, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 410, 354, 420, 438, 439, 227,
	317, 428, 401, 434, 449, 198, 224, 331, 394, 425,
	385, 310, 406, 407, 280, 384, 255, 184, 288, 446,
	196, 374, 212, 189, 396, 418, 209, 377, 0, 0,
	451, 191, 416, 393, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 413, 414, 221, 452, 200, 433,
	193, 0, 432, 319, 409, 417, 308, 299, 192, 415,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 390, 426, 453, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 404, 421, 429, 436, 442,
	443, 447, 444, 445, 448, 318, 267, 386, 282, 291,
	0, 0, 336, 367, 210, 424, 387, 565, 576, 571,
	572, 569, 570, 564, 568, 567, 566, 579, 556, 557,
	558, 559, 561, 0, 573, 574, 560, 180, 194, 287,
	0, 356, 250, 450, 431, 427, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 411, 412, 423, 435, 440, 259, 419, 441,
	0, 295, 0, 0, 297, 244, 262, 272, 0, 430,
	392, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	378, 398, 399, 400, 402, 309, 230, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 520, 0, 0, 0, 234, 519,
	0, 0, 0, 285, 231, 0, 0, 341, 0, 186,
	0, 379, 219, 294, 292, 408, 245, 237, 233, 218,
	269, 300, 339, 397, 333, 563, 289, 0, 0, 388,
	312, 0, 0, 0, 0, 0, 554, 555, 0, 0,
	0, 0, 0, 0, 1534, 0, 275, 217, 185, 324,
	389, 249, 0, 80, 0, 0, 177, 178, 179, 541,
	540, 543, 544, 545, 546, 0, 0, 208, 542, 215,
	547, 548, 549, 1535, 229, 273, 236, 228, 405, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 517,
	534, 0, 562, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 0, 0, 0, 0, 578, 0,
	533, 0, 0, 526, 527, 529, 528, 530, 535, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	313, 0, 577, 0, 0, 437, 0, 0, 575, 0,
	0, 0, 0, 284, 0, 281, 181, 197, 0, 0,
	323, 362, 368, 0, 0, 0, 220, 0, 366, 337,
	422, 204, 247, 359, 342, 364, 0, 0, 365, 290,
	410, 354, 420, 438, 439, 227, 317, 428, 401, 434,
	449, 198, 224, 331, 394, 425, 385, 310, 406, 407,
	280, 384, 255, 184, 288, 446, 196, 374, 212, 189,
	396, 418, 209, 377, 0, 0, 451, 191, 416, 393,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	413, 414, 221, 452, 200, 433, 193, 0, 432, 319,
	409, 417, 308, 299, 192, 415, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 390, 426, 453, 205, 206, 207, 0, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	0, 404, 421, 429, 436, 442, 443, 447, 444, 445,
	448, 318, 267, 386, 282, 291, 0, 0, 336, 367,
	210, 424, 387, 565, 576, 571, 572, 569, 570, 564,
	568, 567, 566, 579, 556, 557, 558, 559, 561, 0,
	573, 574, 560, 180, 194, 287, 0, 356, 250, 450,
	431, 427, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 411, 412,
	423, 435, 440, 259, 419, 441, 0, 295, 0, 0,
	297, 244, 262, 272, 0, 430, 392, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 378, 398, 399, 400,
	402, 309, 230, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 0,
	520, 0, 0, 0, 234, 519, 0, 0, 0, 285,
	231, 0, 0, 341, 0, 186, 0, 379, 219, 294,
	292, 408, 245, 237, 233, 218, 269, 300, 339, 397,
	333, 563, 289, 0, 0, 388, 312, 0, 0, 0,
	0, 0, 554, 555, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 217, 185, 324, 389, 249, 0, 80,
	0, 1085, 177, 178, 179, 541, 540, 543, 544, 545,
	546, 0, 0, 208, 542, 215, 547, 548, 549, 0,
	229, 273, 236, 228, 405, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 517, 534, 0, 562, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	0, 0, 0, 0, 578, 0, 533, 0, 0, 526,
	527, 529, 528, 530, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 313, 0, 577, 0,
	0, 437, 0, 0, 575, 0, 0, 0, 0, 284,
	0, 281, 181, 197, 0, 0, 323, 362, 368, 0,
	0, 0, 220, 0, 366, 337, 422, 204, 247, 359,
	342, 364, 0, 0, 365, 290, 410, 354, 420, 438,
	439, 227, 317, 428, 401, 434, 449, 198, 224, 331,
	394, 425, 385, 310, 406, 407, 280, 384, 255, 184,
	288, 446, 196, 374, 212, 189, 396, 418, 209, 377,
	0, 0, 451, 191, 416, 393, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 413, 414, 221, 452,
	200, 433, 193, 0, 432, 319, 409, 417, 308, 299,
	192, 415, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 390, 426, 453,
	205, 206, 207, 0, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 0, 404, 421, 429,
	436, 442, 443, 447, 444, 445, 448, 318, 267, 386,
	282, 291, 0, 0, 336, 367, 210, 424, 387, 565,
	576, 571, 572, 569, 570, 564, 568, 567, 566, 579,
	556, 557, 558, 559, 561, 0, 573, 574, 560, 180,
	194, 287, 0, 356, 250, 450, 431, 427, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 369, 370, 371, 372, 373, 375, 376, 380, 381,
	382, 383, 391, 395, 411, 412, 423, 435, 440, 259,
	419, 441, 0, 295, 0, 0, 297, 244, 262, 272,
	0, 430, 392, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 378, 398, 399, 400, 402, 309, 230, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 520, 0, 0, 0,
	234, 519, 0, 0, 0, 285, 231, 0, 0, 341,
	0, 186, 0, 379, 219, 294, 292, 408, 245, 237,
	233, 218, 269, 300, 339, 397, 333, 563, 289, 0,
	0, 388, 312, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 217,
	185, 324, 389, 249, 0, 80, 0, 0, 177, 178,
	179, 541, 540, 543, 544, 545, 546, 0, 0, 208,
	542, 215, 547, 548, 549, 0, 229, 273, 236, 228,
	405, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 517, 534, 0, 562, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 612, 0, 0, 0,
	578, 0, 533, 0, 0, 526, 527, 529, 528, 530,
	535, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 313, 0, 577, 0, 0, 437, 0, 0,
	575, 0, 0, 0, 0, 284, 0, 281, 181, 197,
	0, 0, 323, 362, 368, 0, 0, 0, 220, 0,
	366, 337, 422, 204, 247, 359, 342, 364, 0, 0,
	365, 290, 410, 354, 420, 438, 439, 227, 317, 428,
	401, 434, 449, 198, 224, 331, 394, 425, 385, 310,
	406, 407, 280, 384, 255, 184, 288, 446, 196, 374,
	212, 189, 396, 418, 209, 377, 0, 0, 451, 191,
	416, 393, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 413, 414, 221, 452, 200, 433, 193, 0,
	432, 319, 409, 417, 308, 299, 192, 415, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 390, 426, 453, 205, 206, 207, 0,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 0, 404, 421, 429, 436, 442, 443, 447,
	444, 445, 448, 318, 267, 386, 282, 291, 0, 0,
	336, 367, 210, 424, 387, 565, 576, 571, 572, 569,
	570, 564, 568, 567, 566, 579, 556, 557, 558, 559,
	561, 0, 573, 574, 560, 180, 194, 287, 0, 356,
	250, 450, 431, 427, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	411, 412, 423, 435, 440, 259, 419, 441, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 430, 392, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 378, 398,
	399, 400, 402, 309, 230, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 0, 520, 0, 0, 0, 234, 519, 0, 0,
	0, 285, 231, 0, 0, 341, 0, 186, 0, 379,
	219, 294, 292, 408, 245, 237, 233, 218, 269, 300,
	339, 397, 333, 563, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 554, 555, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 217, 185, 324, 389, 249,
	0, 80, 0, 0, 177, 178, 179, 541, 1443, 543,
	544, 545, 546, 0, 0, 208, 542, 215, 547, 548,
	549, 0, 229, 273, 236, 228, 405, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 517, 534, 0,
	562, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 532, 612, 0, 0, 0, 578, 0, 533, 0,
	0, 526, 527, 529, 528, 530, 535, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 313, 0,
	577, 0, 0, 437, 0, 0, 575, 0, 0, 0,
	0, 284, 0, 281, 181, 197, 0, 0, 323, 362,
	368, 0, 0, 0, 220, 0, 366, 337, 422, 204,
	247, 359, 342, 364, 0, 0, 365, 290, 410, 354,
	420, 438, 439, 227, 317, 428, 401, 434, 449, 198,
	224, 331, 394, 425, 385, 310, 406, 407, 280, 384,
	255, 184, 288, 446, 196, 374, 212, 189, 396, 418,
	209, 377, 0, 0, 451, 191, 416, 393, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 413, 414,
	221, 452, 200, 433, 193, 0, 432, 319, 409, 417,
	308, 299, 192, 415, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 390,
	426, 453, 205, 206, 207, 0, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 0, 404,
	421, 429, 436, 442, 443, 447, 444, 445, 448, 318,
	267, 386, 282, 291, 0, 0, 336, 367, 210, 424,
	387, 565, 576, 571, 572, 569, 570, 564, 568, 567,
	566, 579, 556, 557, 558, 559, 561, 0, 573, 574,
	560, 180, 194, 287, 0, 356, 250, 450, 431, 427,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 369, 370, 371, 372, 373, 375, 376,
	380, 381, 382, 383, 391, 395, 411, 412, 423, 435,
	440, 259, 419, 441, 0, 295, 0, 0, 297, 244,
	262, 272, 0, 430, 392, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 378, 398, 399, 400, 402, 309,
	230, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 520, 0,
	0, 0, 234, 519, 0, 0, 0, 285, 231, 0,
	0, 341, 0, 186, 0, 379, 219, 294, 292, 408,
	245, 237, 233, 218, 269, 300, 339, 397, 333, 563,
	289, 0, 0, 388, 312, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 389, 249, 0, 80, 0, 0,
	177, 178, 179, 541, 1440, 543, 544, 545, 546, 0,
	0, 208, 542, 215, 547, 548, 549, 0, 229, 273,
	236, 228, 405, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 517, 534, 0, 562, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 612, 0,
	0, 0, 578, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 577, 0, 0, 437,
	0, 0, 575, 0, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 368, 0, 0, 0,
	220, 0, 366, 337, 422, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 410, 354, 420, 438, 439, 227,
	317, 428, 401, 434, 449, 198, 224, 331, 394, 425,
	385, 310, 406, 407, 280, 384, 255, 184, 288, 446,
	196, 374, 212, 189, 396, 418, 209, 377, 0, 0,
	451, 191, 416, 393, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 413, 414, 221, 452, 200, 433,
	193, 0, 432, 319, 409, 417, 308, 299, 192, 415,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 390, 426, 453, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 404, 421, 429, 436, 442,
	443, 447, 444, 445, 448, 318, 267, 386, 282, 291,
	0, 0, 336, 367, 210, 424, 387, 565, 576, 571,
	572, 569, 570, 564, 568, 567, 566, 579, 556, 557,
	558, 559, 561, 0, 573, 574, 560, 180, 194, 287,
	0, 356, 250, 450, 431, 427, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 411, 412, 423, 435, 440, 259, 419, 441,
	0, 295, 0, 0, 297, 244, 262, 272, 0, 430,
	392, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	378, 398, 399, 400, 402, 309, 230, 72, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 520, 0, 0, 0, 234,
	519, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 379, 219, 294, 292, 408, 245, 237, 233,
	218, 269, 300, 339, 397, 333, 563, 289, 0, 0,
	388, 312, 0, 0, 0, 0, 0, 554, 555, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 389, 249, 0, 80, 0, 0, 177, 178, 179,
	541, 540, 543, 544, 545, 546, 0, 0, 208, 542,
	215, 547, 548, 549, 0, 229, 273, 236, 228, 405,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	517, 534, 0, 562, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 0, 0, 0, 0, 578,
	0, 533, 0, 0, 526, 527, 529, 528, 530, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 577, 0, 0, 437, 0, 0, 575,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 368, 0, 0, 0, 220, 0, 366,
	337, 422, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 410, 354, 420, 438, 439, 227, 317, 428, 401,
	434, 449, 198, 224, 331, 394, 425, 385, 310, 406,
	407, 280, 384, 255, 184, 288, 446, 196, 374, 212,
	189, 396, 418, 209, 377, 0, 0, 451, 191, 416,
	393, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 413, 414, 221, 452, 200, 433, 193, 0, 432,
	319, 409, 417, 308, 299, 192, 415, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 390, 426, 453, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 404, 421, 429, 436, 442, 443, 447, 444,
	445, 448, 318, 267, 386, 282, 291, 0, 0, 336,
	367, 210, 424, 387, 565, 576, 571, 572, 569, 570,
	564, 568, 567, 566, 579, 556, 557, 558, 559, 561,
	0, 573, 574, 560, 180, 194, 287, 0, 356, 250,
	450, 431, 427, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 411,
	412, 423, 435, 440, 259, 419, 441, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 430, 392, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 378, 398, 399,
	400, 402, 309, 230, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 520, 0, 0, 0, 234, 519, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 379, 219,
	294, 292, 408, 245, 237, 233, 218, 269, 300, 339,
	397, 333, 563, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 389, 249, 0,
	80, 0, 0, 177, 178, 179, 541, 540, 543, 544,
	545, 546, 0, 0, 208, 542, 215, 547, 548, 549,
	0, 229, 273, 236, 228, 405, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 517, 534, 0, 562,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 0, 0, 0, 0, 578, 0, 533, 0, 0,
	526, 527, 529, 528, 530, 535, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 577,
	0, 0, 437, 0, 0, 575, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 368,
	0, 0, 0, 220, 0, 366, 337, 422, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 410, 354, 420,
	438, 439, 227, 317, 428, 401, 434, 449, 198, 224,
	331, 394, 425, 385, 310, 406, 407, 280, 384, 255,
	184, 288, 446, 196, 374, 212, 189, 396, 418, 209,
	377, 0, 0, 451, 191, 416, 393, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 413, 414, 221,
	452, 200, 433, 193, 0, 432, 319, 409, 417, 308,
	299, 192, 415, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 390, 426,
	453, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 404, 421,
	429, 436, 442, 443, 447, 444, 445, 448, 318, 267,
	386, 282, 291, 0, 0, 336, 367, 210, 424, 387,
	565, 576, 571, 572, 569, 570, 564, 568, 567, 566,
	579, 556, 557, 558, 559, 561, 0, 573, 574, 560,
	180, 194, 287, 0, 356, 250, 450, 431, 427, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 411, 412, 423, 435, 440,
	259, 419, 441, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 430, 392, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 378, 398, 399, 400, 402, 309, 230,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 379, 219, 294, 292, 408, 245,
	237, 233, 218, 269, 300, 339, 397, 333, 563, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 554,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 389, 249, 0, 80, 0, 0, 177,
	178, 179, 541, 540, 543, 544, 545, 546, 0, 0,
	208, 542, 215, 547, 548, 549, 0, 229, 273, 236,
	228, 405, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 534, 0, 562, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 0, 0, 0,
	0, 578, 0, 533, 0, 0, 526, 527, 529, 528,
	530, 535, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 577, 0, 0, 437, 0,
	0, 575, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 368, 0, 0, 0, 220,
	0, 366, 337, 422, 204, 247, 359, 342, 364, 2272,
	0, 365, 290, 410, 354, 420, 438, 439, 227, 317,
	428, 401, 434, 449, 198, 224, 331, 394, 425, 385,
	310, 406, 407, 280, 384, 255, 184, 288, 446, 196,
	374, 212, 189, 396, 418, 209, 377, 0, 0, 451,
	191, 416, 393, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 413, 414, 221, 452, 200, 433, 193,
	0, 432, 319, 409, 417, 308, 299, 192, 415, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 390, 426, 453, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 404, 421, 429, 436, 442, 443,
	447, 444, 445, 448, 318, 267, 386, 282, 291, 0,
	0, 336, 367, 210, 424, 387, 565, 576, 571, 572,
	569, 570, 564, 568, 567, 566, 579, 556, 557, 558,
	559, 561, 0, 573, 574, 560, 180, 194, 287, 0,
	356, 250, 450, 431, 427, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 411, 412, 423, 435, 440, 259, 419, 441, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 430, 392,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 378,
	398, 399, 400, 402, 309, 230, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	379, 219, 294, 292, 408, 245, 237, 233, 218, 269,
	300, 339, 397, 333, 563, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 389,
	249, 0, 80, 0, 1085, 177, 178, 179, 541, 540,
	543, 544, 545, 546, 0, 0, 208, 542, 215, 547,
	548, 549, 0, 229, 273, 236, 228, 405, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 534,
	0, 562, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 578, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 577, 0, 0, 437, 0, 0, 575, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 368, 0, 0, 0, 220, 0, 366, 337, 422,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 410,
	354, 420, 438, 439, 227, 317, 428, 401, 434, 449,
	198, 224, 331, 394, 425, 385, 310, 406, 407, 280,
	384, 255, 184, 288, 446, 196, 374, 212, 189, 396,
	418, 209, 377, 0, 0, 451, 191, 416, 393, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 413,
	414, 221, 452, 200, 433, 193, 0, 432, 319, 409,
	417, 308, 299, 192, 415, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	390, 426, 453, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	404, 421, 429, 436, 442, 443, 447, 444, 445, 448,
	318, 267, 386, 282, 291, 0, 0, 336, 367, 210,
	424, 387, 565, 576, 571, 572, 569, 570, 564, 568,
	567, 566, 579, 556, 557, 558, 559, 561, 0, 573,
	574, 560, 180, 194, 287, 0, 356, 250, 450, 431,
	427, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 411, 412, 423,
	435, 440, 259, 419, 441, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 430, 392, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 378, 398, 399, 400, 402,
	309, 230, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 379, 219, 294, 292,
	408, 245, 237, 233, 218, 269, 300, 339, 397, 333,
	563, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 554, 555, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 389, 249, 0, 80, 0,
	0, 177, 178, 179, 541, 540, 543, 544, 545, 546,
	0, 0, 208, 542, 215, 547, 548, 549, 0, 229,
	273, 236, 228, 405, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 534, 0, 562, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 0,
	0, 0, 0, 578, 0, 533, 0, 0, 526, 527,
	529, 528, 530, 535, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 577, 0, 0,
	437, 0, 0, 575, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 368, 0, 0,
	0, 220, 0, 366, 337, 422, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 410, 354, 420, 438, 439,
	227, 317, 428, 401, 434, 449, 198, 224, 331, 394,
	425, 385, 310, 406, 407, 280, 384, 255, 184, 288,
	446, 196, 374, 212, 189, 396, 418, 209, 377, 0,
	0, 451, 191, 416, 393, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 413, 414, 221, 452, 200,
	433, 193, 0, 432, 319, 409, 417, 308, 299, 192,
	415, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 390, 426, 453, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 404, 421, 429, 436,
	442, 443, 447, 444, 445, 448, 318, 267, 386, 282,
	291, 0, 0, 336, 367, 210, 424, 387, 565, 576,
	571, 572, 569, 570, 564, 568, 567, 566, 579, 556,
	557, 558, 559, 561, 0, 573, 574, 560, 180, 194,
	287, 0, 356, 250, 450, 431, 427, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 411, 412, 423, 435, 440, 259, 419,
	441, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	430, 392, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 378, 398, 399, 400, 402, 309, 230, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 379, 219, 294, 292, 408, 245, 237, 233,
	218, 269, 300, 339, 397, 333, 0, 289, 0, 0,
	388, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 389, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 405,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 990,
	989, 999, 1000, 992, 993, 994, 995, 996, 997, 998,
	991, 0, 0, 1001, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 368, 0, 0, 0, 220, 0, 366,
	337, 422, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 410, 354, 420, 438, 439, 227, 317, 428, 401,
	434, 449, 198, 224, 331, 394, 425, 385, 310, 406,
	407, 280, 384, 255, 184, 288, 446, 196, 374, 212,
	189, 396, 418, 209, 377, 0, 0, 451, 191, 416,
	393, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 413, 414, 221, 452, 200, 433, 193, 0, 432,
	319, 409, 417, 308, 299, 192, 415, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 390, 426, 453, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 404, 421, 429, 436, 442, 443, 447, 444,
	445, 448, 318, 267, 386, 282, 291, 0, 0, 336,
	367, 210, 424, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	450, 431, 427, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 411,
	412, 423, 435, 440, 259, 419, 441, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 430, 392, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 378, 398, 399,
	400, 402, 309, 230, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 379, 219,
	294, 292, 408, 245, 237, 233, 218, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 389, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 405, 0, 0, 0, 0,
	201, 0, 818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 0,
	0, 817, 437, 0, 0, 0, 0, 0, 814, 815,
	284, 780, 281, 181, 197, 808, 812, 323, 362, 368,
	0, 0, 0, 220, 0, 366, 337, 422, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 410, 354, 420,
	438, 439, 227, 317, 428, 401, 434, 449, 198, 224,
	331, 394, 425, 385, 310, 406, 407, 280, 384, 255,
	184, 288, 446, 196, 374, 212, 189, 396, 418, 209,
	377, 0, 0, 451, 191, 416, 393, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 413, 414, 221,
	452, 200, 433, 193, 0, 432, 319, 409, 417, 308,
	299, 192, 415, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 390, 426,
	453, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 404, 421,
	429, 436, 442, 443, 447, 444, 445, 448, 318, 267,
	386, 282, 291, 0, 0, 336, 367, 210, 424, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 450, 431, 427, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 411, 412, 423, 435, 440,
	259, 419, 441, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 430, 392, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 378, 398, 399, 400, 402, 309, 230,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 1103, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 379, 219, 294, 292, 408, 245,
	237, 233, 218, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 389, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 1105, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 405, 0, 0, 0, 0, 201, 0, 0, 979,
	980, 978, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 368, 0, 0, 0, 220,
	0, 366, 337, 422, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 410, 354, 420, 438, 439, 227, 317,
	428, 401, 434, 449, 198, 224, 331, 394, 425, 385,
	310, 406, 407, 280, 384, 255, 184, 288, 446, 196,
	374, 212, 189, 396, 418, 209, 377, 0, 0, 451,
	191, 416, 393, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 413, 414, 221, 452, 200, 433, 193,
	0, 432, 319, 409, 417, 308, 299, 192, 415, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 390, 426, 453, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 404, 421, 429, 436, 442, 443,
	447, 444, 445, 448, 318, 267, 386, 282, 291, 0,
	0, 336, 367, 210, 424, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 450, 431, 427, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 411, 412, 423, 435, 440, 259, 419, 441, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 430, 392,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 378,
	398, 399, 400, 402, 309, 230, 72, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 285, 231, 0, 0, 341, 0, 186,
	0, 379, 219, 294, 292, 408, 245, 237, 233, 218,
	269, 300, 339, 397, 333, 0, 289, 0, 0, 388,
	312, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 217, 185, 324,
	389, 249, 0, 80, 0, 1085, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 208, 0, 215,
	0, 0, 0, 0, 229, 273, 236, 228, 405, 0,
	0, 0, 0, 201, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	313, 0, 0, 0, 0, 437, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 281, 181, 197, 0, 0,
	323, 362, 368, 0, 0, 0, 220, 0, 366, 337,
	422, 204, 247, 359, 342, 364, 0, 0, 365, 290,
	410, 354, 420, 438, 439, 227, 317, 428, 401, 434,
	449, 198, 224, 331, 394, 425, 385, 310, 406, 407,
	280, 384, 255, 184, 288, 446, 196, 374, 212, 189,
	396, 418, 209, 377, 0, 0, 451, 191, 416, 393,
	307, 277, 278, 190, 0, 358, 232, 253, 222, 326,
	413, 414, 221, 452, 200, 433, 193, 0, 432, 319,
	409, 417, 308, 299, 192, 415, 306, 298, 283, 243,
	264, 352, 293, 353, 265, 315, 314, 316, 0, 187,
	0, 390, 426, 453, 205, 206, 207, 0, 242, 246,
	252, 254, 260, 261, 268, 286, 330, 351, 349, 355,
	0, 404, 421, 429, 436, 442, 443, 447, 444, 445,
	448, 318, 267, 386, 282, 291, 0, 0, 336, 367,
	210, 424, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 180, 194, 287, 0, 356, 250, 450,
	431, 427, 0, 0, 226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 183, 195,
	203, 213, 225, 240, 248, 258, 263, 266, 270, 271,
	274, 279, 296, 301, 302, 303, 304, 320, 321, 322,
	325, 328, 329, 332, 334, 335, 338, 344, 345, 346,
	347, 348, 350, 357, 361, 369, 370, 371, 372, 373,
	375, 376, 380, 381, 382, 383, 391, 395, 411, 412,
	423, 435, 440, 259, 419, 441, 0, 295, 0, 0,
	297, 244, 262, 272, 0, 430, 392, 199, 363, 251,
	188, 216, 202, 223, 238, 241, 276, 305, 311, 340,
	343, 256, 235, 214, 360, 211, 378, 398, 399, 400,
	402, 309, 230, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 327, 0, 0, 0, 1472,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 285,
	231, 0, 0, 341, 0, 186, 0, 379, 219, 294,
	292, 408, 245, 237, 233, 218, 269, 300, 339, 397,
	333, 0, 289, 0, 0, 388, 312, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 217, 185, 324, 389, 249, 0, 0,
	0, 0, 177, 178, 179, 0, 1287, 0, 0, 0,
	0, 0, 0, 208, 0, 215, 0, 0, 0, 0,
	229, 273, 236, 228, 405, 0, 0, 0, 0, 201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 313, 0, 0, 0,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 281, 181, 197, 0, 0, 323, 362, 368, 0,
	0, 0, 220, 0, 366, 337, 422, 204, 247, 359,
	342, 364, 0, 1470, 365, 290, 410, 354, 420, 438,
	439, 227, 317, 428, 401, 434, 449, 198, 224, 331,
	394, 425, 385, 310, 406, 407, 280, 384, 255, 184,
	288, 446, 196, 374, 212, 189, 396, 418, 209, 377,
	0, 0, 451, 191, 416, 393, 307, 277, 278, 190,
	0, 358, 232, 253, 222, 326, 413, 414, 221, 452,
	200, 433, 193, 0, 432, 319, 409, 417, 308, 299,
	192, 415, 306, 298, 283, 243, 264, 352, 293, 353,
	265, 315, 314, 316, 0, 187, 0, 390, 426, 453,
	205, 206, 207, 0, 242, 246, 252, 254, 260, 261,
	268, 286, 330, 351, 349, 355, 0, 404, 421, 429,
	436, 442, 443, 447, 444, 445, 448, 318, 267, 386,
	282, 291, 0, 0, 336, 367, 210, 424, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 180,
	194, 287, 0, 356, 250, 450, 431, 427, 0, 0,
	226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 183, 195, 203, 213, 225, 240,
	248, 258, 263, 266, 270, 271, 274, 279, 296, 301,
	302, 303, 304, 320, 321, 322, 325, 328, 329, 332,
	334, 335, 338, 344, 345, 346, 347, 348, 350, 357,
	361, 369, 370, 371, 372, 373, 375, 376, 380, 381,
	382, 383, 391, 395, 411, 412, 423, 435, 440, 259,
	419, 441, 0, 295, 0, 0, 297, 244, 262, 272,
	0, 430, 392, 199, 363, 251, 188, 216, 202, 223,
	238, 241, 276, 305, 311, 340, 343, 256, 235, 214,
	360, 211, 378, 398, 399, 400, 402, 309, 230, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 327, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 285, 231, 0, 0, 341,
	0, 186, 0, 379, 219, 294, 292, 408, 245, 237,
	233, 218, 269, 300, 339, 397, 333, 0, 289, 0,
	0, 388, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 217,
	185, 324, 389, 249, 0, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 208,
	0, 215, 0, 0, 0, 0, 229, 273, 236, 228,
	405, 0, 0, 0, 0, 201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 774, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 313, 0, 0, 0, 0, 437, 0, 0,
	0, 0, 0, 0, 0, 284, 780, 281, 181, 197,
	778, 0, 323, 362, 368, 0, 0, 0, 220, 0,
	366, 337, 422, 204, 247, 359, 342, 364, 0, 0,
	365, 290, 410, 354, 420, 438, 439, 227, 317, 428,
	401, 434, 449, 198, 224, 331, 394, 425, 385, 310,
	406, 407, 280, 384, 255, 184, 288, 446, 196, 374,
	212, 189, 396, 418, 209, 377, 0, 0, 451, 191,
	416, 393, 307, 277, 278, 190, 0, 358, 232, 253,
	222, 326, 413, 414, 221, 452, 200, 433, 193, 0,
	432, 319, 409, 417, 308, 299, 192, 415, 306, 298,
	283, 243, 264, 352, 293, 353, 265, 315, 314, 316,
	0, 187, 0, 390, 426, 453, 205, 206, 207, 0,
	242, 246, 252, 254, 260, 261, 268, 286, 330, 351,
	349, 355, 0, 404, 421, 429, 436, 442, 443, 447,
	444, 445, 448, 318, 267, 386, 282, 291, 0, 0,
	336, 367, 210, 424, 387, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 180, 194, 287, 0, 356,
	250, 450, 431, 427, 0, 0, 226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	183, 195, 203, 213, 225, 240, 248, 258, 263, 266,
	270, 271, 274, 279, 296, 301, 302, 303, 304, 320,
	321, 322, 325, 328, 329, 332, 334, 335, 338, 344,
	345, 346, 347, 348, 350, 357, 361, 369, 370, 371,
	372, 373, 375, 376, 380, 381, 382, 383, 391, 395,
	411, 412, 423, 435, 440, 259, 419, 441, 0, 295,
	0, 0, 297, 244, 262, 272, 0, 430, 392, 199,
	363, 251, 188, 216, 202, 223, 238, 241, 276, 305,
	311, 340, 343, 256, 235, 214, 360, 211, 378, 398,
	399, 400, 402, 309, 230, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 0,
	0, 1472, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 285, 231, 0, 0, 341, 0, 186, 0, 379,
	219, 294, 292, 408, 245, 237, 233, 218, 269, 300,
	339, 397, 333, 0, 289, 0, 0, 388, 312, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 217, 185, 324, 389, 249,
	0, 0, 0, 0, 177, 178, 179, 0, 1287, 0,
	0, 0, 0, 0, 0, 208, 0, 215, 0, 0,
	0, 0, 229, 273, 236, 228, 405, 0, 0, 0,
	0, 201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 313, 0,
	0, 0, 0, 437, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 281, 181, 197, 0, 0, 323, 362,
	368, 0, 0, 0, 220, 0, 366, 337, 422, 204,
	247, 359, 342, 364, 0, 0, 365, 290, 410, 354,
	420, 438, 439, 227, 317, 428, 401, 434, 449, 198,
	224, 331, 394, 425, 385, 310, 406, 407, 280, 384,
	255, 184, 288, 446, 196, 374, 212, 189, 396, 418,
	209, 377, 0, 0, 451, 191, 416, 393, 307, 277,
	278, 190, 0, 358, 232, 253, 222, 326, 413, 414,
	221, 452, 200, 433, 193, 0, 432, 319, 409, 417,
	308, 299, 192, 415, 306, 298, 283, 243, 264, 352,
	293, 353, 265, 315, 314, 316, 0, 187, 0, 390,
	426, 453, 205, 206, 207, 0, 242, 246, 252, 254,
	260, 261, 268, 286, 330, 351, 349, 355, 0, 404,
	421, 429, 436, 442, 443, 447, 444, 445, 448, 318,
	267, 386, 282, 291, 0, 0, 336, 367, 210, 424,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 180, 194, 287, 0, 356, 250, 450, 431, 427,
	0, 0, 226, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 183, 195, 203, 213,
	225, 240, 248, 258, 263, 266, 270, 271, 274, 279,
	296, 301, 302, 303, 304, 320, 321, 322, 325, 328,
	329, 332, 334, 335, 338, 344, 345, 346, 347, 348,
	350, 357, 361, 369, 370, 371, 372, 373, 375, 376,
	380, 381, 382, 383, 391, 395, 411, 412, 423, 435,
	440, 259, 419, 441, 0, 295, 0, 0, 297, 244,
	262, 272, 0, 430, 392, 199, 363, 251, 188, 216,
	202, 223, 238, 241, 276, 305, 311, 340, 343, 256,
	235, 214, 360, 211, 378, 398, 399, 400, 402, 309,
	230, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 327, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 285, 231, 0,
	0, 341, 0, 186, 0, 379, 219, 294, 292, 408,
	245, 237, 233, 218, 269, 300, 339, 397, 333, 0,
	289, 0, 0, 388, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 217, 185, 324, 389, 249, 0, 0, 0, 1085,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 0, 215, 0, 0, 0, 0, 229, 273,
	236, 228, 405, 0, 0, 0, 0, 201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 313, 0, 0, 0, 0, 437,
	0, 0, 0, 2162, 0, 0, 0, 284, 0, 281,
	181, 197, 0, 0, 323, 362, 368, 0, 0, 0,
	220, 0, 366, 337, 422, 204, 247, 359, 342, 364,
	0, 0, 365, 290, 410, 354, 420, 438, 439, 227,
	317, 428, 401, 434, 449, 198, 224, 331, 394, 425,
	385, 310, 406, 407, 280, 384, 255, 184, 288, 446,
	196, 374, 212, 189, 396, 418, 209, 377, 0, 0,
	451, 191, 416, 393, 307, 277, 278, 190, 0, 358,
	232, 253, 222, 326, 413, 414, 221, 452, 200, 433,
	193, 0, 432, 319, 409, 417, 308, 299, 192, 415,
	306, 298, 283, 243, 264, 352, 293, 353, 265, 315,
	314, 316, 0, 187, 0, 390, 426, 453, 205, 206,
	207, 0, 242, 246, 252, 254, 260, 261, 268, 286,
	330, 351, 349, 355, 0, 404, 421, 429, 436, 442,
	443, 447, 444, 445, 448, 318, 267, 386, 282, 291,
	0, 0, 336, 367, 210, 424, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 180, 194, 287,
	0, 356, 250, 450, 431, 427, 0, 0, 226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 183, 195, 203, 213, 225, 240, 248, 258,
	263, 266, 270, 271, 274, 279, 296, 301, 302, 303,
	304, 320, 321, 322, 325, 328, 329, 332, 334, 335,
	338, 344, 345, 346, 347, 348, 350, 357, 361, 369,
	370, 371, 372, 373, 375, 376, 380, 381, 382, 383,
	391, 395, 411, 412, 423, 435, 440, 259, 419, 441,
	0, 295, 0, 0, 297, 244, 262, 272, 0, 430,
	392, 199, 363, 251, 188, 216, 202, 223, 238, 241,
	276, 305, 311, 340, 343, 256, 235, 214, 360, 211,
	378, 398, 399, 400, 402, 309, 230, 72, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 379, 219, 294, 292, 408, 245, 237, 233,
	218, 269, 300, 339, 397, 333, 0, 289, 0, 0,
	388, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 389, 249, 0, 80, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 405,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 368, 0, 0, 0, 220, 0, 366,
	337, 422, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 410, 354, 420, 438, 439, 227, 317, 428, 401,
	434, 449, 198, 224, 331, 394, 425, 385, 310, 406,
	407, 280, 384, 255, 184, 288, 446, 196, 374, 212,
	189, 396, 418, 209, 377, 0, 0, 451, 191, 416,
	393, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 413, 414, 221, 452, 200, 433, 193, 0, 432,
	319, 409, 417, 308, 299, 192, 415, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 390, 426, 453, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 404, 421, 429, 436, 442, 443, 447, 444,
	445, 448, 318, 267, 386, 282, 291, 0, 0, 336,
	367, 210, 424, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	450, 431, 427, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 411,
	412, 423, 435, 440, 259, 419, 441, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 430, 392, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 378, 398, 399,
	400, 402, 309, 230, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 379, 219,
	294, 292, 408, 245, 237, 233, 218, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 389, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 1733, 0,
	0, 1734, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 405, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 368,
	0, 0, 0, 220, 0, 366, 337, 422, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 410, 354, 420,
	438, 439, 227, 317, 428, 401, 434, 449, 198, 224,
	331, 394, 425, 385, 310, 406, 407, 280, 384, 255,
	184, 288, 446, 196, 374, 212, 189, 396, 418, 209,
	377, 0, 0, 451, 191, 416, 393, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 413, 414, 221,
	452, 200, 433, 193, 0, 432, 319, 409, 417, 308,
	299, 192, 415, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 390, 426,
	453, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 404, 421,
	429, 436, 442, 443, 447, 444, 445, 448, 318, 267,
	386, 282, 291, 0, 0, 336, 367, 210, 424, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 450, 431, 427, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 411, 412, 423, 435, 440,
	259, 419, 441, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 430, 392, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 378, 398, 399, 400, 402, 309, 230,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 1137, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 379, 219, 294, 292, 408, 245,
	237, 233, 218, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 389, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 1136, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 405, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 368, 0, 0, 0, 220,
	0, 366, 337, 422, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 410, 354, 420, 438, 439, 227, 317,
	428, 401, 434, 449, 198, 224, 331, 394, 425, 385,
	310, 406, 407, 280, 384, 255, 184, 288, 446, 196,
	374, 212, 189, 396, 418, 209, 377, 0, 0, 451,
	191, 416, 393, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 413, 414, 221, 452, 200, 433, 193,
	0, 432, 319, 409, 417, 308, 299, 192, 415, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 390, 426, 453, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 404, 421, 429, 436, 442, 443,
	447, 444, 445, 448, 318, 267, 386, 282, 291, 0,
	0, 336, 367, 210, 424, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 450, 431, 427, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 411, 412, 423, 435, 440, 259, 419, 441, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 430, 392,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 378,
	398, 399, 400, 402, 309, 230, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	379, 219, 294, 292, 408, 245, 237, 233, 218, 269,
	300, 339, 397, 333, 0, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 389,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 405, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 0, 437, 0, 0, 0, 2254, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 368, 0, 0, 0, 220, 0, 366, 337, 422,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 410,
	354, 420, 438, 439, 227, 317, 428, 401, 434, 449,
	198, 224, 331, 394, 425, 385, 310, 406, 407, 280,
	384, 255, 184, 288, 446, 196, 374, 212, 189, 396,
	418, 209, 377, 0, 0, 451, 191, 416, 393, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 413,
	414, 221, 452, 200, 433, 193, 0, 432, 319, 409,
	417, 308, 299, 192, 415, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	390, 426, 453, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	404, 421, 429, 436, 442, 443, 447, 444, 445, 448,
	318, 267, 386, 282, 291, 0, 0, 336, 367, 210,
	424, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 0, 356, 250, 450, 431,
	427, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 411, 412, 423,
	435, 440, 259, 419, 441, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 430, 392, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 378, 398, 399, 400, 402,
	309, 230, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 379, 219, 294, 292,
	408, 245, 237, 233, 218, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 389, 249, 0, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 0, 0, 0, 0, 229,
	273, 236, 228, 405, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 0, 0, 0,
	437, 0, 0, 0, 2162, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 368, 0, 0,
	0, 220, 0, 366, 337, 422, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 410, 354, 420, 438, 439,
	227, 317, 428, 401, 434, 449, 198, 224, 331, 394,
	425, 385, 310, 406, 407, 280, 384, 255, 184, 288,
	446, 196, 374, 212, 189, 396, 418, 209, 377, 0,
	0, 451, 191, 416, 393, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 413, 414, 221, 452, 200,
	433, 193, 0, 432, 319, 409, 417, 308, 299, 192,
	415, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 390, 426, 453, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 404, 421, 429, 436,
	442, 443, 447, 444, 445, 448, 318, 267, 386, 282,
	291, 0, 0, 336, 367, 210, 424, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 450, 431, 427, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 411, 412, 423, 435, 440, 259, 419,
	441, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	430, 392, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 378, 398, 399, 400, 402, 309, 230, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 379, 219, 294, 292, 408, 245, 237, 233,
	218, 269, 300, 339, 397, 333, 0, 289, 0, 0,
	388, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 389, 249, 0, 80, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 405,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 368, 0, 0, 0, 220, 0, 366,
	337, 422, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 410, 354, 420, 438, 439, 227, 317, 428, 401,
	434, 449, 198, 224, 331, 394, 425, 385, 310, 406,
	407, 280, 384, 255, 184, 288, 446, 196, 374, 212,
	189, 396, 418, 209, 377, 0, 0, 451, 191, 416,
	393, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 413, 414, 221, 452, 200, 433, 193, 0, 432,
	319, 409, 417, 308, 299, 192, 415, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 390, 426, 453, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 404, 421, 429, 436, 442, 443, 447, 444,
	445, 448, 318, 267, 386, 282, 291, 0, 0, 336,
	367, 210, 424, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	450, 431, 427, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 411,
	412, 423, 435, 440, 259, 419, 441, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 430, 392, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 378, 398, 399,
	400, 402, 309, 230, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 379, 219,
	294, 292, 408, 245, 237, 233, 218, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 389, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 1287, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 405, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 368,
	0, 0, 0, 220, 0, 366, 337, 422, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 410, 354, 420,
	438, 439, 227, 317, 428, 401, 434, 449, 198, 224,
	331, 394, 425, 385, 310, 406, 407, 280, 384, 255,
	184, 288, 446, 196, 374, 212, 189, 396, 418, 209,
	377, 0, 0, 451, 191, 416, 393, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 413, 414, 221,
	452, 200, 433, 193, 0, 432, 319, 409, 417, 308,
	299, 192, 415, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 390, 426,
	453, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 404, 421,
	429, 436, 442, 443, 447, 444, 445, 448, 318, 267,
	386, 282, 291, 0, 0, 336, 367, 210, 424, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 450, 431, 427, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 411, 412, 423, 435, 440,
	259, 419, 441, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 430, 392, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 378, 398, 399, 400, 402, 309, 230,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 379, 219, 294, 292, 408, 245,
	237, 233, 218, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 389, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 1105, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 405, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 368, 0, 0, 0, 220,
	0, 366, 337, 422, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 410, 354, 420, 438, 439, 227, 317,
	428, 401, 434, 449, 198, 224, 331, 394, 425, 385,
	310, 406, 407, 280, 384, 255, 184, 288, 446, 196,
	374, 212, 189, 396, 418, 209, 377, 0, 0, 451,
	191, 416, 393, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 413, 414, 221, 452, 200, 433, 193,
	0, 432, 319, 409, 417, 308, 299, 192, 415, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 390, 426, 453, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 404, 421, 429, 436, 442, 443,
	447, 444, 445, 448, 318, 267, 386, 282, 291, 0,
	0, 336, 367, 210, 424, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 450, 431, 427, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 411, 412, 423, 435, 440, 259, 419, 441, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 430, 392,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 378,
	398, 399, 400, 402, 309, 230, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	379, 219, 294, 292, 408, 245, 237, 233, 218, 269,
	300, 339, 397, 333, 0, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 389,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 405, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 368, 0, 0, 0, 220, 0, 366, 337, 422,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 410,
	354, 420, 438, 439, 227, 317, 428, 401, 434, 449,
	198, 224, 331, 394, 425, 385, 310, 406, 407, 280,
	384, 255, 184, 288, 446, 196, 374, 212, 189, 396,
	418, 209, 377, 0, 0, 451, 191, 416, 393, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 413,
	414, 221, 452, 200, 433, 193, 0, 432, 319, 409,
	417, 308, 299, 192, 415, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	390, 426, 453, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	404, 421, 429, 436, 442, 443, 447, 444, 445, 448,
	318, 267, 386, 282, 291, 0, 0, 336, 367, 210,
	424, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 1378, 356, 250, 450, 431,
	427, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 411, 412, 423,
	435, 440, 259, 419, 441, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 430, 392, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 378, 398, 399, 400, 402,
	309, 230, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 1259, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 379, 219, 294, 292,
	408, 245, 237, 233, 218, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 389, 249, 0, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 0, 0, 0, 0, 229,
	273, 236, 228, 405, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 368, 0, 0,
	0, 220, 0, 366, 337, 422, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 410, 354, 420, 438, 439,
	227, 317, 428, 401, 434, 449, 198, 224, 331, 394,
	425, 385, 310, 406, 407, 280, 384, 255, 184, 288,
	446, 196, 374, 212, 189, 396, 418, 209, 377, 0,
	0, 451, 191, 416, 393, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 413, 414, 221, 452, 200,
	433, 193, 0, 432, 319, 409, 417, 308, 299, 192,
	415, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 390, 426, 453, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 404, 421, 429, 436,
	442, 443, 447, 444, 445, 448, 318, 267, 386, 282,
	291, 0, 0, 336, 367, 210, 424, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 450, 431, 427, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 411, 412, 423, 435, 440, 259, 419,
	441, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	430, 392, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 378, 398, 399, 400, 402, 309, 230, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 1257, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 379, 219, 294, 292, 408, 245, 237, 233,
	218, 269, 300, 339, 397, 333, 0, 289, 0, 0,
	388, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 389, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 405,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 368, 0, 0, 0, 220, 0, 366,
	337, 422, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 410, 354, 420, 438, 439, 227, 317, 428, 401,
	434, 449, 198, 224, 331, 394, 425, 385, 310, 406,
	407, 280, 384, 255, 184, 288, 446, 196, 374, 212,
	189, 396, 418, 209, 377, 0, 0, 451, 191, 416,
	393, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 413, 414, 221, 452, 200, 433, 193, 0, 432,
	319, 409, 417, 308, 299, 192, 415, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 390, 426, 453, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 404, 421, 429, 436, 442, 443, 447, 444,
	445, 448, 318, 267, 386, 282, 291, 0, 0, 336,
	367, 210, 424, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	450, 431, 427, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 411,
	412, 423, 435, 440, 259, 419, 441, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 430, 392, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 378, 398, 399,
	400, 402, 309, 230, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 1255, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 379, 219,
	294, 292, 408, 245, 237, 233, 218, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 389, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 405, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 368,
	0, 0, 0, 220, 0, 366, 337, 422, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 410, 354, 420,
	438, 439, 227, 317, 428, 401, 434, 449, 198, 224,
	331, 394, 425, 385, 310, 406, 407, 280, 384, 255,
	184, 288, 446, 196, 374, 212, 189, 396, 418, 209,
	377, 0, 0, 451, 191, 416, 393, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 413, 414, 221,
	452, 200, 433, 193, 0, 432, 319, 409, 417, 308,
	299, 192, 415, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 390, 426,
	453, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 404, 421,
	429, 436, 442, 443, 447, 444, 445, 448, 318, 267,
	386, 282, 291, 0, 0, 336, 367, 210, 424, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 450, 431, 427, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 411, 412, 423, 435, 440,
	259, 419, 441, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 430, 392, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 378, 398, 399, 400, 402, 309, 230,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 1253, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 379, 219, 294, 292, 408, 245,
	237, 233, 218, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 389, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 405, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 368, 0, 0, 0, 220,
	0, 366, 337, 422, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 410, 354, 420, 438, 439, 227, 317,
	428, 401, 434, 449, 198, 224, 331, 394, 425, 385,
	310, 406, 407, 280, 384, 255, 184, 288, 446, 196,
	374, 212, 189, 396, 418, 209, 377, 0, 0, 451,
	191, 416, 393, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 413, 414, 221, 452, 200, 433, 193,
	0, 432, 319, 409, 417, 308, 299, 192, 415, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 390, 426, 453, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 404, 421, 429, 436, 442, 443,
	447, 444, 445, 448, 318, 267, 386, 282, 291, 0,
	0, 336, 367, 210, 424, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 450, 431, 427, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 411, 412, 423, 435, 440, 259, 419, 441, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 430, 392,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 378,
	398, 399, 400, 402, 309, 230, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	1251, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	379, 219, 294, 292, 408, 245, 237, 233, 218, 269,
	300, 339, 397, 333, 0, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 389,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 405, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 368, 0, 0, 0, 220, 0, 366, 337, 422,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 410,
	354, 420, 438, 439, 227, 317, 428, 401, 434, 449,
	198, 224, 331, 394, 425, 385, 310, 406, 407, 280,
	384, 255, 184, 288, 446, 196, 374, 212, 189, 396,
	418, 209, 377, 0, 0, 451, 191, 416, 393, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 413,
	414, 221, 452, 200, 433, 193, 0, 432, 319, 409,
	417, 308, 299, 192, 415, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	390, 426, 453, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	404, 421, 429, 436, 442, 443, 447, 444, 445, 448,
	318, 267, 386, 282, 291, 0, 0, 336, 367, 210,
	424, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 0, 356, 250, 450, 431,
	427, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 411, 412, 423,
	435, 440, 259, 419, 441, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 430, 392, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 378, 398, 399, 400, 402,
	309, 230, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 1247, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 379, 219, 294, 292,
	408, 245, 237, 233, 218, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 389, 249, 0, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 0, 0, 0, 0, 229,
	273, 236, 228, 405, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 368, 0, 0,
	0, 220, 0, 366, 337, 422, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 410, 354, 420, 438, 439,
	227, 317, 428, 401, 434, 449, 198, 224, 331, 394,
	425, 385, 310, 406, 407, 280, 384, 255, 184, 288,
	446, 196, 374, 212, 189, 396, 418, 209, 377, 0,
	0, 451, 191, 416, 393, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 413, 414, 221, 452, 200,
	433, 193, 0, 432, 319, 409, 417, 308, 299, 192,
	415, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 390, 426, 453, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 404, 421, 429, 436,
	442, 443, 447, 444, 445, 448, 318, 267, 386, 282,
	291, 0, 0, 336, 367, 210, 424, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 450, 431, 427, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 411, 412, 423, 435, 440, 259, 419,
	441, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	430, 392, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 378, 398, 399, 400, 402, 309, 230, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 1245, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 379, 219, 294, 292, 408, 245, 237, 233,
	218, 269, 300, 339, 397, 333, 0, 289, 0, 0,
	388, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 389, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 405,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 368, 0, 0, 0, 220, 0, 366,
	337, 422, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 410, 354, 420, 438, 439, 227, 317, 428, 401,
	434, 449, 198, 224, 331, 394, 425, 385, 310, 406,
	407, 280, 384, 255, 184, 288, 446, 196, 374, 212,
	189, 396, 418, 209, 377, 0, 0, 451, 191, 416,
	393, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 413, 414, 221, 452, 200, 433, 193, 0, 432,
	319, 409, 417, 308, 299, 192, 415, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 390, 426, 453, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 404, 421, 429, 436, 442, 443, 447, 444,
	445, 448, 318, 267, 386, 282, 291, 0, 0, 336,
	367, 210, 424, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	450, 431, 427, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 411,
	412, 423, 435, 440, 259, 419, 441, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 430, 392, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 378, 398, 399,
	400, 402, 309, 230, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 1243, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 379, 219,
	294, 292, 408, 245, 237, 233, 218, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 389, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 405, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 313, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 368,
	0, 0, 0, 220, 0, 366, 337, 422, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 410, 354, 420,
	438, 439, 227, 317, 428, 401, 434, 449, 198, 224,
	331, 394, 425, 385, 310, 406, 407, 280, 384, 255,
	184, 288, 446, 196, 374, 212, 189, 396, 418, 209,
	377, 0, 0, 451, 191, 416, 393, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 413, 414, 221,
	452, 200, 433, 193, 0, 432, 319, 409, 417, 308,
	299, 192, 415, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 390, 426,
	453, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 404, 421,
	429, 436, 442, 443, 447, 444, 445, 448, 318, 267,
	386, 282, 291, 0, 0, 336, 367, 210, 424, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 450, 431, 427, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 411, 412, 423, 435, 440,
	259, 419, 441, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 430, 392, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 378, 398, 399, 400, 402, 309, 230,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 379, 219, 294, 292, 408, 245,
	237, 233, 218, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 389, 249, 0, 1218, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 405, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 0, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 368, 0, 0, 0, 220,
	0, 366, 337, 422, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 410, 354, 420, 438, 439, 227, 317,
	428, 401, 434, 449, 198, 224, 331, 394, 425, 385,
	310, 406, 407, 280, 384, 255, 184, 288, 446, 196,
	374, 212, 189, 396, 418, 209, 377, 0, 0, 451,
	191, 416, 393, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 413, 414, 221, 452, 200, 433, 193,
	0, 432, 319, 409, 417, 308, 299, 192, 415, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 390, 426, 453, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 404, 421, 429, 436, 442, 443,
	447, 444, 445, 448, 318, 267, 386, 282, 291, 0,
	0, 336, 367, 210, 424, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 450, 431, 427, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 411, 412, 423, 435, 440, 259, 419, 441, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 430, 392,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 378,
	398, 399, 400, 402, 309, 230, 403, 0, 0, 0,
	0, 1119, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	379, 219, 294, 292, 408, 245, 237, 233, 218, 269,
	300, 339, 397, 333, 0, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 389,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 405, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 368, 0, 0, 0, 220, 0, 366, 337, 422,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 410,
	354, 420, 438, 439, 227, 317, 428, 401, 434, 449,
	198, 224, 331, 394, 425, 385, 310, 406, 407, 280,
	384, 255, 184, 288, 446, 196, 374, 212, 189, 396,
	418, 209, 377, 0, 0, 451, 191, 416, 393, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 413,
	414, 221, 452, 200, 433, 193, 0, 432, 319, 409,
	417, 308, 299, 192, 415, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	390, 426, 453, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	404, 421, 429, 436, 442, 443, 447, 444, 445, 448,
	318, 267, 386, 282, 291, 0, 0, 336, 367, 210,
	424, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 0, 356, 250, 450, 431,
	427, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 411, 412, 423,
	435, 440, 259, 419, 441, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 430, 392, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 378, 398, 399, 400, 402,
	309, 230, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 327, 0, 0, 0, 0, 0,
	0, 0, 1110, 234, 0, 0, 0, 0, 285, 231,
	0, 0, 341, 0, 186, 0, 379, 219, 294, 292,
	408, 245, 237, 233, 218, 269, 300, 339, 397, 333,
	0, 289, 0, 0, 388, 312, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 217, 185, 324, 389, 249, 0, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 208, 0, 215, 0, 0, 0, 0, 229,
	273, 236, 228, 405, 0, 0, 0, 0, 201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 313, 0, 0, 0, 0,
	437, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	281, 181, 197, 0, 0, 323, 362, 368, 0, 0,
	0, 220, 0, 366, 337, 422, 204, 247, 359, 342,
	364, 0, 0, 365, 290, 410, 354, 420, 438, 439,
	227, 317, 428, 401, 434, 449, 198, 224, 331, 394,
	425, 385, 310, 406, 407, 280, 384, 255, 184, 288,
	446, 196, 374, 212, 189, 396, 418, 209, 377, 0,
	0, 451, 191, 416, 393, 307, 277, 278, 190, 0,
	358, 232, 253, 222, 326, 413, 414, 221, 452, 200,
	433, 193, 0, 432, 319, 409, 417, 308, 299, 192,
	415, 306, 298, 283, 243, 264, 352, 293, 353, 265,
	315, 314, 316, 0, 187, 0, 390, 426, 453, 205,
	206, 207, 0, 242, 246, 252, 254, 260, 261, 268,
	286, 330, 351, 349, 355, 0, 404, 421, 429, 436,
	442, 443, 447, 444, 445, 448, 318, 267, 386, 282,
	291, 0, 0, 336, 367, 210, 424, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 180, 194,
	287, 0, 356, 250, 450, 431, 427, 0, 0, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 183, 195, 203, 213, 225, 240, 248,
	258, 263, 266, 270, 271, 274, 279, 296, 301, 302,
	303, 304, 320, 321, 322, 325, 328, 329, 332, 334,
	335, 338, 344, 345, 346, 347, 348, 350, 357, 361,
	369, 370, 371, 372, 373, 375, 376, 380, 381, 382,
	383, 391, 395, 411, 412, 423, 435, 440, 259, 419,
	441, 0, 295, 0, 0, 297, 244, 262, 272, 0,
	430, 392, 199, 363, 251, 188, 216, 202, 223, 238,
	241, 276, 305, 311, 340, 343, 256, 235, 214, 360,
	211, 378, 398, 399, 400, 402, 309, 230, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	327, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 285, 231, 0, 0, 341, 0,
	186, 0, 379, 219, 294, 292, 408, 245, 237, 233,
	218, 269, 300, 339, 397, 333, 0, 289, 0, 0,
	388, 312, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 217, 185,
	324, 389, 249, 0, 0, 0, 0, 177, 178, 179,
	0, 955, 0, 0, 0, 0, 0, 0, 208, 0,
	215, 0, 0, 0, 0, 229, 273, 236, 228, 405,
	0, 0, 0, 0, 201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 313, 0, 0, 0, 0, 437, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 281, 181, 197, 0,
	0, 323, 362, 368, 0, 0, 0, 220, 0, 366,
	337, 422, 204, 247, 359, 342, 364, 0, 0, 365,
	290, 410, 354, 420, 438, 439, 227, 317, 428, 401,
	434, 449, 198, 224, 331, 394, 425, 385, 310, 406,
	407, 280, 384, 255, 184, 288, 446, 196, 374, 212,
	189, 396, 418, 209, 377, 0, 0, 451, 191, 416,
	393, 307, 277, 278, 190, 0, 358, 232, 253, 222,
	326, 413, 414, 221, 452, 200, 433, 193, 0, 432,
	319, 409, 417, 308, 299, 192, 415, 306, 298, 283,
	243, 264, 352, 293, 353, 265, 315, 314, 316, 0,
	187, 0, 390, 426, 453, 205, 206, 207, 0, 242,
	246, 252, 254, 260, 261, 268, 286, 330, 351, 349,
	355, 0, 404, 421, 429, 436, 442, 443, 447, 444,
	445, 448, 318, 267, 386, 282, 291, 0, 0, 336,
	367, 210, 424, 387, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 180, 194, 287, 0, 356, 250,
	450, 431, 427, 0, 0, 226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 183,
	195, 203, 213, 225, 240, 248, 258, 263, 266, 270,
	271, 274, 279, 296, 301, 302, 303, 304, 320, 321,
	322, 325, 328, 329, 332, 334, 335, 338, 344, 345,
	346, 347, 348, 350, 357, 361, 369, 370, 371, 372,
	373, 375, 376, 380, 381, 382, 383, 391, 395, 411,
	412, 423, 435, 440, 259, 419, 441, 0, 295, 0,
	0, 297, 244, 262, 272, 0, 430, 392, 199, 363,
	251, 188, 216, 202, 223, 238, 241, 276, 305, 311,
	340, 343, 256, 235, 214, 360, 211, 378, 398, 399,
	400, 402, 309, 230, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 327, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	285, 231, 0, 0, 341, 0, 186, 0, 379, 219,
	294, 292, 408, 245, 237, 233, 218, 269, 300, 339,
	397, 333, 0, 289, 0, 0, 388, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 217, 185, 324, 389, 249, 0,
	0, 0, 0, 177, 178, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 208, 0, 215, 0, 0, 0,
	0, 229, 273, 236, 228, 405, 0, 0, 0, 0,
	201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 508, 0, 257, 0, 313, 0, 0,
	0, 0, 437, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 281, 181, 197, 0, 0, 323, 362, 368,
	0, 0, 0, 220, 0, 366, 337, 422, 204, 247,
	359, 342, 364, 0, 0, 365, 290, 410, 354, 420,
	438, 439, 227, 317, 428, 401, 434, 449, 198, 224,
	331, 394, 425, 385, 310, 406, 407, 280, 384, 255,
	184, 288, 446, 196, 374, 212, 189, 396, 418, 209,
	377, 0, 0, 451, 191, 416, 393, 307, 277, 278,
	190, 0, 358, 232, 253, 222, 326, 413, 414, 221,
	452, 200, 433, 193, 0, 432, 319, 409, 417, 308,
	299, 192, 415, 306, 298, 283, 243, 264, 352, 293,
	353, 265, 315, 314, 316, 0, 187, 0, 390, 426,
	453, 205, 206, 207, 0, 242, 246, 252, 254, 260,
	261, 268, 286, 330, 351, 349, 355, 0, 404, 421,
	429, 436, 442, 443, 447, 444, 445, 448, 318, 267,
	386, 282, 291, 0, 0, 336, 367, 210, 424, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	180, 194, 287, 0, 356, 250, 450, 431, 427, 0,
	0, 226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 183, 195, 203, 213, 225,
	240, 248, 258, 263, 266, 270, 271, 274, 279, 296,
	301, 302, 303, 304, 320, 321, 322, 325, 328, 329,
	332, 334, 335, 338, 344, 345, 346, 347, 348, 350,
	357, 361, 369, 370, 371, 372, 373, 375, 376, 380,
	381, 382, 383, 391, 395, 411, 412, 423, 435, 440,
	507, 419, 441, 0, 295, 0, 0, 297, 244, 262,
	272, 0, 430, 392, 199, 363, 251, 188, 216, 202,
	223, 238, 241, 276, 305, 311, 340, 343, 256, 235,
	214, 360, 211, 378, 398, 399, 400, 402, 309, 230,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 327, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 285, 231, 0, 0,
	341, 0, 186, 0, 379, 219, 294, 292, 408, 245,
	237, 233, 218, 269, 300, 339, 397, 333, 0, 289,
	0, 0, 388, 312, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	217, 185, 324, 389, 249, 0, 0, 0, 0, 177,
	178, 179, 0, 0, 0, 0, 0, 0, 0, 0,
	208, 0, 215, 0, 0, 0, 0, 229, 273, 236,
	228, 405, 0, 0, 0, 0, 201, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 313, 0, 0, 456, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 281, 181,
	197, 0, 0, 323, 362, 368, 0, 0, 0, 220,
	0, 366, 337, 422, 204, 247, 359, 342, 364, 0,
	0, 365, 290, 410, 354, 420, 438, 439, 227, 317,
	428, 401, 434, 449, 198, 224, 331, 394, 425, 385,
	310, 406, 407, 280, 384, 255, 184, 288, 446, 196,
	374, 212, 189, 396, 418, 209, 377, 0, 0, 451,
	191, 416, 393, 307, 277, 278, 190, 0, 358, 232,
	253, 222, 326, 413, 414, 221, 452, 200, 433, 193,
	0, 432, 319, 409, 417, 308, 299, 192, 415, 306,
	298, 283, 243, 264, 352, 293, 353, 265, 315, 314,
	316, 0, 187, 0, 390, 426, 453, 205, 206, 207,
	0, 242, 246, 252, 254, 260, 261, 268, 286, 330,
	351, 349, 355, 0, 404, 421, 429, 436, 442, 443,
	447, 444, 445, 448, 318, 267, 386, 282, 291, 0,
	0, 336, 367, 210, 424, 387, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 180, 194, 287, 0,
	356, 250, 450, 431, 427, 0, 0, 226, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 183, 195, 203, 213, 225, 240, 248, 258, 263,
	266, 270, 271, 274, 279, 296, 301, 302, 303, 304,
	320, 321, 322, 325, 328, 329, 332, 334, 335, 338,
	344, 345, 346, 347, 348, 350, 357, 361, 369, 370,
	371, 372, 373, 375, 376, 380, 381, 382, 383, 391,
	395, 411, 412, 423, 435, 440, 259, 419, 441, 0,
	295, 0, 0, 297, 244, 262, 272, 0, 430, 392,
	199, 363, 251, 188, 216, 202, 223, 238, 241, 276,
	305, 311, 340, 343, 256, 235, 214, 360, 211, 378,
	398, 399, 400, 402, 309, 230, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 327, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 285, 231, 0, 0, 341, 0, 186, 0,
	379, 219, 294, 292, 408, 245, 237, 233, 218, 269,
	300, 339, 397, 333, 0, 289, 0, 0, 388, 312,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 217, 185, 324, 389,
	249, 0, 0, 0, 0, 177, 178, 179, 0, 0,
	0, 0, 0, 0, 0, 0, 208, 0, 215, 0,
	0, 0, 0, 229, 273, 236, 228, 405, 0, 0,
	0, 0, 201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 313,
	0, 0, 0, 0, 437, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 281, 181, 197, 0, 0, 323,
	362, 368, 0, 0, 0, 220, 0, 366, 337, 422,
	204, 247, 359, 342, 364, 0, 0, 365, 290, 410,
	354, 420, 438, 439, 227, 317, 428, 401, 434, 449,
	198, 224, 331, 394, 425, 385, 310, 406, 407, 280,
	384, 255, 184, 288, 446, 196, 374, 212, 189, 396,
	418, 209, 377, 0, 0, 451, 191, 416, 393, 307,
	277, 278, 190, 0, 358, 232, 253, 222, 326, 413,
	414, 221, 452, 200, 433, 193, 0, 432, 319, 409,
	417, 308, 299, 192, 415, 306, 298, 283, 243, 264,
	352, 293, 353, 265, 315, 314, 316, 0, 187, 0,
	390, 426, 453, 205, 206, 207, 0, 242, 246, 252,
	254, 260, 261, 268, 286, 330, 351, 349, 355, 0,
	404, 421, 429, 436, 442, 443, 447, 444, 445, 448,
	318, 267, 386, 282, 291, 0, 0, 336, 367, 210,
	424, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 180, 194, 287, 0, 356, 250, 450, 431,
	427, 0, 0, 226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 183, 195, 203,
	213, 225, 240, 248, 258, 263, 266, 270, 271, 274,
	279, 296, 301, 302, 303, 304, 320, 321, 322, 325,
	328, 329, 332, 334, 335, 338, 344, 345, 346, 347,
	348, 350, 357, 361, 369, 370, 371, 372, 373, 375,
	376, 380, 381, 382, 383, 391, 395, 411, 412, 423,
	435, 440, 259, 419, 441, 0, 295, 0, 0, 297,
	244, 262, 272, 0, 430, 392, 199, 363, 251, 188,
	216, 202, 223, 238, 241, 276, 305, 311, 340, 343,
	256, 235, 214, 360, 211, 378, 398, 399, 400, 402,
	309, 230, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1211, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 113, 0, 135, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	145, 0, 0, 0, 0, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 0, 153, 0, 0, 0,
	0, 1215, 1216, 144, 143, 170, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 1217, 146, 0, 1214, 0, 140, 141, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 0, 0, 137, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 149, 154, 151,
	157, 158, 159, 160, 162, 163, 164, 165, 0, 0,
	0, 0, 0, 166, 167, 168, 169,
}

var yyPact = [...]int{
	4255, -1000, -336, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1584, 1622, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 645, 1338, -1000, 1604, 4306, -1000, 29309, 426,
	-1000, 28833, 411, 256, 29309, -1000, 98, -1000, 95, 29309,
	103, 28357, -1000, -1000, -264, 12647, 1526, 7, 5, 29309,
	-1000, 1718, -1000, 1280, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1614, 1586, 1735, 551, 1524, -1000, 1656,
	1376, -1000, 12647, 1703, 1645, 10742, -1000, 10742, 300, 300,
	300, 8838, -1000, -1000, 16932, 29309, 29309, 199, -1000, 1604,
	-1000, -1000, 253, -1000, 237, 1286, -1000, 1285, -1000, 518,
	465, 234, 327, 314, 233, 232, 231, 230, 229, 226,
	224, 223, 242, -1000, 603, 603, -153, -154, 335, 286,
	286, 286, 348, 1565, 1556, -1000, 519, -1000, 603, 603,
	250, 603, 603, 603, 603, 198, 197, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 247, 1604, 186, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 29309, 125, 29309, -1000, 515, 29309,
	711, 711, 18, 711, 711, 711, 711, 106, 493, -4,
	-1000, 105, 173, 93, 183, 678, 91, 80, -1000, -1000,
	160, 678, 1023, 87, -1000, 711, 6926, 6926, 6926, -1000,
	1571, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 310,
	-1000, -1000, -1000, -1000, 29309, 27881, 285, 633, -1000, -1000,
	-1000, 136, -1000, -1000, 1134, 592, -1000, 12647, 1308, 1281,
	1281, -1000, -1000, 487, -1000, -1000, 14075, 14075, 14075, 14075,
	14075, 14075, 14075, 14075, 14075, 14075, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1281, 514, -1000, -1000, 1281, 1281, 1281, 1281, 1281, 1281,
	1281, 1281, 12647, 1281, 1281, 1281, 1281, 1281, 1281, 1281,
	1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281, 1281,
	-1000, -1000, 12171, -1000, 29309, -1000, 1281, 117, 1656, 1376,
	-1000, 1827, 1105, 1261, 1030, -1000, -1000, -1000, 1462, 997,
	1022, -1000, -1000, -1000, -1000, -1000, 1280, 1215, 12647, -1000,
	-1000, 1729, -1000, 15503, 511, 797, 1728, 27405, -1000, 20741,
	26929, 1283, 8360, -16, -1000, -1000, -1000, 610, 19313, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1571, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1190, 29309, -1000, -1000, 2456, 1020, -1000,
	1321, -1000, 1183, -1000, 1300, 1345, 410, 1020, 391, 386,
	383, -1000, -116, -1000, -1000, -1000, -1000, -1000, 603, 603,
	241, 4306, 29787, -1000, -1000, -1000, 26453, 1320, 1020, -1000,
	1315, -1000, 708, 359, 424, 424, 1020, -1000, -1000, 29309,
	1020, 695, 675, 29309, 29309, -1000, 25977, -1000, 25501, 25025,
	940, 29309, 24549, 24073, 23597, 23121, 22645, -1000, 1453, -1000,
	1389, -1000, -1000, -1000, 29309, 29309, 29309, 248, -1000, -1000,
	29309, 1020, -1000, -1000, 939, 937, 603, 603, 917, 1013,
	1012, 1010, 603, 603, 916, 1004, 21217, 161, 913, 907,
	899, 929, 1003, 132, 922, 870, 868, 29309, 1313, 29309,
	-1000, 167, 620, 293, 608, 1604, 1525, 1282, 309, 409,
	1020, 291, 291, -1000, 7404, -1000, -1000, 995, 12647, -1000,
	679, 678, 678, -1000, -1000, -1000, -1000, -1000, -1000, 711,
	29309, 679, -1000, -1000, -1000, 678, 711, 29309, 711, 711,
	711, 711, 678, 678, 678, 711, 29309, 29309, 29309, 29309,
	29309, 29309, 29309, 29309, 29309, 6926, 6926, 6926, 577, 711,
	-269, -1000, 1406, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 102, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -89, 1278, 22169, -1000, -270, -271, -275, -276, -1000,
	-1000, -1000, -278, -288, -1000, -1000, -1000, 12647, 12647, 12647,
	12647, 773, 584, 14075, 874, 765, 14075, 14075, 14075, 14075,
	14075, 14075, 14075, 14075, 14075, 14075, 14075, 14075, 14075, 14075,
	14075, 732, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1020, -1000, 972, 972, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 14551, 9314, 7404, 10742, 10742, 12647, 12647,
	11694, 11218, 10742, 1566, 649, 592, 29309, -1000, 1030, -1000,
	-1000, 13599, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 29309, 29309, 10742, 10742, 10742, 10742,
	10742, 1128, 1119, 1181, -1000, 1276, -1000, -156, 16456, 12647,
	993, -1000, -1000, -1000, 1467, 10742, -1000, -1000, 1769, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1162, -1000, 1458,
	988, 248, -1000, 1769, 1128, 12647, 12647, 1274, -1000, 871,
	29309, -1000, -1000, 21693, -1000, -1000, 6448, -1000, 29309, 219,
	29309, -1000, 1194, 1470, -1000, -1000, -1000, 1638, 18361, 29309,
	1284, 1277, -1000, -1000, 510, 7882, -16, -1000, 7882, 1224,
	-1000, -27, -22, 9790, 525, -1000, -1000, -1000, 335, 15027,
	1091, 1536, 40, -1000, -1000, -1000, 1300, -1000, 1300, 1300,
	1300, 1300, 248, 248, 248, 248, -1000, -1000, -1000, -1000,
	-1000, 1312, 1311, -1000, 1300, 1300, 1300, 1300, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1310, 1310, 1310, 1304, 1304,
	281, -1000, 12647, 184, 29309, 1628, 863, 167, 297, 1367,
	1020, 1020, 1020, 297, -1000, 1002, 994, -1000, 1257, -1000,
	-1000, 1690, -1000, -1000, 589, 741, 723, 357, 29309, 126,
	216, -1000, 269, -1000, 29309, 1020, 674, 424, 1020, -1000,
	1020, -1000, -1000, -1000, -1000, 509, -1000, -1000, 1020, 1245,
	-1000, 1264, 782, 686, 742, 685, 1245, -1000, -1000, -136,
	1245, -1000, 1245, -1000, 1245, -1000, 1245, -1000, 1245, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 567, 29309, 126,
	732, -1000, 305, -1000, -1000, 732, 732, -1000, -1000, -1000,
	-1000, 987, 983, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-328, 29309, -1000, 150, 607, 204, 238, 202, 29309, 112,
	1641, 157, 193, 29309, 29309, 291, 1404, 29309, 1623, 29309,
	-1000, -1000, -1000, -1000, 592, 29309, -1000, -1000, 711, 711,
	-1000, -1000, 29309, 711, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 711, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 981, -1000, -1000,
	29309, 29309, -1000, -1000, -1000, -1000, -1000, 206, -38, 196,
	-1000, -1000, -1000, -1000, 1644, -1000, 592, 584, 579, 571,
	-1000, -1000, 819, -1000, -1000, 2324, -1000, -1000, -1000, -1000,
	874, 14075, 14075, 14075, 1026, 2324, 2516, 833, 2426, 530,
	716, 716, 527, 527, 527, 527, 527, 696, 696, -1000,
	-1000, -1000, -1000, 1030, -1000, -1000, -1000, 1030, 10742, 10742,
	1242, -1000, 1281, 507, -1000, 1125, 1125, 878, 926, 631,
	1725, 1125, 601, 1721, 1125, 1125, 10742, -1000, -1000, 683,
	-1000, 12647, 1030, -1000, 1268, 1237, 1225, 1125, 1030, 1030,
	1125, 1125, 1030, -1000, 29309, -1000, -257, -1000, -99, 476,
	1281, -1000, 21217, 1030, 1134, -1000, 18837, 1210, 1769, -1000,
	-1000, -1000, -1000, 248, 25, 769, 592, 592, 12647, -1000,
	-1000, -1000, -1000, -1000, -1000, 504, 1713, 1375, 1281, -1000,
	29309, 20741, 20741, 20741, 20741, 20741, -1000, 1444, 1435, -1000,
	1451, 1443, 1417, 29309, -1000, 1161, 1030, 1684, 18361, 219,
	1232, 20741, 29309, -1000, -1000, 20741, 29309, 5970, -1000, 1224,
	-16, -42, -1000, -1000, -1000, -1000, 592, -1000, 935, -1000,
	288, -1000, 280, -1000, -1000, -1000, -1000, 496, 1637, 1530,
	27, -1000, -1000, -1000, 248, 248, -1000, -1000, 525, 525,
	525, 525, 978, 978, -1000, -1000, -1000, -1000, -1000, 861,
	-1000, -1000, -1000, 821, -1000, -1000, 933, 1397, 184, -1000,
	-1000, 603, 967, 1539, 29309, -1000, -1000, 1078, 150, 29309,
	657, 1402, -1000, 1367, 1367, 1367, 29309, -1000, -1000, -1000,
	-1000, 3756, 29309, 1151, -1000, 127, -1000, 1064, 29309, -1000,
	1148, 1309, 1020, 1020, -1000, -1000, 7404, -1000, 29309, 1281,
	-1000, -1000, -1000, -1000, 396, 1601, 1599, 126, 127, 525,
	1020, -1000, -1000, -1000, -1000, -1000, -327, 1132, 360, 134,
	189, 29309, 29309, 29309, 29309, 29309, 445, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 190, 303, -1000, 29309, 29309, 463,
	-1000, -1000, -1000, 678, -1000, -1000, 678, -1000, -1000, -1000,
	-1000, -1000, -1000, 1594, -63, -303, -1000, -300, -1000, -1000,
	-1000, -1000, 1026, 2324, 2356, -1000, 14075, 14075, -1000, -1000,
	1125, 1125, 10742, 10742, 7404, -1000, -1000, 192, 732, 192,
	14075, 14075, -1000, 14075, 14075, -1000, -130, 1196, 621, -1000,
	12647, 753, -1000, -1000, 14075, 14075, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 381, 370, 367, 29309, -1000,
	-1000, 1661, -1000, 1492, 1487, 1719, 1713, -1000, 20741, 1769,
	-247, -1000, 1511, 1504, -1000, -1000, -1000, -1000, 5492, 1656,
	12647, 1400, 29309, 1281, -1000, 15980, 29309, 1272, -1000, 605,
	1470, 1357, 1398, 1612, -1000, -1000, -1000, -1000, 1421, -1000,
	1399, -1000, -1000, -1000, -1000, -1000, 1119, 1713, 20741, 1217,
	-1000, 1217, -1000, 492, -1000, -1000, -1000, -95, -45, -1000,
	-1000, -1000, 335, -1000, -1000, -1000, -1000, 784, 14075, 1734,
	-1000, 964, -1000, -1000, 671, 668, -1000, 29309, 1306, -1000,
	-1000, -1000, 525, 525, -1000, -1000, -1000, -1000, 1114, -1000,
	1112, 1209, 1109, 81, -1000, 1344, 1587, 603, 603, -1000,
	815, -1000, 1020, -1000, -1000, 315, -1000, 1615, 29309, 1393,
	1392, 1390, -1000, 1681, 1176, -1000, 29309, -1000, -1000, 29309,
	-1000, 1478, 184, 29309, -1000, -1000, -1000, -1000, 216, 29309,
	-1000, 972, 127, -1000, -1000, -1000, -1000, -1000, -1000, 29309,
	148, -1000, 1305, 1027, -1000, 1316, -1000, -1000, -1000, -1000,
	121, 203, -1000, 29309, 443, 1397, 29309, -1000, -1000, -1000,
	711, 711, -1000, 1579, -1000, 1020, -1000, 14075, 2324, 2324,
	-1000, -1000, -1000, 1030, -1000, 1030, 1300, 1300, -1000, 1300,
	1304, -1000, 1300, 86, 1300, 76, 1030, 1030, 2298, 2233,
	2214, 2184, 1281, -124, -1000, 592, 12647, 1811, 1349, 1281,
	1281, 1281, 1076, 29309, -1000, -1000, -1000, -1000, 1713, 1711,
	1206, -1000, 25, 273, -1000, 1506, 1504, -1000, 1680, 1507,
	1677, -1000, -1000, -1000, 592, -1000, 1607, 1188, 1121, -1000,
	-1000, 10266, 1095, 1477, 458, 1076, 1685, 29309, 12647, -1000,
	-1000, 12647, 1297, -1000, 12647, -1000, -1000, -1000, -1000, 1685,
	1217, -1000, -1000, 540, -1000, -1000, -1000, -1000, -1000, 2324,
	-68, -1000, -1000, -1000, 1296, 14075, -1000, -1000, 248, 963,
	248, 813, -1000, 812, -1000, -1000, -196, -1000, -1000, 1294,
	1348, -1000, -1000, 29309, -1000, -1000, 29309, 29309, 29309, 29309,
	29309, -1000, -1000, 212, -1000, 1073, 1071, -1000, -151, -1000,
	-1000, 1295, -1000, -1000, -1000, 1058, -1000, -139, 1020, 29309,
	29309, 29309, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2324, -1000, -1000, -1000, 249, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 14075, 14075, 14075, 14075, 14075, 1656, 962,
	592, 14075, 14075, 17884, 20265, 20265, 17408, -1000, 1711, 1709,
	1676, 1501, 1503, 1503, 1506, -1000, 1675, 1673, -1000, 958,
	1671, 957, 653, -1000, 1281, -1000, 1145, 29309, 1281, 29309,
	-1000, 1656, -1000, 592, 592, 29309, 592, 1656, -1000, -1000,
	29309, 1570, 525, -1000, 525, 1049, 1037, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1295, -1000, -1000, -1000, 1176,
	-1000, 205, 257, -1000, 216, -1000, -158, -161, 1634, 29309,
	-1000, -1000, 7404, -1000, -1000, 1293, 1351, -1000, -1000, -1000,
	1268, 1268, 1268, 1268, 355, 1030, -1000, 1268, 1268, 1069,
	-1000, -1000, -1000, 1069, 1069, 476, 1709, -1000, 12647, 12647,
	1473, 820, -1000, -1000, -1000, -1000, 956, 951, -1000, 943,
	-1000, 1733, -1000, 1281, -1000, 449, 1121, -1000, -1000, 1057,
	-1000, 1052, -1000, -1000, -1000, -1000, -1000, 1627, 1281, -1000,
	-1000, -1000, -1000, 1280, 1040, 1164, -1000, 602, 29309, 29309,
	-1000, -1000, -1000, -1000, 1030, 191, -143, -1000, -1000, -1000,
	19789, -1000, -1000, -1000, -1000, -1000, 592, 1134, -1000, 805,
	-1000, -1000, -1000, -1000, -1000, 29309, 1121, 29309, -1000, 1388,
	900, 1280, 13123, -138, -1000, 7404, 5014, 1033, -1000, -1000,
	1457, -134, -148, -1000, -1000, -1000, -1000, 1103, -1000, 1387,
	-1000, 1717, -1000, -1000, -1000, 772, 942, -1000, -1000, -1000,
	-138, 1268, 1030, -1000, -33, -1000, -1000, -1000, -1000, -1000,
	1316, -1000, 1456, -1000, -1000, 1732, 450, 450, -1000, -1000,
	-1000, -1000, -1000, 279, -1000, -1000, -139, -141, -1000, -1000,
	-1000, 263, 860, -1000, 153, -1000, -144, -1000, -1000, -1000,
	-1000, -149, -1000,
}

var yyPgo = [...]int{
	0, 2027, 12, 58, 2023, 15, 143, 47, 2016, 2015,
	2013, 2012, 145, 142, 131, 2011, 2009, 2007, 2005, 2003,
	2002, 1996, 1994, 1993, 1992, 1990, 1989, 73, 140, 56,
	42, 146, 1988, 1987, 36, 1986, 1985, 1984, 151, 148,
	600, 1982, 130, 75, 1980, 1979, 1977, 1975, 1974, 1971,
	1970, 1969, 1968, 1967, 1966, 1965, 1964, 1962, 153, 1961,
	1947, 4, 1946, 38, 1945, 1944, 1943, 1942, 1941, 101,
	1940, 1939, 1936, 1471, 1935, 1933, 64, 222, 69, 67,
	1932, 1931, 66, 164, 1930, 74, 115, 1929, 1928, 118,
	59, 65, 1927, 94, 89, 1926, 53, 1925, 1921, 72,
	1920, 1919, 1917, 87, 1914, 1910, 3058, 1908, 78, 95,
	19, 44, 1906, 1905, 1904, 1901, 45, 2249, 1900, 1899,
	31, 1893, 1891, 149, 1886, 99, 16, 1885, 11, 18,
	23, 1882, 110, 1878, 8, 39, 1877, 96, 1873, 1872,
	25, 17, 30, 1871, 28, 97, 126, 57, 90, 1871,
	93, 1867, 1866, 24, 35, 1865, 1864, 1862, 1861, 1859,
	1857, 34, 1856, 29, 1855, 1855, 144, 1853, 27, 22,
	40, 92, 80, 33, 14, 1852, 158, 1851, 32, 137,
	85, 134, 1850, 1846, 1845, 926, 159, 1843, 1842, 46,
	1841, 108, 114, 1840, 169, 1838, 1835, 104, 1295, 2583,
	9, 116, 1828, 1827, 2241, 79, 88, 26, 1825, 68,
	1823, 1821, 1820, 139, 138, 63, 881, 48, 1819, 1818,
	1816, 1815, 1813, 1810, 1799, 91, 150, 61, 127, 37,
	1798, 1797, 1796, 84, 51, 1794, 133, 124, 81, 109,
	1793, 117, 123, 71, 1792, 83, 1789, 1788, 1787, 1786,
	43, 1785, 1780, 1778, 1777, 122, 113, 77, 50, 1776,
	41, 76, 112, 119, 1775, 20, 141, 6, 1774, 1,
	0, 1773, 2, 135, 160, 136, 1771, 1770, 3, 1769,
	5, 1766, 1765, 98, 1764, 1759, 1754, 10, 21, 7,
	1753, 1751, 1972, 120, 129, 1746, 173,
}

//line sql.y:5424
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 290, 291, 291, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 270, 270, 270, 273, 273,
	23, 53, 2, 2, 2, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 7, 7,
	7, 7, 7, 10, 11, 6, 6, 12, 12, 65,
	65, 13, 14, 14, 14, 14, 294, 294, 101, 101,
	99, 99, 100, 100, 171, 171, 15, 16, 16, 181,
	181, 180, 180, 180, 182, 182, 182, 182, 216, 216,
	17, 17, 17, 17, 17, 74, 74, 272, 272, 271,
	269, 269, 268, 268, 267, 25, 26, 35, 35, 35,
	35, 36, 37, 274, 274, 246, 41, 41, 40, 40,
	40, 40, 42, 42, 39, 39, 38, 38, 248, 248,
	235, 235, 247, 247, 247, 247, 247, 247, 247, 234,
	234, 88, 88, 151, 151, 151, 151, 151, 151, 151,
	151, 286, 286, 152, 152, 152, 152, 152, 152, 287,
	287, 287, 287, 218, 218, 218, 218, 221, 221, 219,
	219, 219, 219, 219, 219, 219, 219, 219, 220, 220,
	220, 220, 220, 222, 222, 222, 222, 222, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	223, 223, 223, 224, 224, 224, 224, 224, 224, 224,
	224, 233, 233, 225, 225, 228, 228, 229, 229, 229,
	230, 230, 230, 231, 231, 226, 226, 226, 226, 227,
	227, 227, 236, 260, 260, 259, 259, 257, 257, 257,
	257, 245, 245, 254, 254, 254, 254, 254, 244, 244,
	240, 240, 240, 241, 241, 242, 242, 239, 239, 243,
	243, 256, 256, 255, 237, 237, 238, 238, 262, 288,
	288, 288, 288, 289, 289, 263, 279, 280, 278, 278,
	278, 278, 278, 63, 63, 63, 193, 193, 193, 252,
	252, 251, 251, 251, 253, 253, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 188, 188, 188, 277, 277, 277,
	277, 277, 277, 276, 276, 276, 249, 249, 249, 275,
	275, 43, 43, 135, 135, 32, 32, 32, 32, 32,
	32, 31, 31, 31, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 33, 33, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 266, 266,
	266, 266, 266, 266, 266, 266, 266, 266, 232, 232,
	232, 264, 264, 265, 265, 19, 24, 24, 20, 20,
	20, 20, 21, 21, 44, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
	45, 45, 281, 281, 187, 187, 195, 195, 186, 186,
	209, 209, 209, 189, 189, 189, 190, 190, 285, 285,
	285, 46, 46, 48, 48, 49, 50, 50, 211, 211,
	212, 212, 51, 52, 64, 64, 64, 64, 64, 64,
	66, 66, 66, 9, 9, 9, 9, 60, 60, 60,
	8, 8, 47, 47, 54, 282, 282, 283, 284, 284,
	284, 284, 55, 57, 22, 22, 22, 22, 22, 22,
	81, 81, 69, 69, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 75, 75, 75, 70, 70, 295,
	58, 59, 59, 73, 73, 73, 67, 67, 67, 72,
	72, 72, 78, 78, 80, 80, 80, 80, 80, 82,
	82, 82, 82, 82, 82, 82, 77, 77, 79, 79,
	79, 79, 202, 202, 202, 201, 201, 90, 90, 92,
	91, 91, 93, 93, 94, 94, 94, 133, 109, 109,
	169, 169, 168, 168, 170, 170, 170, 170, 172, 172,
	95, 95, 95, 95, 96, 96, 97, 97, 98, 98,
	210, 210, 207, 207, 207, 206, 206, 102, 102, 102,
	104, 103, 103, 103, 103, 105, 105, 107, 107, 106,
	106, 108, 110, 110, 110, 110, 110, 111, 111, 89,
	89, 89, 89, 89, 89, 89, 89, 184, 184, 113,
	113, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 124, 124, 124, 124, 124, 124, 114, 114, 114,
	114, 114, 114, 114, 76, 76, 125, 125, 125, 132,
	126, 126, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 121, 121, 121, 121,
	119, 119, 119, 119, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 120, 120, 120, 120, 120, 120,
	120, 120, 120, 120, 120, 120, 120, 120, 120, 120,
	296, 296, 123, 122, 122, 122, 122, 122, 122, 122,
	71, 71, 71, 71, 71, 215, 215, 215, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 138, 138, 68, 68, 136, 136, 137, 139, 139,
	134, 134, 134, 116, 116, 116, 116, 116, 116, 116,
	116, 118, 118, 118, 140, 140, 141, 141, 142, 142,
	144, 143, 143, 145, 146, 146, 146, 147, 147, 148,
	148, 148, 34, 34, 34, 34, 34, 29, 29, 29,
	29, 30, 30, 30, 83, 83, 83, 83, 85, 85,
	84, 84, 61, 61, 62, 62, 62, 86, 86, 87,
	87, 87, 87, 165, 165, 166, 166, 149, 149, 150,
	150, 150, 157, 157, 157, 153, 153, 155, 155, 155,
	156, 156, 156, 154, 162, 162, 164, 164, 163, 163,
	159, 159, 160, 160, 161, 161, 161, 158, 158, 115,
	115, 115, 115, 115, 167, 167, 167, 167, 173, 173,
	128, 128, 130, 130, 129, 131, 174, 174, 178, 175,
	175, 179, 179, 179, 179, 179, 176, 176, 177, 177,
	203, 203, 203, 183, 183, 194, 194, 191, 191, 192,
	192, 185, 185, 196, 196, 196, 56, 127, 127, 261,
	261, 258, 199, 199, 200, 200, 204, 204, 208, 208,
	205, 205, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	197, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 292, 293, 213, 214, 214,
	214,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 3, 3, 4, 3, 2, 3, 7, 1,
	3, 3, 3, 3, 1, 2, 1, 1, 3, 2,
	3, 3, 2, 5, 7, 9, 8, 7, 8, 1,
	1, 9, 9, 8, 7, 7, 1, 1, 1, 3,
	1, 3, 1, 3, 0, 4, 3, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 2, 6, 12, 2, 0, 2, 0, 2, 1,
	0, 2, 1, 3, 3, 6, 4, 7, 8, 8,
	8, 6, 3, 1, 1, 4, 0, 1, 1, 1,
	2, 2, 0, 1, 4, 4, 4, 4, 2, 4,
	1, 3, 1, 1, 3, 4, 3, 3, 3, 4,
	9, 0, 2, 0, 2, 3, 3, 4, 2, 3,
	2, 1, 1, 0, 2, 2, 3, 3, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 4, 4,
	2, 2, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 6, 6, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 0,
	2, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 4, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 7, 5,
	6, 6, 7, 0, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 1, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 4, 4, 4, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 0, 1, 0, 1, 1, 1,
	0, 2, 2, 0, 2, 2, 0, 2, 0, 1,
	1, 2, 1, 1, 2, 1, 1, 5, 0, 1,
	0, 1, 2, 3, 0, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	3, 3, 2, 2, 3, 1, 3, 2, 1, 2,
	1, 2, 2, 4, 3, 3, 6, 4, 7, 6,
	1, 3, 2, 2, 2, 2, 1, 1, 1, 3,
	2, 1, 1, 1, 0, 1, 1, 0, 3, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 3, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 5, 4, 5, 5, 0, 2, 1,
	3, 3, 3, 2, 3, 1, 2, 0, 3, 1,
	1, 3, 3, 4, 4, 5, 3, 4, 5, 6,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 3, 1, 1, 1, 1, 4, 5, 5, 6,
	4, 4, 6, 6, 6, 8, 8, 8, 8, 9,
	8, 5, 4, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 0, 2, 0, 1,
	3, 1, 3, 2, 0, 1, 1, 0, 1, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 1, 2, 4, 0, 1, 9,
	3, 5, 0, 3, 3, 0, 1, 0, 2, 2,
	0, 2, 2, 2, 0, 2, 1, 2, 3, 3,
	0, 2, 1, 2, 3, 4, 3, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 2, 0,
	3, 0, 1, 0, 1, 1, 5, 0, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 0, 1,
	1,
}

var yyChk = [...]int{
	-1000, -290, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -44, -45, -46, -48,
	-49, -50, -51, -52, -8, -47, -22, -23, -53, -54,
	-55, -56, -57, -3, -2, -7, 7, 8, -65, 10,
	11, 30, -25, -35, 162, -36, -26, 163, -37, 165,
	164, 200, 166, 193, 72, 239, 240, 242, 243, 244,
	245, -66, 198, 199, 168, 34, 43, 31, 32, 35,
	171, -4, 6, -292, 9, 343, 195, 194, 26, -6,
	83, -291, 483, -166, -150, 20, 31, 27, -148, -144,
	-73, -150, 18, 16, 5, -58, -295, -58, -58, -58,
	-58, -58, -246, -248, 83, 135, 83, -58, -41, -40,
	-39, -38, -42, 29, -32, -33, -266, -31, -28, 167,
	164, 208, 104, 105, 200, 201, 202, 166, 184, 199,
	203, 198, 217, -27, 78, 31, 356, 359, -253, 163,
	169, 170, 344, 107, 106, 73, 165, -250, 289, 460,
	-42, 462, 97, 99, 461, 42, 174, 463, 464, 465,
	466, 183, 467, 468, 469, 470, 476, 477, 478, 479,
	108, 5, -58, -208, -204, -270, -198, 86, 87, 88,
	353, 186, 387, 388, 233, 78, 39, 289, 460, 239,
	253, 247, 274, 266, 354, 389, 236, 187, 221, 457,
	264, 113, 462, 390, 201, 294, 295, 296, 97, 242,
	330, 475, 238, 391, 473, 99, 461, 77, 49, 42,
	196, 262, 258, 463, 222, 392, 364, 215, 107, 104,
	482, 34, 256, 48, 28, 472, 106, 47, 464, 126,
	393, 465, 298, 279, 451, 46, 299, 202, 394, 81,
	358, 459, 300, 257, 301, 232, 471, 168, 395, 443,
	302, 303, 452, 396, 280, 284, 397, 322, 304, 50,
	398, 399, 453, 105, 400, 76, 466, 251, 252, 401,
	230, 185, 324, 278, 183, 33, 305, 355, 234, 56,
	209, 325, 44, 282, 43, 447, 402, 450, 277, 273,
	51, 403, 404, 405, 406, 467, 276, 250, 272, 481,
	227, 468, 60, 170, 286, 285, 287, 216, 321, 269,
	407, 408, 409, 190, 79, 410, 259, 19, 411, 412,
	306, 223, 413, 54, 414, 415, 328, 199, 416, 52,
	469, 37, 204, 470, 417, 418, 419, 420, 421, 308,
	422, 307, 281, 283, 211, 309, 357, 423, 255, 203,
	474, 424, 191, 458, 205, 208, 198, 329, 192, 425,
	426, 427, 428, 429, 237, 430, 431, 243, 476, 41,
	432, 433, 434, 435, 231, 226, 323, 332, 59, 80,
	291, 436, 456, 249, 224, 437, 240, 53, 477, 478,
	479, 218, 480, 7, 311, 108, 228, 229, 45, 270,
	210, 438, 439, 260, 261, 275, 248, 271, 241, 444,
	212, 312, 200, 440, 331, 225, 292, 361, 217, 313,
	455, 360, 268, 265, 219, 441, 314, 175, 213, 214,
	442, 445, 315, 316, 318, 319, 235, 317, 320, 220,
	359, 246, 263, 293, 173, -58, 173, -106, -204, 173,
	-176, 295, -195, 297, 310, 305, 315, 303, -187, 306,
	308, 211, -285, 322, 173, 312, 162, 153, 298, 307,
	316, 317, 235, 320, 220, -281, -270, 465, 480, 113,
	267, 302, 300, 323, 447, 319, 318, -204, 241, -211,
	246, -199, -270, -198, 244, -106, -64, 443, 166, -213,
	-213, -75, 447, 449, -126, -89, -112, 119, -117, 29,
	24, -116, -113, -134, -131, -132, 153, 154, 156, 155,
	157, 142, 143, 150, 120, 158, -121, -119, -120, -122,
	90, 89, 98, 91, 92, 93, 94, 100, 101, 102,
	-199, -204, -129, -2, 66, 67, 344, 345, 346, 347,
	352, 348, 122, 55, 339, 333, 342, 341, 340, 337,
	338, 335, 336, 350, 351, 178, 334, 172, 148, 343,
	-270, -198, -292, 42, 311, 311, -106, -58, -142, -73,
	-144, -58, -2, -3, -7, -150, -166, 10, 137, 40,
	48, -147, -148, -6, -2, 6, -292, -89, 17, 21,
	22, -79, 144, -89, -204, -59, -79, -185, 177, -185,
	-185, -175, -216, 241, -179, 323, 322, -200, -177, -199,
	-197, -176, 321, 167, 362, 118, 23, 25, 121, 153,
	17, 122, 35, 169, 267, 184, 152, 180, 344, 162,
	70, 363, 335, 336, 333, 339, 346, 347, 334, 297,
	29, 11, 365, 26, 194, 22, 36, 146, 164, 125,
	197, 24, 195, 102, 368, 20, 73, 189, 12, 182,
	38, 14, 369, 370, 15, 178, 177, 137, 174, 68,
	9, 158, 27, 134, 64, 371, 115, 372, 373, 374,
	375, 66, 135, 18, 337, 338, 31, 448, 376, 352,
	206, 148, 71, 57, 449, 119, 377, 378, 100, 379,
	103, 74, 454, 116, 16, 69, 40, 380, 207, 381,
	179, 382, 326, 383, 136, 165, 343, 67, 384, 172,
	310, 6, 349, 30, 193, 181, 110, 65, 385, 173,
	124, 350, 351, 176, 101, 5, 114, 32, 10, 72,
	75, 340, 341, 342, 55, 109, 356, 123, 13, 386,
	327, 117, 113, -247, 135, -234, -238, -199, 188, -263,
	184, -106, -256, -255, -199, -74, -194, 174, 182, 181,
	114, -274, 116, 228, 334, 172, -38, -39, -176, 152,
	205, 84, 84, -238, -237, -236, -275, 207, 188, -262,
	-254, 180, 189, -244, 181, 182, -239, 174, 115, -275,
	-239, 179, 189, 207, 207, 108, 207, 108, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 204, -245, 127,
	-245, 360, 360, -250, -275, -275, -275, 176, 33, 33,
	-196, -239, 176, 23, -245, -245, -176, 152, -245, -245,
	-245, -245, 215, 215, -245, -245, -245, -245, -245, -245,
	-245, -245, -245, -245, -245, -245, -245, -245, -245, 173,
	-274, -83, 320, 235, 78, -40, 217, -24, -106, -194,
	174, 175, -274, -106, 159, -106, -189, 135, 13, -189,
	-186, 311, 309, 296, 301, -189, -189, -189, -189, 218,
	294, -240, 174, 33, 185, 311, 218, 294, 218, 219,
	218, 219, 304, 314, 218, -209, 12, 137, 334, 299,
	303, 211, 173, 212, 175, 313, -270, 450, 219, -209,
	90, 311, 214, -189, -214, -292, -200, 267, -214, -214,
	30, 176, -199, -60, -199, 90, -9, -5, -13, -12,
	-14, 127, -81, 311, -69, 153, 465, 451, 452, 453,
	450, 308, 458, 456, 454, 218, 455, 84, 118, 116,
	117, 134, -89, -114, 137, 119, 135, 136, 121, 139,
	138, 149, 142, 143, 144, 145, 146, 147, 148, 140,
	141, 152, 127, 128, 129, 130, 131, 132, 133, -184,
	-292, -132, 160, 161, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -292, 159, -292, -292, -292, -292,
	-292, -292, -292, -292, -138, -89, -292, -296, -292, -296,
	-123, -292, -296, -123, -296, -123, -296, -296, -123, -296,
	-123, -296, -296, -123, -292, -292, -292, -292, -292, -292,
	-292, -2, -3, -126, -213, -282, -283, -109, -106, -292,
	235, -147, -6, -2, -67, -80, 61, 62, -82, 22,
	36, 65, 63, 21, -293, 85, -293, -166, -293, 59,
	41, 90, 90, -58, -2, 84, 19, -143, -145, -89,
	12, -202, -201, 23, -199, 90, 159, 96, 12, -107,
	27, -106, -91, -93, -94, -95, -109, -133, -292, 12,
	-99, -100, -106, -108, -204, 84, 241, -179, -216, -181,
	-180, 324, 326, 127, -203, -199, 90, 29, 85, 84,
	-106, -218, -221, -223, -222, -224, -219, -220, 264, 265,
	153, 268, 270, 271, 272, 273, 274, 275, 276, 277,
	278, 279, 30, 196, 260, 261, 262, 263, 280, 281,
	282, 283, 284, 285, 286, 287, 247, 266, 354, 248,
	249, 250, 251, 252, 253, 255, 256, 257, 258, 259,
	-273, -270, 83, 85, 84, -225, 83, -83, 173, -270,
	174, 174, 174, -58, 343, -245, -245, 204, -31, -28,
	-266, 16, -27, -28, 167, 104, 105, 164, 83, -234,
	83, -243, -273, -270, 83, 115, 179, 114, -242, -239,
	-242, -243, -270, -134, -199, -204, -270, 115, 115, -172,
	-199, -172, -172, 21, -172, 21, -172, 21, 91, -199,
	-172, 21, -172, 21, -172, 21, -172, 21, -172, 21,
	29, 76, 77, 29, 79, 80, 81, -134, -134, -234,
	-176, -106, -270, 91, 91, -245, -245, 91, 90, 90,
	90, -245, -245, 91, 90, -206, -204, 90, -276, 190,
	232, 234, 91, 91, 91, 91, 29, 90, -277, 29,
	472, 471, 473, 474, 475, 91, 29, 91, 29, 91,
	-199, 83, -106, -86, 222, 162, 164, 167, 74, 90,
	236, 127, 42, 84, 176, 173, -270, -191, 178, -191,
	-205, -204, -197, 90, -89, -241, 12, 137, -209, -209,
	-189, -106, -241, -209, -189, -106, -189, -189, -189, -189,
	-209, -209, -209, -189, -204, -204, -106, -106, -106, -106,
	-106, -106, -106, -214, -214, -214, -190, 135, -189, 450,
	74, -212, 244, 278, 444, 445, 446, 84, 356, -99,
	450, 450, 450, 450, 450, 450, -89, -89, -89, -89,
	-124, 100, 119, 101, 102, -117, -125, -129, -132, 95,
	137, 135, 136, 121, -117, -117, -117, -117, -117, -117,
	-117, -117, -117, -117, -117, -117, -117, -117, -117, -215,
	-270, 90, 153, -270, -116, -116, -199, -78, 22, 36,
	-77, -79, -200, -205, -197, -77, -77, -89, -89, -134,
	90, -77, -134, 90, -77, -77, -72, 22, 36, -136,
	-137, 123, -134, -293, -117, -199, -199, -77, -78, -78,
	-77, -77, -166, -293, 84, -284, 326, 327, 448, -207,
	207, -206, 23, -127, -126, 90, 57, -77, -82, 61,
	62, -293, 60, 90, -226, -176, -89, -89, 84, -146,
	25, 26, -106, -201, 144, -205, -106, -171, 207, -106,
	30, 84, -102, -104, -103, -105, 64, 68, 70, 65,
	66, 67, 71, -210, 23, -91, -3, -2, -292, -106,
	-99, -294, 84, 12, 75, -294, 84, 159, -179, -181,
	84, 325, 327, 328, 74, 103, -89, -227, 152, -252,
	-251, -250, -234, -236, -237, -238, 85, -151, -88, 38,
	-230, 292, 291, -225, -225, -225, -225, -225, -226, -226,
	-226, -226, 83, 83, -225, -225, -225, -225, -228, 83,
	-228, -228, -229, 83, -229, -263, -89, -260, -259, -257,
	-258, 183, 97, 356, 75, -255, -146, 91, -86, -192,
	178, -261, -258, -270, -270, -270, -192, -270, 90, -270,
	90, 84, 17, -235, -234, -43, 232, -265, 207, -262,
	-256, -243, 115, -242, -243, -243, 159, -270, 84, 27,
	108, 108, 108, 108, 356, 164, 30, -234, -43, -215,
	176, -215, -215, 90, 90, -188, 480, -99, -85, 224,
	127, 213, 213, 173, 173, 226, -106, 237, 238, 236,
	21, 225, 227, 229, 215, -106, -106, -191, 74, -101,
	-106, 24, -204, -106, -189, -189, -106, -189, -189, 90,
	-106, -199, -69, 326, 356, 20, -70, 20, 100, 101,
	102, -125, -117, -117, -117, -76, 197, 118, -293, -293,
	-77, -77, 84, -292, 159, -293, -293, 84, 75, 23,
	12, 12, -293, 12, 12, -293, -293, -77, -139, -137,
	125, -89, -293, -293, 84, 84, -293, -293, -293, -293,
	-293, -283, 447, 327, -110, 72, 177, 73, -292, -206,
	-293, -118, -199, 91, 94, -150, -90, -92, 12, -82,
	-226, -154, -159, -186, -270, 90, 153, -145, 159, -111,
	13, -115, 30, 55, -5, -292, -292, -174, -178, -134,
	-93, -94, -94, -93, -94, 64, 64, 64, 69, 64,
	69, 64, -103, -204, -293, -293, -3, -171, 75, -91,
	-106, -91, -108, -204, 144, -180, -182, 329, 326, 332,
	-270, 90, 84, -250, -238, -289, 100, 119, 29, 74,
	289, 97, -287, -288, 179, 114, 115, 191, 23, 39,
	-231, 293, -226, -226, -227, -227, -227, -227, -233, 90,
	-233, 91, 91, 85, -34, -29, -30, 31, 78, -257,
	-245, 90, 37, -199, 85, -85, -106, 119, 74, -261,
	-261, -261, -204, 16, -168, -199, 84, 85, -135, 233,
	85, -199, 85, 83, -243, -243, -200, -199, -292, 173,
	29, 29, -43, -135, -227, -270, 482, 481, 85, 175,
	231, -87, 339, 90, 86, -106, -106, -106, -106, -106,
	167, 164, 216, 176, -99, -106, 84, -63, 192, 187,
	-209, -209, 31, 326, 459, 457, -76, 118, -117, -117,
	-293, -293, -79, -78, -200, -217, 153, 264, 196, 262,
	258, 278, 269, 291, 260, 292, -215, -217, -117, -117,
	-117, -117, 353, -142, 126, -89, 124, -117, -117, 174,
	174, 174, -172, -183, 20, 12, 55, 55, -90, -111,
	-91, -82, -157, 443, -162, 44, -160, -161, 45, -158,
	46, 54, 144, -147, -89, -173, 74, -174, -128, -130,
	-129, -292, -167, -293, -199, -172, -111, 84, 127, -97,
	-96, 74, 75, -98, 74, -96, 64, 64, -293, -111,
	-91, -111, -111, 159, 326, 330, 331, -250, 100, -117,
	10, 90, 115, 115, -106, 83, -227, -227, 85, 84,
	85, 84, 85, 84, -193, 393, 119, -30, -29, -245,
	-245, 91, -270, 175, 24, -106, 74, 74, 74, 17,
	84, -234, -134, 55, -260, -168, -264, -265, -106, -116,
	-135, -106, -84, 222, 230, 83, 87, -272, 75, 213,
	289, 213, -106, -63, -34, -106, -189, -189, 31, -270,
	-117, -293, -293, -225, -225, -225, -229, -225, 252, -225,
	252, -293, -293, 20, 20, 20, 20, -292, -68, 349,
	-89, 84, 84, -292, -292, -292, -293, -106, -111, -140,
	14, -154, 49, 270, -164, -163, 53, 45, -161, 17,
	47, 17, 28, -173, 84, -293, -293, 84, 55, 159,
	-293, -142, -178, -89, -89, 83, -89, -142, -111, -120,
	83, -117, -226, 90, -226, 91, 91, 393, 29, 79,
	80, 81, 29, 76, 77, -106, -106, -106, -106, -168,
	-199, 209, 85, -293, 84, -232, 356, 359, -169, 83,
	85, -269, 356, -271, -270, -199, -199, -199, -226, -270,
	-117, -117, -117, -117, -117, -147, 90, -117, -117, -170,
	-293, -199, 179, -170, -170, -207, -140, -141, 15, 17,
	-155, 51, -153, 50, -153, -163, 17, 17, 90, 17,
	90, 115, -130, 55, -5, -199, -128, -199, -147, -168,
	-147, -168, 85, -227, -227, 85, 85, -169, 210, -288,
	-265, 360, 360, 23, -168, -268, -267, -200, 83, 75,
	-293, -293, -293, -293, -71, 137, 356, -293, -293, -293,
	84, -293, -293, -293, -110, -141, -89, -126, -156, 52,
	74, 103, 90, 90, 90, 10, -128, 159, 85, 85,
	-152, 23, -292, -5, 85, 84, 127, -168, -106, -293,
	354, 71, 357, -199, 179, 74, 103, -174, -199, -279,
	-280, 74, -289, -286, 100, 119, 97, -287, 109, 110,
	-5, -117, 206, -61, 356, -267, -249, -200, 90, 91,
	85, 60, 355, 358, -280, 74, 11, 10, 100, 90,
	-61, -293, -293, -62, 221, 447, -272, 60, -278, 192,
	187, 190, 30, -278, 184, -269, 356, 186, 29, 100,
	223, 357, 358,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 54, 56, 57, 589, 589, 589, 589,
	589, 589, 0, 0, 589, -2, -2, 589, 998, 0,
	589, 0, 0, -2, 522, 523, 0, 525, -2, 0,
	0, 534, 1417, 1417, 584, 0, 0, 0, 0, 0,
	589, 858, 589, 0, 69, 70, 540, 541, 542, 49,
	1415, 1, 3, 55, 59, 0, 0, 0, 46, 867,
	0, 62, 0, 0, 593, 0, 591, 0, 981, 981,
	981, 0, 100, 101, 0, 0, 0, -2, 104, -2,
	128, 129, 0, 133, 397, 358, 400, 356, 386, -2,
	349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 361, 251, 251, 0, 0, -2, 349,
	349, 349, 0, 0, 0, 383, 983, 304, 251, 251,
	0, 251, 251, 251, 251, 0, 0, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 884, 132, 999, 996, 997, 35, 36, 37,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370,
	1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1412, 1413, 1414, 0, 975, 0, 453, 679, 0,
	513, 513, 0, 513, 513, 513, 513, 0, 0, 0,
	465, 0, 0, 0, 0, 510, 0, 0, 484, 486,
	0, 510, 0, 0, 497, 513, 1418, 1418, 1418, 966,
	0, 507, 505, 519, 520, 502, 503, 521, 524, 0,
	529, 532, 992, 993, 0, 547, 0, 1220, 539, 552,
	553, 0, 585, 586, 40, 730, 689, 0, 695, 697,
	0, 732, 733, 734, 735, 736, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 762, 763, 764, 765,
	843, 844, 845, 846, 847, 848, 849, 850, 699, 700,
	840, 0, 955, 729, 0, 0, 0, 0, 0, 0,
	0, 0, 831, 0, 800, 800, 800, 800, 800, 800,
	800, 800, 800, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 0, 1417, 0, 562, 0, 0, 867, 0,
	859, -2, 0, 0, 0, 61, 60, 905, 0, 0,
	0, 47, 868, 51, 53, 589, 0, 869, 0, 594,
	595, 0, 618, 622, 0, 590, 0, 0, 982, 0,
	0, 86, 0, 1379, 959, -2, -2, 0, 0, 994,
	995, 968, -2, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, -2, 0, 0, 142, 143, 0, 38, 277,
	0, 138, 0, 271, 223, 884, 0, 0, 0, 0,
	0, 589, 0, 976, 123, 124, 130, 131, 251, 251,
	0, 132, 132, 365, 366, 367, 0, 0, -2, 275,
	0, 350, 0, 0, 265, 265, 269, 267, 268, 0,
	0, 0, 0, 0, 0, 377, 0, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 437, 0, 252,
	0, 395, 396, 305, 0, 0, 0, 0, 375, 376,
	0, 0, 984, 985, 0, 0, 251, 251, 0, 0,
	0, 0, 251, 251, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 897, 0, 0, 0, -2, 0, 445, 0, 0,
	0, 977, 977, 452, 0, 454, 455, 0, 0, 456,
	0, 510, 510, 508, 509, 458, 459, 460, 461, 513,
	0, 0, 260, 261, 262, 510, 513, 0, 513, 513,
	513, 513, 510, 510, 510, 513, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1418, 1418, 1418, 516, 513,
	0, 494, 495, 498, 499, 1419, 1420, 1013, 500, 501,
	967, 530, 533, 550, 548, 549, 551, 543, 544, 545,
	546, 0, 564, 565, 570, 0, 0, 0, 0, 576,
	577, 578, 0, 0, 581, 582, 583, 0, 0, 0,
	0, 0, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 717, 718, 719, 720, 721, 722, 723, 696,
	0, 710, 0, 0, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 0, 602, 0, 0, 0, 0, 0,
	0, 0, 0, 599, 0, 832, 0, 783, 0, 784,
	792, 0, 785, 793, 786, 794, 787, 788, 795, 789,
	796, 790, 791, 797, 0, 0, 0, 602, 602, 0,
	0, 729, 0, 0, 41, 554, 555, 0, 662, 987,
	0, 45, 50, 52, 0, 0, -2, -2, 605, 611,
	612, 613, 614, 615, 42, 1416, 43, 0, 58, 0,
	0, 235, 910, 604, 0, 0, 0, 860, 861, 864,
	0, 619, 623, 0, 625, 626, 0, 592, 0, 84,
	0, 678, 0, 630, 632, 633, 634, 660, 0, 0,
	0, 0, 80, 82, 679, 0, 1379, 965, 0, 88,
	89, 0, 0, 0, 239, 970, 971, 972, -2, 258,
	0, -2, 230, 174, 175, 176, 223, 178, 223, 223,
	223, 223, 235, 235, 235, 235, 206, 207, 208, 209,
	210, 0, 0, 193, 223, 223, 223, 223, 213, 214,
	215, 216, 217, 218, 219, 220, 179, 180, 181, 182,
	183, 184, 185, 186, 187, 225, 225, 225, 227, 227,
	0, 39, 0, 243, 0, 864, 0, 897, 979, 989,
	0, 0, 0, 979, 106, 0, 0, 398, 359, 387,
	399, 0, 362, 363, -2, 0, 0, 349, 0, 351,
	0, 259, 0, -2, 0, 269, 0, 265, 269, 266,
	269, 257, 270, 379, 840, 0, 380, 381, 0, 417,
	648, 0, 0, 0, 0, 0, 423, 424, 425, 0,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 436,
	388, 389, 390, 391, 392, 393, 394, 0, 0, 351,
	0, 384, 0, 306, 307, 0, 0, 310, 311, 312,
	313, 0, 0, 316, 317, 318, 665, 666, 319, 343,
	344, 345, 320, 321, 322, 323, 324, 325, 326, 337,
	338, 339, 340, 341, 342, 327, 328, 329, 330, 331,
	334, 0, 116, 888, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 977, 0, 0, 0, 0,
	680, 1000, 1001, 514, 515, 0, 263, 264, 513, 513,
	462, 485, 0, 513, 466, 487, 467, 469, 468, 470,
	489, 490, 513, 473, 511, 512, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 491, 0, 492, 493,
	0, 0, 531, 535, 536, 537, 538, 0, 0, 567,
	572, 573, 574, 575, 587, 580, 731, 690, 691, 692,
	694, 711, 0, 713, 715, 701, 702, 726, 727, 728,
	0, 0, 0, 0, 724, 706, 0, 737, 738, 739,
	740, 741, 742, 743, 744, 745, 746, 747, 748, 751,
	815, 816, 817, 0, 749, 750, 761, 0, 0, 0,
	603, 616, 841, 0, -2, 0, 0, 0, 0, 734,
	843, 0, 734, 843, 0, 0, 0, 600, 601, 838,
	835, 0, 0, 801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 954, 0, 557, 558, 560, 0, 682,
	0, 663, 0, 0, 988, 563, 0, 627, 606, 609,
	610, 44, 906, 235, 930, 0, 870, 871, 0, 863,
	865, 866, 63, 624, 620, 0, 687, 0, 0, 677,
	0, 0, 0, 0, 0, 0, 667, 0, 0, 670,
	0, 0, 0, 0, 661, 0, 0, 0, 0, -2,
	0, 0, 0, 76, 77, 0, 0, 0, 960, 87,
	0, 0, 92, 93, 961, 962, 963, 964, 0, 125,
	-2, 301, 144, 146, 147, 148, 139, 283, 0, 0,
	233, 231, 232, 177, 235, 235, 200, 201, 239, 239,
	239, 239, 0, 0, 194, 195, 196, 197, 188, 0,
	189, 190, 191, 0, 192, 276, 0, 872, 244, 245,
	247, 251, 0, 0, 0, 272, 273, 0, 888, 0,
	0, 0, 990, 989, 989, 989, 0, 134, 135, 136,
	137, 132, 0, 0, 140, 353, 352, 0, 0, 274,
	0, 0, 269, 269, 254, 255, 0, 382, 0, 0,
	419, 420, 421, 422, 0, 0, 0, 351, 353, 239,
	0, 308, 309, 314, 315, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 412, 413, 414,
	415, 885, 886, 887, 0, 0, 446, 0, 0, 293,
	78, 978, 451, 510, 472, 488, 510, 464, 471, 517,
	496, 527, 571, 0, 0, 0, 579, 0, 712, 714,
	716, 703, 724, 707, 0, 704, 0, 0, 698, 766,
	0, 0, 0, 602, 0, 770, 771, 0, 0, 0,
	0, 0, 808, 0, 0, 809, 0, 858, 0, 836,
	0, 0, 782, 802, 0, 0, 803, 804, 805, 806,
	807, 556, 559, 561, 638, 0, 0, 0, 0, 664,
	986, 0, 851, 0, 0, 627, 687, 628, 0, 607,
	912, 911, 924, 937, 236, 237, 238, 862, 0, 867,
	0, 948, 0, 0, 940, 0, 0, 687, 956, 0,
	631, 656, 658, 0, 653, 668, 669, 671, 0, 673,
	0, 675, 676, 635, 636, 637, 0, 687, 0, 687,
	81, 687, 83, 0, 681, 90, 91, 0, 0, 97,
	240, 241, 132, 303, 145, 149, 154, 0, 0, 0,
	158, 0, 160, 284, 0, 170, 172, 0, 0, 152,
	173, 234, 239, 239, 202, 203, 204, 205, 0, 221,
	0, 0, 0, 296, 102, 876, 875, 251, 251, 246,
	0, 249, 0, 991, 224, 0, 115, 0, 0, 0,
	0, 0, 121, 0, 357, 642, 0, 368, 369, 0,
	416, 0, 243, 0, 253, 256, 841, 649, 0, 0,
	370, 0, 353, 373, 374, 385, 335, 336, 333, 0,
	0, 898, 899, 0, 902, 107, 405, 407, 406, 410,
	0, 0, 403, 0, 293, 872, 0, 450, 294, 295,
	513, 513, 566, 0, 569, 0, 705, 0, 725, 708,
	767, 768, 617, 0, 842, 0, 223, 223, 821, 223,
	227, 824, 223, 826, 223, 829, 0, 0, 0, 0,
	0, 0, 0, 833, 781, 839, 0, 0, 0, 0,
	0, 0, 0, 0, 973, 974, 852, 853, 687, 854,
	629, 608, 930, 0, 923, 0, -2, 932, 0, 0,
	0, 938, 621, 64, 688, 67, 0, 948, 939, 950,
	952, 0, 0, 0, 944, 0, 858, 0, 0, 650,
	657, 0, 0, 651, 0, 652, 672, 674, -2, 858,
	687, 74, 75, 0, 94, 95, 96, 302, 155, 156,
	0, 159, 169, 171, 0, 0, 198, 199, 235, 0,
	235, 0, 228, 0, 285, 297, 0, 873, 874, 0,
	0, 248, 250, 0, 980, 117, 0, 0, 0, 0,
	0, 141, 354, 0, 242, 0, 0, 441, 438, 371,
	372, 640, 889, 890, 891, 0, 901, 110, 0, 0,
	0, 0, 447, 448, 449, 79, 457, 463, 568, 588,
	709, 769, 772, 818, 235, 822, 823, 825, 827, 828,
	830, 774, 773, 0, 0, 0, 0, 0, 867, 0,
	837, 0, 0, 0, 0, 0, 662, 48, 854, 856,
	0, 917, 915, 915, 925, 926, 0, 0, 933, 0,
	0, 0, 0, 68, 0, 953, 0, 0, 0, 0,
	85, 867, 957, 958, 654, 0, 659, 867, 73, 157,
	0, 0, 239, 222, 239, 0, 0, 298, 877, 878,
	879, 880, 881, 882, 883, 640, 118, 119, 120, 360,
	643, 0, 0, 418, 0, 426, 0, 0, 0, 0,
	900, 404, 0, 108, 109, 0, 0, 409, 819, 820,
	0, 0, 0, 0, 810, 0, 834, 0, 0, 0,
	684, 644, 645, 0, 0, 682, 856, 66, 0, 0,
	920, 0, 913, 916, 914, 927, 0, 0, 934, 0,
	936, 0, 951, 0, 943, 946, 942, 945, 71, 0,
	72, 0, 163, 211, 212, 226, 229, 0, 0, 278,
	442, 439, 440, 0, 0, 111, 112, 0, 0, 0,
	775, 777, 776, 778, 0, 0, 0, 780, 798, 799,
	0, 683, 685, 686, 639, 65, 857, 855, 909, 0,
	918, 919, 928, 929, 935, 0, 941, 0, 655, 279,
	283, 0, 0, 892, 641, 0, 0, 0, 411, 779,
	0, 0, 0, 646, 647, 921, 922, 949, 947, 280,
	281, 0, 150, 164, 165, 0, 0, 168, 161, 162,
	892, 0, 0, 401, 894, 113, 114, 346, 347, 348,
	107, 811, 0, 814, 282, 0, 0, 0, 166, 167,
	103, 443, 444, 0, 895, 896, 110, 812, 286, 288,
	289, 0, 0, 287, 0, 408, 0, 290, 291, 292,
	893, 0, 813,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 120, 3, 3, 3, 147, 139, 3,
	83, 85, 144, 142, 84, 143, 159, 145, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 483,
	128, 127, 129, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 149, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 150,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 121, 122, 123, 124, 125,
	126, 130, 131, 132, 133, 134, 135, 136, 137, 140,
	141, 146, 148, 151, 152, 153, 154, 155, 156, 157,
	158, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:439
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:444
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:445
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:449
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:482
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:488
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:492
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:501
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:505
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:511
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:517
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:522
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:526
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:530
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:553
		{
			setOrderAndLimitToSelect(yyDollar[1].selStmtUnion(), yyDollar[2].orderByUnion(), yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:558
		{
			setOrderAndLimitToSelect(yyDollar[1].selStmtUnion(), nil, yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:563
		{
			setOrderAndLimitToSelect(yyDollar[1].selStmtUnion(), yyDollar[2].orderByUnion(), yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:568
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:574
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:578
		{
			yyLOCAL = &Union{FirstStatement: yyDollar[1].selStmtUnion(), UnionSelects: []*UnionSelect{{Distinct: yyDollar[2].booleanUnion(), Statement: yyDollar[3].selStmtUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:582
		{
			yyLOCAL = &Union{FirstStatement: yyDollar[1].selStmtUnion(), UnionSelects: []*UnionSelect{{Distinct: yyDollar[2].booleanUnion(), Statement: yyDollar[3].selStmtUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:586
		{
			yyLOCAL = &Union{FirstStatement: yyDollar[1].selStmtUnion(), UnionSelects: []*UnionSelect{{Distinct: yyDollar[2].booleanUnion(), Statement: yyDollar[3].selStmtUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:590
		{
			yyLOCAL = &Union{FirstStatement: yyDollar[1].selStmtUnion(), UnionSelects: []*UnionSelect{{Distinct: yyDollar[2].booleanUnion(), Statement: yyDollar[3].selStmtUnion()}}}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:596
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:600
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:605
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:609
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:615
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:630
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:636
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:643
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:669
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:681
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:693
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:697
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:703
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:709
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:713
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:717
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:721
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:726
		{
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:731
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:735
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:741
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:745
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:751
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:760
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:764
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:770
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:776
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:780
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:786
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:790
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:796
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:800
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:804
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:810
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:814
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:818
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:822
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:828
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:832
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:838
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:844
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:851
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:860
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:864
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:871
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:875
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:895
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:900
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:906
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:911
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:917
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 115:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:923
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:930
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:937
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:942
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:947
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:952
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:959
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:966
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:977
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:983
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:987
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:993
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:997
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1001
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1005
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1011
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1015
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1021
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1025
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1031
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1035
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1042
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1046
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1052
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1056
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1062
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1067
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1076
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1085
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1089
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1095
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1101
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1109
		{
			yyVAL.str = ""
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.str = ""
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1122
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1126
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1132
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1138
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1143
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1148
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1153
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1158
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1165
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1169
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1174
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1178
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1183
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1189
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1195
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1200
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1207
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1211
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1215
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1219
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1241
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1259
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1317
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1329
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 198:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 199:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 205:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1367
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1371
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 211:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1391
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1396
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1406
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1426
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1436
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1441
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1450
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1455
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 226:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1459
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 227:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1467
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1471
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1477
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1485
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1489
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1498
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1502
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = ""
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1524
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1539
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1544
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1548
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1554
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1558
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1564
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1568
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1573
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1577
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1593
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1597
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1601
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1605
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1609
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = ""
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = yyDollar[2].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1648
		{
			yyVAL.str = "key"
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.str = yyDollar[1].str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = ""
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1677
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1687
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1693
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1697
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1703
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1707
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1713
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1719
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1723
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1727
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1731
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1736
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1740
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1746
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1752
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1758
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1764
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1768
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1772
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1776
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1780
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = ""
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 296:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1798
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1802
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1806
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1811
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1815
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1821
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1825
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1829
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1835
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1839
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1845
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1849
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1853
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1857
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1861
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1865
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1869
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1873
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1877
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1881
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1885
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1889
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1893
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1897
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1901
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1905
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1909
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1913
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1917
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1921
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1925
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1929
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1933
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1937
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1941
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1945
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1949
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1953
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = ""
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1998
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2004
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2008
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2013
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2017
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2022
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2026
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2030
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2034
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2038
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2042
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2048
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2052
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2056
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2062
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2066
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2070
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2074
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2078
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2082
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2086
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2090
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2094
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2098
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2102
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2106
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2110
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2114
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2118
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2122
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2126
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2130
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2134
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2138
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2142
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2146
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2152
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2162
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2166
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2170
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2174
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2178
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2182
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2186
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2190
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2194
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2200
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2206
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2213
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2220
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2226
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2230
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2237
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2244
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2256
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2266
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2270
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2274
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2287
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2297
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2301
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2312
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2319
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2326
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2333
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2341
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2345
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2349
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2353
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2357
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2361
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2365
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2369
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2373
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2377
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2381
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2385
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2389
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2393
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2397
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2401
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2405
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2409
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2413
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2417
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2421
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2425
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2430
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2434
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2445
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2449
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 443:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2455
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2459
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2465
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2471
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2475
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 448:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2481
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2485
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2494
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2498
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2504
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2508
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2513
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2519
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2523
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2527
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2531
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2535
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2539
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2543
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2547
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2551
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2555
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2559
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2563
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2567
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2571
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2575
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2579
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2583
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2587
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2591
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2595
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2599
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2603
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2607
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2611
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2615
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2619
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2627
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2631
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2635
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2639
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2663
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2668
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2672
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2676
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2680
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2684
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2688
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2693
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2707
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2731
		{
			yyVAL.str = ""
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.str = "extended "
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2741
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2745
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2761
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2765
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2769
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2775
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2779
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2783
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2793
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2799
		{
			yyVAL.empty = struct{}{}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.empty = struct{}{}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2807
		{
			yyVAL.empty = struct{}{}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2817
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2823
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2827
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2833
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2839
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2843
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.empty = struct{}{}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2850
		{
			yyVAL.empty = struct{}{}
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2853
		{
			yyVAL.empty = struct{}{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2855
		{
			yyVAL.empty = struct{}{}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2866
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2871
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2875
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2879
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2883
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2887
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2891
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = yyDollar[1].str
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = yyDollar[1].str
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = yyDollar[1].str
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2911
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2915
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2919
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2923
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2928
		{
			yyVAL.str = ""
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2942
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2946
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2952
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2956
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2962
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2968
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2978
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2984
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2988
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2992
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2996
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3002
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3008
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3018
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3022
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3040
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3044
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3050
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3054
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3058
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3078
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3082
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3099
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3103
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3107
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3112
		{
			yyVAL.str = ""
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3116
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3121
		{
			setAllowComments(yylex, true)
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3131
		{
			yyVAL.strs = nil
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3135
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3141
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3145
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3149
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3154
		{
			yyVAL.str = ""
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3158
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.str = SQLCacheStr
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3175
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3180
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3184
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.strs = nil
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3193
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3201
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3205
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3211
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.str = SQLCacheStr
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3219
		{
			yyVAL.str = DistinctStr
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3223
		{
			yyVAL.str = DistinctStr
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3227
		{
			yyVAL.str = StraightJoinHint
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3235
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3241
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3245
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3251
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3255
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3259
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3263
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3268
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3272
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3288
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3292
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3298
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3304
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3308
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3318
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3322
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3326
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3332
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3338
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3342
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3351
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3357
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3367
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3371
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3375
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3385
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 650:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3402
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3406
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3410
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3414
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3420
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3422
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3426
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3432
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3434
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3437
		{
			yyVAL.empty = struct{}{}
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3439
		{
			yyVAL.empty = struct{}{}
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3442
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3450
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3457
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3463
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3467
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3471
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3477
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3483
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3487
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3491
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3495
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3501
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3505
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3515
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3519
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3525
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3535
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3540
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3544
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3548
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3552
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3556
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3561
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3565
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3571
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3575
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3579
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3583
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3587
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3591
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3595
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3599
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3605
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3609
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3615
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3619
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3625
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3629
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3633
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3637
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3641
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3645
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3649
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3653
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3657
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3661
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3667
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3671
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3675
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3679
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3683
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3687
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3693
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3697
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3701
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3705
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3709
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3713
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3717
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3732
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3736
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3740
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3747
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3753
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3757
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3763
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3767
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3771
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3775
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3779
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3783
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3787
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3791
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3795
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3799
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3803
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3807
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3811
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3815
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3819
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3823
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3827
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3831
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3835
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3839
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3843
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3847
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3851
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3855
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3859
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3863
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3867
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3897
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3901
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3905
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3909
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3919
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3923
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3927
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3931
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3935
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3939
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3943
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3947
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3951
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3955
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3959
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3963
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3967
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3971
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3981
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3985
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3989
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3994
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3999
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4004
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4010
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4015
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4028
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4033
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4038
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4043
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4047
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4051
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4061
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4071
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4075
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4079
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4083
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4087
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4091
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4095
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4101
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4105
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4109
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4113
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4117
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4137
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4141
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4145
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4149
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4153
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4157
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4175
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4179
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4183
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4187
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4192
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4196
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = string("")
		}
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4211
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4221
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4226
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4230
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4236
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4240
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4244
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4254
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4258
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4279
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4285
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4304
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4308
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4313
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4317
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4322
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4326
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4332
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4338
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4342
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4348
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4353
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4357
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4361
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4366
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4370
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4376
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4380
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4384
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4393
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4397
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4401
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4405
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4412
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4416
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4420
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4424
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4430
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4434
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4438
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4443
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4447
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4451
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = yyDollar[3].str
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4483
		{
			yyVAL.str = yyDollar[2].str
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4488
		{
			yyVAL.str = "cascaded"
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4492
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 897:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4501
		{
			yyVAL.str = ""
		}
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = yyDollar[3].str
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4511
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4515
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4519
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4523
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4528
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4532
		{
			yyLOCAL = yyDollar[1].lockUnion()
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4538
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4542
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4551
		{
			yyLOCAL = yyDollar[1].selectIntoUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4556
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4560
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4564
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4569
		{
			yyVAL.str = ""
		}
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4573
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4577
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 915:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4582
		{
			yyVAL.str = ""
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4586
		{
			yyVAL.str = " header"
		}
	case 917:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4591
		{
			yyVAL.str = ""
		}
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4595
		{
			yyVAL.str = " manifest on"
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4599
		{
			yyVAL.str = " manifest off"
		}
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4604
		{
			yyVAL.str = ""
		}
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4608
		{
			yyVAL.str = " overwrite on"
		}
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4612
		{
			yyVAL.str = " overwrite off"
		}
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4618
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 924:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4623
		{
			yyVAL.str = ""
		}
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4627
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4633
		{
			yyVAL.str = yyDollar[1].str
		}
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4637
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4643
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4647
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = ""
		}
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.str = yyDollar[1].str
		}
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4666
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4672
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 935:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4685
		{
			yyVAL.str = ""
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4689
		{
			yyVAL.str = " optionally"
		}
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4702
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4706
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4710
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4714
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4718
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4724
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4728
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4732
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 947:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4736
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4741
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4745
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4751
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4755
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4761
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4765
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4771
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4777
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4787
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4791
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4797
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4803
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4807
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4813
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4817
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4821
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4825
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4829
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4837
		{
			yyVAL.str = "charset"
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4847
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4851
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4855
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4864
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4866
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4869
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4871
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4874
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4876
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4879
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4881
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4884
		{
			yyVAL.empty = struct{}{}
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4886
		{
			yyVAL.empty = struct{}{}
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.empty = struct{}{}
		}
	case 986:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4892
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4897
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4901
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4906
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4908
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4912
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4922
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 995:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4929
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4935
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4945
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4949
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1001:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4956
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5394
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			decNesting(yylex)
		}
	case 1417:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5408
		{
			skipToEnd(yylex)
		}
	case 1418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5413
		{
			skipToEnd(yylex)
		}
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5417
		{
			skipToEnd(yylex)
		}
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5421
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
