// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl DDLStatement) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	OnlineDDLHint          *OnlineDDLHint
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createView             *CreateView
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const STATUS = 57517
const VARIABLES = 57518
const WARNINGS = 57519
const CASCADED = 57520
const DEFINER = 57521
const OPTION = 57522
const SQL = 57523
const UNDEFINED = 57524
const SEQUENCE = 57525
const UDEFINED = 57526
const MERGE = 57527
const TEMPTABLE = 57528
const INVOKER = 57529
const LOCAL = 57530
const SECURITY = 57531
const BEGIN = 57532
const START = 57533
const TRANSACTION = 57534
const COMMIT = 57535
const ROLLBACK = 57536
const SAVEPOINT = 57537
const RELEASE = 57538
const WORK = 57539
const BIT = 57540
const TINYINT = 57541
const SMALLINT = 57542
const MEDIUMINT = 57543
const INT = 57544
const INTEGER = 57545
const BIGINT = 57546
const INTNUM = 57547
const REAL = 57548
const DOUBLE = 57549
const FLOAT_TYPE = 57550
const DECIMAL = 57551
const NUMERIC = 57552
const TIME = 57553
const TIMESTAMP = 57554
const DATETIME = 57555
const YEAR = 57556
const CHAR = 57557
const VARCHAR = 57558
const BOOL = 57559
const CHARACTER = 57560
const VARBINARY = 57561
const NCHAR = 57562
const TEXT = 57563
const TINYTEXT = 57564
const MEDIUMTEXT = 57565
const LONGTEXT = 57566
const BLOB = 57567
const TINYBLOB = 57568
const MEDIUMBLOB = 57569
const LONGBLOB = 57570
const JSON = 57571
const ENUM = 57572
const GEOMETRY = 57573
const POINT = 57574
const LINESTRING = 57575
const POLYGON = 57576
const GEOMETRYCOLLECTION = 57577
const MULTIPOINT = 57578
const MULTILINESTRING = 57579
const MULTIPOLYGON = 57580
const NULLX = 57581
const AUTO_INCREMENT = 57582
const APPROXNUM = 57583
const SIGNED = 57584
const UNSIGNED = 57585
const ZEROFILL = 57586
const COLLATION = 57587
const DATABASES = 57588
const TABLES = 57589
const VITESS_METADATA = 57590
const VSCHEMA = 57591
const FULL = 57592
const PROCESSLIST = 57593
const COLUMNS = 57594
const FIELDS = 57595
const ENGINES = 57596
const PLUGINS = 57597
const EXTENDED = 57598
const KEYSPACES = 57599
const VITESS_KEYSPACES = 57600
const VITESS_SHARDS = 57601
const VITESS_TABLETS = 57602
const NAMES = 57603
const CHARSET = 57604
const GLOBAL = 57605
const SESSION = 57606
const ISOLATION = 57607
const LEVEL = 57608
const READ = 57609
const WRITE = 57610
const ONLY = 57611
const REPEATABLE = 57612
const COMMITTED = 57613
const UNCOMMITTED = 57614
const SERIALIZABLE = 57615
const CURRENT_TIMESTAMP = 57616
const DATABASE = 57617
const CURRENT_DATE = 57618
const CURRENT_TIME = 57619
const LOCALTIME = 57620
const LOCALTIMESTAMP = 57621
const CURRENT_USER = 57622
const UTC_DATE = 57623
const UTC_TIME = 57624
const UTC_TIMESTAMP = 57625
const REPLACE = 57626
const CONVERT = 57627
const CAST = 57628
const SUBSTR = 57629
const SUBSTRING = 57630
const GROUP_CONCAT = 57631
const SEPARATOR = 57632
const TIMESTAMPADD = 57633
const TIMESTAMPDIFF = 57634
const MATCH = 57635
const AGAINST = 57636
const BOOLEAN = 57637
const LANGUAGE = 57638
const WITH = 57639
const QUERY = 57640
const EXPANSION = 57641
const UNUSED = 57642
const ARRAY = 57643
const CUME_DIST = 57644
const DESCRIPTION = 57645
const DENSE_RANK = 57646
const EMPTY = 57647
const EXCEPT = 57648
const FIRST_VALUE = 57649
const GROUPING = 57650
const GROUPS = 57651
const JSON_TABLE = 57652
const LAG = 57653
const LAST_VALUE = 57654
const LATERAL = 57655
const LEAD = 57656
const MEMBER = 57657
const NTH_VALUE = 57658
const NTILE = 57659
const OF = 57660
const OVER = 57661
const PERCENT_RANK = 57662
const RANK = 57663
const RECURSIVE = 57664
const ROW_NUMBER = 57665
const SYSTEM = 57666
const WINDOW = 57667
const ACTIVE = 57668
const ADMIN = 57669
const BUCKETS = 57670
const CLONE = 57671
const COMPONENT = 57672
const DEFINITION = 57673
const ENFORCED = 57674
const EXCLUDE = 57675
const FOLLOWING = 57676
const GEOMCOLLECTION = 57677
const GET_MASTER_PUBLIC_KEY = 57678
const HISTOGRAM = 57679
const HISTORY = 57680
const INACTIVE = 57681
const INVISIBLE = 57682
const LOCKED = 57683
const MASTER_COMPRESSION_ALGORITHMS = 57684
const MASTER_PUBLIC_KEY_PATH = 57685
const MASTER_TLS_CIPHERSUITES = 57686
const MASTER_ZSTD_COMPRESSION_LEVEL = 57687
const NESTED = 57688
const NETWORK_NAMESPACE = 57689
const NOWAIT = 57690
const NULLS = 57691
const OJ = 57692
const OLD = 57693
const OPTIONAL = 57694
const ORDINALITY = 57695
const ORGANIZATION = 57696
const OTHERS = 57697
const PATH = 57698
const PERSIST = 57699
const PERSIST_ONLY = 57700
const PRECEDING = 57701
const PRIVILEGE_CHECKS_USER = 57702
const PROCESS = 57703
const RANDOM = 57704
const REFERENCE = 57705
const REQUIRE_ROW_FORMAT = 57706
const RESOURCE = 57707
const RESPECT = 57708
const RESTART = 57709
const RETAIN = 57710
const REUSE = 57711
const ROLE = 57712
const SECONDARY = 57713
const SECONDARY_ENGINE = 57714
const SECONDARY_LOAD = 57715
const SECONDARY_UNLOAD = 57716
const SKIP = 57717
const SRID = 57718
const THREAD_PRIORITY = 57719
const TIES = 57720
const UNBOUNDED = 57721
const VCPU = 57722
const VISIBLE = 57723
const FORMAT = 57724
const TREE = 57725
const VITESS = 57726
const TRADITIONAL = 57727

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"UDEFINED",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"LOCAL",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	155, 770,
	160, 770,
	163, 770,
	164, 770,
	-2, 84,
	-1, 47,
	34, 329,
	155, 329,
	167, 329,
	192, 343,
	193, 343,
	-2, 331,
	-1, 52,
	157, 353,
	-2, 351,
	-1, 76,
	55, 389,
	-2, 397,
	-1, 435,
	143, 788,
	-2, 784,
	-1, 436,
	143, 789,
	-2, 785,
	-1, 451,
	55, 390,
	-2, 402,
	-1, 452,
	55, 391,
	-2, 403,
	-1, 472,
	111, 1071,
	-2, 76,
	-1, 473,
	111, 971,
	-2, 77,
	-1, 478,
	111, 930,
	-2, 746,
	-1, 480,
	111, 1011,
	-2, 748,
	-1, 1011,
	143, 791,
	-2, 787,
	-1, 1098,
	73, 58,
	81, 58,
	-2, 62,
	-1, 1498,
	5, 643,
	18, 643,
	20, 643,
	32, 643,
	82, 643,
	-2, 428,
	-1, 1708,
	45, 717,
	-2, 715,
}

const yyPrivate = 57344

const yyLast = 19813

var yyAct = [...]int{

	435, 1797, 1787, 1556, 1724, 1708, 616, 1420, 1640, 379,
	1755, 1120, 1300, 1657, 1116, 1477, 1320, 1171, 394, 1474,
	1301, 1092, 1374, 1478, 651, 408, 1375, 609, 790, 1380,
	1129, 75, 3, 750, 1150, 797, 1165, 1119, 1351, 1439,
	1287, 670, 1236, 1484, 477, 1089, 112, 365, 346, 112,
	612, 1490, 998, 1134, 358, 1397, 112, 1005, 932, 1173,
	835, 1071, 951, 606, 818, 73, 1094, 1078, 828, 444,
	1367, 795, 453, 817, 975, 800, 29, 1031, 823, 613,
	438, 381, 1054, 832, 358, 605, 834, 358, 112, 358,
	1100, 358, 1161, 807, 71, 370, 377, 961, 946, 70,
	112, 632, 633, 825, 112, 366, 642, 763, 369, 660,
	112, 1705, 8, 1535, 764, 7, 6, 1627, 1659, 97,
	101, 1790, 1752, 99, 110, 474, 1785, 1732, 1174, 72,
	1778, 1557, 1751, 420, 361, 426, 427, 424, 425, 1731,
	423, 422, 421, 1456, 1586, 409, 30, 1204, 439, 1176,
	428, 429, 1508, 629, 459, 463, 76, 1509, 1510, 1110,
	31, 1203, 368, 64, 35, 36, 611, 471, 1111, 1112,
	1395, 683, 92, 93, 1394, 836, 30, 837, 631, 676,
	677, 367, 639, 108, 104, 105, 106, 1359, 646, 78,
	79, 80, 81, 82, 83, 1337, 1144, 1422, 1336, 1620,
	1734, 1338, 31, 32, 33, 64, 35, 36, 114, 115,
	116, 1151, 1577, 1575, 114, 115, 116, 440, 356, 1391,
	1175, 960, 68, 360, 354, 1202, 1386, 37, 58, 59,
	1547, 61, 1635, 102, 63, 678, 1387, 62, 1548, 679,
	676, 677, 1191, 1189, 682, 1192, 1193, 114, 115, 116,
	911, 962, 963, 964, 921, 671, 672, 681, 673, 100,
	1777, 920, 1424, 918, 1423, 1784, 48, 1725, 1419, 1072,
	1718, 1169, 1169, 641, 1542, 608, 63, 1515, 1199, 1196,
	1197, 96, 1195, 1805, 1699, 712, 711, 721, 722, 714,
	715, 716, 717, 718, 719, 720, 713, 919, 666, 723,
	922, 1169, 1138, 1682, 623, 1008, 1801, 624, 625, 1321,
	1323, 91, 1501, 1425, 619, 1206, 1209, 465, 657, 1416,
	659, 1390, 107, 925, 686, 1418, 1138, 112, 649, 1500,
	1499, 655, 909, 96, 630, 326, 103, 1216, 358, 1117,
	1215, 900, 41, 42, 44, 43, 46, 358, 60, 1255,
	1712, 637, 656, 658, 1602, 1252, 114, 115, 116, 1534,
	1151, 358, 358, 735, 736, 1507, 1201, 1292, 1407, 1177,
	684, 47, 67, 66, 1265, 1244, 56, 57, 45, 1106,
	811, 748, 1730, 647, 1393, 114, 115, 116, 1200, 713,
	723, 1735, 723, 1333, 692, 661, 982, 1322, 952, 701,
	702, 700, 1050, 49, 50, 648, 51, 52, 53, 54,
	980, 981, 979, 700, 653, 697, 698, 703, 947, 665,
	702, 700, 1403, 1404, 1405, 634, 703, 635, 1137, 703,
	636, 667, 86, 1205, 1683, 1681, 1691, 703, 1182, 1526,
	1381, 1036, 662, 663, 1799, 1488, 1190, 1800, 1207, 1798,
	1458, 1417, 1137, 1415, 1032, 65, 654, 912, 733, 674,
	838, 696, 358, 906, 1032, 112, 1262, 112, 112, 1357,
	358, 87, 788, 1141, 787, 695, 358, 1700, 693, 694,
	1142, 735, 736, 669, 1806, 786, 751, 735, 736, 970,
	972, 973, 669, 1720, 1406, 804, 971, 65, 1779, 1411,
	1408, 1399, 1409, 1402, 1440, 1398, 1626, 953, 30, 1400,
	1401, 474, 816, 1055, 1056, 1625, 640, 447, 1540, 1052,
	652, 732, 734, 1410, 1771, 1780, 801, 948, 1371, 766,
	768, 770, 772, 774, 776, 777, 767, 769, 1370, 773,
	775, 63, 778, 815, 1464, 1442, 827, 1229, 1230, 1231,
	1807, 1772, 747, 978, 1180, 1782, 752, 753, 754, 755,
	756, 757, 758, 759, 1781, 762, 765, 765, 765, 771,
	765, 765, 771, 765, 779, 780, 781, 782, 783, 784,
	785, 1051, 1773, 1763, 618, 1745, 30, 1550, 701, 702,
	700, 1653, 1465, 1444, 1623, 1448, 1590, 1443, 789, 1441,
	701, 702, 700, 1541, 1446, 112, 703, 1466, 1250, 896,
	1382, 1368, 822, 1445, 945, 937, 1249, 913, 703, 905,
	628, 907, 112, 643, 644, 645, 1447, 1449, 114, 115,
	116, 112, 358, 358, 358, 701, 702, 700, 112, 833,
	1288, 112, 904, 1783, 112, 930, 931, 902, 112, 448,
	358, 72, 464, 703, 1688, 358, 358, 358, 112, 358,
	358, 711, 721, 722, 714, 715, 716, 717, 718, 719,
	720, 713, 358, 358, 723, 936, 1251, 620, 621, 1372,
	1747, 448, 1687, 846, 714, 715, 716, 717, 718, 719,
	720, 713, 934, 1637, 723, 904, 1728, 701, 702, 700,
	908, 1384, 716, 717, 718, 719, 720, 713, 1075, 914,
	723, 74, 701, 702, 700, 703, 923, 904, 448, 827,
	1460, 1139, 929, 469, 999, 114, 115, 116, 448, 1000,
	703, 1487, 976, 1001, 466, 467, 942, 63, 955, 114,
	115, 116, 31, 1340, 926, 904, 1713, 358, 904, 1679,
	899, 1617, 1597, 701, 702, 700, 799, 1604, 448, 1600,
	448, 30, 1532, 1531, 1528, 1529, 1020, 1023, 1528, 1527,
	1064, 703, 1033, 954, 1063, 448, 1063, 669, 669, 669,
	358, 358, 1075, 448, 699, 448, 1102, 1015, 977, 1664,
	1009, 957, 1074, 1011, 699, 669, 1690, 1102, 1530, 358,
	669, 669, 669, 31, 669, 669, 112, 1010, 1288, 358,
	1075, 751, 1341, 112, 1109, 112, 63, 669, 669, 904,
	903, 899, 898, 112, 112, 112, 845, 844, 1295, 1475,
	1268, 358, 1002, 1003, 358, 1327, 1267, 441, 1487, 1063,
	1041, 1042, 1075, 1101, 1012, 358, 358, 1103, 1063, 1101,
	1296, 1053, 924, 1009, 1090, 1105, 1011, 1045, 1103, 397,
	396, 399, 400, 401, 402, 830, 1101, 1057, 398, 403,
	1069, 1764, 474, 1136, 1065, 474, 1487, 63, 31, 1642,
	1609, 901, 1166, 1549, 1066, 1519, 1121, 897, 1345, 1162,
	1156, 1070, 1377, 1073, 1152, 1153, 1154, 1155, 90, 88,
	358, 627, 1067, 1098, 1792, 358, 358, 1376, 358, 1628,
	1187, 63, 1491, 1492, 1107, 1208, 1421, 1104, 1108, 112,
	112, 112, 112, 112, 1168, 112, 112, 1632, 1099, 112,
	358, 1124, 1167, 1643, 1389, 436, 721, 722, 714, 715,
	716, 717, 718, 719, 720, 713, 1788, 112, 723, 1543,
	1521, 1377, 63, 112, 112, 112, 1629, 1630, 1631, 112,
	358, 1494, 1475, 1080, 1083, 1084, 1085, 1081, 1091, 1082,
	1086, 1633, 1634, 1491, 1492, 958, 1222, 928, 1497, 1178,
	1226, 113, 1312, 1179, 113, 1163, 1164, 1313, 1310, 359,
	1496, 113, 1314, 1311, 1084, 1085, 1309, 1210, 1211, 1212,
	1213, 1214, 1308, 1217, 1218, 976, 1768, 1219, 1080, 1083,
	1084, 1085, 1081, 1750, 1082, 1086, 1467, 1277, 798, 359,
	1766, 1601, 359, 113, 359, 1221, 359, 1286, 1285, 454,
	1740, 1737, 1770, 1225, 1754, 113, 1756, 1227, 1275, 113,
	1762, 1761, 1709, 455, 1707, 113, 1276, 1383, 437, 1376,
	1363, 669, 94, 669, 1232, 1028, 843, 650, 1016, 1017,
	791, 977, 1022, 1025, 1026, 112, 802, 803, 457, 1029,
	456, 1356, 792, 1722, 1274, 669, 112, 112, 112, 112,
	112, 1721, 1662, 1354, 1302, 1246, 1281, 1040, 112, 439,
	1043, 1044, 112, 1245, 1347, 98, 112, 1595, 1638, 1055,
	1056, 112, 112, 1297, 1048, 112, 112, 112, 1261, 1185,
	1290, 1293, 927, 1088, 615, 442, 443, 445, 1339, 1284,
	358, 1775, 1774, 1319, 74, 1280, 1759, 1283, 1741, 1346,
	1594, 1342, 446, 1593, 1352, 1352, 1470, 1288, 1291, 1289,
	680, 1304, 1305, 668, 1307, 1256, 1328, 1794, 1793, 1303,
	1330, 934, 1306, 1794, 1315, 1243, 1253, 812, 440, 805,
	1326, 1121, 1325, 454, 1710, 1362, 1621, 1364, 1365, 1366,
	1334, 1049, 406, 1353, 1331, 1379, 441, 455, 72, 77,
	1329, 1360, 1361, 69, 1, 1348, 1349, 1350, 1344, 345,
	1786, 1013, 1014, 1558, 1145, 1639, 1146, 1147, 1148, 1149,
	451, 452, 457, 1198, 456, 1723, 1373, 1172, 1127, 1118,
	822, 85, 1157, 1158, 1159, 1160, 603, 1298, 1299, 84,
	358, 822, 822, 822, 822, 822, 357, 1369, 664, 1126,
	1046, 1125, 1378, 1680, 1358, 1143, 1619, 1091, 1520, 1324,
	1355, 1719, 1396, 851, 849, 358, 822, 850, 848, 853,
	822, 999, 1412, 852, 847, 338, 476, 959, 355, 607,
	1087, 614, 113, 617, 839, 806, 1414, 1413, 1194, 1533,
	1140, 335, 675, 359, 340, 1438, 1429, 731, 1282, 1335,
	475, 1437, 359, 112, 1427, 468, 1436, 89, 1428, 1481,
	1388, 1451, 622, 358, 1760, 1457, 359, 359, 1738, 358,
	358, 1435, 1736, 1450, 1706, 1302, 1658, 1461, 1476, 1739,
	1011, 1704, 1241, 1242, 1769, 1753, 1047, 794, 1592, 1469,
	1260, 760, 1479, 1030, 1010, 358, 821, 380, 112, 969,
	395, 392, 393, 1259, 1436, 1058, 1294, 705, 378, 372,
	820, 1486, 358, 813, 358, 1079, 358, 1077, 1076, 1352,
	1352, 1352, 826, 1493, 1489, 1512, 819, 1062, 1495, 1392,
	910, 1468, 1188, 1473, 1525, 669, 1546, 1503, 1502, 1505,
	626, 1506, 450, 1504, 1136, 1523, 1524, 1514, 95, 1511,
	1027, 1698, 1585, 1121, 449, 1121, 1589, 1516, 1517, 1518,
	358, 112, 55, 34, 362, 1385, 1513, 359, 1537, 1181,
	113, 1536, 113, 113, 688, 359, 1538, 1539, 458, 28,
	23, 359, 22, 21, 112, 20, 19, 25, 18, 17,
	358, 16, 1559, 358, 358, 358, 112, 712, 711, 721,
	722, 714, 715, 716, 717, 718, 719, 720, 713, 40,
	39, 723, 1480, 1239, 30, 1551, 638, 1240, 38, 27,
	26, 15, 1564, 1565, 14, 13, 12, 11, 1247, 1248,
	1552, 10, 1554, 9, 1254, 5, 4, 1257, 1258, 1545,
	691, 24, 749, 822, 2, 1264, 0, 0, 0, 1266,
	0, 1573, 1269, 1270, 1271, 1272, 1273, 0, 0, 0,
	685, 0, 1553, 0, 0, 0, 1596, 1302, 0, 0,
	1591, 0, 0, 0, 1563, 0, 0, 1568, 1606, 0,
	476, 0, 358, 0, 0, 0, 0, 0, 0, 476,
	358, 0, 1605, 1342, 0, 0, 1618, 0, 0, 0,
	0, 1317, 1318, 687, 689, 0, 0, 0, 0, 1615,
	113, 0, 0, 0, 112, 1616, 0, 0, 0, 0,
	0, 0, 0, 1121, 0, 0, 0, 113, 358, 0,
	0, 0, 1622, 0, 1624, 0, 113, 359, 359, 359,
	0, 0, 1646, 113, 0, 0, 113, 0, 0, 113,
	0, 0, 0, 113, 0, 359, 0, 0, 0, 0,
	359, 359, 359, 113, 359, 359, 0, 1644, 0, 1641,
	0, 358, 1584, 358, 0, 358, 1645, 359, 359, 0,
	358, 0, 358, 358, 358, 112, 1671, 1667, 1672, 1674,
	1675, 1663, 1636, 1479, 0, 1656, 0, 1479, 1661, 0,
	0, 1665, 0, 0, 809, 1678, 1676, 1685, 0, 1686,
	1684, 0, 476, 358, 112, 1611, 1612, 1613, 840, 1692,
	0, 0, 0, 0, 0, 1652, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	1711, 0, 359, 1433, 1434, 1677, 0, 0, 0, 0,
	1479, 358, 358, 1717, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 1727, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 359, 359, 0, 1733, 112,
	1302, 0, 1693, 1742, 0, 0, 358, 371, 0, 0,
	0, 0, 1641, 1121, 359, 0, 1749, 0, 0, 0,
	1482, 113, 1758, 1480, 359, 30, 1757, 1480, 113, 0,
	113, 0, 1765, 1767, 0, 0, 0, 0, 113, 113,
	113, 1498, 0, 0, 0, 358, 359, 0, 0, 359,
	0, 1776, 0, 0, 0, 915, 916, 917, 0, 0,
	359, 359, 1570, 1571, 1689, 1572, 0, 0, 1574, 1791,
	1576, 0, 0, 935, 0, 0, 1802, 1744, 939, 940,
	941, 0, 943, 944, 476, 476, 476, 0, 0, 0,
	1480, 374, 0, 0, 0, 949, 950, 0, 0, 0,
	0, 0, 476, 0, 0, 0, 0, 476, 476, 476,
	0, 476, 476, 0, 0, 359, 0, 0, 0, 0,
	359, 359, 0, 359, 476, 476, 0, 0, 0, 0,
	0, 0, 0, 0, 113, 113, 113, 113, 113, 0,
	113, 113, 0, 0, 113, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	0, 1569, 113, 0, 0, 0, 0, 0, 113, 113,
	113, 0, 1578, 1579, 113, 359, 0, 712, 711, 721,
	722, 714, 715, 716, 717, 718, 719, 720, 713, 0,
	0, 723, 0, 0, 0, 448, 0, 0, 0, 1004,
	0, 476, 1598, 1599, 0, 0, 1603, 0, 0, 0,
	1789, 0, 0, 0, 0, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 1038, 1039, 1237, 712, 711, 721, 722, 714,
	715, 716, 717, 718, 719, 720, 713, 0, 0, 723,
	0, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 809, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 114, 115, 116, 0, 0, 0, 0,
	113, 0, 0, 476, 0, 0, 476, 0, 0, 0,
	0, 113, 113, 113, 113, 113, 0, 476, 607, 0,
	0, 0, 0, 113, 0, 0, 0, 113, 0, 0,
	0, 113, 0, 0, 0, 0, 113, 113, 0, 704,
	113, 113, 113, 0, 0, 0, 0, 327, 0, 1184,
	0, 1186, 0, 1673, 0, 359, 330, 0, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 614, 1220, 0, 371, 0, 1183, 476, 1588,
	476, 0, 0, 0, 761, 0, 0, 0, 0, 1694,
	1695, 1696, 1697, 0, 1701, 0, 1702, 1703, 337, 0,
	0, 0, 476, 0, 344, 0, 0, 0, 0, 0,
	0, 793, 796, 0, 1714, 0, 1715, 1716, 0, 0,
	712, 711, 721, 722, 714, 715, 716, 717, 718, 719,
	720, 713, 1228, 0, 723, 0, 0, 0, 0, 0,
	1729, 0, 0, 0, 0, 328, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 0,
	0, 0, 341, 331, 0, 342, 343, 350, 0, 0,
	359, 334, 336, 347, 332, 333, 352, 351, 868, 329,
	349, 348, 0, 0, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 0, 0, 0, 0, 407, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 359, 0,
	0, 0, 0, 0, 359, 359, 0, 1803, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 1034, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 353, 0, 0,
	359, 0, 0, 113, 111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 359,
	0, 359, 0, 0, 0, 0, 0, 462, 462, 0,
	0, 0, 476, 0, 856, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 111, 938,
	1583, 0, 0, 0, 0, 359, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 869, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 956, 0, 0, 113,
	0, 0, 0, 0, 0, 359, 0, 0, 359, 359,
	359, 113, 0, 1426, 0, 965, 966, 967, 968, 0,
	0, 0, 882, 885, 886, 887, 888, 889, 890, 1582,
	891, 892, 893, 894, 895, 870, 871, 872, 873, 854,
	855, 883, 476, 857, 0, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 874, 875, 876, 877, 878,
	879, 880, 881, 0, 0, 0, 0, 476, 0, 0,
	1018, 1019, 712, 711, 721, 722, 714, 715, 716, 717,
	718, 719, 720, 713, 0, 0, 723, 0, 476, 0,
	0, 0, 0, 0, 0, 0, 0, 359, 0, 0,
	0, 0, 0, 0, 0, 359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 476, 0, 0, 1034, 884,
	0, 1483, 1485, 0, 0, 0, 0, 0, 0, 113,
	0, 712, 711, 721, 722, 714, 715, 716, 717, 718,
	719, 720, 713, 359, 0, 723, 0, 1485, 0, 0,
	0, 0, 0, 0, 1115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 0, 476, 974, 614, 0,
	983, 984, 985, 986, 987, 988, 989, 990, 991, 992,
	993, 994, 995, 996, 997, 111, 359, 0, 359, 0,
	359, 0, 0, 0, 0, 359, 0, 359, 359, 359,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1544, 1170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1037, 359, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 707, 1555, 710, 0, 1560, 1561, 1562, 0, 724,
	725, 726, 727, 728, 729, 730, 0, 708, 709, 706,
	712, 711, 721, 722, 714, 715, 716, 717, 718, 719,
	720, 713, 0, 0, 723, 0, 359, 359, 0, 1581,
	0, 712, 711, 721, 722, 714, 715, 716, 717, 718,
	719, 720, 713, 0, 1580, 723, 0, 0, 359, 0,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 462,
	1034, 359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 111, 0, 111, 829, 0, 0, 0,
	0, 1430, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 617, 0, 0, 0, 0, 0, 1263, 0,
	359, 712, 711, 721, 722, 714, 715, 716, 717, 718,
	719, 720, 713, 0, 0, 723, 0, 1278, 1279, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 712, 711, 721, 722, 714, 715, 716, 717, 718,
	719, 720, 713, 0, 0, 723, 712, 711, 721, 722,
	714, 715, 716, 717, 718, 719, 720, 713, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1666, 0, 1668, 1238, 1669, 0, 0,
	0, 0, 617, 0, 617, 617, 617, 0, 0, 0,
	0, 0, 1233, 1234, 1235, 0, 712, 711, 721, 722,
	714, 715, 716, 717, 718, 719, 720, 713, 0, 0,
	723, 0, 0, 111, 0, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 111,
	0, 0, 111, 0, 0, 0, 933, 0, 0, 0,
	0, 0, 0, 476, 476, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1034, 0, 1743, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1459, 0,
	0, 0, 0, 0, 0, 0, 0, 617, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1471, 0, 462, 933, 0, 0,
	0, 462, 462, 0, 0, 462, 462, 462, 0, 0,
	0, 1035, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	462, 462, 462, 462, 462, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	933, 111, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 111, 1096, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1431,
	1432, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1452, 1453, 0, 1454, 1455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1462,
	1463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1587, 111, 111, 111,
	111, 111, 0, 111, 111, 0, 0, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 371, 0, 0, 0,
	0, 0, 0, 0, 1607, 111, 0, 1608, 0, 0,
	1610, 1223, 1224, 111, 0, 0, 0, 111, 1522, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 462, 462, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 462, 0, 0, 0,
	0, 0, 1566, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1660,
	371, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 111, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1035, 111, 111, 111, 111, 111, 0,
	0, 0, 0, 0, 0, 0, 1316, 0, 0, 0,
	111, 0, 0, 0, 1096, 0, 0, 0, 0, 111,
	111, 0, 0, 111, 1332, 933, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1647, 1648, 1649, 1650, 1651, 0, 0, 0,
	1654, 1655, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 462, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 933, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 111, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1035, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 111,
	0, 1795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1096, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1035,
	0, 0, 0, 0, 588, 576, 0, 111, 532, 591,
	505, 522, 600, 523, 526, 563, 489, 545, 223, 520,
	0, 509, 484, 516, 485, 507, 534, 153, 538, 504,
	578, 548, 590, 188, 0, 510, 235, 565, 267, 144,
	196, 194, 289, 158, 154, 152, 143, 175, 201, 234,
	285, 228, 597, 191, 554, 0, 276, 210, 0, 0,
	0, 536, 580, 543, 573, 531, 564, 494, 553, 592,
	521, 561, 593, 179, 142, 121, 220, 277, 160, 0,
	0, 0, 114, 115, 116, 0, 1122, 1123, 0, 0,
	0, 0, 0, 138, 0, 558, 587, 518, 560, 562,
	602, 483, 555, 0, 487, 490, 599, 583, 513, 514,
	1343, 0, 0, 0, 0, 0, 0, 535, 544, 570,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 511,
	0, 552, 0, 0, 0, 491, 488, 0, 0, 0,
	0, 533, 0, 0, 0, 493, 0, 512, 571, 0,
	481, 165, 575, 582, 530, 312, 586, 528, 527, 589,
	246, 0, 281, 169, 187, 134, 184, 118, 129, 0,
	167, 219, 254, 258, 579, 508, 517, 145, 515, 256,
	232, 302, 551, 236, 255, 192, 291, 247, 301, 313,
	314, 286, 310, 322, 130, 148, 226, 282, 305, 273,
	0, 209, 288, 183, 197, 272, 122, 284, 299, 139,
	266, 0, 0, 0, 124, 297, 280, 207, 180, 181,
	123, 0, 252, 151, 163, 147, 222, 294, 295, 146,
	324, 131, 309, 126, 132, 308, 215, 290, 298, 208,
	200, 125, 296, 206, 199, 186, 157, 171, 244, 195,
	245, 172, 212, 211, 213, 0, 486, 0, 278, 306,
	325, 136, 503, 287, 318, 321, 0, 248, 137, 164,
	156, 243, 162, 189, 317, 319, 320, 214, 133, 174,
	274, 185, 193, 251, 323, 231, 257, 140, 304, 275,
	498, 502, 496, 497, 546, 547, 499, 594, 595, 596,
	572, 492, 0, 500, 501, 0, 577, 584, 585, 550,
	117, 127, 190, 598, 249, 161, 307, 482, 495, 150,
	506, 0, 0, 519, 524, 525, 537, 539, 540, 541,
	542, 549, 556, 557, 559, 566, 567, 568, 569, 574,
	581, 601, 119, 120, 128, 135, 141, 149, 155, 159,
	166, 170, 173, 176, 177, 178, 182, 198, 202, 203,
	204, 205, 216, 217, 218, 221, 224, 225, 227, 229,
	230, 233, 237, 238, 239, 240, 241, 242, 250, 253,
	259, 260, 261, 262, 263, 264, 265, 268, 269, 270,
	271, 279, 283, 292, 293, 303, 311, 315, 168, 300,
	316, 588, 576, 0, 0, 532, 591, 505, 522, 600,
	523, 526, 563, 489, 545, 223, 520, 0, 509, 484,
	516, 485, 507, 534, 153, 538, 504, 578, 548, 590,
	188, 0, 510, 235, 565, 267, 144, 196, 194, 289,
	158, 154, 152, 143, 175, 201, 234, 285, 228, 597,
	191, 554, 0, 276, 210, 0, 0, 0, 536, 580,
	543, 573, 531, 564, 494, 553, 592, 521, 561, 593,
	179, 142, 121, 220, 277, 160, 0, 0, 0, 114,
	115, 116, 0, 1122, 1123, 0, 0, 0, 0, 0,
	138, 0, 558, 587, 518, 560, 562, 602, 483, 555,
	0, 487, 490, 599, 583, 513, 514, 0, 0, 0,
	0, 0, 0, 0, 535, 544, 570, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 511, 0, 552, 0,
	0, 0, 491, 488, 0, 0, 0, 0, 533, 0,
	0, 0, 493, 0, 512, 571, 0, 481, 165, 575,
	582, 530, 312, 586, 528, 527, 589, 246, 0, 281,
	169, 187, 134, 184, 118, 129, 0, 167, 219, 254,
	258, 579, 508, 517, 145, 515, 256, 232, 302, 551,
	236, 255, 192, 291, 247, 301, 313, 314, 286, 310,
	322, 130, 148, 226, 282, 305, 273, 0, 209, 288,
	183, 197, 272, 122, 284, 299, 139, 266, 0, 0,
	0, 124, 297, 280, 207, 180, 181, 123, 0, 252,
	151, 163, 147, 222, 294, 295, 146, 324, 131, 309,
	126, 132, 308, 215, 290, 298, 208, 200, 125, 296,
	206, 199, 186, 157, 171, 244, 195, 245, 172, 212,
	211, 213, 0, 486, 0, 278, 306, 325, 136, 503,
	287, 318, 321, 0, 248, 137, 164, 156, 243, 162,
	189, 317, 319, 320, 214, 133, 174, 274, 185, 193,
	251, 323, 231, 257, 140, 304, 275, 498, 502, 496,
	497, 546, 547, 499, 594, 595, 596, 572, 492, 0,
	500, 501, 0, 577, 584, 585, 550, 117, 127, 190,
	598, 249, 161, 307, 482, 495, 150, 506, 0, 0,
	519, 524, 525, 537, 539, 540, 541, 542, 549, 556,
	557, 559, 566, 567, 568, 569, 574, 581, 601, 119,
	120, 128, 135, 141, 149, 155, 159, 166, 170, 173,
	176, 177, 178, 182, 198, 202, 203, 204, 205, 216,
	217, 218, 221, 224, 225, 227, 229, 230, 233, 237,
	238, 239, 240, 241, 242, 250, 253, 259, 260, 261,
	262, 263, 264, 265, 268, 269, 270, 271, 279, 283,
	292, 293, 303, 311, 315, 168, 300, 316, 588, 576,
	0, 0, 532, 591, 505, 522, 600, 523, 526, 563,
	489, 545, 223, 520, 0, 509, 484, 516, 485, 507,
	534, 153, 538, 504, 578, 548, 590, 188, 0, 510,
	235, 565, 267, 144, 196, 194, 289, 158, 154, 152,
	143, 175, 201, 234, 285, 228, 597, 191, 554, 0,
	276, 210, 0, 0, 0, 536, 580, 543, 573, 531,
	564, 494, 553, 592, 521, 561, 593, 179, 142, 121,
	220, 277, 160, 0, 0, 0, 114, 115, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 558,
	587, 518, 560, 562, 602, 483, 555, 0, 487, 490,
	599, 583, 513, 514, 0, 0, 0, 0, 0, 0,
	0, 535, 544, 570, 529, 0, 0, 0, 0, 0,
	0, 1472, 0, 511, 0, 552, 0, 0, 0, 491,
	488, 0, 0, 0, 0, 533, 0, 0, 0, 493,
	0, 512, 571, 0, 481, 165, 575, 582, 530, 312,
	586, 528, 527, 589, 246, 0, 281, 169, 187, 134,
	184, 118, 129, 0, 167, 219, 254, 258, 579, 508,
	517, 145, 515, 256, 232, 302, 551, 236, 255, 192,
	291, 247, 301, 313, 314, 286, 310, 322, 130, 148,
	226, 282, 305, 273, 0, 209, 288, 183, 197, 272,
	122, 284, 299, 139, 266, 0, 0, 0, 124, 297,
	280, 207, 180, 181, 123, 0, 252, 151, 163, 147,
	222, 294, 295, 146, 324, 131, 309, 126, 132, 308,
	215, 290, 298, 208, 200, 125, 296, 206, 199, 186,
	157, 171, 244, 195, 245, 172, 212, 211, 213, 0,
	486, 0, 278, 306, 325, 136, 503, 287, 318, 321,
	0, 248, 137, 164, 156, 243, 162, 189, 317, 319,
	320, 214, 133, 174, 274, 185, 193, 251, 323, 231,
	257, 140, 304, 275, 498, 502, 496, 497, 546, 547,
	499, 594, 595, 596, 572, 492, 0, 500, 501, 0,
	577, 584, 585, 550, 117, 127, 190, 598, 249, 161,
	307, 482, 495, 150, 506, 0, 0, 519, 524, 525,
	537, 539, 540, 541, 542, 549, 556, 557, 559, 566,
	567, 568, 569, 574, 581, 601, 119, 120, 128, 135,
	141, 149, 155, 159, 166, 170, 173, 176, 177, 178,
	182, 198, 202, 203, 204, 205, 216, 217, 218, 221,
	224, 225, 227, 229, 230, 233, 237, 238, 239, 240,
	241, 242, 250, 253, 259, 260, 261, 262, 263, 264,
	265, 268, 269, 270, 271, 279, 283, 292, 293, 303,
	311, 315, 168, 300, 316, 588, 576, 0, 0, 532,
	591, 505, 522, 600, 523, 526, 563, 489, 545, 223,
	520, 0, 509, 484, 516, 485, 507, 534, 153, 538,
	504, 578, 548, 590, 188, 0, 510, 235, 565, 267,
	144, 196, 194, 289, 158, 154, 152, 143, 175, 201,
	234, 285, 228, 597, 191, 554, 0, 276, 210, 0,
	0, 0, 536, 580, 543, 573, 531, 564, 494, 553,
	592, 521, 561, 593, 179, 142, 121, 220, 277, 160,
	63, 0, 0, 114, 115, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 558, 587, 518, 560,
	562, 602, 483, 555, 0, 487, 490, 599, 583, 513,
	514, 0, 0, 0, 0, 0, 0, 0, 535, 544,
	570, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	511, 0, 552, 0, 0, 0, 491, 488, 0, 0,
	0, 0, 533, 0, 0, 0, 493, 0, 512, 571,
	0, 481, 165, 575, 582, 530, 312, 586, 528, 527,
	589, 246, 0, 281, 169, 187, 134, 184, 118, 129,
	0, 167, 219, 254, 258, 579, 508, 517, 145, 515,
	256, 232, 302, 551, 236, 255, 192, 291, 247, 301,
	313, 314, 286, 310, 322, 130, 148, 226, 282, 305,
	273, 0, 209, 288, 183, 197, 272, 122, 284, 299,
	139, 266, 0, 0, 0, 124, 297, 280, 207, 180,
	181, 123, 0, 252, 151, 163, 147, 222, 294, 295,
	146, 324, 131, 309, 126, 132, 308, 215, 290, 298,
	208, 200, 125, 296, 206, 199, 186, 157, 171, 244,
	195, 245, 172, 212, 211, 213, 0, 486, 0, 278,
	306, 325, 136, 503, 287, 318, 321, 0, 248, 137,
	164, 156, 243, 162, 189, 317, 319, 320, 214, 133,
	174, 274, 185, 193, 251, 323, 231, 257, 140, 304,
	275, 498, 502, 496, 497, 546, 547, 499, 594, 595,
	596, 572, 492, 0, 500, 501, 0, 577, 584, 585,
	550, 117, 127, 190, 598, 249, 161, 307, 482, 495,
	150, 506, 0, 0, 519, 524, 525, 537, 539, 540,
	541, 542, 549, 556, 557, 559, 566, 567, 568, 569,
	574, 581, 601, 119, 120, 128, 135, 141, 149, 155,
	159, 166, 170, 173, 176, 177, 178, 182, 198, 202,
	203, 204, 205, 216, 217, 218, 221, 224, 225, 227,
	229, 230, 233, 237, 238, 239, 240, 241, 242, 250,
	253, 259, 260, 261, 262, 263, 264, 265, 268, 269,
	270, 271, 279, 283, 292, 293, 303, 311, 315, 168,
	300, 316, 588, 576, 0, 0, 532, 591, 505, 522,
	600, 523, 526, 563, 489, 545, 223, 520, 0, 509,
	484, 516, 485, 507, 534, 153, 538, 504, 578, 548,
	590, 188, 0, 510, 235, 565, 267, 144, 196, 194,
	289, 158, 154, 152, 143, 175, 201, 234, 285, 228,
	597, 191, 554, 0, 276, 210, 0, 0, 0, 536,
	580, 543, 573, 531, 564, 494, 553, 592, 521, 561,
	593, 179, 142, 121, 220, 277, 160, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 558, 587, 518, 560, 562, 602, 483,
	555, 0, 487, 490, 599, 583, 513, 514, 0, 0,
	0, 0, 0, 0, 0, 535, 544, 570, 529, 0,
	0, 0, 0, 0, 0, 1333, 0, 511, 0, 552,
	0, 0, 0, 491, 488, 0, 0, 0, 0, 533,
	0, 0, 0, 493, 0, 512, 571, 0, 481, 165,
	575, 582, 530, 312, 586, 528, 527, 589, 246, 0,
	281, 169, 187, 134, 184, 118, 129, 0, 167, 219,
	254, 258, 579, 508, 517, 145, 515, 256, 232, 302,
	551, 236, 255, 192, 291, 247, 301, 313, 314, 286,
	310, 322, 130, 148, 226, 282, 305, 273, 0, 209,
	288, 183, 197, 272, 122, 284, 299, 139, 266, 0,
	0, 0, 124, 297, 280, 207, 180, 181, 123, 0,
	252, 151, 163, 147, 222, 294, 295, 146, 324, 131,
	309, 126, 132, 308, 215, 290, 298, 208, 200, 125,
	296, 206, 199, 186, 157, 171, 244, 195, 245, 172,
	212, 211, 213, 0, 486, 0, 278, 306, 325, 136,
	503, 287, 318, 321, 0, 248, 137, 164, 156, 243,
	162, 189, 317, 319, 320, 214, 133, 174, 274, 185,
	193, 251, 323, 231, 257, 140, 304, 275, 498, 502,
	496, 497, 546, 547, 499, 594, 595, 596, 572, 492,
	0, 500, 501, 0, 577, 584, 585, 550, 117, 127,
	190, 598, 249, 161, 307, 482, 495, 150, 506, 0,
	0, 519, 524, 525, 537, 539, 540, 541, 542, 549,
	556, 557, 559, 566, 567, 568, 569, 574, 581, 601,
	119, 120, 128, 135, 141, 149, 155, 159, 166, 170,
	173, 176, 177, 178, 182, 198, 202, 203, 204, 205,
	216, 217, 218, 221, 224, 225, 227, 229, 230, 233,
	237, 238, 239, 240, 241, 242, 250, 253, 259, 260,
	261, 262, 263, 264, 265, 268, 269, 270, 271, 279,
	283, 292, 293, 303, 311, 315, 168, 300, 316, 588,
	576, 0, 0, 532, 591, 505, 522, 600, 523, 526,
	563, 489, 545, 223, 520, 0, 509, 484, 516, 485,
	507, 534, 153, 538, 504, 578, 548, 590, 188, 0,
	510, 235, 565, 267, 144, 196, 194, 289, 158, 154,
	152, 143, 175, 201, 234, 285, 228, 597, 191, 554,
	0, 276, 210, 0, 0, 0, 536, 580, 543, 573,
	531, 564, 494, 553, 592, 521, 561, 593, 179, 142,
	121, 220, 277, 160, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	558, 587, 518, 560, 562, 602, 483, 555, 0, 487,
	490, 599, 583, 513, 514, 0, 0, 0, 0, 0,
	0, 0, 535, 544, 570, 529, 0, 0, 0, 0,
	0, 0, 1068, 0, 511, 0, 552, 0, 0, 0,
	491, 488, 0, 0, 0, 0, 533, 0, 0, 0,
	493, 0, 512, 571, 0, 481, 165, 575, 582, 530,
	312, 586, 528, 527, 589, 246, 0, 281, 169, 187,
	134, 184, 118, 129, 0, 167, 219, 254, 258, 579,
	508, 517, 145, 515, 256, 232, 302, 551, 236, 255,
	192, 291, 247, 301, 313, 314, 286, 310, 322, 130,
	148, 226, 282, 305, 273, 0, 209, 288, 183, 197,
	272, 122, 284, 299, 139, 266, 0, 0, 0, 124,
	297, 280, 207, 180, 181, 123, 0, 252, 151, 163,
	147, 222, 294, 295, 146, 324, 131, 309, 126, 132,
	308, 215, 290, 298, 208, 200, 125, 296, 206, 199,
	186, 157, 171, 244, 195, 245, 172, 212, 211, 213,
	0, 486, 0, 278, 306, 325, 136, 503, 287, 318,
	321, 0, 248, 137, 164, 156, 243, 162, 189, 317,
	319, 320, 214, 133, 174, 274, 185, 193, 251, 323,
	231, 257, 140, 304, 275, 498, 502, 496, 497, 546,
	547, 499, 594, 595, 596, 572, 492, 0, 500, 501,
	0, 577, 584, 585, 550, 117, 127, 190, 598, 249,
	161, 307, 482, 495, 150, 506, 0, 0, 519, 524,
	525, 537, 539, 540, 541, 542, 549, 556, 557, 559,
	566, 567, 568, 569, 574, 581, 601, 119, 120, 128,
	135, 141, 149, 155, 159, 166, 170, 173, 176, 177,
	178, 182, 198, 202, 203, 204, 205, 216, 217, 218,
	221, 224, 225, 227, 229, 230, 233, 237, 238, 239,
	240, 241, 242, 250, 253, 259, 260, 261, 262, 263,
	264, 265, 268, 269, 270, 271, 279, 283, 292, 293,
	303, 311, 315, 168, 300, 316, 588, 576, 0, 0,
	532, 591, 505, 522, 600, 523, 526, 563, 489, 545,
	223, 520, 0, 509, 484, 516, 485, 507, 534, 153,
	538, 504, 578, 548, 590, 188, 0, 510, 235, 565,
	267, 144, 196, 194, 289, 158, 154, 152, 143, 175,
	201, 234, 285, 228, 597, 191, 554, 0, 276, 210,
	0, 0, 0, 536, 580, 543, 573, 531, 564, 494,
	553, 592, 521, 561, 593, 179, 142, 121, 220, 277,
	160, 0, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 558, 587, 518,
	560, 562, 602, 483, 555, 0, 487, 490, 599, 583,
	513, 514, 0, 0, 0, 0, 0, 0, 0, 535,
	544, 570, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 511, 0, 552, 0, 0, 0, 491, 488, 0,
	0, 0, 0, 533, 0, 0, 0, 493, 0, 512,
	571, 0, 481, 165, 575, 582, 530, 312, 586, 528,
	527, 589, 246, 0, 281, 169, 187, 134, 184, 118,
	129, 0, 167, 219, 254, 258, 579, 508, 517, 145,
	515, 256, 232, 302, 551, 236, 255, 192, 291, 247,
	301, 313, 314, 286, 310, 322, 130, 148, 226, 282,
	305, 273, 0, 209, 288, 183, 197, 272, 122, 284,
	299, 139, 266, 0, 0, 0, 124, 297, 280, 207,
	180, 181, 123, 0, 252, 151, 163, 147, 222, 294,
	295, 146, 324, 131, 309, 126, 132, 308, 215, 290,
	298, 208, 200, 125, 296, 206, 199, 186, 157, 171,
	244, 195, 245, 172, 212, 211, 213, 0, 486, 0,
	278, 306, 325, 136, 503, 287, 318, 321, 0, 248,
	137, 164, 156, 243, 162, 189, 317, 319, 320, 214,
	133, 174, 274, 185, 193, 251, 323, 231, 257, 140,
	304, 275, 498, 502, 496, 497, 546, 547, 499, 594,
	595, 596, 572, 492, 0, 500, 501, 0, 577, 584,
	585, 550, 117, 127, 190, 598, 249, 161, 307, 482,
	495, 150, 506, 0, 0, 519, 524, 525, 537, 539,
	540, 541, 542, 549, 556, 557, 559, 566, 567, 568,
	569, 574, 581, 601, 119, 120, 128, 135, 141, 149,
	155, 159, 166, 170, 173, 176, 177, 178, 182, 198,
	202, 203, 204, 205, 216, 217, 218, 221, 224, 225,
	227, 229, 230, 233, 237, 238, 239, 240, 241, 242,
	250, 253, 259, 260, 261, 262, 263, 264, 265, 268,
	269, 270, 271, 279, 283, 292, 293, 303, 311, 315,
	168, 300, 316, 588, 576, 0, 0, 532, 591, 505,
	522, 600, 523, 526, 563, 489, 545, 223, 520, 0,
	509, 484, 516, 485, 507, 534, 153, 538, 504, 578,
	548, 590, 188, 0, 510, 235, 565, 267, 144, 196,
	194, 289, 158, 154, 152, 143, 175, 201, 234, 285,
	228, 597, 191, 554, 0, 276, 210, 0, 0, 0,
	536, 580, 543, 573, 531, 564, 494, 553, 592, 521,
	561, 593, 179, 142, 121, 220, 277, 160, 0, 0,
	0, 114, 115, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 558, 587, 518, 560, 562, 602,
	483, 555, 0, 487, 490, 599, 583, 513, 514, 0,
	0, 0, 0, 0, 0, 0, 535, 544, 570, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 0,
	552, 0, 0, 0, 491, 488, 0, 0, 0, 0,
	533, 0, 0, 0, 493, 0, 512, 571, 0, 481,
	165, 575, 582, 530, 312, 586, 528, 527, 589, 246,
	0, 281, 169, 187, 134, 184, 118, 129, 0, 167,
	219, 254, 258, 579, 508, 517, 145, 515, 256, 232,
	302, 551, 236, 255, 192, 291, 247, 301, 313, 314,
	286, 310, 322, 130, 148, 226, 282, 305, 273, 0,
	209, 288, 183, 197, 272, 122, 284, 299, 139, 266,
	0, 0, 0, 124, 297, 280, 207, 180, 181, 123,
	0, 252, 151, 163, 147, 222, 294, 295, 146, 324,
	131, 309, 126, 479, 308, 215, 290, 298, 208, 200,
	125, 296, 206, 199, 186, 157, 171, 244, 195, 245,
	172, 212, 211, 213, 0, 486, 0, 278, 306, 325,
	136, 503, 287, 318, 321, 0, 248, 137, 164, 156,
	243, 162, 189, 317, 319, 320, 480, 478, 473, 472,
	185, 193, 251, 323, 231, 257, 140, 304, 275, 498,
	502, 496, 497, 546, 547, 499, 594, 595, 596, 572,
	492, 0, 500, 501, 0, 577, 584, 585, 550, 117,
	127, 190, 598, 249, 161, 307, 482, 495, 150, 506,
	0, 0, 519, 524, 525, 537, 539, 540, 541, 542,
	549, 556, 557, 559, 566, 567, 568, 569, 574, 581,
	601, 119, 120, 128, 135, 141, 149, 155, 159, 166,
	170, 173, 176, 177, 178, 182, 198, 202, 203, 204,
	205, 216, 217, 218, 221, 224, 225, 227, 229, 230,
	233, 237, 238, 239, 240, 241, 242, 250, 253, 259,
	260, 261, 262, 263, 264, 265, 268, 269, 270, 271,
	279, 283, 292, 293, 303, 311, 315, 168, 300, 316,
	588, 576, 0, 0, 532, 591, 505, 522, 600, 523,
	526, 563, 489, 545, 223, 520, 0, 509, 484, 516,
	485, 507, 534, 153, 538, 504, 578, 548, 590, 188,
	0, 510, 235, 565, 267, 144, 196, 194, 289, 158,
	154, 152, 143, 175, 201, 234, 285, 228, 597, 191,
	554, 0, 276, 210, 0, 0, 0, 536, 580, 543,
	573, 531, 564, 494, 553, 592, 521, 561, 593, 179,
	142, 121, 220, 277, 160, 0, 0, 0, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 558, 587, 518, 560, 562, 602, 483, 555, 0,
	487, 490, 599, 583, 513, 514, 0, 0, 0, 0,
	0, 0, 0, 535, 544, 570, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 0, 552, 0, 0,
	0, 491, 488, 0, 0, 0, 0, 533, 0, 0,
	0, 493, 0, 512, 571, 0, 481, 165, 575, 582,
	530, 312, 586, 528, 527, 589, 246, 0, 281, 169,
	187, 134, 184, 118, 129, 0, 167, 219, 254, 258,
	579, 508, 517, 145, 515, 256, 232, 302, 551, 236,
	255, 192, 291, 247, 301, 313, 314, 286, 310, 322,
	130, 148, 226, 282, 305, 273, 0, 209, 288, 183,
	197, 272, 122, 284, 831, 139, 266, 0, 0, 0,
	124, 297, 280, 207, 180, 181, 123, 0, 252, 151,
	163, 147, 222, 294, 295, 146, 324, 131, 309, 126,
	479, 308, 215, 290, 298, 208, 200, 125, 296, 206,
	199, 186, 157, 171, 244, 195, 245, 172, 212, 211,
	213, 0, 486, 0, 278, 306, 325, 136, 503, 287,
	318, 321, 0, 248, 137, 164, 156, 243, 162, 189,
	317, 319, 320, 480, 478, 473, 472, 185, 193, 251,
	323, 231, 257, 140, 304, 275, 498, 502, 496, 497,
	546, 547, 499, 594, 595, 596, 572, 492, 0, 500,
	501, 0, 577, 584, 585, 550, 117, 127, 190, 598,
	249, 161, 307, 482, 495, 150, 506, 0, 0, 519,
	524, 525, 537, 539, 540, 541, 542, 549, 556, 557,
	559, 566, 567, 568, 569, 574, 581, 601, 119, 120,
	128, 135, 141, 149, 155, 159, 166, 170, 173, 176,
	177, 178, 182, 198, 202, 203, 204, 205, 216, 217,
	218, 221, 224, 225, 227, 229, 230, 233, 237, 238,
	239, 240, 241, 242, 250, 253, 259, 260, 261, 262,
	263, 264, 265, 268, 269, 270, 271, 279, 283, 292,
	293, 303, 311, 315, 168, 300, 316, 588, 576, 0,
	0, 532, 591, 505, 522, 600, 523, 526, 563, 489,
	545, 223, 520, 0, 509, 484, 516, 485, 507, 534,
	153, 538, 504, 578, 548, 590, 188, 0, 510, 235,
	565, 267, 144, 196, 194, 289, 158, 154, 152, 143,
	175, 201, 234, 285, 228, 597, 191, 554, 0, 276,
	210, 0, 0, 0, 536, 580, 543, 573, 531, 564,
	494, 553, 592, 521, 561, 593, 179, 142, 121, 220,
	277, 160, 0, 0, 0, 114, 115, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 558, 587,
	518, 560, 562, 602, 483, 555, 0, 487, 490, 599,
	583, 513, 514, 0, 0, 0, 0, 0, 0, 0,
	535, 544, 570, 529, 0, 0, 0, 0, 0, 0,
	0, 0, 511, 0, 552, 0, 0, 0, 491, 488,
	0, 0, 0, 0, 533, 0, 0, 0, 493, 0,
	512, 571, 0, 481, 165, 575, 582, 530, 312, 586,
	528, 527, 589, 246, 0, 281, 169, 187, 134, 184,
	118, 129, 0, 167, 219, 254, 258, 579, 508, 517,
	145, 515, 256, 232, 302, 551, 236, 255, 192, 291,
	247, 301, 313, 314, 286, 310, 322, 130, 148, 226,
	282, 305, 273, 0, 209, 288, 183, 197, 272, 122,
	284, 470, 139, 266, 0, 0, 0, 124, 297, 280,
	207, 180, 181, 123, 0, 252, 151, 163, 147, 222,
	294, 295, 146, 324, 131, 309, 126, 479, 308, 215,
	290, 298, 208, 200, 125, 296, 206, 199, 186, 157,
	171, 244, 195, 245, 172, 212, 211, 213, 0, 486,
	0, 278, 306, 325, 136, 503, 287, 318, 321, 0,
	248, 137, 164, 156, 243, 162, 189, 317, 319, 320,
	480, 478, 473, 472, 185, 193, 251, 323, 231, 257,
	140, 304, 275, 498, 502, 496, 497, 546, 547, 499,
	594, 595, 596, 572, 492, 0, 500, 501, 0, 577,
	584, 585, 550, 117, 127, 190, 598, 249, 161, 307,
	482, 495, 150, 506, 0, 0, 519, 524, 525, 537,
	539, 540, 541, 542, 549, 556, 557, 559, 566, 567,
	568, 569, 574, 581, 601, 119, 120, 128, 135, 141,
	149, 155, 159, 166, 170, 173, 176, 177, 178, 182,
	198, 202, 203, 204, 205, 216, 217, 218, 221, 224,
	225, 227, 229, 230, 233, 237, 238, 239, 240, 241,
	242, 250, 253, 259, 260, 261, 262, 263, 264, 265,
	268, 269, 270, 271, 279, 283, 292, 293, 303, 311,
	315, 168, 300, 316, 223, 0, 0, 1006, 0, 376,
	0, 0, 0, 153, 0, 375, 0, 0, 0, 188,
	0, 1007, 235, 0, 267, 144, 196, 194, 289, 158,
	154, 152, 143, 175, 201, 234, 285, 228, 419, 191,
	0, 0, 276, 210, 0, 0, 0, 0, 0, 410,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	142, 121, 220, 277, 160, 63, 0, 0, 114, 115,
	116, 397, 396, 399, 400, 401, 402, 0, 0, 138,
	398, 403, 404, 405, 0, 0, 0, 0, 373, 390,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 460, 0, 0, 0, 433, 0, 389,
	0, 0, 382, 383, 385, 384, 386, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 432, 0,
	0, 312, 0, 0, 430, 0, 246, 0, 281, 169,
	187, 134, 184, 118, 129, 0, 167, 219, 254, 258,
	0, 0, 0, 145, 0, 256, 232, 302, 0, 236,
	255, 192, 291, 247, 301, 313, 314, 286, 310, 322,
	130, 148, 226, 282, 305, 273, 0, 209, 288, 183,
	197, 272, 122, 284, 299, 139, 266, 0, 0, 0,
	124, 297, 280, 207, 180, 181, 123, 0, 252, 151,
	163, 147, 222, 294, 295, 146, 324, 131, 309, 126,
	132, 308, 215, 290, 298, 208, 200, 125, 296, 206,
	199, 186, 157, 171, 244, 195, 245, 172, 212, 211,
	213, 0, 0, 0, 278, 306, 325, 136, 0, 287,
	318, 321, 0, 248, 137, 164, 156, 243, 162, 189,
	317, 319, 320, 214, 133, 174, 274, 185, 193, 251,
	323, 231, 257, 140, 304, 275, 420, 431, 426, 427,
	424, 425, 0, 423, 422, 421, 434, 412, 413, 414,
	415, 417, 0, 428, 429, 416, 117, 127, 190, 0,
	249, 161, 307, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 120,
	128, 135, 141, 149, 155, 159, 166, 170, 173, 176,
	177, 178, 182, 198, 202, 203, 204, 205, 216, 217,
	218, 221, 224, 225, 227, 229, 230, 233, 237, 238,
	239, 240, 241, 242, 250, 253, 259, 260, 261, 262,
	263, 264, 265, 268, 269, 270, 271, 279, 283, 292,
	293, 303, 311, 315, 168, 300, 316, 223, 0, 0,
	0, 0, 376, 0, 0, 0, 153, 0, 375, 0,
	0, 0, 188, 0, 0, 235, 0, 267, 144, 196,
	194, 289, 158, 154, 152, 143, 175, 201, 234, 285,
	228, 419, 191, 0, 0, 276, 210, 0, 0, 0,
	0, 0, 410, 411, 0, 0, 0, 0, 0, 0,
	1113, 0, 179, 142, 121, 220, 277, 160, 63, 0,
	0, 114, 115, 116, 397, 396, 399, 400, 401, 402,
	0, 0, 138, 398, 403, 404, 405, 1114, 0, 0,
	0, 373, 390, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 0, 0, 0, 0,
	433, 0, 389, 0, 0, 382, 383, 385, 384, 386,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 432, 0, 0, 312, 0, 0, 430, 0, 246,
	0, 281, 169, 187, 134, 184, 118, 129, 0, 167,
	219, 254, 258, 0, 0, 0, 145, 0, 256, 232,
	302, 0, 236, 255, 192, 291, 247, 301, 313, 314,
	286, 310, 322, 130, 148, 226, 282, 305, 273, 0,
	209, 288, 183, 197, 272, 122, 284, 299, 139, 266,
	0, 0, 0, 124, 297, 280, 207, 180, 181, 123,
	0, 252, 151, 163, 147, 222, 294, 295, 146, 324,
	131, 309, 126, 132, 308, 215, 290, 298, 208, 200,
	125, 296, 206, 199, 186, 157, 171, 244, 195, 245,
	172, 212, 211, 213, 0, 0, 0, 278, 306, 325,
	136, 0, 287, 318, 321, 0, 248, 137, 164, 156,
	243, 162, 189, 317, 319, 320, 214, 133, 174, 274,
	185, 193, 251, 323, 231, 257, 140, 304, 275, 420,
	431, 426, 427, 424, 425, 0, 423, 422, 421, 434,
	412, 413, 414, 415, 417, 0, 428, 429, 416, 117,
	127, 190, 0, 249, 161, 307, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 120, 128, 135, 141, 149, 155, 159, 166,
	170, 173, 176, 177, 178, 182, 198, 202, 203, 204,
	205, 216, 217, 218, 221, 224, 225, 227, 229, 230,
	233, 237, 238, 239, 240, 241, 242, 250, 253, 259,
	260, 261, 262, 263, 264, 265, 268, 269, 270, 271,
	279, 283, 292, 293, 303, 311, 315, 168, 300, 316,
	223, 0, 0, 0, 0, 376, 0, 0, 0, 153,
	0, 375, 0, 0, 0, 188, 0, 0, 235, 0,
	267, 144, 196, 194, 289, 158, 154, 152, 143, 175,
	201, 234, 285, 228, 419, 191, 0, 0, 276, 210,
	0, 0, 0, 0, 0, 410, 411, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 142, 121, 220, 277,
	160, 63, 0, 448, 114, 115, 116, 397, 396, 399,
	400, 401, 402, 0, 0, 138, 398, 403, 404, 405,
	0, 0, 0, 0, 373, 390, 0, 418, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 387, 388, 0,
	0, 0, 0, 433, 0, 389, 0, 0, 382, 383,
	385, 384, 386, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 432, 0, 0, 312, 0, 0,
	430, 0, 246, 0, 281, 169, 187, 134, 184, 118,
	129, 0, 167, 219, 254, 258, 0, 0, 0, 145,
	0, 256, 232, 302, 0, 236, 255, 192, 291, 247,
	301, 313, 314, 286, 310, 322, 130, 148, 226, 282,
	305, 273, 0, 209, 288, 183, 197, 272, 122, 284,
	299, 139, 266, 0, 0, 0, 124, 297, 280, 207,
	180, 181, 123, 0, 252, 151, 163, 147, 222, 294,
	295, 146, 324, 131, 309, 126, 132, 308, 215, 290,
	298, 208, 200, 125, 296, 206, 199, 186, 157, 171,
	244, 195, 245, 172, 212, 211, 213, 0, 0, 0,
	278, 306, 325, 136, 0, 287, 318, 321, 0, 248,
	137, 164, 156, 243, 162, 189, 317, 319, 320, 214,
	133, 174, 274, 185, 193, 251, 323, 231, 257, 140,
	304, 275, 420, 431, 426, 427, 424, 425, 0, 423,
	422, 421, 434, 412, 413, 414, 415, 417, 0, 428,
	429, 416, 117, 127, 190, 0, 249, 161, 307, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 120, 128, 135, 141, 149,
	155, 159, 166, 170, 173, 176, 177, 178, 182, 198,
	202, 203, 204, 205, 216, 217, 218, 221, 224, 225,
	227, 229, 230, 233, 237, 238, 239, 240, 241, 242,
	250, 253, 259, 260, 261, 262, 263, 264, 265, 268,
	269, 270, 271, 279, 283, 292, 293, 303, 311, 315,
	168, 300, 316, 223, 0, 0, 0, 0, 376, 0,
	0, 0, 153, 0, 375, 0, 0, 0, 188, 0,
	0, 235, 0, 267, 144, 196, 194, 289, 158, 154,
	152, 143, 175, 201, 234, 285, 228, 419, 191, 0,
	0, 276, 210, 0, 0, 0, 0, 0, 410, 411,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 142,
	121, 220, 277, 160, 63, 0, 0, 114, 115, 116,
	397, 396, 399, 400, 401, 402, 0, 0, 138, 398,
	403, 404, 405, 0, 0, 0, 0, 373, 390, 0,
	418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	387, 388, 460, 0, 0, 0, 433, 0, 389, 0,
	0, 382, 383, 385, 384, 386, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 432, 0, 0,
	312, 0, 0, 430, 0, 246, 0, 281, 169, 187,
	134, 184, 118, 129, 0, 167, 219, 254, 258, 0,
	0, 0, 145, 0, 256, 232, 302, 0, 236, 255,
	192, 291, 247, 301, 313, 314, 286, 310, 322, 130,
	148, 226, 282, 305, 273, 0, 209, 288, 183, 197,
	272, 122, 284, 299, 139, 266, 0, 0, 0, 124,
	297, 280, 207, 180, 181, 123, 0, 252, 151, 163,
	147, 222, 294, 295, 146, 324, 131, 309, 126, 132,
	308, 215, 290, 298, 208, 200, 125, 296, 206, 199,
	186, 157, 171, 244, 195, 245, 172, 212, 211, 213,
	0, 0, 0, 278, 306, 325, 136, 0, 287, 318,
	321, 0, 248, 137, 164, 156, 243, 162, 189, 317,
	319, 320, 214, 133, 174, 274, 185, 193, 251, 323,
	231, 257, 140, 304, 275, 420, 431, 426, 427, 424,
	425, 0, 423, 422, 421, 434, 412, 413, 414, 415,
	417, 0, 428, 429, 416, 117, 127, 190, 0, 249,
	161, 307, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 120, 128,
	135, 141, 149, 155, 159, 166, 170, 173, 176, 177,
	178, 182, 198, 202, 203, 204, 205, 216, 217, 218,
	221, 224, 225, 227, 229, 230, 233, 237, 238, 239,
	240, 241, 242, 250, 253, 259, 260, 261, 262, 263,
	264, 265, 268, 269, 270, 271, 279, 283, 292, 293,
	303, 311, 315, 168, 300, 316, 223, 0, 0, 0,
	0, 376, 0, 0, 0, 153, 0, 375, 0, 0,
	0, 188, 0, 0, 235, 0, 267, 144, 196, 194,
	289, 158, 154, 152, 143, 175, 201, 234, 285, 228,
	419, 191, 0, 0, 276, 210, 0, 0, 0, 0,
	0, 410, 411, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 142, 121, 220, 277, 160, 63, 0, 0,
	114, 115, 116, 397, 1024, 399, 400, 401, 402, 0,
	0, 138, 398, 403, 404, 405, 0, 0, 0, 0,
	373, 390, 0, 418, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 387, 388, 460, 0, 0, 0, 433,
	0, 389, 0, 0, 382, 383, 385, 384, 386, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	432, 0, 0, 312, 0, 0, 430, 0, 246, 0,
	281, 169, 187, 134, 184, 118, 129, 0, 167, 219,
	254, 258, 0, 0, 0, 145, 0, 256, 232, 302,
	0, 236, 255, 192, 291, 247, 301, 313, 314, 286,
	310, 322, 130, 148, 226, 282, 305, 273, 0, 209,
	288, 183, 197, 272, 122, 284, 299, 139, 266, 0,
	0, 0, 124, 297, 280, 207, 180, 181, 123, 0,
	252, 151, 163, 147, 222, 294, 295, 146, 324, 131,
	309, 126, 132, 308, 215, 290, 298, 208, 200, 125,
	296, 206, 199, 186, 157, 171, 244, 195, 245, 172,
	212, 211, 213, 0, 0, 0, 278, 306, 325, 136,
	0, 287, 318, 321, 0, 248, 137, 164, 156, 243,
	162, 189, 317, 319, 320, 214, 133, 174, 274, 185,
	193, 251, 323, 231, 257, 140, 304, 275, 420, 431,
	426, 427, 424, 425, 0, 423, 422, 421, 434, 412,
	413, 414, 415, 417, 0, 428, 429, 416, 117, 127,
	190, 0, 249, 161, 307, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 120, 128, 135, 141, 149, 155, 159, 166, 170,
	173, 176, 177, 178, 182, 198, 202, 203, 204, 205,
	216, 217, 218, 221, 224, 225, 227, 229, 230, 233,
	237, 238, 239, 240, 241, 242, 250, 253, 259, 260,
	261, 262, 263, 264, 265, 268, 269, 270, 271, 279,
	283, 292, 293, 303, 311, 315, 168, 300, 316, 223,
	0, 0, 0, 0, 376, 0, 0, 0, 153, 0,
	375, 0, 0, 0, 188, 0, 0, 235, 0, 267,
	144, 196, 194, 289, 158, 154, 152, 143, 175, 201,
	234, 285, 228, 419, 191, 0, 0, 276, 210, 0,
	0, 0, 0, 0, 410, 411, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 142, 121, 220, 277, 160,
	63, 0, 0, 114, 115, 116, 397, 1021, 399, 400,
	401, 402, 0, 0, 138, 398, 403, 404, 405, 0,
	0, 0, 0, 373, 390, 0, 418, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 387, 388, 460, 0,
	0, 0, 433, 0, 389, 0, 0, 382, 383, 385,
	384, 386, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 432, 0, 0, 312, 0, 0, 430,
	0, 246, 0, 281, 169, 187, 134, 184, 118, 129,
	0, 167, 219, 254, 258, 0, 0, 0, 145, 0,
	256, 232, 302, 0, 236, 255, 192, 291, 247, 301,
	313, 314, 286, 310, 322, 130, 148, 226, 282, 305,
	273, 0, 209, 288, 183, 197, 272, 122, 284, 299,
	139, 266, 0, 0, 0, 124, 297, 280, 207, 180,
	181, 123, 0, 252, 151, 163, 147, 222, 294, 295,
	146, 324, 131, 309, 126, 132, 308, 215, 290, 298,
	208, 200, 125, 296, 206, 199, 186, 157, 171, 244,
	195, 245, 172, 212, 211, 213, 0, 0, 0, 278,
	306, 325, 136, 0, 287, 318, 321, 0, 248, 137,
	164, 156, 243, 162, 189, 317, 319, 320, 214, 133,
	174, 274, 185, 193, 251, 323, 231, 257, 140, 304,
	275, 420, 431, 426, 427, 424, 425, 0, 423, 422,
	421, 434, 412, 413, 414, 415, 417, 0, 428, 429,
	416, 117, 127, 190, 0, 249, 161, 307, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 120, 128, 135, 141, 149, 155,
	159, 166, 170, 173, 176, 177, 178, 182, 198, 202,
	203, 204, 205, 216, 217, 218, 221, 224, 225, 227,
	229, 230, 233, 237, 238, 239, 240, 241, 242, 250,
	253, 259, 260, 261, 262, 263, 264, 265, 268, 269,
	270, 271, 279, 283, 292, 293, 303, 311, 315, 168,
	300, 316, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	376, 0, 0, 0, 153, 0, 375, 0, 0, 0,
	188, 0, 0, 235, 0, 267, 144, 196, 194, 289,
	158, 154, 152, 143, 175, 201, 234, 285, 228, 419,
	191, 0, 0, 276, 210, 0, 0, 0, 0, 0,
	410, 411, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 142, 121, 220, 277, 160, 63, 0, 0, 114,
	115, 116, 397, 396, 399, 400, 401, 402, 0, 0,
	138, 398, 403, 404, 405, 0, 0, 0, 0, 373,
	390, 0, 418, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 388, 0, 0, 0, 0, 433, 0,
	389, 0, 0, 382, 383, 385, 384, 386, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 432,
	0, 0, 312, 0, 0, 430, 0, 246, 0, 281,
	169, 187, 134, 184, 118, 129, 0, 167, 219, 254,
	258, 0, 0, 0, 145, 0, 256, 232, 302, 0,
	236, 255, 192, 291, 247, 301, 313, 314, 286, 310,
	322, 130, 148, 226, 282, 305, 273, 0, 209, 288,
	183, 197, 272, 122, 284, 299, 139, 266, 0, 0,
	0, 124, 297, 280, 207, 180, 181, 123, 0, 252,
	151, 163, 147, 222, 294, 295, 146, 324, 131, 309,
	126, 132, 308, 215, 290, 298, 208, 200, 125, 296,
	206, 199, 186, 157, 171, 244, 195, 245, 172, 212,
	211, 213, 0, 0, 0, 278, 306, 325, 136, 0,
	287, 318, 321, 0, 248, 137, 164, 156, 243, 162,
	189, 317, 319, 320, 214, 133, 174, 274, 185, 193,
	251, 323, 231, 257, 140, 304, 275, 420, 431, 426,
	427, 424, 425, 0, 423, 422, 421, 434, 412, 413,
	414, 415, 417, 0, 428, 429, 416, 117, 127, 190,
	0, 249, 161, 307, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	120, 128, 135, 141, 149, 155, 159, 166, 170, 173,
	176, 177, 178, 182, 198, 202, 203, 204, 205, 216,
	217, 218, 221, 224, 225, 227, 229, 230, 233, 237,
	238, 239, 240, 241, 242, 250, 253, 259, 260, 261,
	262, 263, 264, 265, 268, 269, 270, 271, 279, 283,
	292, 293, 303, 311, 315, 168, 300, 316, 223, 0,
	0, 0, 0, 376, 0, 0, 0, 153, 0, 375,
	0, 0, 0, 188, 0, 0, 235, 0, 267, 144,
	196, 194, 289, 158, 154, 152, 143, 175, 201, 234,
	285, 228, 419, 191, 0, 0, 276, 210, 0, 0,
	0, 0, 0, 410, 411, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 142, 121, 220, 277, 160, 63,
	0, 0, 114, 115, 116, 397, 396, 399, 400, 401,
	402, 0, 0, 138, 398, 403, 404, 405, 0, 0,
	0, 0, 373, 390, 0, 418, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 387, 388, 0, 0, 0,
	0, 433, 0, 389, 0, 0, 382, 383, 385, 384,
	386, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 432, 0, 0, 312, 0, 0, 430, 0,
	246, 0, 281, 169, 187, 134, 184, 118, 129, 0,
	167, 219, 254, 258, 0, 0, 0, 145, 0, 256,
	232, 302, 0, 236, 255, 192, 291, 247, 301, 313,
	314, 286, 310, 322, 130, 148, 226, 282, 305, 273,
	0, 209, 288, 183, 197, 272, 122, 284, 299, 139,
	266, 0, 0, 0, 124, 297, 280, 207, 180, 181,
	123, 0, 252, 151, 163, 147, 222, 294, 295, 146,
	324, 131, 309, 126, 132, 308, 215, 290, 298, 208,
	200, 125, 296, 206, 199, 186, 157, 171, 244, 195,
	245, 172, 212, 211, 213, 0, 0, 0, 278, 306,
	325, 136, 0, 287, 318, 321, 0, 248, 137, 164,
	156, 243, 162, 189, 317, 319, 320, 214, 133, 174,
	274, 185, 193, 251, 323, 231, 257, 140, 304, 275,
	420, 431, 426, 427, 424, 425, 0, 423, 422, 421,
	434, 412, 413, 414, 415, 417, 0, 428, 429, 416,
	117, 127, 190, 0, 249, 161, 307, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 120, 128, 135, 141, 149, 155, 159,
	166, 170, 173, 176, 177, 178, 182, 198, 202, 203,
	204, 205, 216, 217, 218, 221, 224, 225, 227, 229,
	230, 233, 237, 238, 239, 240, 241, 242, 250, 253,
	259, 260, 261, 262, 263, 264, 265, 268, 269, 270,
	271, 279, 283, 292, 293, 303, 311, 315, 168, 300,
	316, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 188, 0, 0, 235,
	0, 267, 144, 196, 194, 289, 158, 154, 152, 143,
	175, 201, 234, 285, 228, 419, 191, 0, 0, 276,
	210, 0, 0, 0, 0, 0, 410, 411, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 142, 121, 220,
	277, 160, 63, 0, 0, 114, 115, 116, 397, 396,
	399, 400, 401, 402, 0, 0, 138, 398, 403, 404,
	405, 0, 0, 0, 0, 0, 390, 0, 418, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 387, 388,
	0, 0, 0, 0, 433, 0, 389, 0, 0, 382,
	383, 385, 384, 386, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 432, 0, 0, 312, 0,
	0, 430, 0, 246, 0, 281, 169, 187, 134, 184,
	118, 129, 0, 167, 219, 254, 258, 0, 0, 0,
	145, 0, 256, 232, 302, 1796, 236, 255, 192, 291,
	247, 301, 313, 314, 286, 310, 322, 130, 148, 226,
	282, 305, 273, 0, 209, 288, 183, 197, 272, 122,
	284, 299, 139, 266, 0, 0, 0, 124, 297, 280,
	207, 180, 181, 123, 0, 252, 151, 163, 147, 222,
	294, 295, 146, 324, 131, 309, 126, 132, 308, 215,
	290, 298, 208, 200, 125, 296, 206, 199, 186, 157,
	171, 244, 195, 245, 172, 212, 211, 213, 0, 0,
	0, 278, 306, 325, 136, 0, 287, 318, 321, 0,
	248, 137, 164, 156, 243, 162, 189, 317, 319, 320,
	214, 133, 174, 274, 185, 193, 251, 323, 231, 257,
	140, 304, 275, 420, 431, 426, 427, 424, 425, 0,
	423, 422, 421, 434, 412, 413, 414, 415, 417, 0,
	428, 429, 416, 117, 127, 190, 0, 249, 161, 307,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 120, 128, 135, 141,
	149, 155, 159, 166, 170, 173, 176, 177, 178, 182,
	198, 202, 203, 204, 205, 216, 217, 218, 221, 224,
	225, 227, 229, 230, 233, 237, 238, 239, 240, 241,
	242, 250, 253, 259, 260, 261, 262, 263, 264, 265,
	268, 269, 270, 271, 279, 283, 292, 293, 303, 311,
	315, 168, 300, 316, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 188,
	0, 0, 235, 0, 267, 144, 196, 194, 289, 158,
	154, 152, 143, 175, 201, 234, 285, 228, 419, 191,
	0, 0, 276, 210, 0, 0, 0, 0, 0, 410,
	411, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	142, 121, 220, 277, 160, 63, 0, 448, 114, 115,
	116, 397, 396, 399, 400, 401, 402, 0, 0, 138,
	398, 403, 404, 405, 0, 0, 0, 0, 0, 390,
	0, 418, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 387, 388, 0, 0, 0, 0, 433, 0, 389,
	0, 0, 382, 383, 385, 384, 386, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 432, 0,
	0, 312, 0, 0, 430, 0, 246, 0, 281, 169,
	187, 134, 184, 118, 129, 0, 167, 219, 254, 258,
	0, 0, 0, 145, 0, 256, 232, 302, 0, 236,
	255, 192, 291, 247, 301, 313, 314, 286, 310, 322,
	130, 148, 226, 282, 305, 273, 0, 209, 288, 183,
	197, 272, 122, 284, 299, 139, 266, 0, 0, 0,
	124, 297, 280, 207, 180, 181, 123, 0, 252, 151,
	163, 147, 222, 294, 295, 146, 324, 131, 309, 126,
	132, 308, 215, 290, 298, 208, 200, 125, 296, 206,
	199, 186, 157, 171, 244, 195, 245, 172, 212, 211,
	213, 0, 0, 0, 278, 306, 325, 136, 0, 287,
	318, 321, 0, 248, 137, 164, 156, 243, 162, 189,
	317, 319, 320, 214, 133, 174, 274, 185, 193, 251,
	323, 231, 257, 140, 304, 275, 420, 431, 426, 427,
	424, 425, 0, 423, 422, 421, 434, 412, 413, 414,
	415, 417, 0, 428, 429, 416, 117, 127, 190, 0,
	249, 161, 307, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 120,
	128, 135, 141, 149, 155, 159, 166, 170, 173, 176,
	177, 178, 182, 198, 202, 203, 204, 205, 216, 217,
	218, 221, 224, 225, 227, 229, 230, 233, 237, 238,
	239, 240, 241, 242, 250, 253, 259, 260, 261, 262,
	263, 264, 265, 268, 269, 270, 271, 279, 283, 292,
	293, 303, 311, 315, 168, 300, 316, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 188, 0, 0, 235, 0, 267, 144, 196,
	194, 289, 158, 154, 152, 143, 175, 201, 234, 285,
	228, 419, 191, 0, 0, 276, 210, 0, 0, 0,
	0, 0, 410, 411, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 142, 121, 220, 277, 160, 63, 0,
	0, 114, 115, 116, 397, 396, 399, 400, 401, 402,
	0, 0, 138, 398, 403, 404, 405, 0, 0, 0,
	0, 0, 390, 0, 418, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 387, 388, 0, 0, 0, 0,
	433, 0, 389, 0, 0, 382, 383, 385, 384, 386,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 432, 0, 0, 312, 0, 0, 430, 0, 246,
	0, 281, 169, 187, 134, 184, 118, 129, 0, 167,
	219, 254, 258, 0, 0, 0, 145, 0, 256, 232,
	302, 0, 236, 255, 192, 291, 247, 301, 313, 314,
	286, 310, 322, 130, 148, 226, 282, 305, 273, 0,
	209, 288, 183, 197, 272, 122, 284, 299, 139, 266,
	0, 0, 0, 124, 297, 280, 207, 180, 181, 123,
	0, 252, 151, 163, 147, 222, 294, 295, 146, 324,
	131, 309, 126, 132, 308, 215, 290, 298, 208, 200,
	125, 296, 206, 199, 186, 157, 171, 244, 195, 245,
	172, 212, 211, 213, 0, 0, 0, 278, 306, 325,
	136, 0, 287, 318, 321, 0, 248, 137, 164, 156,
	243, 162, 189, 317, 319, 320, 214, 133, 174, 274,
	185, 193, 251, 323, 231, 257, 140, 304, 275, 420,
	431, 426, 427, 424, 425, 0, 423, 422, 421, 434,
	412, 413, 414, 415, 417, 0, 428, 429, 416, 117,
	127, 190, 0, 249, 161, 307, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 120, 128, 135, 141, 149, 155, 159, 166,
	170, 173, 176, 177, 178, 182, 198, 202, 203, 204,
	205, 216, 217, 218, 221, 224, 225, 227, 229, 230,
	233, 237, 238, 239, 240, 241, 242, 250, 253, 259,
	260, 261, 262, 263, 264, 265, 268, 269, 270, 271,
	279, 283, 292, 293, 303, 311, 315, 168, 300, 316,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 188, 0, 0, 235, 0,
	267, 144, 196, 194, 289, 158, 154, 152, 143, 175,
	201, 234, 285, 228, 0, 191, 0, 0, 276, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 142, 121, 220, 277,
	160, 0, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 711, 721, 722, 714, 715, 716,
	717, 718, 719, 720, 713, 0, 0, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 312, 0, 0,
	0, 0, 246, 0, 281, 169, 187, 134, 184, 118,
	129, 0, 167, 219, 254, 258, 0, 0, 0, 145,
	0, 256, 232, 302, 0, 236, 255, 192, 291, 247,
	301, 313, 314, 286, 310, 322, 130, 148, 226, 282,
	305, 273, 0, 209, 288, 183, 197, 272, 122, 284,
	299, 139, 266, 0, 0, 0, 124, 297, 280, 207,
	180, 181, 123, 0, 252, 151, 163, 147, 222, 294,
	295, 146, 324, 131, 309, 126, 132, 308, 215, 290,
	298, 208, 200, 125, 296, 206, 199, 186, 157, 171,
	244, 195, 245, 172, 212, 211, 213, 0, 0, 0,
	278, 306, 325, 136, 0, 287, 318, 321, 0, 248,
	137, 164, 156, 243, 162, 189, 317, 319, 320, 214,
	133, 174, 274, 185, 193, 251, 323, 231, 257, 140,
	304, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 127, 190, 0, 249, 161, 307, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 120, 128, 135, 141, 149,
	155, 159, 166, 170, 173, 176, 177, 178, 182, 198,
	202, 203, 204, 205, 216, 217, 218, 221, 224, 225,
	227, 229, 230, 233, 237, 238, 239, 240, 241, 242,
	250, 253, 259, 260, 261, 262, 263, 264, 265, 268,
	269, 270, 271, 279, 283, 292, 293, 303, 311, 315,
	168, 300, 316, 223, 0, 0, 0, 808, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 188, 0,
	0, 235, 0, 267, 144, 196, 194, 289, 158, 154,
	152, 143, 175, 201, 234, 285, 228, 0, 191, 0,
	0, 276, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 142,
	121, 220, 277, 160, 0, 0, 0, 114, 115, 116,
	0, 810, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 701, 702, 700, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	312, 0, 0, 0, 0, 246, 0, 281, 169, 187,
	134, 184, 118, 129, 0, 167, 219, 254, 258, 0,
	0, 0, 145, 0, 256, 232, 302, 0, 236, 255,
	192, 291, 247, 301, 313, 314, 286, 310, 322, 130,
	148, 226, 282, 305, 273, 0, 209, 288, 183, 197,
	272, 122, 284, 299, 139, 266, 0, 0, 0, 124,
	297, 280, 207, 180, 181, 123, 0, 252, 151, 163,
	147, 222, 294, 295, 146, 324, 131, 309, 126, 132,
	308, 215, 290, 298, 208, 200, 125, 296, 206, 199,
	186, 157, 171, 244, 195, 245, 172, 212, 211, 213,
	0, 0, 0, 278, 306, 325, 136, 0, 287, 318,
	321, 0, 248, 137, 164, 156, 243, 162, 189, 317,
	319, 320, 214, 133, 174, 274, 185, 193, 251, 323,
	231, 257, 140, 304, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 127, 190, 0, 249,
	161, 307, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 120, 128,
	135, 141, 149, 155, 159, 166, 170, 173, 176, 177,
	178, 182, 198, 202, 203, 204, 205, 216, 217, 218,
	221, 224, 225, 227, 229, 230, 233, 237, 238, 239,
	240, 241, 242, 250, 253, 259, 260, 261, 262, 263,
	264, 265, 268, 269, 270, 271, 279, 283, 292, 293,
	303, 311, 315, 168, 300, 316, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 1138, 0, 0, 0,
	0, 188, 0, 0, 235, 0, 267, 144, 196, 194,
	289, 158, 154, 152, 143, 175, 201, 234, 285, 228,
	0, 191, 0, 0, 276, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 142, 121, 220, 277, 160, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 1137, 312, 0, 0, 0, 1133, 1130, 0,
	1131, 1132, 187, 610, 184, 118, 129, 1128, 1135, 219,
	254, 258, 0, 0, 0, 145, 0, 256, 232, 302,
	0, 236, 255, 192, 291, 247, 301, 313, 314, 286,
	310, 322, 130, 148, 226, 282, 305, 273, 0, 209,
	288, 183, 197, 272, 122, 284, 299, 139, 266, 0,
	0, 0, 124, 297, 280, 207, 180, 181, 123, 0,
	252, 151, 163, 147, 222, 294, 295, 146, 324, 131,
	309, 126, 132, 308, 215, 290, 298, 208, 200, 125,
	296, 206, 199, 186, 157, 171, 244, 195, 245, 172,
	212, 211, 213, 0, 0, 0, 278, 306, 325, 136,
	0, 287, 318, 321, 0, 248, 137, 164, 156, 243,
	162, 189, 317, 319, 320, 214, 133, 174, 274, 185,
	193, 251, 323, 231, 257, 140, 304, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 127,
	190, 0, 249, 161, 307, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 120, 128, 135, 141, 149, 155, 159, 166, 170,
	173, 176, 177, 178, 182, 198, 202, 203, 204, 205,
	216, 217, 218, 221, 224, 225, 227, 229, 230, 233,
	237, 238, 239, 240, 241, 242, 250, 253, 259, 260,
	261, 262, 263, 264, 265, 268, 269, 270, 271, 279,
	283, 292, 293, 303, 311, 315, 168, 300, 316, 31,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 188, 0, 0,
	235, 0, 267, 144, 196, 194, 289, 158, 154, 152,
	143, 175, 201, 234, 285, 228, 0, 191, 0, 0,
	276, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 142, 121,
	220, 277, 160, 63, 0, 448, 114, 115, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 312,
	0, 0, 0, 0, 246, 0, 281, 169, 187, 134,
	184, 118, 129, 0, 167, 219, 254, 258, 0, 0,
	0, 145, 0, 256, 232, 302, 0, 236, 255, 192,
	291, 247, 301, 313, 314, 286, 310, 322, 130, 148,
	226, 282, 305, 273, 0, 209, 288, 183, 197, 272,
	122, 284, 299, 139, 266, 0, 0, 0, 124, 297,
	280, 207, 180, 181, 123, 0, 252, 151, 163, 147,
	222, 294, 295, 146, 324, 131, 309, 126, 132, 308,
	215, 290, 298, 208, 200, 125, 296, 206, 199, 186,
	157, 171, 244, 195, 245, 172, 212, 211, 213, 0,
	0, 0, 278, 306, 325, 136, 0, 287, 318, 321,
	0, 248, 137, 164, 156, 243, 162, 189, 317, 319,
	320, 214, 133, 174, 274, 185, 193, 251, 323, 231,
	257, 140, 304, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 127, 190, 0, 249, 161,
	307, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 120, 128, 135,
	141, 149, 155, 159, 166, 170, 173, 176, 177, 178,
	182, 198, 202, 203, 204, 205, 216, 217, 218, 221,
	224, 225, 227, 229, 230, 233, 237, 238, 239, 240,
	241, 242, 250, 253, 259, 260, 261, 262, 263, 264,
	265, 268, 269, 270, 271, 279, 283, 292, 293, 303,
	311, 315, 168, 300, 316, 223, 0, 0, 0, 1095,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	188, 0, 0, 235, 0, 267, 144, 196, 194, 289,
	158, 154, 152, 143, 175, 201, 234, 285, 228, 0,
	191, 0, 0, 276, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 142, 121, 220, 277, 160, 0, 0, 0, 114,
	115, 116, 0, 1097, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 312, 0, 0, 0, 0, 246, 0, 281,
	169, 187, 134, 184, 118, 129, 0, 167, 219, 254,
	258, 0, 0, 0, 145, 0, 256, 232, 302, 0,
	236, 255, 192, 291, 247, 301, 313, 314, 286, 310,
	322, 130, 148, 226, 282, 305, 273, 0, 209, 288,
	183, 197, 272, 122, 284, 299, 139, 266, 0, 0,
	0, 124, 297, 280, 207, 180, 181, 123, 0, 252,
	151, 163, 147, 222, 294, 295, 146, 324, 131, 309,
	126, 132, 308, 215, 290, 298, 208, 200, 125, 296,
	206, 199, 186, 157, 171, 244, 195, 245, 172, 212,
	211, 213, 0, 0, 0, 278, 306, 325, 136, 0,
	287, 318, 321, 0, 248, 137, 164, 156, 243, 162,
	189, 317, 319, 320, 214, 133, 174, 274, 185, 193,
	251, 323, 231, 257, 140, 304, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 127, 190,
	0, 249, 161, 307, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	120, 128, 135, 141, 149, 155, 159, 166, 170, 173,
	176, 177, 178, 182, 198, 202, 203, 204, 205, 216,
	217, 218, 221, 224, 225, 227, 229, 230, 233, 237,
	238, 239, 240, 241, 242, 250, 253, 259, 260, 261,
	262, 263, 264, 265, 268, 269, 270, 271, 279, 283,
	292, 293, 303, 311, 315, 168, 300, 316, 31, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 188, 0, 0, 235,
	0, 267, 144, 196, 194, 289, 158, 154, 152, 143,
	175, 201, 234, 285, 228, 0, 191, 0, 0, 276,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 142, 121, 220,
	277, 160, 63, 0, 0, 114, 115, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 312, 0,
	0, 0, 0, 246, 0, 281, 169, 187, 134, 184,
	118, 129, 0, 167, 219, 254, 258, 0, 0, 0,
	145, 0, 256, 232, 302, 0, 236, 255, 192, 291,
	247, 301, 313, 314, 286, 310, 322, 130, 148, 226,
	282, 305, 273, 0, 209, 288, 183, 197, 272, 122,
	284, 299, 139, 266, 0, 0, 0, 124, 297, 280,
	207, 180, 181, 123, 0, 252, 151, 163, 147, 222,
	294, 295, 146, 324, 131, 309, 126, 132, 308, 215,
	290, 298, 208, 200, 125, 296, 206, 199, 186, 157,
	171, 244, 195, 245, 172, 212, 211, 213, 0, 0,
	0, 278, 306, 325, 136, 0, 287, 318, 321, 0,
	248, 137, 164, 156, 243, 162, 189, 317, 319, 320,
	214, 133, 174, 274, 185, 193, 251, 323, 231, 257,
	140, 304, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 127, 190, 0, 249, 161, 307,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 120, 128, 135, 141,
	149, 155, 159, 166, 170, 173, 176, 177, 178, 182,
	198, 202, 203, 204, 205, 216, 217, 218, 221, 224,
	225, 227, 229, 230, 233, 237, 238, 239, 240, 241,
	242, 250, 253, 259, 260, 261, 262, 263, 264, 265,
	268, 269, 270, 271, 279, 283, 292, 293, 303, 311,
	315, 168, 300, 316, 223, 0, 0, 0, 1095, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 188,
	0, 0, 235, 0, 267, 144, 196, 194, 289, 158,
	154, 152, 143, 175, 201, 234, 285, 228, 0, 191,
	0, 0, 276, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	142, 121, 220, 277, 160, 0, 0, 0, 114, 115,
	116, 0, 1097, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 312, 0, 0, 0, 0, 246, 0, 281, 169,
	187, 134, 184, 118, 129, 0, 167, 219, 254, 258,
	0, 0, 0, 145, 0, 256, 232, 302, 0, 1093,
	255, 192, 291, 247, 301, 313, 314, 286, 310, 322,
	130, 148, 226, 282, 305, 273, 0, 209, 288, 183,
	197, 272, 122, 284, 299, 139, 266, 0, 0, 0,
	124, 297, 280, 207, 180, 181, 123, 0, 252, 151,
	163, 147, 222, 294, 295, 146, 324, 131, 309, 126,
	132, 308, 215, 290, 298, 208, 200, 125, 296, 206,
	199, 186, 157, 171, 244, 195, 245, 172, 212, 211,
	213, 0, 0, 0, 278, 306, 325, 136, 0, 287,
	318, 321, 0, 248, 137, 164, 156, 243, 162, 189,
	317, 319, 320, 214, 133, 174, 274, 185, 193, 251,
	323, 231, 257, 140, 304, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 127, 190, 0,
	249, 161, 307, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 120,
	128, 135, 141, 149, 155, 159, 166, 170, 173, 176,
	177, 178, 182, 198, 202, 203, 204, 205, 216, 217,
	218, 221, 224, 225, 227, 229, 230, 233, 237, 238,
	239, 240, 241, 242, 250, 253, 259, 260, 261, 262,
	263, 264, 265, 268, 269, 270, 271, 279, 283, 292,
	293, 303, 311, 315, 168, 300, 316, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 188, 0, 0, 235, 0, 267, 144, 196,
	194, 289, 158, 154, 152, 143, 175, 201, 234, 285,
	228, 0, 191, 0, 0, 276, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 142, 121, 220, 277, 160, 0, 0,
	0, 114, 115, 116, 0, 0, 1060, 0, 0, 1061,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 312, 0, 0, 0, 0, 246,
	0, 281, 169, 187, 134, 184, 118, 129, 0, 167,
	219, 254, 258, 0, 0, 0, 145, 0, 256, 232,
	302, 0, 236, 255, 192, 291, 247, 301, 313, 314,
	286, 310, 322, 130, 148, 226, 282, 305, 273, 0,
	209, 288, 183, 197, 272, 122, 284, 299, 139, 266,
	0, 0, 0, 124, 297, 280, 207, 180, 181, 123,
	0, 252, 151, 163, 147, 222, 294, 295, 146, 324,
	131, 309, 126, 132, 308, 215, 290, 298, 208, 200,
	125, 296, 206, 199, 186, 157, 171, 244, 195, 245,
	172, 212, 211, 213, 0, 0, 0, 278, 306, 325,
	136, 0, 287, 318, 321, 0, 248, 137, 164, 156,
	243, 162, 189, 317, 319, 320, 214, 133, 174, 274,
	185, 193, 251, 323, 231, 257, 140, 304, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	127, 190, 0, 249, 161, 307, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 120, 128, 135, 141, 149, 155, 159, 166,
	170, 173, 176, 177, 178, 182, 198, 202, 203, 204,
	205, 216, 217, 218, 221, 224, 225, 227, 229, 230,
	233, 237, 238, 239, 240, 241, 242, 250, 253, 259,
	260, 261, 262, 263, 264, 265, 268, 269, 270, 271,
	279, 283, 292, 293, 303, 311, 315, 168, 300, 316,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 842, 0, 0, 0, 188, 0, 0, 235, 0,
	267, 144, 196, 194, 289, 158, 154, 152, 143, 175,
	201, 234, 285, 228, 0, 191, 0, 0, 276, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 142, 121, 220, 277,
	160, 0, 0, 0, 114, 115, 116, 0, 841, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 312, 0, 0,
	0, 0, 246, 0, 281, 169, 187, 134, 184, 118,
	129, 0, 167, 219, 254, 258, 0, 0, 0, 145,
	0, 256, 232, 302, 0, 236, 255, 192, 291, 247,
	301, 313, 314, 286, 310, 322, 130, 148, 226, 282,
	305, 273, 0, 209, 288, 183, 197, 272, 122, 284,
	299, 139, 266, 0, 0, 0, 124, 297, 280, 207,
	180, 181, 123, 0, 252, 151, 163, 147, 222, 294,
	295, 146, 324, 131, 309, 126, 132, 308, 215, 290,
	298, 208, 200, 125, 296, 206, 199, 186, 157, 171,
	244, 195, 245, 172, 212, 211, 213, 0, 0, 0,
	278, 306, 325, 136, 0, 287, 318, 321, 0, 248,
	137, 164, 156, 243, 162, 189, 317, 319, 320, 214,
	133, 174, 274, 185, 193, 251, 323, 231, 257, 140,
	304, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 127, 190, 0, 249, 161, 307, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 120, 128, 135, 141, 149,
	155, 159, 166, 170, 173, 176, 177, 178, 182, 198,
	202, 203, 204, 205, 216, 217, 218, 221, 224, 225,
	227, 229, 230, 233, 237, 238, 239, 240, 241, 242,
	250, 253, 259, 260, 261, 262, 263, 264, 265, 268,
	269, 270, 271, 279, 283, 292, 293, 303, 311, 315,
	168, 300, 316, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 188, 0,
	0, 235, 0, 267, 144, 196, 194, 289, 158, 154,
	152, 143, 175, 201, 234, 285, 228, 0, 191, 0,
	0, 276, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 142,
	121, 220, 277, 160, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	312, 0, 0, 0, 0, 246, 0, 281, 169, 187,
	610, 184, 118, 129, 608, 167, 219, 254, 258, 0,
	0, 0, 145, 0, 256, 232, 302, 0, 236, 255,
	192, 291, 247, 301, 313, 314, 286, 310, 322, 130,
	148, 226, 282, 305, 273, 0, 209, 288, 183, 197,
	272, 122, 284, 299, 139, 266, 0, 0, 0, 124,
	297, 280, 207, 180, 181, 123, 0, 252, 151, 163,
	147, 222, 294, 295, 146, 324, 131, 309, 126, 132,
	308, 215, 290, 298, 208, 200, 125, 296, 206, 199,
	186, 157, 171, 244, 195, 245, 172, 212, 211, 213,
	0, 0, 0, 278, 306, 325, 136, 0, 287, 318,
	321, 0, 248, 137, 164, 156, 243, 162, 189, 317,
	319, 320, 214, 133, 174, 274, 185, 193, 251, 323,
	231, 257, 140, 304, 275, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 127, 190, 0, 249,
	161, 307, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 120, 128,
	135, 141, 149, 155, 159, 166, 170, 173, 176, 177,
	178, 182, 198, 202, 203, 204, 205, 216, 217, 218,
	221, 224, 225, 227, 229, 230, 233, 237, 238, 239,
	240, 241, 242, 250, 253, 259, 260, 261, 262, 263,
	264, 265, 268, 269, 270, 271, 279, 283, 292, 293,
	303, 311, 315, 168, 300, 316, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 188, 0, 0, 235, 0, 267, 144, 196, 194,
	289, 158, 154, 152, 143, 175, 201, 234, 285, 228,
	0, 191, 0, 0, 276, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 179, 142, 121, 220, 277, 160, 0, 0, 448,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 312, 0, 0, 0, 0, 246, 0,
	281, 169, 187, 134, 184, 118, 129, 0, 167, 219,
	254, 258, 0, 0, 0, 145, 0, 256, 232, 302,
	0, 236, 255, 192, 291, 247, 301, 313, 314, 286,
	310, 322, 130, 148, 226, 282, 305, 273, 0, 209,
	288, 183, 197, 272, 122, 284, 299, 139, 266, 0,
	0, 0, 124, 297, 280, 207, 180, 181, 123, 0,
	252, 151, 163, 147, 222, 294, 295, 146, 324, 131,
	309, 126, 132, 308, 215, 290, 298, 208, 200, 125,
	296, 206, 199, 186, 157, 171, 244, 195, 245, 172,
	212, 211, 213, 0, 0, 0, 278, 306, 325, 136,
	0, 287, 318, 321, 0, 248, 137, 164, 156, 243,
	162, 189, 317, 319, 320, 214, 133, 174, 274, 185,
	193, 251, 323, 231, 257, 140, 304, 275, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 127,
	190, 0, 249, 161, 307, 0, 0, 150, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 120, 128, 135, 141, 149, 155, 159, 166, 170,
	173, 176, 177, 178, 182, 198, 202, 203, 204, 205,
	216, 217, 218, 221, 224, 225, 227, 229, 230, 233,
	237, 238, 239, 240, 241, 242, 250, 253, 259, 260,
	261, 262, 263, 264, 265, 268, 269, 270, 271, 279,
	283, 292, 293, 303, 311, 315, 168, 300, 316, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 0,
	0, 0, 0, 0, 188, 0, 0, 235, 0, 267,
	144, 196, 194, 289, 158, 154, 152, 143, 175, 201,
	234, 285, 228, 0, 191, 0, 0, 276, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 179, 142, 121, 220, 277, 160,
	63, 0, 0, 114, 115, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 138, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 312, 0, 0, 0,
	0, 246, 0, 281, 169, 187, 134, 184, 118, 129,
	0, 167, 219, 254, 258, 0, 0, 0, 145, 0,
	256, 232, 302, 0, 236, 255, 192, 291, 247, 301,
	313, 314, 286, 310, 322, 130, 148, 226, 282, 305,
	273, 0, 209, 288, 183, 197, 272, 122, 284, 299,
	139, 266, 0, 0, 0, 124, 297, 280, 207, 180,
	181, 123, 0, 252, 151, 163, 147, 222, 294, 295,
	146, 324, 131, 309, 126, 132, 308, 215, 290, 298,
	208, 200, 125, 296, 206, 199, 186, 157, 171, 244,
	195, 245, 172, 212, 211, 213, 0, 0, 0, 278,
	306, 325, 136, 0, 287, 318, 321, 0, 248, 137,
	164, 156, 243, 162, 189, 317, 319, 320, 214, 133,
	174, 274, 185, 193, 251, 323, 231, 257, 140, 304,
	275, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 127, 190, 0, 249, 161, 307, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 120, 128, 135, 141, 149, 155,
	159, 166, 170, 173, 176, 177, 178, 182, 198, 202,
	203, 204, 205, 216, 217, 218, 221, 224, 225, 227,
	229, 230, 233, 237, 238, 239, 240, 241, 242, 250,
	253, 259, 260, 261, 262, 263, 264, 265, 268, 269,
	270, 271, 279, 283, 292, 293, 303, 311, 315, 168,
	300, 316, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 153, 0, 0, 0, 0, 0, 188, 0, 0,
	235, 0, 267, 144, 196, 194, 289, 158, 154, 152,
	143, 175, 201, 234, 285, 228, 0, 191, 0, 0,
	276, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 179, 142, 121,
	220, 277, 160, 0, 0, 0, 114, 115, 116, 0,
	1097, 0, 0, 0, 0, 0, 0, 138, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 312,
	0, 0, 0, 0, 246, 0, 281, 169, 187, 134,
	184, 118, 129, 0, 167, 219, 254, 258, 0, 0,
	0, 145, 0, 256, 232, 302, 0, 236, 255, 192,
	291, 247, 301, 313, 314, 286, 310, 322, 130, 148,
	226, 282, 305, 273, 0, 209, 288, 183, 197, 272,
	122, 284, 299, 139, 266, 0, 0, 0, 124, 297,
	280, 207, 180, 181, 123, 0, 252, 151, 163, 147,
	222, 294, 295, 146, 324, 131, 309, 126, 132, 308,
	215, 290, 298, 208, 200, 125, 296, 206, 199, 186,
	157, 171, 244, 195, 245, 172, 212, 211, 213, 0,
	0, 0, 278, 306, 325, 136, 0, 287, 318, 321,
	0, 248, 137, 164, 156, 243, 162, 189, 317, 319,
	320, 214, 133, 174, 274, 185, 193, 251, 323, 231,
	257, 140, 304, 275, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 127, 190, 0, 249, 161,
	307, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 120, 128, 135,
	141, 149, 155, 159, 166, 170, 173, 176, 177, 178,
	182, 198, 202, 203, 204, 205, 216, 217, 218, 221,
	224, 225, 227, 229, 230, 233, 237, 238, 239, 240,
	241, 242, 250, 253, 259, 260, 261, 262, 263, 264,
	265, 268, 269, 270, 271, 279, 283, 292, 293, 303,
	311, 315, 168, 300, 316, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	188, 0, 0, 235, 0, 267, 144, 196, 194, 289,
	158, 154, 152, 143, 175, 201, 234, 285, 228, 0,
	191, 0, 0, 276, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 142, 121, 220, 277, 160, 0, 0, 0, 114,
	115, 116, 0, 810, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 312, 0, 0, 0, 0, 246, 0, 281,
	169, 187, 134, 184, 118, 129, 0, 167, 219, 254,
	258, 0, 0, 0, 145, 0, 256, 232, 302, 0,
	236, 255, 192, 291, 247, 301, 313, 314, 286, 310,
	322, 130, 148, 226, 282, 305, 273, 0, 209, 288,
	183, 197, 272, 122, 284, 299, 139, 266, 0, 0,
	0, 124, 297, 280, 207, 180, 181, 123, 0, 252,
	151, 163, 147, 222, 294, 295, 146, 324, 131, 309,
	126, 132, 308, 215, 290, 298, 208, 200, 125, 296,
	206, 199, 186, 157, 171, 244, 195, 245, 172, 212,
	211, 213, 0, 0, 0, 278, 306, 325, 136, 0,
	287, 318, 321, 0, 248, 137, 164, 156, 243, 162,
	189, 317, 319, 320, 214, 133, 174, 274, 185, 193,
	251, 323, 231, 257, 140, 304, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 127, 190,
	0, 249, 161, 307, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	120, 128, 135, 141, 149, 155, 159, 166, 170, 173,
	176, 177, 178, 182, 198, 202, 203, 204, 205, 216,
	217, 218, 221, 224, 225, 227, 229, 230, 233, 237,
	238, 239, 240, 241, 242, 250, 253, 259, 260, 261,
	262, 263, 264, 265, 268, 269, 270, 271, 279, 283,
	292, 293, 303, 311, 315, 168, 300, 316, 824, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 153, 0, 0, 0, 0, 0,
	188, 0, 0, 235, 0, 267, 144, 196, 194, 289,
	158, 154, 152, 143, 175, 201, 234, 285, 228, 0,
	191, 0, 0, 276, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	179, 142, 121, 220, 277, 160, 0, 0, 0, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 312, 0, 0, 0, 0, 246, 0, 281,
	169, 187, 134, 184, 118, 129, 0, 167, 219, 254,
	258, 0, 0, 0, 145, 0, 256, 232, 302, 0,
	236, 255, 192, 291, 247, 301, 313, 314, 286, 310,
	322, 130, 148, 226, 282, 305, 273, 0, 209, 288,
	183, 197, 272, 122, 284, 299, 139, 266, 0, 0,
	0, 124, 297, 280, 207, 180, 181, 123, 0, 252,
	151, 163, 147, 222, 294, 295, 146, 324, 131, 309,
	126, 132, 308, 215, 290, 298, 208, 200, 125, 296,
	206, 199, 186, 157, 171, 244, 195, 245, 172, 212,
	211, 213, 0, 0, 0, 278, 306, 325, 136, 0,
	287, 318, 321, 0, 248, 137, 164, 156, 243, 162,
	189, 317, 319, 320, 214, 133, 174, 274, 185, 193,
	251, 323, 231, 257, 140, 304, 275, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 127, 190,
	0, 249, 161, 307, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	120, 128, 135, 141, 149, 155, 159, 166, 170, 173,
	176, 177, 178, 182, 198, 202, 203, 204, 205, 216,
	217, 218, 221, 224, 225, 227, 229, 230, 233, 237,
	238, 239, 240, 241, 242, 250, 253, 259, 260, 261,
	262, 263, 264, 265, 268, 269, 270, 271, 279, 283,
	292, 293, 303, 311, 315, 168, 300, 316, 223, 0,
	0, 0, 0, 0, 0, 0, 814, 153, 0, 0,
	0, 0, 0, 188, 0, 0, 235, 0, 267, 144,
	196, 194, 289, 158, 154, 152, 143, 175, 201, 234,
	285, 228, 0, 191, 0, 0, 276, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 142, 121, 220, 277, 160, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 312, 0, 0, 0, 0,
	246, 0, 281, 169, 187, 134, 184, 118, 129, 0,
	167, 219, 254, 258, 0, 0, 0, 145, 0, 256,
	232, 302, 0, 236, 255, 192, 291, 247, 301, 313,
	314, 286, 310, 322, 130, 148, 226, 282, 305, 273,
	0, 209, 288, 183, 197, 272, 122, 284, 299, 139,
	266, 0, 0, 0, 124, 297, 280, 207, 180, 181,
	123, 0, 252, 151, 163, 147, 222, 294, 295, 146,
	324, 131, 309, 126, 132, 308, 215, 290, 298, 208,
	200, 125, 296, 206, 199, 186, 157, 171, 244, 195,
	245, 172, 212, 211, 213, 0, 0, 0, 278, 306,
	325, 136, 0, 287, 318, 321, 0, 248, 137, 164,
	156, 243, 162, 189, 317, 319, 320, 214, 133, 174,
	274, 185, 193, 251, 323, 231, 257, 140, 304, 275,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 127, 190, 0, 249, 161, 307, 0, 0, 150,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 120, 128, 135, 141, 149, 155, 159,
	166, 170, 173, 176, 177, 178, 182, 198, 202, 203,
	204, 205, 216, 217, 218, 221, 224, 225, 227, 229,
	230, 233, 237, 238, 239, 240, 241, 242, 250, 253,
	259, 260, 261, 262, 263, 264, 265, 268, 269, 270,
	271, 279, 283, 292, 293, 303, 311, 315, 168, 300,
	316, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 188, 0, 0, 235,
	0, 267, 144, 196, 194, 289, 158, 154, 152, 143,
	175, 201, 234, 285, 228, 0, 191, 0, 0, 276,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 179, 142, 121, 220,
	277, 160, 0, 0, 0, 114, 115, 116, 0, 690,
	0, 0, 0, 0, 0, 0, 138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 312, 0,
	0, 0, 0, 246, 0, 281, 169, 187, 134, 184,
	118, 129, 0, 167, 219, 254, 258, 0, 0, 0,
	145, 0, 256, 232, 302, 0, 236, 255, 192, 291,
	247, 301, 313, 314, 286, 310, 322, 130, 148, 226,
	282, 305, 273, 0, 209, 288, 183, 197, 272, 122,
	284, 299, 139, 266, 0, 0, 0, 124, 297, 280,
	207, 180, 181, 123, 0, 252, 151, 163, 147, 222,
	294, 295, 146, 324, 131, 309, 126, 132, 308, 215,
	290, 298, 208, 200, 125, 296, 206, 199, 186, 157,
	171, 244, 195, 245, 172, 212, 211, 213, 0, 0,
	0, 278, 306, 325, 136, 0, 287, 318, 321, 0,
	248, 137, 164, 156, 243, 162, 189, 317, 319, 320,
	214, 133, 174, 274, 185, 193, 251, 323, 231, 257,
	140, 304, 275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 127, 190, 0, 249, 161, 307,
	0, 0, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 120, 128, 135, 141,
	149, 155, 159, 166, 170, 173, 176, 177, 178, 182,
	198, 202, 203, 204, 205, 216, 217, 218, 221, 224,
	225, 227, 229, 230, 233, 237, 238, 239, 240, 241,
	242, 250, 253, 259, 260, 261, 262, 263, 264, 265,
	268, 269, 270, 271, 279, 283, 292, 293, 303, 311,
	315, 168, 300, 316, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 188,
	0, 0, 235, 0, 267, 144, 196, 194, 289, 158,
	154, 152, 143, 175, 201, 234, 285, 228, 0, 191,
	0, 0, 276, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 179,
	142, 121, 220, 277, 160, 0, 0, 0, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 364, 0, 165, 0, 0,
	0, 312, 0, 0, 0, 0, 246, 0, 281, 169,
	187, 134, 184, 118, 129, 0, 167, 219, 254, 258,
	0, 0, 0, 145, 0, 256, 232, 302, 0, 236,
	255, 192, 291, 247, 301, 313, 314, 286, 310, 322,
	130, 148, 226, 282, 305, 273, 0, 209, 288, 183,
	197, 272, 122, 284, 299, 139, 266, 0, 0, 0,
	124, 297, 280, 207, 180, 181, 123, 0, 252, 151,
	163, 147, 222, 294, 295, 146, 324, 131, 309, 126,
	132, 308, 215, 290, 298, 208, 200, 125, 296, 206,
	199, 186, 157, 171, 244, 195, 245, 172, 212, 211,
	213, 0, 0, 0, 278, 306, 325, 136, 0, 287,
	318, 321, 0, 248, 137, 164, 156, 243, 162, 189,
	317, 319, 320, 214, 133, 174, 274, 185, 193, 251,
	323, 231, 257, 140, 304, 275, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 127, 190, 0,
	249, 161, 307, 0, 0, 150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 119, 120,
	128, 135, 141, 149, 155, 159, 166, 170, 173, 176,
	177, 178, 182, 198, 202, 203, 204, 205, 216, 217,
	218, 221, 224, 225, 227, 229, 230, 233, 237, 238,
	239, 240, 241, 242, 250, 253, 259, 260, 261, 262,
	263, 264, 265, 268, 269, 270, 271, 279, 283, 292,
	293, 303, 311, 315, 363, 300, 316, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 188, 0, 0, 235, 0, 267, 144, 196,
	194, 289, 158, 154, 152, 143, 175, 201, 234, 285,
	228, 0, 191, 0, 0, 276, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 179, 142, 121, 220, 277, 160, 0, 0,
	0, 114, 115, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 109, 0, 312, 0, 0, 0, 0, 246,
	0, 281, 169, 187, 134, 184, 118, 129, 0, 167,
	219, 254, 258, 0, 0, 0, 145, 0, 256, 232,
	302, 0, 236, 255, 192, 291, 247, 301, 313, 314,
	286, 310, 322, 130, 148, 226, 282, 305, 273, 0,
	209, 288, 183, 197, 272, 122, 284, 299, 139, 266,
	0, 0, 0, 124, 297, 280, 207, 180, 181, 123,
	0, 252, 151, 163, 147, 222, 294, 295, 146, 324,
	131, 309, 126, 132, 308, 215, 290, 298, 208, 200,
	125, 296, 206, 199, 186, 157, 171, 244, 195, 245,
	172, 212, 211, 213, 0, 0, 0, 278, 306, 325,
	136, 0, 287, 318, 321, 0, 248, 137, 164, 156,
	243, 162, 189, 317, 319, 320, 214, 133, 174, 274,
	185, 193, 251, 323, 231, 257, 140, 304, 275, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	127, 190, 0, 249, 161, 307, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 120, 128, 135, 141, 149, 155, 159, 166,
	170, 173, 176, 177, 178, 182, 198, 202, 203, 204,
	205, 216, 217, 218, 221, 224, 225, 227, 229, 230,
	233, 237, 238, 239, 240, 241, 242, 250, 253, 259,
	260, 261, 262, 263, 264, 265, 268, 269, 270, 271,
	279, 283, 292, 293, 303, 311, 315, 168, 300, 316,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 0, 0, 0, 0, 188, 0, 0, 235, 0,
	267, 144, 196, 194, 289, 158, 154, 152, 143, 175,
	201, 234, 285, 228, 0, 191, 0, 0, 276, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 142, 121, 220, 277,
	160, 0, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 312, 0, 0,
	0, 0, 246, 0, 281, 169, 187, 134, 184, 118,
	129, 0, 167, 219, 254, 258, 0, 0, 0, 145,
	0, 256, 232, 302, 0, 236, 255, 192, 291, 247,
	301, 313, 314, 286, 310, 322, 130, 148, 226, 282,
	305, 273, 0, 209, 288, 183, 197, 272, 122, 284,
	299, 139, 266, 0, 0, 0, 124, 297, 280, 207,
	180, 181, 123, 0, 252, 151, 163, 147, 222, 294,
	295, 146, 324, 131, 309, 126, 132, 308, 215, 290,
	298, 208, 200, 125, 296, 206, 199, 186, 157, 171,
	244, 195, 245, 172, 212, 211, 213, 0, 0, 0,
	278, 306, 325, 136, 0, 287, 318, 321, 0, 248,
	137, 164, 156, 243, 162, 189, 317, 319, 320, 214,
	133, 174, 274, 185, 193, 251, 323, 231, 257, 140,
	304, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 127, 190, 0, 249, 161, 307, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 120, 128, 135, 141, 149,
	155, 159, 166, 170, 173, 176, 177, 178, 182, 198,
	202, 203, 204, 205, 216, 217, 218, 221, 224, 225,
	227, 229, 230, 233, 237, 238, 239, 240, 241, 242,
	250, 253, 259, 260, 261, 262, 263, 264, 265, 268,
	269, 270, 271, 279, 283, 292, 293, 303, 311, 315,
	168, 300, 316,
}
var yyPact = [...]int{

	196, -1000, -304, 1173, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1108,
	872, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 352, 819,
	818, 19, -33, 182, 30, 19028, 181, 1910, 19411, -1000,
	15, -1000, 4, 19411, 11, 18645, -1000, -1000, -83, -102,
	-1000, 10569, 1008, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 831, 1094, 1099, 1115, 646, 1141, -1000, 9024, 9024,
	159, 159, 159, 7492, -1000, -1000, 15574, 19411, 19411, 1091,
	19411, 155, 155, 155, 144, 825, 533, -148, 180, 19411,
	545, 545, 279, 19411, 114, 545, 114, 114, 114, 19411,
	-1000, 240, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19411, 545, 1026, 401,
	164, 276, 276, 276, -1000, 264, -1000, 5110, 63, 66,
	-29, 1127, 64, -20, -1000, 401, 5110, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 167, -1000, -1000, -1000, -1000,
	19411, 18262, 154, 350, -1000, -1000, -1000, -1000, -1000, -1000,
	713, 299, -1000, 10569, 2488, 657, 657, -1000, -1000, 219,
	-1000, -1000, 11718, 11718, 11718, 11718, 11718, 11718, 11718, 11718,
	11718, 11718, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 657, 238, -1000, 10186,
	657, 657, 657, 657, 657, 657, 657, 657, 10569, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 657, 657, -1000, -1000, -1000, 1108, -1000,
	872, -1000, -1000, -1000, 1040, 10569, 10569, 1108, -1000, 963,
	9024, -1000, -1000, 1007, -1000, -1000, -1000, -1000, 402, 1147,
	-1000, 12484, 237, 1145, 17879, -1000, 16340, 17496, 784, 7095,
	-107, -1000, -1000, -1000, 349, 15191, -1000, -1000, -1000, 1025,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 745, 19411, -1000, -1000, 2157, 545, -1000,
	807, -1000, 740, -1000, 801, 872, 738, -1000, 545, 360,
	545, 19411, 177, -1000, -1000, -1000, 54, 346, 530, -1000,
	19411, 5110, 5110, 5110, 73, 107, 100, 19411, 771, 166,
	19411, 1088, 905, 19411, 545, 545, -1000, 6301, -1000, 5110,
	401, -1000, 528, 10569, 5110, 5110, 5110, 19411, 5110, 5110,
	-1000, 527, -1000, -1000, 406, -1000, -1000, -1000, -1000, -1000,
	-1000, 5110, 5110, 386, 406, 386, -1000, -1000, -1000, -1000,
	10569, 276, -1000, 903, -1000, -1000, 9, -1000, -1000, -1000,
	-1000, -1000, 1173, -1000, -1000, -1000, -149, -1000, -1000, 10569,
	10569, 10569, 10569, 393, 308, 11718, 461, 291, 11718, 11718,
	11718, 11718, 11718, 11718, 11718, 11718, 11718, 11718, 11718, 11718,
	11718, 11718, 11718, 642, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 545, -1000, 1170, 773, 773, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 12101, 7875, 6301, 646,
	703, 1108, 9024, 9024, 10569, 10569, 9790, 9407, 9024, 1033,
	347, 299, 19411, -1000, -1000, 11335, -1000, -1000, -1000, -1000,
	-1000, 567, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19411,
	19411, 9024, 9024, 9024, 9024, 9024, -1000, 1099, 646, 1007,
	1077, 1161, 281, 500, 770, -1000, 488, 1099, 14808, 758,
	-1000, 1007, -1000, -1000, -1000, 19411, -1000, -1000, 17106, -1000,
	-1000, 5904, 19411, 85, 19411, -1000, 761, 946, -1000, -1000,
	-1000, 1090, 14042, 14425, 19411, 785, 774, -1000, -1000, 236,
	6698, -107, -1000, 6698, 733, -1000, -124, -117, 8258, 203,
	-1000, -1000, -1000, -1000, 4316, 12867, 639, 377, -64, -1000,
	-1000, -1000, 801, -1000, 801, 801, 801, 801, -24, -24,
	-24, -24, -1000, -1000, -1000, -1000, -1000, 817, 810, -1000,
	801, 801, 801, 801, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 809, 809, 809, 802, 802, 135, 10569, 55, 19411,
	1074, 466, 124, -1000, 19411, 5110, 1085, 5110, -1000, 545,
	45, 335, 43, -1000, 131, -1000, -1000, -1000, 19411, 19411,
	19411, 19411, 19411, 189, 19411, 19411, 768, -1000, 19411, 5110,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 299, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19411, -1000, -1000, -1000,
	-1000, 401, 19411, 19411, 19411, 401, 299, -1000, 19411, 19411,
	-1000, -1000, -1000, -1000, -1000, 299, 308, 319, 311, -1000,
	-1000, 451, -1000, -1000, 2509, -1000, -1000, -1000, -1000, 461,
	11718, 11718, 11718, 1775, 2509, 2674, 812, 538, 254, 574,
	574, 256, 256, 256, 256, 256, 558, 558, -1000, -1000,
	-1000, 567, -1000, -1000, -1000, 567, 9024, 9024, 767, 657,
	232, -1000, 831, -1000, -1000, 1099, 693, 693, 535, 653,
	343, 1144, 693, 337, 1133, 693, 693, 9024, -1000, -1000,
	357, -1000, 10569, 567, -1000, 231, -1000, 1833, 755, 749,
	693, 567, 567, 693, 693, 1040, -1000, -1000, 1000, -1000,
	960, 10569, 10569, 10569, -1000, -1000, -1000, 1040, 1107, -1000,
	975, 974, 1124, 9024, 16340, 1007, -1000, -1000, -1000, 224,
	1124, 797, 657, -1000, 19411, 16340, 16340, 16340, 16340, 16340,
	-1000, 940, 934, -1000, 926, 920, 930, 19411, -1000, 701,
	646, 14042, 239, 657, -1000, 16723, -1000, -1000, 85, 762,
	16340, 19411, -1000, -1000, 16340, 19411, 5507, -1000, 733, -107,
	-89, -1000, -1000, -1000, -1000, 299, -1000, 656, 731, 3919,
	-1000, -1000, -1000, -1000, 105, -1000, -1000, 808, 545, -1000,
	1065, 297, 297, 273, 545, 1054, -1000, -1000, -1000, -1000,
	1041, -1000, 373, -74, -1000, -1000, -24, -24, -1000, -1000,
	203, 1019, 203, 203, 203, 524, 524, -1000, -1000, -1000,
	-1000, -1000, 450, -1000, -1000, -1000, 440, -1000, -1000, 807,
	597, 875, 55, -1000, 545, 329, 523, 1010, -1000, -1000,
	619, -1000, 31, -1000, -1000, -1000, -1000, 861, 165, 13,
	87, -1000, -1000, -1000, -1000, 339, 339, 296, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 84,
	843, -1000, -1000, -1000, -1000, 7, 72, 156, -1000, 5110,
	-1000, 386, -1000, -1000, -1000, 386, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1775, 2509, 2579, -1000, 11718, 11718, -1000,
	-1000, 693, 693, 9024, 6301, 1108, 1040, -1000, -1000, 367,
	642, 367, 11718, 11718, -1000, 11718, 11718, -1000, -168, 695,
	340, -1000, 10569, 612, -1000, 6301, -1000, 11718, 11718, -1000,
	-1000, -1000, -1000, -1000, -1000, 505, 520, 958, 299, 299,
	-1000, -1000, 19411, -1000, -1000, -1000, -1000, 1122, 10569, -1000,
	729, -1000, 4713, 1099, 890, 19411, 657, 1173, 13263, 19411,
	795, -1000, 334, 946, 840, 889, 901, -1000, -1000, -1000,
	-1000, 928, -1000, 916, -1000, -1000, -1000, -1000, -1000, 646,
	-1000, 175, 174, 157, 19411, -1000, 1124, 16340, 627, -1000,
	627, -1000, 222, -1000, -1000, -1000, -132, -131, -1000, -1000,
	-1000, 4316, -1000, 4316, -1000, 19411, 106, -1000, 545, 545,
	545, -1000, -1000, -1000, 805, 878, 11718, -1000, -1000, -1000,
	203, 203, -1000, 302, -1000, -1000, -1000, 687, -1000, 683,
	717, 681, 10, -1000, 816, 1017, 329, 329, -1000, -1000,
	430, -1000, -1000, 516, -1000, 108, -1000, -1000, 877, 19411,
	19411, 34, -1000, 803, 503, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19411, -1000, -1000, -1000, -1000, -1000, 19411,
	-183, 545, 19411, 19411, 19411, 19411, -1000, 401, 401, -1000,
	11718, 2509, 2509, -1000, -1000, 567, -1000, 1099, -1000, 567,
	801, 801, -1000, 801, 802, -1000, 801, -7, 801, -8,
	567, 567, 2624, 2609, 2359, 2300, 657, -163, -1000, 299,
	10569, -1000, 1998, 1305, 509, -24, -1000, -1000, -1000, 1118,
	1113, 299, -1000, -1000, -1000, 1069, 757, 671, -1000, -1000,
	8641, 678, 968, 211, 676, -1000, 1108, 19411, 10569, -1000,
	-1000, 10569, 800, -1000, 10569, -1000, -1000, -1000, 1108, 657,
	657, 657, 676, 1108, 627, -1000, -1000, 265, -1000, -1000,
	-1000, 3919, -1000, 669, -1000, 1054, -1000, -1000, -1000, 19411,
	-58, 1156, 2509, -1000, -1000, -1000, -1000, -24, 507, -24,
	427, -1000, 418, -1000, -1000, -232, -1000, -1000, 879, 897,
	-1000, -1000, 35, 19411, -1000, -1000, -1000, -1000, -1000, 611,
	-1000, -1000, -1000, -1000, -1000, 1071, -1000, 6301, -1000, -1000,
	799, 860, -1000, -1000, -1000, -1000, 2509, -1000, 1040, -1000,
	-1000, 125, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11718, 11718, 11718, 11718, 11718, 1099, 504, 299, 11718, 11718,
	-24, -90, -1000, 10569, 10569, 1053, -1000, 657, -1000, 736,
	19411, 657, 19411, -1000, 19411, 1099, -1000, 299, 299, 19411,
	299, 15957, 19411, 19411, 13646, 1099, -1000, 55, 667, 274,
	-1000, -158, 203, -1000, 203, 600, 572, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 657, 715,
	-1000, 325, 19411, 19411, -1000, -1000, -1000, 1833, 1833, 1833,
	1833, 163, 567, -1000, 1833, 1833, -288, -1000, 1002, 999,
	299, 713, 1154, -1000, 657, 1173, 207, 671, -1000, -1000,
	-1000, 664, 636, -1000, 636, 636, 239, -1000, -1000, 97,
	399, 1052, -1000, 1044, -1000, -1000, -1000, -1000, -1000, 83,
	6301, 4316, 614, -1000, -1000, -1000, -1000, -1000, 567, 70,
	-188, -1000, -1000, -1000, -90, 153, -1000, 980, 978, 1111,
	19411, 671, 19411, -1000, -1000, -1000, -1000, -1000, 19411, -1000,
	498, -1000, -1000, 599, -1000, 19411, -1000, -1000, 843, -1000,
	955, -181, -194, 985, 988, 988, 999, 1109, 997, 995,
	-1000, 496, 650, -1000, 791, -1000, -1000, 83, 967, -183,
	-1000, 948, -1000, 982, 452, -1000, -1000, -1000, -1000, 495,
	-1000, 1105, 1104, -1000, 19411, -1000, 74, -1000, -184, -1000,
	426, -1000, -1000, -1000, 477, 468, 561, 78, -189, -1000,
	-1000, -1000, -1000, 874, 657, -195, 832, -1000, 1137, 10952,
	-1000, -1000, 1143, 275, 275, 1833, 567, -1000, -1000, -1000,
	115, 454, -1000, -1000, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1474, 1472, 31, 76, 80, 1471, 1470, 1466, 1465,
	116, 115, 112, 1463, 1461, 1457, 1456, 1455, 1454, 1451,
	1450, 1449, 1448, 1446, 1440, 1439, 1421, 1419, 1418, 1417,
	1416, 1415, 1413, 1412, 1410, 1409, 156, 1408, 1404, 1399,
	1395, 1394, 1393, 1392, 1384, 1382, 1381, 1380, 94, 1378,
	42, 305, 57, 75, 1372, 72, 1370, 1366, 1362, 1360,
	1359, 1665, 1357, 45, 73, 64, 1356, 51, 1354, 1353,
	103, 1352, 1348, 67, 1347, 1345, 78, 1343, 68, 1340,
	16, 40, 1339, 1338, 1337, 1336, 96, 1811, 1335, 1332,
	18, 1331, 1330, 114, 1329, 74, 33, 15, 25, 23,
	1327, 81, 1326, 9, 1323, 77, 1321, 1320, 1319, 1318,
	35, 1317, 71, 82, 69, 1316, 10, 13, 1315, 1314,
	1311, 1309, 1306, 1304, 5, 1302, 1298, 1294, 1292, 1290,
	28, 1289, 6, 1287, 61, 43, 19, 12, 1285, 1280,
	20, 83, 60, 86, 1279, 1278, 1277, 652, 1052, 1274,
	62, 1272, 118, 1271, 24, 109, 516, 584, 1270, 1269,
	1268, 1267, 1266, 44, 935, 1172, 41, 93, 1265, 1264,
	2208, 58, 66, 21, 1260, 1258, 1257, 47, 1143, 52,
	639, 1255, 39, 1254, 1253, 1249, 1248, 1247, 1244, 1243,
	341, 1241, 1240, 1238, 34, 14, 92, 36, 1236, 1235,
	1234, 1233, 70, 85, 1231, 1229, 63, 53, 1228, 98,
	38, 29, 1219, 1216, 1211, 1209, 37, 11, 1208, 79,
	50, 59, 22, 26, 1207, 17, 1206, 30, 27, 1205,
	4, 1203, 8, 1195, 3, 0, 1193, 7, 55, 1,
	1190, 2, 1189, 1184, 1183, 145, 441, 90, 1179, 107,
}
var yyR1 = [...]int{

	0, 243, 244, 244, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 235, 235, 235, 21, 35, 3, 3, 3, 3,
	2, 2, 8, 9, 4, 5, 5, 10, 10, 42,
	42, 11, 12, 12, 12, 12, 247, 247, 70, 70,
	71, 71, 134, 134, 13, 14, 14, 143, 143, 142,
	142, 142, 144, 144, 144, 144, 180, 180, 15, 15,
	15, 15, 15, 15, 49, 49, 237, 237, 236, 234,
	234, 233, 233, 232, 22, 24, 25, 212, 214, 214,
	213, 213, 213, 213, 213, 213, 203, 183, 183, 183,
	183, 186, 186, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 185, 185, 185, 185, 185, 187, 187, 187,
	187, 187, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 189, 189, 189,
	189, 189, 189, 189, 189, 202, 202, 190, 190, 196,
	196, 197, 197, 197, 199, 199, 200, 200, 158, 158,
	158, 192, 192, 193, 193, 198, 198, 194, 194, 194,
	195, 195, 195, 201, 201, 201, 201, 201, 191, 191,
	204, 225, 225, 224, 224, 221, 221, 221, 221, 211,
	211, 218, 218, 218, 218, 218, 218, 208, 208, 208,
	209, 209, 207, 207, 210, 210, 220, 220, 219, 205,
	205, 206, 206, 227, 227, 227, 227, 227, 228, 240,
	241, 239, 239, 239, 239, 239, 159, 159, 159, 215,
	215, 215, 216, 216, 216, 217, 217, 217, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 231,
	229, 229, 230, 230, 17, 23, 23, 18, 18, 18,
	18, 18, 19, 19, 26, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 151, 151, 242, 242, 153,
	153, 149, 149, 152, 152, 150, 150, 150, 154, 154,
	154, 155, 155, 181, 181, 181, 28, 28, 30, 30,
	31, 32, 32, 175, 175, 176, 176, 33, 34, 41,
	41, 41, 41, 41, 41, 43, 43, 43, 7, 7,
	7, 7, 38, 38, 38, 6, 6, 29, 29, 29,
	29, 20, 248, 36, 37, 37, 48, 48, 48, 44,
	44, 44, 47, 47, 47, 52, 52, 54, 54, 54,
	54, 54, 55, 55, 55, 55, 55, 55, 51, 51,
	53, 53, 53, 53, 168, 168, 168, 167, 167, 62,
	62, 63, 63, 64, 64, 65, 65, 65, 102, 79,
	79, 133, 133, 132, 132, 135, 135, 66, 66, 66,
	66, 67, 67, 68, 68, 69, 69, 174, 174, 173,
	173, 173, 172, 172, 72, 72, 72, 74, 73, 73,
	73, 73, 75, 75, 77, 77, 76, 76, 78, 80,
	80, 80, 80, 80, 81, 81, 61, 61, 61, 61,
	61, 61, 61, 61, 146, 146, 83, 83, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 94, 94,
	94, 94, 94, 94, 84, 84, 84, 84, 84, 84,
	84, 50, 50, 95, 95, 95, 101, 96, 96, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 91, 91, 91, 91, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 249, 249, 93, 92,
	92, 92, 92, 92, 92, 92, 46, 46, 46, 46,
	46, 179, 179, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 106, 106, 45, 45,
	104, 104, 105, 107, 107, 103, 103, 103, 86, 86,
	86, 86, 86, 86, 86, 86, 88, 88, 88, 108,
	108, 109, 109, 110, 110, 111, 111, 112, 113, 113,
	113, 114, 114, 114, 114, 226, 226, 226, 226, 226,
	222, 222, 222, 222, 223, 223, 223, 56, 56, 56,
	56, 58, 58, 57, 57, 39, 39, 40, 40, 40,
	59, 59, 60, 60, 60, 60, 130, 130, 130, 115,
	115, 115, 115, 120, 120, 120, 116, 116, 118, 118,
	118, 119, 119, 119, 117, 123, 123, 125, 125, 124,
	124, 122, 122, 127, 127, 126, 126, 121, 121, 85,
	85, 85, 85, 85, 131, 131, 131, 131, 136, 136,
	97, 97, 99, 99, 98, 100, 137, 137, 140, 138,
	138, 141, 141, 141, 141, 141, 139, 139, 139, 169,
	169, 169, 145, 145, 156, 156, 157, 157, 147, 147,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	148, 148, 148, 161, 161, 161, 162, 162, 128, 128,
	128, 128, 129, 129, 165, 165, 166, 166, 170, 170,
	171, 171, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 163, 163,
	163, 163, 163, 163, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 164, 164, 164, 164,
	164, 164, 164, 245, 246, 177, 178, 178, 178,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 2, 3, 5, 6, 6, 7,
	4, 6, 5, 7, 8, 1, 3, 7, 8, 1,
	1, 9, 9, 8, 7, 7, 1, 1, 1, 3,
	1, 3, 0, 4, 3, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 2,
	6, 5, 5, 5, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 4, 8, 7, 4, 2, 4,
	1, 1, 3, 4, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 0, 1, 1, 2, 2, 3, 2, 3, 0,
	1, 2, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 10, 11, 11, 12, 1, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 6, 7,
	7, 7, 7, 4, 5, 4, 4, 7, 5, 5,
	5, 12, 7, 5, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 3, 8, 8, 3, 3, 5, 4, 6, 5,
	4, 4, 3, 2, 3, 4, 4, 3, 4, 4,
	4, 4, 4, 4, 3, 3, 3, 2, 7, 2,
	3, 4, 5, 7, 5, 4, 2, 4, 4, 3,
	3, 5, 2, 3, 3, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	3, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 0, 2, 4, 0,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 4, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 3, 0, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -243, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -26, -27, -28, -30,
	-31, -32, -33, -34, -6, -29, -20, -21, -35, -4,
	-245, 6, 7, 8, -42, 10, 11, 31, -22, -24,
	-25, 146, 147, 149, 148, 182, 150, 175, 70, 207,
	208, 210, 211, 212, 213, -43, 180, 181, 32, 33,
	152, 35, 41, 80, 9, 301, 177, 176, 26, -244,
	403, -48, 5, -110, 16, -3, -36, -248, -36, -36,
	-36, -36, -36, -36, -212, -214, 80, 119, 80, -133,
	80, 292, 153, 154, -148, -49, 314, 100, -148, 156,
	292, 153, 266, 154, 154, 155, 156, 292, 153, 154,
	-76, -170, -235, -164, 83, 84, 85, 311, 168, 343,
	344, 76, 207, 221, 215, 242, 234, 312, 345, 169,
	195, 232, 235, 279, 166, 346, 262, 269, 94, 210,
	288, 347, 75, 47, 40, 178, 230, 226, 196, 348,
	320, 224, 46, 28, 45, 349, 271, 247, 44, 350,
	79, 316, 273, 225, 270, 152, 351, 171, 399, 164,
	352, 248, 252, 353, 280, 48, 354, 355, 356, 74,
	219, 220, 357, 204, 167, 282, 246, 165, 34, 274,
	313, 54, 186, 283, 42, 250, 41, 205, 358, 245,
	241, 49, 359, 360, 361, 362, 244, 218, 240, 202,
	58, 254, 253, 255, 278, 237, 363, 364, 365, 172,
	77, 366, 227, 19, 367, 368, 197, 369, 52, 370,
	371, 286, 181, 372, 50, 37, 184, 373, 374, 375,
	376, 377, 378, 272, 249, 251, 161, 188, 268, 315,
	379, 284, 223, 380, 173, 185, 180, 287, 174, 381,
	382, 383, 384, 385, 386, 387, 211, 39, 388, 389,
	390, 391, 206, 200, 281, 290, 57, 78, 259, 392,
	217, 163, 198, 393, 208, 51, 192, 264, 203, 43,
	238, 187, 394, 395, 228, 229, 243, 216, 239, 209,
	400, 189, 182, 396, 289, 199, 260, 317, 236, 233,
	193, 397, 156, 190, 191, 398, 401, 275, 265, 276,
	277, 266, 194, 285, 231, 261, 154, 137, 235, 279,
	146, 263, 274, 275, 271, -153, 272, 188, -181, 154,
	-149, 262, 265, 266, 194, -242, -235, 273, 281, 280,
	267, 277, 276, -170, 209, -175, 214, -165, -235, -164,
	212, -76, -41, 399, 150, -177, -177, 264, 264, -177,
	-96, -61, -82, 103, -87, 30, 24, -86, -83, -103,
	-100, -101, 137, 138, 140, 139, 141, 126, 127, 134,
	104, 142, -91, -89, -90, -92, 87, 86, 95, 88,
	89, 90, 91, 96, 97, 98, -165, -170, -98, -245,
	64, 65, 302, 303, 304, 305, 310, 306, 106, 53,
	291, 300, 299, 298, 295, 296, 293, 294, 308, 309,
	159, 292, 153, 132, 301, -235, -164, 40, -5, -4,
	-245, 6, 21, 22, -114, 18, 17, -246, 82, -44,
	-54, 59, 60, -55, 22, 36, 63, 61, -37, -53,
	128, -61, -170, -53, -147, 158, -147, -147, -138, -180,
	209, -141, 281, 280, -166, -139, -165, -163, 279, 235,
	278, 151, 318, 102, 23, 25, 257, 105, 137, 17,
	106, 136, 302, 146, 68, 319, 293, 294, 291, 297,
	304, 305, 292, 263, 30, 11, 321, 26, 176, 22,
	36, 130, 148, 109, 110, 179, 24, 177, 98, 324,
	20, 71, 12, 14, 325, 326, 15, 159, 158, 121,
	155, 66, 9, 142, 27, 118, 62, 327, 29, 328,
	329, 330, 331, 64, 119, 18, 295, 296, 32, 332,
	310, 183, 132, 69, 55, 103, 333, 334, 96, 335,
	99, 72, 100, 16, 67, 38, 336, 337, 338, 339,
	120, 149, 301, 65, 340, 153, 6, 307, 31, 175,
	63, 341, 154, 108, 308, 309, 157, 97, 5, 160,
	33, 10, 70, 73, 298, 299, 300, 53, 314, 107,
	13, 342, 101, -213, 119, -203, -206, -165, 170, -228,
	166, -76, -220, -219, -165, 23, -132, -165, -157, 159,
	-157, -157, -128, 160, 163, 164, -56, 76, 87, 301,
	154, -76, -235, -235, 146, 148, 151, 72, -23, -76,
	-156, 159, -235, -156, -156, -156, -76, 143, -76, -235,
	31, -154, 119, 13, 292, -235, 188, 154, 189, 156,
	-155, 119, -155, -155, -208, 155, 34, 167, -178, -245,
	-166, 192, 193, 192, -152, -151, 269, 270, 264, 268,
	13, 193, 264, 191, -154, -178, 157, -165, -38, -165,
	87, -7, -3, -11, -10, -12, 111, -177, -177, 81,
	102, 100, 101, 118, -61, -84, 121, 103, 119, 120,
	105, 123, 122, 133, 126, 127, 128, 129, 130, 131,
	132, 124, 125, 136, 111, 112, 113, 114, 115, 116,
	117, -146, -245, -101, -245, 144, 145, -87, -87, -87,
	-87, -87, -87, -87, -87, -87, -87, -245, 143, -2,
	-96, -4, -245, -245, -245, -245, -245, -245, -245, -245,
	-106, -61, -245, -249, -93, -245, -249, -93, -249, -93,
	-249, -245, -249, -93, -249, -93, -249, -249, -93, -245,
	-245, -245, -245, -245, -245, -245, -177, -110, -3, -36,
	-130, 20, 32, -61, -111, -112, -61, -110, 55, -51,
	-53, -55, 59, 60, 93, 12, -168, -167, 23, -165,
	87, 143, 12, -77, 27, -76, -63, -64, -65, -66,
	-79, -102, -245, -76, 12, -70, -71, -76, -78, -170,
	81, 209, -141, -180, -143, -142, 282, 284, 111, -169,
	-165, 87, 30, 31, 82, 81, -76, -183, -186, -188,
	-187, -189, -184, -185, 232, 233, 137, 236, 238, 239,
	240, 241, 242, 243, 244, 245, 246, 247, 31, 178,
	228, 229, 230, 231, 248, 249, 250, 251, 252, 253,
	254, 255, 215, 234, 312, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 227, -235, 80, 82, 81,
	-190, 80, -3, 82, 81, -235, 103, -235, -76, 155,
	-59, 196, 111, 87, -76, -178, -178, -178, 190, 190,
	154, 154, 200, -76, 81, 157, -70, 24, 72, -76,
	-235, -235, -171, -170, -163, -178, -154, 87, -61, -178,
	-178, -178, -76, -178, -178, 87, -209, 12, 121, -178,
	-178, -150, 12, 121, -209, -150, -61, -155, 72, -176,
	212, 246, 400, 401, 402, -61, -61, -61, -61, -94,
	96, 103, 97, 98, -87, -95, -98, -101, 92, 121,
	119, 120, 105, -87, -87, -87, -87, -87, -87, -87,
	-87, -87, -87, -87, -87, -87, -87, -87, -179, -235,
	87, -235, -86, -86, -165, -52, 22, 36, -51, -166,
	-171, -163, -48, -246, -246, -110, -51, -51, -61, -61,
	-103, 87, -51, -103, 87, -51, -51, -47, 22, 36,
	-104, -105, 107, -103, -165, -170, -246, -87, -165, -165,
	-51, -52, -52, -51, -51, -114, -246, -115, 27, 10,
	121, 81, 19, 81, -113, 25, 26, -114, -88, -165,
	88, 91, -62, 81, 12, -55, -76, -167, 128, -171,
	-76, -134, 184, -76, 31, 81, -72, -74, -73, -75,
	62, 66, 68, 63, 64, 65, 69, -174, 23, -63,
	-3, -245, -173, 184, -172, 23, -170, 87, -76, -70,
	-247, 81, 12, 73, -247, 81, 143, -141, -143, 81,
	283, 285, 286, 72, 99, -61, -195, 136, -215, -216,
	-217, -166, 87, 88, -203, -204, -205, -218, 170, -227,
	161, 163, 164, 160, -207, 171, -228, 155, 29, 82,
	-158, 96, 103, -199, 260, -190, -190, -190, -190, -190,
	-194, 235, -194, -194, -194, 80, 80, -190, -190, -190,
	-190, -196, 80, -196, -196, -197, 80, -197, -228, 166,
	-61, -225, -224, -221, 73, 165, 94, 314, -219, -113,
	88, -39, 314, -165, -178, 24, -178, -235, -58, 198,
	111, 199, 202, 203, -160, 151, 148, 149, -231, 147,
	257, 235, 94, 30, 16, 302, 184, 317, -235, 185,
	-76, -76, -76, -76, -76, 151, 148, -76, -76, -76,
	-178, -76, -154, -170, -170, -76, -154, -76, -165, 96,
	97, 98, -95, -87, -87, -87, -50, 179, 102, -246,
	-246, -51, -51, -245, 143, -5, -114, -246, -246, 81,
	73, 23, 12, 12, -246, 12, 12, -246, -246, -51,
	-107, -105, 109, -61, -246, 143, -246, 81, 81, -246,
	-246, -246, -246, -246, -130, 38, 46, 57, -61, -61,
	-112, -130, -145, 20, 12, 53, 53, -81, 13, -53,
	-63, -55, 143, -81, -85, 31, 53, -3, -245, -245,
	-137, -140, -103, -64, -65, -65, -64, -65, 62, 62,
	62, 67, 62, 67, 62, -73, -170, -246, -246, -3,
	-80, 70, 158, 71, -245, -172, -134, 73, -63, -76,
	-63, -78, -170, 128, -142, -144, 287, 284, 290, -235,
	87, 81, -217, 111, -206, 80, -235, 29, -207, -207,
	-207, -210, -235, -210, 29, -192, 30, 96, -200, 261,
	-194, -194, -195, 31, -195, -195, -195, -202, 87, -202,
	88, 88, 82, -226, -222, -223, 32, 76, -221, -235,
	-211, 111, 87, 37, 82, -40, 195, 205, -129, 73,
	156, 206, -60, 297, 87, 83, -177, -238, 166, 162,
	170, 171, 164, 83, 84, 85, 155, 29, 161, 163,
	184, 160, -238, -161, -162, 157, 23, 155, 29, 184,
	-237, 73, 190, 257, 190, 157, -178, -150, -150, -50,
	102, -87, -87, -246, -246, -52, -166, -110, -130, -182,
	137, 232, 178, 230, 226, 246, 237, 259, 228, 260,
	-179, -182, -87, -87, -87, -87, 311, -110, 110, -61,
	108, -166, -87, -87, 39, 87, 87, 58, -76, -108,
	14, -61, 128, -114, -136, 72, -137, -97, -99, -98,
	-245, -131, -246, -165, -135, -165, -81, 81, 111, -68,
	-67, 72, 73, -69, 72, -67, 62, 62, -246, 155,
	155, 155, -135, -81, -63, -81, -81, 143, 284, 288,
	289, -216, -217, -220, -227, 171, -210, -210, -210, 80,
	-193, 72, -87, -195, -195, -235, 137, 82, 81, 82,
	81, 82, 81, -159, 349, 103, -223, -222, -211, -211,
	88, 87, 166, 72, -165, -76, -57, 196, 204, 80,
	84, -177, -177, -76, -177, -165, -234, 314, -236, -235,
	-165, -165, -165, -76, -154, -154, -87, -246, -114, -246,
	-190, -190, -190, -197, -190, 220, -190, 220, -246, -246,
	20, 20, 20, 20, -245, -45, 307, -61, 81, 81,
	87, -194, -109, 15, 17, 28, -136, 81, -246, -246,
	81, 53, 143, -246, 81, -110, -140, -61, -61, 80,
	-61, -245, -245, -245, -246, -110, -81, 82, -132, -198,
	257, 10, -194, 87, -194, 88, 88, 349, 30, 77,
	78, 79, 30, 74, 75, 197, -76, 82, 27, -233,
	-232, -166, 80, 73, -130, -194, -235, -87, -87, -87,
	-87, -87, -114, 87, -87, -87, -194, -117, -122, -152,
	-61, -96, 29, -99, 53, -3, -165, -97, -165, -165,
	-114, -132, -132, -246, -132, -132, -173, -114, -225, 82,
	-201, 161, 29, 160, -90, -195, -195, 82, 82, -245,
	81, 111, -132, -76, -246, -246, -246, -246, -46, 121,
	314, -246, -246, -246, -120, 399, -123, 42, -124, 43,
	10, -97, 143, 82, -246, -246, -246, -80, 173, -191,
	94, 29, 29, -229, -230, 184, -232, -217, 82, -246,
	312, 69, 315, -117, 47, 238, -125, 51, -126, -121,
	52, 17, -137, -165, -76, 87, -246, 81, -165, -237,
	58, 313, 316, -118, 49, -116, 48, -116, -124, 17,
	-127, 44, 45, 87, 80, -230, 53, -234, 58, -119,
	50, 72, 99, 87, 17, 17, -132, 186, 314, 72,
	99, 87, 87, 82, 187, 315, -240, -241, 72, -245,
	316, -241, 72, 11, 10, -87, 183, -239, 174, 169,
	172, 31, -239, -246, -246, 168, 30, 96,
}
var yyDef = [...]int{

	30, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 643,
	0, 382, 382, 382, 382, 382, 382, 382, 0, 0,
	431, -2, 770, 0, 0, 0, 0, -2, 347, 348,
	0, 350, -2, 0, 0, 359, 1125, 1125, 0, 0,
	1125, 0, 0, 1123, 49, 50, 365, 366, 367, 1,
	3, 0, 386, 651, 0, 0, -2, 384, 0, 0,
	758, 758, 758, 0, 78, 79, 0, 0, 0, 0,
	0, 756, 756, 756, 778, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 754, 0, 754, 754, 754, 0,
	293, 466, 788, 789, 31, 32, 33, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 0, 0, 0, 338,
	0, 341, 341, 341, 307, 0, 309, 1126, 0, 0,
	0, 316, 0, 0, 322, 338, 1126, 330, 344, 345,
	332, 327, 328, 346, 349, 0, 354, 357, 784, 785,
	0, 372, 0, 965, 364, 377, 378, 1125, 1125, 381,
	34, 517, 476, 0, 482, 484, 0, 519, 520, 521,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 550, 551, 552, 628, 629, 630, 631,
	632, 633, 634, 635, 486, 487, 625, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 616, 0,
	586, 586, 586, 586, 586, 586, 586, 586, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 1125, 643, 45,
	0, 382, 387, 388, 686, 0, 0, 643, 1124, 0,
	0, -2, -2, 398, 404, 405, 406, 407, 383, 0,
	410, 414, 0, 0, 0, 759, 0, 0, 64, 0,
	1096, 739, -2, -2, 0, 0, 786, 787, -2, 929,
	-2, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 0, 0, 100, 101, 0, 0, 222,
	931, 98, 0, 216, 157, 0, 0, 433, 0, 0,
	0, 0, 0, 779, 780, 781, 680, 0, 771, 85,
	0, 1126, 1126, 1126, 0, 0, 0, 0, 284, 0,
	0, 0, 0, 0, 0, 0, 292, 0, 294, 1126,
	338, 297, 0, 0, 1126, 1126, 1126, 0, 1126, 1126,
	304, 0, 305, 306, 0, 207, 208, 209, 310, 1127,
	1128, 1126, 1126, 335, 0, 335, 333, 334, 325, 326,
	0, 341, 319, 320, 323, 324, 355, 358, 375, 373,
	374, 376, 368, 369, 370, 371, 0, 379, 380, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 504, 505, 506, 507, 508, 509,
	510, 483, 0, 497, 0, 0, 0, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 0, 395, 0, 0,
	0, 643, 0, 0, 0, 0, 0, 0, 0, 392,
	0, 617, 0, 570, 578, 0, 571, 579, 572, 580,
	573, 0, 574, 581, 575, 582, 576, 577, 583, 0,
	0, 0, 395, 395, 0, 0, 35, 651, 0, 397,
	689, 0, 0, 652, 644, 645, 648, 651, 0, 419,
	408, 399, 402, 403, 385, 0, 411, 415, 0, 417,
	418, 0, 0, 62, 0, 465, 0, 421, 423, 424,
	425, 447, 0, 449, 0, 0, 0, 58, 60, 466,
	0, 1096, 745, 0, 66, 67, 0, 0, 0, 180,
	749, 750, 751, 747, 239, 0, 0, 168, 164, 108,
	109, 110, 157, 112, 157, 157, 157, 157, 177, 177,
	177, 177, 140, 141, 142, 143, 144, 0, 0, 127,
	157, 157, 157, 157, 147, 148, 149, 150, 151, 152,
	153, 154, 113, 114, 115, 116, 117, 118, 119, 120,
	121, 159, 159, 159, 161, 161, 0, 0, 191, 0,
	648, 0, 675, 432, 0, 1126, 0, 1126, 94, 0,
	671, 0, 0, 772, 0, 253, 255, 256, 0, 0,
	0, 0, 0, 0, 0, 0, 287, 755, 0, 1126,
	290, 291, 467, 790, 791, 295, 296, 339, 340, 298,
	299, 300, 301, 302, 303, 342, 0, 210, 211, 311,
	315, 338, 0, 0, 0, 338, 317, 318, 0, 0,
	356, 360, 361, 362, 363, 518, 477, 478, 479, 481,
	498, 0, 500, 502, 488, 489, 513, 514, 515, 0,
	0, 0, 0, 511, 493, 0, 524, 525, 526, 527,
	528, 529, 530, 531, 532, 533, 534, 535, 538, 601,
	602, 0, 536, 537, 548, 0, 0, 0, 396, 626,
	0, -2, 0, 516, 734, 651, 0, 0, 0, 0,
	521, 628, 0, 521, 628, 0, 0, 0, 393, 394,
	623, 620, 0, 0, 625, 0, 587, 0, 0, 0,
	0, 0, 0, 0, 0, 686, 46, 36, 0, 687,
	0, 0, 0, 0, 647, 649, 650, 686, 0, 636,
	0, 0, 474, 0, 0, 400, 42, 416, 412, 0,
	474, 0, 0, 464, 0, 0, 0, 0, 0, 0,
	454, 0, 0, 457, 0, 0, 0, 0, 448, 0,
	0, 0, 469, 1033, 450, 0, 452, 453, -2, 0,
	0, 0, 56, 57, 0, 0, 0, 740, 65, 0,
	0, 70, 71, 741, 742, 743, 744, 0, 97, 240,
	242, 245, 246, 247, 102, 104, 105, 0, 0, 220,
	1043, 1078, 966, 214, 214, 964, 227, 212, 213, 99,
	171, 169, 0, 166, 165, 111, 177, 177, 134, 135,
	180, 0, 180, 180, 180, 0, 0, 128, 129, 130,
	131, 122, 0, 123, 124, 125, 0, 126, 221, 0,
	0, 655, 192, 193, 0, 199, 0, 0, 217, 218,
	0, 81, 677, 434, 82, 757, 83, 782, 0, 0,
	0, 668, 669, 670, 1125, 0, 0, 773, 254, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 0,
	86, 258, 260, 259, 263, 0, 0, 0, 285, 1126,
	289, 335, 312, 336, 337, 335, 314, 321, 352, 499,
	501, 503, 490, 511, 494, 0, 491, 0, 0, 485,
	553, 0, 0, 395, 0, 643, 686, 557, 558, 0,
	0, 0, 0, 0, 594, 0, 0, 595, 0, 643,
	0, 621, 0, 0, 569, 0, 588, 0, 0, 589,
	590, 591, 592, 593, 38, 0, 0, 0, 653, 654,
	646, 37, 0, 752, 753, 637, 638, 639, 0, 409,
	420, 401, 0, 651, 728, 0, 0, 720, 0, 0,
	474, 736, 0, 422, 443, 445, 0, 440, 455, 456,
	458, 0, 460, 0, 462, 463, 426, 427, 428, 0,
	429, 0, 0, 0, 0, 451, 474, 0, 474, 59,
	474, 61, 0, 468, 68, 69, 0, 0, 75, 181,
	182, 0, 243, 0, 103, 0, 0, 201, 214, 214,
	214, 205, 215, 206, 0, 173, 0, 170, 107, 167,
	180, 180, 136, 0, 137, 138, 139, 0, 155, 0,
	0, 0, 236, 80, 659, 658, 199, 199, 194, 195,
	0, 200, 197, 0, 158, 0, 678, 679, 0, 0,
	0, 0, 681, 682, 0, 685, 248, 1125, 265, 266,
	267, 268, 269, 270, 271, 272, 273, 274, 275, 276,
	277, 278, 1125, 0, 1125, 774, 775, 776, 777, 0,
	89, 0, 0, 0, 0, 0, 288, 338, 338, 492,
	0, 512, 495, 554, 555, 0, 627, 651, 40, 0,
	157, 157, 606, 157, 161, 609, 157, 611, 157, 614,
	0, 0, 0, 0, 0, 0, 0, 618, 568, 624,
	0, 626, 0, 0, 0, 177, 691, 688, 39, 641,
	0, 475, 413, 43, 47, 0, 728, 719, 730, 732,
	0, 0, 0, 724, 0, 435, 643, 0, 0, 437,
	444, 0, 0, 438, 0, 439, 459, 461, -2, 0,
	0, 0, 0, 643, 474, 54, 55, 0, 72, 73,
	74, 241, 244, 0, 219, 0, 202, 203, 204, 0,
	175, 0, 172, 132, 133, 178, 179, 177, 0, 177,
	0, 162, 0, 228, 237, 0, 656, 657, 0, 0,
	196, 198, 0, 0, 783, 96, 672, 673, 674, 0,
	684, 249, 250, 251, 252, 0, 257, 0, 87, 88,
	0, 0, 262, 286, 308, 313, 496, 556, 686, 559,
	603, 177, 607, 608, 610, 612, 613, 615, 561, 560,
	0, 0, 0, 0, 0, 651, 0, 622, 0, 0,
	177, 711, 44, 0, 0, 0, 48, 0, 733, 0,
	0, 0, 0, 63, 0, 651, 737, 738, 441, 0,
	446, 0, 0, 0, 449, 651, 53, 191, 0, 183,
	176, 0, 180, 156, 180, 0, 0, 238, 660, 661,
	662, 663, 664, 665, 666, 676, 95, 683, 0, 90,
	91, 0, 0, 0, 41, 604, 605, 0, 0, 0,
	0, 596, 0, 619, 0, 0, 693, 692, 705, 709,
	642, 640, 0, 731, 0, 723, 726, 722, 725, 436,
	51, 0, 0, 471, 0, 0, 469, 52, 190, 0,
	188, 0, 185, 187, 174, 145, 146, 160, 163, 0,
	0, 0, 0, 264, 562, 564, 563, 565, 0, 0,
	0, 567, 584, 585, 711, 0, 704, 707, -2, 0,
	0, 721, 0, 442, 470, 472, 473, 430, 0, 106,
	0, 184, 186, 0, 280, 0, 92, 93, 86, 566,
	0, 0, 0, 698, 696, 696, 709, 0, 713, 0,
	718, 0, 729, 727, 0, 189, 279, 0, 0, 89,
	597, 0, 600, 701, 0, 694, 697, 695, 706, 0,
	712, 0, 0, 710, 0, 281, 0, 261, 598, 690,
	0, 699, 700, 708, 0, 0, 0, 0, 0, 702,
	703, 714, 716, 223, 0, 0, 224, 225, 0, 0,
	599, 226, 0, 0, 0, 0, 0, 229, 231, 232,
	0, 0, 230, 282, 283, 233, 234, 235,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 403,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:368
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:373
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:374
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:378
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:407
		{
			setParseTree(yylex, nil)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:427
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:433
		{
			yyVAL.statement = &Load{}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:439
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 37:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:448
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 38:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:452
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:456
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 40:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:479
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:487
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:493
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:499
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:507
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:513
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:517
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:524
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:536
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:548
		{
			yyVAL.insertAction = InsertAct
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 51:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:558
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:564
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 55:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:576
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:582
		{
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:590
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:600
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:605
		{
			yyVAL.partitions = nil
		}
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:609
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:635
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:645
		{
			yyVAL.characteristic = ReadWrite
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:649
		{
			yyVAL.characteristic = ReadOnly
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:655
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:667
		{
			yyVAL.isolationLevel = Serializable
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:673
		{
			yyVAL.scope = SessionScope
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.scope = GlobalScope
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:688
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:694
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:701
		{
			yyDollar[1].createView.FullyParsed = true
			yyDollar[1].createView.Columns = yyDollar[2].columns
			yyDollar[1].createView.Select = yyDollar[4].selStmt
			yyDollar[1].createView.CheckOption = yyDollar[5].str
			yyVAL.statement = yyDollar[1].createView
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:709
		{
			yyVAL.statement = &DBDDL{Action: CreateDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:713
		{
			yyVAL.statement = &DBDDL{Action: CreateDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:718
		{
			yyVAL.boolean = false
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.boolean = true
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:727
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:731
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:737
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:742
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:747
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:758
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:764
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:770
		{
			yyVAL.ddl = &DDL{Action: CreateDDLAction, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:777
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[3].str, Name: yyDollar[5].colIdent, IndexType: yyDollar[6].str, Table: yyDollar[8].tableName, OnlineHint: yyDollar[2].OnlineDDLHint}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:784
		{
			yyVAL.createView = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str}
			setDDL(yylex, yyVAL.createView)
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:792
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:803
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:819
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:823
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:828
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:832
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:838
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:849
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:860
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:865
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:915
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:927
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:933
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1015
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1065
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1070
		{
			yyVAL.literal = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1074
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1079
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1083
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1091
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1095
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1101
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1109
		{
			yyVAL.boolean = false
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.boolean = true
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1118
		{
			yyVAL.boolean = false
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.boolean = true
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1128
		{
			yyVAL.boolean = false
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.boolean = false
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.boolean = true
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1141
		{
			yyVAL.optVal = nil
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1150
		{
			yyVAL.optVal = nil
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1159
		{
			yyVAL.boolean = false
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.boolean = true
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1176
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = ""
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1194
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.colKeyOpt = colKey
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1215
		{
			yyVAL.literal = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1219
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1225
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.indexOptions = nil
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1240
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1244
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1254
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1269
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1291
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1299
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1313
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1334
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1339
		{
			yyVAL.str = ""
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1353
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1375
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 223:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1385
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 224:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1389
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 225:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1393
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 226:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1397
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1407
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1419
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1433
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1437
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1441
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1446
		{
			yyVAL.boolean = true
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.boolean = true
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1454
		{
			yyVAL.boolean = false
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = yyDollar[1].str
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1503
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 249:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1507
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 250:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1511
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 251:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1515
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 252:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1520
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1525
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1529
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1533
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1537
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 257:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1541
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1553
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1563
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1567
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1571
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1584
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1598
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 279:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1627
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1637
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 282:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1643
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1647
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1659
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1663
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1671
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1675
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1680
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1684
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1688
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1698
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1703
		{
			yyVAL.statement = &OtherRead{}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1709
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1714
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1729
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1733
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1741
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1745
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1749
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1754
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1759
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1768
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1781
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1785
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1789
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1793
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1803
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1811
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1815
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1820
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1832
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1837
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1851
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1871
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = "extended "
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1891
		{
			yyVAL.str = "full "
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1901
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1921
		{
			yyVAL.showFilter = nil
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1935
		{
			yyVAL.showFilter = nil
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1939
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1945
		{
			yyVAL.scope = ImplicitScope
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.scope = SessionScope
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.scope = GlobalScope
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1959
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statement = &Begin{}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statement = &Begin{}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.statement = &Commit{}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1985
		{
			yyVAL.statement = &Rollback{}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1989
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1994
		{
			yyVAL.empty = struct{}{}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.empty = struct{}{}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1999
		{
			yyVAL.empty = struct{}{}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2001
		{
			yyVAL.empty = struct{}{}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2012
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2017
		{
			yyVAL.explainType = EmptyType
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.explainType = JSONType
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.explainType = TreeType
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2029
		{
			yyVAL.explainType = VitessType
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.explainType = TraditionalType
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2037
		{
			yyVAL.explainType = AnalyzeType
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = ""
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &OtherRead{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2092
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2116
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2120
		{
			setAllowComments(yylex, true)
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2124
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2130
		{
			yyVAL.bytes2 = nil
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2134
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.boolean = true
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.boolean = false
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2148
		{
			yyVAL.boolean = true
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2161
		{
			yyVAL.str = SQLCacheStr
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2166
		{
			yyVAL.boolean = false
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.boolean = true
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2174
		{
			yyVAL.boolean = true
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2179
		{
			yyVAL.selectExprs = nil
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2188
		{
			yyVAL.strs = nil
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2196
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2200
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2204
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = SQLCacheStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = DistinctStr
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = DistinctStr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = StraightJoinHint
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2258
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2263
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2271
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2283
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2287
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2331
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.columns = nil
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2340
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2360
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2373
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2377
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2381
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2391
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2393
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2397
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2403
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2408
		{
			yyVAL.empty = struct{}{}
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.empty = struct{}{}
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2413
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2417
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2421
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2434
		{
			yyVAL.joinType = NormalJoinType
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2438
		{
			yyVAL.joinType = NormalJoinType
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.joinType = NormalJoinType
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.joinType = StraightJoinType
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.joinType = LeftJoinType
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.joinType = LeftJoinType
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.joinType = RightJoinType
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.joinType = RightJoinType
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2472
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2476
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2500
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2506
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2511
		{
			yyVAL.indexHints = nil
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2515
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2519
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2523
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2527
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2532
		{
			yyVAL.expr = nil
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2536
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2550
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2554
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2562
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2566
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2576
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2580
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2590
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2596
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2600
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 490:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2604
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2608
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 492:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2612
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2616
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2620
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2624
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2628
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2632
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2638
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2642
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2646
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2650
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2654
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2658
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2664
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2672
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2676
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2680
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2684
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2688
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2693
		{
			yyVAL.expr = nil
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2727
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2753
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2757
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2761
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2765
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2769
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2773
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2777
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2793
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2797
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2801
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2813
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2817
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2821
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2833
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2863
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2881
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 554:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2885
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 555:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2889
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2893
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2911
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2915
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2919
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2923
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 563:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2927
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 564:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2931
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 565:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2935
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 566:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2939
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 567:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2943
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2961
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2974
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2979
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2990
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3000
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3008
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 584:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3027
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 585:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3031
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3051
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3055
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3059
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3081
		{
			yyVAL.matchExprOption = NoOption
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3089
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 599:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3093
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3097
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3103
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3107
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3113
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3117
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3121
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3125
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3129
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3133
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3143
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3151
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3155
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3168
		{
			yyVAL.expr = nil
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = string("")
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3191
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3197
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3202
		{
			yyVAL.expr = nil
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3206
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3216
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 627:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3220
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3234
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3238
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3242
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3254
		{
			yyVAL.expr = &NullVal{}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3260
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3278
		{
			yyVAL.exprs = nil
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3287
		{
			yyVAL.expr = nil
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3296
		{
			yyVAL.orderBy = nil
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3300
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3306
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3321
		{
			yyVAL.orderDirection = AscOrder
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.orderDirection = AscOrder
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.orderDirection = DescOrder
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3334
		{
			yyVAL.limit = nil
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3338
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3342
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 654:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3346
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3351
		{
			yyVAL.indexOptions = nil
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3355
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3374
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3378
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3382
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3386
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3392
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3405
		{
			yyVAL.str = ""
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3417
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3422
		{
			yyVAL.str = ""
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.str = yyDollar[3].str
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3441
		{
			yyVAL.str = ""
		}
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = yyDollar[2].str
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = "cascaded"
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3463
		{
			yyVAL.str = ""
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.str = yyDollar[3].str
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3490
		{
			yyVAL.lock = NoLock
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			yyVAL.lock = ForUpdateLock
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3498
		{
			yyVAL.lock = ShareModeLock
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3503
		{
			yyVAL.selectInto = nil
		}
	case 690:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3507
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3511
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3515
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3537
		{
			yyVAL.str = " header"
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3546
		{
			yyVAL.str = " manifest on"
		}
	case 700:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3550
		{
			yyVAL.str = " manifest off"
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3559
		{
			yyVAL.str = " overwrite on"
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3563
		{
			yyVAL.str = " overwrite off"
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3574
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3592
		{
			yyVAL.str = ""
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3596
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 711:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3601
		{
			yyVAL.str = ""
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3605
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3610
		{
			yyVAL.str = ""
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3614
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = ""
		}
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = ""
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.str = " optionally"
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3645
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3649
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 721:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3653
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3657
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3661
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3667
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3671
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3675
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3679
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3684
		{
			yyVAL.updateExprs = nil
		}
	case 729:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3688
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3694
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3698
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3708
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3714
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3720
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3730
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3734
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3740
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3750
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3760
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3764
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3768
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3772
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3780
		{
			yyVAL.bytes = []byte("charset")
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.expr = &Default{}
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3804
		{
			yyVAL.boolean = false
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.boolean = true
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3809
		{
			yyVAL.boolean = false
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3811
		{
			yyVAL.boolean = true
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.ignore = false
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.ignore = true
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3828
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3842
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{}
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3846
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
			}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
				Options:  string(yyDollar[3].bytes),
			}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3860
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = ""
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3882
		{
			yyVAL.str = ""
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3884
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3899
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3905
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4272
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			decNesting(yylex)
		}
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			skipToEnd(yylex)
		}
	case 1126:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4291
		{
			skipToEnd(yylex)
		}
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			skipToEnd(yylex)
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
