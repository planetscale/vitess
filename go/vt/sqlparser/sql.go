// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const COMPRESSION = 57435
const NULL = 57436
const TRUE = 57437
const FALSE = 57438
const OFF = 57439
const DISCARD = 57440
const IMPORT = 57441
const ENABLE = 57442
const DISABLE = 57443
const TABLESPACE = 57444
const OR = 57445
const XOR = 57446
const AND = 57447
const NOT = 57448
const BETWEEN = 57449
const CASE = 57450
const WHEN = 57451
const THEN = 57452
const ELSE = 57453
const END = 57454
const LE = 57455
const GE = 57456
const NE = 57457
const NULL_SAFE_EQUAL = 57458
const IS = 57459
const LIKE = 57460
const REGEXP = 57461
const IN = 57462
const SHIFT_LEFT = 57463
const SHIFT_RIGHT = 57464
const DIV = 57465
const MOD = 57466
const UNARY = 57467
const COLLATE = 57468
const BINARY = 57469
const UNDERSCORE_BINARY = 57470
const UNDERSCORE_UTF8MB4 = 57471
const UNDERSCORE_UTF8 = 57472
const UNDERSCORE_LATIN1 = 57473
const INTERVAL = 57474
const JSON_EXTRACT_OP = 57475
const JSON_UNQUOTE_EXTRACT_OP = 57476
const CREATE = 57477
const ALTER = 57478
const DROP = 57479
const RENAME = 57480
const ANALYZE = 57481
const ADD = 57482
const FLUSH = 57483
const CHANGE = 57484
const MODIFY = 57485
const SCHEMA = 57486
const TABLE = 57487
const INDEX = 57488
const VIEW = 57489
const TO = 57490
const IGNORE = 57491
const IF = 57492
const UNIQUE = 57493
const PRIMARY = 57494
const COLUMN = 57495
const SPATIAL = 57496
const FULLTEXT = 57497
const KEY_BLOCK_SIZE = 57498
const CHECK = 57499
const INDEXES = 57500
const ACTION = 57501
const CASCADE = 57502
const CONSTRAINT = 57503
const FOREIGN = 57504
const NO = 57505
const REFERENCES = 57506
const RESTRICT = 57507
const SHOW = 57508
const DESCRIBE = 57509
const EXPLAIN = 57510
const DATE = 57511
const ESCAPE = 57512
const REPAIR = 57513
const OPTIMIZE = 57514
const TRUNCATE = 57515
const MAXVALUE = 57516
const PARTITION = 57517
const REORGANIZE = 57518
const LESS = 57519
const THAN = 57520
const PROCEDURE = 57521
const TRIGGER = 57522
const VINDEX = 57523
const VINDEXES = 57524
const DIRECTORY = 57525
const NAME = 57526
const UPGRADE = 57527
const STATUS = 57528
const VARIABLES = 57529
const WARNINGS = 57530
const CASCADED = 57531
const DEFINER = 57532
const OPTION = 57533
const SQL = 57534
const UNDEFINED = 57535
const SEQUENCE = 57536
const MERGE = 57537
const TEMPTABLE = 57538
const INVOKER = 57539
const SECURITY = 57540
const FIRST = 57541
const AFTER = 57542
const LAST = 57543
const BEGIN = 57544
const START = 57545
const TRANSACTION = 57546
const COMMIT = 57547
const ROLLBACK = 57548
const SAVEPOINT = 57549
const RELEASE = 57550
const WORK = 57551
const BIT = 57552
const TINYINT = 57553
const SMALLINT = 57554
const MEDIUMINT = 57555
const INT = 57556
const INTEGER = 57557
const BIGINT = 57558
const INTNUM = 57559
const REAL = 57560
const DOUBLE = 57561
const FLOAT_TYPE = 57562
const DECIMAL = 57563
const NUMERIC = 57564
const TIME = 57565
const TIMESTAMP = 57566
const DATETIME = 57567
const YEAR = 57568
const CHAR = 57569
const VARCHAR = 57570
const BOOL = 57571
const CHARACTER = 57572
const VARBINARY = 57573
const NCHAR = 57574
const TEXT = 57575
const TINYTEXT = 57576
const MEDIUMTEXT = 57577
const LONGTEXT = 57578
const BLOB = 57579
const TINYBLOB = 57580
const MEDIUMBLOB = 57581
const LONGBLOB = 57582
const JSON = 57583
const ENUM = 57584
const GEOMETRY = 57585
const POINT = 57586
const LINESTRING = 57587
const POLYGON = 57588
const GEOMETRYCOLLECTION = 57589
const MULTIPOINT = 57590
const MULTILINESTRING = 57591
const MULTIPOLYGON = 57592
const NULLX = 57593
const AUTO_INCREMENT = 57594
const APPROXNUM = 57595
const SIGNED = 57596
const UNSIGNED = 57597
const ZEROFILL = 57598
const COLLATION = 57599
const DATABASES = 57600
const SCHEMAS = 57601
const TABLES = 57602
const VITESS_METADATA = 57603
const VSCHEMA = 57604
const FULL = 57605
const PROCESSLIST = 57606
const COLUMNS = 57607
const FIELDS = 57608
const ENGINES = 57609
const PLUGINS = 57610
const EXTENDED = 57611
const KEYSPACES = 57612
const VITESS_KEYSPACES = 57613
const VITESS_SHARDS = 57614
const VITESS_TABLETS = 57615
const CODE = 57616
const PRIVILEGES = 57617
const FUNCTION = 57618
const NAMES = 57619
const CHARSET = 57620
const GLOBAL = 57621
const SESSION = 57622
const ISOLATION = 57623
const LEVEL = 57624
const READ = 57625
const WRITE = 57626
const ONLY = 57627
const REPEATABLE = 57628
const COMMITTED = 57629
const UNCOMMITTED = 57630
const SERIALIZABLE = 57631
const CURRENT_TIMESTAMP = 57632
const DATABASE = 57633
const CURRENT_DATE = 57634
const CURRENT_TIME = 57635
const LOCALTIME = 57636
const LOCALTIMESTAMP = 57637
const CURRENT_USER = 57638
const UTC_DATE = 57639
const UTC_TIME = 57640
const UTC_TIMESTAMP = 57641
const REPLACE = 57642
const CONVERT = 57643
const CAST = 57644
const SUBSTR = 57645
const SUBSTRING = 57646
const GROUP_CONCAT = 57647
const SEPARATOR = 57648
const TIMESTAMPADD = 57649
const TIMESTAMPDIFF = 57650
const MATCH = 57651
const AGAINST = 57652
const BOOLEAN = 57653
const LANGUAGE = 57654
const WITH = 57655
const QUERY = 57656
const EXPANSION = 57657
const WITHOUT = 57658
const VALIDATION = 57659
const UNUSED = 57660
const ARRAY = 57661
const CUME_DIST = 57662
const DESCRIPTION = 57663
const DENSE_RANK = 57664
const EMPTY = 57665
const EXCEPT = 57666
const FIRST_VALUE = 57667
const GROUPING = 57668
const GROUPS = 57669
const JSON_TABLE = 57670
const LAG = 57671
const LAST_VALUE = 57672
const LATERAL = 57673
const LEAD = 57674
const MEMBER = 57675
const NTH_VALUE = 57676
const NTILE = 57677
const OF = 57678
const OVER = 57679
const PERCENT_RANK = 57680
const RANK = 57681
const RECURSIVE = 57682
const ROW_NUMBER = 57683
const SYSTEM = 57684
const WINDOW = 57685
const ACTIVE = 57686
const ADMIN = 57687
const BUCKETS = 57688
const CLONE = 57689
const COMPONENT = 57690
const DEFINITION = 57691
const ENFORCED = 57692
const EXCLUDE = 57693
const FOLLOWING = 57694
const GEOMCOLLECTION = 57695
const GET_MASTER_PUBLIC_KEY = 57696
const HISTOGRAM = 57697
const HISTORY = 57698
const INACTIVE = 57699
const INVISIBLE = 57700
const LOCKED = 57701
const MASTER_COMPRESSION_ALGORITHMS = 57702
const MASTER_PUBLIC_KEY_PATH = 57703
const MASTER_TLS_CIPHERSUITES = 57704
const MASTER_ZSTD_COMPRESSION_LEVEL = 57705
const NESTED = 57706
const NETWORK_NAMESPACE = 57707
const NOWAIT = 57708
const NULLS = 57709
const OJ = 57710
const OLD = 57711
const OPTIONAL = 57712
const ORDINALITY = 57713
const ORGANIZATION = 57714
const OTHERS = 57715
const PATH = 57716
const PERSIST = 57717
const PERSIST_ONLY = 57718
const PRECEDING = 57719
const PRIVILEGE_CHECKS_USER = 57720
const PROCESS = 57721
const RANDOM = 57722
const REFERENCE = 57723
const REQUIRE_ROW_FORMAT = 57724
const RESOURCE = 57725
const RESPECT = 57726
const RESTART = 57727
const RETAIN = 57728
const REUSE = 57729
const ROLE = 57730
const SECONDARY = 57731
const SECONDARY_ENGINE = 57732
const SECONDARY_LOAD = 57733
const SECONDARY_UNLOAD = 57734
const SKIP = 57735
const SRID = 57736
const THREAD_PRIORITY = 57737
const TIES = 57738
const UNBOUNDED = 57739
const VCPU = 57740
const VISIBLE = 57741
const FORMAT = 57742
const TREE = 57743
const VITESS = 57744
const TRADITIONAL = 57745
const LOCAL = 57746
const LOW_PRIORITY = 57747
const AVG_ROW_LENGTH = 57748
const CONNECTION = 57749
const CHECKSUM = 57750
const DELAY_KEY_WRITE = 57751
const ENCRYPTION = 57752
const ENGINE = 57753
const INSERT_METHOD = 57754
const MAX_ROWS = 57755
const MIN_ROWS = 57756
const PACK_KEYS = 57757
const PASSWORD = 57758
const FIXED = 57759
const DYNAMIC = 57760
const COMPRESSED = 57761
const REDUNDANT = 57762
const COMPACT = 57763
const ROW_FORMAT = 57764
const STATS_AUTO_RECALC = 57765
const STATS_PERSISTENT = 57766
const STATS_SAMPLE_PAGES = 57767
const STORAGE = 57768
const MEMORY = 57769
const DISK = 57770

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	163, 892,
	-2, 87,
	-1, 43,
	142, 111,
	247, 111,
	-2, 105,
	-1, 44,
	142, 111,
	247, 111,
	-2, 320,
	-1, 51,
	34, 438,
	163, 438,
	175, 438,
	203, 452,
	204, 452,
	-2, 440,
	-1, 56,
	165, 462,
	-2, 460,
	-1, 80,
	55, 505,
	-2, 513,
	-1, 104,
	142, 111,
	247, 111,
	-2, 106,
	-1, 112,
	142, 111,
	247, 111,
	-2, 325,
	-1, 113,
	168, 228,
	169, 228,
	-2, 314,
	-1, 528,
	149, 903,
	-2, 899,
	-1, 529,
	149, 904,
	-2, 900,
	-1, 546,
	55, 506,
	-2, 518,
	-1, 547,
	55, 507,
	-2, 519,
	-1, 567,
	117, 1225,
	-2, 80,
	-1, 568,
	117, 1114,
	-2, 81,
	-1, 573,
	117, 1058,
	-2, 863,
	-1, 575,
	117, 1162,
	-2, 865,
	-1, 737,
	174, 36,
	179, 36,
	-2, 239,
	-1, 800,
	142, 111,
	247, 111,
	-2, 358,
	-1, 1014,
	142, 111,
	247, 111,
	-2, 263,
	-1, 1088,
	174, 37,
	179, 37,
	-2, 240,
	-1, 1256,
	149, 906,
	-2, 902,
	-1, 1346,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1367,
	142, 111,
	247, 111,
	-2, 264,
	-1, 1733,
	5, 760,
	18, 760,
	20, 760,
	32, 760,
	82, 760,
	-2, 544,
	-1, 1935,
	45, 834,
	-2, 832,
}

const yyPrivate = 57344

const yyLast = 21223

var yyAct = [...]int{
	528, 2016, 2003, 1780, 1935, 1886, 1979, 1651, 1863, 1554,
	501, 1630, 487, 1714, 79, 3, 1713, 1522, 917, 1710,
	1555, 1293, 1399, 1541, 1071, 470, 1634, 854, 1384, 1611,
	1404, 1612, 710, 1725, 539, 1242, 968, 1343, 1698, 129,
	1671, 1250, 1364, 1482, 1430, 1086, 813, 159, 1406, 1184,
	171, 1170, 441, 171, 711, 1005, 572, 961, 453, 1604,
	171, 852, 998, 1332, 989, 548, 971, 1325, 77, 988,
	966, 1295, 991, 955, 1219, 1276, 474, 31, 533, 1093,
	995, 717, 463, 1407, 1395, 714, 738, 734, 453, 1004,
	1348, 453, 171, 453, 1308, 75, 718, 472, 1094, 735,
	1002, 978, 132, 930, 748, 105, 1187, 158, 106, 74,
	8, 7, 1649, 1648, 111, 569, 6, 1452, 1142, 1888,
	160, 161, 162, 460, 1989, 502, 32, 1520, 1205, 1932,
	1758, 1849, 768, 767, 2022, 80, 1976, 1290, 1291, 2015,
	76, 931, 1957, 2005, 1781, 1975, 107, 1956, 1688, 554,
	558, 1810, 732, 534, 1521, 171, 726, 171, 32, 1626,
	1740, 1741, 97, 1625, 171, 1006, 806, 1007, 733, 171,
	82, 83, 84, 85, 86, 87, 1359, 1360, 1739, 1411,
	432, 102, 164, 165, 166, 461, 462, 1358, 566, 433,
	102, 154, 33, 156, 823, 68, 37, 38, 821, 430,
	1409, 535, 1585, 832, 833, 1584, 532, 107, 1586, 531,
	728, 1378, 745, 727, 850, 834, 1596, 102, 94, 835,
	832, 833, 759, 1842, 98, 764, 1959, 99, 100, 1653,
	762, 772, 1385, 427, 1106, 769, 770, 730, 773, 774,
	775, 776, 439, 1801, 779, 780, 781, 782, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 1292,
	513, 107, 519, 520, 517, 518, 67, 516, 515, 514,
	1799, 451, 153, 160, 161, 162, 1204, 521, 522, 1408,
	449, 455, 824, 1082, 418, 1635, 822, 1253, 1206, 1207,
	1208, 1431, 849, 1416, 160, 161, 162, 108, 1767, 125,
	1654, 1622, 1159, 829, 2010, 1768, 1074, 137, 157, 1132,
	801, 420, 421, 422, 848, 437, 438, 444, 827, 828,
	1656, 434, 436, 445, 423, 424, 447, 446, 101, 426,
	425, 1461, 419, 429, 442, 1326, 771, 101, 124, 1990,
	825, 826, 729, 114, 778, 1133, 1418, 1134, 1419, 1420,
	777, 1160, 153, 1655, 1156, 1861, 747, 715, 2023, 846,
	804, 134, 741, 135, 101, 2020, 2001, 1158, 121, 122,
	120, 119, 152, 841, 715, 843, 715, 108, 713, 740,
	1672, 1092, 1091, 805, 1523, 1525, 723, 137, 1757, 1624,
	1922, 879, 878, 888, 889, 881, 882, 883, 884, 885,
	886, 887, 880, 1157, 747, 890, 1955, 840, 842, 1903,
	560, 1657, 1446, 766, 1164, 855, 753, 1621, 171, 747,
	115, 123, 126, 1674, 113, 747, 116, 117, 1589, 1960,
	138, 1697, 1696, 836, 839, 1695, 1410, 1385, 724, 417,
	143, 134, 453, 135, 163, 1460, 104, 1939, 1459, 799,
	1440, 1501, 152, 902, 903, 1831, 453, 453, 443, 1738,
	1546, 1490, 1441, 1498, 1354, 1971, 982, 816, 817, 818,
	819, 820, 861, 915, 1365, 1676, 1581, 1680, 810, 1675,
	1524, 1673, 160, 161, 162, 890, 1678, 851, 845, 1304,
	746, 1185, 160, 161, 162, 1677, 1244, 740, 743, 744,
	847, 715, 1188, 69, 838, 737, 741, 1201, 1679, 1681,
	138, 2018, 880, 90, 2019, 890, 2017, 870, 1914, 837,
	143, 867, 1144, 1143, 1145, 1146, 1147, 807, 808, 796,
	1690, 797, 171, 749, 798, 1723, 130, 870, 746, 869,
	867, 1417, 1749, 815, 760, 740, 900, 1075, 1904, 1902,
	959, 830, 1245, 746, 761, 765, 870, 453, 91, 746,
	171, 1226, 171, 171, 1008, 453, 865, 853, 864, 862,
	958, 453, 1277, 1439, 863, 1224, 1225, 1223, 1077, 1277,
	918, 1508, 757, 32, 1375, 118, 1214, 1216, 1217, 902,
	903, 756, 569, 1923, 899, 901, 1376, 127, 1215, 987,
	128, 902, 903, 1594, 956, 800, 1186, 883, 884, 885,
	886, 887, 880, 1942, 972, 890, 130, 1189, 933, 935,
	937, 939, 941, 943, 944, 914, 1475, 1476, 1477, 919,
	920, 921, 922, 923, 924, 925, 926, 2024, 929, 932,
	932, 932, 938, 932, 932, 938, 932, 946, 947, 948,
	949, 950, 951, 952, 953, 814, 934, 936, 2006, 940,
	942, 32, 945, 881, 882, 883, 884, 885, 886, 887,
	880, 722, 960, 890, 879, 878, 888, 889, 881, 882,
	883, 884, 885, 886, 887, 880, 2007, 993, 890, 1996,
	131, 136, 133, 139, 140, 141, 142, 144, 145, 146,
	147, 975, 1848, 1151, 2025, 1149, 148, 149, 150, 151,
	171, 868, 869, 867, 1067, 1609, 1496, 1997, 67, 1692,
	1309, 1310, 1847, 171, 1495, 1078, 1079, 1763, 1608, 870,
	1222, 1497, 1139, 1483, 868, 869, 867, 453, 1088, 868,
	869, 867, 1306, 1607, 1700, 736, 1097, 1414, 1152, 868,
	869, 867, 870, 453, 160, 161, 162, 870, 1629, 2009,
	1108, 1150, 1137, 1148, 171, 1116, 1136, 870, 725, 1085,
	131, 136, 133, 139, 140, 141, 142, 144, 145, 146,
	147, 1135, 1129, 1003, 1127, 1105, 148, 149, 150, 151,
	1138, 1096, 1701, 453, 1121, 1118, 453, 1117, 2008, 1998,
	171, 868, 869, 867, 1305, 171, 1987, 1969, 171, 1169,
	543, 171, 1876, 1845, 868, 869, 867, 1819, 1702, 870,
	1617, 1066, 1807, 171, 1095, 171, 160, 161, 162, 868,
	869, 867, 870, 970, 1605, 1081, 1472, 453, 453, 171,
	453, 453, 171, 453, 453, 1087, 1083, 870, 1101, 1104,
	160, 161, 162, 1450, 1588, 1449, 1107, 1155, 1174, 1173,
	1140, 750, 751, 752, 1128, 1124, 559, 1172, 1176, 758,
	1178, 564, 1180, 1181, 1182, 1183, 1123, 1120, 1122, 1770,
	1909, 1190, 1125, 1126, 1220, 1165, 1908, 153, 160, 161,
	162, 1243, 1426, 160, 161, 162, 1859, 1130, 1191, 1192,
	1246, 1194, 1195, 107, 1197, 1198, 728, 1772, 1991, 727,
	78, 1328, 108, 76, 453, 490, 489, 492, 493, 494,
	495, 853, 137, 1620, 491, 1373, 496, 1722, 1247, 1248,
	879, 878, 888, 889, 881, 882, 883, 884, 885, 886,
	887, 880, 1826, 1254, 890, 1772, 1953, 453, 453, 529,
	1221, 1199, 561, 562, 866, 1260, 1772, 1946, 171, 1772,
	1940, 1329, 853, 853, 1913, 853, 853, 1255, 853, 853,
	453, 1772, 1256, 1772, 543, 1317, 134, 171, 135, 918,
	453, 1818, 543, 1753, 171, 1542, 171, 152, 1829, 543,
	543, 1284, 1285, 1299, 171, 171, 1772, 1776, 1329, 172,
	1357, 453, 172, 1311, 453, 1755, 1754, 454, 1344, 172,
	1254, 1350, 1257, 1751, 1752, 33, 453, 1751, 1750, 1317,
	543, 1265, 1268, 1349, 1650, 1070, 1637, 1278, 569, 1632,
	1633, 569, 1329, 543, 1323, 1513, 33, 454, 1319, 1256,
	454, 172, 454, 866, 543, 138, 33, 1379, 1369, 1380,
	1381, 1382, 1383, 1329, 1368, 143, 1070, 1069, 1386, 1387,
	1388, 1549, 1015, 1014, 1512, 1391, 1392, 1393, 1394, 1711,
	1372, 453, 1351, 1350, 1318, 1347, 543, 1317, 1722, 1349,
	1353, 1321, 1425, 1550, 1575, 453, 1542, 1352, 1401, 67,
	453, 1356, 1349, 1893, 1097, 1307, 1097, 1850, 1288, 1163,
	1000, 1355, 536, 1371, 172, 453, 172, 731, 1947, 67,
	67, 1445, 1865, 172, 745, 1370, 1858, 1429, 172, 1345,
	67, 1243, 879, 878, 888, 889, 881, 882, 883, 884,
	885, 886, 887, 880, 1351, 1111, 890, 1442, 1837, 1437,
	1614, 1438, 1349, 1317, 1851, 1852, 1853, 1397, 1398, 1072,
	1443, 130, 1402, 721, 1722, 171, 1448, 171, 171, 171,
	171, 171, 1423, 1400, 171, 171, 1413, 1412, 171, 453,
	1769, 1433, 1436, 1402, 1432, 1434, 67, 1396, 1390, 1389,
	1154, 1089, 1112, 1113, 1114, 1424, 171, 171, 171, 878,
	888, 889, 881, 882, 883, 884, 885, 886, 887, 880,
	171, 1068, 890, 171, 453, 92, 1652, 1261, 1262, 1726,
	1727, 1267, 1270, 1271, 888, 889, 881, 882, 883, 884,
	885, 886, 887, 880, 1447, 1866, 890, 1411, 1854, 1813,
	1465, 1466, 2012, 2004, 1220, 1453, 1283, 1470, 1744, 1286,
	1287, 874, 1729, 877, 1613, 1711, 1627, 1098, 1202, 891,
	892, 893, 894, 895, 896, 897, 1167, 875, 876, 873,
	879, 878, 888, 889, 881, 882, 883, 884, 885, 886,
	887, 880, 1855, 1856, 890, 1732, 879, 878, 888, 889,
	881, 882, 883, 884, 885, 886, 887, 880, 1614, 171,
	890, 1099, 1100, 1731, 853, 1492, 1566, 171, 1478, 1564,
	1221, 1567, 1563, 1562, 1565, 131, 136, 133, 139, 140,
	141, 142, 144, 145, 146, 147, 1993, 1974, 1703, 171,
	969, 148, 149, 150, 151, 1568, 1531, 1338, 1339, 1830,
	171, 171, 171, 171, 171, 534, 1491, 1540, 1539, 1965,
	1551, 1962, 171, 1995, 1978, 1980, 171, 1986, 1547, 171,
	171, 1507, 1936, 171, 171, 171, 1544, 1528, 1985, 1934,
	1573, 956, 1519, 1162, 530, 1618, 1587, 172, 1527, 1535,
	1334, 1337, 1338, 1339, 1335, 755, 1336, 1340, 1534, 1273,
	1489, 1529, 754, 535, 1543, 1545, 1576, 96, 962, 1530,
	1578, 454, 1613, 1274, 1600, 1558, 1559, 1444, 1561, 1557,
	963, 549, 1560, 1119, 1569, 454, 454, 1590, 1080, 1597,
	1598, 1172, 453, 1582, 1574, 550, 1579, 1013, 812, 1641,
	1526, 1640, 1593, 108, 1591, 1628, 1556, 1599, 453, 1601,
	1602, 1603, 1944, 155, 1943, 453, 167, 1097, 973, 974,
	552, 1891, 551, 1435, 993, 1243, 1638, 1646, 1243, 1110,
	1606, 1552, 1553, 1109, 1615, 993, 993, 993, 993, 993,
	1090, 1824, 549, 1309, 1310, 453, 1302, 1421, 1166, 1642,
	1644, 1345, 1910, 1342, 993, 540, 550, 2000, 993, 1999,
	1645, 172, 1639, 1647, 537, 538, 1538, 1643, 1983, 1966,
	1823, 453, 1427, 1255, 1537, 541, 78, 1243, 1256, 546,
	547, 552, 1822, 551, 1706, 500, 454, 1542, 1502, 172,
	1499, 172, 172, 1616, 454, 2014, 2013, 2014, 1668, 1659,
	454, 1660, 983, 1661, 976, 1937, 1658, 453, 1669, 1636,
	1843, 1667, 1682, 1303, 536, 76, 81, 171, 1683, 1487,
	1488, 73, 1689, 1, 428, 1289, 954, 453, 440, 2002,
	1670, 1141, 1131, 453, 453, 170, 1782, 1862, 448, 1712,
	1505, 1715, 1422, 1610, 1405, 170, 739, 112, 1366, 1367,
	1949, 89, 708, 88, 1668, 742, 171, 844, 1721, 1428,
	1901, 1595, 1709, 1377, 1841, 1743, 1592, 1941, 557, 557,
	853, 1021, 1720, 1019, 1730, 1020, 1018, 170, 1734, 1023,
	1736, 1748, 1737, 1022, 1017, 1334, 1337, 1338, 1339, 1335,
	1203, 1336, 1340, 1735, 1279, 1726, 1727, 450, 1341, 1764,
	1009, 977, 171, 763, 1756, 1374, 1200, 1451, 171, 1742,
	435, 831, 431, 453, 898, 1536, 1583, 570, 563, 1857,
	1746, 1747, 1760, 1759, 556, 1717, 95, 1556, 1984, 1963,
	1961, 1933, 1887, 1783, 453, 453, 453, 1964, 171, 172,
	170, 1931, 170, 1994, 1977, 1773, 1301, 1777, 1775, 170,
	1778, 965, 172, 1821, 170, 1705, 1716, 1506, 32, 927,
	1275, 992, 473, 1213, 488, 485, 454, 486, 1779, 1312,
	1548, 872, 471, 465, 542, 984, 1333, 1794, 1795, 1797,
	1796, 993, 454, 1798, 1792, 1800, 1788, 1789, 464, 1331,
	1330, 996, 1728, 172, 1724, 990, 1316, 1623, 1761, 1762,
	1073, 1415, 1766, 720, 545, 93, 1272, 1921, 1809, 544,
	1820, 59, 1825, 1774, 36, 457, 1988, 1970, 857, 553,
	30, 29, 454, 1834, 28, 454, 23, 22, 21, 172,
	20, 19, 25, 18, 172, 17, 16, 172, 1833, 1840,
	172, 103, 46, 43, 41, 109, 110, 44, 40, 802,
	27, 1839, 172, 453, 172, 26, 15, 14, 13, 1844,
	12, 1846, 453, 11, 10, 9, 454, 454, 172, 454,
	454, 172, 454, 454, 5, 4, 1869, 860, 24, 916,
	2, 0, 499, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 1808, 453, 453, 453, 171, 453,
	1556, 1814, 1815, 1816, 1868, 0, 1879, 1881, 1882, 0,
	453, 0, 453, 0, 0, 0, 0, 1715, 453, 1883,
	1892, 1715, 1890, 1894, 1875, 0, 0, 1896, 1885, 1899,
	1867, 0, 0, 0, 0, 0, 1905, 0, 0, 453,
	452, 0, 171, 454, 0, 0, 453, 171, 1898, 0,
	1911, 0, 0, 0, 1900, 0, 0, 1915, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 1906, 0, 1907,
	571, 0, 0, 712, 0, 719, 454, 454, 0, 0,
	0, 1930, 0, 0, 1715, 0, 0, 172, 0, 0,
	1938, 0, 0, 0, 453, 453, 0, 0, 0, 454,
	0, 0, 1948, 170, 0, 1945, 172, 0, 0, 454,
	0, 1812, 0, 172, 0, 172, 0, 1958, 0, 0,
	453, 1864, 1950, 172, 172, 0, 0, 1967, 453, 0,
	454, 0, 1716, 454, 32, 0, 1716, 0, 0, 1972,
	0, 1973, 1805, 0, 0, 454, 1982, 1981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1992, 879, 878,
	888, 889, 881, 882, 883, 884, 885, 886, 887, 880,
	0, 0, 890, 879, 878, 888, 889, 881, 882, 883,
	884, 885, 886, 887, 880, 2011, 0, 890, 0, 0,
	0, 1804, 0, 0, 0, 0, 2021, 0, 0, 1716,
	454, 0, 0, 33, 34, 35, 68, 37, 38, 0,
	0, 0, 0, 0, 454, 1556, 32, 170, 0, 454,
	0, 0, 0, 72, 0, 0, 0, 0, 39, 65,
	66, 557, 63, 0, 454, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 170, 0, 170, 999, 0,
	879, 878, 888, 889, 881, 882, 883, 884, 885, 886,
	887, 880, 0, 0, 890, 0, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 0, 0, 0, 172, 0, 172, 172, 172, 172,
	172, 871, 0, 172, 172, 0, 0, 172, 454, 879,
	878, 888, 889, 881, 882, 883, 884, 885, 886, 887,
	880, 0, 0, 890, 0, 172, 172, 172, 0, 467,
	0, 0, 0, 0, 0, 0, 0, 464, 0, 172,
	0, 0, 172, 454, 0, 0, 928, 0, 0, 0,
	957, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	45, 48, 47, 50, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 964, 967, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 71, 70, 0, 0, 60, 61, 49, 0, 0,
	169, 0, 0, 0, 0, 170, 0, 0, 0, 0,
	456, 0, 0, 0, 0, 0, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 53, 54, 172, 55,
	56, 57, 58, 0, 571, 0, 172, 0, 0, 0,
	0, 0, 716, 0, 0, 0, 1103, 1103, 856, 858,
	0, 0, 0, 0, 1103, 0, 0, 0, 172, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 172,
	172, 172, 172, 172, 0, 0, 0, 0, 0, 0,
	0, 172, 0, 0, 0, 172, 0, 0, 172, 172,
	0, 0, 172, 172, 172, 170, 0, 0, 0, 0,
	170, 0, 0, 170, 0, 794, 1171, 795, 0, 0,
	0, 0, 0, 0, 803, 0, 0, 0, 170, 809,
	170, 0, 0, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 170, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 980,
	0, 454, 0, 0, 0, 1662, 0, 571, 0, 0,
	0, 0, 0, 1010, 0, 0, 0, 454, 0, 0,
	0, 1484, 0, 0, 454, 879, 878, 888, 889, 881,
	882, 883, 884, 885, 886, 887, 880, 0, 0, 890,
	0, 879, 878, 888, 889, 881, 882, 883, 884, 885,
	886, 887, 880, 0, 454, 890, 0, 0, 0, 0,
	557, 1171, 0, 0, 0, 557, 557, 0, 0, 557,
	557, 557, 0, 0, 0, 1103, 0, 0, 0, 0,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 557, 557, 557, 557, 557, 0,
	1175, 0, 0, 1297, 879, 878, 888, 889, 881, 882,
	883, 884, 885, 886, 887, 880, 454, 0, 890, 0,
	0, 0, 170, 0, 0, 0, 172, 0, 1171, 170,
	0, 170, 0, 0, 0, 0, 454, 0, 0, 170,
	170, 0, 454, 454, 0, 0, 0, 0, 0, 0,
	0, 1209, 1210, 1211, 1212, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 0, 0, 0,
	0, 1258, 1259, 0, 0, 0, 0, 0, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 1102, 712, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 1263, 1264, 0, 0,
	0, 172, 0, 0, 1300, 0, 0, 172, 811, 0,
	0, 0, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1153, 0, 0, 571, 0,
	0, 0, 0, 454, 454, 454, 0, 172, 0, 0,
	0, 0, 0, 0, 0, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 571,
	571, 0, 571, 571, 0, 571, 571, 0, 0, 0,
	0, 0, 0, 1363, 0, 0, 0, 0, 0, 0,
	170, 0, 170, 170, 170, 170, 170, 0, 0, 170,
	170, 0, 0, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1467, 1468, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 170, 0, 0, 170, 0,
	0, 0, 0, 1403, 0, 0, 1249, 0, 571, 0,
	986, 0, 454, 997, 0, 0, 0, 0, 0, 0,
	0, 454, 1102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1281,
	1282, 0, 0, 0, 0, 0, 0, 557, 557, 0,
	0, 0, 0, 0, 454, 454, 454, 172, 454, 0,
	0, 0, 1313, 0, 0, 0, 0, 0, 557, 454,
	0, 454, 980, 0, 0, 571, 0, 454, 0, 0,
	0, 0, 0, 0, 170, 0, 0, 0, 0, 0,
	0, 0, 1297, 571, 0, 0, 571, 0, 454, 0,
	0, 172, 0, 0, 0, 454, 172, 0, 712, 0,
	0, 0, 0, 557, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1103, 170, 170, 170, 170, 170,
	0, 0, 0, 0, 0, 0, 0, 1570, 0, 0,
	0, 170, 0, 0, 170, 170, 0, 0, 170, 1580,
	1171, 1485, 0, 454, 454, 1486, 0, 0, 0, 0,
	1016, 0, 0, 719, 0, 0, 1493, 1494, 0, 0,
	0, 0, 1500, 1076, 0, 1503, 1504, 712, 0, 454,
	0, 0, 719, 1510, 0, 1511, 0, 454, 1514, 1515,
	1516, 1517, 1518, 0, 0, 0, 0, 712, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1509, 0, 1115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1103, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1171, 0, 0,
	1532, 1533, 967, 0, 0, 0, 0, 0, 1571, 1572,
	1161, 0, 0, 0, 0, 997, 0, 0, 1168, 0,
	0, 571, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1177, 0, 1179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 557, 0, 0, 0, 1193,
	0, 0, 1196, 0, 0, 0, 1474, 0, 0, 0,
	0, 0, 1218, 0, 0, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1280, 0, 0, 0, 0, 0, 0, 0,
	0, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 1665, 1666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	125, 0, 0, 0, 0, 0, 0, 170, 137, 0,
	0, 1102, 0, 170, 0, 0, 0, 1320, 0, 0,
	0, 1103, 0, 0, 1324, 0, 1327, 0, 0, 0,
	0, 0, 0, 1691, 0, 1346, 0, 0, 0, 124,
	0, 0, 0, 170, 114, 0, 0, 1718, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 0, 135, 0, 0, 1707, 1733, 121,
	122, 120, 119, 152, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1619, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1103, 0,
	1631, 0, 0, 0, 1102, 0, 0, 1631, 0, 0,
	0, 115, 123, 126, 571, 113, 0, 116, 117, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 143, 0, 0, 0, 0, 0, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1791, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 571, 0, 0, 0, 1802, 1803, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 997, 0, 1454, 1455, 1456,
	1457, 1458, 0, 1297, 1462, 1463, 0, 0, 1464, 1699,
	0, 1827, 1828, 0, 0, 1832, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1469, 571,
	0, 0, 1102, 0, 0, 1719, 1699, 130, 0, 0,
	1471, 464, 0, 1473, 1479, 1480, 1481, 170, 1835, 0,
	0, 1836, 170, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 0,
	0, 128, 0, 0, 0, 0, 0, 0, 0, 1880,
	0, 0, 0, 0, 0, 712, 0, 0, 1102, 0,
	0, 0, 0, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 1785, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1889, 464, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1917, 1918, 1919, 1920, 0,
	1924, 0, 1925, 1926, 1927, 0, 1928, 1929, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1577, 131, 136, 133, 139, 140, 141, 142, 144, 145,
	146, 147, 0, 0, 0, 1102, 0, 148, 149, 150,
	151, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1860, 0, 0, 0, 0,
	0, 0, 0, 0, 571, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1038, 0, 1631, 1631, 1631,
	0, 1884, 0, 1663, 1664, 0, 0, 0, 0, 0,
	0, 0, 1895, 0, 1897, 0, 0, 0, 1684, 1685,
	1631, 1686, 1687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 1694, 0, 0, 0, 0, 0, 0,
	0, 1631, 0, 0, 0, 0, 0, 0, 1631, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 571, 571, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	1102, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	1631, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1039, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1765, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1787, 1061,
	1062, 1063, 1064, 1065, 1040, 1041, 1042, 1043, 1024, 1025,
	1053, 0, 1027, 0, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1054, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 1871, 1872, 1873, 1874, 0,
	0, 0, 1877, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 692, 679, 0, 0, 631, 695, 602, 620, 704,
	622, 625, 663, 583, 644, 305, 617, 0, 606, 579,
	613, 580, 604, 633, 222, 637, 601, 681, 647, 694,
	264, 0, 607, 318, 665, 352, 208, 273, 271, 378,
	231, 225, 221, 207, 249, 278, 316, 369, 310, 701,
	268, 654, 1912, 361, 290, 0, 0, 1916, 635, 684,
	642, 675, 630, 664, 591, 653, 696, 618, 661, 697,
	254, 206, 178, 302, 362, 233, 0, 0, 0, 160,
	161, 162, 0, 1951, 1952, 0, 0, 0, 0, 0,
	198, 0, 204, 658, 691, 615, 660, 218, 252, 224,
	217, 376, 662, 707, 578, 655, 0, 581, 584, 703,
	687, 610, 611, 0, 0, 0, 0, 0, 0, 0,
	634, 643, 672, 628, 0, 0, 0, 0, 0, 0,
	0, 0, 608, 0, 652, 0, 0, 0, 587, 582,
	0, 0, 0, 0, 632, 0, 0, 0, 590, 0,
	609, 673, 0, 576, 240, 585, 291, 677, 686, 629,
	403, 690, 627, 626, 693, 668, 588, 683, 621, 263,
	586, 260, 174, 188, 0, 619, 301, 338, 342, 682,
	605, 614, 209, 612, 340, 314, 391, 651, 319, 339,
	269, 380, 331, 390, 404, 405, 216, 295, 397, 373,
	401, 413, 189, 213, 308, 366, 394, 358, 288, 377,
	259, 357, 238, 177, 267, 181, 368, 388, 199, 350,
	0, 0, 0, 183, 386, 365, 285, 256, 257, 182,
	0, 335, 220, 236, 211, 304, 383, 384, 210, 415,
	190, 400, 185, 191, 399, 297, 379, 387, 286, 277,
	184, 385, 284, 276, 262, 230, 245, 329, 272, 330,
	246, 293, 292, 294, 0, 179, 0, 363, 395, 416,
	196, 600, 678, 375, 409, 412, 0, 332, 197, 237,
	229, 328, 235, 265, 408, 410, 411, 195, 326, 243,
	296, 192, 248, 359, 261, 270, 670, 706, 313, 341,
	200, 393, 360, 595, 599, 593, 594, 645, 646, 596,
	698, 699, 700, 674, 589, 0, 597, 598, 0, 680,
	688, 689, 650, 173, 186, 266, 702, 333, 234, 414,
	398, 396, 577, 592, 215, 603, 0, 0, 616, 623,
	624, 636, 638, 639, 640, 641, 649, 656, 657, 659,
	666, 667, 669, 671, 676, 685, 705, 175, 176, 187,
	194, 202, 214, 227, 232, 241, 244, 247, 250, 251,
	253, 258, 275, 279, 280, 281, 282, 298, 299, 300,
	303, 306, 307, 309, 311, 312, 315, 321, 322, 323,
	324, 325, 327, 334, 337, 343, 344, 345, 346, 347,
	348, 349, 353, 354, 355, 356, 364, 367, 381, 382,
	392, 402, 406, 242, 389, 407, 0, 274, 648, 180,
	205, 193, 212, 226, 228, 255, 283, 289, 317, 320,
	239, 223, 203, 336, 201, 351, 370, 371, 372, 374,
	287, 219, 692, 679, 0, 0, 631, 695, 602, 620,
	704, 622, 625, 663, 583, 644, 305, 617, 0, 606,
	579, 613, 580, 604, 633, 222, 637, 601, 681, 647,
	694, 264, 0, 607, 318, 665, 352, 208, 273, 271,
	378, 231, 225, 221, 207, 249, 278, 316, 369, 310,
	701, 268, 654, 0, 361, 290, 0, 0, 0, 635,
	684, 642, 675, 630, 664, 591, 653, 696, 618, 661,
	697, 254, 206, 178, 302, 362, 233, 0, 0, 0,
	160, 161, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 204, 658, 691, 615, 660, 218, 252,
	224, 217, 376, 662, 707, 578, 655, 0, 581, 584,
	703, 687, 610, 611, 0, 0, 0, 0, 0, 0,
	0, 634, 643, 672, 628, 0, 0, 0, 0, 0,
	0, 1708, 0, 608, 0, 652, 0, 0, 0, 587,
	582, 0, 0, 0, 0, 632, 0, 0, 0, 590,
	0, 609, 673, 0, 576, 240, 585, 291, 677, 686,
	629, 403, 690, 627, 626, 693, 668, 588, 683, 621,
	263, 586, 260, 174, 188, 0, 619, 301, 338, 342,
	682, 605, 614, 209, 612, 340, 314, 391, 651, 319,
	339, 269, 380, 331, 390, 404, 405, 216, 295, 397,
	373, 401, 413, 189, 213, 308, 366, 394, 358, 288,
	377, 259, 357, 238, 177, 267, 181, 368, 388, 199,
	350, 0, 0, 0, 183, 386, 365, 285, 256, 257,
	182, 0, 335, 220, 236, 211, 304, 383, 384, 210,
	415, 190, 400, 185, 191, 399, 297, 379, 387, 286,
	277, 184, 385, 284, 276, 262, 230, 245, 329, 272,
	330, 246, 293, 292, 294, 0, 179, 0, 363, 395,
	416, 196, 600, 678, 375, 409, 412, 0, 332, 197,
	237, 229, 328, 235, 265, 408, 410, 411, 195, 326,
	243, 296, 192, 248, 359, 261, 270, 670, 706, 313,
	341, 200, 393, 360, 595, 599, 593, 594, 645, 646,
	596, 698, 699, 700, 674, 589, 0, 597, 598, 0,
	680, 688, 689, 650, 173, 186, 266, 702, 333, 234,
	414, 398, 396, 577, 592, 215, 603, 0, 0, 616,
	623, 624, 636, 638, 639, 640, 641, 649, 656, 657,
	659, 666, 667, 669, 671, 676, 685, 705, 175, 176,
	187, 194, 202, 214, 227, 232, 241, 244, 247, 250,
	251, 253, 258, 275, 279, 280, 281, 282, 298, 299,
	300, 303, 306, 307, 309, 311, 312, 315, 321, 322,
	323, 324, 325, 327, 334, 337, 343, 344, 345, 346,
	347, 348, 349, 353, 354, 355, 356, 364, 367, 381,
	382, 392, 402, 406, 242, 389, 407, 0, 274, 648,
	180, 205, 193, 212, 226, 228, 255, 283, 289, 317,
	320, 239, 223, 203, 336, 201, 351, 370, 371, 372,
	374, 287, 219, 692, 679, 0, 0, 631, 695, 602,
	620, 704, 622, 625, 663, 583, 644, 305, 617, 0,
	606, 579, 613, 580, 604, 633, 222, 637, 601, 681,
	647, 694, 264, 0, 607, 318, 665, 352, 208, 273,
	271, 378, 231, 225, 221, 207, 249, 278, 316, 369,
	310, 701, 268, 654, 0, 361, 290, 0, 0, 0,
	635, 684, 642, 675, 630, 664, 591, 653, 696, 618,
	661, 697, 254, 206, 178, 302, 362, 233, 67, 0,
	0, 160, 161, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 204, 658, 691, 615, 660, 218,
	252, 224, 217, 376, 662, 707, 578, 655, 0, 581,
	584, 703, 687, 610, 611, 0, 0, 0, 0, 0,
	0, 0, 634, 643, 672, 628, 0, 0, 0, 0,
	0, 0, 0, 0, 608, 0, 652, 0, 0, 0,
	587, 582, 0, 0, 0, 0, 632, 0, 0, 0,
	590, 0, 609, 673, 0, 576, 240, 585, 291, 677,
	686, 629, 403, 690, 627, 626, 693, 668, 588, 683,
	621, 263, 586, 260, 174, 188, 0, 619, 301, 338,
	342, 682, 605, 614, 209, 612, 340, 314, 391, 651,
	319, 339, 269, 380, 331, 390, 404, 405, 216, 295,
	397, 373, 401, 413, 189, 213, 308, 366, 394, 358,
	288, 377, 259, 357, 238, 177, 267, 181, 368, 388,
	199, 350, 0, 0, 0, 183, 386, 365, 285, 256,
	257, 182, 0, 335, 220, 236, 211, 304, 383, 384,
	210, 415, 190, 400, 185, 191, 399, 297, 379, 387,
	286, 277, 184, 385, 284, 276, 262, 230, 245, 329,
	272, 330, 246, 293, 292, 294, 0, 179, 0, 363,
	395, 416, 196, 600, 678, 375, 409, 412, 0, 332,
	197, 237, 229, 328, 235, 265, 408, 410, 411, 195,
	326, 243, 296, 192, 248, 359, 261, 270, 670, 706,
	313, 341, 200, 393, 360, 595, 599, 593, 594, 645,
	646, 596, 698, 699, 700, 674, 589, 0, 597, 598,
	0, 680, 688, 689, 650, 173, 186, 266, 702, 333,
	234, 414, 398, 396, 577, 592, 215, 603, 0, 0,
	616, 623, 624, 636, 638, 639, 640, 641, 649, 656,
	657, 659, 666, 667, 669, 671, 676, 685, 705, 175,
	176, 187, 194, 202, 214, 227, 232, 241, 244, 247,
	250, 251, 253, 258, 275, 279, 280, 281, 282, 298,
	299, 300, 303, 306, 307, 309, 311, 312, 315, 321,
	322, 323, 324, 325, 327, 334, 337, 343, 344, 345,
	346, 347, 348, 349, 353, 354, 355, 356, 364, 367,
	381, 382, 392, 402, 406, 242, 389, 407, 0, 274,
	648, 180, 205, 193, 212, 226, 228, 255, 283, 289,
	317, 320, 239, 223, 203, 336, 201, 351, 370, 371,
	372, 374, 287, 219, 692, 679, 0, 0, 631, 695,
	602, 620, 704, 622, 625, 663, 583, 644, 305, 617,
	0, 606, 579, 613, 580, 604, 633, 222, 637, 601,
	681, 647, 694, 264, 0, 607, 318, 665, 352, 208,
	273, 271, 378, 231, 225, 221, 207, 249, 278, 316,
	369, 310, 701, 268, 654, 0, 361, 290, 0, 0,
	0, 635, 684, 642, 675, 630, 664, 591, 653, 696,
	618, 661, 697, 254, 206, 178, 302, 362, 233, 0,
	0, 0, 160, 161, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 204, 658, 691, 615, 660,
	218, 252, 224, 217, 376, 662, 707, 578, 655, 0,
	581, 584, 703, 687, 610, 611, 0, 0, 0, 0,
	0, 0, 0, 634, 643, 672, 628, 0, 0, 0,
	0, 0, 0, 1581, 0, 608, 0, 652, 0, 0,
	0, 587, 582, 0, 0, 0, 0, 632, 0, 0,
	0, 590, 0, 609, 673, 0, 576, 240, 585, 291,
	677, 686, 629, 403, 690, 627, 626, 693, 668, 588,
	683, 621, 263, 586, 260, 174, 188, 0, 619, 301,
	338, 342, 682, 605, 614, 209, 612, 340, 314, 391,
	651, 319, 339, 269, 380, 331, 390, 404, 405, 216,
	295, 397, 373, 401, 413, 189, 213, 308, 366, 394,
	358, 288, 377, 259, 357, 238, 177, 267, 181, 368,
	388, 199, 350, 0, 0, 0, 183, 386, 365, 285,
	256, 257, 182, 0, 335, 220, 236, 211, 304, 383,
	384, 210, 415, 190, 400, 185, 191, 399, 297, 379,
	387, 286, 277, 184, 385, 284, 276, 262, 230, 245,
	329, 272, 330, 246, 293, 292, 294, 0, 179, 0,
	363, 395, 416, 196, 600, 678, 375, 409, 412, 0,
	332, 197, 237, 229, 328, 235, 265, 408, 410, 411,
	195, 326, 243, 296, 192, 248, 359, 261, 270, 670,
	706, 313, 341, 200, 393, 360, 595, 599, 593, 594,
	645, 646, 596, 698, 699, 700, 674, 589, 0, 597,
	598, 0, 680, 688, 689, 650, 173, 186, 266, 702,
	333, 234, 414, 398, 396, 577, 592, 215, 603, 0,
	0, 616, 623, 624, 636, 638, 639, 640, 641, 649,
	656, 657, 659, 666, 667, 669, 671, 676, 685, 705,
	175, 176, 187, 194, 202, 214, 227, 232, 241, 244,
	247, 250, 251, 253, 258, 275, 279, 280, 281, 282,
	298, 299, 300, 303, 306, 307, 309, 311, 312, 315,
	321, 322, 323, 324, 325, 327, 334, 337, 343, 344,
	345, 346, 347, 348, 349, 353, 354, 355, 356, 364,
	367, 381, 382, 392, 402, 406, 242, 389, 407, 0,
	274, 648, 180, 205, 193, 212, 226, 228, 255, 283,
	289, 317, 320, 239, 223, 203, 336, 201, 351, 370,
	371, 372, 374, 287, 219, 692, 679, 0, 0, 631,
	695, 602, 620, 704, 622, 625, 663, 583, 644, 305,
	617, 0, 606, 579, 613, 580, 604, 633, 222, 637,
	601, 681, 647, 694, 264, 0, 607, 318, 665, 352,
	208, 273, 271, 378, 231, 225, 221, 207, 249, 278,
	316, 369, 310, 701, 268, 654, 0, 361, 290, 0,
	0, 0, 635, 684, 642, 675, 630, 664, 591, 653,
	696, 618, 661, 697, 254, 206, 178, 302, 362, 233,
	0, 0, 0, 160, 161, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 204, 658, 691, 615,
	660, 218, 252, 224, 217, 376, 662, 707, 578, 655,
	0, 581, 584, 703, 687, 610, 611, 0, 0, 0,
	0, 0, 0, 0, 634, 643, 672, 628, 0, 0,
	0, 0, 0, 0, 1322, 0, 608, 0, 652, 0,
	0, 0, 587, 582, 0, 0, 0, 0, 632, 0,
	0, 0, 590, 0, 609, 673, 0, 576, 240, 585,
	291, 677, 686, 629, 403, 690, 627, 626, 693, 668,
	588, 683, 621, 263, 586, 260, 174, 188, 0, 619,
	301, 338, 342, 682, 605, 614, 209, 612, 340, 314,
	391, 651, 319, 339, 269, 380, 331, 390, 404, 405,
	216, 295, 397, 373, 401, 413, 189, 213, 308, 366,
	394, 358, 288, 377, 259, 357, 238, 177, 267, 181,
	368, 388, 199, 350, 0, 0, 0, 183, 386, 365,
	285, 256, 257, 182, 0, 335, 220, 236, 211, 304,
	383, 384, 210, 415, 190, 400, 185, 191, 399, 297,
	379, 387, 286, 277, 184, 385, 284, 276, 262, 230,
	245, 329, 272, 330, 246, 293, 292, 294, 0, 179,
	0, 363, 395, 416, 196, 600, 678, 375, 409, 412,
	0, 332, 197, 237, 229, 328, 235, 265, 408, 410,
	411, 195, 326, 243, 296, 192, 248, 359, 261, 270,
	670, 706, 313, 341, 200, 393, 360, 595, 599, 593,
	594, 645, 646, 596, 698, 699, 700, 674, 589, 0,
	597, 598, 0, 680, 688, 689, 650, 173, 186, 266,
	702, 333, 234, 414, 398, 396, 577, 592, 215, 603,
	0, 0, 616, 623, 624, 636, 638, 639, 640, 641,
	649, 656, 657, 659, 666, 667, 669, 671, 676, 685,
	705, 175, 176, 187, 194, 202, 214, 227, 232, 241,
	244, 247, 250, 251, 253, 258, 275, 279, 280, 281,
	282, 298, 299, 300, 303, 306, 307, 309, 311, 312,
	315, 321, 322, 323, 324, 325, 327, 334, 337, 343,
	344, 345, 346, 347, 348, 349, 353, 354, 355, 356,
	364, 367, 381, 382, 392, 402, 406, 242, 389, 407,
	0, 274, 648, 180, 205, 193, 212, 226, 228, 255,
	283, 289, 317, 320, 239, 223, 203, 336, 201, 351,
	370, 371, 372, 374, 287, 219, 692, 679, 0, 0,
	631, 695, 602, 620, 704, 622, 625, 663, 583, 644,
	305, 617, 0, 606, 579, 613, 580, 604, 633, 222,
	637, 601, 681, 647, 694, 264, 0, 607, 318, 665,
	352, 208, 273, 271, 378, 231, 225, 221, 207, 249,
	278, 316, 369, 310, 701, 268, 654, 0, 361, 290,
	0, 0, 0, 635, 684, 642, 675, 630, 664, 591,
	653, 696, 618, 661, 697, 254, 206, 178, 302, 362,
	233, 0, 0, 0, 160, 161, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 204, 658, 691,
	615, 660, 218, 252, 224, 217, 376, 662, 707, 578,
	655, 0, 581, 584, 703, 687, 610, 611, 0, 0,
	0, 0, 0, 0, 0, 634, 643, 672, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 608, 0, 652,
	0, 0, 0, 587, 582, 0, 0, 0, 0, 632,
	0, 0, 0, 590, 0, 609, 673, 0, 576, 240,
	585, 291, 677, 686, 629, 403, 690, 627, 626, 693,
	668, 588, 683, 621, 263, 586, 260, 174, 188, 0,
	619, 301, 338, 342, 682, 605, 614, 209, 612, 340,
	314, 391, 651, 319, 339, 269, 380, 331, 390, 404,
	405, 216, 295, 397, 373, 401, 413, 189, 213, 308,
	366, 394, 358, 288, 377, 259, 357, 238, 177, 267,
	181, 368, 388, 199, 350, 0, 0, 0, 183, 386,
	365, 285, 256, 257, 182, 0, 335, 220, 236, 211,
	304, 383, 384, 210, 415, 190, 400, 185, 191, 399,
	297, 379, 387, 286, 277, 184, 385, 284, 276, 262,
	230, 245, 329, 272, 330, 246, 293, 292, 294, 0,
	179, 0, 363, 395, 416, 196, 600, 678, 375, 409,
	412, 0, 332, 197, 237, 229, 328, 235, 265, 408,
	410, 411, 195, 326, 243, 296, 192, 248, 359, 261,
	270, 670, 706, 313, 341, 200, 393, 360, 595, 599,
	593, 594, 645, 646, 596, 698, 699, 700, 674, 589,
	0, 597, 598, 0, 680, 688, 689, 650, 173, 186,
	266, 702, 333, 234, 414, 398, 396, 577, 592, 215,
	603, 0, 0, 616, 623, 624, 636, 638, 639, 640,
	641, 649, 656, 657, 659, 666, 667, 669, 671, 676,
	685, 705, 175, 176, 187, 194, 202, 214, 227, 232,
	241, 244, 247, 250, 251, 253, 258, 275, 279, 280,
	281, 282, 298, 299, 300, 303, 306, 307, 309, 311,
	312, 315, 321, 322, 323, 324, 325, 327, 334, 337,
	343, 344, 345, 346, 347, 348, 349, 353, 354, 355,
	356, 364, 367, 381, 382, 392, 402, 406, 242, 389,
	407, 0, 274, 648, 180, 205, 193, 212, 226, 228,
	255, 283, 289, 317, 320, 239, 223, 203, 336, 201,
	351, 370, 371, 372, 374, 287, 219, 692, 679, 0,
	0, 631, 695, 602, 620, 704, 622, 625, 663, 583,
	644, 305, 617, 0, 606, 579, 613, 580, 604, 633,
	222, 637, 601, 681, 647, 694, 264, 0, 607, 318,
	665, 352, 208, 273, 271, 378, 231, 225, 221, 207,
	249, 278, 316, 369, 310, 701, 268, 654, 0, 361,
	290, 0, 0, 0, 635, 684, 642, 675, 630, 664,
	591, 653, 696, 618, 661, 697, 254, 206, 178, 302,
	362, 233, 0, 0, 0, 160, 161, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 204, 658,
	691, 615, 660, 218, 252, 224, 217, 376, 662, 707,
	578, 655, 0, 581, 584, 703, 687, 610, 611, 0,
	0, 0, 0, 0, 0, 0, 634, 643, 672, 628,
	0, 0, 0, 0, 0, 0, 0, 0, 608, 0,
	652, 0, 0, 0, 587, 582, 0, 0, 0, 0,
	632, 0, 0, 0, 590, 0, 609, 673, 0, 576,
	240, 585, 291, 677, 686, 629, 403, 690, 627, 626,
	693, 668, 588, 683, 621, 263, 586, 260, 174, 188,
	0, 619, 301, 338, 342, 682, 605, 614, 209, 612,
	340, 314, 391, 651, 319, 339, 269, 380, 331, 390,
	404, 405, 216, 295, 397, 373, 401, 413, 189, 213,
	308, 366, 394, 358, 288, 377, 259, 357, 238, 177,
	267, 181, 368, 388, 199, 350, 0, 0, 0, 183,
	386, 365, 285, 256, 257, 182, 0, 335, 220, 236,
	211, 304, 383, 384, 210, 415, 190, 400, 185, 574,
	399, 297, 379, 387, 286, 277, 184, 385, 284, 276,
	262, 230, 245, 329, 272, 330, 246, 293, 292, 294,
	0, 179, 0, 363, 395, 416, 196, 600, 678, 375,
	409, 412, 0, 332, 197, 237, 229, 328, 235, 265,
	408, 410, 411, 195, 326, 243, 575, 573, 568, 567,
	261, 270, 670, 706, 313, 341, 200, 393, 360, 595,
	599, 593, 594, 645, 646, 596, 698, 699, 700, 674,
	589, 0, 597, 598, 0, 680, 688, 689, 650, 173,
	186, 266, 702, 333, 234, 414, 398, 396, 577, 592,
	215, 603, 0, 0, 616, 623, 624, 636, 638, 639,
	640, 641, 649, 656, 657, 659, 666, 667, 669, 671,
	676, 685, 705, 175, 176, 187, 194, 202, 214, 227,
	232, 241, 244, 247, 250, 251, 253, 258, 275, 279,
	280, 281, 282, 298, 299, 300, 303, 306, 307, 309,
	311, 312, 315, 321, 322, 323, 324, 325, 327, 334,
	337, 343, 344, 345, 346, 347, 348, 349, 353, 354,
	355, 356, 364, 367, 381, 382, 392, 402, 406, 242,
	389, 407, 0, 274, 648, 180, 205, 193, 212, 226,
	228, 255, 283, 289, 317, 320, 239, 223, 203, 336,
	201, 351, 370, 371, 372, 374, 287, 219, 692, 679,
	0, 0, 631, 695, 602, 620, 704, 622, 625, 663,
	583, 644, 305, 617, 0, 606, 579, 613, 580, 604,
	633, 222, 637, 601, 681, 647, 694, 264, 0, 607,
	318, 665, 352, 208, 273, 271, 378, 231, 225, 221,
	207, 249, 278, 316, 369, 310, 701, 268, 654, 0,
	361, 290, 0, 0, 0, 635, 684, 642, 675, 630,
	664, 591, 653, 696, 618, 661, 697, 254, 206, 178,
	302, 362, 233, 0, 0, 0, 160, 161, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 204,
	658, 691, 615, 660, 218, 252, 224, 217, 376, 662,
	707, 578, 655, 0, 581, 584, 703, 687, 610, 611,
	0, 0, 0, 0, 0, 0, 0, 634, 643, 672,
	628, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 652, 0, 0, 0, 587, 582, 0, 0, 0,
	0, 632, 0, 0, 0, 590, 0, 609, 673, 0,
	576, 240, 585, 291, 677, 686, 629, 403, 690, 627,
	626, 693, 668, 588, 683, 621, 263, 586, 260, 174,
	188, 0, 619, 301, 338, 342, 682, 605, 614, 209,
	612, 340, 314, 391, 651, 319, 339, 269, 380, 331,
	390, 404, 405, 216, 295, 397, 373, 401, 413, 189,
	213, 308, 366, 394, 358, 288, 377, 259, 357, 238,
	177, 267, 181, 368, 1001, 199, 350, 0, 0, 0,
	183, 386, 365, 285, 256, 257, 182, 0, 335, 220,
	236, 211, 304, 383, 384, 210, 415, 190, 400, 185,
	574, 399, 297, 379, 387, 286, 277, 184, 385, 284,
	276, 262, 230, 245, 329, 272, 330, 246, 293, 292,
	294, 0, 179, 0, 363, 395, 416, 196, 600, 678,
	375, 409, 412, 0, 332, 197, 237, 229, 328, 235,
	265, 408, 410, 411, 195, 326, 243, 575, 573, 568,
	567, 261, 270, 670, 706, 313, 341, 200, 393, 360,
	595, 599, 593, 594, 645, 646, 596, 698, 699, 700,
	674, 589, 0, 597, 598, 0, 680, 688, 689, 650,
	173, 186, 266, 702, 333, 234, 414, 398, 396, 577,
	592, 215, 603, 0, 0, 616, 623, 624, 636, 638,
	639, 640, 641, 649, 656, 657, 659, 666, 667, 669,
	671, 676, 685, 705, 175, 176, 187, 194, 202, 214,
	227, 232, 241, 244, 247, 250, 251, 253, 258, 275,
	279, 280, 281, 282, 298, 299, 300, 303, 306, 307,
	309, 311, 312, 315, 321, 322, 323, 324, 325, 327,
	334, 337, 343, 344, 345, 346, 347, 348, 349, 353,
	354, 355, 356, 364, 367, 381, 382, 392, 402, 406,
	242, 389, 407, 0, 274, 648, 180, 205, 193, 212,
	226, 228, 255, 283, 289, 317, 320, 239, 223, 203,
	336, 201, 351, 370, 371, 372, 374, 287, 219, 692,
	679, 0, 0, 631, 695, 602, 620, 704, 622, 625,
	663, 583, 644, 305, 617, 0, 606, 579, 613, 580,
	604, 633, 222, 637, 601, 681, 647, 694, 264, 0,
	607, 318, 665, 352, 208, 273, 271, 378, 231, 225,
	221, 207, 249, 278, 316, 369, 310, 701, 268, 654,
	0, 361, 290, 0, 0, 0, 635, 684, 642, 675,
	630, 664, 591, 653, 696, 618, 661, 697, 254, 206,
	178, 302, 362, 233, 0, 0, 0, 160, 161, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	204, 658, 691, 615, 660, 218, 252, 224, 217, 376,
	662, 707, 578, 655, 0, 581, 584, 703, 687, 610,
	611, 0, 0, 0, 0, 0, 0, 0, 634, 643,
	672, 628, 0, 0, 0, 0, 0, 0, 0, 0,
	608, 0, 652, 0, 0, 0, 587, 582, 0, 0,
	0, 0, 632, 0, 0, 0, 590, 0, 609, 673,
	0, 576, 240, 585, 291, 677, 686, 629, 403, 690,
	627, 626, 693, 668, 588, 683, 621, 263, 586, 260,
	174, 188, 0, 619, 301, 338, 342, 682, 605, 614,
	209, 612, 340, 314, 391, 651, 319, 339, 269, 380,
	331, 390, 404, 405, 216, 295, 397, 373, 401, 413,
	189, 213, 308, 366, 394, 358, 288, 377, 259, 357,
	238, 177, 267, 181, 368, 565, 199, 350, 0, 0,
	0, 183, 386, 365, 285, 256, 257, 182, 0, 335,
	220, 236, 211, 304, 383, 384, 210, 415, 190, 400,
	185, 574, 399, 297, 379, 387, 286, 277, 184, 385,
	284, 276, 262, 230, 245, 329, 272, 330, 246, 293,
	292, 294, 0, 179, 0, 363, 395, 416, 196, 600,
	678, 375, 409, 412, 0, 332, 197, 237, 229, 328,
	235, 265, 408, 410, 411, 195, 326, 243, 575, 573,
	568, 567, 261, 270, 670, 706, 313, 341, 200, 393,
	360, 595, 599, 593, 594, 645, 646, 596, 698, 699,
	700, 674, 589, 0, 597, 598, 0, 680, 688, 689,
	650, 173, 186, 266, 702, 333, 234, 414, 398, 396,
	577, 592, 215, 603, 0, 0, 616, 623, 624, 636,
	638, 639, 640, 641, 649, 656, 657, 659, 666, 667,
	669, 671, 676, 685, 705, 175, 176, 187, 194, 202,
	214, 227, 232, 241, 244, 247, 250, 251, 253, 258,
	275, 279, 280, 281, 282, 298, 299, 300, 303, 306,
	307, 309, 311, 312, 315, 321, 322, 323, 324, 325,
	327, 334, 337, 343, 344, 345, 346, 347, 348, 349,
	353, 354, 355, 356, 364, 367, 381, 382, 392, 402,
	406, 242, 389, 407, 0, 274, 648, 180, 205, 193,
	212, 226, 228, 255, 283, 289, 317, 320, 239, 223,
	203, 336, 201, 351, 370, 371, 372, 374, 287, 219,
	305, 0, 0, 1251, 0, 469, 0, 0, 0, 222,
	0, 468, 0, 0, 0, 264, 0, 1252, 318, 0,
	352, 208, 273, 271, 378, 231, 225, 221, 207, 249,
	278, 316, 369, 310, 512, 268, 0, 0, 361, 290,
	0, 0, 0, 0, 0, 503, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 206, 178, 302, 362,
	233, 67, 0, 0, 160, 161, 162, 490, 489, 492,
	493, 494, 495, 0, 0, 198, 491, 204, 496, 497,
	498, 0, 218, 252, 224, 217, 376, 0, 0, 0,
	466, 483, 0, 511, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 481, 555, 0, 0, 0, 526,
	0, 482, 0, 0, 475, 476, 478, 477, 479, 484,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 291, 525, 0, 0, 403, 0, 0, 523, 0,
	0, 0, 0, 0, 263, 0, 260, 174, 188, 0,
	0, 301, 338, 342, 0, 0, 0, 209, 0, 340,
	314, 391, 0, 319, 339, 269, 380, 331, 390, 404,
	405, 216, 295, 397, 373, 401, 413, 189, 213, 308,
	366, 394, 358, 288, 377, 259, 357, 238, 177, 267,
	181, 368, 388, 199, 350, 0, 0, 0, 183, 386,
	365, 285, 256, 257, 182, 0, 335, 220, 236, 211,
	304, 383, 384, 210, 415, 190, 400, 185, 191, 399,
	297, 379, 387, 286, 277, 184, 385, 284, 276, 262,
	230, 245, 329, 272, 330, 246, 293, 292, 294, 0,
	179, 0, 363, 395, 416, 196, 0, 0, 375, 409,
	412, 0, 332, 197, 237, 229, 328, 235, 265, 408,
	410, 411, 195, 326, 243, 296, 192, 248, 359, 261,
	270, 0, 0, 313, 341, 200, 393, 360, 513, 524,
	519, 520, 517, 518, 0, 516, 515, 514, 527, 505,
	506, 507, 508, 510, 0, 521, 522, 509, 173, 186,
	266, 0, 333, 234, 414, 398, 396, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 176, 187, 194, 202, 214, 227, 232,
	241, 244, 247, 250, 251, 253, 258, 275, 279, 280,
	281, 282, 298, 299, 300, 303, 306, 307, 309, 311,
	312, 315, 321, 322, 323, 324, 325, 327, 334, 337,
	343, 344, 345, 346, 347, 348, 349, 353, 354, 355,
	356, 364, 367, 381, 382, 392, 402, 406, 242, 389,
	407, 0, 274, 0, 180, 205, 193, 212, 226, 228,
	255, 283, 289, 317, 320, 239, 223, 203, 336, 201,
	351, 370, 371, 372, 374, 287, 219, 305, 0, 0,
	0, 0, 469, 0, 0, 0, 222, 0, 468, 0,
	0, 0, 264, 0, 0, 318, 0, 352, 208, 273,
	271, 378, 231, 225, 221, 207, 249, 278, 316, 369,
	310, 512, 268, 0, 0, 361, 290, 0, 0, 0,
	0, 0, 503, 504, 0, 0, 0, 0, 0, 0,
	1361, 0, 254, 206, 178, 302, 362, 233, 67, 0,
	0, 160, 161, 162, 490, 489, 492, 493, 494, 495,
	0, 0, 198, 491, 204, 496, 497, 498, 1362, 218,
	252, 224, 217, 376, 0, 0, 0, 466, 483, 0,
	511, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 481, 0, 0, 0, 0, 526, 0, 482, 0,
	0, 475, 476, 478, 477, 479, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 291, 525,
	0, 0, 403, 0, 0, 523, 0, 0, 0, 0,
	0, 263, 0, 260, 174, 188, 0, 0, 301, 338,
	342, 0, 0, 0, 209, 0, 340, 314, 391, 0,
	319, 339, 269, 380, 331, 390, 404, 405, 216, 295,
	397, 373, 401, 413, 189, 213, 308, 366, 394, 358,
	288, 377, 259, 357, 238, 177, 267, 181, 368, 388,
	199, 350, 0, 0, 0, 183, 386, 365, 285, 256,
	257, 182, 0, 335, 220, 236, 211, 304, 383, 384,
	210, 415, 190, 400, 185, 191, 399, 297, 379, 387,
	286, 277, 184, 385, 284, 276, 262, 230, 245, 329,
	272, 330, 246, 293, 292, 294, 0, 179, 0, 363,
	395, 416, 196, 0, 0, 375, 409, 412, 0, 332,
	197, 237, 229, 328, 235, 265, 408, 410, 411, 195,
	326, 243, 296, 192, 248, 359, 261, 270, 0, 0,
	313, 341, 200, 393, 360, 513, 524, 519, 520, 517,
	518, 0, 516, 515, 514, 527, 505, 506, 507, 508,
	510, 0, 521, 522, 509, 173, 186, 266, 0, 333,
	234, 414, 398, 396, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	176, 187, 194, 202, 214, 227, 232, 241, 244, 247,
	250, 251, 253, 258, 275, 279, 280, 281, 282, 298,
	299, 300, 303, 306, 307, 309, 311, 312, 315, 321,
	322, 323, 324, 325, 327, 334, 337, 343, 344, 345,
	346, 347, 348, 349, 353, 354, 355, 356, 364, 367,
	381, 382, 392, 402, 406, 242, 389, 407, 0, 274,
	0, 180, 205, 193, 212, 226, 228, 255, 283, 289,
	317, 320, 239, 223, 203, 336, 201, 351, 370, 371,
	372, 374, 287, 219, 305, 0, 0, 0, 0, 469,
	0, 0, 0, 222, 0, 468, 0, 0, 0, 264,
	0, 0, 318, 0, 352, 208, 273, 271, 378, 231,
	225, 221, 207, 249, 278, 316, 369, 310, 512, 268,
	0, 0, 361, 290, 0, 0, 0, 0, 0, 503,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	206, 178, 302, 362, 233, 67, 0, 543, 160, 161,
	162, 490, 489, 492, 493, 494, 495, 0, 0, 198,
	491, 204, 496, 497, 498, 0, 218, 252, 224, 217,
	376, 0, 0, 0, 466, 483, 0, 511, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 480, 481, 0,
	0, 0, 0, 526, 0, 482, 0, 0, 475, 476,
	478, 477, 479, 484, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 291, 525, 0, 0, 403,
	0, 0, 523, 0, 0, 0, 0, 0, 263, 0,
	260, 174, 188, 0, 0, 301, 338, 342, 0, 0,
	0, 209, 0, 340, 314, 391, 0, 319, 339, 269,
	380, 331, 390, 404, 405, 216, 295, 397, 373, 401,
	413, 189, 213, 308, 366, 394, 358, 288, 377, 259,
	357, 238, 177, 267, 181, 368, 388, 199, 350, 0,
	0, 0, 183, 386, 365, 285, 256, 257, 182, 0,
	335, 220, 236, 211, 304, 383, 384, 210, 415, 190,
	400, 185, 191, 399, 297, 379, 387, 286, 277, 184,
	385, 284, 276, 262, 230, 245, 329, 272, 330, 246,
	293, 292, 294, 0, 179, 0, 363, 395, 416, 196,
	0, 0, 375, 409, 412, 0, 332, 197, 237, 229,
	328, 235, 265, 408, 410, 411, 195, 326, 243, 296,
	192, 248, 359, 261, 270, 0, 0, 313, 341, 200,
	393, 360, 513, 524, 519, 520, 517, 518, 0, 516,
	515, 514, 527, 505, 506, 507, 508, 510, 0, 521,
	522, 509, 173, 186, 266, 0, 333, 234, 414, 398,
	396, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 176, 187, 194,
	202, 214, 227, 232, 241, 244, 247, 250, 251, 253,
	258, 275, 279, 280, 281, 282, 298, 299, 300, 303,
	306, 307, 309, 311, 312, 315, 321, 322, 323, 324,
	325, 327, 334, 337, 343, 344, 345, 346, 347, 348,
	349, 353, 354, 355, 356, 364, 367, 381, 382, 392,
	402, 406, 242, 389, 407, 0, 274, 0, 180, 205,
	193, 212, 226, 228, 255, 283, 289, 317, 320, 239,
	223, 203, 336, 201, 351, 370, 371, 372, 374, 287,
	219, 305, 0, 0, 0, 0, 469, 0, 0, 0,
	222, 0, 468, 0, 0, 0, 264, 0, 0, 318,
	0, 352, 208, 273, 271, 378, 231, 225, 221, 207,
	249, 278, 316, 369, 310, 512, 268, 0, 0, 361,
	290, 0, 0, 0, 0, 0, 503, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 206, 178, 302,
	362, 233, 67, 0, 0, 160, 161, 162, 490, 489,
	492, 493, 494, 495, 0, 0, 198, 491, 204, 496,
	497, 498, 0, 218, 252, 224, 217, 376, 0, 0,
	0, 466, 483, 0, 511, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 481, 555, 0, 0, 0,
	526, 0, 482, 0, 0, 475, 476, 478, 477, 479,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 291, 525, 0, 0, 403, 0, 0, 523,
	0, 0, 0, 0, 0, 263, 0, 260, 174, 188,
	0, 0, 301, 338, 342, 0, 0, 0, 209, 0,
	340, 314, 391, 0, 319, 339, 269, 380, 331, 390,
	404, 405, 216, 295, 397, 373, 401, 413, 189, 213,
	308, 366, 394, 358, 288, 377, 259, 357, 238, 177,
	267, 181, 368, 388, 199, 350, 0, 0, 0, 183,
	386, 365, 285, 256, 257, 182, 0, 335, 220, 236,
	211, 304, 383, 384, 210, 415, 190, 400, 185, 191,
	399, 297, 379, 387, 286, 277, 184, 385, 284, 276,
	262, 230, 245, 329, 272, 330, 246, 293, 292, 294,
	0, 179, 0, 363, 395, 416, 196, 0, 0, 375,
	409, 412, 0, 332, 197, 237, 229, 328, 235, 265,
	408, 410, 411, 195, 326, 243, 296, 192, 248, 359,
	261, 270, 0, 0, 313, 341, 200, 393, 360, 513,
	524, 519, 520, 517, 518, 0, 516, 515, 514, 527,
	505, 506, 507, 508, 510, 0, 521, 522, 509, 173,
	186, 266, 0, 333, 234, 414, 398, 396, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 176, 187, 194, 202, 214, 227,
	232, 241, 244, 247, 250, 251, 253, 258, 275, 279,
	280, 281, 282, 298, 299, 300, 303, 306, 307, 309,
	311, 312, 315, 321, 322, 323, 324, 325, 327, 334,
	337, 343, 344, 345, 346, 347, 348, 349, 353, 354,
	355, 356, 364, 367, 381, 382, 392, 402, 406, 242,
	389, 407, 0, 274, 0, 180, 205, 193, 212, 226,
	228, 255, 283, 289, 317, 320, 239, 223, 203, 336,
	201, 351, 370, 371, 372, 374, 287, 219, 305, 0,
	0, 0, 0, 469, 0, 0, 0, 222, 0, 468,
	0, 0, 0, 264, 0, 0, 318, 0, 352, 208,
	273, 271, 378, 231, 225, 221, 207, 249, 278, 316,
	369, 310, 512, 268, 0, 0, 361, 290, 0, 0,
	0, 0, 0, 503, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 206, 178, 302, 362, 233, 67,
	0, 0, 160, 161, 162, 490, 1269, 492, 493, 494,
	495, 0, 0, 198, 491, 204, 496, 497, 498, 0,
	218, 252, 224, 217, 376, 0, 0, 0, 466, 483,
	0, 511, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 480, 481, 555, 0, 0, 0, 526, 0, 482,
	0, 0, 475, 476, 478, 477, 479, 484, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 291,
	525, 0, 0, 403, 0, 0, 523, 0, 0, 0,
	0, 0, 263, 0, 260, 174, 188, 0, 0, 301,
	338, 342, 0, 0, 0, 209, 0, 340, 314, 391,
	0, 319, 339, 269, 380, 331, 390, 404, 405, 216,
	295, 397, 373, 401, 413, 189, 213, 308, 366, 394,
	358, 288, 377, 259, 357, 238, 177, 267, 181, 368,
	388, 199, 350, 0, 0, 0, 183, 386, 365, 285,
	256, 257, 182, 0, 335, 220, 236, 211, 304, 383,
	384, 210, 415, 190, 400, 185, 191, 399, 297, 379,
	387, 286, 277, 184, 385, 284, 276, 262, 230, 245,
	329, 272, 330, 246, 293, 292, 294, 0, 179, 0,
	363, 395, 416, 196, 0, 0, 375, 409, 412, 0,
	332, 197, 237, 229, 328, 235, 265, 408, 410, 411,
	195, 326, 243, 296, 192, 248, 359, 261, 270, 0,
	0, 313, 341, 200, 393, 360, 513, 524, 519, 520,
	517, 518, 0, 516, 515, 514, 527, 505, 506, 507,
	508, 510, 0, 521, 522, 509, 173, 186, 266, 0,
	333, 234, 414, 398, 396, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 176, 187, 194, 202, 214, 227, 232, 241, 244,
	247, 250, 251, 253, 258, 275, 279, 280, 281, 282,
	298, 299, 300, 303, 306, 307, 309, 311, 312, 315,
	321, 322, 323, 324, 325, 327, 334, 337, 343, 344,
	345, 346, 347, 348, 349, 353, 354, 355, 356, 364,
	367, 381, 382, 392, 402, 406, 242, 389, 407, 0,
	274, 0, 180, 205, 193, 212, 226, 228, 255, 283,
	289, 317, 320, 239, 223, 203, 336, 201, 351, 370,
	371, 372, 374, 287, 219, 305, 0, 0, 0, 0,
	469, 0, 0, 0, 222, 0, 468, 0, 0, 0,
	264, 0, 0, 318, 0, 352, 208, 273, 271, 378,
	231, 225, 221, 207, 249, 278, 316, 369, 310, 512,
	268, 0, 0, 361, 290, 0, 0, 0, 0, 0,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 206, 178, 302, 362, 233, 67, 0, 0, 160,
	161, 162, 490, 1266, 492, 493, 494, 495, 0, 0,
	198, 491, 204, 496, 497, 498, 0, 218, 252, 224,
	217, 376, 0, 0, 0, 466, 483, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 481,
	555, 0, 0, 0, 526, 0, 482, 0, 0, 475,
	476, 478, 477, 479, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 291, 525, 0, 0,
	403, 0, 0, 523, 0, 0, 0, 0, 0, 263,
	0, 260, 174, 188, 0, 0, 301, 338, 342, 0,
	0, 0, 209, 0, 340, 314, 391, 0, 319, 339,
	269, 380, 331, 390, 404, 405, 216, 295, 397, 373,
	401, 413, 189, 213, 308, 366, 394, 358, 288, 377,
	259, 357, 238, 177, 267, 181, 368, 388, 199, 350,
	0, 0, 0, 183, 386, 365, 285, 256, 257, 182,
	0, 335, 220, 236, 211, 304, 383, 384, 210, 415,
	190, 400, 185, 191, 399, 297, 379, 387, 286, 277,
	184, 385, 284, 276, 262, 230, 245, 329, 272, 330,
	246, 293, 292, 294, 0, 179, 0, 363, 395, 416,
	196, 0, 0, 375, 409, 412, 0, 332, 197, 237,
	229, 328, 235, 265, 408, 410, 411, 195, 326, 243,
	296, 192, 248, 359, 261, 270, 0, 0, 313, 341,
	200, 393, 360, 513, 524, 519, 520, 517, 518, 0,
	516, 515, 514, 527, 505, 506, 507, 508, 510, 0,
	521, 522, 509, 173, 186, 266, 0, 333, 234, 414,
	398, 396, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 176, 187,
	194, 202, 214, 227, 232, 241, 244, 247, 250, 251,
	253, 258, 275, 279, 280, 281, 282, 298, 299, 300,
	303, 306, 307, 309, 311, 312, 315, 321, 322, 323,
	324, 325, 327, 334, 337, 343, 344, 345, 346, 347,
	348, 349, 353, 354, 355, 356, 364, 367, 381, 382,
	392, 402, 406, 242, 389, 407, 0, 274, 0, 180,
	205, 193, 212, 226, 228, 255, 283, 289, 317, 320,
	239, 223, 203, 336, 201, 351, 370, 371, 372, 374,
	287, 219, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 305, 0, 0, 0, 0,
	469, 0, 0, 0, 222, 0, 468, 0, 0, 0,
	264, 0, 0, 318, 0, 352, 208, 273, 271, 378,
	231, 225, 221, 207, 249, 278, 316, 369, 310, 512,
	268, 0, 0, 361, 290, 0, 0, 0, 0, 0,
	503, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 206, 178, 302, 362, 233, 67, 0, 0, 160,
	161, 162, 490, 489, 492, 493, 494, 495, 0, 0,
	198, 491, 204, 496, 497, 498, 0, 218, 252, 224,
	217, 376, 0, 0, 0, 466, 483, 0, 511, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 480, 481,
	0, 0, 0, 0, 526, 0, 482, 0, 0, 475,
	476, 478, 477, 479, 484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 291, 525, 0, 0,
	403, 0, 0, 523, 0, 0, 0, 0, 0, 263,
	0, 260, 174, 188, 0, 0, 301, 338, 342, 0,
	0, 0, 209, 0, 340, 314, 391, 0, 319, 339,
	269, 380, 331, 390, 404, 405, 216, 295, 397, 373,
	401, 413, 189, 213, 308, 366, 394, 358, 288, 377,
	259, 357, 238, 177, 267, 181, 368, 388, 199, 350,
	0, 0, 0, 183, 386, 365, 285, 256, 257, 182,
	0, 335, 220, 236, 211, 304, 383, 384, 210, 415,
	190, 400, 185, 191, 399, 297, 379, 387, 286, 277,
	184, 385, 284, 276, 262, 230, 245, 329, 272, 330,
	246, 293, 292, 294, 0, 179, 0, 363, 395, 416,
	196, 0, 0, 375, 409, 412, 0, 332, 197, 237,
	229, 328, 235, 265, 408, 410, 411, 195, 326, 243,
	296, 192, 248, 359, 261, 270, 0, 0, 313, 341,
	200, 393, 360, 513, 524, 519, 520, 517, 518, 0,
	516, 515, 514, 527, 505, 506, 507, 508, 510, 0,
	521, 522, 509, 173, 186, 266, 0, 333, 234, 414,
	398, 396, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 176, 187,
	194, 202, 214, 227, 232, 241, 244, 247, 250, 251,
	253, 258, 275, 279, 280, 281, 282, 298, 299, 300,
	303, 306, 307, 309, 311, 312, 315, 321, 322, 323,
	324, 325, 327, 334, 337, 343, 344, 345, 346, 347,
	348, 349, 353, 354, 355, 356, 364, 367, 381, 382,
	392, 402, 406, 242, 389, 407, 0, 274, 0, 180,
	205, 193, 212, 226, 228, 255, 283, 289, 317, 320,
	239, 223, 203, 336, 201, 351, 370, 371, 372, 374,
	287, 219, 305, 0, 0, 0, 0, 469, 0, 0,
	0, 222, 0, 468, 0, 0, 0, 264, 0, 0,
	318, 0, 352, 208, 273, 271, 378, 231, 225, 221,
	207, 249, 278, 316, 369, 310, 512, 268, 0, 0,
	361, 290, 0, 0, 0, 0, 0, 503, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 206, 178,
	302, 362, 233, 67, 0, 0, 160, 161, 162, 490,
	489, 492, 493, 494, 495, 0, 0, 198, 491, 204,
	496, 497, 498, 0, 218, 252, 224, 217, 376, 0,
	0, 0, 466, 483, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 481, 0, 0, 0,
	0, 526, 0, 482, 0, 0, 475, 476, 478, 477,
	479, 484, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 291, 525, 0, 0, 403, 0, 0,
	523, 0, 0, 0, 0, 0, 263, 0, 260, 174,
	188, 0, 0, 301, 338, 342, 0, 0, 0, 209,
	0, 340, 314, 391, 0, 319, 339, 269, 380, 331,
	390, 404, 405, 216, 295, 397, 373, 401, 413, 189,
	213, 308, 366, 394, 358, 288, 377, 259, 357, 238,
	177, 267, 181, 368, 388, 199, 350, 0, 0, 0,
	183, 386, 365, 285, 256, 257, 182, 0, 335, 220,
	236, 211, 304, 383, 384, 210, 415, 190, 400, 185,
	191, 399, 297, 379, 387, 286, 277, 184, 385, 284,
	276, 262, 230, 245, 329, 272, 330, 246, 293, 292,
	294, 0, 179, 0, 363, 395, 416, 196, 0, 0,
	375, 409, 412, 0, 332, 197, 237, 229, 328, 235,
	265, 408, 410, 411, 195, 326, 243, 296, 192, 248,
	359, 261, 270, 0, 0, 313, 341, 200, 393, 360,
	513, 524, 519, 520, 517, 518, 0, 516, 515, 514,
	527, 505, 506, 507, 508, 510, 0, 521, 522, 509,
	173, 186, 266, 0, 333, 234, 414, 398, 396, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 176, 187, 194, 202, 214,
	227, 232, 241, 244, 247, 250, 251, 253, 258, 275,
	279, 280, 281, 282, 298, 299, 300, 303, 306, 307,
	309, 311, 312, 315, 321, 322, 323, 324, 325, 327,
	334, 337, 343, 344, 345, 346, 347, 348, 349, 353,
	354, 355, 356, 364, 367, 381, 382, 392, 402, 406,
	242, 389, 407, 0, 274, 0, 180, 205, 193, 212,
	226, 228, 255, 283, 289, 317, 320, 239, 223, 203,
	336, 201, 351, 370, 371, 372, 374, 287, 219, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 264, 0, 0, 318, 0, 352,
	208, 273, 271, 378, 231, 225, 221, 207, 249, 278,
	316, 369, 310, 512, 268, 0, 0, 361, 290, 0,
	0, 0, 0, 0, 503, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 206, 178, 302, 362, 233,
	67, 0, 543, 160, 161, 162, 490, 489, 492, 493,
	494, 495, 0, 0, 198, 491, 204, 496, 497, 498,
	0, 218, 252, 224, 217, 376, 0, 0, 0, 0,
	483, 0, 511, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 481, 0, 0, 0, 0, 526, 0,
	482, 0, 0, 475, 476, 478, 477, 479, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	291, 525, 0, 0, 403, 0, 0, 523, 0, 0,
	0, 0, 0, 263, 0, 260, 174, 188, 0, 0,
	301, 338, 342, 0, 0, 0, 209, 0, 340, 314,
	391, 0, 319, 339, 269, 380, 331, 390, 404, 405,
	216, 295, 397, 373, 401, 413, 189, 213, 308, 366,
	394, 358, 288, 377, 259, 357, 238, 177, 267, 181,
	368, 388, 199, 350, 0, 0, 0, 183, 386, 365,
	285, 256, 257, 182, 0, 335, 220, 236, 211, 304,
	383, 384, 210, 415, 190, 400, 185, 191, 399, 297,
	379, 387, 286, 277, 184, 385, 284, 276, 262, 230,
	245, 329, 272, 330, 246, 293, 292, 294, 0, 179,
	0, 363, 395, 416, 196, 0, 0, 375, 409, 412,
	0, 332, 197, 237, 229, 328, 235, 265, 408, 410,
	411, 195, 326, 243, 296, 192, 248, 359, 261, 270,
	0, 0, 313, 341, 200, 393, 360, 513, 524, 519,
	520, 517, 518, 0, 516, 515, 514, 527, 505, 506,
	507, 508, 510, 0, 521, 522, 509, 173, 186, 266,
	0, 333, 234, 414, 398, 396, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 176, 187, 194, 202, 214, 227, 232, 241,
	244, 247, 250, 251, 253, 258, 275, 279, 280, 281,
	282, 298, 299, 300, 303, 306, 307, 309, 311, 312,
	315, 321, 322, 323, 324, 325, 327, 334, 337, 343,
	344, 345, 346, 347, 348, 349, 353, 354, 355, 356,
	364, 367, 381, 382, 392, 402, 406, 242, 389, 407,
	0, 274, 0, 180, 205, 193, 212, 226, 228, 255,
	283, 289, 317, 320, 239, 223, 203, 336, 201, 351,
	370, 371, 372, 374, 287, 219, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 264, 0, 0, 318, 0, 352, 208, 273, 271,
	378, 231, 225, 221, 207, 249, 278, 316, 369, 310,
	512, 268, 0, 0, 361, 290, 0, 0, 0, 0,
	0, 503, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 206, 178, 302, 362, 233, 67, 0, 0,
	160, 161, 162, 490, 489, 492, 493, 494, 495, 0,
	0, 198, 491, 204, 496, 497, 498, 0, 218, 252,
	224, 217, 376, 0, 0, 0, 0, 483, 0, 511,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	481, 0, 0, 0, 0, 526, 0, 482, 0, 0,
	475, 476, 478, 477, 479, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 291, 525, 0,
	0, 403, 0, 0, 523, 0, 0, 0, 0, 0,
	263, 0, 260, 174, 188, 0, 0, 301, 338, 342,
	0, 0, 0, 209, 0, 340, 314, 391, 0, 319,
	339, 269, 380, 331, 390, 404, 405, 216, 295, 397,
	373, 401, 413, 189, 213, 308, 366, 394, 358, 288,
	377, 259, 357, 238, 177, 267, 181, 368, 388, 199,
	350, 0, 0, 0, 183, 386, 365, 285, 256, 257,
	182, 0, 335, 220, 236, 211, 304, 383, 384, 210,
	415, 190, 400, 185, 191, 399, 297, 379, 387, 286,
	277, 184, 385, 284, 276, 262, 230, 245, 329, 272,
	330, 246, 293, 292, 294, 0, 179, 0, 363, 395,
	416, 196, 0, 0, 375, 409, 412, 0, 332, 197,
	237, 229, 328, 235, 265, 408, 410, 411, 195, 326,
	243, 296, 192, 248, 359, 261, 270, 0, 0, 313,
	341, 200, 393, 360, 513, 524, 519, 520, 517, 518,
	0, 516, 515, 514, 527, 505, 506, 507, 508, 510,
	0, 521, 522, 509, 173, 186, 266, 0, 333, 234,
	414, 398, 396, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 176,
	187, 194, 202, 214, 227, 232, 241, 244, 247, 250,
	251, 253, 258, 275, 279, 280, 281, 282, 298, 299,
	300, 303, 306, 307, 309, 311, 312, 315, 321, 322,
	323, 324, 325, 327, 334, 337, 343, 344, 345, 346,
	347, 348, 349, 353, 354, 355, 356, 364, 367, 381,
	382, 392, 402, 406, 242, 389, 407, 0, 274, 0,
	180, 205, 193, 212, 226, 228, 255, 283, 289, 317,
	320, 239, 223, 203, 336, 201, 351, 370, 371, 372,
	374, 287, 219, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 264, 0,
	0, 318, 0, 352, 208, 273, 271, 378, 231, 225,
	221, 207, 249, 278, 316, 369, 310, 0, 268, 0,
	0, 361, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 206,
	178, 302, 362, 233, 0, 0, 0, 160, 161, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 198, 0,
	204, 0, 0, 0, 0, 218, 252, 224, 217, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 879, 878, 888, 889, 881, 882, 883, 884,
	885, 886, 887, 880, 0, 0, 890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 291, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 260,
	174, 188, 0, 0, 301, 338, 342, 0, 0, 0,
	209, 0, 340, 314, 391, 0, 319, 339, 269, 380,
	331, 390, 404, 405, 216, 295, 397, 373, 401, 413,
	189, 213, 308, 366, 394, 358, 288, 377, 259, 357,
	238, 177, 267, 181, 368, 388, 199, 350, 0, 0,
	0, 183, 386, 365, 285, 256, 257, 182, 0, 335,
	220, 236, 211, 304, 383, 384, 210, 415, 190, 400,
	185, 191, 399, 297, 379, 387, 286, 277, 184, 385,
	284, 276, 262, 230, 245, 329, 272, 330, 246, 293,
	292, 294, 0, 179, 0, 363, 395, 416, 196, 0,
	0, 375, 409, 412, 0, 332, 197, 237, 229, 328,
	235, 265, 408, 410, 411, 195, 326, 243, 296, 192,
	248, 359, 261, 270, 0, 0, 313, 341, 200, 393,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 186, 266, 0, 333, 234, 414, 398, 396,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 176, 187, 194, 202,
	214, 227, 232, 241, 244, 247, 250, 251, 253, 258,
	275, 279, 280, 281, 282, 298, 299, 300, 303, 306,
	307, 309, 311, 312, 315, 321, 322, 323, 324, 325,
	327, 334, 337, 343, 344, 345, 346, 347, 348, 349,
	353, 354, 355, 356, 364, 367, 381, 382, 392, 402,
	406, 242, 389, 407, 0, 274, 0, 180, 205, 193,
	212, 226, 228, 255, 283, 289, 317, 320, 239, 223,
	203, 336, 201, 351, 370, 371, 372, 374, 287, 219,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	747, 0, 0, 0, 0, 264, 0, 0, 318, 0,
	352, 208, 273, 271, 378, 231, 225, 221, 207, 249,
	278, 316, 369, 310, 0, 268, 0, 0, 361, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 206, 178, 302, 362,
	233, 0, 0, 0, 160, 161, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 198, 0, 204, 0, 0,
	0, 0, 218, 252, 224, 217, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 291, 0, 0, 746, 403, 0, 0, 0, 0,
	0, 0, 743, 744, 263, 715, 260, 174, 188, 737,
	741, 301, 338, 342, 0, 0, 0, 209, 0, 340,
	314, 391, 0, 319, 339, 269, 380, 331, 390, 404,
	405, 216, 295, 397, 373, 401, 413, 189, 213, 308,
	366, 394, 358, 288, 377, 259, 357, 238, 177, 267,
	181, 368, 388, 199, 350, 0, 0, 0, 183, 386,
	365, 285, 256, 257, 182, 0, 335, 220, 236, 211,
	304, 383, 384, 210, 415, 190, 400, 185, 191, 399,
	297, 379, 387, 286, 277, 184, 385, 284, 276, 262,
	230, 245, 329, 272, 330, 246, 293, 292, 294, 0,
	179, 0, 363, 395, 416, 196, 0, 0, 375, 409,
	412, 0, 332, 197, 237, 229, 328, 235, 265, 408,
	410, 411, 195, 326, 243, 296, 192, 248, 359, 261,
	270, 0, 0, 313, 341, 200, 393, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 186,
	266, 0, 333, 234, 414, 398, 396, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 176, 187, 194, 202, 214, 227, 232,
	241, 244, 247, 250, 251, 253, 258, 275, 279, 280,
	281, 282, 298, 299, 300, 303, 306, 307, 309, 311,
	312, 315, 321, 322, 323, 324, 325, 327, 334, 337,
	343, 344, 345, 346, 347, 348, 349, 353, 354, 355,
	356, 364, 367, 381, 382, 392, 402, 406, 242, 389,
	407, 0, 274, 0, 180, 205, 193, 212, 226, 228,
	255, 283, 289, 317, 320, 239, 223, 203, 336, 201,
	351, 370, 371, 372, 374, 287, 219, 305, 0, 0,
	0, 979, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 264, 0, 0, 318, 0, 352, 208, 273,
	271, 378, 231, 225, 221, 207, 249, 278, 316, 369,
	310, 0, 268, 0, 0, 361, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 206, 178, 302, 362, 233, 0, 0,
	0, 160, 161, 162, 0, 981, 0, 0, 0, 0,
	0, 0, 198, 0, 204, 0, 0, 0, 0, 218,
	252, 224, 217, 376, 868, 869, 867, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 291, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 260, 174, 188, 0, 0, 301, 338,
	342, 0, 0, 0, 209, 0, 340, 314, 391, 0,
	319, 339, 269, 380, 331, 390, 404, 405, 216, 295,
	397, 373, 401, 413, 189, 213, 308, 366, 394, 358,
	288, 377, 259, 357, 238, 177, 267, 181, 368, 388,
	199, 350, 0, 0, 0, 183, 386, 365, 285, 256,
	257, 182, 0, 335, 220, 236, 211, 304, 383, 384,
	210, 415, 190, 400, 185, 191, 399, 297, 379, 387,
	286, 277, 184, 385, 284, 276, 262, 230, 245, 329,
	272, 330, 246, 293, 292, 294, 0, 179, 0, 363,
	395, 416, 196, 0, 0, 375, 409, 412, 0, 332,
	197, 237, 229, 328, 235, 265, 408, 410, 411, 195,
	326, 243, 296, 192, 248, 359, 261, 270, 0, 0,
	313, 341, 200, 393, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 186, 266, 0, 333,
	234, 414, 398, 396, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	176, 187, 194, 202, 214, 227, 232, 241, 244, 247,
	250, 251, 253, 258, 275, 279, 280, 281, 282, 298,
	299, 300, 303, 306, 307, 309, 311, 312, 315, 321,
	322, 323, 324, 325, 327, 334, 337, 343, 344, 345,
	346, 347, 348, 349, 353, 354, 355, 356, 364, 367,
	381, 382, 392, 402, 406, 242, 389, 407, 0, 274,
	0, 180, 205, 193, 212, 226, 228, 255, 283, 289,
	317, 320, 239, 223, 203, 336, 201, 351, 370, 371,
	372, 374, 287, 219, 33, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 264, 0, 0, 318, 0, 352, 208, 273,
	271, 378, 231, 225, 221, 207, 249, 278, 316, 369,
	310, 0, 268, 0, 0, 361, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 206, 178, 302, 362, 233, 67, 0,
	543, 160, 161, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 204, 0, 0, 0, 0, 218,
	252, 224, 217, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 291, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 260, 174, 188, 0, 0, 301, 338,
	342, 0, 0, 0, 209, 0, 340, 314, 391, 0,
	319, 339, 269, 380, 331, 390, 404, 405, 216, 295,
	397, 373, 401, 413, 189, 213, 308, 366, 394, 358,
	288, 377, 259, 357, 238, 177, 267, 181, 368, 388,
	199, 350, 0, 0, 0, 183, 386, 365, 285, 256,
	257, 182, 0, 335, 220, 236, 211, 304, 383, 384,
	210, 415, 190, 400, 185, 191, 399, 297, 379, 387,
	286, 277, 184, 385, 284, 276, 262, 230, 245, 329,
	272, 330, 246, 293, 292, 294, 0, 179, 0, 363,
	395, 416, 196, 0, 0, 375, 409, 412, 0, 332,
	197, 237, 229, 328, 235, 265, 408, 410, 411, 195,
	326, 243, 296, 192, 248, 359, 261, 270, 0, 0,
	313, 341, 200, 393, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 186, 266, 0, 333,
	234, 414, 398, 396, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	176, 187, 194, 202, 214, 227, 232, 241, 244, 247,
	250, 251, 253, 258, 275, 279, 280, 281, 282, 298,
	299, 300, 303, 306, 307, 309, 311, 312, 315, 321,
	322, 323, 324, 325, 327, 334, 337, 343, 344, 345,
	346, 347, 348, 349, 353, 354, 355, 356, 364, 367,
	381, 382, 392, 402, 406, 242, 389, 407, 0, 274,
	0, 180, 205, 193, 212, 226, 228, 255, 283, 289,
	317, 320, 239, 223, 203, 336, 201, 351, 370, 371,
	372, 374, 287, 219, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 0, 0, 0, 0, 0, 264,
	0, 0, 318, 0, 352, 208, 273, 271, 378, 231,
	225, 221, 207, 249, 278, 316, 369, 310, 0, 268,
	0, 0, 361, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 254,
	206, 178, 302, 362, 233, 0, 0, 0, 160, 161,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 198,
	0, 204, 0, 0, 0, 0, 218, 252, 224, 217,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 291, 0, 0, 0, 403,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 715,
	260, 174, 188, 713, 0, 301, 338, 342, 0, 0,
	0, 209, 0, 340, 314, 391, 0, 319, 339, 269,
	380, 331, 390, 404, 405, 216, 295, 397, 373, 401,
	413, 189, 213, 308, 366, 394, 358, 288, 377, 259,
	357, 238, 177, 267, 181, 368, 388, 199, 350, 0,
	0, 0, 183, 386, 365, 285, 256, 257, 182, 0,
	335, 220, 236, 211, 304, 383, 384, 210, 415, 190,
	400, 185, 191, 399, 297, 379, 387, 286, 277, 184,
	385, 284, 276, 262, 230, 245, 329, 272, 330, 246,
	293, 292, 294, 0, 179, 0, 363, 395, 416, 196,
	0, 0, 375, 409, 412, 0, 332, 197, 237, 229,
	328, 235, 265, 408, 410, 411, 195, 326, 243, 296,
	192, 248, 359, 261, 270, 0, 0, 313, 341, 200,
	393, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 186, 266, 0, 333, 234, 414, 398,
	396, 0, 0, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 175, 176, 187, 194,
	202, 214, 227, 232, 241, 244, 247, 250, 251, 253,
	258, 275, 279, 280, 281, 282, 298, 299, 300, 303,
	306, 307, 309, 311, 312, 315, 321, 322, 323, 324,
	325, 327, 334, 337, 343, 344, 345, 346, 347, 348,
	349, 353, 354, 355, 356, 364, 367, 381, 382, 392,
	402, 406, 242, 389, 407, 0, 274, 0, 180, 205,
	193, 212, 226, 228, 255, 283, 289, 317, 320, 239,
	223, 203, 336, 201, 351, 370, 371, 372, 374, 287,
	219, 305, 0, 0, 0, 1296, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 264, 0, 0, 318,
	0, 352, 208, 273, 271, 378, 231, 225, 221, 207,
	249, 278, 316, 369, 310, 0, 268, 0, 0, 361,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 206, 178, 302,
	362, 233, 0, 0, 0, 160, 161, 162, 0, 1298,
	0, 0, 0, 0, 0, 0, 198, 0, 204, 0,
	0, 0, 0, 218, 252, 224, 217, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 291, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 260, 174, 188,
	0, 0, 301, 338, 342, 0, 0, 0, 209, 0,
	340, 314, 391, 0, 319, 339, 269, 380, 331, 390,
	404, 405, 216, 295, 397, 373, 401, 413, 189, 213,
	308, 366, 394, 358, 288, 377, 259, 357, 238, 177,
	267, 181, 368, 388, 199, 350, 0, 0, 0, 183,
	386, 365, 285, 256, 257, 182, 0, 335, 220, 236,
	211, 304, 383, 384, 210, 415, 190, 400, 185, 191,
	399, 297, 379, 387, 286, 277, 184, 385, 284, 276,
	262, 230, 245, 329, 272, 330, 246, 293, 292, 294,
	0, 179, 0, 363, 395, 416, 196, 0, 0, 375,
	409, 412, 0, 332, 197, 237, 229, 328, 235, 265,
	408, 410, 411, 195, 326, 243, 296, 192, 248, 359,
	261, 270, 0, 0, 313, 341, 200, 393, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	186, 266, 0, 333, 234, 414, 398, 396, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 176, 187, 194, 202, 214, 227,
	232, 241, 244, 247, 250, 251, 253, 258, 275, 279,
	280, 281, 282, 298, 299, 300, 303, 306, 307, 309,
	311, 312, 315, 321, 322, 323, 324, 325, 327, 334,
	337, 343, 344, 345, 346, 347, 348, 349, 353, 354,
	355, 356, 364, 367, 381, 382, 392, 402, 406, 242,
	389, 407, 0, 274, 0, 180, 205, 193, 212, 226,
	228, 255, 283, 289, 317, 320, 239, 223, 203, 336,
	201, 351, 370, 371, 372, 374, 287, 219, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 264, 0, 0, 318,
	0, 352, 208, 273, 271, 378, 231, 225, 221, 207,
	249, 278, 316, 369, 310, 0, 268, 0, 0, 361,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 206, 178, 302,
	362, 233, 67, 0, 0, 160, 161, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 204, 0,
	0, 0, 0, 218, 252, 224, 217, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 291, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 260, 174, 188,
	0, 0, 301, 338, 342, 0, 0, 0, 209, 0,
	340, 314, 391, 0, 319, 339, 269, 380, 331, 390,
	404, 405, 216, 295, 397, 373, 401, 413, 189, 213,
	308, 366, 394, 358, 288, 377, 259, 357, 238, 177,
	267, 181, 368, 388, 199, 350, 0, 0, 0, 183,
	386, 365, 285, 256, 257, 182, 0, 335, 220, 236,
	211, 304, 383, 384, 210, 415, 190, 400, 185, 191,
	399, 297, 379, 387, 286, 277, 184, 385, 284, 276,
	262, 230, 245, 329, 272, 330, 246, 293, 292, 294,
	0, 179, 0, 363, 395, 416, 196, 0, 0, 375,
	409, 412, 0, 332, 197, 237, 229, 328, 235, 265,
	408, 410, 411, 195, 326, 243, 296, 192, 248, 359,
	261, 270, 0, 0, 313, 341, 200, 393, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	186, 266, 0, 333, 234, 414, 398, 396, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 176, 187, 194, 202, 214, 227,
	232, 241, 244, 247, 250, 251, 253, 258, 275, 279,
	280, 281, 282, 298, 299, 300, 303, 306, 307, 309,
	311, 312, 315, 321, 322, 323, 324, 325, 327, 334,
	337, 343, 344, 345, 346, 347, 348, 349, 353, 354,
	355, 356, 364, 367, 381, 382, 392, 402, 406, 242,
	389, 407, 0, 274, 0, 180, 205, 193, 212, 226,
	228, 255, 283, 289, 317, 320, 239, 223, 203, 336,
	201, 351, 370, 371, 372, 374, 287, 219, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 0, 0,
	0, 0, 0, 264, 0, 0, 318, 0, 352, 208,
	273, 271, 378, 231, 225, 221, 207, 249, 278, 316,
	369, 310, 0, 268, 0, 0, 361, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 206, 178, 302, 362, 233, 0,
	0, 0, 160, 161, 162, 0, 0, 1314, 0, 0,
	1315, 0, 0, 198, 0, 204, 0, 0, 0, 0,
	218, 252, 224, 217, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 291,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 260, 174, 188, 0, 0, 301,
	338, 342, 0, 0, 0, 209, 0, 340, 314, 391,
	0, 319, 339, 269, 380, 331, 390, 404, 405, 216,
	295, 397, 373, 401, 413, 189, 213, 308, 366, 394,
	358, 288, 377, 259, 357, 238, 177, 267, 181, 368,
	388, 199, 350, 0, 0, 0, 183, 386, 365, 285,
	256, 257, 182, 0, 335, 220, 236, 211, 304, 383,
	384, 210, 415, 190, 400, 185, 191, 399, 297, 379,
	387, 286, 277, 184, 385, 284, 276, 262, 230, 245,
	329, 272, 330, 246, 293, 292, 294, 0, 179, 0,
	363, 395, 416, 196, 0, 0, 375, 409, 412, 0,
	332, 197, 237, 229, 328, 235, 265, 408, 410, 411,
	195, 326, 243, 296, 192, 248, 359, 261, 270, 0,
	0, 313, 341, 200, 393, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 186, 266, 0,
	333, 234, 414, 398, 396, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 176, 187, 194, 202, 214, 227, 232, 241, 244,
	247, 250, 251, 253, 258, 275, 279, 280, 281, 282,
	298, 299, 300, 303, 306, 307, 309, 311, 312, 315,
	321, 322, 323, 324, 325, 327, 334, 337, 343, 344,
	345, 346, 347, 348, 349, 353, 354, 355, 356, 364,
	367, 381, 382, 392, 402, 406, 242, 389, 407, 0,
	274, 0, 180, 205, 193, 212, 226, 228, 255, 283,
	289, 317, 320, 239, 223, 203, 336, 201, 351, 370,
	371, 372, 374, 287, 219, 305, 0, 0, 0, 1296,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	264, 0, 0, 318, 0, 352, 208, 273, 271, 378,
	231, 225, 221, 207, 249, 278, 316, 369, 310, 0,
	268, 0, 0, 361, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 206, 178, 302, 362, 233, 0, 0, 0, 160,
	161, 162, 0, 1298, 0, 0, 0, 0, 0, 0,
	198, 0, 204, 0, 0, 0, 0, 218, 252, 224,
	217, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 291, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 260, 174, 188, 0, 0, 301, 338, 342, 0,
	0, 0, 209, 0, 340, 314, 391, 0, 1294, 339,
	269, 380, 331, 390, 404, 405, 216, 295, 397, 373,
	401, 413, 189, 213, 308, 366, 394, 358, 288, 377,
	259, 357, 238, 177, 267, 181, 368, 388, 199, 350,
	0, 0, 0, 183, 386, 365, 285, 256, 257, 182,
	0, 335, 220, 236, 211, 304, 383, 384, 210, 415,
	190, 400, 185, 191, 399, 297, 379, 387, 286, 277,
	184, 385, 284, 276, 262, 230, 245, 329, 272, 330,
	246, 293, 292, 294, 0, 179, 0, 363, 395, 416,
	196, 0, 0, 375, 409, 412, 0, 332, 197, 237,
	229, 328, 235, 265, 408, 410, 411, 195, 326, 243,
	296, 192, 248, 359, 261, 270, 0, 0, 313, 341,
	200, 393, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 186, 266, 0, 333, 234, 414,
	398, 396, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 176, 187,
	194, 202, 214, 227, 232, 241, 244, 247, 250, 251,
	253, 258, 275, 279, 280, 281, 282, 298, 299, 300,
	303, 306, 307, 309, 311, 312, 315, 321, 322, 323,
	324, 325, 327, 334, 337, 343, 344, 345, 346, 347,
	348, 349, 353, 354, 355, 356, 364, 367, 381, 382,
	392, 402, 406, 242, 389, 407, 0, 274, 0, 180,
	205, 193, 212, 226, 228, 255, 283, 289, 317, 320,
	239, 223, 203, 336, 201, 351, 370, 371, 372, 374,
	287, 219, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 1012, 0, 0, 0, 264, 0, 0,
	318, 0, 352, 208, 273, 271, 378, 231, 225, 221,
	207, 249, 278, 316, 369, 310, 0, 268, 0, 0,
	361, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 206, 178,
	302, 362, 233, 0, 0, 0, 160, 161, 162, 0,
	1011, 0, 0, 0, 0, 0, 0, 198, 0, 204,
	0, 0, 0, 0, 218, 252, 224, 217, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 291, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 260, 174,
	188, 0, 0, 301, 338, 342, 0, 0, 0, 209,
	0, 340, 314, 391, 0, 319, 339, 269, 380, 331,
	390, 404, 405, 216, 295, 397, 373, 401, 413, 189,
	213, 308, 366, 394, 358, 288, 377, 259, 357, 238,
	177, 267, 181, 368, 388, 199, 350, 0, 0, 0,
	183, 386, 365, 285, 256, 257, 182, 0, 335, 220,
	236, 211, 304, 383, 384, 210, 415, 190, 400, 185,
	191, 399, 297, 379, 387, 286, 277, 184, 385, 284,
	276, 262, 230, 245, 329, 272, 330, 246, 293, 292,
	294, 0, 179, 0, 363, 395, 416, 196, 0, 0,
	375, 409, 412, 0, 332, 197, 237, 229, 328, 235,
	265, 408, 410, 411, 195, 326, 243, 296, 192, 248,
	359, 261, 270, 0, 0, 313, 341, 200, 393, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 186, 266, 0, 333, 234, 414, 398, 396, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 176, 187, 194, 202, 214,
	227, 232, 241, 244, 247, 250, 251, 253, 258, 275,
	279, 280, 281, 282, 298, 299, 300, 303, 306, 307,
	309, 311, 312, 315, 321, 322, 323, 324, 325, 327,
	334, 337, 343, 344, 345, 346, 347, 348, 349, 353,
	354, 355, 356, 364, 367, 381, 382, 392, 402, 406,
	242, 389, 407, 0, 274, 0, 180, 205, 193, 212,
	226, 228, 255, 283, 289, 317, 320, 239, 223, 203,
	336, 201, 351, 370, 371, 372, 374, 287, 219, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 264, 0, 0, 318, 0, 352,
	208, 273, 271, 378, 231, 225, 221, 207, 249, 278,
	316, 369, 310, 0, 268, 0, 0, 361, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 206, 178, 302, 362, 233,
	0, 0, 543, 160, 161, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 204, 0, 0, 0,
	0, 218, 252, 224, 217, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	291, 0, 0, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 260, 174, 188, 0, 0,
	301, 338, 342, 0, 0, 0, 209, 0, 340, 314,
	391, 0, 319, 339, 269, 380, 331, 390, 404, 405,
	216, 295, 397, 373, 401, 413, 189, 213, 308, 366,
	394, 358, 288, 377, 259, 357, 238, 177, 267, 181,
	368, 388, 199, 350, 0, 0, 0, 183, 386, 365,
	285, 256, 257, 182, 0, 335, 220, 236, 211, 304,
	383, 384, 210, 415, 190, 400, 185, 191, 399, 297,
	379, 387, 286, 277, 184, 385, 284, 276, 262, 230,
	245, 329, 272, 330, 246, 293, 292, 294, 0, 179,
	0, 363, 395, 416, 196, 0, 0, 375, 409, 412,
	0, 332, 197, 237, 229, 328, 235, 265, 408, 410,
	411, 195, 326, 243, 296, 192, 248, 359, 261, 270,
	0, 0, 313, 341, 200, 393, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 186, 266,
	0, 333, 234, 414, 398, 396, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 176, 187, 194, 202, 214, 227, 232, 241,
	244, 247, 250, 251, 253, 258, 275, 279, 280, 281,
	282, 298, 299, 300, 303, 306, 307, 309, 311, 312,
	315, 321, 322, 323, 324, 325, 327, 334, 337, 343,
	344, 345, 346, 347, 348, 349, 353, 354, 355, 356,
	364, 367, 381, 382, 392, 402, 406, 242, 389, 407,
	0, 274, 0, 180, 205, 193, 212, 226, 228, 255,
	283, 289, 317, 320, 239, 223, 203, 336, 201, 351,
	370, 371, 372, 374, 287, 219, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 264, 0, 0, 318, 0, 352, 208, 273, 271,
	378, 231, 225, 221, 207, 249, 278, 316, 369, 310,
	0, 268, 0, 0, 361, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 206, 178, 302, 362, 233, 67, 0, 0,
	160, 161, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 204, 0, 0, 0, 0, 218, 252,
	224, 217, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 291, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 260, 174, 188, 0, 0, 301, 338, 342,
	0, 0, 0, 209, 0, 340, 314, 391, 0, 319,
	339, 269, 380, 331, 390, 404, 405, 216, 295, 397,
	373, 401, 413, 189, 213, 308, 366, 394, 358, 288,
	377, 259, 357, 238, 177, 267, 181, 368, 388, 199,
	350, 0, 0, 0, 183, 386, 365, 285, 256, 257,
	182, 0, 335, 220, 236, 211, 304, 383, 384, 210,
	415, 190, 400, 185, 191, 399, 297, 379, 387, 286,
	277, 184, 385, 284, 276, 262, 230, 245, 329, 272,
	330, 246, 293, 292, 294, 0, 179, 0, 363, 395,
	416, 196, 0, 0, 375, 409, 412, 0, 332, 197,
	237, 229, 328, 235, 265, 408, 410, 411, 195, 326,
	243, 296, 192, 248, 359, 261, 270, 0, 0, 313,
	341, 200, 393, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 186, 266, 0, 333, 234,
	414, 398, 396, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 176,
	187, 194, 202, 214, 227, 232, 241, 244, 247, 250,
	251, 253, 258, 275, 279, 280, 281, 282, 298, 299,
	300, 303, 306, 307, 309, 311, 312, 315, 321, 322,
	323, 324, 325, 327, 334, 337, 343, 344, 345, 346,
	347, 348, 349, 353, 354, 355, 356, 364, 367, 381,
	382, 392, 402, 406, 242, 389, 407, 0, 274, 0,
	180, 205, 193, 212, 226, 228, 255, 283, 289, 317,
	320, 239, 223, 203, 336, 201, 351, 370, 371, 372,
	374, 287, 219, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 0, 0, 0, 0, 0, 264, 0,
	0, 318, 0, 352, 208, 273, 271, 378, 231, 225,
	221, 207, 249, 278, 316, 369, 310, 0, 268, 0,
	0, 361, 290, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 254, 206,
	178, 302, 362, 233, 0, 0, 0, 160, 161, 162,
	0, 1298, 0, 0, 0, 0, 0, 0, 198, 0,
	204, 0, 0, 0, 0, 218, 252, 224, 217, 376,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 291, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 260,
	174, 188, 0, 0, 301, 338, 342, 0, 0, 0,
	209, 0, 340, 314, 391, 0, 319, 339, 269, 380,
	331, 390, 404, 405, 216, 295, 397, 373, 401, 413,
	189, 213, 308, 366, 394, 358, 288, 377, 259, 357,
	238, 177, 267, 181, 368, 388, 199, 350, 0, 0,
	0, 183, 386, 365, 285, 256, 257, 182, 0, 335,
	220, 236, 211, 304, 383, 384, 210, 415, 190, 400,
	185, 191, 399, 297, 379, 387, 286, 277, 184, 385,
	284, 276, 262, 230, 245, 329, 272, 330, 246, 293,
	292, 294, 0, 179, 0, 363, 395, 416, 196, 0,
	0, 375, 409, 412, 0, 332, 197, 237, 229, 328,
	235, 265, 408, 410, 411, 195, 326, 243, 296, 192,
	248, 359, 261, 270, 0, 0, 313, 341, 200, 393,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 186, 266, 0, 333, 234, 414, 398, 396,
	0, 0, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 175, 176, 187, 194, 202,
	214, 227, 232, 241, 244, 247, 250, 251, 253, 258,
	275, 279, 280, 281, 282, 298, 299, 300, 303, 306,
	307, 309, 311, 312, 315, 321, 322, 323, 324, 325,
	327, 334, 337, 343, 344, 345, 346, 347, 348, 349,
	353, 354, 355, 356, 364, 367, 381, 382, 392, 402,
	406, 242, 389, 407, 0, 274, 0, 180, 205, 193,
	212, 226, 228, 255, 283, 289, 317, 320, 239, 223,
	203, 336, 201, 351, 370, 371, 372, 374, 287, 219,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	0, 0, 0, 0, 0, 264, 0, 0, 318, 0,
	352, 208, 273, 271, 378, 231, 225, 221, 207, 249,
	278, 316, 369, 310, 0, 268, 0, 0, 361, 290,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 254, 206, 178, 302, 362,
	233, 0, 0, 0, 160, 161, 162, 0, 981, 0,
	0, 0, 0, 0, 0, 198, 0, 204, 0, 0,
	0, 0, 218, 252, 224, 217, 376, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 291, 0, 0, 0, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 260, 174, 188, 0,
	0, 301, 338, 342, 0, 0, 0, 209, 0, 340,
	314, 391, 0, 319, 339, 269, 380, 331, 390, 404,
	405, 216, 295, 397, 373, 401, 413, 189, 213, 308,
	366, 394, 358, 288, 377, 259, 357, 238, 177, 267,
	181, 368, 388, 199, 350, 0, 0, 0, 183, 386,
	365, 285, 256, 257, 182, 0, 335, 220, 236, 211,
	304, 383, 384, 210, 415, 190, 400, 185, 191, 399,
	297, 379, 387, 286, 277, 184, 385, 284, 276, 262,
	230, 245, 329, 272, 330, 246, 293, 292, 294, 0,
	179, 0, 363, 395, 416, 196, 0, 0, 375, 409,
	412, 0, 332, 197, 237, 229, 328, 235, 265, 408,
	410, 411, 195, 326, 243, 296, 192, 248, 359, 261,
	270, 0, 0, 313, 341, 200, 393, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 186,
	266, 0, 333, 234, 414, 398, 396, 0, 0, 215,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 175, 176, 187, 194, 202, 214, 227, 232,
	241, 244, 247, 250, 251, 253, 258, 275, 279, 280,
	281, 282, 298, 299, 300, 303, 306, 307, 309, 311,
	312, 315, 321, 322, 323, 324, 325, 327, 334, 337,
	343, 344, 345, 346, 347, 348, 349, 353, 354, 355,
	356, 364, 367, 381, 382, 392, 402, 406, 242, 389,
	407, 0, 274, 0, 180, 205, 193, 212, 226, 228,
	255, 283, 289, 317, 320, 239, 223, 203, 336, 201,
	351, 370, 371, 372, 374, 287, 219, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 0, 0, 0,
	0, 0, 264, 0, 0, 318, 0, 352, 208, 273,
	271, 378, 231, 225, 221, 207, 249, 278, 316, 369,
	310, 0, 268, 0, 0, 361, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 254, 206, 178, 302, 362, 233, 1084, 0,
	0, 160, 161, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 198, 0, 204, 0, 0, 0, 0, 218,
	252, 224, 217, 376, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 291, 0,
	0, 0, 403, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 260, 174, 188, 0, 0, 301, 338,
	342, 0, 0, 0, 209, 0, 340, 314, 391, 0,
	319, 339, 269, 380, 331, 390, 404, 405, 216, 295,
	397, 373, 401, 413, 189, 213, 308, 366, 394, 358,
	288, 377, 259, 357, 238, 177, 267, 181, 368, 388,
	199, 350, 0, 0, 0, 183, 386, 365, 285, 256,
	257, 182, 0, 335, 220, 236, 211, 304, 383, 384,
	210, 415, 190, 400, 185, 191, 399, 297, 379, 387,
	286, 277, 184, 385, 284, 276, 262, 230, 245, 329,
	272, 330, 246, 293, 292, 294, 0, 179, 0, 363,
	395, 416, 196, 0, 0, 375, 409, 412, 0, 332,
	197, 237, 229, 328, 235, 265, 408, 410, 411, 195,
	326, 243, 296, 192, 248, 359, 261, 270, 0, 0,
	313, 341, 200, 393, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 186, 266, 0, 333,
	234, 414, 398, 396, 0, 0, 215, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 175,
	176, 187, 194, 202, 214, 227, 232, 241, 244, 247,
	250, 251, 253, 258, 275, 279, 280, 281, 282, 298,
	299, 300, 303, 306, 307, 309, 311, 312, 315, 321,
	322, 323, 324, 325, 327, 334, 337, 343, 344, 345,
	346, 347, 348, 349, 353, 354, 355, 356, 364, 367,
	381, 382, 392, 402, 406, 242, 389, 407, 0, 274,
	0, 180, 205, 193, 212, 226, 228, 255, 283, 289,
	317, 320, 239, 223, 203, 336, 201, 351, 370, 371,
	372, 374, 287, 219, 994, 0, 0, 0, 0, 0,
	0, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 0, 0, 0, 0, 0, 264, 0, 0, 318,
	0, 352, 208, 273, 271, 378, 231, 225, 221, 207,
	249, 278, 316, 369, 310, 0, 268, 0, 0, 361,
	290, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 254, 206, 178, 302,
	362, 233, 0, 0, 0, 160, 161, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 198, 0, 204, 0,
	0, 0, 0, 218, 252, 224, 217, 376, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 291, 0, 0, 0, 403, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 260, 174, 188,
	0, 0, 301, 338, 342, 0, 0, 0, 209, 0,
	340, 314, 391, 0, 319, 339, 269, 380, 331, 390,
	404, 405, 216, 295, 397, 373, 401, 413, 189, 213,
	308, 366, 394, 358, 288, 377, 259, 357, 238, 177,
	267, 181, 368, 388, 199, 350, 0, 0, 0, 183,
	386, 365, 285, 256, 257, 182, 0, 335, 220, 236,
	211, 304, 383, 384, 210, 415, 190, 400, 185, 191,
	399, 297, 379, 387, 286, 277, 184, 385, 284, 276,
	262, 230, 245, 329, 272, 330, 246, 293, 292, 294,
	0, 179, 0, 363, 395, 416, 196, 0, 0, 375,
	409, 412, 0, 332, 197, 237, 229, 328, 235, 265,
	408, 410, 411, 195, 326, 243, 296, 192, 248, 359,
	261, 270, 0, 0, 313, 341, 200, 393, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	186, 266, 0, 333, 234, 414, 398, 396, 0, 0,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 176, 187, 194, 202, 214, 227,
	232, 241, 244, 247, 250, 251, 253, 258, 275, 279,
	280, 281, 282, 298, 299, 300, 303, 306, 307, 309,
	311, 312, 315, 321, 322, 323, 324, 325, 327, 334,
	337, 343, 344, 345, 346, 347, 348, 349, 353, 354,
	355, 356, 364, 367, 381, 382, 392, 402, 406, 242,
	389, 407, 0, 274, 0, 180, 205, 193, 212, 226,
	228, 255, 283, 289, 317, 320, 239, 223, 203, 336,
	201, 351, 370, 371, 372, 374, 287, 219, 305, 0,
	0, 0, 0, 0, 0, 0, 985, 222, 0, 0,
	0, 0, 0, 264, 0, 0, 318, 0, 352, 208,
	273, 271, 378, 231, 225, 221, 207, 249, 278, 316,
	369, 310, 0, 268, 0, 0, 361, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 254, 206, 178, 302, 362, 233, 0,
	0, 0, 160, 161, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 204, 0, 0, 0, 0,
	218, 252, 224, 217, 376, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 291,
	0, 0, 0, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 260, 174, 188, 0, 0, 301,
	338, 342, 0, 0, 0, 209, 0, 340, 314, 391,
	0, 319, 339, 269, 380, 331, 390, 404, 405, 216,
	295, 397, 373, 401, 413, 189, 213, 308, 366, 394,
	358, 288, 377, 259, 357, 238, 177, 267, 181, 368,
	388, 199, 350, 0, 0, 0, 183, 386, 365, 285,
	256, 257, 182, 0, 335, 220, 236, 211, 304, 383,
	384, 210, 415, 190, 400, 185, 191, 399, 297, 379,
	387, 286, 277, 184, 385, 284, 276, 262, 230, 245,
	329, 272, 330, 246, 293, 292, 294, 0, 179, 0,
	363, 395, 416, 196, 0, 0, 375, 409, 412, 0,
	332, 197, 237, 229, 328, 235, 265, 408, 410, 411,
	195, 326, 243, 296, 192, 248, 359, 261, 270, 0,
	0, 313, 341, 200, 393, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 186, 266, 0,
	333, 234, 414, 398, 396, 0, 0, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 176, 187, 194, 202, 214, 227, 232, 241, 244,
	247, 250, 251, 253, 258, 275, 279, 280, 281, 282,
	298, 299, 300, 303, 306, 307, 309, 311, 312, 315,
	321, 322, 323, 324, 325, 327, 334, 337, 343, 344,
	345, 346, 347, 348, 349, 353, 354, 355, 356, 364,
	367, 381, 382, 392, 402, 406, 242, 389, 407, 0,
	274, 0, 180, 205, 193, 212, 226, 228, 255, 283,
	289, 317, 320, 239, 223, 203, 336, 201, 351, 370,
	371, 372, 374, 287, 219, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 0, 0, 0, 0, 0,
	264, 0, 0, 318, 0, 352, 208, 273, 271, 378,
	231, 225, 221, 207, 249, 278, 316, 369, 310, 0,
	268, 0, 0, 361, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	254, 206, 178, 302, 362, 233, 0, 0, 0, 160,
	161, 162, 0, 859, 0, 0, 0, 0, 0, 0,
	198, 0, 204, 0, 0, 0, 0, 218, 252, 224,
	217, 376, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 291, 0, 0, 0,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 260, 174, 188, 0, 0, 301, 338, 342, 0,
	0, 0, 209, 0, 340, 314, 391, 0, 319, 339,
	269, 380, 331, 390, 404, 405, 216, 295, 397, 373,
	401, 413, 189, 213, 308, 366, 394, 358, 288, 377,
	259, 357, 238, 177, 267, 181, 368, 388, 199, 350,
	0, 0, 0, 183, 386, 365, 285, 256, 257, 182,
	0, 335, 220, 236, 211, 304, 383, 384, 210, 415,
	190, 400, 185, 191, 399, 297, 379, 387, 286, 277,
	184, 385, 284, 276, 262, 230, 245, 329, 272, 330,
	246, 293, 292, 294, 0, 179, 0, 363, 395, 416,
	196, 0, 0, 375, 409, 412, 0, 332, 197, 237,
	229, 328, 235, 265, 408, 410, 411, 195, 326, 243,
	296, 192, 248, 359, 261, 270, 0, 0, 313, 341,
	200, 393, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 186, 266, 0, 333, 234, 414,
	398, 396, 0, 0, 215, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 175, 176, 187,
	194, 202, 214, 227, 232, 241, 244, 247, 250, 251,
	253, 258, 275, 279, 280, 281, 282, 298, 299, 300,
	303, 306, 307, 309, 311, 312, 315, 321, 322, 323,
	324, 325, 327, 334, 337, 343, 344, 345, 346, 347,
	348, 349, 353, 354, 355, 356, 364, 367, 381, 382,
	392, 402, 406, 242, 389, 407, 0, 274, 0, 180,
	205, 193, 212, 226, 228, 255, 283, 289, 317, 320,
	239, 223, 203, 336, 201, 351, 370, 371, 372, 374,
	287, 219, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 0, 0, 0, 0, 0, 264, 0, 0,
	318, 0, 352, 208, 273, 271, 378, 231, 225, 221,
	207, 249, 278, 316, 369, 310, 0, 268, 0, 0,
	361, 290, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 254, 206, 178,
	302, 362, 233, 0, 0, 0, 160, 161, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 198, 0, 204,
	0, 0, 0, 0, 218, 252, 224, 217, 376, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 459,
	0, 240, 0, 291, 0, 0, 0, 403, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 260, 174,
	188, 0, 0, 301, 338, 342, 0, 0, 0, 209,
	0, 340, 314, 391, 0, 319, 339, 269, 380, 331,
	390, 404, 405, 216, 295, 397, 373, 401, 413, 189,
	213, 308, 366, 394, 358, 288, 377, 259, 357, 238,
	177, 267, 181, 368, 388, 199, 350, 0, 0, 0,
	183, 386, 365, 285, 256, 257, 182, 0, 335, 220,
	236, 211, 304, 383, 384, 210, 415, 190, 400, 185,
	191, 399, 297, 379, 387, 286, 277, 184, 385, 284,
	276, 262, 230, 245, 329, 272, 330, 246, 293, 292,
	294, 0, 179, 0, 363, 395, 416, 196, 0, 0,
	375, 409, 412, 0, 332, 197, 237, 229, 328, 235,
	265, 408, 410, 411, 195, 326, 243, 296, 192, 248,
	359, 261, 270, 0, 0, 313, 341, 200, 393, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	173, 186, 266, 0, 333, 234, 414, 398, 396, 0,
	0, 215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 175, 176, 187, 194, 202, 214,
	227, 232, 241, 244, 247, 250, 251, 253, 258, 275,
	279, 280, 281, 282, 298, 299, 300, 303, 306, 307,
	309, 311, 312, 315, 321, 322, 323, 324, 325, 327,
	334, 337, 343, 344, 345, 346, 347, 348, 349, 353,
	354, 355, 356, 364, 367, 381, 382, 392, 402, 406,
	458, 389, 407, 0, 274, 0, 180, 205, 193, 212,
	226, 228, 255, 283, 289, 317, 320, 239, 223, 203,
	336, 201, 351, 370, 371, 372, 374, 287, 219, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 0,
	0, 0, 0, 0, 264, 0, 0, 318, 0, 352,
	208, 273, 271, 378, 231, 225, 221, 207, 249, 278,
	316, 369, 310, 0, 268, 0, 0, 361, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 254, 206, 178, 302, 362, 233,
	0, 0, 0, 160, 161, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 198, 0, 204, 0, 0, 0,
	0, 218, 252, 224, 217, 376, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	291, 0, 168, 0, 403, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 260, 174, 188, 0, 0,
	301, 338, 342, 0, 0, 0, 209, 0, 340, 314,
	391, 0, 319, 339, 269, 380, 331, 390, 404, 405,
	216, 295, 397, 373, 401, 413, 189, 213, 308, 366,
	394, 358, 288, 377, 259, 357, 238, 177, 267, 181,
	368, 388, 199, 350, 0, 0, 0, 183, 386, 365,
	285, 256, 257, 182, 0, 335, 220, 236, 211, 304,
	383, 384, 210, 415, 190, 400, 185, 191, 399, 297,
	379, 387, 286, 277, 184, 385, 284, 276, 262, 230,
	245, 329, 272, 330, 246, 293, 292, 294, 0, 179,
	0, 363, 395, 416, 196, 0, 0, 375, 409, 412,
	0, 332, 197, 237, 229, 328, 235, 265, 408, 410,
	411, 195, 326, 243, 296, 192, 248, 359, 261, 270,
	0, 0, 313, 341, 200, 393, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 186, 266,
	0, 333, 234, 414, 398, 396, 0, 0, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 175, 176, 187, 194, 202, 214, 227, 232, 241,
	244, 247, 250, 251, 253, 258, 275, 279, 280, 281,
	282, 298, 299, 300, 303, 306, 307, 309, 311, 312,
	315, 321, 322, 323, 324, 325, 327, 334, 337, 343,
	344, 345, 346, 347, 348, 349, 353, 354, 355, 356,
	364, 367, 381, 382, 392, 402, 406, 242, 389, 407,
	0, 274, 0, 180, 205, 193, 212, 226, 228, 255,
	283, 289, 317, 320, 239, 223, 203, 336, 201, 351,
	370, 371, 372, 374, 287, 219, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 0, 0, 0, 0,
	0, 264, 0, 0, 318, 0, 352, 208, 273, 271,
	378, 231, 225, 221, 207, 249, 278, 316, 369, 310,
	0, 268, 0, 0, 361, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 254, 206, 178, 302, 362, 233, 0, 0, 0,
	160, 161, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 198, 0, 204, 0, 0, 0, 0, 218, 252,
	224, 217, 376, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 291, 0, 0,
	0, 403, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 260, 174, 188, 0, 0, 301, 338, 342,
	0, 0, 0, 209, 0, 340, 314, 391, 0, 319,
	339, 269, 380, 331, 390, 404, 405, 216, 295, 397,
	373, 401, 413, 189, 213, 308, 366, 394, 358, 288,
	377, 259, 357, 238, 177, 267, 181, 368, 388, 199,
	350, 0, 0, 0, 183, 386, 365, 285, 256, 257,
	182, 0, 335, 220, 236, 211, 304, 383, 384, 210,
	415, 190, 400, 185, 191, 399, 297, 379, 387, 286,
	277, 184, 385, 284, 276, 262, 230, 245, 329, 272,
	330, 246, 293, 292, 294, 0, 179, 0, 363, 395,
	416, 196, 0, 0, 375, 409, 412, 0, 332, 197,
	237, 229, 328, 235, 265, 408, 410, 411, 195, 326,
	243, 296, 192, 248, 359, 261, 270, 0, 0, 313,
	341, 200, 393, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 186, 266, 0, 333, 234,
	414, 398, 396, 0, 0, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 175, 176,
	187, 194, 202, 214, 227, 232, 241, 244, 247, 250,
	251, 253, 258, 275, 279, 280, 281, 282, 298, 299,
	300, 303, 306, 307, 309, 311, 312, 315, 321, 322,
	323, 324, 325, 327, 334, 337, 343, 344, 345, 346,
	347, 348, 349, 353, 354, 355, 356, 364, 367, 381,
	382, 392, 402, 406, 242, 389, 407, 0, 274, 0,
	180, 205, 193, 212, 226, 228, 255, 283, 289, 317,
	320, 239, 223, 203, 336, 201, 351, 370, 371, 372,
	374, 287, 219,
}

var yyPact = [...]int{
	2017, -1000, -337, 1530, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1480, 1009, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	433, 1125, 56, 1393, 3088, 29, 743, 282, 20, 20350,
	277, 37, 20777, -1000, 59, -1000, 45, 20777, 57, 19923,
	-1000, -1000, -1000, 10923, 1324, -68, -71, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1096, 1463, 1457, 1478, 908,
	1440, -1000, 9202, 9202, 244, 244, 244, 7494, -1000, -1000,
	13925, 20777, 20777, 1077, 219, 275, 219, -161, -1000, -1000,
	-1000, -1000, -1000, -1000, 1393, -1000, -1000, 95, -1000, -1000,
	1026, -1000, 882, 327, 416, 209, 209, 209, 251, 1348,
	1341, 486, 477, 375, -1000, 416, 390, -201, -202, -1000,
	416, 416, 89, 416, 416, 416, 416, 150, 144, 416,
	416, 416, 416, 416, 416, 416, 416, 416, 416, 416,
	416, 416, 416, 416, 20777, -1000, 20777, 377, 1393, 108,
	-1000, -1000, -1000, 20777, 216, 743, 216, 216, 20777, -1000,
	329, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 20777, 1387, 530,
	530, 530, 530, 530, 530, -5, -1000, -9, 137, 115,
	100, -62, 743, 211, -1000, 325, -1000, 110, 15, -1000,
	530, 4848, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	250, -1000, -1000, -1000, -1000, 20777, 19496, 186, 449, -1000,
	-1000, -1000, -1000, 873, 628, -1000, 10923, 1132, 1029, 1029,
	-1000, -1000, 303, -1000, -1000, 11777, 11777, 11777, 11777, 11777,
	11777, 11777, 11777, 11777, 11777, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1029,
	324, -1000, 10496, 1029, 1029, 1029, 1029, 1029, 1029, 1029,
	1029, 10923, 1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029,
	1029, 1029, 1029, 1029, 1029, 1029, 1029, 1029, -1000, -1000,
	-1000, 20777, -1000, 1480, -1000, 1009, -1000, -1000, -1000, 1368,
	10923, 10923, 1480, -1000, 1265, 9202, -1000, -1000, 1379, -1000,
	-1000, -1000, -1000, 608, 1512, -1000, 13058, 317, 1510, 19069,
	-1000, 16927, 18642, 1019, 7053, -133, -1000, -1000, -1000, 447,
	16073, -1000, -1000, -1000, 1386, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 981, 20777,
	-1000, -1000, 3584, 743, -1000, 1121, -1000, 975, -1000, 1069,
	99, 430, 20777, 469, 743, 743, -1000, -1000, -1000, 1377,
	416, 267, -1000, -1000, -1000, -1000, 18208, 743, -1000, 1101,
	-1000, 1431, 213, 396, 396, 743, -1000, -1000, 1217, -1000,
	20777, 20777, 20777, -13, -1000, -1000, -1000, -1000, 20777, 743,
	1424, 1420, 1105, 20777, 743, -1000, -1000, -1000, -1000, 709,
	707, 1372, 416, 706, 791, 789, 778, 416, 416, 696,
	777, 810, 129, 693, 678, 674, 702, 773, 88, 675,
	673, 660, 20777, 1100, -1000, 4848, 156, 205, 140, 20777,
	1393, 1323, 1018, 249, 20777, 1444, 1184, 20777, 743, -1000,
	6171, -1000, 530, -1000, 771, 10923, -1000, -1000, -1000, -1000,
	-1000, 530, 20777, 530, 20777, 530, 530, 530, 530, 479,
	490, 479, -1000, -1000, -1000, -1000, 4848, 4848, 20777, 4848,
	4848, 20777, 4848, 4848, 490, -1000, -1000, -1000, 382, -1000,
	1176, -1000, -1000, -1000, -1000, 52, -1000, -1000, -1000, -1000,
	-1000, 1530, -1000, -1000, -1000, -130, 10923, 10923, 10923, 10923,
	489, 393, 11777, 638, 450, 11777, 11777, 11777, 11777, 11777,
	11777, 11777, 11777, 11777, 11777, 11777, 11777, 11777, 11777, 11777,
	409, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 743,
	-1000, 1528, 829, 829, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 12204, 7921, 6171, 908, 962, 1480, 9202,
	9202, 10923, 10923, 10056, 9629, 9202, 1357, 459, 628, 20777,
	-1000, -1000, 11350, -1000, -1000, -1000, -1000, -1000, 728, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 20777, 20777, 9202, 9202,
	9202, 9202, 9202, -1000, 1017, -1000, -163, 15646, 1457, 908,
	1379, 1439, 1523, 362, 723, 1014, -1000, 695, 1457, 15219,
	1062, -1000, 1379, -1000, -1000, -1000, 20777, -1000, -1000, 17781,
	-1000, -1000, 5730, 20777, 143, 20777, -1000, 880, 1308, -1000,
	-1000, -1000, 1450, 14792, 20777, 1061, 999, -1000, -1000, 315,
	6612, -133, -1000, 6612, 919, -1000, -112, -125, 8348, 332,
	-1000, -1000, -1000, -1000, 882, 12631, 843, 487, -61, -1000,
	-1000, -1000, 1069, -1000, 1069, 1069, 1069, 1069, -15, -15,
	-15, -15, -1000, -1000, -1000, -1000, -1000, 1099, 1098, -1000,
	1069, 1069, 1069, 1069, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1097, 1097, 1097, 1083, 1083, 202, -1000, 10923, 106,
	20777, 1438, 659, 84, 424, 136, -1000, 1443, 1154, -1000,
	416, 805, 1475, -1000, 20777, 75, -1000, 183, -1000, 20777,
	1095, 1414, 396, 743, -1000, 743, -1000, -1000, -1000, -1000,
	-1000, 419, -1000, 313, 20777, 75, 1366, -1000, -1000, -1000,
	743, -1000, -1000, -1000, -1000, -1000, 247, -1000, -1000, 416,
	409, -1000, -1000, -1000, -1000, 768, 766, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -326, 20777, -1000, 20777, 20777, 20777, 20777,
	20777, 291, 131, 20777, 20777, 998, -1000, 20777, 4848, -1000,
	-1000, -1000, -1000, -1000, -1000, 628, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 530, 20777, 20777, 20777, -1000, -1000,
	530, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20777,
	-1000, 749, 20777, 20777, -1000, -1000, -1000, -1000, -1000, 628,
	393, 432, 413, -1000, -1000, 529, -1000, -1000, 2336, -1000,
	-1000, -1000, -1000, 638, 11777, 11777, 11777, 546, 2336, 2273,
	1084, 1060, 343, 473, 473, 373, 373, 373, 373, 373,
	531, 531, -1000, -1000, -1000, -1000, 728, -1000, -1000, -1000,
	728, 9202, 9202, 996, 1029, 312, -1000, 1096, -1000, -1000,
	1457, 938, 938, 643, 708, 451, 1498, 938, 439, 1496,
	938, 938, 9202, -1000, -1000, 466, -1000, 10923, 728, -1000,
	994, 983, 954, 938, 728, 728, 938, 938, 20777, -1000,
	-294, -1000, -147, 314, 1029, -1000, 17354, -1000, -1000, 1368,
	-1000, -1000, 1343, -1000, 1269, 10923, 10923, 10923, -1000, -1000,
	-1000, 1368, 1474, -1000, 1285, 1284, 1494, 9202, 16927, 1379,
	-1000, -1000, -1000, 311, 1494, 1030, 1029, -1000, 20777, 16927,
	16927, 16927, 16927, 16927, -1000, 1241, 1240, -1000, 1237, 1234,
	1263, 20777, -1000, 951, 908, 14792, 143, 1011, 16927, 20777,
	-1000, -1000, 16927, 20777, 5289, -1000, 919, -133, -98, -1000,
	-1000, -1000, -1000, 628, -1000, 767, -1000, 347, -1000, 200,
	-1000, -1000, -1000, -1000, 1392, -1000, 506, -57, -1000, -1000,
	-15, -15, -1000, -1000, 332, 1363, 332, 332, 332, 747,
	747, -1000, -1000, -1000, -1000, -1000, 655, -1000, -1000, -1000,
	640, -1000, -1000, 633, 1212, 106, -1000, -1000, 416, 733,
	1328, 20777, -1000, -1000, 841, 253, 86, 76, -1000, -1000,
	-1000, -1000, 1174, -1000, 671, -1000, -1000, 20777, 948, -1000,
	68, 20777, -1000, 944, 20777, -1000, 743, -1000, -1000, 1391,
	1389, 6171, 75, 68, 409, -1000, 743, 409, -1000, -1000,
	-1000, -1000, -332, 942, 1133, -1000, -1000, -1000, -1000, 31,
	155, 119, 246, -1000, 4848, -1000, -1000, -1000, -1000, 479,
	-1000, 479, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 546,
	2336, 2257, -1000, 11777, 11777, -1000, -1000, 938, 938, 9202,
	6171, 1480, 1368, -1000, -1000, 237, 409, 237, 11777, 11777,
	-1000, 11777, 11777, -1000, -179, 894, 414, -1000, 10923, 605,
	-1000, -1000, 11777, 11777, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 272, 269, 268, 20777, -1000, -1000, 705,
	731, 1260, 628, 628, -1000, -1000, 20777, -1000, -1000, -1000,
	-1000, 1490, 10923, -1000, 917, -1000, 4407, 1457, 1173, 20777,
	1029, 1530, 13498, 20777, 1073, -1000, 418, 1308, 1137, 1170,
	1543, -1000, -1000, -1000, -1000, 1231, -1000, 1213, -1000, -1000,
	-1000, -1000, -1000, 908, 1494, 16927, 972, -1000, 972, -1000,
	310, -1000, -1000, -1000, -122, -144, -1000, -1000, -1000, 882,
	-1000, -1000, 1166, 11777, -1000, -1000, -1000, 332, 332, -1000,
	399, -1000, -1000, -1000, 936, -1000, 932, 902, 924, 21,
	-1000, 1064, 1360, 416, 416, -1000, 639, -1000, 743, -1000,
	-1000, 20777, 91, -1000, 1090, 795, -1000, 20777, -1000, -1000,
	890, -1000, 20777, -1000, -1000, 20777, -1000, 106, 915, -1000,
	-1000, 829, -1000, 68, -1000, 332, -1000, -1000, -1000, -1000,
	-1000, -186, 743, 20777, 20777, 20777, -1000, 20777, -1000, 530,
	530, -1000, 11777, 2336, 2336, -1000, -1000, 728, -1000, 1457,
	-1000, 728, 1069, 1069, -1000, 1069, 1083, -1000, 1069, 38,
	1069, 11, 728, 728, 1991, 1942, 1865, 802, 1029, -172,
	-1000, 628, 10923, 1850, 1148, 1029, 1029, 1029, 900, -1000,
	730, -15, -1000, -1000, -1000, 1487, 1473, 628, -1000, -1000,
	-1000, 1433, 997, 861, -1000, -1000, 8775, 907, 1276, 306,
	900, 1480, 20777, 10923, -1000, -1000, 10923, 1058, -1000, 10923,
	-1000, -1000, -1000, 1480, 1480, 972, -1000, -1000, 342, -1000,
	-1000, -1000, -1000, -46, 1520, 2336, -1000, -1000, -1000, -1000,
	-15, 726, -15, 634, -1000, 614, -1000, -1000, -236, -1000,
	-1000, 1067, 1198, -1000, -1000, 1036, -1000, -1000, -1000, 814,
	-1000, -1000, 20777, -1000, -1000, -1000, 174, -1000, -1000, -1000,
	-1000, 6171, -1000, -1000, 1032, 1152, -1000, -1000, -1000, -1000,
	2336, -1000, 1368, -1000, -1000, 190, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 11777, 11777, 11777, 11777, 11777, 1457,
	725, 628, 11777, 11777, 16500, 20777, 20777, 14352, 20777, -15,
	-79, -1000, 10923, 10923, 1412, -1000, 1029, -1000, 1040, 20777,
	1029, 20777, -1000, 1457, -1000, 628, 628, 20777, 628, 1457,
	-1000, 380, -1000, -47, 332, -1000, 332, 804, 798, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1449, 20777, -1000,
	-1000, 20777, 883, -1000, 401, 20777, 20777, -1000, -1000, -1000,
	994, 994, 994, 994, 263, 728, -1000, 994, 994, 892,
	-1000, 892, 892, 314, -1000, -288, -1000, 1317, 1309, 628,
	873, 1515, -1000, 1029, 1530, 298, 861, -1000, -1000, 878,
	-1000, 519, 1405, -1000, 1403, -1000, -1000, -1000, -1000, -1000,
	1009, 875, 1028, 6171, 3966, 864, -1000, -1000, -1000, -1000,
	-1000, 728, 78, -189, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -79, 179, -1000, 1290, 1287, 1472, 20777, 861, 20777,
	-1000, -1000, 720, -1000, -1000, 135, -1000, 20777, -1000, -1000,
	-1000, -1000, -1000, 1133, -1000, 1259, -184, -196, 1295, 1297,
	1297, 1309, 1471, 1314, 1302, -1000, 719, 846, -1000, -1000,
	-1000, -82, 826, -186, -1000, 1258, -1000, 1293, 617, -1000,
	-1000, -1000, -1000, 712, -1000, 1462, 1460, -1000, 192, -1000,
	-1000, 1161, -1000, -187, -1000, 586, -1000, -1000, -1000, 711,
	672, 96, 1160, -1000, 1505, -192, -1000, -1000, -1000, -1000,
	-1000, -1000, 1507, 334, 334, -198, -1000, -1000, -1000, 182,
	607, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1800, 1799, 14, 77, 78, 1798, 1797, 1795, 1794,
	116, 111, 110, 1785, 1784, 1783, 1780, 1778, 1777, 1776,
	1775, 1770, 1769, 1768, 1767, 114, 1766, 1765, 1764, 1763,
	1762, 108, 105, 446, 1761, 102, 1756, 1755, 1753, 1752,
	1751, 1750, 1748, 1747, 1746, 1744, 1741, 1740, 135, 1739,
	1738, 1737, 1736, 1735, 1734, 1731, 1729, 1728, 1727, 1726,
	95, 1725, 43, 287, 41, 66, 1724, 65, 1723, 1722,
	1721, 1720, 1717, 1644, 1716, 37, 69, 64, 1715, 33,
	1714, 1712, 80, 1711, 1710, 63, 1709, 1696, 2160, 1695,
	62, 72, 17, 23, 1693, 1692, 1691, 1690, 25, 2139,
	1689, 1687, 12, 1685, 1684, 141, 1683, 74, 18, 16,
	10, 13, 1682, 76, 1681, 97, 44, 26, 1680, 75,
	1679, 1677, 1675, 1673, 36, 1671, 70, 94, 34, 1666,
	6, 5, 1664, 1663, 1661, 1657, 1652, 1651, 4, 1650,
	1649, 1648, 1646, 57, 1645, 11, 1639, 67, 38, 19,
	9, 1638, 1637, 20, 100, 55, 89, 1636, 1635, 1634,
	866, 1632, 49, 1631, 119, 1630, 1627, 46, 1626, 360,
	671, 1625, 1624, 1624, 1623, 1623, 56, 949, 1802, 27,
	101, 1621, 1620, 1505, 51, 71, 21, 1618, 1617, 1610,
	123, 61, 35, 783, 40, 1604, 1603, 1599, 1596, 1595,
	1593, 1591, 24, 1587, 1586, 1585, 28, 42, 84, 22,
	1584, 1583, 1581, 1580, 59, 32, 1579, 99, 87, 54,
	98, 1577, 106, 79, 45, 1575, 104, 1573, 1572, 1571,
	1570, 39, 1569, 1568, 1567, 1566, 96, 81, 48, 29,
	31, 83, 1564, 30, 1563, 1562, 86, 85, 1562, 1562,
	1562, 8, 1557, 3, 0, 1556, 7, 107, 1556, 1387,
	745, 1552, 1551, 1, 1549, 2, 1548, 1546, 73, 1545,
	1544, 1543, 1541, 125, 1614, 90, 1536, 103,
}

var yyR1 = [...]int{
	0, 271, 272, 272, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 254, 254, 254, 257, 257, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	275, 275, 82, 82, 83, 83, 147, 147, 13, 14,
	14, 156, 156, 155, 155, 155, 157, 157, 157, 157,
	193, 193, 15, 15, 15, 15, 15, 61, 61, 256,
	256, 255, 253, 253, 252, 252, 251, 23, 24, 28,
	29, 30, 259, 259, 227, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 229, 229, 216,
	216, 228, 228, 228, 228, 228, 228, 228, 215, 195,
	195, 195, 195, 198, 198, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 197, 197, 197, 197, 197, 199,
	199, 199, 199, 199, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 201,
	201, 201, 201, 201, 201, 201, 201, 214, 214, 202,
	202, 208, 208, 209, 209, 209, 211, 211, 212, 212,
	171, 171, 171, 204, 204, 205, 205, 210, 210, 206,
	206, 206, 207, 207, 207, 213, 213, 213, 213, 213,
	203, 203, 217, 243, 243, 242, 242, 238, 238, 238,
	238, 226, 226, 235, 235, 235, 235, 235, 225, 225,
	221, 221, 221, 222, 222, 223, 223, 220, 220, 224,
	224, 237, 237, 236, 218, 218, 219, 219, 246, 246,
	246, 246, 247, 264, 265, 263, 263, 263, 263, 263,
	172, 172, 172, 233, 233, 232, 232, 232, 234, 234,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 231,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 166,
	166, 166, 262, 262, 262, 262, 262, 262, 261, 261,
	261, 230, 230, 230, 260, 260, 116, 116, 117, 117,
	27, 27, 27, 26, 26, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 258, 258,
	258, 258, 258, 258, 258, 258, 258, 258, 258, 258,
	258, 258, 250, 248, 248, 249, 249, 17, 22, 22,
	18, 18, 18, 18, 19, 19, 36, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 163, 163, 266, 266, 165, 165,
	161, 161, 164, 164, 162, 162, 162, 167, 167, 167,
	168, 168, 270, 270, 270, 38, 38, 40, 40, 41,
	42, 42, 188, 188, 189, 189, 43, 44, 53, 53,
	53, 53, 53, 53, 55, 55, 55, 7, 7, 7,
	7, 50, 50, 50, 6, 6, 39, 39, 46, 267,
	267, 268, 269, 269, 269, 269, 47, 20, 276, 48,
	49, 49, 60, 60, 60, 56, 56, 56, 59, 59,
	59, 64, 64, 66, 66, 66, 66, 66, 67, 67,
	67, 67, 67, 67, 63, 63, 65, 65, 65, 65,
	181, 181, 181, 180, 180, 74, 74, 75, 75, 76,
	76, 77, 77, 77, 114, 91, 91, 146, 146, 145,
	145, 148, 148, 78, 78, 78, 78, 79, 79, 80,
	80, 81, 81, 187, 187, 186, 186, 186, 185, 185,
	84, 84, 84, 86, 85, 85, 85, 85, 87, 87,
	89, 89, 88, 88, 90, 92, 92, 92, 92, 92,
	93, 93, 73, 73, 73, 73, 73, 73, 73, 73,
	159, 159, 95, 95, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 106, 106, 106, 106, 106, 106,
	96, 96, 96, 96, 96, 96, 96, 62, 62, 107,
	107, 107, 113, 108, 108, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 103,
	103, 103, 103, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 277, 277, 105, 104, 104, 104, 104, 104,
	104, 104, 58, 58, 58, 58, 58, 192, 192, 192,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 120, 120, 57, 57, 118, 118, 119,
	121, 121, 115, 115, 115, 98, 98, 98, 98, 98,
	98, 98, 98, 100, 100, 100, 122, 122, 123, 123,
	124, 124, 125, 125, 126, 127, 127, 127, 128, 128,
	128, 128, 244, 244, 244, 244, 244, 239, 239, 239,
	239, 240, 240, 240, 68, 68, 68, 68, 70, 70,
	69, 69, 51, 51, 52, 52, 52, 71, 71, 72,
	72, 72, 72, 143, 143, 143, 129, 129, 129, 129,
	134, 134, 134, 130, 130, 132, 132, 132, 133, 133,
	133, 131, 137, 137, 139, 139, 138, 138, 136, 136,
	141, 141, 140, 140, 135, 135, 97, 97, 97, 97,
	97, 144, 144, 144, 144, 149, 149, 109, 109, 111,
	111, 110, 112, 150, 150, 153, 151, 151, 154, 154,
	154, 154, 154, 152, 152, 152, 182, 182, 182, 158,
	158, 169, 169, 170, 170, 160, 160, 173, 173, 173,
	173, 173, 173, 173, 173, 173, 173, 174, 174, 174,
	175, 175, 142, 142, 142, 142, 245, 245, 241, 178,
	178, 179, 179, 183, 183, 184, 184, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 273, 274, 190, 191, 191, 191,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 3, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 5, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 2,
	0, 1, 5, 1, 3, 1, 2, 2, 2, 5,
	5, 3, 3, 3, 5, 6, 6, 5, 6, 2,
	2, 2, 2, 3, 3, 3, 4, 1, 3, 3,
	3, 3, 3, 5, 2, 2, 2, 4, 3, 6,
	7, 5, 5, 5, 12, 7, 5, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 5, 4, 3, 2, 3, 4, 3, 3,
	3, 3, 3, 3, 4, 2, 4, 4, 4, 4,
	4, 5, 7, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 7, 2, 4, 5, 4, 3, 3,
	5, 2, 3, 3, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 4, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -271, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -273, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 152, -29, -24, 153, -30, 155, 154, 190,
	156, 183, 70, 219, 220, 222, 223, 224, 225, -55,
	188, 189, 158, 35, 41, 32, 33, 80, 9, 317,
	185, 184, 26, -272, 446, -60, 5, -124, 16, -3,
	-48, -276, -48, -48, -48, -48, -48, -48, -227, -229,
	80, 125, 80, -61, 162, -142, -259, 106, 168, 171,
	172, 308, 161, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, -234, 157, 76, 153, 159, 160, 318, 104,
	103, 101, 102, 154, 71, 32, 155, 330, 333, -231,
	269, 423, -35, 425, 94, 96, 424, 40, 163, 426,
	427, 428, 429, 173, 430, 431, 432, 433, 439, 440,
	441, 442, 105, 5, 162, -259, 164, 279, -257, -254,
	83, 84, 85, 162, 162, 163, 164, -259, 162, -88,
	-183, -254, -177, 327, 176, 361, 362, 217, 76, 269,
	423, 219, 233, 227, 254, 246, 328, 363, 177, 206,
	244, 247, 295, 425, 364, 291, 274, 282, 94, 222,
	304, 438, 365, 436, 96, 424, 75, 47, 40, 186,
	242, 238, 426, 207, 366, 338, 200, 104, 101, 445,
	236, 46, 28, 435, 103, 45, 427, 367, 428, 284,
	259, 44, 368, 79, 332, 286, 237, 283, 216, 434,
	158, 369, 417, 293, 370, 260, 264, 371, 296, 48,
	372, 373, 102, 374, 74, 429, 231, 232, 375, 214,
	175, 298, 258, 173, 34, 287, 329, 218, 54, 194,
	299, 42, 262, 41, 421, 376, 257, 253, 49, 377,
	378, 379, 380, 430, 256, 230, 252, 444, 212, 431,
	58, 160, 266, 265, 267, 201, 294, 249, 381, 382,
	383, 180, 77, 384, 239, 19, 385, 386, 208, 387,
	52, 388, 389, 302, 189, 390, 50, 432, 37, 192,
	433, 391, 392, 393, 394, 395, 292, 396, 285, 261,
	263, 196, 281, 331, 397, 235, 437, 398, 181, 193,
	188, 303, 182, 399, 400, 401, 402, 403, 404, 405,
	223, 439, 39, 406, 407, 408, 409, 215, 211, 297,
	306, 57, 78, 271, 410, 229, 209, 411, 220, 51,
	440, 441, 442, 203, 443, 277, 105, 213, 43, 250,
	195, 412, 413, 240, 241, 255, 228, 251, 221, 418,
	197, 190, 414, 305, 210, 272, 335, 202, 334, 248,
	245, 204, 415, 164, 198, 199, 416, 419, 288, 278,
	289, 290, 279, 205, 333, 243, 273, 162, 247, 295,
	274, 275, 276, 287, 288, 293, 292, 196, -270, 296,
	162, -161, 143, 152, 284, -165, 285, 278, 279, 205,
	-266, -254, 297, 421, 280, 286, 290, 289, -183, 221,
	-188, 226, -178, -254, -177, 224, -88, -53, 417, 156,
	-190, -190, -190, -108, -73, -94, 109, -99, 30, 24,
	-98, -95, -115, -112, -113, 143, 144, 146, 145, 147,
	132, 133, 140, 110, 148, -103, -101, -102, -104, 87,
	86, 95, 88, 89, 90, 91, 97, 98, 99, -178,
	-183, -110, -273, 64, 65, 318, 319, 320, 321, 326,
	322, 112, 53, 307, 316, 315, 314, 311, 312, 309,
	310, 324, 325, 167, 308, 161, 138, 317, -254, -177,
	40, 277, 277, -5, -4, -273, 6, 21, 22, -128,
	18, 17, -274, 82, -56, -66, 59, 60, -67, 22,
	36, 63, 61, -49, -65, 134, -73, -183, -65, -160,
	166, -160, -160, -151, -193, 221, -154, 297, 296, -179,
	-152, -178, -176, 295, 247, 294, 157, 336, 108, 23,
	25, 111, 143, 17, 112, 159, 174, 142, 170, 318,
	152, 68, 337, 309, 310, 307, 313, 320, 321, 308,
	275, 30, 11, 339, 26, 184, 22, 36, 136, 154,
	115, 116, 187, 24, 185, 99, 342, 20, 71, 179,
	12, 172, 14, 343, 344, 15, 167, 166, 127, 163,
	66, 9, 148, 27, 124, 62, 345, 29, 346, 347,
	348, 349, 64, 125, 18, 311, 312, 32, 422, 350,
	326, 191, 138, 69, 55, 109, 351, 352, 97, 353,
	100, 72, 106, 16, 67, 38, 354, 355, 169, 356,
	300, 357, 126, 155, 317, 65, 358, 161, 276, 6,
	323, 31, 183, 171, 63, 359, 162, 114, 324, 325,
	165, 98, 5, 168, 33, 10, 70, 73, 314, 315,
	316, 53, 330, 113, 13, 360, 301, 107, -228, 125,
	-215, -219, -178, 178, -247, 174, -88, -237, -236, -178,
	-68, 76, -170, 167, 163, -170, 317, -31, -32, 247,
	142, 81, -231, -219, -218, -217, -260, 178, -246, -235,
	170, 179, -225, 171, 172, -220, 163, 29, -226, 117,
	-260, -260, -260, 165, 34, 34, 105, 105, -260, -220,
	169, 179, -226, -174, -220, 165, 23, 334, 334, -226,
	-226, 247, 142, -226, -226, -226, -226, 200, 200, -226,
	-226, -226, -226, -226, -226, -226, -226, -226, -226, -226,
	-226, -226, -226, -226, -88, -88, 152, 154, 157, 72,
	-33, 202, -22, -88, -169, 167, -254, -169, -169, -88,
	149, -88, 31, -167, 125, 13, -167, -167, -167, -167,
	-167, 203, 291, 203, 291, 203, 204, 203, 204, 203,
	-164, -163, 282, 283, 277, 281, -254, 308, 293, -254,
	196, 162, 197, 164, -221, 163, 34, 175, 204, 277,
	199, -167, -191, -273, -179, 165, -178, -50, -178, 87,
	-7, -3, -11, -10, -12, 117, 81, 108, 106, 107,
	124, -73, -96, 127, 109, 125, 126, 111, 129, 128,
	139, 132, 133, 134, 135, 136, 137, 138, 130, 131,
	142, 117, 118, 119, 120, 121, 122, 123, -159, -273,
	-113, -273, 150, 151, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -273, 149, -2, -108, -4, -273,
	-273, -273, -273, -273, -273, -273, -273, -120, -73, -273,
	-277, -105, -273, -277, -105, -277, -105, -277, -273, -277,
	-105, -277, -105, -277, -277, -105, -273, -273, -273, -273,
	-273, -273, -273, -190, -267, -268, -91, -88, -124, -3,
	-48, -143, 20, 32, -73, -125, -126, -73, -124, 55,
	-63, -65, -67, 59, 60, 93, 12, -181, -180, 23,
	-178, 87, 149, 12, -89, 27, -88, -75, -76, -77,
	-78, -91, -114, -273, 12, -82, -83, -88, -90, -183,
	81, 221, -154, -193, -156, -155, 298, 300, 117, -182,
	-178, 87, 30, 31, 82, 81, -88, -195, -198, -200,
	-199, -201, -196, -197, 244, 245, 143, 248, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 31, 186,
	240, 241, 242, 243, 260, 261, 262, 263, 264, 265,
	266, 267, 227, 246, 328, 228, 229, 230, 231, 232,
	233, 235, 236, 237, 238, 239, -257, -254, 80, 82,
	81, -202, 80, -71, 207, 117, -88, 109, -254, -254,
	31, -226, 16, -25, 80, -215, -224, -257, -254, 80,
	29, 169, 168, -223, -220, -223, -224, -254, 30, 74,
	75, -115, -178, -183, -115, -215, 247, -115, -254, 29,
	29, 30, 77, 78, 79, -88, -254, 88, 88, 31,
	-226, 88, 87, 87, 87, -226, -226, 88, 87, -254,
	87, -261, 180, 216, 218, 88, 88, 88, 88, 30,
	87, -262, 30, 435, 434, 436, 437, 438, 88, 30,
	88, 30, 88, -178, 80, -191, 198, 198, 162, 162,
	211, -88, 40, 81, 165, -82, 24, 72, -88, -254,
	-184, -183, -176, -167, 87, -73, -167, -88, -167, -88,
	-167, -167, -167, -167, -162, 12, 127, -222, 12, 127,
	-162, -191, -191, -88, -191, -191, -88, -191, -191, -222,
	-168, 125, 72, -189, 224, 258, 418, 419, 420, -73,
	-73, -73, -73, -106, 97, 109, 98, 99, -99, -107,
	-110, -113, 92, 127, 125, 126, 111, -99, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -192, -254, 87, 143, -254, -98, -98, -178,
	-64, 22, 36, -63, -179, -184, -176, -60, -274, -274,
	-124, -63, -63, -73, -73, -115, 87, -63, -115, 87,
	-63, -63, -59, 22, 36, -118, -119, 113, -115, -274,
	-99, -178, -178, -63, -64, -64, -63, -63, 81, -269,
	300, 301, 422, -186, 192, -185, 23, -183, 87, -128,
	-274, -129, 27, 10, 127, 81, 19, 81, -127, 25,
	26, -128, -100, -178, 88, 91, -74, 81, 12, -67,
	-88, -180, 134, -184, -88, -147, 192, -88, 31, 81,
	-84, -86, -85, -87, 62, 66, 68, 63, 64, 65,
	69, -187, 23, -75, -3, -273, -88, -82, -275, 81,
	12, 73, -275, 81, 149, -154, -156, 81, 299, 301,
	302, 72, 100, -73, -207, 142, -233, -232, -231, -215,
	-217, -218, -219, 82, -171, 97, 109, -211, 272, -202,
	-202, -202, -202, -202, -206, 247, -206, -206, -206, 80,
	80, -202, -202, -202, -202, -208, 80, -208, -208, -209,
	80, -209, -247, -73, -243, -242, -238, -241, 173, 94,
	330, 73, -236, -127, 88, -70, 209, 117, 210, 212,
	213, 24, -245, -241, -226, -254, 87, 17, -216, -215,
	-116, 216, -246, -237, 80, 29, -223, -224, -224, 154,
	31, 149, -215, -116, 31, -254, 165, -226, -192, 87,
	87, -166, 443, -82, -88, -88, -88, -88, -88, 157,
	154, 200, -88, -88, -88, -191, -167, -183, -183, -88,
	-167, -88, 87, -88, -178, 97, 98, 99, -107, -99,
	-99, -99, -62, 187, 108, -274, -274, -63, -63, -273,
	149, -5, -128, -274, -274, 81, 73, 23, 12, 12,
	-274, 12, 12, -274, -274, -63, -121, -119, 115, -73,
	-274, -274, 81, 81, -274, -274, -274, -274, -274, -268,
	421, 301, -92, 70, 166, 71, -273, -185, -143, 38,
	46, 57, -73, -73, -126, -143, -158, 20, 12, 53,
	53, -93, 13, -65, -75, -67, 149, -93, -97, 31,
	53, -3, -273, -273, -150, -153, -115, -76, -77, -77,
	-76, -77, 62, 62, 62, 67, 62, 67, 62, -85,
	-183, -274, -274, -3, -147, 73, -75, -88, -75, -90,
	-183, 134, -155, -157, 303, 300, 306, -254, 87, 81,
	-231, -219, -204, 30, 97, -212, 273, -206, -206, -207,
	31, -207, -207, -207, -214, 87, -214, 88, 88, 82,
	-244, -239, -240, 32, 76, -238, -226, 87, 37, -178,
	82, 164, 215, -72, 313, 87, 83, 72, -254, 87,
	-145, -178, 81, 82, -117, 217, -115, 82, -145, -224,
	30, 30, -179, -116, -117, -192, -254, -192, 445, 444,
	82, -256, 73, 198, 269, 198, 201, 165, -191, -162,
	-162, -62, 108, -99, -99, -274, -274, -64, -179, -124,
	-143, -194, 143, 244, 186, 242, 238, 258, 249, 271,
	240, 272, -192, -194, -99, -99, -99, -99, 327, -124,
	116, -73, 114, -99, -99, 163, 163, 163, -148, -178,
	39, 87, 87, 58, -88, -122, 14, -73, 134, -128,
	-149, 72, -150, -109, -111, -110, -273, -144, -274, -178,
	-148, -93, 81, 117, -80, -79, 72, 73, -81, 72,
	-79, 62, 62, -274, -93, -75, -93, -93, 149, 300,
	304, 305, -231, -205, 72, -99, -207, -207, -254, 143,
	82, 81, 82, 81, 82, 81, -172, 367, 109, -240,
	-239, -226, -226, 88, -254, -88, -69, 207, 214, 80,
	84, -88, 81, -215, -115, -243, 82, -98, -117, -207,
	-253, 330, -255, -254, -178, -178, -178, -88, -167, -167,
	-99, -274, -128, -274, -202, -202, -202, -209, -202, 232,
	-202, 232, -274, -274, 20, 20, 20, 20, -273, -57,
	323, -73, 81, 81, -273, -273, -273, -274, 81, 87,
	-206, -123, 15, 17, 28, -149, 81, -274, -274, 81,
	53, 149, -274, -124, -153, -73, -73, 80, -73, -124,
	-93, -210, 269, 10, -206, 87, -206, 88, 88, 367,
	30, 77, 78, 79, 30, 74, 75, -146, 80, 82,
	-178, 181, -252, -251, -179, 80, 73, -143, -206, -254,
	-99, -99, -99, -99, -99, -128, 87, -99, -99, -145,
	-274, -145, -145, -186, -178, -206, -131, -136, -164, -73,
	-108, 29, -111, 53, -3, -178, -109, -178, -128, -145,
	-128, -213, 169, 29, 168, -102, -207, -207, 82, 82,
	23, -145, -88, 81, 117, -145, -88, -274, -274, -274,
	-274, -58, 127, 330, -274, -274, -274, -274, -274, -274,
	-92, -134, 417, -137, 42, -138, 43, 10, -109, 149,
	82, -203, 94, 29, 29, -3, 82, 80, -251, -230,
	-179, 87, 88, 82, -274, 328, 69, 331, -131, 47,
	250, -139, 51, -140, -135, 52, 17, -150, -178, 87,
	-51, 330, -145, -256, 58, 329, 332, -132, 49, -130,
	48, -130, -138, 17, -141, 44, 45, 87, -52, 206,
	421, 82, -253, 58, -133, 50, 72, 100, 87, 17,
	17, 174, -264, -265, 72, 330, 72, 100, 87, 87,
	208, -265, 72, 11, 10, 331, -263, 182, 177, 180,
	31, -263, 332, 176, 30, 97,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 760, 0, 498, 498, 498, 498, 498, 498, 498,
	0, 0, -2, -2, -2, 0, 36, 0, 0, 0,
	0, -2, 456, 457, 0, 459, -2, 0, 0, 468,
	1285, 1285, 1285, 0, 0, 0, 0, 1283, 53, 54,
	474, 475, 476, 1, 3, 0, 502, 768, 0, 0,
	-2, 500, 0, 0, 875, 875, 875, 0, 82, 83,
	0, 0, 0, 784, 873, 0, 873, 0, 893, 894,
	895, 102, 103, 86, -2, 107, 108, 0, 112, 356,
	321, 323, -2, -2, 221, 314, 314, 314, 0, 0,
	0, 0, 0, 314, 347, 221, 887, 0, 0, 268,
	221, 221, 0, 221, 221, 221, 221, 0, 0, 221,
	221, 221, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 0, 101, 0, 0, 111, 37,
	33, 34, 35, 0, 871, 0, 871, 871, 0, 395,
	582, 903, 904, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 0, 0, 447,
	447, 447, 447, 447, 447, 0, 405, 0, 0, 0,
	0, 0, 0, 0, 421, 0, 424, 0, 0, 431,
	447, 1286, 453, 454, 441, 439, 436, 437, 455, 458,
	0, 463, 466, 899, 900, 0, 481, 0, 1108, 473,
	486, 487, 497, 38, 633, 592, 0, 598, 600, 0,
	635, 636, 637, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 665, 666, 667, 668, 745,
	746, 747, 748, 749, 750, 751, 752, 602, 603, 742,
	0, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 702, 702, 702, 702, 702, 702, 702,
	702, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	1285, 0, 496, 760, 49, 0, 498, 503, 504, 803,
	0, 0, 760, 1284, 0, 0, -2, -2, 514, 520,
	521, 522, 523, 499, 0, 526, 530, 0, 0, 0,
	876, 0, 0, 68, 0, 1254, 856, -2, -2, 0,
	0, 901, 902, -2, 1057, -2, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 0, 0,
	121, 122, 0, 36, 247, 0, 117, 0, 241, 179,
	797, 0, 0, 0, 0, 0, 88, 109, 110, 0,
	221, 111, 269, 326, 327, 328, 0, -2, 245, 0,
	315, 0, 0, 235, 235, 239, 237, 238, 0, 222,
	0, 0, 0, 0, 339, 340, 341, 342, 0, 0,
	0, 0, 0, 0, 0, 888, 889, 354, 355, 0,
	0, 0, 221, 0, 0, 0, 0, 221, 221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 98, 1286, 0, 0, 0, 0,
	-2, 0, 387, 0, 0, 0, 0, 0, 0, 394,
	0, 396, 447, 398, 0, 0, 399, 400, 401, 402,
	403, 447, 0, 447, 0, 447, 447, 447, 447, 444,
	0, 444, 442, 443, 434, 435, 1286, 1286, 0, 1286,
	1286, 0, 1286, 1286, 0, 230, 231, 232, 450, 428,
	429, 432, 433, 1287, 1288, 464, 467, 484, 482, 483,
	485, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 596, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 620, 621, 622, 623, 624, 625, 626, 599, 0,
	613, 0, 0, 0, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 0, 511, 0, 0, 0, 760, 0,
	0, 0, 0, 0, 0, 0, 508, 0, 734, 0,
	686, 694, 0, 687, 695, 688, 696, 689, 0, 690,
	697, 691, 698, 692, 693, 699, 0, 0, 0, 511,
	511, 0, 0, 39, 488, 489, 0, 565, 768, 0,
	513, 806, 0, 0, 769, 761, 762, 765, 768, 0,
	535, 524, 515, 518, 519, 501, 0, 527, 531, 0,
	533, 534, 0, 0, 66, 0, 581, 0, 537, 539,
	540, 541, 563, 0, 0, 0, 0, 62, 64, 582,
	0, 1254, 862, 0, 70, 71, 0, 0, 0, 202,
	866, 867, 868, 864, -2, 228, 0, 190, 186, 130,
	131, 132, 179, 134, 179, 179, 179, 179, 199, 199,
	199, 199, 162, 163, 164, 165, 166, 0, 0, 149,
	179, 179, 179, 179, 169, 170, 171, 172, 173, 174,
	175, 176, 135, 136, 137, 138, 139, 140, 141, 142,
	143, 181, 181, 181, 183, 183, 0, 37, 0, 213,
	0, 765, 0, 788, 0, 0, 97, 0, 896, 100,
	221, 0, 0, 324, 0, 316, 229, 0, -2, 0,
	0, 0, 235, 239, 236, 239, 227, 240, 331, 332,
	333, 0, 742, 0, 0, 316, 0, 343, 344, 345,
	0, 348, 349, 350, 351, 352, 0, 270, 271, 221,
	0, 274, 275, 276, 277, 0, 0, 280, 281, 282,
	283, 284, 308, 309, 310, 285, 286, 287, 288, 289,
	290, 291, 302, 303, 304, 305, 306, 307, 292, 293,
	294, 295, 296, 299, 0, 357, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 390, 872, 0, 1286, 393,
	583, 905, 906, 397, 448, 449, 404, 422, 406, 425,
	407, 409, 408, 410, 447, 0, 0, 0, 233, 234,
	447, 413, 414, 415, 416, 417, 418, 419, 420, 0,
	427, 0, 0, 0, 465, 469, 470, 471, 472, 634,
	593, 594, 595, 597, 614, 0, 616, 618, 604, 605,
	629, 630, 631, 0, 0, 0, 0, 627, 609, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	650, 651, 654, 717, 718, 719, 0, 652, 653, 664,
	0, 0, 0, 512, 743, 0, -2, 0, 632, 851,
	768, 0, 0, 0, 0, 637, 745, 0, 637, 745,
	0, 0, 0, 509, 510, 740, 737, 0, 0, 703,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 491,
	492, 494, 0, 585, 1185, 566, 0, 568, 569, 803,
	50, 40, 0, 804, 0, 0, 0, 0, 764, 766,
	767, 803, 0, 753, 0, 0, 590, 0, 0, 516,
	46, 532, 528, 0, 590, 0, 0, 580, 0, 0,
	0, 0, 0, 0, 570, 0, 0, 573, 0, 0,
	0, 0, 564, 0, 0, 0, -2, 0, 0, 0,
	60, 61, 0, 0, 0, 857, 69, 0, 0, 74,
	75, 858, 859, 860, 861, 0, 104, -2, 265, 123,
	125, 126, 127, 118, 193, 191, 0, 188, 187, 133,
	199, 199, 156, 157, 202, 0, 202, 202, 202, 0,
	0, 150, 151, 152, 153, 144, 0, 145, 146, 147,
	0, 148, 246, 0, 772, 214, 215, 217, 221, 0,
	0, 0, 242, 243, 0, 0, 0, 0, 785, 786,
	787, 874, 0, 897, 0, 115, 116, 0, 0, 119,
	318, 0, 244, 0, 0, 223, 239, 224, 225, 0,
	0, 0, 316, 318, 0, 346, 0, 0, 273, 278,
	279, 297, 0, 0, 89, 361, 363, 362, 366, 0,
	0, 0, 0, 388, 1286, 392, 411, 445, 446, 444,
	426, 444, 451, 430, 461, 615, 617, 619, 606, 627,
	610, 0, 607, 0, 0, 601, 669, 0, 0, 511,
	0, 760, 803, 673, 674, 0, 0, 0, 0, 0,
	710, 0, 0, 711, 0, 760, 0, 738, 0, 0,
	685, 704, 0, 0, 705, 706, 707, 708, 709, 490,
	493, 495, 545, 0, 0, 0, 0, 567, 42, 0,
	0, 0, 770, 771, 763, 41, 0, 869, 870, 754,
	755, 756, 0, 525, 536, 517, 0, 768, 845, 0,
	0, 837, 0, 0, 590, 853, 0, 538, 559, 561,
	0, 556, 571, 572, 574, 0, 576, 0, 578, 579,
	542, 543, 544, 0, 590, 0, 590, 63, 590, 65,
	0, 584, 72, 73, 0, 0, 79, 203, 204, 111,
	267, 124, 195, 0, 192, 129, 189, 202, 202, 158,
	0, 159, 160, 161, 0, 177, 0, 0, 0, 260,
	84, 776, 775, 221, 221, 216, 0, 219, 0, 898,
	180, 0, 0, 798, 799, 0, 802, 0, 113, 114,
	322, 549, 0, 329, 330, 0, 317, 213, 0, 226,
	334, 0, 743, 318, 337, 202, 353, 272, 300, 301,
	298, 92, 0, 0, 0, 0, 359, 0, 391, 447,
	447, 608, 0, 628, 611, 670, 671, 0, 744, 768,
	44, 0, 179, 179, 723, 179, 183, 726, 179, 728,
	179, 731, 0, 0, 0, 0, 0, 0, 0, 735,
	684, 741, 0, 0, 0, 0, 0, 0, 0, 551,
	0, 199, 808, 805, 43, 758, 0, 591, 529, 47,
	51, 0, 845, 836, 847, 849, 0, 0, 0, 841,
	0, 760, 0, 0, 553, 560, 0, 0, 554, 0,
	555, 575, 577, -2, 760, 590, 58, 59, 0, 76,
	77, 78, 266, 197, 0, 194, 154, 155, 200, 201,
	199, 0, 199, 0, 184, 0, 252, 261, 0, 773,
	774, 0, 0, 218, 220, 547, 789, 790, 791, 0,
	801, 99, 0, 120, 319, 212, 0, 335, 336, 338,
	360, 0, 90, 91, 0, 0, 365, 389, 412, 423,
	612, 672, 803, 675, 720, 199, 724, 725, 727, 729,
	730, 732, 677, 676, 0, 0, 0, 0, 0, 768,
	0, 739, 0, 0, 0, 0, 0, 565, 0, 199,
	828, 48, 0, 0, 0, 52, 0, 850, 0, 0,
	0, 0, 67, 768, 854, 855, 557, 0, 562, 768,
	57, 205, 198, 0, 202, 178, 202, 0, 0, 262,
	777, 778, 779, 780, 781, 782, 783, 0, 0, 800,
	550, 0, 93, 94, 0, 0, 0, 45, 721, 722,
	0, 0, 0, 0, 712, 0, 736, 0, 0, 0,
	587, 0, 0, 585, 552, 810, 809, 822, 826, 759,
	757, 0, 848, 0, 840, 843, 839, 842, 55, 0,
	56, 210, 0, 207, 209, 196, 167, 168, 182, 185,
	0, 0, 0, 0, 0, 0, 367, 678, 680, 679,
	681, 0, 0, 0, 683, 700, 701, 586, 588, 589,
	546, 828, 0, 821, 824, -2, 0, 0, 838, 0,
	558, 128, 0, 206, 208, 792, 548, 0, 95, 96,
	311, 312, 313, 89, 682, 0, 0, 0, 815, 813,
	813, 826, 0, 830, 0, 835, 0, 846, 844, 211,
	85, 794, 0, 92, 713, 0, 716, 818, 0, 811,
	814, 812, 823, 0, 829, 0, 0, 827, 0, 795,
	796, 248, 364, 714, 807, 0, 816, 817, 825, 0,
	0, 0, 249, 250, 0, 0, 819, 820, 831, 833,
	793, 251, 0, 0, 0, 0, 253, 255, 256, 0,
	0, 254, 715, 257, 258, 259,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 110, 3, 3, 3, 137, 129, 3,
	80, 82, 134, 132, 81, 133, 149, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 446,
	118, 117, 119, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 111, 112, 113, 114, 115,
	116, 120, 121, 122, 123, 124, 125, 126, 127, 130,
	131, 136, 138, 141, 142, 143, 144, 145, 146, 147,
	148, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:406
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:411
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:412
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:416
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:447
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:466
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:476
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:482
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:488
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:497
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:528
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:536
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:542
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:548
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:556
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:573
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:585
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:613
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:654
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:658
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:670
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:680
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:690
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:712
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:716
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:722
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:726
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:732
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:738
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:745
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:753
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:757
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:764
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:773
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:783
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:788
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:793
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:799
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:804
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:816
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:830
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:837
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:844
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:855
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:861
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:865
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:879
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:883
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:888
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:898
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:902
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:908
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:912
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:919
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:923
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:929
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:939
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:953
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:958
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:962
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:966
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:972
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:994
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1033
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1049
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1145
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1149
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1154
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1188
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1208
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1213
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1217
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1225
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1235
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1243
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1252
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1256
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1262
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1266
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1275
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1293
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1297
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1302
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1306
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1315
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1319
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1336
		{
			yyVAL.colKeyOpt = colKey
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1340
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1349
		{
			yyVAL.literal = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1353
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1359
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1364
		{
			yyVAL.indexOptions = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1368
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1374
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1397
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1403
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1417
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1421
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1425
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = ""
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = yyDollar[2].str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1452
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = "key"
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1501
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1507
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1513
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1523
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1533
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 249:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1537
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1541
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1545
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1551
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1557
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1563
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1569
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1573
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1577
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1581
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1585
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1590
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1594
		{
			yyVAL.boolean = true
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1598
		{
			yyVAL.boolean = false
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1603
		{
			yyVAL.tableOptions = nil
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1621
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1631
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1637
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1641
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1645
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)), String: yyDollar[5].str}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1649
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1657
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1665
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1669
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1673
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1677
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1681
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1685
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1693
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1697
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1701
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1705
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1709
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1717
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1721
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1725
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1729
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1733
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1737
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1741
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1745
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1749
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1754
		{
			yyVAL.str = ""
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1758
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1794
		{
			yyVAL.bytes = []byte("")
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1800
		{
			yyVAL.colName = nil
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1809
		{
			yyVAL.colName = nil
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1813
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1818
		{
			yyVAL.alterOptions = nil
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1822
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1826
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1836
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1842
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1850
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1858
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1862
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1866
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1874
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1878
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1882
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1886
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1890
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 338:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1894
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1902
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1914
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1918
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1926
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.alterOption = &Force{}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1938
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1942
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.alterOption = &RenameTable{Table: yyDollar[3].tableName}
		}
	case 353:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1954
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2000
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2004
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 359:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2011
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 360:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2030
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 362:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2040
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 363:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2044
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 364:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2048
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 367:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2075
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2104
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 385:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2120
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 386:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2124
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2140
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2148
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 391:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2152
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2157
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2161
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.statement = &OtherRead{}
		}
	case 397:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2182
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2190
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2194
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2210
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2214
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2218
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2222
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2226
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2230
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2234
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2238
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2242
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2246
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2250
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2254
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2259
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2263
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2267
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2271
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2275
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2283
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2287
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2292
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2296
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2300
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2310
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2323
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2332
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2346
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2362
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2372
		{
			yyVAL.str = ""
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.str = "extended "
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = ""
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.str = "full "
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2396
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2402
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2410
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2416
		{
			yyVAL.showFilter = nil
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2420
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2424
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2430
		{
			yyVAL.showFilter = nil
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2440
		{
			yyVAL.empty = struct{}{}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2444
		{
			yyVAL.empty = struct{}{}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2448
		{
			yyVAL.empty = struct{}{}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2454
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2458
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Begin{}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Begin{}
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2474
		{
			yyVAL.statement = &Commit{}
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2480
		{
			yyVAL.statement = &Rollback{}
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2484
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2489
		{
			yyVAL.empty = struct{}{}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2491
		{
			yyVAL.empty = struct{}{}
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2494
		{
			yyVAL.empty = struct{}{}
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2496
		{
			yyVAL.empty = struct{}{}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2501
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2507
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2512
		{
			yyVAL.explainType = EmptyType
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2516
		{
			yyVAL.explainType = JSONType
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2520
		{
			yyVAL.explainType = TreeType
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			yyVAL.explainType = VitessType
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2528
		{
			yyVAL.explainType = TraditionalType
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.explainType = AnalyzeType
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2542
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2552
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = ""
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.str = ""
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.statement = &OtherRead{}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2587
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2597
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.lockType = Read
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.lockType = ReadLocal
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.lockType = Write
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			setAllowComments(yylex, true)
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2657
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 500:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2663
		{
			yyVAL.bytes2 = nil
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2667
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.boolean = true
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.boolean = false
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.boolean = true
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = ""
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = SQLCacheStr
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2699
		{
			yyVAL.boolean = false
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2703
		{
			yyVAL.boolean = true
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2707
		{
			yyVAL.boolean = true
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2712
		{
			yyVAL.selectExprs = nil
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2721
		{
			yyVAL.strs = nil
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2733
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2737
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.str = SQLCacheStr
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.str = DistinctStr
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.str = DistinctStr
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2759
		{
			yyVAL.str = StraightJoinHint
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2769
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2773
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2779
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2783
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2787
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2791
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2796
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2811
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2816
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2820
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2860
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 546:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2864
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 547:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2869
		{
			yyVAL.columns = nil
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2873
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2879
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2889
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2893
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2906
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2910
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2914
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2918
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2926
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2930
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2936
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2938
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2941
		{
			yyVAL.empty = struct{}{}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2943
		{
			yyVAL.empty = struct{}{}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2946
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2950
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2954
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2961
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.joinType = NormalJoinType
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.joinType = NormalJoinType
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2975
		{
			yyVAL.joinType = NormalJoinType
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.joinType = StraightJoinType
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{
			yyVAL.joinType = LeftJoinType
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2991
		{
			yyVAL.joinType = LeftJoinType
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.joinType = RightJoinType
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2999
		{
			yyVAL.joinType = RightJoinType
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3009
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3023
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3039
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3044
		{
			yyVAL.indexHints = nil
		}
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3048
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3052
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3056
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3060
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = nil
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 600:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3109
		{
			yyVAL.str = ""
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3113
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3119
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3133
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3141
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3145
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3153
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 611:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3157
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 612:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3161
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3165
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 615:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3175
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3179
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3187
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3191
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3197
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3201
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3205
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3226
		{
			yyVAL.expr = nil
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3230
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3240
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3244
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3250
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3302
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3306
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3310
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3314
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3318
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3322
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3334
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3338
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3358
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3362
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3366
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3374
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3388
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3392
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3414
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 670:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3418
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3422
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3426
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 673:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3440
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 675:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3444
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 676:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3448
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3452
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 678:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3456
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 679:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3460
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 680:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3464
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 681:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3468
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 682:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3472
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 683:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3476
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 684:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3480
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3484
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3494
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3498
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3502
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3512
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3517
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3533
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3546
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3551
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3556
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 700:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3560
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 701:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3564
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3574
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3588
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3596
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3600
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3604
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3608
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3614
		{
			yyVAL.matchExprOption = NoOption
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3618
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3622
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 715:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3626
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3654
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3658
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3662
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3684
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3688
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3692
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3696
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = nil
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3714
		{
			yyVAL.str = string("")
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3724
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3728
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3734
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3739
		{
			yyVAL.expr = nil
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3743
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3753
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3757
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3763
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3767
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.expr = &NullVal{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3806
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3810
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3815
		{
			yyVAL.exprs = nil
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3819
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3824
		{
			yyVAL.expr = nil
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3828
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3833
		{
			yyVAL.orderBy = nil
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3837
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3843
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3847
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3853
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3858
		{
			yyVAL.orderDirection = AscOrder
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.orderDirection = AscOrder
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.orderDirection = DescOrder
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3871
		{
			yyVAL.limit = nil
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3875
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3879
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3883
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3888
		{
			yyVAL.indexOptions = nil
		}
	case 773:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3911
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3915
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3929
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3937
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3950
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3954
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3959
		{
			yyVAL.str = ""
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = yyDollar[3].str
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3973
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = ""
		}
	case 793:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3982
		{
			yyVAL.str = yyDollar[2].str
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3987
		{
			yyVAL.str = "cascaded"
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = ""
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = yyDollar[3].str
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4010
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4014
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4027
		{
			yyVAL.lock = NoLock
		}
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4031
		{
			yyVAL.lock = ForUpdateLock
		}
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4035
		{
			yyVAL.lock = ShareModeLock
		}
	case 806:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4040
		{
			yyVAL.selectInto = nil
		}
	case 807:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4044
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4048
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 809:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4052
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 810:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4057
		{
			yyVAL.str = ""
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4061
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4065
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.str = ""
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4074
		{
			yyVAL.str = " header"
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4079
		{
			yyVAL.str = ""
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4083
		{
			yyVAL.str = " manifest on"
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = " manifest off"
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4092
		{
			yyVAL.str = ""
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4096
		{
			yyVAL.str = " overwrite on"
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4100
		{
			yyVAL.str = " overwrite off"
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4106
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4111
		{
			yyVAL.str = ""
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4115
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4120
		{
			yyVAL.str = ""
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4124
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4129
		{
			yyVAL.str = ""
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4133
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4138
		{
			yyVAL.str = ""
		}
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4142
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4151
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4156
		{
			yyVAL.str = ""
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4160
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4165
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4169
		{
			yyVAL.str = " optionally"
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4182
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4186
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4190
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 839:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4194
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4198
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4204
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4208
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4212
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 844:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4216
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4221
		{
			yyVAL.updateExprs = nil
		}
	case 846:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4225
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4235
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4251
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4257
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4267
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4271
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4277
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4283
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4287
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4293
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4297
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4301
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4305
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4309
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4317
		{
			yyVAL.bytes = []byte("charset")
		}
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4324
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4328
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.expr = &Default{}
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.boolean = false
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4343
		{
			yyVAL.boolean = true
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4346
		{
			yyVAL.boolean = false
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.boolean = true
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4351
		{
			yyVAL.ignore = false
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.ignore = true
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4357
		{
			yyVAL.empty = struct{}{}
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4359
		{
			yyVAL.empty = struct{}{}
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4361
		{
			yyVAL.empty = struct{}{}
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4363
		{
			yyVAL.empty = struct{}{}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4365
		{
			yyVAL.empty = struct{}{}
		}
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4367
		{
			yyVAL.empty = struct{}{}
		}
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4369
		{
			yyVAL.empty = struct{}{}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4371
		{
			yyVAL.empty = struct{}{}
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4373
		{
			yyVAL.empty = struct{}{}
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4375
		{
			yyVAL.empty = struct{}{}
		}
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4379
		{
			yyVAL.empty = struct{}{}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4381
		{
			yyVAL.empty = struct{}{}
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4383
		{
			yyVAL.empty = struct{}{}
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4387
		{
			yyVAL.empty = struct{}{}
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4389
		{
			yyVAL.empty = struct{}{}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = ""
		}
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4394
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4401
		{
			yyVAL.indexOptions = nil
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4403
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 898:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4407
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4413
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4417
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4424
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4430
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4842
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4851
		{
			decNesting(yylex)
		}
	case 1285:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4856
		{
			skipToEnd(yylex)
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4861
		{
			skipToEnd(yylex)
		}
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4865
		{
			skipToEnd(yylex)
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4869
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
