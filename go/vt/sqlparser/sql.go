// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const NULL = 57440
const TRUE = 57441
const FALSE = 57442
const OFF = 57443
const DISCARD = 57444
const IMPORT = 57445
const ENABLE = 57446
const DISABLE = 57447
const TABLESPACE = 57448
const VIRTUAL = 57449
const STORED = 57450
const EMPTY_FROM_CLAUSE = 57451
const LOWER_THAN_CHARSET = 57452
const CHARSET = 57453
const UNIQUE = 57454
const KEY = 57455
const EXPRESSION_PREC_SETTER = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const UNDERSCORE_UTF8MB4 = 57483
const UNDERSCORE_UTF8 = 57484
const UNDERSCORE_LATIN1 = 57485
const INTERVAL = 57486
const JSON_EXTRACT_OP = 57487
const JSON_UNQUOTE_EXTRACT_OP = 57488
const CREATE = 57489
const ALTER = 57490
const DROP = 57491
const RENAME = 57492
const ANALYZE = 57493
const ADD = 57494
const FLUSH = 57495
const CHANGE = 57496
const MODIFY = 57497
const REVERT = 57498
const SCHEMA = 57499
const TABLE = 57500
const INDEX = 57501
const VIEW = 57502
const TO = 57503
const IGNORE = 57504
const IF = 57505
const PRIMARY = 57506
const COLUMN = 57507
const SPATIAL = 57508
const FULLTEXT = 57509
const KEY_BLOCK_SIZE = 57510
const CHECK = 57511
const INDEXES = 57512
const ACTION = 57513
const CASCADE = 57514
const CONSTRAINT = 57515
const FOREIGN = 57516
const NO = 57517
const REFERENCES = 57518
const RESTRICT = 57519
const SHOW = 57520
const DESCRIBE = 57521
const EXPLAIN = 57522
const DATE = 57523
const ESCAPE = 57524
const REPAIR = 57525
const OPTIMIZE = 57526
const TRUNCATE = 57527
const COALESCE = 57528
const EXCHANGE = 57529
const REBUILD = 57530
const PARTITIONING = 57531
const REMOVE = 57532
const MAXVALUE = 57533
const PARTITION = 57534
const REORGANIZE = 57535
const LESS = 57536
const THAN = 57537
const PROCEDURE = 57538
const TRIGGER = 57539
const VINDEX = 57540
const VINDEXES = 57541
const DIRECTORY = 57542
const NAME = 57543
const UPGRADE = 57544
const STATUS = 57545
const VARIABLES = 57546
const WARNINGS = 57547
const CASCADED = 57548
const DEFINER = 57549
const OPTION = 57550
const SQL = 57551
const UNDEFINED = 57552
const SEQUENCE = 57553
const MERGE = 57554
const TEMPORARY = 57555
const TEMPTABLE = 57556
const INVOKER = 57557
const SECURITY = 57558
const FIRST = 57559
const AFTER = 57560
const LAST = 57561
const VITESS_MIGRATION = 57562
const CANCEL = 57563
const RETRY = 57564
const COMPLETE = 57565
const BEGIN = 57566
const START = 57567
const TRANSACTION = 57568
const COMMIT = 57569
const ROLLBACK = 57570
const SAVEPOINT = 57571
const RELEASE = 57572
const WORK = 57573
const BIT = 57574
const TINYINT = 57575
const SMALLINT = 57576
const MEDIUMINT = 57577
const INT = 57578
const INTEGER = 57579
const BIGINT = 57580
const INTNUM = 57581
const REAL = 57582
const DOUBLE = 57583
const FLOAT_TYPE = 57584
const DECIMAL = 57585
const NUMERIC = 57586
const TIME = 57587
const TIMESTAMP = 57588
const DATETIME = 57589
const YEAR = 57590
const CHAR = 57591
const VARCHAR = 57592
const BOOL = 57593
const CHARACTER = 57594
const VARBINARY = 57595
const NCHAR = 57596
const TEXT = 57597
const TINYTEXT = 57598
const MEDIUMTEXT = 57599
const LONGTEXT = 57600
const BLOB = 57601
const TINYBLOB = 57602
const MEDIUMBLOB = 57603
const LONGBLOB = 57604
const JSON = 57605
const ENUM = 57606
const GEOMETRY = 57607
const POINT = 57608
const LINESTRING = 57609
const POLYGON = 57610
const GEOMETRYCOLLECTION = 57611
const MULTIPOINT = 57612
const MULTILINESTRING = 57613
const MULTIPOLYGON = 57614
const NULLX = 57615
const AUTO_INCREMENT = 57616
const APPROXNUM = 57617
const SIGNED = 57618
const UNSIGNED = 57619
const ZEROFILL = 57620
const CODE = 57621
const COLLATION = 57622
const COLUMNS = 57623
const DATABASES = 57624
const ENGINES = 57625
const EVENT = 57626
const EXTENDED = 57627
const FIELDS = 57628
const FULL = 57629
const FUNCTION = 57630
const GTID_EXECUTED = 57631
const KEYSPACES = 57632
const OPEN = 57633
const PLUGINS = 57634
const PRIVILEGES = 57635
const PROCESSLIST = 57636
const SCHEMAS = 57637
const TABLES = 57638
const TRIGGERS = 57639
const USER = 57640
const VGTID_EXECUTED = 57641
const VITESS_KEYSPACES = 57642
const VITESS_METADATA = 57643
const VITESS_MIGRATIONS = 57644
const VITESS_REPLICATION_STATUS = 57645
const VITESS_SHARDS = 57646
const VITESS_TABLETS = 57647
const VSCHEMA = 57648
const NAMES = 57649
const GLOBAL = 57650
const SESSION = 57651
const ISOLATION = 57652
const LEVEL = 57653
const READ = 57654
const WRITE = 57655
const ONLY = 57656
const REPEATABLE = 57657
const COMMITTED = 57658
const UNCOMMITTED = 57659
const SERIALIZABLE = 57660
const CURRENT_TIMESTAMP = 57661
const DATABASE = 57662
const CURRENT_DATE = 57663
const CURRENT_TIME = 57664
const LOCALTIME = 57665
const LOCALTIMESTAMP = 57666
const CURRENT_USER = 57667
const UTC_DATE = 57668
const UTC_TIME = 57669
const UTC_TIMESTAMP = 57670
const REPLACE = 57671
const CONVERT = 57672
const CAST = 57673
const SUBSTR = 57674
const SUBSTRING = 57675
const GROUP_CONCAT = 57676
const SEPARATOR = 57677
const TIMESTAMPADD = 57678
const TIMESTAMPDIFF = 57679
const MATCH = 57680
const AGAINST = 57681
const BOOLEAN = 57682
const LANGUAGE = 57683
const WITH = 57684
const QUERY = 57685
const EXPANSION = 57686
const WITHOUT = 57687
const VALIDATION = 57688
const UNUSED = 57689
const ARRAY = 57690
const CUME_DIST = 57691
const DESCRIPTION = 57692
const DENSE_RANK = 57693
const EMPTY = 57694
const EXCEPT = 57695
const FIRST_VALUE = 57696
const GROUPING = 57697
const GROUPS = 57698
const JSON_TABLE = 57699
const LAG = 57700
const LAST_VALUE = 57701
const LATERAL = 57702
const LEAD = 57703
const MEMBER = 57704
const NTH_VALUE = 57705
const NTILE = 57706
const OF = 57707
const OVER = 57708
const PERCENT_RANK = 57709
const RANK = 57710
const RECURSIVE = 57711
const ROW_NUMBER = 57712
const SYSTEM = 57713
const WINDOW = 57714
const ACTIVE = 57715
const ADMIN = 57716
const BUCKETS = 57717
const CLONE = 57718
const COMPONENT = 57719
const DEFINITION = 57720
const ENFORCED = 57721
const EXCLUDE = 57722
const FOLLOWING = 57723
const GEOMCOLLECTION = 57724
const GET_MASTER_PUBLIC_KEY = 57725
const HISTOGRAM = 57726
const HISTORY = 57727
const INACTIVE = 57728
const INVISIBLE = 57729
const LOCKED = 57730
const MASTER_COMPRESSION_ALGORITHMS = 57731
const MASTER_PUBLIC_KEY_PATH = 57732
const MASTER_TLS_CIPHERSUITES = 57733
const MASTER_ZSTD_COMPRESSION_LEVEL = 57734
const NESTED = 57735
const NETWORK_NAMESPACE = 57736
const NOWAIT = 57737
const NULLS = 57738
const OJ = 57739
const OLD = 57740
const OPTIONAL = 57741
const ORDINALITY = 57742
const ORGANIZATION = 57743
const OTHERS = 57744
const PATH = 57745
const PERSIST = 57746
const PERSIST_ONLY = 57747
const PRECEDING = 57748
const PRIVILEGE_CHECKS_USER = 57749
const PROCESS = 57750
const RANDOM = 57751
const REFERENCE = 57752
const REQUIRE_ROW_FORMAT = 57753
const RESOURCE = 57754
const RESPECT = 57755
const RESTART = 57756
const RETAIN = 57757
const REUSE = 57758
const ROLE = 57759
const SECONDARY = 57760
const SECONDARY_ENGINE = 57761
const SECONDARY_LOAD = 57762
const SECONDARY_UNLOAD = 57763
const SKIP = 57764
const SRID = 57765
const THREAD_PRIORITY = 57766
const TIES = 57767
const UNBOUNDED = 57768
const VCPU = 57769
const VISIBLE = 57770
const FORMAT = 57771
const TREE = 57772
const VITESS = 57773
const TRADITIONAL = 57774
const LOCAL = 57775
const LOW_PRIORITY = 57776
const NO_WRITE_TO_BINLOG = 57777
const LOGS = 57778
const ERROR = 57779
const GENERAL = 57780
const HOSTS = 57781
const OPTIMIZER_COSTS = 57782
const USER_RESOURCES = 57783
const SLOW = 57784
const CHANNEL = 57785
const RELAY = 57786
const EXPORT = 57787
const AVG_ROW_LENGTH = 57788
const CONNECTION = 57789
const CHECKSUM = 57790
const DELAY_KEY_WRITE = 57791
const ENCRYPTION = 57792
const ENGINE = 57793
const INSERT_METHOD = 57794
const MAX_ROWS = 57795
const MIN_ROWS = 57796
const PACK_KEYS = 57797
const PASSWORD = 57798
const FIXED = 57799
const DYNAMIC = 57800
const COMPRESSED = 57801
const REDUNDANT = 57802
const COMPACT = 57803
const ROW_FORMAT = 57804
const STATS_AUTO_RECALC = 57805
const STATS_PERSISTENT = 57806
const STATS_SAMPLE_PAGES = 57807
const STORAGE = 57808
const MEMORY = 57809
const DISK = 57810

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	486, 137,
	-2, 143,
	-1, 45,
	114, 143,
	154, 143,
	269, 143,
	-2, 410,
	-1, 52,
	33, 561,
	176, 561,
	187, 561,
	220, 575,
	221, 575,
	-2, 563,
	-1, 57,
	178, 585,
	-2, 583,
	-1, 108,
	175, 1008,
	-2, 116,
	-1, 110,
	1, 138,
	486, 138,
	-2, 143,
	-1, 120,
	115, 313,
	181, 313,
	-2, 404,
	-1, 139,
	114, 143,
	154, 143,
	269, 143,
	-2, 419,
	-1, 573,
	161, 1029,
	-2, 1025,
	-1, 574,
	161, 1030,
	-2, 1026,
	-1, 606,
	57, 653,
	-2, 661,
	-1, 643,
	130, 1380,
	-2, 109,
	-1, 644,
	130, 1260,
	-2, 110,
	-1, 650,
	130, 1312,
	-2, 1002,
	-1, 789,
	130, 1194,
	-2, 999,
	-1, 825,
	186, 38,
	191, 38,
	-2, 324,
	-1, 902,
	1, 458,
	486, 458,
	-2, 143,
	-1, 1105,
	57, 654,
	-2, 666,
	-1, 1106,
	57, 655,
	-2, 667,
	-1, 1158,
	1, 354,
	486, 354,
	-2, 143,
	-1, 1161,
	23, 162,
	-2, 164,
	-1, 1234,
	115, 313,
	181, 313,
	-2, 404,
	-1, 1243,
	186, 39,
	191, 39,
	-2, 325,
	-1, 1473,
	161, 1034,
	-2, 1028,
	-1, 1547,
	1, 355,
	486, 355,
	-2, 143,
	-1, 1781,
	75, 91,
	84, 91,
	-2, 95,
	-1, 1946,
	47, 970,
	-2, 964,
	-1, 2132,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 694,
}

const yyPrivate = 57344

const yyLast = 29530

var yyAct = [...]int{
	573, 2172, 2331, 2054, 2306, 2293, 1087, 1957, 1503, 1614,
	568, 1960, 2196, 1120, 2239, 1726, 90, 965, 3, 599,
	1799, 1754, 567, 34, 1958, 1806, 2097, 1961, 1808, 2103,
	526, 2201, 1486, 1507, 576, 621, 1777, 1955, 1947, 530,
	2123, 1746, 1579, 522, 1825, 565, 523, 1215, 176, 1887,
	1848, 176, 566, 490, 176, 2188, 2001, 1599, 1584, 506,
	1826, 176, 552, 1827, 1533, 524, 148, 1520, 792, 176,
	622, 518, 33, 1525, 913, 35, 1766, 1107, 1738, 1440,
	1447, 176, 1903, 1544, 1612, 134, 1399, 601, 1598, 1241,
	1467, 648, 1524, 1819, 603, 820, 607, 1645, 855, 1350,
	1783, 1150, 1090, 506, 535, 89, 506, 176, 506, 1586,
	1129, 1488, 1459, 1417, 624, 983, 1347, 796, 826, 799,
	645, 1512, 1596, 1333, 833, 85, 1575, 800, 821, 1527,
	1248, 1508, 822, 1147, 1149, 1133, 963, 613, 1259, 958,
	1210, 1233, 117, 118, 151, 1355, 608, 635, 611, 609,
	91, 823, 513, 70, 8, 898, 1479, 7, 587, 73,
	92, 942, 610, 71, 6, 1867, 1866, 1643, 1053, 83,
	1895, 1748, 984, 111, 1896, 112, 1406, 629, 1405, 634,
	1049, 808, 1404, 79, 463, 803, 1403, 119, 1402, 113,
	84, 178, 179, 180, 1483, 1484, 1401, 1388, 1393, 2327,
	1470, 793, 516, 1724, 517, 1943, 860, 1319, 2023, 2149,
	615, 2235, 2234, 984, 2167, 514, 859, 2168, 72, 72,
	858, 600, 74, 2345, 2316, 602, 1682, 2344, 72, 2284,
	604, 2339, 73, 2173, 649, 857, 642, 994, 2307, 1631,
	2315, 2283, 616, 1902, 2086, 815, 837, 1224, 871, 872,
	604, 875, 876, 877, 878, 113, 1725, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 868, 836, 96, 623, 1591, 2214, 994, 1994,
	1995, 1874, 1993, 873, 814, 1873, 813, 1539, 1540, 1151,
	1680, 1152, 861, 862, 863, 81, 81, 1792, 1894, 1589,
	1791, 1679, 901, 1793, 72, 81, 1538, 937, 938, 961,
	1015, 932, 98, 99, 596, 102, 1485, 595, 108, 113,
	920, 173, 1816, 2100, 458, 921, 807, 990, 1757, 809,
	982, 2244, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024,
	1023, 1025, 1026, 933, 598, 926, 2056, 606, 1559, 1558,
	493, 2078, 493, 1758, 569, 897, 553, 555, 570, 571,
	2076, 551, 554, 572, 920, 1394, 1395, 1396, 990, 921,
	493, 556, 557, 1392, 504, 637, 638, 919, 949, 918,
	951, 81, 508, 502, 1339, 812, 1588, 804, 812, 1094,
	907, 908, 874, 939, 806, 805, 1849, 1613, 812, 896,
	178, 179, 180, 940, 1870, 2050, 960, 1656, 1654, 1655,
	816, 1646, 1309, 2051, 1651, 2343, 948, 950, 1334, 934,
	955, 927, 2057, 1882, 935, 936, 2328, 81, 493, 941,
	2231, 2058, 1661, 578, 588, 589, 590, 591, 579, 585,
	1650, 810, 903, 580, 810, 586, 592, 593, 1658, 880,
	1659, 879, 1660, 1615, 1310, 631, 1311, 1648, 176, 2162,
	176, 900, 844, 176, 1521, 817, 842, 1652, 853, 852,
	989, 986, 987, 988, 993, 995, 992, 851, 991, 1904,
	1649, 953, 2022, 1027, 850, 985, 849, 848, 2005, 2006,
	847, 506, 506, 506, 846, 841, 1227, 854, 1680, 1812,
	581, 583, 582, 584, 946, 494, 1886, 494, 947, 506,
	506, 989, 986, 987, 988, 993, 995, 992, 952, 991,
	519, 2340, 1906, 1027, 2335, 494, 985, 2282, 1898, 976,
	1348, 797, 1340, 34, 797, 2337, 829, 1872, 795, 916,
	945, 922, 923, 924, 925, 797, 2101, 899, 811, 625,
	2245, 811, 828, 1597, 636, 1247, 1883, 930, 954, 75,
	1590, 811, 845, 1637, 962, 1681, 843, 1344, 1693, 970,
	864, 80, 80, 2030, 1727, 1729, 1869, 1930, 835, 1929,
	1928, 80, 1222, 494, 1908, 1221, 1912, 1220, 1907, 2268,
	1905, 1859, 1345, 1218, 462, 1910, 176, 1030, 1031, 1032,
	1033, 835, 870, 1889, 1909, 457, 110, 1038, 1888, 1041,
	1085, 1889, 1881, 176, 1633, 1880, 1888, 1911, 1913, 601,
	1100, 1246, 1098, 1097, 959, 1028, 1029, 1101, 967, 968,
	2137, 2119, 506, 603, 1788, 1095, 176, 917, 834, 1753,
	909, 506, 1034, 1717, 906, 1623, 956, 506, 1137, 964,
	964, 964, 1321, 1320, 1322, 1323, 1324, 80, 645, 1338,
	1086, 834, 1059, 1027, 911, 979, 838, 828, 977, 73,
	1545, 1026, 1992, 71, 1099, 978, 839, 1086, 89, 618,
	569, 1728, 105, 2333, 570, 571, 2334, 2278, 2332, 572,
	2113, 856, 1647, 1341, 840, 835, 604, 1035, 1036, 1037,
	929, 1040, 835, 1042, 1043, 1044, 1045, 1802, 1048, 1050,
	1050, 931, 1050, 1054, 1054, 1056, 1057, 1058, 915, 1060,
	1061, 1062, 1063, 1064, 1055, 1091, 1153, 943, 1054, 1054,
	1054, 1054, 1051, 92, 1052, 1356, 172, 106, 1065, 1066,
	1067, 1068, 835, 980, 178, 179, 180, 1088, 1442, 1335,
	1632, 1336, 1803, 600, 1337, 834, 1093, 869, 1919, 604,
	114, 1119, 834, 604, 602, 1116, 1460, 838, 828, 604,
	1838, 999, 649, 156, 998, 999, 1805, 839, 1460, 1800,
	1707, 902, 2210, 1422, 1096, 1143, 1144, 178, 179, 180,
	2012, 1750, 176, 1810, 1811, 2011, 1211, 1423, 1424, 1421,
	1801, 997, 834, 998, 999, 1219, 1619, 835, 828, 831,
	832, 1703, 797, 1443, 1258, 1796, 825, 829, 1021, 1022,
	1024, 1023, 1025, 1026, 506, 1114, 1243, 1257, 1245, 153,
	1630, 154, 1807, 2083, 1252, 824, 1628, 1625, 1256, 844,
	171, 506, 506, 914, 506, 842, 506, 506, 2321, 506,
	506, 506, 506, 506, 506, 944, 1751, 1997, 997, 1809,
	998, 999, 1629, 1357, 506, 1138, 81, 834, 176, 1292,
	1696, 1812, 1148, 828, 831, 832, 1253, 797, 1625, 1420,
	1102, 825, 829, 1702, 176, 997, 1114, 998, 999, 2148,
	2081, 1114, 1239, 1464, 1921, 506, 1328, 176, 1114, 2287,
	2322, 1287, 1288, 1627, 2147, 1232, 2028, 157, 1346, 1412,
	1414, 1415, 176, 1823, 1225, 1226, 162, 997, 1326, 998,
	999, 1822, 2341, 1251, 997, 1594, 998, 999, 176, 2288,
	1413, 997, 1289, 998, 999, 176, 1019, 1020, 1021, 1022,
	1024, 1023, 1025, 1026, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 506, 506, 506, 1249, 1249, 1217, 1327,
	1229, 1230, 1228, 1250, 2227, 997, 1242, 998, 999, 1804,
	590, 591, 1295, 1296, 1329, 640, 1000, 2261, 1301, 1302,
	1261, 1325, 1262, 176, 1264, 1266, 1316, 1314, 1270, 1272,
	1274, 1276, 1278, 2089, 2342, 1305, 1290, 997, 1313, 998,
	999, 1360, 1312, 1352, 1047, 1698, 1303, 2262, 1364, 1297,
	1366, 1367, 1368, 1369, 1697, 1294, 1293, 1373, 2088, 1127,
	1268, 1418, 149, 1685, 1686, 1687, 1349, 997, 1441, 998,
	999, 1387, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1001,
	2265, 1450, 506, 519, 2264, 2263, 1416, 113, 997, 1315,
	998, 999, 997, 2209, 998, 999, 2207, 506, 506, 1425,
	2185, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1362, 1123, 814, 1471, 813, 1426,
	1358, 1359, 1130, 1223, 1126, 178, 179, 180, 1461, 1383,
	1384, 1385, 1824, 176, 1363, 1386, 1513, 1514, 2145, 2008,
	1491, 1370, 1371, 1372, 1081, 1084, 178, 179, 180, 1082,
	2009, 964, 964, 964, 1083, 1419, 1832, 1820, 997, 176,
	998, 999, 506, 1641, 1124, 997, 1640, 998, 999, 178,
	179, 180, 176, 1795, 1493, 506, 1494, 1506, 1077, 1080,
	176, 1492, 176, 1078, 176, 176, 506, 1445, 1079, 506,
	2053, 1473, 1475, 1476, 1444, 1471, 89, 1389, 2299, 1472,
	506, 2297, 1353, 645, 1073, 1076, 645, 1317, 1304, 1074,
	2301, 2302, 89, 1300, 1075, 1810, 1811, 1299, 1069, 1072,
	1523, 1298, 2298, 1070, 1125, 1499, 957, 1114, 1071, 997,
	2229, 998, 999, 2228, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 2171, 1565, 1566, 1567, 1568,
	167, 168, 169, 170, 1560, 506, 1561, 1562, 1563, 1564,
	88, 1600, 1601, 1602, 1755, 1548, 1604, 1606, 1549, 1473,
	1956, 1531, 1571, 1572, 1573, 1574, 1446, 1518, 1850, 506,
	2112, 1809, 615, 1452, 1453, 506, 1252, 95, 1784, 1252,
	1835, 1252, 1581, 1812, 1553, 1552, 1501, 2112, 94, 1624,
	93, 1474, 1744, 2313, 1477, 1478, 1744, 2291, 2114, 88,
	1516, 1587, 178, 179, 180, 94, 1607, 649, 1114, 1535,
	649, 1536, 178, 179, 180, 996, 1605, 86, 1551, 506,
	86, 1441, 1550, 1762, 88, 1763, 1441, 1441, 87, 1744,
	2272, 87, 1529, 2251, 1114, 1498, 81, 1611, 95, 2165,
	1114, 1785, 578, 588, 589, 590, 591, 579, 585, 94,
	1787, 93, 580, 2277, 586, 592, 593, 1114, 1582, 1744,
	2163, 1744, 176, 1577, 1578, 1618, 574, 1593, 1621, 176,
	1622, 1595, 1592, 1694, 176, 176, 1603, 1763, 176, 81,
	176, 2241, 1114, 1625, 1114, 1114, 176, 1634, 2117, 1114,
	1582, 1616, 837, 176, 1617, 2020, 2019, 2005, 2006, 1763,
	1636, 1354, 1249, 2018, 1635, 1638, 1639, 1537, 1620, 581,
	583, 582, 584, 1694, 177, 2016, 2017, 177, 1114, 836,
	177, 176, 506, 2016, 2015, 507, 1784, 177, 1015, 1755,
	1897, 1763, 1114, 1694, 1114, 177, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1024, 1023, 1025, 1026, 177, 1644, 1712,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1023, 1025,
	1026, 1626, 1418, 1671, 1672, 1680, 1868, 1711, 1674, 507,
	1214, 1852, 507, 177, 507, 1846, 1847, 1675, 1744, 1743,
	1740, 2150, 1407, 1408, 1409, 1410, 996, 1114, 1987, 1785,
	1214, 1213, 1664, 1159, 1158, 88, 1625, 1680, 1680, 1689,
	2112, 1691, 1017, 1018, 1019, 1020, 1021, 1022, 1024, 1023,
	1025, 1026, 176, 1608, 1511, 1118, 1481, 1397, 1625, 1690,
	176, 1343, 1448, 1449, 1145, 605, 819, 1121, 506, 818,
	1454, 2151, 2152, 2153, 2221, 2055, 2142, 1216, 1580, 1749,
	2052, 2014, 1853, 1678, 1576, 1283, 1570, 1768, 1771, 1772,
	1773, 1769, 1694, 1770, 1774, 1569, 1419, 2124, 2125, 1331,
	176, 176, 1015, 1244, 1692, 1688, 2242, 1240, 1212, 1759,
	1745, 107, 2154, 34, 1829, 901, 1794, 1828, 1591, 519,
	2318, 1280, 1779, 2294, 1016, 1017, 1018, 1019, 1020, 1021,
	1022, 1024, 1023, 1025, 1026, 1284, 1285, 1286, 2124, 2125,
	2127, 1706, 81, 2035, 2034, 2033, 1956, 1741, 1839, 1665,
	1390, 1978, 1509, 1510, 1723, 2130, 1979, 2129, 1976, 2155,
	2156, 1975, 506, 1977, 1829, 1817, 1818, 176, 1281, 1282,
	1974, 1731, 1778, 1980, 176, 1772, 1773, 1742, 2330, 1543,
	506, 1091, 2314, 1505, 1797, 1122, 506, 1782, 1845, 1497,
	1252, 1252, 1752, 2118, 1737, 2039, 506, 1948, 1950, 1936,
	1716, 1935, 2105, 1786, 2202, 2260, 1951, 2200, 1865, 1789,
	2104, 1856, 2108, 1587, 1945, 1798, 1730, 1342, 594, 176,
	176, 176, 176, 176, 619, 1814, 1704, 1556, 1833, 866,
	865, 604, 620, 2065, 1821, 176, 176, 1828, 1583, 1714,
	1715, 1768, 1771, 1772, 1773, 1769, 1892, 1770, 1774, 1760,
	1761, 176, 1456, 969, 1861, 1860, 1863, 1831, 1780, 1840,
	1841, 1842, 114, 1836, 1232, 1830, 1457, 86, 2110, 1441,
	86, 88, 1112, 1108, 88, 1657, 2031, 1668, 87, 1854,
	1855, 87, 1513, 1514, 2274, 1473, 95, 1109, 506, 1862,
	1864, 601, 2237, 1472, 1918, 1813, 1776, 94, 1502, 93,
	1684, 506, 1934, 627, 628, 1927, 1899, 95, 88, 93,
	1933, 176, 1495, 1496, 1111, 506, 1110, 2208, 94, 94,
	93, 1884, 2206, 2205, 506, 2198, 2109, 2107, 2036, 1900,
	1938, 506, 506, 1609, 176, 176, 176, 176, 176, 1962,
	1968, 1927, 626, 2197, 2098, 1901, 176, 1939, 1915, 1755,
	1914, 176, 95, 607, 176, 1858, 1740, 176, 176, 176,
	1953, 2320, 2319, 94, 177, 1139, 177, 1959, 1131, 177,
	100, 101, 1959, 1101, 2320, 2266, 2007, 1926, 2010, 617,
	97, 82, 1, 176, 2296, 475, 1937, 1482, 1089, 1940,
	1988, 489, 2292, 1989, 1318, 1308, 2174, 507, 507, 507,
	2238, 2042, 1890, 608, 2029, 1891, 609, 1585, 1970, 1971,
	176, 1973, 827, 139, 1546, 507, 507, 506, 2004, 1986,
	89, 1981, 1990, 1985, 506, 2003, 1969, 1547, 2309, 1972,
	176, 104, 2041, 1996, 790, 2000, 103, 830, 2043, 1931,
	176, 928, 1610, 2166, 1815, 1557, 1165, 1163, 1164, 1162,
	1352, 1167, 1166, 1161, 176, 1391, 503, 176, 2025, 2038,
	2024, 1775, 174, 1154, 1132, 867, 465, 2066, 2021, 1529,
	1967, 1642, 471, 1039, 1932, 1790, 646, 2004, 639, 1964,
	1587, 2040, 2102, 2047, 2003, 2037, 1708, 1963, 2045, 73,
	1944, 1946, 1529, 1529, 1529, 1529, 1529, 2026, 2027, 1747,
	2061, 1949, 177, 176, 2060, 1942, 2259, 2199, 2273, 1780,
	1554, 2067, 1529, 1128, 1705, 1529, 1046, 1458, 1528, 177,
	1490, 2074, 2071, 2072, 1411, 2073, 528, 527, 2075, 2096,
	2077, 1998, 525, 1733, 2068, 2063, 2064, 1130, 507, 1756,
	1002, 577, 177, 1140, 1767, 1015, 1765, 507, 1764, 1666,
	1532, 2126, 2122, 507, 2099, 2106, 1526, 1739, 176, 536,
	2121, 529, 521, 575, 1999, 2111, 2131, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1024, 1023, 1025, 1026, 2133, 2002,
	2135, 2136, 1555, 2128, 1871, 2049, 981, 1104, 515, 802,
	2046, 1455, 2243, 1683, 2134, 2085, 1103, 1112, 1108, 60,
	38, 176, 510, 2326, 176, 176, 176, 506, 2141, 972,
	2139, 2140, 1109, 633, 32, 2161, 31, 30, 29, 2144,
	28, 2146, 23, 22, 21, 20, 2175, 506, 506, 506,
	19, 2069, 2170, 25, 18, 17, 16, 1105, 1106, 1111,
	109, 1110, 47, 2181, 44, 42, 116, 115, 45, 41,
	904, 39, 27, 26, 15, 14, 13, 2091, 2092, 2093,
	12, 11, 506, 506, 506, 176, 10, 9, 5, 4,
	975, 24, 2, 0, 0, 0, 2180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2179, 0, 506, 0,
	506, 2184, 0, 2195, 0, 1962, 0, 2194, 177, 1962,
	2217, 0, 2204, 2203, 0, 2215, 0, 2211, 601, 34,
	0, 2219, 2213, 506, 0, 0, 1529, 0, 2192, 2193,
	601, 2226, 1959, 2223, 0, 0, 2224, 0, 1916, 1917,
	507, 0, 0, 1920, 0, 0, 0, 1922, 1923, 0,
	0, 2230, 0, 0, 506, 2233, 0, 507, 507, 0,
	507, 0, 507, 507, 0, 507, 507, 507, 507, 507,
	507, 2240, 2232, 0, 0, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 177, 2258, 0, 0, 2256, 0,
	2255, 1954, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 506, 0, 0, 1962, 2267, 0, 0, 0,
	2270, 507, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 506, 176, 0, 0, 0, 0, 177, 0,
	2279, 0, 506, 0, 0, 2269, 2276, 0, 0, 2271,
	34, 0, 0, 0, 177, 0, 0, 0, 0, 506,
	0, 177, 0, 1963, 2289, 73, 172, 1963, 506, 506,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 507,
	507, 507, 2308, 2303, 2295, 2240, 2310, 34, 2317, 2300,
	114, 0, 0, 0, 0, 0, 1959, 0, 2323, 0,
	0, 0, 0, 156, 0, 1015, 0, 2329, 1011, 177,
	1012, 0, 0, 2336, 0, 0, 0, 0, 0, 0,
	0, 2338, 0, 0, 1013, 1014, 1010, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1024, 1023, 1025, 1026, 0, 0,
	0, 0, 0, 0, 559, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 154, 0, 1963, 0, 0, 0, 2087, 507, 1092,
	171, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2275, 0, 0, 507, 507, 0, 73, 0, 0, 0,
	1113, 0, 175, 0, 0, 461, 0, 0, 501, 0,
	0, 0, 0, 0, 0, 461, 0, 0, 0, 519,
	0, 0, 0, 461, 0, 0, 172, 0, 0, 177,
	460, 0, 0, 73, 0, 614, 0, 1844, 0, 0,
	509, 0, 0, 0, 0, 0, 0, 157, 597, 0,
	114, 632, 136, 632, 2138, 177, 162, 0, 507, 0,
	0, 461, 0, 156, 0, 0, 0, 0, 177, 0,
	2143, 507, 0, 0, 0, 0, 177, 0, 177, 0,
	177, 177, 507, 0, 0, 507, 798, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 507, 0, 0, 135,
	0, 0, 2169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 153,
	0, 154, 0, 0, 0, 0, 1235, 1236, 145, 144,
	171, 0, 0, 0, 0, 0, 0, 2182, 0, 2183,
	0, 0, 0, 0, 2186, 2187, 0, 0, 0, 0,
	0, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 2212,
	0, 178, 179, 180, 0, 507, 0, 0, 0, 0,
	2220, 507, 0, 2222, 0, 0, 140, 1237, 147, 0,
	1234, 0, 141, 142, 0, 0, 0, 157, 0, 493,
	0, 0, 0, 0, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 479,
	0, 0, 0, 2257, 519, 0, 0, 0, 0, 0,
	477, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	177, 177, 0, 0, 177, 0, 177, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 474, 177,
	0, 0, 0, 0, 0, 0, 0, 488, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 177, 507, 0,
	0, 2304, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 0, 0, 0,
	167, 168, 169, 170, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 0, 464, 138, 466, 481, 0, 496, 0, 495,
	470, 0, 468, 472, 482, 473, 0, 467, 0, 478,
	0, 558, 469, 483, 484, 486, 500, 499, 487, 0,
	476, 497, 461, 0, 461, 0, 0, 461, 177, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 507, 0, 0, 905, 0, 910,
	0, 0, 912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 0, 0, 0, 0, 0, 177, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 0, 0, 0,
	167, 168, 169, 170, 647, 0, 0, 794, 0, 801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 177, 0, 498, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 507, 0, 0, 0,
	461, 0, 507, 491, 0, 0, 0, 0, 0, 0,
	0, 0, 507, 0, 0, 0, 0, 614, 492, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 177, 177, 177, 177,
	461, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 177, 0, 0, 0, 0, 0, 0, 1115,
	1117, 0, 0, 0, 0, 1142, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 507, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 0, 0, 0, 0, 0, 0, 507, 507, 0,
	177, 177, 177, 177, 177, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 177, 0, 0,
	177, 0, 0, 177, 177, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1160, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 507, 0, 0, 0, 0, 0, 0,
	507, 1255, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1255, 1255, 0, 0,
	177, 0, 461, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 1291, 0, 0,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1351, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 461, 0, 0, 0, 0, 0, 0, 461,
	0, 0, 647, 647, 647, 0, 0, 0, 1374, 1375,
	461, 461, 461, 461, 461, 461, 461, 1361, 0, 0,
	971, 973, 0, 0, 1365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 1376, 1377, 1378, 1379, 1380,
	1381, 1382, 0, 0, 0, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1400, 0, 0, 0, 0, 177, 0, 0,
	177, 177, 177, 507, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 507, 507, 507, 0, 632, 632, 0,
	0, 0, 0, 1255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 1351, 632, 632, 632, 632, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 507,
	507, 177, 0, 1135, 0, 0, 0, 0, 0, 0,
	0, 0, 647, 0, 0, 0, 0, 1306, 1155, 0,
	0, 1462, 0, 0, 507, 1463, 507, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 0, 0, 0, 0, 507,
	0, 0, 0, 0, 0, 0, 461, 1115, 1480, 0,
	0, 0, 1351, 0, 461, 0, 461, 0, 461, 1534,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	507, 1515, 0, 0, 0, 0, 0, 1500, 0, 1519,
	0, 1522, 0, 0, 1400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1182, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 507, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 794, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1254, 0,
	0, 0, 1260, 1260, 0, 1260, 0, 1260, 1260, 0,
	1269, 1260, 1260, 1260, 1260, 1260, 0, 0, 0, 0,
	0, 0, 0, 1254, 1254, 794, 0, 0, 0, 1170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 0,
	0, 0, 0, 461, 0, 0, 1330, 0, 461, 461,
	0, 0, 461, 0, 1669, 0, 0, 0, 0, 0,
	461, 1400, 1183, 0, 0, 0, 0, 461, 1653, 0,
	0, 0, 0, 1662, 1663, 0, 0, 1667, 0, 0,
	0, 0, 0, 0, 0, 1670, 0, 0, 0, 0,
	0, 0, 1673, 0, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 647, 647, 647, 0, 0, 0,
	0, 0, 0, 1196, 1199, 1200, 1201, 1202, 1203, 1204,
	1676, 1205, 1206, 1207, 1208, 1209, 1184, 1185, 1186, 1187,
	1168, 1169, 1197, 0, 1171, 0, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 0, 0, 0, 0, 0, 0,
	632, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 632, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 0, 0, 0,
	0, 0, 0, 1451, 1306, 0, 0, 1695, 0, 0,
	1254, 1699, 0, 1700, 1701, 0, 0, 0, 1465, 1466,
	0, 647, 1709, 0, 0, 1710, 0, 0, 1713, 0,
	0, 1198, 0, 0, 0, 1718, 1719, 1720, 1721, 1722,
	1500, 0, 0, 0, 461, 461, 0, 0, 0, 0,
	0, 1732, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1781, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1135, 0, 0, 647,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 0,
	647, 461, 0, 0, 0, 0, 0, 0, 1843, 0,
	0, 794, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 1351, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 461, 461, 461, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 801, 0, 0, 461,
	461, 0, 0, 0, 0, 0, 0, 0, 1875, 1876,
	1877, 1878, 1879, 0, 0, 461, 0, 0, 0, 0,
	794, 0, 0, 0, 1400, 1885, 801, 0, 0, 632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1893, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 632, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	794, 0, 0, 0, 0, 461, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1255, 0, 0, 1924, 1925, 1255, 461, 461,
	461, 461, 461, 0, 0, 0, 0, 0, 0, 0,
	1982, 0, 0, 0, 0, 461, 0, 0, 461, 0,
	0, 461, 1991, 1351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1965, 0, 0, 0, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1983, 1984,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2013, 1677, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 461, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 2044,
	0, 461, 0, 0, 0, 0, 0, 0, 0, 2048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2059, 0, 0, 2062, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 2070, 0, 0, 0, 0, 0,
	0, 0, 2095, 0, 0, 2079, 2080, 2082, 2084, 0,
	0, 0, 0, 0, 0, 0, 0, 2090, 0, 0,
	0, 0, 2094, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2115, 2116, 0, 0, 2120, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 2132, 0, 461, 461,
	461, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2157, 1504, 0, 2158, 2159, 2160, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 647, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2164, 0, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 172, 0, 1255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 114,
	0, 136, 2189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	0, 0, 0, 0, 72, 36, 37, 74, 0, 0,
	0, 0, 1260, 146, 0, 0, 0, 0, 135, 2225,
	0, 0, 0, 0, 78, 0, 1941, 0, 40, 66,
	67, 0, 64, 68, 0, 647, 0, 0, 153, 1254,
	154, 65, 1966, 1260, 1254, 123, 124, 145, 144, 171,
	2236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2246, 2247, 2248, 0, 2249, 2250, 2252,
	53, 0, 0, 2253, 2254, 0, 0, 461, 0, 0,
	0, 81, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1255, 2280, 0, 0, 140, 121, 147, 128, 120,
	0, 141, 142, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 2281, 162, 129, 0, 794, 0,
	0, 1254, 0, 0, 0, 1504, 0, 0, 0, 0,
	132, 130, 125, 126, 127, 131, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 0, 0, 0, 0, 133,
	0, 0, 43, 46, 49, 48, 51, 0, 63, 0,
	0, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2324, 2325, 0, 0, 0,
	0, 0, 0, 52, 77, 76, 0, 0, 61, 62,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 54,
	55, 0, 56, 57, 58, 59, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2176, 2177,
	2178, 0, 0, 0, 75, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2190, 2190, 2190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1254, 0, 0, 0, 0, 2216,
	0, 2218, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 1504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1254, 0,
	2290, 0, 0, 0, 0, 0, 0, 0, 0, 647,
	647, 772, 758, 405, 0, 708, 775, 679, 696, 785,
	699, 702, 741, 658, 721, 329, 693, 0, 683, 654,
	689, 655, 681, 710, 235, 678, 760, 724, 774, 286,
	232, 660, 684, 343, 698, 187, 743, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 781, 290, 730, 0, 390, 314, 0, 0, 0,
	712, 764, 719, 754, 707, 742, 668, 729, 776, 694,
	738, 777, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 2311, 0, 2312, 0,
	0, 0, 0, 0, 209, 0, 216, 735, 771, 691,
	737, 230, 274, 237, 229, 407, 782, 763, 0, 0,
	202, 773, 714, 0, 740, 0, 788, 653, 732, 0,
	656, 659, 784, 767, 687, 240, 0, 0, 0, 0,
	0, 0, 0, 711, 720, 751, 705, 0, 0, 0,
	0, 0, 0, 0, 685, 0, 728, 0, 0, 0,
	664, 657, 0, 0, 0, 0, 709, 0, 0, 0,
	667, 0, 686, 752, 0, 651, 258, 661, 315, 0,
	756, 766, 706, 439, 770, 704, 703, 747, 665, 762,
	697, 285, 663, 282, 182, 198, 0, 695, 325, 364,
	370, 761, 682, 690, 221, 688, 368, 339, 424, 205,
	248, 361, 344, 366, 727, 745, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 966, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 677, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 757, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 749, 787, 338, 369, 211,
	426, 389, 672, 676, 670, 671, 722, 723, 673, 778,
	779, 780, 753, 666, 0, 674, 675, 0, 759, 768,
	769, 726, 181, 195, 288, 783, 358, 251, 453, 433,
	429, 652, 669, 227, 680, 0, 0, 692, 700, 701,
	713, 715, 716, 717, 718, 311, 733, 734, 736, 744,
	746, 748, 750, 755, 765, 786, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 725, 731, 298,
	245, 263, 273, 739, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 772, 758, 405, 0, 708, 775, 679, 696,
	785, 699, 702, 741, 658, 721, 329, 693, 0, 683,
	654, 689, 655, 681, 710, 235, 678, 760, 724, 774,
	286, 232, 660, 684, 343, 698, 187, 743, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 781, 290, 730, 0, 390, 314, 0, 0,
	0, 712, 764, 719, 754, 707, 742, 668, 729, 776,
	694, 738, 777, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 735, 771,
	691, 737, 230, 274, 237, 229, 407, 782, 763, 0,
	0, 202, 773, 714, 0, 740, 0, 788, 653, 732,
	0, 656, 659, 784, 767, 687, 240, 0, 0, 0,
	0, 0, 0, 0, 711, 720, 751, 705, 0, 0,
	0, 0, 0, 1992, 0, 685, 0, 728, 0, 0,
	0, 664, 657, 0, 0, 0, 0, 709, 0, 0,
	0, 667, 0, 686, 752, 0, 651, 258, 661, 315,
	0, 756, 766, 706, 439, 770, 704, 703, 747, 665,
	762, 697, 285, 663, 282, 182, 198, 0, 695, 325,
	364, 370, 761, 682, 690, 221, 688, 368, 339, 424,
	205, 248, 361, 344, 366, 727, 745, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 966, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 677, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 757,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 749, 787, 338, 369,
	211, 426, 389, 672, 676, 670, 671, 722, 723, 673,
	778, 779, 780, 753, 666, 0, 674, 675, 0, 759,
	768, 769, 726, 181, 195, 288, 783, 358, 251, 453,
	433, 429, 652, 669, 227, 680, 0, 0, 692, 700,
	701, 713, 715, 716, 717, 718, 311, 733, 734, 736,
	744, 746, 748, 750, 755, 765, 786, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 725, 731,
	298, 245, 263, 273, 739, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 772, 758, 405, 0, 708, 775, 679,
	696, 785, 699, 702, 741, 658, 721, 329, 693, 0,
	683, 654, 689, 655, 681, 710, 235, 678, 760, 724,
	774, 286, 232, 660, 684, 343, 698, 187, 743, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 781, 290, 730, 0, 390, 314, 0,
	0, 0, 712, 764, 719, 754, 707, 742, 668, 729,
	776, 694, 738, 777, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 735,
	771, 691, 737, 230, 274, 237, 229, 407, 782, 763,
	0, 0, 202, 773, 714, 0, 740, 0, 788, 653,
	732, 0, 656, 659, 784, 767, 687, 240, 0, 0,
	0, 0, 0, 0, 0, 711, 720, 751, 705, 0,
	0, 0, 0, 0, 1952, 0, 685, 0, 728, 0,
	0, 0, 664, 657, 0, 0, 0, 0, 709, 0,
	0, 0, 667, 0, 686, 752, 0, 651, 258, 661,
	315, 0, 756, 766, 706, 439, 770, 704, 703, 747,
	665, 762, 697, 285, 663, 282, 182, 198, 0, 695,
	325, 364, 370, 761, 682, 690, 221, 688, 368, 339,
	424, 205, 248, 361, 344, 366, 727, 745, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 966, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 677, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	757, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 749, 787, 338,
	369, 211, 426, 389, 672, 676, 670, 671, 722, 723,
	673, 778, 779, 780, 753, 666, 0, 674, 675, 0,
	759, 768, 769, 726, 181, 195, 288, 783, 358, 251,
	453, 433, 429, 652, 669, 227, 680, 0, 0, 692,
	700, 701, 713, 715, 716, 717, 718, 311, 733, 734,
	736, 744, 746, 748, 750, 755, 765, 786, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 725,
	731, 298, 245, 263, 273, 739, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 772, 758, 405, 0, 708, 775,
	679, 696, 785, 699, 702, 741, 658, 721, 329, 693,
	0, 683, 654, 689, 655, 681, 710, 235, 678, 760,
	724, 774, 286, 232, 660, 684, 343, 698, 187, 743,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 781, 290, 730, 0, 390, 314,
	0, 0, 0, 712, 764, 719, 754, 707, 742, 668,
	729, 776, 694, 738, 777, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	735, 771, 691, 737, 230, 274, 237, 229, 407, 782,
	763, 0, 0, 202, 773, 714, 0, 740, 0, 788,
	653, 732, 0, 656, 659, 784, 767, 687, 240, 0,
	0, 0, 0, 0, 0, 0, 711, 720, 751, 705,
	0, 0, 0, 0, 0, 1517, 0, 685, 0, 728,
	0, 0, 0, 664, 657, 0, 0, 0, 0, 709,
	0, 0, 0, 667, 0, 686, 752, 0, 651, 258,
	661, 315, 0, 756, 766, 706, 439, 770, 704, 703,
	747, 665, 762, 697, 285, 663, 282, 182, 198, 0,
	695, 325, 364, 370, 761, 682, 690, 221, 688, 368,
	339, 424, 205, 248, 361, 344, 366, 727, 745, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 966, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 677, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 757, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 749, 787,
	338, 369, 211, 426, 389, 672, 676, 670, 671, 722,
	723, 673, 778, 779, 780, 753, 666, 0, 674, 675,
	0, 759, 768, 769, 726, 181, 195, 288, 783, 358,
	251, 453, 433, 429, 652, 669, 227, 680, 0, 0,
	692, 700, 701, 713, 715, 716, 717, 718, 311, 733,
	734, 736, 744, 746, 748, 750, 755, 765, 786, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	725, 731, 298, 245, 263, 273, 739, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 772, 758, 405, 0, 708,
	775, 679, 696, 785, 699, 702, 741, 658, 721, 329,
	693, 0, 683, 654, 689, 655, 681, 710, 235, 678,
	760, 724, 774, 286, 232, 660, 684, 343, 698, 187,
	743, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 781, 290, 730, 0, 390,
	314, 0, 0, 0, 712, 764, 719, 754, 707, 742,
	668, 729, 776, 694, 738, 777, 276, 218, 186, 326,
	391, 250, 0, 81, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 735, 771, 691, 737, 230, 274, 237, 229, 407,
	782, 763, 0, 0, 202, 773, 714, 0, 740, 0,
	788, 653, 732, 0, 656, 659, 784, 767, 687, 240,
	0, 0, 0, 0, 0, 0, 0, 711, 720, 751,
	705, 0, 0, 0, 0, 0, 0, 0, 685, 0,
	728, 0, 0, 0, 664, 657, 0, 0, 0, 0,
	709, 0, 0, 0, 667, 0, 686, 752, 0, 651,
	258, 661, 315, 0, 756, 766, 706, 439, 770, 704,
	703, 747, 665, 762, 697, 285, 663, 282, 182, 198,
	0, 695, 325, 364, 370, 761, 682, 690, 221, 688,
	368, 339, 424, 205, 248, 361, 344, 366, 727, 745,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 966,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 677,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 757, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 749,
	787, 338, 369, 211, 426, 389, 672, 676, 670, 671,
	722, 723, 673, 778, 779, 780, 753, 666, 0, 674,
	675, 0, 759, 768, 769, 726, 181, 195, 288, 783,
	358, 251, 453, 433, 429, 652, 669, 227, 680, 0,
	0, 692, 700, 701, 713, 715, 716, 717, 718, 311,
	733, 734, 736, 744, 746, 748, 750, 755, 765, 786,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 725, 731, 298, 245, 263, 273, 739, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 772, 758, 405, 0,
	708, 775, 679, 696, 785, 699, 702, 741, 658, 721,
	329, 693, 0, 683, 654, 689, 655, 681, 710, 235,
	678, 760, 724, 774, 286, 232, 660, 684, 343, 698,
	187, 743, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 781, 290, 730, 0,
	390, 314, 0, 0, 0, 712, 764, 719, 754, 707,
	742, 668, 729, 776, 694, 738, 777, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 735, 771, 691, 737, 230, 274, 237, 229,
	407, 782, 763, 0, 0, 202, 773, 714, 0, 740,
	0, 788, 653, 732, 0, 656, 659, 784, 767, 687,
	240, 0, 0, 0, 0, 0, 0, 0, 711, 720,
	751, 705, 0, 0, 0, 0, 0, 0, 0, 685,
	0, 728, 0, 0, 0, 664, 657, 0, 0, 0,
	0, 709, 0, 0, 0, 667, 0, 686, 752, 0,
	651, 258, 661, 315, 0, 756, 766, 706, 439, 770,
	704, 703, 747, 665, 762, 697, 285, 663, 282, 182,
	198, 0, 695, 325, 364, 370, 761, 682, 690, 221,
	688, 368, 339, 424, 205, 248, 361, 344, 366, 727,
	745, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	966, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	677, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 757, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	749, 787, 338, 369, 211, 426, 389, 672, 676, 670,
	671, 722, 723, 673, 778, 779, 780, 753, 666, 0,
	674, 675, 0, 759, 768, 769, 726, 181, 195, 288,
	783, 358, 251, 453, 433, 429, 652, 669, 227, 680,
	0, 0, 692, 700, 701, 713, 715, 716, 717, 718,
	311, 733, 734, 736, 744, 746, 748, 750, 755, 765,
	786, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 725, 731, 298, 245, 263, 273, 739, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 772, 758, 405,
	0, 708, 775, 679, 696, 785, 699, 702, 741, 658,
	721, 329, 693, 0, 683, 654, 689, 655, 681, 710,
	235, 678, 760, 724, 774, 286, 232, 660, 684, 343,
	698, 187, 743, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 781, 290, 730,
	0, 390, 314, 0, 0, 0, 712, 764, 719, 754,
	707, 742, 668, 729, 776, 694, 738, 777, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 735, 771, 691, 737, 230, 274, 237,
	229, 407, 782, 763, 0, 0, 789, 773, 714, 0,
	740, 0, 788, 653, 732, 0, 656, 659, 784, 767,
	687, 240, 0, 0, 0, 0, 0, 0, 0, 711,
	720, 751, 705, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 728, 0, 0, 0, 664, 657, 0, 0,
	0, 0, 709, 0, 0, 0, 667, 0, 686, 752,
	0, 651, 258, 661, 315, 0, 756, 766, 706, 439,
	770, 704, 703, 747, 665, 762, 697, 285, 663, 282,
	182, 198, 0, 695, 325, 364, 370, 761, 682, 690,
	221, 688, 368, 339, 424, 205, 248, 361, 344, 366,
	727, 745, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 662, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 677, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 757, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 650, 644, 643, 283,
	292, 749, 787, 338, 369, 211, 426, 389, 672, 676,
	670, 671, 722, 723, 673, 778, 779, 780, 753, 666,
	0, 674, 675, 0, 759, 768, 769, 726, 181, 195,
	288, 783, 358, 251, 453, 433, 429, 652, 669, 227,
	680, 0, 0, 692, 700, 701, 713, 715, 716, 717,
	718, 311, 733, 734, 736, 744, 746, 748, 750, 755,
	765, 786, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 725, 731, 298, 245, 263, 273, 739,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 772, 758,
	405, 0, 708, 775, 679, 696, 785, 699, 702, 741,
	658, 721, 329, 693, 0, 683, 654, 689, 655, 681,
	710, 235, 678, 760, 724, 774, 286, 232, 660, 684,
	343, 698, 187, 743, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 781, 290,
	730, 0, 390, 314, 0, 0, 0, 712, 764, 719,
	754, 707, 742, 668, 729, 776, 694, 738, 777, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 735, 771, 691, 737, 230, 274,
	237, 229, 407, 782, 763, 0, 0, 789, 773, 714,
	0, 740, 0, 788, 653, 732, 0, 656, 659, 784,
	767, 687, 240, 0, 0, 0, 0, 0, 0, 0,
	711, 720, 751, 705, 0, 0, 0, 0, 0, 0,
	0, 685, 0, 728, 0, 0, 0, 664, 657, 0,
	0, 0, 0, 709, 0, 0, 0, 667, 0, 686,
	752, 0, 651, 258, 661, 315, 0, 756, 766, 706,
	439, 770, 704, 703, 747, 665, 762, 697, 285, 663,
	282, 182, 198, 0, 695, 325, 364, 370, 761, 682,
	690, 221, 688, 368, 339, 424, 205, 248, 361, 344,
	366, 727, 745, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 1146, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 662, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 677, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 757, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 650, 644, 643,
	283, 292, 749, 787, 338, 369, 211, 426, 389, 672,
	676, 670, 671, 722, 723, 673, 778, 779, 780, 753,
	666, 0, 674, 675, 0, 759, 768, 769, 726, 181,
	195, 288, 783, 358, 251, 453, 433, 429, 652, 669,
	227, 680, 0, 0, 692, 700, 701, 713, 715, 716,
	717, 718, 311, 733, 734, 736, 744, 746, 748, 750,
	755, 765, 786, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 725, 731, 298, 245, 263, 273,
	739, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 772,
	758, 405, 0, 708, 775, 679, 696, 785, 699, 702,
	741, 658, 721, 329, 693, 0, 683, 654, 689, 655,
	681, 710, 235, 678, 760, 724, 774, 286, 232, 660,
	684, 343, 698, 187, 743, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 781,
	290, 730, 0, 390, 314, 0, 0, 0, 712, 764,
	719, 754, 707, 742, 668, 729, 776, 694, 738, 777,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 735, 771, 691, 737, 230,
	274, 237, 229, 407, 782, 763, 0, 0, 789, 773,
	714, 0, 740, 0, 788, 653, 732, 0, 656, 659,
	784, 767, 687, 240, 0, 0, 0, 0, 0, 0,
	0, 711, 720, 751, 705, 0, 0, 0, 0, 0,
	0, 0, 685, 0, 728, 0, 0, 0, 664, 657,
	0, 0, 0, 0, 709, 0, 0, 0, 667, 0,
	686, 752, 0, 651, 258, 661, 315, 0, 756, 766,
	706, 439, 770, 704, 703, 747, 665, 762, 697, 285,
	663, 282, 182, 198, 0, 695, 325, 364, 370, 761,
	682, 690, 221, 688, 368, 339, 424, 205, 248, 361,
	344, 366, 727, 745, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 641, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 662, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 677, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 757, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 650, 644,
	643, 283, 292, 749, 787, 338, 369, 211, 426, 389,
	672, 676, 670, 671, 722, 723, 673, 778, 779, 780,
	753, 666, 0, 674, 675, 0, 759, 768, 769, 726,
	181, 195, 288, 783, 358, 251, 453, 433, 429, 652,
	669, 227, 680, 0, 0, 692, 700, 701, 713, 715,
	716, 717, 718, 311, 733, 734, 736, 744, 746, 748,
	750, 755, 765, 786, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 725, 731, 298, 245, 263,
	273, 739, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 1468, 0, 537, 0, 0,
	0, 235, 542, 0, 0, 0, 286, 232, 0, 1469,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 549, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 544,
	545, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 81, 0, 0, 178,
	179, 180, 578, 588, 589, 590, 591, 579, 585, 0,
	0, 209, 580, 216, 586, 592, 593, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 520, 534, 0, 548, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 630,
	0, 0, 0, 563, 0, 533, 0, 0, 541, 581,
	583, 582, 584, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 562, 0, 0,
	439, 0, 0, 560, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 569,
	561, 553, 555, 570, 571, 550, 551, 554, 572, 564,
	540, 539, 0, 546, 547, 0, 556, 557, 538, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 537, 0, 0, 0,
	235, 542, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 549, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 544, 545,
	0, 0, 0, 0, 0, 0, 1541, 0, 276, 218,
	186, 326, 391, 250, 0, 81, 0, 0, 178, 179,
	180, 578, 588, 589, 590, 591, 579, 585, 0, 0,
	209, 580, 216, 586, 592, 593, 1542, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 520, 534, 0, 548, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 563, 0, 533, 0, 0, 541, 581, 583,
	582, 584, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 562, 0, 0, 439,
	0, 0, 560, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 569, 561,
	553, 555, 570, 571, 550, 551, 554, 572, 564, 540,
	539, 0, 546, 547, 0, 556, 557, 538, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 72, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 537, 0, 0, 0,
	235, 542, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 549, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 544, 545,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 81, 0, 0, 178, 179,
	180, 578, 588, 589, 590, 591, 579, 585, 0, 0,
	209, 580, 216, 586, 592, 593, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 520, 534, 0, 548, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 563, 0, 533, 0, 0, 541, 581, 583,
	582, 584, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 562, 0, 0, 439,
	0, 0, 560, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 569, 561,
	553, 555, 570, 571, 550, 551, 554, 572, 564, 540,
	539, 0, 546, 547, 0, 556, 557, 538, 181, 195,
	288, 80, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 537, 0, 0, 0, 235,
	542, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 549, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 544, 545, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 81, 0, 0, 178, 179, 180,
	578, 588, 589, 590, 591, 579, 585, 0, 0, 209,
	580, 216, 586, 592, 593, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 520, 534, 0, 548, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 0, 0, 0,
	0, 563, 0, 533, 0, 0, 541, 581, 583, 582,
	584, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 562, 0, 0, 439, 0,
	0, 560, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 2305,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 569, 561, 553,
	555, 570, 571, 550, 551, 554, 572, 564, 540, 539,
	0, 546, 547, 0, 556, 557, 538, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 537, 0, 0, 0, 235, 542,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 549, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 544, 545, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 81, 0, 1114, 178, 179, 180, 578,
	588, 589, 590, 591, 579, 585, 0, 0, 209, 580,
	216, 586, 592, 593, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 520, 534, 0, 548, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 0, 0, 0, 0,
	563, 0, 533, 0, 0, 541, 581, 583, 582, 584,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 562, 0, 0, 439, 0, 0,
	560, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 569, 561, 553, 555,
	570, 571, 550, 551, 554, 572, 564, 540, 539, 0,
	546, 547, 0, 556, 557, 538, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 537, 0, 0, 0, 235, 542, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 549, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 544, 545, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 81, 0, 0, 178, 179, 180, 578, 588,
	589, 590, 591, 579, 585, 0, 0, 209, 580, 216,
	586, 592, 593, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 520, 534, 0, 548, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 630, 0, 0, 0, 563,
	0, 533, 0, 0, 541, 581, 583, 582, 584, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 562, 0, 0, 439, 0, 0, 560,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 569, 561, 553, 555, 570,
	571, 550, 551, 554, 572, 564, 540, 539, 0, 546,
	547, 0, 556, 557, 538, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 537, 0, 0, 0, 235, 542, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 549, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 544, 545, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 81, 0, 0, 178, 179, 180, 578, 588, 589,
	590, 591, 579, 585, 0, 0, 209, 580, 216, 586,
	592, 593, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	520, 534, 0, 548, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 532, 0, 0, 0, 0, 563, 0,
	533, 0, 0, 541, 581, 583, 582, 584, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 562, 0, 0, 439, 0, 0, 560, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 569, 561, 553, 555, 570, 571,
	550, 551, 554, 572, 564, 540, 539, 0, 546, 547,
	0, 556, 557, 538, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 537, 0, 0, 0, 235, 542, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 549, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 544, 545, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	81, 0, 0, 178, 179, 180, 578, 588, 589, 590,
	591, 579, 585, 0, 0, 209, 580, 216, 586, 592,
	593, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 548, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 563, 0, 533,
	0, 0, 541, 581, 583, 582, 584, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 562, 0, 0, 439, 0, 0, 560, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 569, 561, 553, 555, 570, 571, 550,
	551, 554, 572, 564, 540, 539, 0, 546, 547, 0,
	556, 557, 538, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 834, 439, 0, 0, 0, 0, 0, 831,
	832, 285, 797, 282, 182, 198, 825, 829, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 1134, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 1136, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 997, 0, 998, 999, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 72, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 81, 0,
	1114, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 80, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 72, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 81, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 80, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 1489, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 1307, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 1487, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 797,
	282, 182, 198, 795, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 1489, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 1307, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 1114, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 2191, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 1735, 0, 0, 1736, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 1157, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 1156,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 2286,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 2191, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 1307, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 1530, 0, 0, 0,
	0, 0, 0, 329, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 1136, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1027, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	1398, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 1279, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	1277, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 1275,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 260, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 1273, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 0, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 1271, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 405, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 329, 0, 1267, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 286, 232,
	0, 0, 343, 0, 187, 0, 381, 220, 295, 293,
	410, 246, 238, 234, 219, 270, 301, 341, 399, 335,
	0, 290, 0, 0, 390, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 218, 186, 326, 391, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	230, 274, 237, 229, 407, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 315, 0, 0,
	0, 0, 439, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 282, 182, 198, 0, 0, 325, 364, 370,
	0, 0, 0, 221, 0, 368, 339, 424, 205, 248,
	361, 344, 366, 0, 0, 367, 291, 412, 356, 422,
	440, 441, 228, 319, 430, 403, 436, 452, 199, 225,
	333, 396, 427, 387, 312, 408, 409, 281, 386, 256,
	185, 289, 446, 197, 376, 213, 190, 398, 420, 210,
	379, 0, 0, 454, 192, 418, 395, 308, 278, 279,
	191, 0, 360, 233, 254, 223, 328, 415, 416, 222,
	455, 201, 435, 194, 0, 434, 321, 411, 419, 309,
	300, 193, 417, 307, 299, 284, 244, 265, 354, 294,
	355, 266, 317, 316, 318, 0, 188, 0, 392, 428,
	456, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 287, 332, 353, 351, 357, 0, 406, 423,
	431, 438, 444, 445, 447, 448, 449, 450, 451, 320,
	268, 388, 283, 292, 0, 0, 338, 369, 211, 426,
	389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 288, 0, 358, 251, 453, 433, 429,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 311, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 271, 272, 275, 280,
	297, 302, 303, 304, 305, 322, 323, 324, 327, 330,
	331, 334, 336, 337, 340, 346, 347, 348, 349, 350,
	352, 359, 363, 371, 372, 373, 374, 375, 377, 378,
	382, 383, 384, 385, 393, 397, 413, 414, 425, 437,
	442, 260, 421, 443, 0, 296, 0, 0, 298, 245,
	263, 273, 0, 432, 394, 200, 365, 252, 189, 217,
	203, 224, 239, 242, 277, 306, 313, 342, 345, 257,
	236, 215, 362, 212, 380, 400, 401, 402, 404, 310,
	231, 405, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 329, 0, 1265, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 286, 232, 0,
	0, 343, 0, 187, 0, 381, 220, 295, 293, 410,
	246, 238, 234, 219, 270, 301, 341, 399, 335, 0,
	290, 0, 0, 390, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 218, 186, 326, 391, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 230,
	274, 237, 229, 407, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 315, 0, 0, 0,
	0, 439, 0, 0, 0, 0, 0, 0, 0, 285,
	0, 282, 182, 198, 0, 0, 325, 364, 370, 0,
	0, 0, 221, 0, 368, 339, 424, 205, 248, 361,
	344, 366, 0, 0, 367, 291, 412, 356, 422, 440,
	441, 228, 319, 430, 403, 436, 452, 199, 225, 333,
	396, 427, 387, 312, 408, 409, 281, 386, 256, 185,
	289, 446, 197, 376, 213, 190, 398, 420, 210, 379,
	0, 0, 454, 192, 418, 395, 308, 278, 279, 191,
	0, 360, 233, 254, 223, 328, 415, 416, 222, 455,
	201, 435, 194, 0, 434, 321, 411, 419, 309, 300,
	193, 417, 307, 299, 284, 244, 265, 354, 294, 355,
	266, 317, 316, 318, 0, 188, 0, 392, 428, 456,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 287, 332, 353, 351, 357, 0, 406, 423, 431,
	438, 444, 445, 447, 448, 449, 450, 451, 320, 268,
	388, 283, 292, 0, 0, 338, 369, 211, 426, 389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 288, 0, 358, 251, 453, 433, 429, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 311, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 271, 272, 275, 280, 297,
	302, 303, 304, 305, 322, 323, 324, 327, 330, 331,
	334, 336, 337, 340, 346, 347, 348, 349, 350, 352,
	359, 363, 371, 372, 373, 374, 375, 377, 378, 382,
	383, 384, 385, 393, 397, 413, 414, 425, 437, 442,
	260, 421, 443, 0, 296, 0, 0, 298, 245, 263,
	273, 0, 432, 394, 200, 365, 252, 189, 217, 203,
	224, 239, 242, 277, 306, 313, 342, 345, 257, 236,
	215, 362, 212, 380, 400, 401, 402, 404, 310, 231,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 329, 0, 1263, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 286, 232, 0, 0,
	343, 0, 187, 0, 381, 220, 295, 293, 410, 246,
	238, 234, 219, 270, 301, 341, 399, 335, 0, 290,
	0, 0, 390, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	218, 186, 326, 391, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 230, 274,
	237, 229, 407, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 315, 0, 0, 0, 0,
	439, 0, 0, 0, 0, 0, 0, 0, 285, 0,
	282, 182, 198, 0, 0, 325, 364, 370, 0, 0,
	0, 221, 0, 368, 339, 424, 205, 248, 361, 344,
	366, 0, 0, 367, 291, 412, 356, 422, 440, 441,
	228, 319, 430, 403, 436, 452, 199, 225, 333, 396,
	427, 387, 312, 408, 409, 281, 386, 256, 185, 289,
	446, 197, 376, 213, 190, 398, 420, 210, 379, 0,
	0, 454, 192, 418, 395, 308, 278, 279, 191, 0,
	360, 233, 254, 223, 328, 415, 416, 222, 455, 201,
	435, 194, 0, 434, 321, 411, 419, 309, 300, 193,
	417, 307, 299, 284, 244, 265, 354, 294, 355, 266,
	317, 316, 318, 0, 188, 0, 392, 428, 456, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	287, 332, 353, 351, 357, 0, 406, 423, 431, 438,
	444, 445, 447, 448, 449, 450, 451, 320, 268, 388,
	283, 292, 0, 0, 338, 369, 211, 426, 389, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 288, 0, 358, 251, 453, 433, 429, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 311, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 271, 272, 275, 280, 297, 302,
	303, 304, 305, 322, 323, 324, 327, 330, 331, 334,
	336, 337, 340, 346, 347, 348, 349, 350, 352, 359,
	363, 371, 372, 373, 374, 375, 377, 378, 382, 383,
	384, 385, 393, 397, 413, 414, 425, 437, 442, 260,
	421, 443, 0, 296, 0, 0, 298, 245, 263, 273,
	0, 432, 394, 200, 365, 252, 189, 217, 203, 224,
	239, 242, 277, 306, 313, 342, 345, 257, 236, 215,
	362, 212, 380, 400, 401, 402, 404, 310, 231, 405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 329, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 286, 232, 0, 0, 343,
	0, 187, 0, 381, 220, 295, 293, 410, 246, 238,
	234, 219, 270, 301, 341, 399, 335, 0, 290, 0,
	0, 390, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 218,
	186, 326, 391, 250, 0, 1238, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 230, 274, 237,
	229, 407, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 315, 0, 0, 0, 0, 439,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 282,
	182, 198, 0, 0, 325, 364, 370, 0, 0, 0,
	221, 0, 368, 339, 424, 205, 248, 361, 344, 366,
	0, 0, 367, 291, 412, 356, 422, 440, 441, 228,
	319, 430, 403, 436, 452, 199, 225, 333, 396, 427,
	387, 312, 408, 409, 281, 386, 256, 185, 289, 446,
	197, 376, 213, 190, 398, 420, 210, 379, 0, 0,
	454, 192, 418, 395, 308, 278, 279, 191, 0, 360,
	233, 254, 223, 328, 415, 416, 222, 455, 201, 435,
	194, 0, 434, 321, 411, 419, 309, 300, 193, 417,
	307, 299, 284, 244, 265, 354, 294, 355, 266, 317,
	316, 318, 0, 188, 0, 392, 428, 456, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 287,
	332, 353, 351, 357, 0, 406, 423, 431, 438, 444,
	445, 447, 448, 449, 450, 451, 320, 268, 388, 283,
	292, 0, 0, 338, 369, 211, 426, 389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	288, 0, 358, 251, 453, 433, 429, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 311, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 271, 272, 275, 280, 297, 302, 303,
	304, 305, 322, 323, 324, 327, 330, 331, 334, 336,
	337, 340, 346, 347, 348, 349, 350, 352, 359, 363,
	371, 372, 373, 374, 375, 377, 378, 382, 383, 384,
	385, 393, 397, 413, 414, 425, 437, 442, 260, 421,
	443, 0, 296, 0, 0, 298, 245, 263, 273, 0,
	432, 394, 200, 365, 252, 189, 217, 203, 224, 239,
	242, 277, 306, 313, 342, 345, 257, 236, 215, 362,
	212, 380, 400, 401, 402, 404, 310, 231, 405, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	329, 0, 0, 0, 0, 0, 0, 0, 1141, 235,
	0, 0, 0, 0, 286, 232, 0, 0, 343, 0,
	187, 0, 381, 220, 295, 293, 410, 246, 238, 234,
	219, 270, 301, 341, 399, 335, 0, 290, 0, 0,
	390, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 218, 186,
	326, 391, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 230, 274, 237, 229,
	407, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 315, 0, 0, 0, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 282, 182,
	198, 0, 0, 325, 364, 370, 0, 0, 0, 221,
	0, 368, 339, 424, 205, 248, 361, 344, 366, 0,
	0, 367, 291, 412, 356, 422, 440, 441, 228, 319,
	430, 403, 436, 452, 199, 225, 333, 396, 427, 387,
	312, 408, 409, 281, 386, 256, 185, 289, 446, 197,
	376, 213, 190, 398, 420, 210, 379, 0, 0, 454,
	192, 418, 395, 308, 278, 279, 191, 0, 360, 233,
	254, 223, 328, 415, 416, 222, 455, 201, 435, 194,
	0, 434, 321, 411, 419, 309, 300, 193, 417, 307,
	299, 284, 244, 265, 354, 294, 355, 266, 317, 316,
	318, 0, 188, 0, 392, 428, 456, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 287, 332,
	353, 351, 357, 0, 406, 423, 431, 438, 444, 445,
	447, 448, 449, 450, 451, 320, 268, 388, 283, 292,
	0, 0, 338, 369, 211, 426, 389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 288,
	0, 358, 251, 453, 433, 429, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 271, 272, 275, 280, 297, 302, 303, 304,
	305, 322, 323, 324, 327, 330, 331, 334, 336, 337,
	340, 346, 347, 348, 349, 350, 352, 359, 363, 371,
	372, 373, 374, 375, 377, 378, 382, 383, 384, 385,
	393, 397, 413, 414, 425, 437, 442, 260, 421, 443,
	0, 296, 0, 0, 298, 245, 263, 273, 0, 432,
	394, 200, 365, 252, 189, 217, 203, 224, 239, 242,
	277, 306, 313, 342, 345, 257, 236, 215, 362, 212,
	380, 400, 401, 402, 404, 310, 231, 405, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 329,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 286, 232, 0, 0, 343, 0, 187,
	0, 381, 220, 295, 293, 410, 246, 238, 234, 219,
	270, 301, 341, 399, 335, 0, 290, 0, 0, 390,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 218, 186, 326,
	391, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	974, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 230, 274, 237, 229, 407,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 315, 0, 0, 0, 0, 439, 0, 0,
	0, 0, 0, 0, 0, 285, 0, 282, 182, 198,
	0, 0, 325, 364, 370, 0, 0, 0, 221, 0,
	368, 339, 424, 205, 248, 361, 344, 366, 0, 0,
	367, 291, 412, 356, 422, 440, 441, 228, 319, 430,
	403, 436, 452, 199, 225, 333, 396, 427, 387, 312,
	408, 409, 281, 386, 256, 185, 289, 446, 197, 376,
	213, 190, 398, 420, 210, 379, 0, 0, 454, 192,
	418, 395, 308, 278, 279, 191, 0, 360, 233, 254,
	223, 328, 415, 416, 222, 455, 201, 435, 194, 0,
	434, 321, 411, 419, 309, 300, 193, 417, 307, 299,
	284, 244, 265, 354, 294, 355, 266, 317, 316, 318,
	0, 188, 0, 392, 428, 456, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 287, 332, 353,
	351, 357, 0, 406, 423, 431, 438, 444, 445, 447,
	448, 449, 450, 451, 320, 268, 388, 283, 292, 0,
	0, 338, 369, 211, 426, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 288, 0,
	358, 251, 453, 433, 429, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 311,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 271, 272, 275, 280, 297, 302, 303, 304, 305,
	322, 323, 324, 327, 330, 331, 334, 336, 337, 340,
	346, 347, 348, 349, 350, 352, 359, 363, 371, 372,
	373, 374, 375, 377, 378, 382, 383, 384, 385, 393,
	397, 413, 414, 425, 437, 442, 260, 421, 443, 0,
	296, 0, 0, 298, 245, 263, 273, 0, 432, 394,
	200, 365, 252, 189, 217, 203, 224, 239, 242, 277,
	306, 313, 342, 345, 257, 236, 215, 362, 212, 380,
	400, 401, 402, 404, 310, 231, 405, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 329, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 286, 232, 0, 0, 343, 0, 187, 0,
	381, 220, 295, 293, 410, 246, 238, 234, 219, 270,
	301, 341, 399, 335, 0, 290, 0, 0, 390, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 218, 186, 326, 391,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 230, 274, 237, 229, 407, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 315, 0, 0, 0, 0, 439, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 282, 182, 198, 0,
	0, 325, 364, 370, 0, 0, 0, 221, 0, 368,
	339, 424, 205, 248, 361, 344, 366, 0, 0, 367,
	291, 412, 356, 422, 440, 441, 228, 319, 430, 403,
	436, 452, 199, 225, 333, 396, 427, 387, 312, 408,
	409, 281, 386, 256, 185, 289, 446, 197, 376, 213,
	190, 398, 420, 210, 379, 0, 0, 454, 192, 418,
	395, 308, 278, 279, 191, 0, 360, 233, 254, 223,
	328, 415, 416, 222, 455, 201, 435, 194, 0, 434,
	321, 411, 419, 309, 300, 193, 417, 307, 299, 284,
	244, 265, 354, 294, 355, 266, 317, 316, 318, 0,
	188, 0, 392, 428, 456, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 287, 332, 353, 351,
	357, 0, 406, 423, 431, 438, 444, 445, 447, 448,
	449, 450, 451, 320, 268, 388, 283, 292, 0, 0,
	338, 369, 211, 426, 389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 288, 0, 358,
	251, 453, 433, 429, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 311, 0,
	0, 0, 0, 0, 0, 612, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	271, 272, 275, 280, 297, 302, 303, 304, 305, 322,
	323, 324, 327, 330, 331, 334, 336, 337, 340, 346,
	347, 348, 349, 350, 352, 359, 363, 371, 372, 373,
	374, 375, 377, 378, 382, 383, 384, 385, 393, 397,
	413, 414, 425, 437, 442, 260, 421, 443, 0, 296,
	0, 0, 298, 245, 263, 273, 0, 432, 394, 200,
	365, 252, 189, 217, 203, 224, 239, 242, 277, 306,
	313, 342, 345, 257, 236, 215, 362, 212, 380, 400,
	401, 402, 404, 310, 231, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 329, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 286, 232, 0, 0, 343, 0, 187, 0, 381,
	220, 295, 293, 410, 246, 238, 234, 219, 270, 301,
	341, 399, 335, 0, 290, 0, 0, 390, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 218, 186, 326, 391, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 230, 274, 237, 229, 407, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 512, 0, 258, 0,
	315, 0, 0, 0, 0, 439, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 282, 182, 198, 0, 0,
	325, 364, 370, 0, 0, 0, 221, 0, 368, 339,
	424, 205, 248, 361, 344, 366, 0, 0, 367, 291,
	412, 356, 422, 440, 441, 228, 319, 430, 403, 436,
	452, 199, 225, 333, 396, 427, 387, 312, 408, 409,
	281, 386, 256, 185, 289, 446, 197, 376, 213, 190,
	398, 420, 210, 379, 0, 0, 454, 192, 418, 395,
	308, 278, 279, 191, 0, 360, 233, 254, 223, 328,
	415, 416, 222, 455, 201, 435, 194, 0, 434, 321,
	411, 419, 309, 300, 193, 417, 307, 299, 284, 244,
	265, 354, 294, 355, 266, 317, 316, 318, 0, 188,
	0, 392, 428, 456, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 287, 332, 353, 351, 357,
	0, 406, 423, 431, 438, 444, 445, 447, 448, 449,
	450, 451, 320, 268, 388, 283, 292, 0, 0, 338,
	369, 211, 426, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 288, 0, 358, 251,
	453, 433, 429, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 271,
	272, 275, 280, 297, 302, 303, 304, 305, 322, 323,
	324, 327, 330, 331, 334, 336, 337, 340, 346, 347,
	348, 349, 350, 352, 359, 363, 371, 372, 373, 374,
	375, 377, 378, 382, 383, 384, 385, 393, 397, 413,
	414, 425, 437, 442, 511, 421, 443, 0, 296, 0,
	0, 298, 245, 263, 273, 0, 432, 394, 200, 365,
	252, 189, 217, 203, 224, 239, 242, 277, 306, 313,
	342, 345, 257, 236, 215, 362, 212, 380, 400, 401,
	402, 404, 310, 231, 405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 329, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	286, 232, 0, 0, 343, 0, 187, 0, 381, 220,
	295, 293, 410, 246, 238, 234, 219, 270, 301, 341,
	399, 335, 0, 290, 0, 0, 390, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 218, 186, 326, 391, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 230, 274, 237, 229, 407, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 315,
	0, 0, 459, 0, 439, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 282, 182, 198, 0, 0, 325,
	364, 370, 0, 0, 0, 221, 0, 368, 339, 424,
	205, 248, 361, 344, 366, 0, 0, 367, 291, 412,
	356, 422, 440, 441, 228, 319, 430, 403, 436, 452,
	199, 225, 333, 396, 427, 387, 312, 408, 409, 281,
	386, 256, 185, 289, 446, 197, 376, 213, 190, 398,
	420, 210, 379, 0, 0, 454, 192, 418, 395, 308,
	278, 279, 191, 0, 360, 233, 254, 223, 328, 415,
	416, 222, 455, 201, 435, 194, 0, 434, 321, 411,
	419, 309, 300, 193, 417, 307, 299, 284, 244, 265,
	354, 294, 355, 266, 317, 316, 318, 0, 188, 0,
	392, 428, 456, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 287, 332, 353, 351, 357, 0,
	406, 423, 431, 438, 444, 445, 447, 448, 449, 450,
	451, 320, 268, 388, 283, 292, 0, 0, 338, 369,
	211, 426, 389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 288, 0, 358, 251, 453,
	433, 429, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 311, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 271, 272,
	275, 280, 297, 302, 303, 304, 305, 322, 323, 324,
	327, 330, 331, 334, 336, 337, 340, 346, 347, 348,
	349, 350, 352, 359, 363, 371, 372, 373, 374, 375,
	377, 378, 382, 383, 384, 385, 393, 397, 413, 414,
	425, 437, 442, 260, 421, 443, 0, 296, 0, 0,
	298, 245, 263, 273, 0, 432, 394, 200, 365, 252,
	189, 217, 203, 224, 239, 242, 277, 306, 313, 342,
	345, 257, 236, 215, 362, 212, 380, 400, 401, 402,
	404, 310, 231, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 329, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 286,
	232, 0, 0, 343, 0, 187, 0, 381, 220, 295,
	293, 410, 246, 238, 234, 219, 270, 301, 341, 399,
	335, 0, 290, 0, 0, 390, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 218, 186, 326, 391, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 230, 274, 237, 229, 407, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 315, 0,
	0, 0, 0, 439, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 282, 182, 198, 0, 0, 325, 364,
	370, 0, 0, 0, 221, 0, 368, 339, 424, 205,
	248, 361, 344, 366, 0, 0, 367, 291, 412, 356,
	422, 440, 441, 228, 319, 430, 403, 436, 452, 199,
	225, 333, 396, 427, 387, 312, 408, 409, 281, 386,
	256, 185, 289, 446, 197, 376, 213, 190, 398, 420,
	210, 379, 0, 0, 454, 192, 418, 395, 308, 278,
	279, 191, 0, 360, 233, 254, 223, 328, 415, 416,
	222, 455, 201, 435, 194, 0, 434, 321, 411, 419,
	309, 300, 193, 417, 307, 299, 284, 244, 265, 354,
	294, 355, 266, 317, 316, 318, 0, 188, 0, 392,
	428, 456, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 287, 332, 353, 351, 357, 0, 406,
	423, 431, 438, 444, 445, 447, 448, 449, 450, 451,
	320, 268, 388, 283, 292, 0, 0, 338, 369, 211,
	426, 389, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 288, 0, 358, 251, 453, 433,
	429, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 271, 272, 275,
	280, 297, 302, 303, 304, 305, 322, 323, 324, 327,
	330, 331, 334, 336, 337, 340, 346, 347, 348, 349,
	350, 352, 359, 363, 371, 372, 373, 374, 375, 377,
	378, 382, 383, 384, 385, 393, 397, 413, 414, 425,
	437, 442, 260, 421, 443, 0, 296, 0, 0, 298,
	245, 263, 273, 0, 432, 394, 200, 365, 252, 189,
	217, 203, 224, 239, 242, 277, 306, 313, 342, 345,
	257, 236, 215, 362, 212, 380, 400, 401, 402, 404,
	310, 231, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 154, 0, 0,
	0, 0, 1235, 1236, 145, 144, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 1237, 147, 0, 1234, 0, 141, 142,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 143, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 0, 0, 0, 0, 0, 167, 168, 169, 170,
}

var yyPact = [...]int{
	4518, -1000, -317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1677, 1711, -1000, -1000, -1000, -1000, 1790,
	-1000, 599, 1458, -1000, 1663, 4460, -1000, 28566, 430, -1000,
	28087, 419, 2485, 28566, -1000, 140, -1000, 126, 28566, 136,
	27608, -1000, -1000, -248, 12278, 1606, 4, 1, 28566, -1000,
	1777, 1489, -1000, 212, -1000, -1000, -1000, -1000, -1000, -1000,
	27129, -1000, -1000, -1000, 1674, 1680, 1799, 539, 1614, -1000,
	1721, 1489, -1000, 12278, 1755, 1712, 11799, -1000, 11799, 375,
	-1000, -1000, 8924, -1000, -1000, 15633, 28566, 28566, 211, -1000,
	1663, -1000, -1000, 256, -1000, 258, 1415, -1000, 1412, -1000,
	626, 485, 286, 357, 353, 285, 281, 278, 277, 275,
	268, 260, 259, 291, -1000, 561, 561, -143, -147, 2271,
	370, 370, 370, 392, 1627, 1626, -1000, 579, -1000, 561,
	561, 238, 561, 561, 561, 561, 234, 232, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 224, 1663, 223, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 28566, 214, 28566,
	-1000, 503, 28566, 705, 705, 66, 705, 705, 705, 705,
	125, 524, -2, -1000, 123, 204, 87, 209, 715, 203,
	105, -1000, -1000, 199, 715, 1096, 486, 93, -1000, 705,
	7000, 7000, 7000, -1000, 1653, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 391, -1000, -1000, -1000, -1000, 28566, 26650,
	213, 613, -1000, -1000, -1000, 17, -1000, -1000, 1201, 683,
	12278, 902, -1000, 2196, 509, -1000, -1000, -1000, -1000, -1000,
	463, 12757, 12757, 12757, 12757, -1000, -1000, 1266, 1266, 1266,
	1266, 12757, 1266, 12757, 1266, 1266, 1266, 1266, 12278, 1266,
	1266, 1266, -1000, 1266, 1266, 1266, 1266, 1266, 1266, 501,
	1266, 1266, 1266, 1266, 1266, -1000, -1000, -1000, -1000, 1266,
	1266, 1266, 1266, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1089, 1075, 1049, 1015, -1000, -1000, 10362, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 28566, -1000, 1266, 152, 1721,
	1489, -1000, 1777, 1732, 212, -1000, 2006, 1242, 1267, 1102,
	1489, 1401, 28566, -1000, 1414, -1000, -1000, -1000, 1556, 1034,
	1094, -1000, -1000, -1000, -1000, 1000, 12278, -1000, -1000, 1786,
	-1000, 13715, 487, 768, 1783, 26171, -1000, 375, 375, 1410,
	8443, -38, -1000, -1000, -1000, 596, 17549, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1653, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1379, 28566, -1000, -1000, 3514, 999, -1000, 1455, -1000, 1376,
	-1000, 1424, 1467, 418, 999, 411, 409, 406, -1000, -99,
	-1000, -1000, -1000, -1000, -1000, 561, 561, 290, 4460, 29047,
	-1000, -1000, -1000, 25692, 1454, 999, -1000, 1450, -1000, 712,
	440, 462, 462, 999, -1000, -1000, 28566, 999, 711, 698,
	28566, 28566, -1000, 25213, -1000, 24734, 24255, 928, 28566, 23776,
	23297, 22818, 22339, 21860, -1000, 1522, -1000, 1486, -1000, -1000,
	-1000, 28566, 28566, 28566, 236, -1000, -1000, 28566, 999, -1000,
	-1000, 924, 923, 561, 561, 917, 1091, 1087, 1083, 561,
	561, 914, 1078, 19465, 220, 910, 906, 895, 957, 1077,
	178, 889, 867, 882, 28566, 1446, 28566, -1000, 194, 585,
	294, 563, 1663, 1605, 1407, 389, 417, 999, 350, 350,
	-1000, 7481, -1000, -1000, 1072, 12278, -1000, 723, 715, 715,
	-1000, -1000, -1000, -1000, -1000, -1000, 705, 28566, 723, -1000,
	-1000, -1000, 715, 705, 28566, 705, 705, 705, 705, 715,
	715, 715, 705, 28566, 28566, 28566, 28566, 28566, 28566, 28566,
	28566, 28566, 7000, 7000, 7000, 486, 705, -256, -1000, 1067,
	-1000, 1506, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	127, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-82, 1403, 21381, -1000, -257, -265, -267, -271, -1000, -1000,
	-1000, -275, -277, -1000, -1000, -1000, 12278, 12278, 12278, 12278,
	-1000, 808, 12757, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	783, 659, 12757, 12757, 12757, 12757, 12757, 12757, 12757, 12757,
	12757, 12757, 12757, 12757, 12757, 12757, 12757, 658, 1064, 1057,
	509, 509, 509, 509, -1000, 11799, 12278, 12278, 509, -1000,
	999, 20902, 11799, 11799, 12278, 1660, 640, 683, 28566, -1000,
	1102, -1000, -1000, -1000, 801, -1000, 28566, 28566, 9403, 7481,
	11799, 11799, 11799, 11799, 11799, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1303, 1270, 1372, -1000, 1402,
	-1000, -135, 15154, 12278, 1051, -1000, -1000, -1000, 1721, -1000,
	1721, 1303, 1681, 1562, 11799, -1000, -1000, 1681, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1193, -1000, 28566, 1401,
	1705, 28566, 1553, 1047, 236, -1000, 12278, 12278, 1400, -1000,
	1071, 28566, -1000, -1000, 20423, -1000, -1000, 6519, -1000, 28566,
	255, 28566, -1000, 18986, 19944, 7962, -38, -1000, 7962, 1293,
	-1000, -22, -43, 9882, 516, -1000, -1000, -1000, 2271, 13236,
	1169, 1619, 55, -1000, -1000, -1000, 1424, -1000, 1424, 1424,
	1424, 1424, 236, 236, 236, 236, -1000, -1000, -1000, -1000,
	-1000, 1442, 1433, -1000, 1424, 1424, 1424, 1424, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1431, 1431, 1431, 1425, 1425,
	359, -1000, 12278, 201, 28566, 1687, 833, 194, 373, 1473,
	999, 999, 999, 373, -1000, 1196, 1186, -1000, 1399, -1000,
	-1000, 1746, -1000, -1000, 691, 736, 730, 586, 28566, 163,
	244, -1000, 345, -1000, 28566, 999, 690, 462, 999, -1000,
	999, -1000, -1000, -1000, -1000, 484, -1000, -1000, 999, 1382,
	-1000, 1404, 794, 727, 753, 721, 1382, -1000, -1000, -120,
	1382, -1000, 1382, -1000, 1382, -1000, 1382, -1000, 1382, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 584, 28566, 163,
	658, -1000, 385, -1000, -1000, 658, 658, -1000, -1000, -1000,
	-1000, 1036, 1033, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-316, 28566, -1000, 185, 562, 242, 265, 239, 28566, 169,
	1684, 221, 215, 28566, 28566, 350, 1505, 28566, 1683, 28566,
	-1000, -1000, -1000, -1000, 683, 28566, -1000, -1000, 705, 705,
	-1000, -1000, 28566, 705, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 705, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	28566, 28566, -1000, -1000, -1000, -1000, -1000, 58, -28, 206,
	-1000, -1000, -1000, -1000, -1000, 1710, -1000, 683, 654, 650,
	-1000, -1000, -1000, 922, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 783, 12757, 12757, 12757, 1413, 369, 1856, 1265, 1330,
	792, 792, 672, 672, 520, 520, 520, 520, 520, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1319, -1000, 847, 930,
	1102, -1000, 1319, 1319, 799, 11799, -1000, -1000, 652, -1000,
	12278, 1102, -1000, -1000, 1102, 1353, 1335, 1102, 11799, 11799,
	1299, 1266, 482, -1000, 1319, 1102, 1102, 1319, 1319, 1102,
	-1000, 28566, -1000, -247, -1000, -74, 502, 1266, -1000, 19465,
	1102, 1201, -1000, -1000, -1000, -1000, -1000, 17070, 1438, 1681,
	-1000, -1000, 1266, 1364, -1000, -1000, 236, 22, 701, 683,
	683, 12278, -1000, -1000, -1000, -1000, -1000, -1000, 478, 1766,
	298, 1266, -1000, 1263, 1607, -1000, -1000, -1000, 1703, 14675,
	28566, 1384, 1236, -1000, 473, -1000, 1293, -38, -32, -1000,
	-1000, -1000, -1000, 683, -1000, 1043, -1000, 731, -1000, 348,
	-1000, -1000, -1000, -1000, 678, 1702, 1616, 27, -1000, -1000,
	-1000, 236, 236, -1000, -1000, -1000, -1000, -1000, -1000, 1027,
	1027, -1000, -1000, -1000, -1000, -1000, 829, -1000, -1000, -1000,
	821, -1000, -1000, 1007, 1516, 201, -1000, -1000, 561, 1026,
	1621, 28566, -1000, -1000, 1165, 185, 28566, 648, 1504, -1000,
	1473, 1473, 1473, 28566, -1000, -1000, -1000, -1000, 2421, 28566,
	1361, -1000, 161, -1000, 1153, 28566, -1000, 1356, 1429, 999,
	999, -1000, -1000, 7481, -1000, 28566, 1266, -1000, -1000, -1000,
	-1000, 416, 1656, 1655, 163, 161, 516, 999, -1000, -1000,
	-1000, -1000, -1000, -319, 1351, 399, 171, 195, 28566, 28566,
	28566, 28566, 28566, 446, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 205, 378, -1000, 28566, 28566, 422, -1000, -1000, -1000,
	715, -1000, -1000, 715, -1000, -1000, -1000, -1000, -1000, 1645,
	28566, -31, -292, -1000, -286, -1000, -1000, -1000, -1000, 1279,
	329, 1856, 12757, 12757, 11799, -113, 324, 324, 658, -1000,
	-1000, -1000, 12278, 12278, 1259, 629, -1000, 12278, 767, -1000,
	-1000, 12278, 12278, -1000, 1319, 1319, 11799, 7481, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 404, 403, 401,
	28566, -1000, -1000, 1720, -1000, 1576, 1574, 1774, 1766, -1000,
	18986, 1681, -1000, -1000, 28566, -241, -1000, 1600, 1582, -1000,
	-1000, -1000, -1000, 6038, 1721, 12278, 1502, 28566, 1266, -1000,
	14195, 28566, 28566, 18986, 18986, 18986, 18986, 18986, -1000, 1536,
	1527, -1000, 1524, 1517, 1539, 28566, -1000, 1317, 1102, 1732,
	14675, 255, 1383, 18986, -1000, -1000, 18986, 28566, 5557, -1000,
	-1000, -47, -54, -1000, -1000, -1000, 2271, -1000, -1000, -1000,
	-1000, 756, 344, 1796, -1000, 1009, -1000, 1020, -1000, 679,
	674, -1000, 28566, 1428, -1000, -1000, -1000, -1000, -1000, 1309,
	-1000, 1301, 1289, 1281, 86, -1000, 1466, 1636, 561, 561,
	-1000, 814, -1000, 999, -1000, -1000, 396, -1000, 1682, 28566,
	1501, 1500, 1499, -1000, 1741, 1247, 28566, -1000, -1000, 28566,
	-1000, 1570, 201, 28566, -1000, -1000, -1000, -1000, 244, 28566,
	-1000, 1223, 161, -1000, -1000, -1000, -1000, -1000, -1000, 28566,
	181, -1000, 1427, 1063, -1000, 1430, -1000, -1000, -1000, -1000,
	131, 216, -1000, 28566, 414, 1516, 28566, -1000, -1000, -1000,
	705, 705, -1000, -1000, 1632, -1000, 999, 12757, 12757, -1000,
	509, -1000, 1266, 1102, 1424, 1424, -1000, 1424, 1425, -1000,
	1424, 106, 1424, 97, 1102, 1102, 806, 813, -108, -1000,
	683, 12278, 934, 909, -1000, -1000, 1102, -1000, 1266, 1266,
	1266, 1269, 28566, -1000, -1000, -1000, -1000, 1766, 1760, 1285,
	-1000, -1000, 22, 274, -1000, 1587, 1582, -1000, 1740, 1595,
	1739, -1000, -1000, -1000, 683, -1000, 1670, 1156, -1000, 560,
	1184, -1000, -1000, 11320, 1274, 1568, 470, 1269, 1386, 1607,
	1494, 1496, 1453, -1000, -1000, -1000, -1000, 1523, -1000, 1521,
	-1000, -1000, 1414, -1000, -1000, 1270, 1766, 18986, 1211, 1211,
	-1000, 469, -1000, -1000, -1000, -1000, -1000, -1000, 12278, -1000,
	-1000, -1000, -1000, -1000, -1000, 878, 878, 18, -1000, -1000,
	-1000, -1000, -1000, 1423, 12278, 236, 1008, 236, 812, -1000,
	797, -1000, -1000, -187, -1000, -1000, 1422, 1513, -1000, -1000,
	28566, -1000, -1000, 28566, 28566, 28566, 28566, -1000, -1000, 248,
	-1000, 1245, 1225, -1000, -145, -1000, 12278, -1000, 1414, -1000,
	-1000, -1000, 1120, -1000, -126, 999, 28566, 28566, 28566, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 509, 12757,
	-1000, -1000, 314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12278, -1000, 12278, -1000, 1721, 970, 683, 12278, 12278,
	-1000, 16591, 18507, 18507, 16112, -1000, 1760, 1758, 1738, 1586,
	1584, 1584, 1587, -1000, 1736, 1735, -1000, 966, 1730, 963,
	666, -1000, 28566, 12278, 1266, -1000, 222, 28566, 1266, 28566,
	-1000, 1733, -1000, -1000, 12278, 1421, -1000, 12278, -1000, -1000,
	-1000, -1000, -1000, 1733, 1211, -1000, -1000, 526, 740, -1000,
	-1000, -1000, 28566, 879, -1000, -1000, -1000, 1108, 1105, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1414, -1000, -1000,
	-1000, 1247, 218, 306, -1000, 244, -1000, -151, -152, 740,
	1699, -1000, -1000, 7481, -1000, -1000, 1268, 1461, -1000, 191,
	-1000, -1000, 740, 740, 1102, -1000, 740, 740, 1219, -1000,
	-1000, -1000, 1219, 1219, 502, 1758, -1000, 12278, 12278, 1583,
	903, -1000, -1000, -1000, -1000, 955, 954, -1000, 950, -1000,
	1795, -1000, 683, -1000, 1266, -1000, 428, 1184, -1000, 1721,
	683, 28566, 683, 1721, -1000, -1000, 1215, -1000, -1000, -1000,
	1691, 1266, -1000, -1000, -1000, -1000, -1000, 212, 1239, -1000,
	557, 28566, 28566, 1102, 170, -131, -1000, -1000, -1000, -1000,
	-1000, 18028, -1000, -1000, -1000, -1000, -1000, 683, 1201, -1000,
	825, -1000, -1000, -1000, -1000, -1000, 28566, 1184, 28566, -1000,
	1182, -1000, 1479, 1060, 212, 10841, -121, 7481, 5076, 1178,
	-1000, -1000, 1552, -118, -137, -1000, -1000, -1000, -1000, 1173,
	-1000, -1000, 1476, -1000, 1781, -1000, -1000, -1000, 747, 810,
	-1000, -1000, -1000, -121, 740, 1102, -1000, -24, -1000, -1000,
	-1000, -1000, -1000, 1430, -1000, 1548, -1000, -1000, 1794, 494,
	494, -1000, -1000, -1000, -1000, -1000, 349, -1000, -1000, -126,
	-128, -1000, -1000, -1000, 333, 893, -1000, 190, -1000, -133,
	-1000, -1000, -1000, -1000, -138, -1000,
}

var yyPgo = [...]int{
	0, 2102, 22, 72, 153, 18, 183, 75, 2101, 2100,
	2099, 2098, 164, 157, 154, 2097, 2096, 2091, 2090, 2086,
	2085, 2084, 2083, 2082, 2081, 162, 137, 148, 2080, 2079,
	2078, 85, 141, 60, 63, 143, 2077, 2076, 44, 2075,
	2074, 2072, 175, 173, 606, 2070, 144, 84, 2066, 2065,
	2064, 2063, 2060, 2055, 2054, 2053, 2052, 2050, 2048, 2047,
	2046, 2044, 274, 2043, 2039, 4, 2033, 49, 2032, 2030,
	2029, 2026, 2025, 115, 2023, 2022, 2021, 150, 2019, 2018,
	200, 90, 80, 2017, 2016, 77, 155, 2015, 97, 123,
	2014, 2012, 455, 2009, 56, 52, 1994, 46, 65, 45,
	34, 1993, 1992, 1991, 62, 43, 1989, 78, 36, 1987,
	92, 73, 1986, 40, 1982, 1981, 86, 1980, 1979, 1978,
	76, 1976, 1974, 2379, 1973, 64, 129, 15, 21, 1971,
	1970, 1969, 1963, 1962, 30, 1957, 1956, 1954, 113, 6,
	1950, 11, 10, 27, 104, 1948, 39, 50, 1947, 112,
	1946, 1944, 26, 12, 19, 1943, 16, 110, 121, 35,
	70, 125, 1940, 1938, 31, 41, 1937, 1936, 1935, 1931,
	1929, 1921, 38, 1920, 29, 1912, 156, 1909, 8, 13,
	55, 67, 138, 37, 7, 1908, 131, 1906, 24, 133,
	101, 134, 1905, 1904, 1903, 147, 171, 1902, 1901, 74,
	139, 116, 122, 1898, 185, 1896, 1895, 91, 1336, 2801,
	17, 135, 1894, 1893, 2354, 99, 111, 32, 1892, 161,
	1891, 1886, 1885, 152, 136, 79, 872, 82, 1883, 1882,
	1881, 1879, 1878, 1877, 1876, 47, 168, 33, 83, 126,
	42, 1875, 1874, 1873, 93, 68, 1872, 132, 128, 95,
	124, 1871, 145, 130, 89, 1867, 98, 1866, 1864, 1861,
	1858, 66, 1857, 1844, 1843, 1842, 127, 119, 109, 57,
	1837, 58, 88, 118, 117, 1831, 9, 142, 14, 1830,
	1, 0, 1826, 3, 140, 181, 151, 1825, 1824, 2,
	1822, 5, 1821, 1818, 102, 1817, 1815, 1814, 25, 28,
	20, 1812, 1811, 158, 2400, 100, 1810, 180,
}

//line sql.y:5623
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 301, 302, 302, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 281, 281, 281, 284, 284,
	23, 57, 25, 25, 24, 24, 27, 27, 26, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 5, 5, 5, 5, 7,
	7, 7, 7, 7, 10, 11, 6, 6, 12, 12,
	69, 69, 13, 14, 14, 14, 14, 305, 305, 118,
	118, 116, 116, 117, 117, 181, 181, 15, 16, 16,
	191, 191, 190, 190, 190, 192, 192, 192, 192, 226,
	226, 17, 17, 17, 17, 17, 78, 78, 283, 283,
	282, 280, 280, 279, 279, 278, 29, 30, 39, 39,
	39, 39, 40, 41, 285, 285, 257, 45, 45, 44,
	44, 44, 44, 46, 46, 43, 43, 42, 42, 259,
	259, 246, 246, 258, 258, 258, 258, 258, 258, 258,
	245, 245, 91, 91, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 297, 297, 163, 163, 163,
	163, 163, 163, 96, 96, 104, 104, 104, 104, 94,
	94, 95, 93, 93, 93, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 103, 103, 100, 100, 101, 101,
	101, 101, 101, 101, 298, 298, 298, 298, 228, 228,
	228, 228, 231, 231, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 230, 230, 230, 230, 230, 232, 232,
	232, 232, 232, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 234, 234,
	234, 234, 234, 234, 234, 234, 244, 244, 235, 235,
	239, 239, 240, 240, 240, 241, 241, 241, 242, 242,
	237, 237, 237, 237, 238, 238, 238, 247, 271, 271,
	270, 270, 268, 268, 268, 268, 256, 256, 265, 265,
	265, 265, 265, 255, 255, 251, 251, 251, 252, 252,
	253, 253, 250, 250, 254, 254, 267, 267, 266, 248,
	248, 249, 249, 273, 299, 299, 299, 299, 300, 300,
	274, 290, 291, 289, 289, 289, 289, 289, 67, 67,
	67, 203, 203, 203, 263, 263, 262, 262, 262, 264,
	264, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	261, 261, 261, 261, 261, 261, 261, 261, 261, 198,
	198, 198, 288, 288, 288, 288, 288, 288, 287, 287,
	287, 260, 260, 260, 286, 286, 47, 47, 147, 147,
	36, 36, 36, 36, 36, 36, 35, 35, 35, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 31, 37, 37, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 18, 18, 18, 18, 18, 18, 18, 18,
	18, 18, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 243, 243, 243, 275, 275, 276,
	276, 19, 28, 28, 20, 20, 20, 20, 21, 21,
	48, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 49,
	49, 49, 49, 49, 49, 49, 49, 49, 49, 292,
	292, 197, 197, 205, 205, 196, 196, 219, 219, 219,
	199, 199, 199, 200, 200, 296, 296, 296, 50, 50,
	52, 52, 53, 54, 54, 221, 221, 222, 222, 55,
	56, 68, 68, 68, 68, 68, 68, 70, 70, 70,
	9, 9, 9, 9, 64, 64, 64, 8, 8, 51,
	51, 58, 293, 293, 294, 295, 295, 295, 295, 59,
	61, 22, 22, 22, 22, 22, 22, 84, 84, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 79, 79, 79, 74, 74, 306, 62, 63, 63,
	77, 77, 77, 71, 71, 71, 76, 76, 76, 81,
	81, 83, 83, 83, 83, 83, 85, 85, 85, 85,
	85, 85, 85, 80, 80, 82, 82, 82, 82, 212,
	212, 212, 211, 211, 107, 107, 109, 108, 108, 110,
	110, 111, 111, 111, 145, 126, 126, 179, 179, 178,
	178, 180, 180, 180, 180, 182, 182, 112, 112, 112,
	112, 113, 113, 114, 114, 115, 115, 220, 220, 217,
	217, 217, 216, 216, 119, 119, 119, 121, 120, 120,
	120, 120, 122, 122, 124, 124, 123, 123, 125, 127,
	127, 127, 127, 127, 128, 128, 92, 92, 92, 92,
	92, 92, 102, 102, 102, 102, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 98, 98, 98, 98, 98, 98, 98,
	98, 98, 98, 194, 194, 129, 129, 137, 137, 137,
	137, 130, 130, 130, 130, 130, 130, 130, 138, 138,
	138, 144, 139, 139, 135, 135, 135, 135, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 134, 134,
	134, 134, 134, 134, 134, 307, 307, 236, 236, 236,
	136, 136, 136, 136, 136, 75, 75, 75, 75, 75,
	225, 225, 225, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 150, 150, 72, 72,
	148, 148, 149, 151, 151, 146, 146, 146, 132, 132,
	132, 152, 152, 153, 153, 154, 154, 156, 155, 155,
	157, 158, 158, 158, 159, 159, 160, 160, 160, 38,
	38, 38, 38, 38, 33, 33, 33, 33, 34, 34,
	34, 86, 86, 86, 86, 88, 88, 87, 87, 65,
	65, 66, 66, 66, 89, 89, 90, 90, 90, 90,
	176, 176, 161, 161, 161, 168, 168, 168, 164, 164,
	166, 166, 166, 167, 167, 167, 165, 173, 173, 175,
	175, 174, 174, 170, 170, 171, 171, 172, 172, 172,
	169, 169, 131, 131, 131, 131, 131, 177, 177, 177,
	177, 183, 183, 141, 141, 143, 143, 142, 106, 184,
	184, 188, 185, 185, 189, 189, 189, 189, 189, 186,
	186, 187, 187, 213, 213, 213, 193, 193, 204, 204,
	201, 201, 202, 202, 195, 195, 206, 206, 206, 60,
	140, 140, 272, 272, 269, 209, 209, 210, 210, 214,
	214, 218, 218, 215, 215, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 207, 207, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 208, 208, 208, 208, 208, 208, 208, 303,
	304, 223, 224, 224, 224,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 4, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 1, 3, 1,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 2, 2, 2, 0, 2, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 3, 0, 1, 4, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 7, 5, 6, 6, 7, 0, 1,
	5, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	1, 0, 1, 2, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 4, 4, 3, 3, 3, 3, 4,
	4, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 8, 6, 5,
	5, 2, 2, 2, 2, 3, 3, 3, 4, 1,
	3, 5, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 4, 4, 2, 11, 3, 6,
	8, 6, 6, 6, 13, 8, 6, 10, 5, 5,
	5, 5, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 8,
	8, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 2, 4, 5, 4, 4, 4, 4, 4,
	3, 3, 3, 5, 2, 3, 3, 3, 3, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 1, 2, 1, 3, 1,
	1, 1, 4, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 5, 5, 6, 4, 4,
	8, 6, 8, 6, 8, 5, 4, 2, 2, 1,
	2, 2, 2, 8, 8, 0, 2, 0, 2, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -301, -1, -5, -10, -11, -12, -13, -14, -15,
	-16, -17, -18, -19, -20, -21, -48, -49, -50, -52,
	-53, -54, -55, -56, -8, -51, -22, -23, -57, -58,
	-59, -60, -61, -3, -2, -7, 7, 8, -69, -24,
	30, -29, -39, 164, -40, -30, 165, -41, 167, 166,
	202, 168, 195, 72, 241, 242, 244, 245, 246, 247,
	-70, 200, 201, 170, 34, 43, 31, 32, 35, 173,
	-4, -25, 6, -303, 9, 346, 197, 196, 26, -6,
	359, 83, -302, 486, -176, -161, 20, 31, 27, -160,
	-156, -77, -161, 18, 16, 5, -62, -306, -62, -62,
	10, 11, -62, -257, -259, 83, 138, 83, -62, -45,
	-44, -43, -42, -46, 29, -36, -37, -277, -35, -32,
	169, 166, 210, 105, 106, 202, 203, 204, 168, 186,
	201, 205, 200, 219, -31, 78, 31, 359, 362, -264,
	165, 171, 172, 347, 108, 107, 73, 167, -261, 291,
	463, -46, 465, 98, 100, 464, 42, 176, 466, 467,
	468, 469, 185, 470, 471, 472, 473, 479, 480, 481,
	482, 109, 5, -62, -218, -214, -281, -208, 86, 87,
	88, 356, 188, 390, 391, 235, 78, 39, 291, 463,
	241, 255, 249, 276, 268, 357, 392, 238, 189, 223,
	460, 266, 114, 465, 393, 203, 296, 297, 298, 98,
	244, 333, 478, 240, 394, 476, 100, 464, 77, 49,
	42, 198, 264, 260, 466, 224, 395, 367, 217, 108,
	105, 485, 34, 258, 48, 28, 475, 107, 47, 467,
	129, 396, 468, 300, 281, 454, 46, 301, 204, 397,
	81, 361, 462, 302, 259, 303, 234, 474, 170, 398,
	446, 304, 305, 455, 399, 282, 286, 400, 325, 306,
	50, 401, 402, 456, 106, 403, 76, 469, 253, 254,
	404, 232, 187, 327, 280, 185, 33, 307, 358, 236,
	56, 211, 328, 44, 284, 43, 450, 405, 453, 279,
	275, 51, 406, 407, 408, 409, 470, 278, 252, 274,
	484, 379, 229, 471, 60, 172, 288, 287, 289, 218,
	324, 271, 410, 411, 412, 192, 79, 413, 261, 19,
	414, 415, 308, 225, 416, 54, 417, 418, 331, 201,
	419, 52, 472, 37, 206, 473, 420, 421, 422, 423,
	424, 310, 425, 309, 283, 285, 213, 311, 360, 426,
	257, 205, 477, 427, 193, 461, 207, 210, 200, 332,
	194, 428, 429, 430, 431, 432, 239, 433, 434, 245,
	479, 41, 435, 436, 437, 438, 233, 228, 326, 335,
	59, 80, 293, 439, 459, 251, 226, 440, 242, 53,
	480, 481, 482, 220, 483, 7, 313, 109, 230, 231,
	45, 272, 212, 441, 442, 262, 263, 277, 250, 273,
	243, 447, 214, 314, 202, 443, 334, 227, 294, 364,
	219, 315, 458, 363, 270, 267, 221, 444, 316, 177,
	215, 216, 445, 448, 317, 318, 237, 319, 320, 321,
	322, 323, 222, 362, 248, 265, 295, 175, -62, 175,
	-123, -214, 175, -186, 297, -205, 299, 312, 307, 317,
	305, -197, 308, 310, 213, -296, 325, 175, 314, 164,
	155, 300, 309, 318, 319, 237, 320, 323, 222, -292,
	-281, 468, 483, 114, 269, 304, 302, 326, 450, 322,
	321, -214, 243, -221, 248, -209, -281, -208, 246, -123,
	-68, 446, 168, -223, -223, -79, 450, 452, -139, -92,
	122, -102, -105, -97, -98, -133, -134, -135, -136, -103,
	-146, 144, 145, 152, 123, -144, -106, 24, 355, 348,
	347, 155, 29, 160, 66, 67, 350, 351, 125, 55,
	342, 343, -104, 338, 344, 339, 353, 354, -209, -214,
	180, 337, 174, 150, 346, -99, -95, -2, -142, 336,
	340, 341, 345, -281, -208, -101, -100, -129, 89, 94,
	99, 156, 158, 157, 159, 95, 101, -303, 90, 91,
	92, 93, 102, 103, 42, 313, 313, -123, -62, -154,
	-77, -156, -4, -2, -303, 6, -62, -2, -3, -7,
	-25, -27, 386, -26, -214, -161, -176, 10, 140, 40,
	48, -159, -160, -6, -2, -92, 17, 21, 22, -82,
	146, -92, -214, -63, -82, -195, 179, -62, -62, -185,
	-226, 243, -189, 326, 325, -210, -187, -209, -207, -186,
	324, 169, 365, 121, 23, 25, 124, 155, 17, 125,
	35, 171, 269, 186, 154, 182, 347, 164, 70, 366,
	338, 339, 336, 342, 349, 350, 337, 299, 29, 11,
	368, 26, 196, 22, 36, 148, 166, 128, 199, 24,
	197, 103, 371, 20, 73, 191, 12, 184, 38, 14,
	372, 373, 15, 180, 179, 140, 176, 68, 9, 160,
	27, 137, 64, 374, 116, 375, 376, 377, 378, 66,
	138, 18, 340, 341, 31, 451, 355, 208, 150, 71,
	57, 452, 122, 380, 381, 101, 382, 104, 74, 457,
	118, 16, 69, 40, 383, 209, 384, 181, 385, 329,
	386, 139, 167, 346, 67, 387, 174, 312, 6, 352,
	30, 195, 183, 111, 65, 388, 175, 127, 353, 354,
	178, 102, 5, 115, 32, 10, 72, 75, 343, 344,
	345, 55, 110, 359, 126, 13, 389, 330, 120, 114,
	-258, 138, -245, -249, -209, 190, -274, 186, -123, -267,
	-266, -209, -78, -204, 176, 184, 183, 115, -285, 118,
	230, 337, 174, -42, -43, -186, 154, 207, 84, 84,
	-249, -248, -247, -286, 209, 190, -273, -265, 182, 191,
	-255, 183, 184, -250, 176, 116, -286, -250, 181, 191,
	209, 209, 109, 209, 109, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 206, -256, 130, -256, 363, 363,
	-261, -286, -286, -286, 178, 33, 33, -206, -250, 178,
	23, -256, -256, -186, 154, -256, -256, -256, -256, 217,
	217, -256, -256, -256, -256, -256, -256, -256, -256, -256,
	-256, -256, -256, -256, -256, -256, 175, -285, -86, 323,
	237, 78, -44, 219, -28, -123, -204, 176, 177, -285,
	-123, 161, -123, -199, 138, 13, -199, -196, 313, 311,
	298, 303, -199, -199, -199, -199, 220, 296, -251, 176,
	33, 187, 313, 220, 296, 220, 221, 220, 221, 306,
	316, 220, -219, 12, 140, 337, 301, 305, 213, 175,
	214, 177, 315, -281, 453, 221, -219, 90, -200, 138,
	313, 216, -199, -224, -303, -210, 269, -224, -224, 30,
	178, -209, -64, -209, 90, -9, -5, -13, -12, -14,
	130, -84, 313, -73, 155, 468, 454, 455, 456, 453,
	310, 461, 459, 457, 220, 458, 84, 118, 120, 121,
	-92, 137, -130, 130, 131, 132, 133, 134, 135, 136,
	140, 122, 124, 138, 139, 119, 141, 142, 143, 144,
	145, 146, 147, 149, 148, 150, 151, 154, 162, 163,
	-98, -98, -98, -98, -144, -303, -303, -303, -98, -194,
	-303, -98, -303, -303, -303, -303, -150, -92, -303, -307,
	-303, -307, -307, -236, -303, -236, -303, -303, -303, 161,
	-303, -303, -303, -303, -303, -236, -236, -236, -236, 89,
	94, 99, 90, 89, 94, 99, 90, 89, 94, 99,
	90, 89, 94, 99, 90, -2, -3, -139, -223, -293,
	-294, -126, -123, -303, 237, -159, -6, -2, -154, -160,
	-156, -2, -62, -71, -83, 61, 62, -85, 22, 36,
	65, 63, 21, -304, 85, -304, -176, -304, 84, -27,
	-179, 83, 59, 41, 90, 90, 84, 19, -155, -157,
	-92, 12, -212, -211, 23, -209, 90, 161, 97, 12,
	-124, 27, -123, -195, -195, 84, 243, -189, -226, -191,
	-190, 327, 329, 130, -213, -209, 90, 29, 85, 84,
	-123, -228, -231, -233, -232, -234, -229, -230, 266, 267,
	155, 270, 272, 273, 274, 275, 276, 277, 278, 279,
	280, 281, 30, 198, 262, 263, 264, 265, 282, 283,
	284, 285, 286, 287, 288, 289, 249, 268, 357, 250,
	251, 252, 253, 254, 255, 257, 258, 259, 260, 261,
	-284, -281, 83, 85, 84, -235, 83, -86, 175, -281,
	176, 176, 176, -62, 346, -256, -256, 206, -35, -32,
	-277, 16, -31, -32, 169, 105, 106, 166, 83, -245,
	83, -254, -284, -281, 83, 116, 181, 115, -253, -250,
	-253, -254, -281, -146, -209, -214, -281, 116, 116, -182,
	-209, -182, -182, 21, -182, 21, -182, 21, 92, -209,
	-182, 21, -182, 21, -182, 21, -182, 21, -182, 21,
	29, 76, 77, 29, 79, 80, 81, -146, -146, -245,
	-186, -123, -281, 92, 92, -256, -256, 92, 90, 90,
	90, -256, -256, 92, 90, -216, -214, 90, -287, 192,
	234, 236, 92, 92, 92, 92, 29, 90, -288, 29,
	475, 474, 476, 477, 478, 92, 29, 92, 29, 92,
	-209, 83, -123, -89, 224, 164, 166, 169, 74, 90,
	238, 130, 42, 84, 178, 175, -281, -201, 180, -201,
	-215, -214, -207, 90, -92, -252, 12, 140, -219, -219,
	-199, -123, -252, -219, -199, -123, -199, -199, -199, -199,
	-219, -219, -219, -199, -214, -214, -123, -123, -123, -123,
	-123, -123, -123, -224, -224, -224, -200, -199, 453, 90,
	74, -222, 246, 280, 447, 448, 449, 84, 359, -116,
	-123, 453, 453, 453, 453, 453, 453, -92, -92, -92,
	-92, -137, 101, 122, 102, 103, -105, -138, -142, -144,
	96, 140, 124, 138, 139, -97, -98, -97, -97, -97,
	-97, -97, -97, -97, -97, -97, -97, -97, -97, -97,
	-225, -281, 90, 155, 90, 90, -80, -82, -92, -92,
	-281, -209, -80, -80, -92, -76, 22, 36, -148, -149,
	126, -146, -304, -304, 92, -209, -209, -81, 22, 36,
	-80, -210, -215, -207, -80, -81, -81, -80, -80, -176,
	-304, 84, -295, 329, 330, 451, -217, 209, -216, 23,
	-140, -139, 90, -159, -159, 61, 62, 57, -80, -85,
	-304, -26, 23, -178, -209, 60, 90, -237, -186, -92,
	-92, 84, -158, 25, 26, -123, -211, 146, -215, -123,
	-181, 209, -123, -108, -110, -111, -112, -126, -145, -303,
	12, -116, -117, -125, -214, -189, -191, 84, 328, 330,
	331, 74, 104, -92, -238, 154, -263, -262, -261, -245,
	-247, -248, -249, 85, -162, -91, 38, -241, 294, 293,
	-235, -235, -235, -235, -235, -237, -237, -237, -237, 83,
	83, -235, -235, -235, -235, -239, 83, -239, -239, -240,
	83, -240, -274, -92, -271, -270, -268, -269, 185, 98,
	359, 75, -266, -158, 92, -89, -202, 180, -272, -269,
	-281, -281, -281, -202, -281, 90, -281, 90, 84, 17,
	-246, -245, -47, 234, -276, 209, -273, -267, -254, 116,
	-253, -254, -254, 161, -281, 84, 27, 109, 109, 109,
	109, 359, 166, 30, -245, -47, -225, 178, -225, -225,
	90, 90, -198, 483, -116, -88, 226, 130, 215, 215,
	175, 175, 228, -123, 239, 240, 238, 21, 227, 229,
	231, 217, -123, -123, -201, 74, -118, -123, 24, -214,
	-123, -199, -199, -123, -199, -199, -123, -209, -73, 329,
	84, 359, 20, -74, 20, 101, 102, 103, -138, -97,
	-98, -97, 121, 199, 84, -304, 23, 84, 75, -304,
	-304, -304, 84, 12, -80, -151, -149, 128, -92, -304,
	-304, 84, 84, -304, -80, -80, -303, 161, -304, -304,
	-304, -304, -304, -294, 450, 330, -127, 72, 179, 73,
	-303, -216, -304, -132, -209, 92, 95, -161, -107, -109,
	12, -85, -144, 85, 84, -237, -165, -170, -196, -281,
	90, 155, -157, 161, -128, 13, -131, 30, 55, -5,
	-303, -303, 30, 84, -119, -121, -120, -122, 64, 68,
	70, 65, 66, 67, 71, -220, 23, -108, -3, -2,
	-303, -123, -116, -305, 12, 75, -305, 84, 161, -190,
	-192, 332, 329, 335, -281, 90, 84, -261, -249, -300,
	101, 122, 29, 74, 291, 98, -298, 154, -299, 181,
	115, 116, 193, 23, 39, -242, 295, -237, -237, -244,
	90, -244, 92, 92, 85, -38, -33, -34, 31, 78,
	-268, -256, 90, 37, -209, 85, -88, -123, 122, 74,
	-272, -272, -272, -214, 16, -178, 84, 85, -147, 235,
	85, -209, 85, 83, -254, -254, -210, -209, -303, 175,
	29, 29, -47, -147, -238, -281, 485, 484, 85, 177,
	233, -90, 342, 90, 86, -123, -123, -123, -123, -123,
	169, 166, 218, 178, -116, -123, 84, -67, 194, 189,
	-219, -219, 31, -123, 329, 462, 460, 121, 199, -105,
	-98, -82, 356, -227, 155, 266, 198, 264, 260, 280,
	271, 293, 262, 294, -227, -225, -92, -92, -154, 129,
	-92, 127, -92, -92, -304, -304, -81, -210, 176, 176,
	176, -182, -193, 20, 12, 55, 55, -107, -128, -108,
	-85, -209, -168, 446, -173, 44, -171, -172, 45, -169,
	46, 54, 146, -159, -92, -183, 74, -184, -188, -146,
	-141, -143, -142, -303, -177, -304, -209, -182, -184, -110,
	-111, -111, -110, -111, 64, 64, 64, 69, 64, 69,
	64, -120, -214, -304, -304, -3, -181, 75, -108, -108,
	-125, -214, 146, 329, 333, 334, -261, 101, -303, -96,
	-104, -94, -93, -95, -99, 144, 145, 10, 90, 90,
	-281, 116, 116, -123, 83, 85, 84, 85, 84, 85,
	84, -203, 396, 122, -34, -33, -256, -256, 92, -281,
	177, 24, -123, 74, 74, 74, 17, -245, -146, 55,
	-271, -178, -275, -276, -123, -94, -303, -147, -123, -87,
	224, 232, 83, 87, -283, 75, 215, 291, 215, -123,
	-67, -38, -123, -199, -199, 31, -281, -105, -98, -303,
	-304, -235, -235, -235, -240, -235, 254, -235, 254, -304,
	-304, 84, -304, 20, -304, -72, 352, -92, 84, 84,
	-304, -303, -303, -303, -304, -123, -128, -152, 14, -165,
	49, 272, -175, -174, 53, 45, -172, 17, 47, 17,
	28, -183, 84, 130, 84, -304, -304, 84, 55, 161,
	-304, -128, -114, -113, 74, 75, -115, 74, -113, 64,
	64, -179, -304, -128, -108, -128, -128, 161, -92, -100,
	-100, -134, 83, -92, -237, 90, -237, 92, 92, 396,
	29, 79, 80, 81, 29, 76, 77, -123, -123, -123,
	-123, -178, 211, 85, -304, 84, -243, 359, 362, -92,
	-179, 85, -280, 359, -282, -281, -209, -209, -209, -97,
	-237, -281, -92, -92, -159, 90, -92, -92, -180, -304,
	-209, 181, -180, -180, -217, -152, -153, 15, 17, -166,
	51, -164, 50, -164, -174, 17, 17, 90, 17, 90,
	116, -188, -92, -143, 55, -5, -209, -141, -209, -154,
	-92, 83, -92, -154, -128, -304, -178, 85, 85, 85,
	-179, 212, -299, -276, 363, 363, -304, 23, -279, -278,
	-210, 83, 75, -75, 140, 359, -304, -304, -304, -304,
	-304, 84, -304, -304, -304, -127, -153, -92, -139, -167,
	52, 74, 104, 90, 90, 90, 10, -141, 161, -159,
	-178, -159, 85, -163, 23, -303, -5, 84, 130, -178,
	-123, -304, 357, 71, 360, -209, 181, 74, 104, -184,
	-209, 85, -290, -291, 74, -300, -297, 101, 122, 98,
	-298, 110, 111, -5, -92, 208, -65, 359, -278, -260,
	-210, 90, 92, 85, 60, 358, 361, -291, 74, 11,
	10, 101, 90, -65, -304, -304, -66, 223, 450, -283,
	60, -289, 194, 189, 192, 30, -289, 186, -280, 359,
	188, 29, 101, 225, 360, 361,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 646, 646, 646, 0,
	646, 0, 0, 646, -2, -2, 646, 1031, 0, 646,
	0, 0, -2, 579, 580, 0, 582, -2, 0, 0,
	591, 1451, 1451, 641, 0, 0, 0, 0, 0, 646,
	895, 45, 646, 0, 80, 81, 597, 598, 599, 60,
	0, 1449, 1, 3, 66, 70, 0, 0, 0, 53,
	904, 0, 73, 0, 0, 650, 0, 648, 0, 1014,
	646, 646, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 453, 413, 456, 411, 442,
	-2, 404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 306, 306, 0, 0, -2,
	404, 404, 404, 0, 0, 0, 439, 1016, 359, 306,
	306, 0, 306, 306, 306, 306, 0, 0, 306, 306,
	306, 306, 306, 306, 306, 306, 306, 306, 306, 306,
	306, 306, 306, 921, 143, 1032, 1029, 1030, 35, 36,
	37, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181,
	1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191,
	1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201,
	1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
	1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221,
	1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241,
	1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251,
	1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261,
	1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271,
	1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281,
	1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291,
	1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301,
	1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311,
	1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321,
	1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
	1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351,
	1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361,
	1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371,
	1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381,
	1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401,
	1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411,
	1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431,
	1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 0, 1008, 0,
	509, 736, 0, 570, 570, 0, 570, 570, 570, 570,
	0, 0, 0, 521, 0, 0, 0, 0, 567, 0,
	0, 540, 542, 0, 567, 0, 573, 0, 554, 570,
	1452, 1452, 1452, 999, 0, 564, 562, 576, 577, 559,
	560, 578, 581, 0, 586, 589, 1025, 1026, 0, 604,
	44, 1252, 596, 609, 610, 0, 642, 643, 40, 822,
	0, 751, 755, 766, 779, 780, 781, 782, 783, 785,
	786, 0, 0, 0, 0, 791, 792, 0, 0, 0,
	0, 0, 803, 0, 0, 0, 0, 0, 876, 0,
	845, 845, 839, 845, 847, 847, 0, 0, 885, 0,
	0, 0, 0, 0, 0, 214, 215, 821, 988, 847,
	847, 847, 847, -2, -2, 195, 196, 197, 198, 199,
	200, 0, 0, 0, 0, 213, 191, 0, 218, 219,
	216, 217, 805, 806, 1451, 0, 619, 0, 0, 904,
	0, 896, 895, 58, 0, 646, -2, 0, 0, 0,
	0, 42, 0, 47, 697, 72, 71, 940, 0, 0,
	0, 54, 905, 62, 64, 906, 0, 651, 652, 0,
	675, 679, 0, 647, 0, 0, 1015, 1014, 1014, 97,
	0, 1412, 992, -2, -2, 0, 0, 1027, 1028, 1001,
	-2, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053,
	1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
	1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073,
	1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093,
	1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113,
	1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123,
	1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133,
	1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153,
	1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163,
	1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, -2,
	0, 0, 153, 154, 0, 38, 332, 0, 149, 0,
	326, 278, 921, 0, 0, 0, 0, 0, 646, 0,
	1009, 134, 135, 141, 142, 306, 306, 0, 143, 143,
	420, 421, 422, 0, 0, -2, 330, 0, 405, 0,
	0, 320, 320, 324, 322, 323, 0, 0, 0, 0,
	0, 0, 433, 0, 434, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 493, 0, 307, 0, 451, 452,
	360, 0, 0, 0, 0, 431, 432, 0, 0, 1017,
	1018, 0, 0, 306, 306, 0, 0, 0, 0, 306,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 133, 934, 0,
	0, 0, -2, 0, 501, 0, 0, 0, 1010, 1010,
	508, 0, 510, 511, 0, 0, 512, 0, 567, 567,
	565, 566, 514, 515, 516, 517, 570, 0, 0, 315,
	316, 317, 567, 570, 0, 570, 570, 570, 570, 567,
	567, 567, 570, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1452, 1452, 1452, 573, 570, 0, 550, 0,
	551, 552, 555, 556, 1453, 1454, 1046, 557, 558, 1000,
	587, 590, 607, 605, 606, 608, 600, 601, 602, 603,
	0, 621, 622, 627, 0, 0, 0, 0, 633, 634,
	635, 0, 0, 638, 639, 640, 0, 0, 0, 0,
	749, 0, 0, 811, 812, 813, 814, 815, 816, 817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	787, 788, 789, 790, 793, 0, 0, 0, 798, 799,
	0, 0, 0, 0, 0, 656, 0, 877, 0, 837,
	0, 838, 840, 841, 0, 842, 0, 0, 659, 0,
	0, 659, 659, 0, 0, 185, 186, 187, 188, 201,
	205, 209, 220, 202, 206, 210, 221, 203, 207, 211,
	222, 204, 208, 212, 223, 821, 0, 0, 41, 611,
	612, 0, 719, 1020, 0, 52, 61, 63, 904, 56,
	904, 0, 661, 0, 0, -2, -2, 662, 668, 669,
	670, 671, 672, 49, 1450, 50, 0, 69, 0, 43,
	0, 0, 0, 0, 290, 943, 0, 0, 897, 898,
	901, 0, 676, 680, 0, 682, 683, 0, 649, 0,
	95, 0, 735, 0, 0, 0, 1412, 998, 0, 99,
	100, 0, 0, 0, 294, 1003, 1004, 1005, -2, 313,
	0, -2, 285, 229, 230, 231, 278, 233, 278, 278,
	278, 278, 290, 290, 290, 290, 261, 262, 263, 264,
	265, 0, 0, 248, 278, 278, 278, 278, 268, 269,
	270, 271, 272, 273, 274, 275, 234, 235, 236, 237,
	238, 239, 240, 241, 242, 280, 280, 280, 282, 282,
	0, 39, 0, 298, 0, 901, 0, 934, 1012, 1022,
	0, 0, 0, 1012, 117, 0, 0, 454, 414, 443,
	455, 0, 417, 418, -2, 0, 0, 404, 0, 406,
	0, 314, 0, -2, 0, 324, 0, 320, 324, 321,
	324, 312, 325, 435, 885, 0, 436, 437, 0, 473,
	705, 0, 0, 0, 0, 0, 479, 480, 481, 0,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 492,
	444, 445, 446, 447, 448, 449, 450, 0, 0, 406,
	0, 440, 0, 361, 362, 0, 0, 365, 366, 367,
	368, 0, 0, 371, 372, 373, 722, 723, 374, 398,
	399, 400, 375, 376, 377, 378, 379, 380, 381, 392,
	393, 394, 395, 396, 397, 382, 383, 384, 385, 386,
	389, 0, 127, 925, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 0, 0, 0, 0,
	737, 1033, 1034, 571, 572, 0, 318, 319, 570, 570,
	518, 541, 0, 570, 522, 543, 523, 525, 524, 526,
	545, 546, 570, 529, 568, 569, 530, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 547, 548, 549, 574,
	0, 0, 588, 592, 593, 594, 595, 0, 0, 624,
	91, 629, 630, 631, 632, 644, 637, 823, 746, 747,
	748, 750, 752, 0, 807, 809, 754, 756, 818, 819,
	820, 0, 0, 0, 0, 0, 760, 764, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	784, 860, 861, 862, 801, 802, 0, 673, 0, 0,
	0, 800, 0, 0, 0, 0, 657, 658, 883, 880,
	0, 0, 846, 848, 0, 0, 0, 0, 0, 0,
	660, 886, 0, -2, 0, 0, 0, 0, 0, 0,
	987, 0, 614, 615, 617, 0, 739, 0, 720, 0,
	0, 1021, 620, 55, 57, 666, 667, 0, 684, 663,
	51, 46, 0, 0, 699, 941, 290, 963, 0, 907,
	908, 0, 900, 902, 903, 74, 681, 677, 0, 744,
	0, 0, 734, 0, 687, 689, 690, 691, 717, 0,
	0, 0, 0, 93, 736, 993, 98, 0, 0, 103,
	104, 994, 995, 996, 997, 0, 136, -2, 356, 155,
	157, 158, 159, 150, 338, 0, 0, 288, 286, 287,
	232, 290, 290, 255, 256, 257, 258, 259, 260, 0,
	0, 249, 250, 251, 252, 243, 0, 244, 245, 246,
	0, 247, 331, 0, 909, 299, 300, 302, 306, 0,
	0, 0, 327, 328, 0, 925, 0, 0, 0, 1023,
	1022, 1022, 1022, 0, 145, 146, 147, 148, 143, 0,
	0, 151, 408, 407, 0, 0, 329, 0, 0, 324,
	324, 309, 310, 0, 438, 0, 0, 475, 476, 477,
	478, 0, 0, 0, 406, 408, 294, 0, 363, 364,
	369, 370, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 468, 469, 470, 471, 922, 923,
	924, 0, 0, 502, 0, 0, 348, 89, 1011, 507,
	567, 528, 544, 567, 520, 527, 553, 584, 628, 0,
	0, 0, 0, 636, 0, 753, 808, 810, 757, 0,
	761, 765, 0, 0, 0, 0, 0, 0, 0, 804,
	828, 829, 0, 0, 895, 0, 881, 0, 0, 836,
	849, 0, 0, 824, 0, 0, 659, 0, 850, 851,
	852, 853, 854, 613, 616, 618, 695, 0, 0, 0,
	0, 721, 1019, 0, 888, 0, 0, 684, 744, 685,
	0, 664, 48, 698, 0, 945, 944, 957, 970, 291,
	292, 293, 899, 0, 904, 0, 981, 0, 0, 973,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 0,
	0, 727, 0, 0, 0, 0, 718, 0, 0, 0,
	0, -2, 0, 0, 87, 88, 0, 0, 0, 101,
	102, 0, 0, 108, 295, 296, 143, 358, 156, 160,
	165, 0, 0, 0, 170, 0, 172, 0, 339, 0,
	225, 227, 0, 0, 163, 228, 289, 253, 254, 0,
	276, 0, 0, 0, 351, 113, 913, 912, 306, 306,
	301, 0, 304, 0, 1024, 279, 0, 126, 0, 0,
	0, 0, 0, 132, 0, 412, 0, 423, 424, 0,
	472, 0, 298, 0, 308, 311, 886, 706, 0, 0,
	425, 0, 408, 429, 430, 441, 390, 391, 388, 0,
	0, 935, 936, 0, 939, 118, 461, 463, 462, 466,
	0, 0, 459, 0, 348, 909, 0, 506, 349, 350,
	570, 570, 623, 92, 0, 626, 0, 0, 0, 758,
	762, 674, 0, 0, 278, 278, 866, 278, 282, 869,
	278, 871, 278, 874, 0, 0, 0, 0, 878, 835,
	884, 0, 0, 0, 825, 826, 0, 887, 0, 0,
	0, 0, 0, 1006, 1007, 889, 890, 744, 891, 686,
	665, 700, 963, 0, 956, 0, -2, 965, 0, 0,
	0, 971, 678, 75, 745, 78, 0, 981, 989, 0,
	972, 983, 985, 0, 0, 0, 977, 0, 744, 688,
	713, 715, 0, 710, 725, 726, 728, 0, 730, 0,
	732, 733, 697, 693, 694, 0, 744, 0, 744, 744,
	94, 0, 738, 105, 106, 107, 357, 166, 0, 168,
	183, 184, 189, 190, 192, 0, 0, 0, 171, 173,
	174, 224, 226, 0, 0, 290, 0, 290, 0, 283,
	0, 340, 352, 0, 910, 911, 0, 0, 303, 305,
	0, 1013, 128, 0, 0, 0, 0, 152, 409, 0,
	297, 0, 0, 497, 494, 426, 0, 428, 697, 926,
	927, 928, 0, 938, 121, 0, 0, 0, 0, 503,
	504, 505, 90, 513, 519, 625, 645, 759, 763, 0,
	795, 863, 290, 867, 868, 870, 872, 873, 875, 796,
	797, 0, 831, 0, 833, 904, 0, 882, 0, 0,
	827, 0, 0, 0, 719, 59, 891, 893, 0, 950,
	948, 948, 958, 959, 0, 0, 966, 0, 0, 0,
	0, 79, 0, 0, 0, 986, 0, 0, 0, 0,
	96, 895, 707, 714, 0, 0, 708, 0, 709, 729,
	731, 692, -2, 895, 744, 85, 86, 0, 0, 193,
	194, 169, 0, 0, 266, 277, 267, 0, 0, 353,
	914, 915, 916, 917, 918, 919, 920, 697, 129, 130,
	131, 415, 0, 0, 474, 0, 482, 0, 0, 0,
	0, 937, 460, 0, 119, 120, 0, 0, 465, 855,
	864, 865, 0, 0, 0, 879, 0, 0, 0, 741,
	701, 702, 0, 0, 739, 893, 77, 0, 0, 953,
	0, 946, 949, 947, 960, 0, 0, 967, 0, 969,
	0, 990, 991, 984, 0, 976, 979, 975, 978, 904,
	711, 0, 716, 904, 84, 167, 0, 177, 281, 284,
	0, 0, 333, 498, 495, 496, 427, 0, 122, 123,
	0, 0, 0, 0, 0, 0, 830, 832, 834, 843,
	844, 0, 740, 742, 743, 696, 76, 894, 892, 942,
	0, 951, 952, 961, 962, 968, 0, 974, 0, 82,
	0, 83, 334, 338, 0, 0, 929, 0, 0, 0,
	467, 794, 0, 0, 0, 703, 704, 954, 955, 982,
	980, 712, 335, 336, 0, 161, 178, 179, 0, 0,
	182, 175, 176, 929, 0, 0, 457, 931, 124, 125,
	401, 402, 403, 118, 856, 0, 859, 337, 0, 0,
	0, 180, 181, 114, 499, 500, 0, 932, 933, 121,
	857, 341, 343, 344, 0, 0, 342, 0, 464, 0,
	345, 346, 347, 930, 0, 858,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 123, 3, 3, 3, 149, 141, 3,
	83, 85, 146, 144, 84, 145, 161, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 486,
	131, 130, 132, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 119, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 120, 121, 122, 124, 125, 126,
	127, 128, 129, 133, 134, 135, 136, 137, 138, 139,
	140, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:442
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:447
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:448
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:452
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:485
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:491
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:495
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:499
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:504
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:508
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:514
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:520
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:526
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:530
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:535
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:539
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:545
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:549
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:555
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:561
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:565
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:569
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:592
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:598
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:603
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:609
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:616
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:622
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:629
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:633
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:647
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:670
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:680
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:684
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:689
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:708
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:714
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:726
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:734
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:746
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:758
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:762
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:768
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:774
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:778
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:796
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:800
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:806
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:810
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:816
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:820
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:825
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:829
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:835
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:841
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:845
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:851
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:855
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:861
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:865
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:869
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:875
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:879
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:883
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:887
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:893
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:897
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:916
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:929
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:936
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:940
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:945
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:955
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:960
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:965
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:971
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:976
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:988
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:995
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1002
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1007
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1012
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1017
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1024
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1031
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1042
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1048
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1052
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1058
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1062
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1066
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1076
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1080
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1086
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1090
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1096
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1100
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1107
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1111
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1117
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1121
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1127
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1132
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1137
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1141
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1146
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1160
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1166
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1174
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1178
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1187
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1191
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1197
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1203
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1208
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1213
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1218
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1223
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1228
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1233
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1237
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1243
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1247
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1252
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1256
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1261
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1278
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1285
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1292
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1296
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1300
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1304
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1315
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1322
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1326
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1336
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1340
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1348
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1352
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1356
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1360
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1364
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1368
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1372
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1376
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1380
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1404
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1415
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1419
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1426
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1430
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1434
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1438
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1442
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1446
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1452
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1456
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1460
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1464
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1481
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1524
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1530
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1536
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1548
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1554
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1562
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1566
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1570
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1574
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1588
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1592
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1596
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1604
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1608
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1616
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1636
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 267:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1641
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1691
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1695
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1700
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1704
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1712
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1722
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 285:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1730
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1734
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1738
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1743
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1747
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = ""
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = ""
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1784
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1789
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1793
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1799
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1809
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1813
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1818
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1822
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = ""
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1838
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1842
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1846
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1850
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1854
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1859
		{
			yyVAL.str = ""
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = yyDollar[2].str
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = "key"
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = yyDollar[1].str
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1912
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1922
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1926
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1932
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1938
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1942
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1948
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1952
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1958
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1964
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1968
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1972
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1976
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1981
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1985
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1991
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1997
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2003
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2009
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2013
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2017
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2021
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2025
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2030
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2043
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2047
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2051
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2056
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2060
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2066
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2070
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2074
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2080
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2090
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2094
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2098
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2102
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2106
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2110
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2114
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2118
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2122
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2126
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2130
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2134
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2138
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2142
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2146
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2150
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2154
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2158
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2162
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2166
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2170
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2174
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2178
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2182
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2186
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2190
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2194
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2198
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 391:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2211
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2249
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2253
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2258
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2262
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2267
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2271
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2275
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2279
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2283
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2287
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2293
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2297
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2301
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2307
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2311
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2315
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2319
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2323
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2327
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2331
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2335
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2339
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2343
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2347
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2351
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2355
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2359
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2363
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2367
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2371
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2375
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2379
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2383
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2387
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2391
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2395
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2401
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2405
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2411
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2415
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2419
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2423
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2427
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2431
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2435
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2439
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2443
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2449
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2455
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2462
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2469
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2475
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2479
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2486
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2493
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2505
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2515
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2519
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2523
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2536
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2546
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2550
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2561
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2568
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2575
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2582
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2590
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2594
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2598
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2602
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2606
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2610
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2614
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2618
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2622
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2626
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2630
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2634
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2638
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2642
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2646
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2650
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2654
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2658
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2662
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2666
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2670
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2674
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2679
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2683
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2687
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2694
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2698
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2704
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2708
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2714
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2720
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2724
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 504:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2730
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2734
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2768
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2772
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2776
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2788
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2792
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2796
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2804
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2816
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2820
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2824
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2828
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2832
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2844
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2852
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2856
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2860
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2872
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2876
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2880
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2884
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2888
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2892
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2896
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2900
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2904
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2908
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2912
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2917
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2921
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2925
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2930
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2938
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2942
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2947
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2961
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2965
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2969
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2985
		{
			yyVAL.str = ""
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2989
		{
			yyVAL.str = "extended "
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3015
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3033
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3037
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3043
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3047
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3053
		{
			yyVAL.empty = struct{}{}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.empty = struct{}{}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.empty = struct{}{}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3077
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3097
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3102
		{
			yyVAL.empty = struct{}{}
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3104
		{
			yyVAL.empty = struct{}{}
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3107
		{
			yyVAL.empty = struct{}{}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.empty = struct{}{}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3114
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3125
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3129
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3133
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3137
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3141
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3145
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = yyDollar[1].str
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = yyDollar[1].str
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.str = yyDollar[1].str
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3169
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3173
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3177
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3182
		{
			yyVAL.str = ""
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3186
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3190
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3196
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3200
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3222
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3226
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3232
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3238
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3242
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3246
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3250
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3272
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3276
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3280
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3284
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3308
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3312
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3332
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3340
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3344
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3366
		{
			yyVAL.str = ""
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3370
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3375
		{
			setAllowComments(yylex, true)
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3385
		{
			yyVAL.strs = nil
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3389
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3395
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3399
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3403
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.str = ""
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3412
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3416
		{
			yyVAL.str = SQLCacheStr
		}
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3434
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3438
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3443
		{
			yyVAL.strs = nil
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3451
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3459
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.str = SQLCacheStr
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = DistinctStr
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = DistinctStr
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = StraightJoinHint
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3495
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3505
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3509
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3513
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3517
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3522
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3530
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3537
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3542
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3546
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3552
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3558
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3572
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3576
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3580
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3586
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3592
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3596
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3601
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3605
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3611
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3615
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3621
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3625
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3629
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3639
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3643
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3656
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3660
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3664
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3668
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3674
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3676
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3680
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3686
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3688
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3691
		{
			yyVAL.empty = struct{}{}
		}
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3693
		{
			yyVAL.empty = struct{}{}
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3696
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3704
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3717
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3721
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3725
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3731
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3737
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3741
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3745
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3749
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3755
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3759
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3769
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3773
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3783
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3789
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3794
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3798
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3802
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3806
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3810
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3819
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3826
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3830
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3834
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3838
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3842
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3853
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3857
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3861
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3865
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3871
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3875
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3879
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3883
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3887
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3891
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3895
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3899
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3903
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3907
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3911
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3917
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3921
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3925
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3929
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3933
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3937
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3941
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3945
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3949
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3953
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3957
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3961
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3965
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3971
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3975
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3979
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3983
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3987
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3991
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3999
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4003
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4007
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4011
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4015
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4019
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4023
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4027
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4031
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4035
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4039
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4043
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4047
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4051
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4059
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4063
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4070
		{
			yyVAL.str = ""
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4074
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4080
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4084
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4091
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4095
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4099
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4103
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4109
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4113
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4117
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4121
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4125
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4129
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4133
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4139
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4143
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4147
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4154
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4160
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4164
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 824:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4174
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4182
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4186
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4196
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4200
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4204
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4208
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4212
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4216
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4220
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4243
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4247
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4253
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4257
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4280
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4284
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4288
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4310
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4352
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4356
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4360
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4364
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4368
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4388
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4392
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4396
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4400
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4404
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4408
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4414
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4418
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4422
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4426
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4430
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4434
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4438
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4447
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = string("")
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4462
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4466
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4472
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4481
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4487
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4491
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4495
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4501
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4510
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4514
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4520
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4524
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4529
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4533
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4538
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4542
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4548
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4554
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4558
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 900:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4564
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4569
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4573
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4577
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4586
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4592
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4596
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4600
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4605
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4609
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4613
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4617
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4621
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4628
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4632
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4636
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4640
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4646
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4650
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4654
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4659
		{
			yyVAL.str = ""
		}
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4663
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 923:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4667
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4671
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 925:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4676
		{
			yyVAL.str = ""
		}
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4680
		{
			yyVAL.str = yyDollar[3].str
		}
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4695
		{
			yyVAL.str = ""
		}
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4699
		{
			yyVAL.str = yyDollar[2].str
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4704
		{
			yyVAL.str = "cascaded"
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4717
		{
			yyVAL.str = ""
		}
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4721
		{
			yyVAL.str = yyDollar[3].str
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4731
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4735
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4739
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4745
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4749
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4755
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4759
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4763
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4768
		{
			yyVAL.str = ""
		}
	case 946:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4772
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4776
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4785
		{
			yyVAL.str = " header"
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4790
		{
			yyVAL.str = ""
		}
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4794
		{
			yyVAL.str = " manifest on"
		}
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4798
		{
			yyVAL.str = " manifest off"
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4803
		{
			yyVAL.str = ""
		}
	case 954:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4807
		{
			yyVAL.str = " overwrite on"
		}
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4811
		{
			yyVAL.str = " overwrite off"
		}
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4817
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4822
		{
			yyVAL.str = ""
		}
	case 958:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4826
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4832
		{
			yyVAL.str = yyDollar[1].str
		}
	case 960:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4836
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4842
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4846
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = ""
		}
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4861
		{
			yyVAL.str = yyDollar[1].str
		}
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 970:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4884
		{
			yyVAL.str = ""
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4888
		{
			yyVAL.str = " optionally"
		}
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4901
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4905
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4909
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4913
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4917
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4923
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4927
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4931
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4935
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4944
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4950
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4954
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4960
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4964
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4970
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4985
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4989
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4995
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5001
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5005
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5011
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5015
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5019
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5023
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5027
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5035
		{
			yyVAL.str = "charset"
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5045
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5062
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5064
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5067
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5069
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5072
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5074
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5077
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5079
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5082
		{
			yyVAL.empty = struct{}{}
		}
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5084
		{
			yyVAL.empty = struct{}{}
		}
	case 1018:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5086
		{
			yyVAL.empty = struct{}{}
		}
	case 1019:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5090
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5095
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5099
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5104
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5106
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5110
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5116
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5120
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5127
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5133
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5137
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5143
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5147
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5154
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5593
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5602
		{
			decNesting(yylex)
		}
	case 1451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5607
		{
			skipToEnd(yylex)
		}
	case 1452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5612
		{
			skipToEnd(yylex)
		}
	case 1453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5616
		{
			skipToEnd(yylex)
		}
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5620
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
