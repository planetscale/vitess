// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const DISCARD = 57439
const IMPORT = 57440
const ENABLE = 57441
const DISABLE = 57442
const TABLESPACE = 57443
const OR = 57444
const XOR = 57445
const AND = 57446
const NOT = 57447
const BETWEEN = 57448
const CASE = 57449
const WHEN = 57450
const THEN = 57451
const ELSE = 57452
const END = 57453
const LE = 57454
const GE = 57455
const NE = 57456
const NULL_SAFE_EQUAL = 57457
const IS = 57458
const LIKE = 57459
const REGEXP = 57460
const IN = 57461
const SHIFT_LEFT = 57462
const SHIFT_RIGHT = 57463
const DIV = 57464
const MOD = 57465
const UNARY = 57466
const COLLATE = 57467
const BINARY = 57468
const UNDERSCORE_BINARY = 57469
const UNDERSCORE_UTF8MB4 = 57470
const UNDERSCORE_UTF8 = 57471
const UNDERSCORE_LATIN1 = 57472
const INTERVAL = 57473
const JSON_EXTRACT_OP = 57474
const JSON_UNQUOTE_EXTRACT_OP = 57475
const CREATE = 57476
const ALTER = 57477
const DROP = 57478
const RENAME = 57479
const ANALYZE = 57480
const ADD = 57481
const FLUSH = 57482
const CHANGE = 57483
const SCHEMA = 57484
const TABLE = 57485
const INDEX = 57486
const VIEW = 57487
const TO = 57488
const IGNORE = 57489
const IF = 57490
const UNIQUE = 57491
const PRIMARY = 57492
const COLUMN = 57493
const SPATIAL = 57494
const FULLTEXT = 57495
const KEY_BLOCK_SIZE = 57496
const CHECK = 57497
const INDEXES = 57498
const ACTION = 57499
const CASCADE = 57500
const CONSTRAINT = 57501
const FOREIGN = 57502
const NO = 57503
const REFERENCES = 57504
const RESTRICT = 57505
const SHOW = 57506
const DESCRIBE = 57507
const EXPLAIN = 57508
const DATE = 57509
const ESCAPE = 57510
const REPAIR = 57511
const OPTIMIZE = 57512
const TRUNCATE = 57513
const MAXVALUE = 57514
const PARTITION = 57515
const REORGANIZE = 57516
const LESS = 57517
const THAN = 57518
const PROCEDURE = 57519
const TRIGGER = 57520
const VINDEX = 57521
const VINDEXES = 57522
const DIRECTORY = 57523
const NAME = 57524
const UPGRADE = 57525
const STATUS = 57526
const VARIABLES = 57527
const WARNINGS = 57528
const CASCADED = 57529
const DEFINER = 57530
const OPTION = 57531
const SQL = 57532
const UNDEFINED = 57533
const SEQUENCE = 57534
const MERGE = 57535
const TEMPTABLE = 57536
const INVOKER = 57537
const SECURITY = 57538
const FIRST = 57539
const AFTER = 57540
const BEGIN = 57541
const START = 57542
const TRANSACTION = 57543
const COMMIT = 57544
const ROLLBACK = 57545
const SAVEPOINT = 57546
const RELEASE = 57547
const WORK = 57548
const BIT = 57549
const TINYINT = 57550
const SMALLINT = 57551
const MEDIUMINT = 57552
const INT = 57553
const INTEGER = 57554
const BIGINT = 57555
const INTNUM = 57556
const REAL = 57557
const DOUBLE = 57558
const FLOAT_TYPE = 57559
const DECIMAL = 57560
const NUMERIC = 57561
const TIME = 57562
const TIMESTAMP = 57563
const DATETIME = 57564
const YEAR = 57565
const CHAR = 57566
const VARCHAR = 57567
const BOOL = 57568
const CHARACTER = 57569
const VARBINARY = 57570
const NCHAR = 57571
const TEXT = 57572
const TINYTEXT = 57573
const MEDIUMTEXT = 57574
const LONGTEXT = 57575
const BLOB = 57576
const TINYBLOB = 57577
const MEDIUMBLOB = 57578
const LONGBLOB = 57579
const JSON = 57580
const ENUM = 57581
const GEOMETRY = 57582
const POINT = 57583
const LINESTRING = 57584
const POLYGON = 57585
const GEOMETRYCOLLECTION = 57586
const MULTIPOINT = 57587
const MULTILINESTRING = 57588
const MULTIPOLYGON = 57589
const NULLX = 57590
const AUTO_INCREMENT = 57591
const APPROXNUM = 57592
const SIGNED = 57593
const UNSIGNED = 57594
const ZEROFILL = 57595
const COLLATION = 57596
const DATABASES = 57597
const SCHEMAS = 57598
const TABLES = 57599
const VITESS_METADATA = 57600
const VSCHEMA = 57601
const FULL = 57602
const PROCESSLIST = 57603
const COLUMNS = 57604
const FIELDS = 57605
const ENGINES = 57606
const PLUGINS = 57607
const EXTENDED = 57608
const KEYSPACES = 57609
const VITESS_KEYSPACES = 57610
const VITESS_SHARDS = 57611
const VITESS_TABLETS = 57612
const CODE = 57613
const PRIVILEGES = 57614
const FUNCTION = 57615
const NAMES = 57616
const CHARSET = 57617
const GLOBAL = 57618
const SESSION = 57619
const ISOLATION = 57620
const LEVEL = 57621
const READ = 57622
const WRITE = 57623
const ONLY = 57624
const REPEATABLE = 57625
const COMMITTED = 57626
const UNCOMMITTED = 57627
const SERIALIZABLE = 57628
const CURRENT_TIMESTAMP = 57629
const DATABASE = 57630
const CURRENT_DATE = 57631
const CURRENT_TIME = 57632
const LOCALTIME = 57633
const LOCALTIMESTAMP = 57634
const CURRENT_USER = 57635
const UTC_DATE = 57636
const UTC_TIME = 57637
const UTC_TIMESTAMP = 57638
const REPLACE = 57639
const CONVERT = 57640
const CAST = 57641
const SUBSTR = 57642
const SUBSTRING = 57643
const GROUP_CONCAT = 57644
const SEPARATOR = 57645
const TIMESTAMPADD = 57646
const TIMESTAMPDIFF = 57647
const MATCH = 57648
const AGAINST = 57649
const BOOLEAN = 57650
const LANGUAGE = 57651
const WITH = 57652
const QUERY = 57653
const EXPANSION = 57654
const UNUSED = 57655
const ARRAY = 57656
const CUME_DIST = 57657
const DESCRIPTION = 57658
const DENSE_RANK = 57659
const EMPTY = 57660
const EXCEPT = 57661
const FIRST_VALUE = 57662
const GROUPING = 57663
const GROUPS = 57664
const JSON_TABLE = 57665
const LAG = 57666
const LAST_VALUE = 57667
const LATERAL = 57668
const LEAD = 57669
const MEMBER = 57670
const NTH_VALUE = 57671
const NTILE = 57672
const OF = 57673
const OVER = 57674
const PERCENT_RANK = 57675
const RANK = 57676
const RECURSIVE = 57677
const ROW_NUMBER = 57678
const SYSTEM = 57679
const WINDOW = 57680
const ACTIVE = 57681
const ADMIN = 57682
const BUCKETS = 57683
const CLONE = 57684
const COMPONENT = 57685
const DEFINITION = 57686
const ENFORCED = 57687
const EXCLUDE = 57688
const FOLLOWING = 57689
const GEOMCOLLECTION = 57690
const GET_MASTER_PUBLIC_KEY = 57691
const HISTOGRAM = 57692
const HISTORY = 57693
const INACTIVE = 57694
const INVISIBLE = 57695
const LOCKED = 57696
const MASTER_COMPRESSION_ALGORITHMS = 57697
const MASTER_PUBLIC_KEY_PATH = 57698
const MASTER_TLS_CIPHERSUITES = 57699
const MASTER_ZSTD_COMPRESSION_LEVEL = 57700
const NESTED = 57701
const NETWORK_NAMESPACE = 57702
const NOWAIT = 57703
const NULLS = 57704
const OJ = 57705
const OLD = 57706
const OPTIONAL = 57707
const ORDINALITY = 57708
const ORGANIZATION = 57709
const OTHERS = 57710
const PATH = 57711
const PERSIST = 57712
const PERSIST_ONLY = 57713
const PRECEDING = 57714
const PRIVILEGE_CHECKS_USER = 57715
const PROCESS = 57716
const RANDOM = 57717
const REFERENCE = 57718
const REQUIRE_ROW_FORMAT = 57719
const RESOURCE = 57720
const RESPECT = 57721
const RESTART = 57722
const RETAIN = 57723
const REUSE = 57724
const ROLE = 57725
const SECONDARY = 57726
const SECONDARY_ENGINE = 57727
const SECONDARY_LOAD = 57728
const SECONDARY_UNLOAD = 57729
const SKIP = 57730
const SRID = 57731
const THREAD_PRIORITY = 57732
const TIES = 57733
const UNBOUNDED = 57734
const VCPU = 57735
const VISIBLE = 57736
const FORMAT = 57737
const TREE = 57738
const VITESS = 57739
const TRADITIONAL = 57740
const LOCAL = 57741
const LOW_PRIORITY = 57742

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	161, 841,
	-2, 87,
	-1, 43,
	141, 111,
	244, 111,
	-2, 105,
	-1, 44,
	244, 111,
	-2, 281,
	-1, 51,
	34, 388,
	161, 388,
	173, 388,
	201, 402,
	202, 402,
	-2, 390,
	-1, 56,
	163, 412,
	-2, 410,
	-1, 80,
	55, 455,
	-2, 463,
	-1, 104,
	141, 111,
	244, 111,
	-2, 106,
	-1, 112,
	166, 231,
	167, 231,
	-2, 275,
	-1, 469,
	148, 852,
	-2, 848,
	-1, 470,
	148, 853,
	-2, 849,
	-1, 487,
	55, 456,
	-2, 468,
	-1, 488,
	55, 457,
	-2, 469,
	-1, 508,
	116, 1152,
	-2, 80,
	-1, 509,
	116, 1051,
	-2, 81,
	-1, 514,
	116, 1006,
	-2, 812,
	-1, 516,
	116, 1093,
	-2, 814,
	-1, 677,
	172, 36,
	177, 36,
	-2, 242,
	-1, 708,
	141, 111,
	244, 111,
	-2, 308,
	-1, 995,
	172, 37,
	177, 37,
	-2, 243,
	-1, 1118,
	148, 855,
	-2, 851,
	-1, 1208,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1584,
	5, 709,
	18, 709,
	20, 709,
	32, 709,
	82, 709,
	-2, 494,
	-1, 1792,
	45, 783,
	-2, 781,
}

const yyPrivate = 57344

const yyLast = 20531

var yyAct = [...]int{
	469, 1870, 1857, 1792, 1634, 1833, 1502, 413, 1410, 1741,
	1493, 1718, 1378, 1230, 79, 3, 428, 1565, 1564, 1155,
	688, 825, 1397, 1411, 442, 1561, 1264, 1489, 1269, 1468,
	411, 1226, 1469, 1576, 651, 1229, 1338, 1205, 1522, 721,
	876, 1549, 1294, 1271, 513, 652, 1105, 128, 1461, 1112,
	140, 1033, 382, 140, 1047, 913, 906, 1187, 394, 869,
	140, 480, 1194, 897, 760, 762, 879, 489, 896, 899,
	1157, 874, 77, 863, 1082, 1138, 993, 474, 415, 658,
	31, 1272, 1170, 678, 1001, 404, 659, 674, 394, 655,
	675, 394, 140, 394, 1000, 910, 912, 1210, 1260, 886,
	1050, 75, 127, 838, 903, 105, 401, 1068, 111, 106,
	107, 1152, 1153, 839, 129, 130, 131, 74, 1843, 1376,
	1789, 8, 979, 7, 140, 80, 140, 1743, 6, 1703,
	1610, 1276, 1876, 140, 1830, 714, 1869, 76, 140, 1811,
	1859, 1539, 1635, 1249, 1829, 1664, 667, 1591, 1592, 495,
	499, 1810, 1274, 510, 1377, 116, 475, 914, 673, 915,
	82, 83, 84, 85, 86, 87, 1483, 1590, 402, 403,
	1482, 1220, 454, 373, 460, 461, 458, 459, 473, 457,
	456, 455, 374, 507, 129, 130, 131, 1221, 1222, 462,
	463, 371, 102, 133, 134, 135, 472, 685, 731, 33,
	1453, 729, 68, 37, 38, 102, 123, 699, 125, 108,
	669, 740, 741, 1441, 668, 758, 1440, 1243, 1141, 1442,
	1504, 1696, 97, 1813, 1250, 368, 129, 130, 131, 1273,
	671, 1154, 1013, 692, 380, 1779, 787, 786, 796, 797,
	789, 790, 791, 792, 793, 794, 795, 788, 742, 1655,
	798, 392, 743, 740, 741, 113, 1653, 1067, 396, 390,
	1490, 749, 1295, 751, 1619, 1069, 1070, 1071, 1523, 1479,
	1022, 1620, 1115, 67, 1281, 359, 102, 94, 1864, 120,
	121, 119, 118, 98, 982, 732, 99, 100, 730, 756,
	1505, 737, 757, 735, 736, 748, 750, 709, 483, 733,
	734, 1507, 361, 362, 363, 1317, 378, 379, 385, 1021,
	1525, 1506, 375, 377, 386, 364, 365, 388, 387, 1023,
	367, 366, 126, 360, 370, 383, 1283, 1019, 1284, 1285,
	1844, 114, 122, 670, 1188, 112, 687, 115, 101, 1714,
	656, 1874, 656, 1877, 654, 1020, 1855, 681, 687, 656,
	680, 101, 999, 998, 754, 1379, 1381, 713, 501, 140,
	664, 1527, 1508, 1531, 1027, 1526, 763, 1524, 693, 1478,
	687, 1758, 1529, 1548, 744, 747, 1547, 1546, 665, 358,
	132, 1528, 1796, 394, 1609, 1275, 707, 1250, 946, 1316,
	1685, 746, 1315, 1481, 1530, 1532, 1304, 394, 394, 1357,
	1589, 724, 725, 726, 727, 728, 745, 1809, 810, 811,
	1402, 1346, 1305, 769, 1216, 890, 823, 718, 1227, 1632,
	798, 759, 101, 1814, 787, 786, 796, 797, 789, 790,
	791, 792, 793, 794, 795, 788, 1780, 1661, 798, 1437,
	788, 1166, 1354, 798, 775, 723, 104, 384, 90, 1380,
	791, 792, 793, 794, 795, 788, 1064, 778, 798, 1825,
	778, 1771, 497, 689, 1574, 704, 1282, 705, 686, 983,
	706, 916, 773, 140, 1048, 680, 683, 684, 1541, 656,
	686, 753, 1339, 677, 681, 1872, 700, 680, 1873, 808,
	1871, 867, 91, 755, 117, 1139, 701, 1364, 394, 934,
	738, 140, 686, 140, 140, 1139, 394, 69, 1759, 1757,
	985, 1240, 394, 697, 1089, 866, 696, 712, 1303, 1451,
	772, 1051, 770, 1241, 826, 1799, 405, 771, 1087, 1088,
	1086, 1660, 1331, 1332, 1333, 883, 810, 811, 1702, 1860,
	895, 947, 864, 1701, 787, 786, 796, 797, 789, 790,
	791, 792, 793, 794, 795, 788, 722, 880, 798, 841,
	843, 845, 847, 849, 851, 852, 1861, 1615, 663, 842,
	844, 510, 848, 850, 708, 853, 1465, 484, 861, 810,
	811, 960, 963, 964, 965, 966, 967, 968, 1049, 969,
	970, 971, 972, 973, 948, 949, 950, 951, 932, 933,
	961, 1168, 935, 868, 936, 937, 938, 939, 940, 941,
	942, 943, 944, 945, 952, 953, 954, 955, 956, 957,
	958, 959, 787, 786, 796, 797, 789, 790, 791, 792,
	793, 794, 795, 788, 1464, 1052, 798, 1279, 787, 786,
	796, 797, 789, 790, 791, 792, 793, 794, 795, 788,
	67, 140, 798, 715, 716, 975, 129, 130, 131, 1863,
	1171, 1172, 1085, 1167, 140, 666, 986, 987, 1862, 789,
	790, 791, 792, 793, 794, 795, 788, 394, 995, 798,
	777, 775, 962, 776, 777, 775, 1004, 776, 777, 775,
	1878, 1543, 989, 1852, 776, 777, 775, 778, 1008, 1011,
	1015, 778, 1841, 1850, 394, 778, 1014, 1353, 140, 1823,
	1731, 992, 778, 140, 1466, 1601, 140, 1032, 1551, 140,
	796, 797, 789, 790, 791, 792, 793, 794, 795, 788,
	1851, 140, 798, 140, 676, 1699, 1673, 776, 777, 775,
	776, 777, 775, 1553, 1474, 394, 394, 140, 394, 394,
	140, 394, 394, 1352, 1462, 778, 1879, 974, 778, 878,
	1036, 1351, 1003, 1035, 911, 1328, 1552, 484, 1018, 1039,
	1037, 1041, 1622, 1043, 1044, 1045, 1046, 1667, 1573, 1002,
	994, 990, 76, 116, 1764, 776, 777, 775, 1763, 776,
	777, 775, 1628, 1845, 1053, 1680, 129, 130, 131, 1106,
	1769, 1628, 1807, 778, 1628, 1803, 1083, 778, 1108, 1054,
	1055, 1713, 1057, 1058, 669, 1060, 1061, 1028, 668, 129,
	130, 131, 394, 787, 786, 796, 797, 789, 790, 791,
	792, 793, 794, 795, 788, 1628, 1797, 798, 1477, 1127,
	1130, 1109, 1110, 1628, 484, 1140, 1077, 1079, 1080, 690,
	691, 1238, 505, 1062, 774, 394, 394, 698, 1078, 484,
	1084, 129, 130, 131, 500, 1107, 140, 1122, 1118, 1770,
	779, 1605, 470, 1672, 484, 1117, 1683, 484, 394, 129,
	130, 131, 1191, 1486, 1562, 140, 1628, 1627, 394, 1116,
	826, 1398, 140, 1573, 140, 431, 430, 433, 434, 435,
	436, 1212, 140, 140, 432, 437, 405, 1146, 1147, 394,
	1607, 1606, 394, 1603, 1604, 836, 1206, 129, 130, 131,
	1212, 1444, 141, 394, 394, 141, 1119, 1398, 1161, 78,
	395, 1445, 141, 1603, 1602, 1118, 1179, 484, 1173, 129,
	130, 131, 1185, 1291, 872, 875, 978, 1492, 1181, 1431,
	502, 503, 1487, 1488, 1191, 484, 1116, 1211, 1234, 1191,
	395, 33, 1213, 395, 141, 395, 33, 774, 484, 1237,
	1215, 978, 977, 1219, 510, 923, 922, 510, 33, 394,
	1190, 1213, 1369, 1368, 1179, 1180, 477, 1183, 1231, 1211,
	1290, 1405, 394, 1211, 1179, 1573, 141, 394, 141, 1169,
	1266, 1004, 1214, 1004, 1217, 141, 1218, 1209, 685, 1289,
	141, 1236, 394, 1406, 1235, 1150, 1026, 908, 1309, 672,
	140, 140, 140, 140, 140, 1748, 1293, 140, 140, 1471,
	1191, 140, 394, 1307, 1804, 67, 67, 1720, 1712, 1691,
	67, 980, 1704, 1120, 1121, 1265, 1306, 1621, 1298, 140,
	140, 140, 67, 1244, 1179, 1245, 1246, 1247, 1248, 1659,
	67, 1261, 1278, 140, 1267, 1277, 140, 394, 1288, 1262,
	1263, 1256, 1257, 1258, 1259, 1255, 1297, 1301, 1296, 1302,
	1254, 1251, 1252, 1253, 1267, 996, 1162, 1322, 1666, 1705,
	1706, 1707, 1513, 1326, 1300, 976, 1321, 92, 662, 1503,
	1123, 1124, 1708, 1721, 1129, 1132, 1133, 1276, 1470, 1005,
	1866, 1083, 787, 786, 796, 797, 789, 790, 791, 792,
	793, 794, 795, 788, 1577, 1578, 798, 1858, 1596, 1145,
	1580, 1562, 1148, 1149, 787, 786, 796, 797, 789, 790,
	791, 792, 793, 794, 795, 788, 1709, 1710, 798, 1484,
	1065, 140, 1471, 1006, 1007, 1030, 1583, 1422, 1420, 140,
	1582, 1334, 1423, 1421, 1419, 1084, 787, 786, 796, 797,
	789, 790, 791, 792, 793, 794, 795, 788, 1418, 1847,
	798, 140, 1828, 1554, 1348, 1424, 1038, 1200, 1201, 1387,
	877, 1684, 140, 140, 140, 140, 140, 1347, 1412, 1396,
	475, 1395, 1407, 1819, 140, 1816, 1849, 1832, 140, 1403,
	1834, 140, 140, 1363, 1840, 140, 140, 140, 1400, 1385,
	864, 1384, 1429, 1839, 1375, 96, 1793, 1386, 1443, 1383,
	394, 141, 1791, 1391, 1025, 471, 1475, 1072, 1073, 1074,
	1075, 1390, 695, 1446, 1135, 694, 1399, 1470, 1432, 1401,
	490, 1457, 1434, 1801, 1308, 395, 1414, 1415, 1136, 1417,
	1413, 1035, 1012, 1416, 491, 1425, 1430, 870, 988, 395,
	395, 124, 1435, 921, 136, 1438, 720, 394, 1497, 871,
	1448, 1456, 1496, 1458, 1459, 1460, 1450, 881, 882, 493,
	1485, 492, 1125, 1126, 1473, 1231, 108, 1800, 1746, 394,
	1299, 1004, 1017, 1491, 1463, 1016, 997, 1678, 1106, 1106,
	1171, 1172, 1286, 1164, 1472, 1029, 1765, 1204, 478, 479,
	481, 394, 1196, 1199, 1200, 1201, 1197, 1341, 1198, 1202,
	1854, 1342, 1577, 1578, 1196, 1199, 1200, 1201, 1197, 1853,
	1198, 1202, 1349, 1350, 1837, 141, 1820, 394, 1356, 1499,
	1118, 1359, 1360, 1106, 1500, 1501, 1677, 1117, 482, 1366,
	78, 1367, 1676, 1557, 1370, 1371, 1372, 1373, 1374, 1398,
	395, 1498, 1512, 141, 1358, 141, 141, 1495, 395, 1225,
	1510, 1355, 1511, 394, 395, 1509, 1343, 1344, 1520, 1454,
	1455, 891, 1534, 140, 884, 1518, 1394, 490, 1868, 1533,
	1868, 1867, 1540, 394, 1393, 1794, 1697, 1361, 1521, 394,
	394, 491, 1519, 1412, 1563, 1165, 477, 76, 81, 73,
	1, 369, 1151, 862, 1427, 1428, 381, 1856, 1636, 1717,
	1287, 1566, 140, 1572, 487, 488, 493, 1467, 492, 1268,
	1270, 679, 1228, 89, 649, 88, 394, 682, 394, 752,
	1581, 1571, 1292, 1585, 1756, 1587, 1452, 1588, 1600, 1242,
	1695, 1594, 1631, 1595, 1449, 1560, 1798, 929, 1519, 1586,
	927, 928, 926, 931, 930, 925, 1616, 1066, 391, 140,
	1203, 1593, 917, 885, 1608, 140, 1598, 1599, 394, 1239,
	1063, 1613, 1614, 376, 739, 372, 806, 1392, 1625, 1612,
	1439, 1611, 511, 504, 1637, 394, 394, 394, 1711, 140,
	1568, 1231, 95, 1231, 1838, 1817, 1815, 1790, 1742, 1818,
	1788, 1626, 1624, 141, 1848, 1831, 1163, 1630, 1629, 873,
	1675, 1556, 1362, 1633, 835, 1137, 141, 900, 414, 1076,
	429, 426, 427, 1174, 1340, 1404, 780, 412, 406, 395,
	1642, 1643, 892, 1195, 1651, 1193, 1192, 904, 1579, 1575,
	898, 1178, 1516, 1517, 787, 786, 796, 797, 789, 790,
	791, 792, 793, 794, 795, 788, 395, 1480, 798, 981,
	141, 1412, 1646, 1280, 1618, 141, 661, 486, 141, 1679,
	93, 141, 1134, 1778, 394, 1663, 485, 1688, 59, 36,
	398, 1842, 1365, 141, 1824, 141, 765, 1446, 494, 1694,
	30, 29, 28, 1687, 23, 22, 21, 395, 395, 141,
	395, 395, 141, 395, 395, 20, 1693, 1569, 19, 394,
	1388, 1389, 875, 25, 18, 17, 394, 16, 103, 46,
	43, 41, 109, 110, 44, 40, 1648, 1649, 1584, 1650,
	1724, 710, 1652, 1716, 1654, 27, 26, 15, 14, 1231,
	13, 12, 11, 10, 9, 5, 4, 768, 24, 394,
	394, 394, 140, 394, 824, 2, 0, 0, 0, 1734,
	1736, 1737, 0, 0, 394, 0, 394, 0, 0, 0,
	0, 1738, 394, 0, 395, 0, 1674, 1749, 1747, 1745,
	0, 1719, 1754, 1751, 0, 1566, 1722, 0, 0, 1566,
	0, 0, 0, 394, 1760, 140, 0, 1768, 0, 0,
	0, 394, 140, 1766, 0, 1730, 0, 395, 395, 0,
	1761, 1772, 1762, 0, 0, 0, 0, 1645, 141, 441,
	0, 1647, 0, 0, 0, 0, 1698, 0, 1700, 1753,
	395, 1787, 1656, 1657, 0, 1755, 0, 141, 0, 0,
	395, 0, 0, 0, 141, 0, 141, 1795, 1671, 0,
	0, 394, 394, 1566, 141, 141, 0, 0, 0, 0,
	1802, 395, 1805, 0, 395, 1806, 1681, 1682, 0, 139,
	1686, 0, 389, 1723, 0, 395, 395, 394, 1812, 139,
	0, 0, 1412, 1821, 0, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 1827, 1826, 0, 1740, 0, 1836,
	1835, 0, 498, 498, 0, 0, 0, 1542, 0, 0,
	0, 139, 1846, 0, 0, 0, 1719, 1231, 787, 786,
	796, 797, 789, 790, 791, 792, 793, 794, 795, 788,
	0, 395, 798, 0, 0, 1658, 0, 0, 0, 1865,
	0, 1558, 0, 139, 395, 139, 0, 0, 0, 395,
	1875, 0, 139, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 0, 0, 395, 0, 0, 1735, 0, 0,
	0, 0, 141, 141, 141, 141, 141, 0, 0, 141,
	141, 0, 0, 141, 395, 786, 796, 797, 789, 790,
	791, 792, 793, 794, 795, 788, 0, 0, 798, 0,
	0, 141, 141, 141, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 141, 395,
	0, 0, 0, 0, 1774, 1775, 1776, 1777, 0, 1781,
	0, 1782, 1783, 1784, 0, 1785, 1786, 0, 0, 0,
	0, 440, 787, 786, 796, 797, 789, 790, 791, 792,
	793, 794, 795, 788, 0, 0, 798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 33, 34, 35,
	68, 37, 38, 0, 0, 0, 0, 1808, 0, 0,
	0, 0, 0, 0, 0, 0, 1665, 72, 0, 0,
	0, 0, 39, 65, 66, 0, 63, 0, 0, 393,
	0, 0, 64, 141, 0, 0, 0, 0, 0, 0,
	405, 141, 0, 0, 0, 0, 0, 1689, 0, 0,
	1690, 0, 0, 1692, 0, 0, 0, 0, 0, 512,
	0, 52, 653, 141, 660, 0, 0, 0, 0, 0,
	0, 67, 0, 0, 141, 141, 141, 141, 141, 0,
	0, 0, 0, 0, 0, 0, 141, 0, 0, 0,
	141, 0, 0, 141, 141, 0, 0, 141, 141, 141,
	0, 0, 0, 0, 0, 782, 0, 785, 139, 0,
	0, 0, 395, 799, 800, 801, 802, 803, 804, 805,
	0, 783, 784, 781, 787, 786, 796, 797, 789, 790,
	791, 792, 793, 794, 795, 788, 0, 0, 798, 0,
	0, 0, 42, 45, 48, 47, 50, 0, 62, 1744,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 71, 70, 0, 0, 60, 61, 49,
	0, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	408, 0, 0, 395, 0, 0, 0, 53, 54, 0,
	55, 56, 57, 58, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 395,
	0, 0, 0, 0, 0, 0, 498, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 139, 907, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 141, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 0, 0, 0,
	0, 395, 395, 0, 0, 0, 0, 0, 443, 32,
	0, 0, 0, 0, 0, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 141, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 395, 0,
	395, 32, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 0, 0, 0,
	0, 141, 0, 0, 0, 0, 0, 141, 764, 766,
	395, 865, 0, 0, 476, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 395, 395, 395,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 139, 0, 0, 0, 0, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 0, 0,
	1010, 1010, 0, 0, 0, 0, 0, 0, 1010, 0,
	0, 0, 0, 0, 0, 0, 0, 139, 0, 0,
	0, 0, 139, 657, 0, 139, 0, 0, 1034, 888,
	0, 0, 0, 0, 0, 0, 395, 512, 0, 0,
	139, 0, 139, 918, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 139, 703, 0, 139,
	0, 0, 0, 0, 711, 0, 0, 0, 0, 717,
	0, 395, 0, 0, 0, 0, 0, 0, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 395, 395, 395, 141, 395, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 395, 0, 395, 0,
	0, 0, 498, 1034, 395, 0, 0, 498, 498, 0,
	0, 498, 498, 498, 0, 0, 0, 1010, 0, 0,
	0, 0, 0, 0, 0, 395, 0, 141, 0, 0,
	0, 0, 0, 395, 141, 0, 498, 498, 498, 498,
	498, 0, 0, 0, 0, 1159, 0, 812, 813, 814,
	815, 816, 817, 818, 819, 820, 821, 0, 0, 0,
	0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	1034, 139, 0, 139, 0, 0, 0, 0, 653, 0,
	0, 139, 139, 395, 395, 0, 0, 0, 0, 0,
	0, 0, 1009, 1009, 0, 0, 0, 0, 0, 0,
	1009, 0, 0, 0, 0, 512, 0, 0, 0, 395,
	0, 761, 0, 0, 0, 0, 0, 395, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 32, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 807, 809,
	0, 0, 0, 0, 0, 0, 512, 512, 0, 512,
	512, 0, 512, 512, 0, 0, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 0, 0, 822,
	0, 0, 0, 827, 828, 829, 830, 831, 832, 833,
	834, 0, 837, 840, 840, 840, 846, 840, 840, 846,
	840, 854, 855, 856, 857, 858, 859, 860, 0, 139,
	139, 139, 139, 139, 0, 32, 139, 139, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1111, 0, 512, 0, 0, 1323, 1324,
	139, 901, 0, 0, 0, 0, 0, 0, 0, 1009,
	0, 0, 139, 0, 0, 139, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1143, 1144, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1175,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 888,
	0, 0, 512, 498, 498, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 905, 0, 0, 0, 0,
	512, 0, 0, 512, 498, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 653, 0, 0, 0, 0,
	139, 0, 0, 0, 0, 0, 0, 0, 1159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 498,
	139, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1010, 139, 139, 139, 139, 139, 0, 0, 0, 0,
	660, 0, 0, 1426, 0, 0, 0, 139, 0, 0,
	139, 139, 0, 653, 139, 1436, 1034, 0, 660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1081, 0, 653, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 0,
	0, 0, 761, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 924, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 984, 0, 0, 1330, 0,
	0, 1142, 0, 761, 761, 1010, 761, 761, 0, 761,
	761, 0, 0, 0, 0, 1034, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1024,
	0, 0, 0, 0, 905, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 0, 498, 0, 0, 0, 0,
	0, 0, 1040, 0, 1042, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1056, 0,
	0, 1059, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 139, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1010, 0, 0, 0, 0,
	0, 0, 1009, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1207, 512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 139, 0,
	0, 0, 0, 0, 139, 0, 0, 0, 0, 0,
	1010, 0, 0, 0, 0, 0, 0, 0, 1476, 0,
	0, 0, 0, 0, 0, 0, 1182, 0, 139, 0,
	0, 0, 0, 1186, 0, 1189, 0, 1009, 0, 0,
	1494, 0, 0, 0, 1208, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 1336,
	1337, 0, 512, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 0,
	0, 0, 0, 1010, 0, 0, 0, 0, 0, 0,
	761, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 0, 0, 1009, 0, 0,
	1570, 1550, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1310, 1311, 1312, 1313, 1314, 0, 0, 1318, 1319,
	0, 0, 1320, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1345, 0, 512, 476, 512,
	0, 1159, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1327, 0, 0, 1329, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1382, 0, 0, 0, 653,
	0, 0, 1009, 0, 139, 0, 0, 0, 0, 0,
	0, 139, 0, 0, 0, 0, 1638, 1639, 1640, 901,
	0, 0, 0, 0, 0, 0, 1408, 1409, 0, 0,
	901, 901, 901, 901, 901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1207, 0, 0, 901,
	0, 0, 0, 901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1514, 1515, 0, 0, 1010, 1009, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1535, 1536, 0, 1537, 1538,
	0, 0, 0, 0, 0, 512, 0, 0, 0, 1544,
	1545, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1433, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1715, 0, 0, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1494, 1494, 1494, 0, 1739, 0, 0, 0, 0, 0,
	0, 1597, 0, 0, 0, 1750, 0, 1752, 0, 0,
	0, 0, 0, 1494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1494, 0, 0, 0, 0, 0,
	0, 0, 1494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1567, 0, 32, 0, 0,
	0, 0, 0, 0, 1644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	901, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 512, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1555, 0, 1009, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 1494, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1662, 0,
	0, 0, 0, 0, 0, 1668, 1669, 1670, 0, 0,
	1617, 0, 0, 0, 0, 0, 1623, 0, 0, 1725,
	1726, 1727, 1728, 1729, 0, 0, 0, 1732, 1733, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1567,
	0, 32, 0, 1567, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 32, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	633, 620, 0, 1773, 572, 636, 543, 561, 645, 563,
	566, 604, 524, 585, 256, 558, 0, 547, 520, 554,
	521, 545, 574, 183, 578, 542, 622, 588, 635, 220,
	0, 548, 268, 606, 299, 171, 228, 226, 321, 189,
	185, 182, 170, 206, 233, 267, 316, 261, 642, 223,
	595, 0, 308, 242, 0, 0, 0, 576, 625, 583,
	616, 571, 605, 532, 594, 637, 559, 602, 638, 211,
	169, 147, 253, 309, 191, 0, 0, 0, 129, 130,
	131, 0, 1232, 1233, 0, 0, 0, 0, 0, 165,
	0, 599, 632, 556, 601, 180, 209, 184, 179, 319,
	603, 648, 519, 596, 0, 522, 525, 644, 628, 551,
	552, 1447, 0, 0, 0, 0, 0, 0, 575, 584,
	613, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	549, 0, 593, 0, 0, 0, 528, 523, 0, 0,
	0, 0, 573, 0, 0, 0, 531, 0, 550, 614,
	0, 517, 197, 526, 618, 627, 570, 345, 631, 568,
	567, 634, 609, 529, 624, 562, 219, 527, 216, 143,
	156, 0, 560, 252, 286, 290, 623, 546, 555, 172,
	553, 288, 265, 334, 592, 269, 287, 224, 323, 280,
	333, 346, 347, 178, 246, 340, 317, 343, 355, 157,
	175, 259, 313, 337, 305, 241, 320, 215, 304, 196,
	146, 149, 315, 331, 166, 298, 0, 0, 0, 151,
	329, 312, 239, 212, 213, 150, 0, 284, 181, 194,
	174, 255, 326, 327, 173, 356, 158, 342, 153, 159,
	341, 248, 322, 330, 240, 232, 152, 328, 238, 231,
	218, 188, 202, 278, 227, 279, 203, 244, 243, 245,
	0, 148, 0, 310, 338, 357, 163, 541, 619, 318,
	351, 354, 0, 281, 164, 195, 187, 277, 193, 221,
	350, 352, 353, 162, 275, 200, 247, 160, 205, 306,
	217, 225, 611, 647, 264, 289, 167, 336, 307, 536,
	540, 534, 535, 586, 587, 537, 639, 640, 641, 615,
	530, 0, 538, 539, 0, 621, 629, 630, 591, 142,
	154, 222, 643, 282, 192, 339, 518, 533, 177, 544,
	0, 0, 557, 564, 565, 577, 579, 580, 581, 582,
	590, 597, 598, 600, 607, 608, 610, 612, 617, 626,
	646, 144, 145, 155, 161, 168, 176, 186, 190, 198,
	201, 204, 207, 208, 210, 214, 230, 234, 235, 236,
	237, 249, 250, 251, 254, 257, 258, 260, 262, 263,
	266, 270, 271, 272, 273, 274, 276, 283, 285, 291,
	292, 293, 294, 295, 296, 297, 300, 301, 302, 303,
	311, 314, 324, 325, 335, 344, 348, 199, 332, 349,
	0, 229, 589, 633, 620, 0, 0, 572, 636, 543,
	561, 645, 563, 566, 604, 524, 585, 256, 558, 0,
	547, 520, 554, 521, 545, 574, 183, 578, 542, 622,
	588, 635, 220, 0, 548, 268, 606, 299, 171, 228,
	226, 321, 189, 185, 182, 170, 206, 233, 267, 316,
	261, 642, 223, 595, 0, 308, 242, 0, 0, 0,
	576, 625, 583, 616, 571, 605, 532, 594, 637, 559,
	602, 638, 211, 169, 147, 253, 309, 191, 0, 0,
	0, 129, 130, 131, 0, 1232, 1233, 0, 0, 0,
	0, 0, 165, 0, 599, 632, 556, 601, 180, 209,
	184, 179, 319, 603, 648, 519, 596, 0, 522, 525,
	644, 628, 551, 552, 0, 0, 0, 0, 0, 0,
	0, 575, 584, 613, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 0, 593, 0, 0, 0, 528,
	523, 0, 0, 0, 0, 573, 0, 0, 0, 531,
	0, 550, 614, 0, 517, 197, 526, 618, 627, 570,
	345, 631, 568, 567, 634, 609, 529, 624, 562, 219,
	527, 216, 143, 156, 0, 560, 252, 286, 290, 623,
	546, 555, 172, 553, 288, 265, 334, 592, 269, 287,
	224, 323, 280, 333, 346, 347, 178, 246, 340, 317,
	343, 355, 157, 175, 259, 313, 337, 305, 241, 320,
	215, 304, 196, 146, 149, 315, 331, 166, 298, 0,
	0, 0, 151, 329, 312, 239, 212, 213, 150, 0,
	284, 181, 194, 174, 255, 326, 327, 173, 356, 158,
	342, 153, 159, 341, 248, 322, 330, 240, 232, 152,
	328, 238, 231, 218, 188, 202, 278, 227, 279, 203,
	244, 243, 245, 0, 148, 0, 310, 338, 357, 163,
	541, 619, 318, 351, 354, 0, 281, 164, 195, 187,
	277, 193, 221, 350, 352, 353, 162, 275, 200, 247,
	160, 205, 306, 217, 225, 611, 647, 264, 289, 167,
	336, 307, 536, 540, 534, 535, 586, 587, 537, 639,
	640, 641, 615, 530, 0, 538, 539, 0, 621, 629,
	630, 591, 142, 154, 222, 643, 282, 192, 339, 518,
	533, 177, 544, 0, 0, 557, 564, 565, 577, 579,
	580, 581, 582, 590, 597, 598, 600, 607, 608, 610,
	612, 617, 626, 646, 144, 145, 155, 161, 168, 176,
	186, 190, 198, 201, 204, 207, 208, 210, 214, 230,
	234, 235, 236, 237, 249, 250, 251, 254, 257, 258,
	260, 262, 263, 266, 270, 271, 272, 273, 274, 276,
	283, 285, 291, 292, 293, 294, 295, 296, 297, 300,
	301, 302, 303, 311, 314, 324, 325, 335, 344, 348,
	199, 332, 349, 0, 229, 589, 633, 620, 0, 0,
	572, 636, 543, 561, 645, 563, 566, 604, 524, 585,
	256, 558, 0, 547, 520, 554, 521, 545, 574, 183,
	578, 542, 622, 588, 635, 220, 0, 548, 268, 606,
	299, 171, 228, 226, 321, 189, 185, 182, 170, 206,
	233, 267, 316, 261, 642, 223, 595, 0, 308, 242,
	0, 0, 0, 576, 625, 583, 616, 571, 605, 532,
	594, 637, 559, 602, 638, 211, 169, 147, 253, 309,
	191, 0, 0, 0, 129, 130, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 599, 632, 556,
	601, 180, 209, 184, 179, 319, 603, 648, 519, 596,
	0, 522, 525, 644, 628, 551, 552, 0, 0, 0,
	0, 0, 0, 0, 575, 584, 613, 569, 0, 0,
	0, 0, 0, 0, 1559, 0, 549, 0, 593, 0,
	0, 0, 528, 523, 0, 0, 0, 0, 573, 0,
	0, 0, 531, 0, 550, 614, 0, 517, 197, 526,
	618, 627, 570, 345, 631, 568, 567, 634, 609, 529,
	624, 562, 219, 527, 216, 143, 156, 0, 560, 252,
	286, 290, 623, 546, 555, 172, 553, 288, 265, 334,
	592, 269, 287, 224, 323, 280, 333, 346, 347, 178,
	246, 340, 317, 343, 355, 157, 175, 259, 313, 337,
	305, 241, 320, 215, 304, 196, 146, 149, 315, 331,
	166, 298, 0, 0, 0, 151, 329, 312, 239, 212,
	213, 150, 0, 284, 181, 194, 174, 255, 326, 327,
	173, 356, 158, 342, 153, 159, 341, 248, 322, 330,
	240, 232, 152, 328, 238, 231, 218, 188, 202, 278,
	227, 279, 203, 244, 243, 245, 0, 148, 0, 310,
	338, 357, 163, 541, 619, 318, 351, 354, 0, 281,
	164, 195, 187, 277, 193, 221, 350, 352, 353, 162,
	275, 200, 247, 160, 205, 306, 217, 225, 611, 647,
	264, 289, 167, 336, 307, 536, 540, 534, 535, 586,
	587, 537, 639, 640, 641, 615, 530, 0, 538, 539,
	0, 621, 629, 630, 591, 142, 154, 222, 643, 282,
	192, 339, 518, 533, 177, 544, 0, 0, 557, 564,
	565, 577, 579, 580, 581, 582, 590, 597, 598, 600,
	607, 608, 610, 612, 617, 626, 646, 144, 145, 155,
	161, 168, 176, 186, 190, 198, 201, 204, 207, 208,
	210, 214, 230, 234, 235, 236, 237, 249, 250, 251,
	254, 257, 258, 260, 262, 263, 266, 270, 271, 272,
	273, 274, 276, 283, 285, 291, 292, 293, 294, 295,
	296, 297, 300, 301, 302, 303, 311, 314, 324, 325,
	335, 344, 348, 199, 332, 349, 0, 229, 589, 633,
	620, 0, 0, 572, 636, 543, 561, 645, 563, 566,
	604, 524, 585, 256, 558, 0, 547, 520, 554, 521,
	545, 574, 183, 578, 542, 622, 588, 635, 220, 0,
	548, 268, 606, 299, 171, 228, 226, 321, 189, 185,
	182, 170, 206, 233, 267, 316, 261, 642, 223, 595,
	0, 308, 242, 0, 0, 0, 576, 625, 583, 616,
	571, 605, 532, 594, 637, 559, 602, 638, 211, 169,
	147, 253, 309, 191, 67, 0, 0, 129, 130, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	599, 632, 556, 601, 180, 209, 184, 179, 319, 603,
	648, 519, 596, 0, 522, 525, 644, 628, 551, 552,
	0, 0, 0, 0, 0, 0, 0, 575, 584, 613,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	0, 593, 0, 0, 0, 528, 523, 0, 0, 0,
	0, 573, 0, 0, 0, 531, 0, 550, 614, 0,
	517, 197, 526, 618, 627, 570, 345, 631, 568, 567,
	634, 609, 529, 624, 562, 219, 527, 216, 143, 156,
	0, 560, 252, 286, 290, 623, 546, 555, 172, 553,
	288, 265, 334, 592, 269, 287, 224, 323, 280, 333,
	346, 347, 178, 246, 340, 317, 343, 355, 157, 175,
	259, 313, 337, 305, 241, 320, 215, 304, 196, 146,
	149, 315, 331, 166, 298, 0, 0, 0, 151, 329,
	312, 239, 212, 213, 150, 0, 284, 181, 194, 174,
	255, 326, 327, 173, 356, 158, 342, 153, 159, 341,
	248, 322, 330, 240, 232, 152, 328, 238, 231, 218,
	188, 202, 278, 227, 279, 203, 244, 243, 245, 0,
	148, 0, 310, 338, 357, 163, 541, 619, 318, 351,
	354, 0, 281, 164, 195, 187, 277, 193, 221, 350,
	352, 353, 162, 275, 200, 247, 160, 205, 306, 217,
	225, 611, 647, 264, 289, 167, 336, 307, 536, 540,
	534, 535, 586, 587, 537, 639, 640, 641, 615, 530,
	0, 538, 539, 0, 621, 629, 630, 591, 142, 154,
	222, 643, 282, 192, 339, 518, 533, 177, 544, 0,
	0, 557, 564, 565, 577, 579, 580, 581, 582, 590,
	597, 598, 600, 607, 608, 610, 612, 617, 626, 646,
	144, 145, 155, 161, 168, 176, 186, 190, 198, 201,
	204, 207, 208, 210, 214, 230, 234, 235, 236, 237,
	249, 250, 251, 254, 257, 258, 260, 262, 263, 266,
	270, 271, 272, 273, 274, 276, 283, 285, 291, 292,
	293, 294, 295, 296, 297, 300, 301, 302, 303, 311,
	314, 324, 325, 335, 344, 348, 199, 332, 349, 0,
	229, 589, 633, 620, 0, 0, 572, 636, 543, 561,
	645, 563, 566, 604, 524, 585, 256, 558, 0, 547,
	520, 554, 521, 545, 574, 183, 578, 542, 622, 588,
	635, 220, 0, 548, 268, 606, 299, 171, 228, 226,
	321, 189, 185, 182, 170, 206, 233, 267, 316, 261,
	642, 223, 595, 0, 308, 242, 0, 0, 0, 576,
	625, 583, 616, 571, 605, 532, 594, 637, 559, 602,
	638, 211, 169, 147, 253, 309, 191, 0, 0, 0,
	129, 130, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 599, 632, 556, 601, 180, 209, 184,
	179, 319, 603, 648, 519, 596, 0, 522, 525, 644,
	628, 551, 552, 0, 0, 0, 0, 0, 0, 0,
	575, 584, 613, 569, 0, 0, 0, 0, 0, 0,
	1437, 0, 549, 0, 593, 0, 0, 0, 528, 523,
	0, 0, 0, 0, 573, 0, 0, 0, 531, 0,
	550, 614, 0, 517, 197, 526, 618, 627, 570, 345,
	631, 568, 567, 634, 609, 529, 624, 562, 219, 527,
	216, 143, 156, 0, 560, 252, 286, 290, 623, 546,
	555, 172, 553, 288, 265, 334, 592, 269, 287, 224,
	323, 280, 333, 346, 347, 178, 246, 340, 317, 343,
	355, 157, 175, 259, 313, 337, 305, 241, 320, 215,
	304, 196, 146, 149, 315, 331, 166, 298, 0, 0,
	0, 151, 329, 312, 239, 212, 213, 150, 0, 284,
	181, 194, 174, 255, 326, 327, 173, 356, 158, 342,
	153, 159, 341, 248, 322, 330, 240, 232, 152, 328,
	238, 231, 218, 188, 202, 278, 227, 279, 203, 244,
	243, 245, 0, 148, 0, 310, 338, 357, 163, 541,
	619, 318, 351, 354, 0, 281, 164, 195, 187, 277,
	193, 221, 350, 352, 353, 162, 275, 200, 247, 160,
	205, 306, 217, 225, 611, 647, 264, 289, 167, 336,
	307, 536, 540, 534, 535, 586, 587, 537, 639, 640,
	641, 615, 530, 0, 538, 539, 0, 621, 629, 630,
	591, 142, 154, 222, 643, 282, 192, 339, 518, 533,
	177, 544, 0, 0, 557, 564, 565, 577, 579, 580,
	581, 582, 590, 597, 598, 600, 607, 608, 610, 612,
	617, 626, 646, 144, 145, 155, 161, 168, 176, 186,
	190, 198, 201, 204, 207, 208, 210, 214, 230, 234,
	235, 236, 237, 249, 250, 251, 254, 257, 258, 260,
	262, 263, 266, 270, 271, 272, 273, 274, 276, 283,
	285, 291, 292, 293, 294, 295, 296, 297, 300, 301,
	302, 303, 311, 314, 324, 325, 335, 344, 348, 199,
	332, 349, 0, 229, 589, 633, 620, 0, 0, 572,
	636, 543, 561, 645, 563, 566, 604, 524, 585, 256,
	558, 0, 547, 520, 554, 521, 545, 574, 183, 578,
	542, 622, 588, 635, 220, 0, 548, 268, 606, 299,
	171, 228, 226, 321, 189, 185, 182, 170, 206, 233,
	267, 316, 261, 642, 223, 595, 0, 308, 242, 0,
	0, 0, 576, 625, 583, 616, 571, 605, 532, 594,
	637, 559, 602, 638, 211, 169, 147, 253, 309, 191,
	0, 0, 0, 129, 130, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 599, 632, 556, 601,
	180, 209, 184, 179, 319, 603, 648, 519, 596, 0,
	522, 525, 644, 628, 551, 552, 0, 0, 0, 0,
	0, 0, 0, 575, 584, 613, 569, 0, 0, 0,
	0, 0, 0, 1184, 0, 549, 0, 593, 0, 0,
	0, 528, 523, 0, 0, 0, 0, 573, 0, 0,
	0, 531, 0, 550, 614, 0, 517, 197, 526, 618,
	627, 570, 345, 631, 568, 567, 634, 609, 529, 624,
	562, 219, 527, 216, 143, 156, 0, 560, 252, 286,
	290, 623, 546, 555, 172, 553, 288, 265, 334, 592,
	269, 287, 224, 323, 280, 333, 346, 347, 178, 246,
	340, 317, 343, 355, 157, 175, 259, 313, 337, 305,
	241, 320, 215, 304, 196, 146, 149, 315, 331, 166,
	298, 0, 0, 0, 151, 329, 312, 239, 212, 213,
	150, 0, 284, 181, 194, 174, 255, 326, 327, 173,
	356, 158, 342, 153, 159, 341, 248, 322, 330, 240,
	232, 152, 328, 238, 231, 218, 188, 202, 278, 227,
	279, 203, 244, 243, 245, 0, 148, 0, 310, 338,
	357, 163, 541, 619, 318, 351, 354, 0, 281, 164,
	195, 187, 277, 193, 221, 350, 352, 353, 162, 275,
	200, 247, 160, 205, 306, 217, 225, 611, 647, 264,
	289, 167, 336, 307, 536, 540, 534, 535, 586, 587,
	537, 639, 640, 641, 615, 530, 0, 538, 539, 0,
	621, 629, 630, 591, 142, 154, 222, 643, 282, 192,
	339, 518, 533, 177, 544, 0, 0, 557, 564, 565,
	577, 579, 580, 581, 582, 590, 597, 598, 600, 607,
	608, 610, 612, 617, 626, 646, 144, 145, 155, 161,
	168, 176, 186, 190, 198, 201, 204, 207, 208, 210,
	214, 230, 234, 235, 236, 237, 249, 250, 251, 254,
	257, 258, 260, 262, 263, 266, 270, 271, 272, 273,
	274, 276, 283, 285, 291, 292, 293, 294, 295, 296,
	297, 300, 301, 302, 303, 311, 314, 324, 325, 335,
	344, 348, 199, 332, 349, 0, 229, 589, 633, 620,
	0, 0, 572, 636, 543, 561, 645, 563, 566, 604,
	524, 585, 256, 558, 0, 547, 520, 554, 521, 545,
	574, 183, 578, 542, 622, 588, 635, 220, 0, 548,
	268, 606, 299, 171, 228, 226, 321, 189, 185, 182,
	170, 206, 233, 267, 316, 261, 642, 223, 595, 0,
	308, 242, 0, 0, 0, 576, 625, 583, 616, 571,
	605, 532, 594, 637, 559, 602, 638, 211, 169, 147,
	253, 309, 191, 0, 0, 0, 129, 130, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 599,
	632, 556, 601, 180, 209, 184, 179, 319, 603, 648,
	519, 596, 0, 522, 525, 644, 628, 551, 552, 0,
	0, 0, 0, 0, 0, 0, 575, 584, 613, 569,
	0, 0, 0, 0, 0, 0, 0, 0, 549, 0,
	593, 0, 0, 0, 528, 523, 0, 0, 0, 0,
	573, 0, 0, 0, 531, 0, 550, 614, 0, 517,
	197, 526, 618, 627, 570, 345, 631, 568, 567, 634,
	609, 529, 624, 562, 219, 527, 216, 143, 156, 0,
	560, 252, 286, 290, 623, 546, 555, 172, 553, 288,
	265, 334, 592, 269, 287, 224, 323, 280, 333, 346,
	347, 178, 246, 340, 317, 343, 355, 157, 175, 259,
	313, 337, 305, 241, 320, 215, 304, 196, 146, 149,
	315, 331, 166, 298, 0, 0, 0, 151, 329, 312,
	239, 212, 213, 150, 0, 284, 181, 194, 174, 255,
	326, 327, 173, 356, 158, 342, 153, 159, 341, 248,
	322, 330, 240, 232, 152, 328, 238, 231, 218, 188,
	202, 278, 227, 279, 203, 244, 243, 245, 0, 148,
	0, 310, 338, 357, 163, 541, 619, 318, 351, 354,
	0, 281, 164, 195, 187, 277, 193, 221, 350, 352,
	353, 162, 275, 200, 247, 160, 205, 306, 217, 225,
	611, 647, 264, 289, 167, 336, 307, 536, 540, 534,
	535, 586, 587, 537, 639, 640, 641, 615, 530, 0,
	538, 539, 0, 621, 629, 630, 591, 142, 154, 222,
	643, 282, 192, 339, 518, 533, 177, 544, 0, 0,
	557, 564, 565, 577, 579, 580, 581, 582, 590, 597,
	598, 600, 607, 608, 610, 612, 617, 626, 646, 144,
	145, 155, 161, 168, 176, 186, 190, 198, 201, 204,
	207, 208, 210, 214, 230, 234, 235, 236, 237, 249,
	250, 251, 254, 257, 258, 260, 262, 263, 266, 270,
	271, 272, 273, 274, 276, 283, 285, 291, 292, 293,
	294, 295, 296, 297, 300, 301, 302, 303, 311, 314,
	324, 325, 335, 344, 348, 199, 332, 349, 0, 229,
	589, 633, 620, 0, 0, 572, 636, 543, 561, 645,
	563, 566, 604, 524, 585, 256, 558, 0, 547, 520,
	554, 521, 545, 574, 183, 578, 542, 622, 588, 635,
	220, 0, 548, 268, 606, 299, 171, 228, 226, 321,
	189, 185, 182, 170, 206, 233, 267, 316, 261, 642,
	223, 595, 0, 308, 242, 0, 0, 0, 576, 625,
	583, 616, 571, 605, 532, 594, 637, 559, 602, 638,
	211, 169, 147, 253, 309, 191, 0, 0, 0, 129,
	130, 131, 0, 0, 0, 0, 0, 0, 0, 0,
	165, 0, 599, 632, 556, 601, 180, 209, 184, 179,
	319, 603, 648, 519, 596, 0, 522, 525, 644, 628,
	551, 552, 0, 0, 0, 0, 0, 0, 0, 575,
	584, 613, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 0, 593, 0, 0, 0, 528, 523, 0,
	0, 0, 0, 573, 0, 0, 0, 531, 0, 550,
	614, 0, 517, 197, 526, 618, 627, 570, 345, 631,
	568, 567, 634, 609, 529, 624, 562, 219, 527, 216,
	143, 156, 0, 560, 252, 286, 290, 623, 546, 555,
	172, 553, 288, 265, 334, 592, 269, 287, 224, 323,
	280, 333, 346, 347, 178, 246, 340, 317, 343, 355,
	157, 175, 259, 313, 337, 305, 241, 320, 215, 304,
	196, 146, 149, 315, 331, 166, 298, 0, 0, 0,
	151, 329, 312, 239, 212, 213, 150, 0, 284, 181,
	194, 174, 255, 326, 327, 173, 356, 158, 342, 153,
	515, 341, 248, 322, 330, 240, 232, 152, 328, 238,
	231, 218, 188, 202, 278, 227, 279, 203, 244, 243,
	245, 0, 148, 0, 310, 338, 357, 163, 541, 619,
	318, 351, 354, 0, 281, 164, 195, 187, 277, 193,
	221, 350, 352, 353, 162, 275, 200, 516, 514, 509,
	508, 217, 225, 611, 647, 264, 289, 167, 336, 307,
	536, 540, 534, 535, 586, 587, 537, 639, 640, 641,
	615, 530, 0, 538, 539, 0, 621, 629, 630, 591,
	142, 154, 222, 643, 282, 192, 339, 518, 533, 177,
	544, 0, 0, 557, 564, 565, 577, 579, 580, 581,
	582, 590, 597, 598, 600, 607, 608, 610, 612, 617,
	626, 646, 144, 145, 155, 161, 168, 176, 186, 190,
	198, 201, 204, 207, 208, 210, 214, 230, 234, 235,
	236, 237, 249, 250, 251, 254, 257, 258, 260, 262,
	263, 266, 270, 271, 272, 273, 274, 276, 283, 285,
	291, 292, 293, 294, 295, 296, 297, 300, 301, 302,
	303, 311, 314, 324, 325, 335, 344, 348, 199, 332,
	349, 0, 229, 589, 633, 620, 0, 0, 572, 636,
	543, 561, 645, 563, 566, 604, 524, 585, 256, 558,
	0, 547, 520, 554, 521, 545, 574, 183, 578, 542,
	622, 588, 635, 220, 0, 548, 268, 606, 299, 171,
	228, 226, 321, 189, 185, 182, 170, 206, 233, 267,
	316, 261, 642, 223, 595, 0, 308, 242, 0, 0,
	0, 576, 625, 583, 616, 571, 605, 532, 594, 637,
	559, 602, 638, 211, 169, 147, 253, 309, 191, 0,
	0, 0, 129, 130, 131, 0, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 599, 632, 556, 601, 180,
	209, 184, 179, 319, 603, 648, 519, 596, 0, 522,
	525, 644, 628, 551, 552, 0, 0, 0, 0, 0,
	0, 0, 575, 584, 613, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 549, 0, 593, 0, 0, 0,
	528, 523, 0, 0, 0, 0, 573, 0, 0, 0,
	531, 0, 550, 614, 0, 517, 197, 526, 618, 627,
	570, 345, 631, 568, 567, 634, 609, 529, 624, 562,
	219, 527, 216, 143, 156, 0, 560, 252, 286, 290,
	623, 546, 555, 172, 553, 288, 265, 334, 592, 269,
	287, 224, 323, 280, 333, 346, 347, 178, 246, 340,
	317, 343, 355, 157, 175, 259, 313, 337, 305, 241,
	320, 215, 304, 196, 146, 149, 315, 909, 166, 298,
	0, 0, 0, 151, 329, 312, 239, 212, 213, 150,
	0, 284, 181, 194, 174, 255, 326, 327, 173, 356,
	158, 342, 153, 515, 341, 248, 322, 330, 240, 232,
	152, 328, 238, 231, 218, 188, 202, 278, 227, 279,
	203, 244, 243, 245, 0, 148, 0, 310, 338, 357,
	163, 541, 619, 318, 351, 354, 0, 281, 164, 195,
	187, 277, 193, 221, 350, 352, 353, 162, 275, 200,
	516, 514, 509, 508, 217, 225, 611, 647, 264, 289,
	167, 336, 307, 536, 540, 534, 535, 586, 587, 537,
	639, 640, 641, 615, 530, 0, 538, 539, 0, 621,
	629, 630, 591, 142, 154, 222, 643, 282, 192, 339,
	518, 533, 177, 544, 0, 0, 557, 564, 565, 577,
	579, 580, 581, 582, 590, 597, 598, 600, 607, 608,
	610, 612, 617, 626, 646, 144, 145, 155, 161, 168,
	176, 186, 190, 198, 201, 204, 207, 208, 210, 214,
	230, 234, 235, 236, 237, 249, 250, 251, 254, 257,
	258, 260, 262, 263, 266, 270, 271, 272, 273, 274,
	276, 283, 285, 291, 292, 293, 294, 295, 296, 297,
	300, 301, 302, 303, 311, 314, 324, 325, 335, 344,
	348, 199, 332, 349, 0, 229, 589, 633, 620, 0,
	0, 572, 636, 543, 561, 645, 563, 566, 604, 524,
	585, 256, 558, 0, 547, 520, 554, 521, 545, 574,
	183, 578, 542, 622, 588, 635, 220, 0, 548, 268,
	606, 299, 171, 228, 226, 321, 189, 185, 182, 170,
	206, 233, 267, 316, 261, 642, 223, 595, 0, 308,
	242, 0, 0, 0, 576, 625, 583, 616, 571, 605,
	532, 594, 637, 559, 602, 638, 211, 169, 147, 253,
	309, 191, 0, 0, 0, 129, 130, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 599, 632,
	556, 601, 180, 209, 184, 179, 319, 603, 648, 519,
	596, 0, 522, 525, 644, 628, 551, 552, 0, 0,
	0, 0, 0, 0, 0, 575, 584, 613, 569, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 0, 593,
	0, 0, 0, 528, 523, 0, 0, 0, 0, 573,
	0, 0, 0, 531, 0, 550, 614, 0, 517, 197,
	526, 618, 627, 570, 345, 631, 568, 567, 634, 609,
	529, 624, 562, 219, 527, 216, 143, 156, 0, 560,
	252, 286, 290, 623, 546, 555, 172, 553, 288, 265,
	334, 592, 269, 287, 224, 323, 280, 333, 346, 347,
	178, 246, 340, 317, 343, 355, 157, 175, 259, 313,
	337, 305, 241, 320, 215, 304, 196, 146, 149, 315,
	506, 166, 298, 0, 0, 0, 151, 329, 312, 239,
	212, 213, 150, 0, 284, 181, 194, 174, 255, 326,
	327, 173, 356, 158, 342, 153, 515, 341, 248, 322,
	330, 240, 232, 152, 328, 238, 231, 218, 188, 202,
	278, 227, 279, 203, 244, 243, 245, 0, 148, 0,
	310, 338, 357, 163, 541, 619, 318, 351, 354, 0,
	281, 164, 195, 187, 277, 193, 221, 350, 352, 353,
	162, 275, 200, 516, 514, 509, 508, 217, 225, 611,
	647, 264, 289, 167, 336, 307, 536, 540, 534, 535,
	586, 587, 537, 639, 640, 641, 615, 530, 0, 538,
	539, 0, 621, 629, 630, 591, 142, 154, 222, 643,
	282, 192, 339, 518, 533, 177, 544, 0, 0, 557,
	564, 565, 577, 579, 580, 581, 582, 590, 597, 598,
	600, 607, 608, 610, 612, 617, 626, 646, 144, 145,
	155, 161, 168, 176, 186, 190, 198, 201, 204, 207,
	208, 210, 214, 230, 234, 235, 236, 237, 249, 250,
	251, 254, 257, 258, 260, 262, 263, 266, 270, 271,
	272, 273, 274, 276, 283, 285, 291, 292, 293, 294,
	295, 296, 297, 300, 301, 302, 303, 311, 314, 324,
	325, 335, 344, 348, 199, 332, 349, 256, 229, 589,
	1113, 0, 410, 0, 0, 0, 183, 0, 409, 0,
	0, 0, 220, 0, 1114, 268, 0, 299, 171, 228,
	226, 321, 189, 185, 182, 170, 206, 233, 267, 316,
	261, 453, 223, 0, 0, 308, 242, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 169, 147, 253, 309, 191, 67, 0,
	0, 129, 130, 131, 431, 430, 433, 434, 435, 436,
	0, 0, 165, 432, 437, 438, 439, 0, 180, 209,
	184, 179, 319, 0, 0, 0, 407, 424, 0, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 421,
	422, 496, 0, 0, 0, 467, 0, 423, 0, 0,
	416, 417, 419, 418, 420, 425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 466, 0, 0,
	345, 0, 0, 464, 0, 0, 0, 0, 0, 219,
	0, 216, 143, 156, 0, 0, 252, 286, 290, 0,
	0, 0, 172, 0, 288, 265, 334, 0, 269, 287,
	224, 323, 280, 333, 346, 347, 178, 246, 340, 317,
	343, 355, 157, 175, 259, 313, 337, 305, 241, 320,
	215, 304, 196, 146, 149, 315, 331, 166, 298, 0,
	0, 0, 151, 329, 312, 239, 212, 213, 150, 0,
	284, 181, 194, 174, 255, 326, 327, 173, 356, 158,
	342, 153, 159, 341, 248, 322, 330, 240, 232, 152,
	328, 238, 231, 218, 188, 202, 278, 227, 279, 203,
	244, 243, 245, 0, 148, 0, 310, 338, 357, 163,
	0, 0, 318, 351, 354, 0, 281, 164, 195, 187,
	277, 193, 221, 350, 352, 353, 162, 275, 200, 247,
	160, 205, 306, 217, 225, 0, 0, 264, 289, 167,
	336, 307, 454, 465, 460, 461, 458, 459, 0, 457,
	456, 455, 468, 446, 447, 448, 449, 451, 0, 462,
	463, 450, 142, 154, 222, 0, 282, 192, 339, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 145, 155, 161, 168, 176,
	186, 190, 198, 201, 204, 207, 208, 210, 214, 230,
	234, 235, 236, 237, 249, 250, 251, 254, 257, 258,
	260, 262, 263, 266, 270, 271, 272, 273, 274, 276,
	283, 285, 291, 292, 293, 294, 295, 296, 297, 300,
	301, 302, 303, 311, 314, 324, 325, 335, 344, 348,
	199, 332, 349, 256, 229, 0, 0, 0, 410, 0,
	0, 0, 183, 0, 409, 0, 0, 0, 220, 0,
	0, 268, 0, 299, 171, 228, 226, 321, 189, 185,
	182, 170, 206, 233, 267, 316, 261, 453, 223, 0,
	0, 308, 242, 0, 0, 0, 0, 0, 444, 445,
	0, 0, 0, 0, 0, 0, 1223, 0, 211, 169,
	147, 253, 309, 191, 67, 0, 0, 129, 130, 131,
	431, 430, 433, 434, 435, 436, 0, 0, 165, 432,
	437, 438, 439, 1224, 180, 209, 184, 179, 319, 0,
	0, 0, 407, 424, 0, 452, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 421, 422, 0, 0, 0,
	0, 467, 0, 423, 0, 0, 416, 417, 419, 418,
	420, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 466, 0, 0, 345, 0, 0, 464,
	0, 0, 0, 0, 0, 219, 0, 216, 143, 156,
	0, 0, 252, 286, 290, 0, 0, 0, 172, 0,
	288, 265, 334, 0, 269, 287, 224, 323, 280, 333,
	346, 347, 178, 246, 340, 317, 343, 355, 157, 175,
	259, 313, 337, 305, 241, 320, 215, 304, 196, 146,
	149, 315, 331, 166, 298, 0, 0, 0, 151, 329,
	312, 239, 212, 213, 150, 0, 284, 181, 194, 174,
	255, 326, 327, 173, 356, 158, 342, 153, 159, 341,
	248, 322, 330, 240, 232, 152, 328, 238, 231, 218,
	188, 202, 278, 227, 279, 203, 244, 243, 245, 0,
	148, 0, 310, 338, 357, 163, 0, 0, 318, 351,
	354, 0, 281, 164, 195, 187, 277, 193, 221, 350,
	352, 353, 162, 275, 200, 247, 160, 205, 306, 217,
	225, 0, 0, 264, 289, 167, 336, 307, 454, 465,
	460, 461, 458, 459, 0, 457, 456, 455, 468, 446,
	447, 448, 449, 451, 0, 462, 463, 450, 142, 154,
	222, 0, 282, 192, 339, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 155, 161, 168, 176, 186, 190, 198, 201,
	204, 207, 208, 210, 214, 230, 234, 235, 236, 237,
	249, 250, 251, 254, 257, 258, 260, 262, 263, 266,
	270, 271, 272, 273, 274, 276, 283, 285, 291, 292,
	293, 294, 295, 296, 297, 300, 301, 302, 303, 311,
	314, 324, 325, 335, 344, 348, 199, 332, 349, 256,
	229, 0, 0, 0, 410, 0, 0, 0, 183, 0,
	409, 0, 0, 0, 220, 0, 0, 268, 0, 299,
	171, 228, 226, 321, 189, 185, 182, 170, 206, 233,
	267, 316, 261, 453, 223, 0, 0, 308, 242, 0,
	0, 0, 0, 0, 444, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 169, 147, 253, 309, 191,
	67, 0, 484, 129, 130, 131, 431, 430, 433, 434,
	435, 436, 0, 0, 165, 432, 437, 438, 439, 0,
	180, 209, 184, 179, 319, 0, 0, 0, 407, 424,
	0, 452, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 421, 422, 0, 0, 0, 0, 467, 0, 423,
	0, 0, 416, 417, 419, 418, 420, 425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 466,
	0, 0, 345, 0, 0, 464, 0, 0, 0, 0,
	0, 219, 0, 216, 143, 156, 0, 0, 252, 286,
	290, 0, 0, 0, 172, 0, 288, 265, 334, 0,
	269, 287, 224, 323, 280, 333, 346, 347, 178, 246,
	340, 317, 343, 355, 157, 175, 259, 313, 337, 305,
	241, 320, 215, 304, 196, 146, 149, 315, 331, 166,
	298, 0, 0, 0, 151, 329, 312, 239, 212, 213,
	150, 0, 284, 181, 194, 174, 255, 326, 327, 173,
	356, 158, 342, 153, 159, 341, 248, 322, 330, 240,
	232, 152, 328, 238, 231, 218, 188, 202, 278, 227,
	279, 203, 244, 243, 245, 0, 148, 0, 310, 338,
	357, 163, 0, 0, 318, 351, 354, 0, 281, 164,
	195, 187, 277, 193, 221, 350, 352, 353, 162, 275,
	200, 247, 160, 205, 306, 217, 225, 0, 0, 264,
	289, 167, 336, 307, 454, 465, 460, 461, 458, 459,
	0, 457, 456, 455, 468, 446, 447, 448, 449, 451,
	0, 462, 463, 450, 142, 154, 222, 0, 282, 192,
	339, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 145, 155, 161,
	168, 176, 186, 190, 198, 201, 204, 207, 208, 210,
	214, 230, 234, 235, 236, 237, 249, 250, 251, 254,
	257, 258, 260, 262, 263, 266, 270, 271, 272, 273,
	274, 276, 283, 285, 291, 292, 293, 294, 295, 296,
	297, 300, 301, 302, 303, 311, 314, 324, 325, 335,
	344, 348, 199, 332, 349, 256, 229, 0, 0, 0,
	410, 0, 0, 0, 183, 0, 409, 0, 0, 0,
	220, 0, 0, 268, 0, 299, 171, 228, 226, 321,
	189, 185, 182, 170, 206, 233, 267, 316, 261, 453,
	223, 0, 0, 308, 242, 0, 0, 0, 0, 0,
	444, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 169, 147, 253, 309, 191, 67, 0, 0, 129,
	130, 131, 431, 430, 433, 434, 435, 436, 0, 0,
	165, 432, 437, 438, 439, 0, 180, 209, 184, 179,
	319, 0, 0, 0, 407, 424, 0, 452, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 421, 422, 496,
	0, 0, 0, 467, 0, 423, 0, 0, 416, 417,
	419, 418, 420, 425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 466, 0, 0, 345, 0,
	0, 464, 0, 0, 0, 0, 0, 219, 0, 216,
	143, 156, 0, 0, 252, 286, 290, 0, 0, 0,
	172, 0, 288, 265, 334, 0, 269, 287, 224, 323,
	280, 333, 346, 347, 178, 246, 340, 317, 343, 355,
	157, 175, 259, 313, 337, 305, 241, 320, 215, 304,
	196, 146, 149, 315, 331, 166, 298, 0, 0, 0,
	151, 329, 312, 239, 212, 213, 150, 0, 284, 181,
	194, 174, 255, 326, 327, 173, 356, 158, 342, 153,
	159, 341, 248, 322, 330, 240, 232, 152, 328, 238,
	231, 218, 188, 202, 278, 227, 279, 203, 244, 243,
	245, 0, 148, 0, 310, 338, 357, 163, 0, 0,
	318, 351, 354, 0, 281, 164, 195, 187, 277, 193,
	221, 350, 352, 353, 162, 275, 200, 247, 160, 205,
	306, 217, 225, 0, 0, 264, 289, 167, 336, 307,
	454, 465, 460, 461, 458, 459, 0, 457, 456, 455,
	468, 446, 447, 448, 449, 451, 0, 462, 463, 450,
	142, 154, 222, 0, 282, 192, 339, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 145, 155, 161, 168, 176, 186, 190,
	198, 201, 204, 207, 208, 210, 214, 230, 234, 235,
	236, 237, 249, 250, 251, 254, 257, 258, 260, 262,
	263, 266, 270, 271, 272, 273, 274, 276, 283, 285,
	291, 292, 293, 294, 295, 296, 297, 300, 301, 302,
	303, 311, 314, 324, 325, 335, 344, 348, 199, 332,
	349, 256, 229, 0, 0, 0, 410, 0, 0, 0,
	183, 0, 409, 0, 0, 0, 220, 0, 0, 268,
	0, 299, 171, 228, 226, 321, 189, 185, 182, 170,
	206, 233, 267, 316, 261, 453, 223, 0, 0, 308,
	242, 0, 0, 0, 0, 0, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 169, 147, 253,
	309, 191, 67, 0, 0, 129, 130, 131, 431, 1131,
	433, 434, 435, 436, 0, 0, 165, 432, 437, 438,
	439, 0, 180, 209, 184, 179, 319, 0, 0, 0,
	407, 424, 0, 452, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 421, 422, 496, 0, 0, 0, 467,
	0, 423, 0, 0, 416, 417, 419, 418, 420, 425,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 466, 0, 0, 345, 0, 0, 464, 0, 0,
	0, 0, 0, 219, 0, 216, 143, 156, 0, 0,
	252, 286, 290, 0, 0, 0, 172, 0, 288, 265,
	334, 0, 269, 287, 224, 323, 280, 333, 346, 347,
	178, 246, 340, 317, 343, 355, 157, 175, 259, 313,
	337, 305, 241, 320, 215, 304, 196, 146, 149, 315,
	331, 166, 298, 0, 0, 0, 151, 329, 312, 239,
	212, 213, 150, 0, 284, 181, 194, 174, 255, 326,
	327, 173, 356, 158, 342, 153, 159, 341, 248, 322,
	330, 240, 232, 152, 328, 238, 231, 218, 188, 202,
	278, 227, 279, 203, 244, 243, 245, 0, 148, 0,
	310, 338, 357, 163, 0, 0, 318, 351, 354, 0,
	281, 164, 195, 187, 277, 193, 221, 350, 352, 353,
	162, 275, 200, 247, 160, 205, 306, 217, 225, 0,
	0, 264, 289, 167, 336, 307, 454, 465, 460, 461,
	458, 459, 0, 457, 456, 455, 468, 446, 447, 448,
	449, 451, 0, 462, 463, 450, 142, 154, 222, 0,
	282, 192, 339, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 145,
	155, 161, 168, 176, 186, 190, 198, 201, 204, 207,
	208, 210, 214, 230, 234, 235, 236, 237, 249, 250,
	251, 254, 257, 258, 260, 262, 263, 266, 270, 271,
	272, 273, 274, 276, 283, 285, 291, 292, 293, 294,
	295, 296, 297, 300, 301, 302, 303, 311, 314, 324,
	325, 335, 344, 348, 199, 332, 349, 256, 229, 0,
	0, 0, 410, 0, 0, 0, 183, 0, 409, 0,
	0, 0, 220, 0, 0, 268, 0, 299, 171, 228,
	226, 321, 189, 185, 182, 170, 206, 233, 267, 316,
	261, 453, 223, 0, 0, 308, 242, 0, 0, 0,
	0, 0, 444, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 169, 147, 253, 309, 191, 67, 0,
	0, 129, 130, 131, 431, 1128, 433, 434, 435, 436,
	0, 0, 165, 432, 437, 438, 439, 0, 180, 209,
	184, 179, 319, 0, 0, 0, 407, 424, 0, 452,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 421,
	422, 496, 0, 0, 0, 467, 0, 423, 0, 0,
	416, 417, 419, 418, 420, 425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 466, 0, 0,
	345, 0, 0, 464, 0, 0, 0, 0, 0, 219,
	0, 216, 143, 156, 0, 0, 252, 286, 290, 0,
	0, 0, 172, 0, 288, 265, 334, 0, 269, 287,
	224, 323, 280, 333, 346, 347, 178, 246, 340, 317,
	343, 355, 157, 175, 259, 313, 337, 305, 241, 320,
	215, 304, 196, 146, 149, 315, 331, 166, 298, 0,
	0, 0, 151, 329, 312, 239, 212, 213, 150, 0,
	284, 181, 194, 174, 255, 326, 327, 173, 356, 158,
	342, 153, 159, 341, 248, 322, 330, 240, 232, 152,
	328, 238, 231, 218, 188, 202, 278, 227, 279, 203,
	244, 243, 245, 0, 148, 0, 310, 338, 357, 163,
	0, 0, 318, 351, 354, 0, 281, 164, 195, 187,
	277, 193, 221, 350, 352, 353, 162, 275, 200, 247,
	160, 205, 306, 217, 225, 0, 0, 264, 289, 167,
	336, 307, 454, 465, 460, 461, 458, 459, 0, 457,
	456, 455, 468, 446, 447, 448, 449, 451, 0, 462,
	463, 450, 142, 154, 222, 0, 282, 192, 339, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 145, 155, 161, 168, 176,
	186, 190, 198, 201, 204, 207, 208, 210, 214, 230,
	234, 235, 236, 237, 249, 250, 251, 254, 257, 258,
	260, 262, 263, 266, 270, 271, 272, 273, 274, 276,
	283, 285, 291, 292, 293, 294, 295, 296, 297, 300,
	301, 302, 303, 311, 314, 324, 325, 335, 344, 348,
	199, 332, 349, 477, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 410, 0, 0, 0, 183, 0, 409, 0, 0,
	0, 220, 0, 0, 268, 0, 299, 171, 228, 226,
	321, 189, 185, 182, 170, 206, 233, 267, 316, 261,
	453, 223, 0, 0, 308, 242, 0, 0, 0, 0,
	0, 444, 445, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 169, 147, 253, 309, 191, 67, 0, 0,
	129, 130, 131, 431, 430, 433, 434, 435, 436, 0,
	0, 165, 432, 437, 438, 439, 0, 180, 209, 184,
	179, 319, 0, 0, 0, 407, 424, 0, 452, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 421, 422,
	0, 0, 0, 0, 467, 0, 423, 0, 0, 416,
	417, 419, 418, 420, 425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 466, 0, 0, 345,
	0, 0, 464, 0, 0, 0, 0, 0, 219, 0,
	216, 143, 156, 0, 0, 252, 286, 290, 0, 0,
	0, 172, 0, 288, 265, 334, 0, 269, 287, 224,
	323, 280, 333, 346, 347, 178, 246, 340, 317, 343,
	355, 157, 175, 259, 313, 337, 305, 241, 320, 215,
	304, 196, 146, 149, 315, 331, 166, 298, 0, 0,
	0, 151, 329, 312, 239, 212, 213, 150, 0, 284,
	181, 194, 174, 255, 326, 327, 173, 356, 158, 342,
	153, 159, 341, 248, 322, 330, 240, 232, 152, 328,
	238, 231, 218, 188, 202, 278, 227, 279, 203, 244,
	243, 245, 0, 148, 0, 310, 338, 357, 163, 0,
	0, 318, 351, 354, 0, 281, 164, 195, 187, 277,
	193, 221, 350, 352, 353, 162, 275, 200, 247, 160,
	205, 306, 217, 225, 0, 0, 264, 289, 167, 336,
	307, 454, 465, 460, 461, 458, 459, 0, 457, 456,
	455, 468, 446, 447, 448, 449, 451, 0, 462, 463,
	450, 142, 154, 222, 0, 282, 192, 339, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 145, 155, 161, 168, 176, 186,
	190, 198, 201, 204, 207, 208, 210, 214, 230, 234,
	235, 236, 237, 249, 250, 251, 254, 257, 258, 260,
	262, 263, 266, 270, 271, 272, 273, 274, 276, 283,
	285, 291, 292, 293, 294, 295, 296, 297, 300, 301,
	302, 303, 311, 314, 324, 325, 335, 344, 348, 199,
	332, 349, 256, 229, 0, 0, 0, 410, 0, 0,
	0, 183, 0, 409, 0, 0, 0, 220, 0, 0,
	268, 0, 299, 171, 228, 226, 321, 189, 185, 182,
	170, 206, 233, 267, 316, 261, 453, 223, 0, 0,
	308, 242, 0, 0, 0, 0, 0, 444, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 169, 147,
	253, 309, 191, 67, 0, 0, 129, 130, 131, 431,
	430, 433, 434, 435, 436, 0, 0, 165, 432, 437,
	438, 439, 0, 180, 209, 184, 179, 319, 0, 0,
	0, 407, 424, 0, 452, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 421, 422, 0, 0, 0, 0,
	467, 0, 423, 0, 0, 416, 417, 419, 418, 420,
	425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 466, 0, 0, 345, 0, 0, 464, 0,
	0, 0, 0, 0, 219, 0, 216, 143, 156, 0,
	0, 252, 286, 290, 0, 0, 0, 172, 0, 288,
	265, 334, 0, 269, 287, 224, 323, 280, 333, 346,
	347, 178, 246, 340, 317, 343, 355, 157, 175, 259,
	313, 337, 305, 241, 320, 215, 304, 196, 146, 149,
	315, 331, 166, 298, 0, 0, 0, 151, 329, 312,
	239, 212, 213, 150, 0, 284, 181, 194, 174, 255,
	326, 327, 173, 356, 158, 342, 153, 159, 341, 248,
	322, 330, 240, 232, 152, 328, 238, 231, 218, 188,
	202, 278, 227, 279, 203, 244, 243, 245, 0, 148,
	0, 310, 338, 357, 163, 0, 0, 318, 351, 354,
	0, 281, 164, 195, 187, 277, 193, 221, 350, 352,
	353, 162, 275, 200, 247, 160, 205, 306, 217, 225,
	0, 0, 264, 289, 167, 336, 307, 454, 465, 460,
	461, 458, 459, 0, 457, 456, 455, 468, 446, 447,
	448, 449, 451, 0, 462, 463, 450, 142, 154, 222,
	0, 282, 192, 339, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	145, 155, 161, 168, 176, 186, 190, 198, 201, 204,
	207, 208, 210, 214, 230, 234, 235, 236, 237, 249,
	250, 251, 254, 257, 258, 260, 262, 263, 266, 270,
	271, 272, 273, 274, 276, 283, 285, 291, 292, 293,
	294, 295, 296, 297, 300, 301, 302, 303, 311, 314,
	324, 325, 335, 344, 348, 199, 332, 349, 256, 229,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 220, 0, 0, 268, 0, 299, 171,
	228, 226, 321, 189, 185, 182, 170, 206, 233, 267,
	316, 261, 453, 223, 0, 0, 308, 242, 0, 0,
	0, 0, 0, 444, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 169, 147, 253, 309, 191, 67,
	0, 484, 129, 130, 131, 431, 430, 433, 434, 435,
	436, 0, 0, 165, 432, 437, 438, 439, 0, 180,
	209, 184, 179, 319, 0, 0, 0, 0, 424, 0,
	452, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	421, 422, 0, 0, 0, 0, 467, 0, 423, 0,
	0, 416, 417, 419, 418, 420, 425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 466, 0,
	0, 345, 0, 0, 464, 0, 0, 0, 0, 0,
	219, 0, 216, 143, 156, 0, 0, 252, 286, 290,
	0, 0, 0, 172, 0, 288, 265, 334, 0, 269,
	287, 224, 323, 280, 333, 346, 347, 178, 246, 340,
	317, 343, 355, 157, 175, 259, 313, 337, 305, 241,
	320, 215, 304, 196, 146, 149, 315, 331, 166, 298,
	0, 0, 0, 151, 329, 312, 239, 212, 213, 150,
	0, 284, 181, 194, 174, 255, 326, 327, 173, 356,
	158, 342, 153, 159, 341, 248, 322, 330, 240, 232,
	152, 328, 238, 231, 218, 188, 202, 278, 227, 279,
	203, 244, 243, 245, 0, 148, 0, 310, 338, 357,
	163, 0, 0, 318, 351, 354, 0, 281, 164, 195,
	187, 277, 193, 221, 350, 352, 353, 162, 275, 200,
	247, 160, 205, 306, 217, 225, 0, 0, 264, 289,
	167, 336, 307, 454, 465, 460, 461, 458, 459, 0,
	457, 456, 455, 468, 446, 447, 448, 449, 451, 0,
	462, 463, 450, 142, 154, 222, 0, 282, 192, 339,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 145, 155, 161, 168,
	176, 186, 190, 198, 201, 204, 207, 208, 210, 214,
	230, 234, 235, 236, 237, 249, 250, 251, 254, 257,
	258, 260, 262, 263, 266, 270, 271, 272, 273, 274,
	276, 283, 285, 291, 292, 293, 294, 295, 296, 297,
	300, 301, 302, 303, 311, 314, 324, 325, 335, 344,
	348, 199, 332, 349, 256, 229, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 220,
	0, 0, 268, 0, 299, 171, 228, 226, 321, 189,
	185, 182, 170, 206, 233, 267, 316, 261, 453, 223,
	0, 0, 308, 242, 0, 0, 0, 0, 0, 444,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	169, 147, 253, 309, 191, 67, 0, 0, 129, 130,
	131, 431, 430, 433, 434, 435, 436, 0, 0, 165,
	432, 437, 438, 439, 0, 180, 209, 184, 179, 319,
	0, 0, 0, 0, 424, 0, 452, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 421, 422, 0, 0,
	0, 0, 467, 0, 423, 0, 0, 416, 417, 419,
	418, 420, 425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 466, 0, 0, 345, 0, 0,
	464, 0, 0, 0, 0, 0, 219, 0, 216, 143,
	156, 0, 0, 252, 286, 290, 0, 0, 0, 172,
	0, 288, 265, 334, 0, 269, 287, 224, 323, 280,
	333, 346, 347, 178, 246, 340, 317, 343, 355, 157,
	175, 259, 313, 337, 305, 241, 320, 215, 304, 196,
	146, 149, 315, 331, 166, 298, 0, 0, 0, 151,
	329, 312, 239, 212, 213, 150, 0, 284, 181, 194,
	174, 255, 326, 327, 173, 356, 158, 342, 153, 159,
	341, 248, 322, 330, 240, 232, 152, 328, 238, 231,
	218, 188, 202, 278, 227, 279, 203, 244, 243, 245,
	0, 148, 0, 310, 338, 357, 163, 0, 0, 318,
	351, 354, 0, 281, 164, 195, 187, 277, 193, 221,
	350, 352, 353, 162, 275, 200, 247, 160, 205, 306,
	217, 225, 0, 0, 264, 289, 167, 336, 307, 454,
	465, 460, 461, 458, 459, 0, 457, 456, 455, 468,
	446, 447, 448, 449, 451, 0, 462, 463, 450, 142,
	154, 222, 0, 282, 192, 339, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 145, 155, 161, 168, 176, 186, 190, 198,
	201, 204, 207, 208, 210, 214, 230, 234, 235, 236,
	237, 249, 250, 251, 254, 257, 258, 260, 262, 263,
	266, 270, 271, 272, 273, 274, 276, 283, 285, 291,
	292, 293, 294, 295, 296, 297, 300, 301, 302, 303,
	311, 314, 324, 325, 335, 344, 348, 199, 332, 349,
	256, 229, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 220, 0, 0, 268, 0,
	299, 171, 228, 226, 321, 189, 185, 182, 170, 206,
	233, 267, 316, 261, 0, 223, 0, 0, 308, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 169, 147, 253, 309,
	191, 0, 0, 0, 129, 130, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 180, 209, 184, 179, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 787, 786,
	796, 797, 789, 790, 791, 792, 793, 794, 795, 788,
	0, 0, 798, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 216, 143, 156, 0, 0, 252,
	286, 290, 0, 0, 0, 172, 0, 288, 265, 334,
	0, 269, 287, 224, 323, 280, 333, 346, 347, 178,
	246, 340, 317, 343, 355, 157, 175, 259, 313, 337,
	305, 241, 320, 215, 304, 196, 146, 149, 315, 331,
	166, 298, 0, 0, 0, 151, 329, 312, 239, 212,
	213, 150, 0, 284, 181, 194, 174, 255, 326, 327,
	173, 356, 158, 342, 153, 159, 341, 248, 322, 330,
	240, 232, 152, 328, 238, 231, 218, 188, 202, 278,
	227, 279, 203, 244, 243, 245, 0, 148, 0, 310,
	338, 357, 163, 0, 0, 318, 351, 354, 0, 281,
	164, 195, 187, 277, 193, 221, 350, 352, 353, 162,
	275, 200, 247, 160, 205, 306, 217, 225, 0, 0,
	264, 289, 167, 336, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 154, 222, 0, 282,
	192, 339, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 145, 155,
	161, 168, 176, 186, 190, 198, 201, 204, 207, 208,
	210, 214, 230, 234, 235, 236, 237, 249, 250, 251,
	254, 257, 258, 260, 262, 263, 266, 270, 271, 272,
	273, 274, 276, 283, 285, 291, 292, 293, 294, 295,
	296, 297, 300, 301, 302, 303, 311, 314, 324, 325,
	335, 344, 348, 199, 332, 349, 256, 229, 0, 0,
	0, 0, 0, 0, 0, 183, 687, 0, 0, 0,
	0, 220, 0, 0, 268, 0, 299, 171, 228, 226,
	321, 189, 185, 182, 170, 206, 233, 267, 316, 261,
	0, 223, 0, 0, 308, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 169, 147, 253, 309, 191, 0, 0, 0,
	129, 130, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 180, 209, 184,
	179, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 686, 345,
	0, 0, 0, 0, 0, 0, 683, 684, 219, 656,
	216, 143, 156, 677, 681, 252, 286, 290, 0, 0,
	0, 172, 0, 288, 265, 334, 0, 269, 287, 224,
	323, 280, 333, 346, 347, 178, 246, 340, 317, 343,
	355, 157, 175, 259, 313, 337, 305, 241, 320, 215,
	304, 196, 146, 149, 315, 331, 166, 298, 0, 0,
	0, 151, 329, 312, 239, 212, 213, 150, 0, 284,
	181, 194, 174, 255, 326, 327, 173, 356, 158, 342,
	153, 159, 341, 248, 322, 330, 240, 232, 152, 328,
	238, 231, 218, 188, 202, 278, 227, 279, 203, 244,
	243, 245, 0, 148, 0, 310, 338, 357, 163, 0,
	0, 318, 351, 354, 0, 281, 164, 195, 187, 277,
	193, 221, 350, 352, 353, 162, 275, 200, 247, 160,
	205, 306, 217, 225, 0, 0, 264, 289, 167, 336,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 154, 222, 0, 282, 192, 339, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 145, 155, 161, 168, 176, 186,
	190, 198, 201, 204, 207, 208, 210, 214, 230, 234,
	235, 236, 237, 249, 250, 251, 254, 257, 258, 260,
	262, 263, 266, 270, 271, 272, 273, 274, 276, 283,
	285, 291, 292, 293, 294, 295, 296, 297, 300, 301,
	302, 303, 311, 314, 324, 325, 335, 344, 348, 199,
	332, 349, 256, 229, 0, 0, 887, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 220, 0, 0,
	268, 0, 299, 171, 228, 226, 321, 189, 185, 182,
	170, 206, 233, 267, 316, 261, 0, 223, 0, 0,
	308, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 169, 147,
	253, 309, 191, 0, 0, 0, 129, 130, 131, 0,
	889, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 180, 209, 184, 179, 319, 776, 777,
	775, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 216, 143, 156, 0,
	0, 252, 286, 290, 0, 0, 0, 172, 0, 288,
	265, 334, 0, 269, 287, 224, 323, 280, 333, 346,
	347, 178, 246, 340, 317, 343, 355, 157, 175, 259,
	313, 337, 305, 241, 320, 215, 304, 196, 146, 149,
	315, 331, 166, 298, 0, 0, 0, 151, 329, 312,
	239, 212, 213, 150, 0, 284, 181, 194, 174, 255,
	326, 327, 173, 356, 158, 342, 153, 159, 341, 248,
	322, 330, 240, 232, 152, 328, 238, 231, 218, 188,
	202, 278, 227, 279, 203, 244, 243, 245, 0, 148,
	0, 310, 338, 357, 163, 0, 0, 318, 351, 354,
	0, 281, 164, 195, 187, 277, 193, 221, 350, 352,
	353, 162, 275, 200, 247, 160, 205, 306, 217, 225,
	0, 0, 264, 289, 167, 336, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 154, 222,
	0, 282, 192, 339, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	145, 155, 161, 168, 176, 186, 190, 198, 201, 204,
	207, 208, 210, 214, 230, 234, 235, 236, 237, 249,
	250, 251, 254, 257, 258, 260, 262, 263, 266, 270,
	271, 272, 273, 274, 276, 283, 285, 291, 292, 293,
	294, 295, 296, 297, 300, 301, 302, 303, 311, 314,
	324, 325, 335, 344, 348, 199, 332, 349, 33, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 220, 0, 0, 268,
	0, 299, 171, 228, 226, 321, 189, 185, 182, 170,
	206, 233, 267, 316, 261, 0, 223, 0, 0, 308,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 169, 147, 253,
	309, 191, 67, 0, 484, 129, 130, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 180, 209, 184, 179, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 216, 143, 156, 0, 0,
	252, 286, 290, 0, 0, 0, 172, 0, 288, 265,
	334, 0, 269, 287, 224, 323, 280, 333, 346, 347,
	178, 246, 340, 317, 343, 355, 157, 175, 259, 313,
	337, 305, 241, 320, 215, 304, 196, 146, 149, 315,
	331, 166, 298, 0, 0, 0, 151, 329, 312, 239,
	212, 213, 150, 0, 284, 181, 194, 174, 255, 326,
	327, 173, 356, 158, 342, 153, 159, 341, 248, 322,
	330, 240, 232, 152, 328, 238, 231, 218, 188, 202,
	278, 227, 279, 203, 244, 243, 245, 0, 148, 0,
	310, 338, 357, 163, 0, 0, 318, 351, 354, 0,
	281, 164, 195, 187, 277, 193, 221, 350, 352, 353,
	162, 275, 200, 247, 160, 205, 306, 217, 225, 0,
	0, 264, 289, 167, 336, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 154, 222, 0,
	282, 192, 339, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 145,
	155, 161, 168, 176, 186, 190, 198, 201, 204, 207,
	208, 210, 214, 230, 234, 235, 236, 237, 249, 250,
	251, 254, 257, 258, 260, 262, 263, 266, 270, 271,
	272, 273, 274, 276, 283, 285, 291, 292, 293, 294,
	295, 296, 297, 300, 301, 302, 303, 311, 314, 324,
	325, 335, 344, 348, 199, 332, 349, 256, 229, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 220, 0, 0, 268, 0, 299, 171, 228,
	226, 321, 189, 185, 182, 170, 206, 233, 267, 316,
	261, 0, 223, 0, 0, 308, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 169, 147, 253, 309, 191, 0, 0,
	0, 129, 130, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 180, 209,
	184, 179, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 650, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	656, 216, 143, 156, 654, 0, 252, 286, 290, 0,
	0, 0, 172, 0, 288, 265, 334, 0, 269, 287,
	224, 323, 280, 333, 346, 347, 178, 246, 340, 317,
	343, 355, 157, 175, 259, 313, 337, 305, 241, 320,
	215, 304, 196, 146, 149, 315, 331, 166, 298, 0,
	0, 0, 151, 329, 312, 239, 212, 213, 150, 0,
	284, 181, 194, 174, 255, 326, 327, 173, 356, 158,
	342, 153, 159, 341, 248, 322, 330, 240, 232, 152,
	328, 238, 231, 218, 188, 202, 278, 227, 279, 203,
	244, 243, 245, 0, 148, 0, 310, 338, 357, 163,
	0, 0, 318, 351, 354, 0, 281, 164, 195, 187,
	277, 193, 221, 350, 352, 353, 162, 275, 200, 247,
	160, 205, 306, 217, 225, 0, 0, 264, 289, 167,
	336, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 154, 222, 0, 282, 192, 339, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 145, 155, 161, 168, 176,
	186, 190, 198, 201, 204, 207, 208, 210, 214, 230,
	234, 235, 236, 237, 249, 250, 251, 254, 257, 258,
	260, 262, 263, 266, 270, 271, 272, 273, 274, 276,
	283, 285, 291, 292, 293, 294, 295, 296, 297, 300,
	301, 302, 303, 311, 314, 324, 325, 335, 344, 348,
	199, 332, 349, 256, 229, 0, 0, 1158, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 220, 0,
	0, 268, 0, 299, 171, 228, 226, 321, 189, 185,
	182, 170, 206, 233, 267, 316, 261, 0, 223, 0,
	0, 308, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 169,
	147, 253, 309, 191, 0, 0, 0, 129, 130, 131,
	0, 1160, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 180, 209, 184, 179, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 216, 143, 156,
	0, 0, 252, 286, 290, 0, 0, 0, 172, 0,
	288, 265, 334, 0, 269, 287, 224, 323, 280, 333,
	346, 347, 178, 246, 340, 317, 343, 355, 157, 175,
	259, 313, 337, 305, 241, 320, 215, 304, 196, 146,
	149, 315, 331, 166, 298, 0, 0, 0, 151, 329,
	312, 239, 212, 213, 150, 0, 284, 181, 194, 174,
	255, 326, 327, 173, 356, 158, 342, 153, 159, 341,
	248, 322, 330, 240, 232, 152, 328, 238, 231, 218,
	188, 202, 278, 227, 279, 203, 244, 243, 245, 0,
	148, 0, 310, 338, 357, 163, 0, 0, 318, 351,
	354, 0, 281, 164, 195, 187, 277, 193, 221, 350,
	352, 353, 162, 275, 200, 247, 160, 205, 306, 217,
	225, 0, 0, 264, 289, 167, 336, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 154,
	222, 0, 282, 192, 339, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 155, 161, 168, 176, 186, 190, 198, 201,
	204, 207, 208, 210, 214, 230, 234, 235, 236, 237,
	249, 250, 251, 254, 257, 258, 260, 262, 263, 266,
	270, 271, 272, 273, 274, 276, 283, 285, 291, 292,
	293, 294, 295, 296, 297, 300, 301, 302, 303, 311,
	314, 324, 325, 335, 344, 348, 199, 332, 349, 33,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 220, 0, 0,
	268, 0, 299, 171, 228, 226, 321, 189, 185, 182,
	170, 206, 233, 267, 316, 261, 0, 223, 0, 0,
	308, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 169, 147,
	253, 309, 191, 67, 0, 0, 129, 130, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 180, 209, 184, 179, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 216, 143, 156, 0,
	0, 252, 286, 290, 0, 0, 0, 172, 0, 288,
	265, 334, 0, 269, 287, 224, 323, 280, 333, 346,
	347, 178, 246, 340, 317, 343, 355, 157, 175, 259,
	313, 337, 305, 241, 320, 215, 304, 196, 146, 149,
	315, 331, 166, 298, 0, 0, 0, 151, 329, 312,
	239, 212, 213, 150, 0, 284, 181, 194, 174, 255,
	326, 327, 173, 356, 158, 342, 153, 159, 341, 248,
	322, 330, 240, 232, 152, 328, 238, 231, 218, 188,
	202, 278, 227, 279, 203, 244, 243, 245, 0, 148,
	0, 310, 338, 357, 163, 0, 0, 318, 351, 354,
	0, 281, 164, 195, 187, 277, 193, 221, 350, 352,
	353, 162, 275, 200, 247, 160, 205, 306, 217, 225,
	0, 0, 264, 289, 167, 336, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 154, 222,
	0, 282, 192, 339, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	145, 155, 161, 168, 176, 186, 190, 198, 201, 204,
	207, 208, 210, 214, 230, 234, 235, 236, 237, 249,
	250, 251, 254, 257, 258, 260, 262, 263, 266, 270,
	271, 272, 273, 274, 276, 283, 285, 291, 292, 293,
	294, 295, 296, 297, 300, 301, 302, 303, 311, 314,
	324, 325, 335, 344, 348, 199, 332, 349, 256, 229,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 220, 0, 0, 268, 0, 299, 171,
	228, 226, 321, 189, 185, 182, 170, 206, 233, 267,
	316, 261, 0, 223, 0, 0, 308, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 169, 147, 253, 309, 191, 0,
	0, 0, 129, 130, 131, 0, 0, 1176, 0, 0,
	1177, 0, 0, 165, 0, 0, 0, 0, 0, 180,
	209, 184, 179, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 216, 143, 156, 0, 0, 252, 286, 290,
	0, 0, 0, 172, 0, 288, 265, 334, 0, 269,
	287, 224, 323, 280, 333, 346, 347, 178, 246, 340,
	317, 343, 355, 157, 175, 259, 313, 337, 305, 241,
	320, 215, 304, 196, 146, 149, 315, 331, 166, 298,
	0, 0, 0, 151, 329, 312, 239, 212, 213, 150,
	0, 284, 181, 194, 174, 255, 326, 327, 173, 356,
	158, 342, 153, 159, 341, 248, 322, 330, 240, 232,
	152, 328, 238, 231, 218, 188, 202, 278, 227, 279,
	203, 244, 243, 245, 0, 148, 0, 310, 338, 357,
	163, 0, 0, 318, 351, 354, 0, 281, 164, 195,
	187, 277, 193, 221, 350, 352, 353, 162, 275, 200,
	247, 160, 205, 306, 217, 225, 0, 0, 264, 289,
	167, 336, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 154, 222, 0, 282, 192, 339,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 145, 155, 161, 168,
	176, 186, 190, 198, 201, 204, 207, 208, 210, 214,
	230, 234, 235, 236, 237, 249, 250, 251, 254, 257,
	258, 260, 262, 263, 266, 270, 271, 272, 273, 274,
	276, 283, 285, 291, 292, 293, 294, 295, 296, 297,
	300, 301, 302, 303, 311, 314, 324, 325, 335, 344,
	348, 199, 332, 349, 256, 229, 0, 0, 1158, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 220,
	0, 0, 268, 0, 299, 171, 228, 226, 321, 189,
	185, 182, 170, 206, 233, 267, 316, 261, 0, 223,
	0, 0, 308, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	169, 147, 253, 309, 191, 0, 0, 0, 129, 130,
	131, 0, 1160, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 180, 209, 184, 179, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 216, 143,
	156, 0, 0, 252, 286, 290, 0, 0, 0, 172,
	0, 288, 265, 334, 0, 1156, 287, 224, 323, 280,
	333, 346, 347, 178, 246, 340, 317, 343, 355, 157,
	175, 259, 313, 337, 305, 241, 320, 215, 304, 196,
	146, 149, 315, 331, 166, 298, 0, 0, 0, 151,
	329, 312, 239, 212, 213, 150, 0, 284, 181, 194,
	174, 255, 326, 327, 173, 356, 158, 342, 153, 159,
	341, 248, 322, 330, 240, 232, 152, 328, 238, 231,
	218, 188, 202, 278, 227, 279, 203, 244, 243, 245,
	0, 148, 0, 310, 338, 357, 163, 0, 0, 318,
	351, 354, 0, 281, 164, 195, 187, 277, 193, 221,
	350, 352, 353, 162, 275, 200, 247, 160, 205, 306,
	217, 225, 0, 0, 264, 289, 167, 336, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	154, 222, 0, 282, 192, 339, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 145, 155, 161, 168, 176, 186, 190, 198,
	201, 204, 207, 208, 210, 214, 230, 234, 235, 236,
	237, 249, 250, 251, 254, 257, 258, 260, 262, 263,
	266, 270, 271, 272, 273, 274, 276, 283, 285, 291,
	292, 293, 294, 295, 296, 297, 300, 301, 302, 303,
	311, 314, 324, 325, 335, 344, 348, 199, 332, 349,
	256, 229, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 920, 0, 0, 0, 220, 0, 0, 268, 0,
	299, 171, 228, 226, 321, 189, 185, 182, 170, 206,
	233, 267, 316, 261, 0, 223, 0, 0, 308, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 169, 147, 253, 309,
	191, 0, 0, 0, 129, 130, 131, 0, 919, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 180, 209, 184, 179, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 216, 143, 156, 0, 0, 252,
	286, 290, 0, 0, 0, 172, 0, 288, 265, 334,
	0, 269, 287, 224, 323, 280, 333, 346, 347, 178,
	246, 340, 317, 343, 355, 157, 175, 259, 313, 337,
	305, 241, 320, 215, 304, 196, 146, 149, 315, 331,
	166, 298, 0, 0, 0, 151, 329, 312, 239, 212,
	213, 150, 0, 284, 181, 194, 174, 255, 326, 327,
	173, 356, 158, 342, 153, 159, 341, 248, 322, 330,
	240, 232, 152, 328, 238, 231, 218, 188, 202, 278,
	227, 279, 203, 244, 243, 245, 0, 148, 0, 310,
	338, 357, 163, 0, 0, 318, 351, 354, 0, 281,
	164, 195, 187, 277, 193, 221, 350, 352, 353, 162,
	275, 200, 247, 160, 205, 306, 217, 225, 0, 0,
	264, 289, 167, 336, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 154, 222, 0, 282,
	192, 339, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 145, 155,
	161, 168, 176, 186, 190, 198, 201, 204, 207, 208,
	210, 214, 230, 234, 235, 236, 237, 249, 250, 251,
	254, 257, 258, 260, 262, 263, 266, 270, 271, 272,
	273, 274, 276, 283, 285, 291, 292, 293, 294, 295,
	296, 297, 300, 301, 302, 303, 311, 314, 324, 325,
	335, 344, 348, 199, 332, 349, 256, 229, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 220, 0, 0, 268, 0, 299, 171, 228, 226,
	321, 189, 185, 182, 170, 206, 233, 267, 316, 261,
	0, 223, 0, 0, 308, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 211, 169, 147, 253, 309, 191, 0, 0, 484,
	129, 130, 131, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 180, 209, 184,
	179, 319, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 0, 0, 0, 0, 345,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	216, 143, 156, 0, 0, 252, 286, 290, 0, 0,
	0, 172, 0, 288, 265, 334, 0, 269, 287, 224,
	323, 280, 333, 346, 347, 178, 246, 340, 317, 343,
	355, 157, 175, 259, 313, 337, 305, 241, 320, 215,
	304, 196, 146, 149, 315, 331, 166, 298, 0, 0,
	0, 151, 329, 312, 239, 212, 213, 150, 0, 284,
	181, 194, 174, 255, 326, 327, 173, 356, 158, 342,
	153, 159, 341, 248, 322, 330, 240, 232, 152, 328,
	238, 231, 218, 188, 202, 278, 227, 279, 203, 244,
	243, 245, 0, 148, 0, 310, 338, 357, 163, 0,
	0, 318, 351, 354, 0, 281, 164, 195, 187, 277,
	193, 221, 350, 352, 353, 162, 275, 200, 247, 160,
	205, 306, 217, 225, 0, 0, 264, 289, 167, 336,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 154, 222, 0, 282, 192, 339, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 144, 145, 155, 161, 168, 176, 186,
	190, 198, 201, 204, 207, 208, 210, 214, 230, 234,
	235, 236, 237, 249, 250, 251, 254, 257, 258, 260,
	262, 263, 266, 270, 271, 272, 273, 274, 276, 283,
	285, 291, 292, 293, 294, 295, 296, 297, 300, 301,
	302, 303, 311, 314, 324, 325, 335, 344, 348, 199,
	332, 349, 256, 229, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 220, 0, 0,
	268, 0, 299, 171, 228, 226, 321, 189, 185, 182,
	170, 206, 233, 267, 316, 261, 0, 223, 0, 0,
	308, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 211, 169, 147,
	253, 309, 191, 67, 0, 0, 129, 130, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 180, 209, 184, 179, 319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	197, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 216, 143, 156, 0,
	0, 252, 286, 290, 0, 0, 0, 172, 0, 288,
	265, 334, 0, 269, 287, 224, 323, 280, 333, 346,
	347, 178, 246, 340, 317, 343, 355, 157, 175, 259,
	313, 337, 305, 241, 320, 215, 304, 196, 146, 149,
	315, 331, 166, 298, 0, 0, 0, 151, 329, 312,
	239, 212, 213, 150, 0, 284, 181, 194, 174, 255,
	326, 327, 173, 356, 158, 342, 153, 159, 341, 248,
	322, 330, 240, 232, 152, 328, 238, 231, 218, 188,
	202, 278, 227, 279, 203, 244, 243, 245, 0, 148,
	0, 310, 338, 357, 163, 0, 0, 318, 351, 354,
	0, 281, 164, 195, 187, 277, 193, 221, 350, 352,
	353, 162, 275, 200, 247, 160, 205, 306, 217, 225,
	0, 0, 264, 289, 167, 336, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 154, 222,
	0, 282, 192, 339, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	145, 155, 161, 168, 176, 186, 190, 198, 201, 204,
	207, 208, 210, 214, 230, 234, 235, 236, 237, 249,
	250, 251, 254, 257, 258, 260, 262, 263, 266, 270,
	271, 272, 273, 274, 276, 283, 285, 291, 292, 293,
	294, 295, 296, 297, 300, 301, 302, 303, 311, 314,
	324, 325, 335, 344, 348, 199, 332, 349, 256, 229,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 220, 0, 0, 268, 0, 299, 171,
	228, 226, 321, 189, 185, 182, 170, 206, 233, 267,
	316, 261, 0, 223, 0, 0, 308, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 211, 169, 147, 253, 309, 191, 0,
	0, 0, 129, 130, 131, 0, 1160, 0, 0, 0,
	0, 0, 0, 165, 0, 0, 0, 0, 0, 180,
	209, 184, 179, 319, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 0, 0, 0,
	0, 345, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 216, 143, 156, 0, 0, 252, 286, 290,
	0, 0, 0, 172, 0, 288, 265, 334, 0, 269,
	287, 224, 323, 280, 333, 346, 347, 178, 246, 340,
	317, 343, 355, 157, 175, 259, 313, 337, 305, 241,
	320, 215, 304, 196, 146, 149, 315, 331, 166, 298,
	0, 0, 0, 151, 329, 312, 239, 212, 213, 150,
	0, 284, 181, 194, 174, 255, 326, 327, 173, 356,
	158, 342, 153, 159, 341, 248, 322, 330, 240, 232,
	152, 328, 238, 231, 218, 188, 202, 278, 227, 279,
	203, 244, 243, 245, 0, 148, 0, 310, 338, 357,
	163, 0, 0, 318, 351, 354, 0, 281, 164, 195,
	187, 277, 193, 221, 350, 352, 353, 162, 275, 200,
	247, 160, 205, 306, 217, 225, 0, 0, 264, 289,
	167, 336, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 154, 222, 0, 282, 192, 339,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 145, 155, 161, 168,
	176, 186, 190, 198, 201, 204, 207, 208, 210, 214,
	230, 234, 235, 236, 237, 249, 250, 251, 254, 257,
	258, 260, 262, 263, 266, 270, 271, 272, 273, 274,
	276, 283, 285, 291, 292, 293, 294, 295, 296, 297,
	300, 301, 302, 303, 311, 314, 324, 325, 335, 344,
	348, 199, 332, 349, 256, 229, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 220,
	0, 0, 268, 0, 299, 171, 228, 226, 321, 189,
	185, 182, 170, 206, 233, 267, 316, 261, 0, 223,
	0, 0, 308, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 211,
	169, 147, 253, 309, 191, 0, 0, 0, 129, 130,
	131, 0, 889, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 180, 209, 184, 179, 319,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 216, 143,
	156, 0, 0, 252, 286, 290, 0, 0, 0, 172,
	0, 288, 265, 334, 0, 269, 287, 224, 323, 280,
	333, 346, 347, 178, 246, 340, 317, 343, 355, 157,
	175, 259, 313, 337, 305, 241, 320, 215, 304, 196,
	146, 149, 315, 331, 166, 298, 0, 0, 0, 151,
	329, 312, 239, 212, 213, 150, 0, 284, 181, 194,
	174, 255, 326, 327, 173, 356, 158, 342, 153, 159,
	341, 248, 322, 330, 240, 232, 152, 328, 238, 231,
	218, 188, 202, 278, 227, 279, 203, 244, 243, 245,
	0, 148, 0, 310, 338, 357, 163, 0, 0, 318,
	351, 354, 0, 281, 164, 195, 187, 277, 193, 221,
	350, 352, 353, 162, 275, 200, 247, 160, 205, 306,
	217, 225, 0, 0, 264, 289, 167, 336, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	154, 222, 0, 282, 192, 339, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 145, 155, 161, 168, 176, 186, 190, 198,
	201, 204, 207, 208, 210, 214, 230, 234, 235, 236,
	237, 249, 250, 251, 254, 257, 258, 260, 262, 263,
	266, 270, 271, 272, 273, 274, 276, 283, 285, 291,
	292, 293, 294, 295, 296, 297, 300, 301, 302, 303,
	311, 314, 324, 325, 335, 344, 348, 199, 332, 349,
	256, 229, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 220, 0, 0, 268, 0,
	299, 171, 228, 226, 321, 189, 185, 182, 170, 206,
	233, 267, 316, 261, 0, 223, 0, 0, 308, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 211, 169, 147, 253, 309,
	191, 991, 0, 0, 129, 130, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 165, 0, 0, 0, 0,
	0, 180, 209, 184, 179, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	0, 0, 0, 345, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 216, 143, 156, 0, 0, 252,
	286, 290, 0, 0, 0, 172, 0, 288, 265, 334,
	0, 269, 287, 224, 323, 280, 333, 346, 347, 178,
	246, 340, 317, 343, 355, 157, 175, 259, 313, 337,
	305, 241, 320, 215, 304, 196, 146, 149, 315, 331,
	166, 298, 0, 0, 0, 151, 329, 312, 239, 212,
	213, 150, 0, 284, 181, 194, 174, 255, 326, 327,
	173, 356, 158, 342, 153, 159, 341, 248, 322, 330,
	240, 232, 152, 328, 238, 231, 218, 188, 202, 278,
	227, 279, 203, 244, 243, 245, 0, 148, 0, 310,
	338, 357, 163, 0, 0, 318, 351, 354, 0, 281,
	164, 195, 187, 277, 193, 221, 350, 352, 353, 162,
	275, 200, 247, 160, 205, 306, 217, 225, 0, 0,
	264, 289, 167, 336, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 154, 222, 0, 282,
	192, 339, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 144, 145, 155,
	161, 168, 176, 186, 190, 198, 201, 204, 207, 208,
	210, 214, 230, 234, 235, 236, 237, 249, 250, 251,
	254, 257, 258, 260, 262, 263, 266, 270, 271, 272,
	273, 274, 276, 283, 285, 291, 292, 293, 294, 295,
	296, 297, 300, 301, 302, 303, 311, 314, 324, 325,
	335, 344, 348, 199, 332, 349, 902, 229, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 220, 0,
	0, 268, 0, 299, 171, 228, 226, 321, 189, 185,
	182, 170, 206, 233, 267, 316, 261, 0, 223, 0,
	0, 308, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 169,
	147, 253, 309, 191, 0, 0, 0, 129, 130, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 180, 209, 184, 179, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 216, 143, 156,
	0, 0, 252, 286, 290, 0, 0, 0, 172, 0,
	288, 265, 334, 0, 269, 287, 224, 323, 280, 333,
	346, 347, 178, 246, 340, 317, 343, 355, 157, 175,
	259, 313, 337, 305, 241, 320, 215, 304, 196, 146,
	149, 315, 331, 166, 298, 0, 0, 0, 151, 329,
	312, 239, 212, 213, 150, 0, 284, 181, 194, 174,
	255, 326, 327, 173, 356, 158, 342, 153, 159, 341,
	248, 322, 330, 240, 232, 152, 328, 238, 231, 218,
	188, 202, 278, 227, 279, 203, 244, 243, 245, 0,
	148, 0, 310, 338, 357, 163, 0, 0, 318, 351,
	354, 0, 281, 164, 195, 187, 277, 193, 221, 350,
	352, 353, 162, 275, 200, 247, 160, 205, 306, 217,
	225, 0, 0, 264, 289, 167, 336, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 154,
	222, 0, 282, 192, 339, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 155, 161, 168, 176, 186, 190, 198, 201,
	204, 207, 208, 210, 214, 230, 234, 235, 236, 237,
	249, 250, 251, 254, 257, 258, 260, 262, 263, 266,
	270, 271, 272, 273, 274, 276, 283, 285, 291, 292,
	293, 294, 295, 296, 297, 300, 301, 302, 303, 311,
	314, 324, 325, 335, 344, 348, 199, 332, 349, 256,
	229, 0, 0, 0, 0, 0, 0, 893, 183, 0,
	0, 0, 0, 0, 220, 0, 0, 268, 0, 299,
	171, 228, 226, 321, 189, 185, 182, 170, 206, 233,
	267, 316, 261, 0, 223, 0, 0, 308, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 211, 169, 147, 253, 309, 191,
	0, 0, 0, 129, 130, 131, 0, 0, 0, 0,
	0, 0, 0, 0, 165, 0, 0, 0, 0, 0,
	180, 209, 184, 179, 319, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 197, 0, 0,
	0, 0, 345, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 216, 143, 156, 0, 0, 252, 286,
	290, 0, 0, 0, 172, 0, 288, 265, 334, 0,
	269, 287, 224, 323, 280, 333, 346, 347, 178, 246,
	340, 317, 343, 355, 157, 175, 259, 313, 337, 305,
	241, 320, 215, 304, 196, 146, 149, 315, 331, 166,
	298, 0, 0, 0, 151, 329, 312, 239, 212, 213,
	150, 0, 284, 181, 194, 174, 255, 326, 327, 173,
	356, 158, 342, 153, 159, 341, 248, 322, 330, 240,
	232, 152, 328, 238, 231, 218, 188, 202, 278, 227,
	279, 203, 244, 243, 245, 0, 148, 0, 310, 338,
	357, 163, 0, 0, 318, 351, 354, 0, 281, 164,
	195, 187, 277, 193, 221, 350, 352, 353, 162, 275,
	200, 247, 160, 205, 306, 217, 225, 0, 0, 264,
	289, 167, 336, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 154, 222, 0, 282, 192,
	339, 0, 0, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 144, 145, 155, 161,
	168, 176, 186, 190, 198, 201, 204, 207, 208, 210,
	214, 230, 234, 235, 236, 237, 249, 250, 251, 254,
	257, 258, 260, 262, 263, 266, 270, 271, 272, 273,
	274, 276, 283, 285, 291, 292, 293, 294, 295, 296,
	297, 300, 301, 302, 303, 311, 314, 324, 325, 335,
	344, 348, 199, 332, 349, 256, 229, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	220, 0, 0, 268, 0, 299, 171, 228, 226, 321,
	189, 185, 182, 170, 206, 233, 267, 316, 261, 0,
	223, 0, 0, 308, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	211, 169, 147, 253, 309, 191, 0, 0, 0, 129,
	130, 131, 0, 767, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 180, 209, 184, 179,
	319, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 197, 0, 0, 0, 0, 345, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 216,
	143, 156, 0, 0, 252, 286, 290, 0, 0, 0,
	172, 0, 288, 265, 334, 0, 269, 287, 224, 323,
	280, 333, 346, 347, 178, 246, 340, 317, 343, 355,
	157, 175, 259, 313, 337, 305, 241, 320, 215, 304,
	196, 146, 149, 315, 331, 166, 298, 0, 0, 0,
	151, 329, 312, 239, 212, 213, 150, 0, 284, 181,
	194, 174, 255, 326, 327, 173, 356, 158, 342, 153,
	159, 341, 248, 322, 330, 240, 232, 152, 328, 238,
	231, 218, 188, 202, 278, 227, 279, 203, 244, 243,
	245, 0, 148, 0, 310, 338, 357, 163, 0, 0,
	318, 351, 354, 0, 281, 164, 195, 187, 277, 193,
	221, 350, 352, 353, 162, 275, 200, 247, 160, 205,
	306, 217, 225, 0, 0, 264, 289, 167, 336, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 154, 222, 0, 282, 192, 339, 0, 0, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 144, 145, 155, 161, 168, 176, 186, 190,
	198, 201, 204, 207, 208, 210, 214, 230, 234, 235,
	236, 237, 249, 250, 251, 254, 257, 258, 260, 262,
	263, 266, 270, 271, 272, 273, 274, 276, 283, 285,
	291, 292, 293, 294, 295, 296, 297, 300, 301, 302,
	303, 311, 314, 324, 325, 335, 344, 348, 199, 332,
	349, 256, 229, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 220, 0, 0, 268,
	0, 299, 171, 228, 226, 321, 189, 185, 182, 170,
	206, 233, 267, 316, 261, 0, 223, 0, 0, 308,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 169, 147, 253,
	309, 191, 0, 0, 0, 129, 130, 131, 0, 0,
	0, 0, 0, 0, 0, 0, 165, 0, 0, 0,
	0, 0, 180, 209, 184, 179, 319, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 400, 0, 197,
	0, 0, 0, 0, 345, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 216, 143, 156, 0, 0,
	252, 286, 290, 0, 0, 0, 172, 0, 288, 265,
	334, 0, 269, 287, 224, 323, 280, 333, 346, 347,
	178, 246, 340, 317, 343, 355, 157, 175, 259, 313,
	337, 305, 241, 320, 215, 304, 196, 146, 149, 315,
	331, 166, 298, 0, 0, 0, 151, 329, 312, 239,
	212, 213, 150, 0, 284, 181, 194, 174, 255, 326,
	327, 173, 356, 158, 342, 153, 159, 341, 248, 322,
	330, 240, 232, 152, 328, 238, 231, 218, 188, 202,
	278, 227, 279, 203, 244, 243, 245, 0, 148, 0,
	310, 338, 357, 163, 0, 0, 318, 351, 354, 0,
	281, 164, 195, 187, 277, 193, 221, 350, 352, 353,
	162, 275, 200, 247, 160, 205, 306, 217, 225, 0,
	0, 264, 289, 167, 336, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 142, 154, 222, 0,
	282, 192, 339, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 144, 145,
	155, 161, 168, 176, 186, 190, 198, 201, 204, 207,
	208, 210, 214, 230, 234, 235, 236, 237, 249, 250,
	251, 254, 257, 258, 260, 262, 263, 266, 270, 271,
	272, 273, 274, 276, 283, 285, 291, 292, 293, 294,
	295, 296, 297, 300, 301, 302, 303, 311, 314, 324,
	325, 335, 344, 348, 399, 332, 349, 256, 229, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 220, 0, 0, 268, 0, 299, 171, 228,
	226, 321, 189, 185, 182, 170, 206, 233, 267, 316,
	261, 0, 223, 0, 0, 308, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 211, 169, 147, 253, 309, 191, 0, 0,
	0, 129, 130, 131, 0, 0, 0, 0, 0, 0,
	0, 0, 165, 0, 0, 0, 0, 0, 180, 209,
	184, 179, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 0, 0, 137, 0,
	345, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 216, 143, 156, 0, 0, 252, 286, 290, 0,
	0, 0, 172, 0, 288, 265, 334, 0, 269, 287,
	224, 323, 280, 333, 346, 347, 178, 246, 340, 317,
	343, 355, 157, 175, 259, 313, 337, 305, 241, 320,
	215, 304, 196, 146, 149, 315, 331, 166, 298, 0,
	0, 0, 151, 329, 312, 239, 212, 213, 150, 0,
	284, 181, 194, 174, 255, 326, 327, 173, 356, 158,
	342, 153, 159, 341, 248, 322, 330, 240, 232, 152,
	328, 238, 231, 218, 188, 202, 278, 227, 279, 203,
	244, 243, 245, 0, 148, 0, 310, 338, 357, 163,
	0, 0, 318, 351, 354, 0, 281, 164, 195, 187,
	277, 193, 221, 350, 352, 353, 162, 275, 200, 247,
	160, 205, 306, 217, 225, 0, 0, 264, 289, 167,
	336, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 142, 154, 222, 0, 282, 192, 339, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 144, 145, 155, 161, 168, 176,
	186, 190, 198, 201, 204, 207, 208, 210, 214, 230,
	234, 235, 236, 237, 249, 250, 251, 254, 257, 258,
	260, 262, 263, 266, 270, 271, 272, 273, 274, 276,
	283, 285, 291, 292, 293, 294, 295, 296, 297, 300,
	301, 302, 303, 311, 314, 324, 325, 335, 344, 348,
	199, 332, 349, 256, 229, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 220, 0,
	0, 268, 0, 299, 171, 228, 226, 321, 189, 185,
	182, 170, 206, 233, 267, 316, 261, 0, 223, 0,
	0, 308, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 211, 169,
	147, 253, 309, 191, 0, 0, 0, 129, 130, 131,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 180, 209, 184, 179, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 197, 0, 0, 0, 0, 345, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 216, 143, 156,
	0, 0, 252, 286, 290, 0, 0, 0, 172, 0,
	288, 265, 334, 0, 269, 287, 224, 323, 280, 333,
	346, 347, 178, 246, 340, 317, 343, 355, 157, 175,
	259, 313, 337, 305, 241, 320, 215, 304, 196, 146,
	149, 315, 331, 166, 298, 0, 0, 0, 151, 329,
	312, 239, 212, 213, 150, 0, 284, 181, 194, 174,
	255, 326, 327, 173, 356, 158, 342, 153, 159, 341,
	248, 322, 330, 240, 232, 152, 328, 238, 231, 218,
	188, 202, 278, 227, 279, 203, 244, 243, 245, 0,
	148, 0, 310, 338, 357, 163, 0, 0, 318, 351,
	354, 0, 281, 164, 195, 187, 277, 193, 221, 350,
	352, 353, 162, 275, 200, 247, 160, 205, 306, 217,
	225, 0, 0, 264, 289, 167, 336, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 154,
	222, 0, 282, 192, 339, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 145, 155, 161, 168, 176, 186, 190, 198, 201,
	204, 207, 208, 210, 214, 230, 234, 235, 236, 237,
	249, 250, 251, 254, 257, 258, 260, 262, 263, 266,
	270, 271, 272, 273, 274, 276, 283, 285, 291, 292,
	293, 294, 295, 296, 297, 300, 301, 302, 303, 311,
	314, 324, 325, 335, 344, 348, 199, 332, 349, 0,
	229,
}

var yyPact = [...]int{
	1981, -1000, -301, 1412, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1344, 955, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	368, 1017, 117, 1266, 179, 46, 736, 220, 33, 19718,
	219, 31, 20114, -1000, 41, -1000, 28, 20114, 37, 19322,
	-1000, -1000, -1000, 10973, 1195, -78, -96, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 980, 1297, 1302, 1341, 777,
	1375, -1000, 9376, 9376, 194, 194, 194, 7792, -1000, -1000,
	13758, 20114, 20114, 1022, 195, 217, 195, -168, -1000, -1000,
	-1000, -1000, -1000, -1000, 1266, -1000, -1000, 89, -1000, -1000,
	938, -1000, 307, 347, 182, 182, -11, 205, 1211, 1208,
	412, 409, 319, 20114, -1000, 20114, 314, 1266, 97, -1000,
	-1000, -1000, 20114, 192, 736, 192, 192, 20114, -1000, 269,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20114, 1245,
	432, 432, 432, 432, 432, 432, 0, -1000, -3, 98,
	92, 90, -26, 736, 101, -1000, 320, -1000, 87, 18,
	-1000, 432, 5314, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 203, -1000, -1000, -1000, -1000, 20114, 18926, 193, 356,
	-1000, -1000, -1000, -1000, 773, 589, -1000, 10973, 1987, 956,
	956, -1000, -1000, 259, -1000, -1000, 11765, 11765, 11765, 11765,
	11765, 11765, 11765, 11765, 11765, 11765, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	956, 268, -1000, 10577, 956, 956, 956, 956, 956, 956,
	956, 956, 10973, 956, 956, 956, 956, 956, 956, 956,
	956, 956, 956, 956, 956, 956, 956, 956, 956, -1000,
	-1000, -1000, 20114, -1000, 1344, -1000, 955, -1000, -1000, -1000,
	1247, 10973, 10973, 1344, -1000, 1135, 9376, -1000, -1000, 1228,
	-1000, -1000, -1000, -1000, 442, 1382, -1000, 12953, 267, 1379,
	18530, -1000, 16543, 18134, 936, 7379, -138, -1000, -1000, -1000,
	355, 15751, -1000, -1000, -1000, 1242, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 894,
	20114, -1000, -1000, 357, 736, -1000, 1015, -1000, 890, -1000,
	961, 79, 353, 20114, 402, 736, 736, -1000, -1000, -1000,
	1237, 347, 179, -1000, -1000, -1000, 17731, 736, -1000, 1005,
	-1000, 1277, 186, 341, 341, 736, -1000, -1000, 1079, -1000,
	20114, 20114, 1231, -12, -1000, -1000, -1000, -1000, 20114, 736,
	1276, 1273, -1000, 5314, 131, 149, 110, 20114, 1266, 1194,
	935, 201, 20114, 1291, 1083, 20114, 736, -1000, 6553, -1000,
	432, -1000, 683, 10973, -1000, -1000, -1000, -1000, -1000, 432,
	20114, 432, 20114, 432, 432, 432, 432, 462, 509, 462,
	-1000, -1000, -1000, -1000, 5314, 5314, 20114, 5314, 5314, 20114,
	5314, 5314, 509, -1000, -1000, -1000, 332, -1000, 1078, -1000,
	-1000, -1000, -1000, 36, -1000, -1000, -1000, -1000, -1000, 1412,
	-1000, -1000, -1000, -148, 10973, 10973, 10973, 10973, 750, 334,
	11765, 570, 404, 11765, 11765, 11765, 11765, 11765, 11765, 11765,
	11765, 11765, 11765, 11765, 11765, 11765, 11765, 11765, 778, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 736, -1000, 1410,
	809, 809, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 12161, 8188, 6553, 777, 886, 1344, 9376, 9376, 10973,
	10973, 10168, 9772, 9376, 1222, 393, 589, 20114, -1000, -1000,
	11369, -1000, -1000, -1000, -1000, -1000, 685, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 20114, 20114, 9376, 9376, 9376, 9376,
	9376, -1000, 934, -1000, -186, 15355, 1302, 777, 1228, 1286,
	1405, 315, 582, 918, -1000, 635, 1302, 14959, 973, -1000,
	1228, -1000, -1000, -1000, 20114, -1000, -1000, 17335, -1000, -1000,
	6140, 20114, 144, 20114, -1000, 949, 1272, -1000, -1000, -1000,
	1294, 14563, 20114, 908, 889, -1000, -1000, 266, 6966, -138,
	-1000, 6966, 892, -1000, -125, -111, 8584, 277, -1000, -1000,
	-1000, -1000, 4488, 12557, 769, 415, -52, -1000, -1000, -1000,
	961, -1000, 961, 961, 961, 961, -20, -20, -20, -20,
	-1000, -1000, -1000, -1000, -1000, 1000, 995, -1000, 961, 961,
	961, 961, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 981,
	981, 981, 965, 965, 177, -1000, 10973, 58, 20114, 1285,
	549, 67, 350, 118, -1000, 1288, 1034, -1000, 347, 856,
	-1000, 20114, 48, -1000, 170, -1000, 20114, 968, 1271, 341,
	736, -1000, 736, -1000, -1000, -1000, -1000, -1000, 365, -1000,
	264, 20114, 347, 1223, -1000, -1000, -1000, 736, -1000, 20114,
	20114, 20114, 20114, 20114, 236, 107, 20114, 20114, 912, -1000,
	20114, 5314, -1000, -1000, -1000, -1000, -1000, -1000, 589, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 432, 20114, 20114,
	20114, -1000, -1000, 432, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 20114, -1000, 678, 20114, 20114, -1000, -1000, -1000,
	-1000, -1000, 589, 334, 574, 337, -1000, -1000, 436, -1000,
	-1000, 1711, -1000, -1000, -1000, -1000, 570, 11765, 11765, 11765,
	297, 1711, 1437, 591, 1777, 279, 317, 317, 302, 302,
	302, 302, 302, 538, 538, -1000, -1000, -1000, 685, -1000,
	-1000, -1000, 685, 9376, 9376, 903, 956, 263, -1000, 980,
	-1000, -1000, 1302, 855, 855, 680, 684, 430, 1369, 855,
	387, 1362, 855, 855, 9376, -1000, -1000, 383, -1000, 10973,
	685, -1000, 495, 902, 901, 855, 685, 685, 855, 855,
	20114, -1000, -297, -1000, -144, 285, 956, -1000, 16939, -1000,
	-1000, 1247, -1000, -1000, 1181, -1000, 1132, 10973, 10973, 10973,
	-1000, -1000, -1000, 1247, 1384, -1000, 1148, 1146, 1356, 9376,
	16543, 1228, -1000, -1000, -1000, 262, 1356, 960, 956, -1000,
	20114, 16543, 16543, 16543, 16543, 16543, -1000, 1116, 1102, -1000,
	1096, 1095, 1123, 20114, -1000, 873, 777, 14563, 144, 876,
	16543, 20114, -1000, -1000, 16543, 20114, 5727, -1000, 892, -138,
	-84, -1000, -1000, -1000, -1000, 589, -1000, 834, 850, 4075,
	-1000, -1000, -1000, -1000, 168, -1000, -1000, -1000, -1000, 1256,
	-1000, 423, -70, -1000, -1000, -20, -20, -1000, -1000, 277,
	1220, 277, 277, 277, 667, 667, -1000, -1000, -1000, -1000,
	-1000, 546, -1000, -1000, -1000, 488, -1000, -1000, 632, 1076,
	58, -1000, -1000, 347, 657, 1199, 20114, -1000, -1000, 756,
	207, 56, 83, -1000, -1000, -1000, -1000, 1077, -1000, 796,
	-1000, -1000, 871, -1000, 45, 20114, -1000, 865, 20114, -1000,
	736, -1000, -1000, 1252, 1248, 6553, 48, 778, 778, -1000,
	1026, -1000, -1000, -1000, -1000, 24, 115, 102, 199, -1000,
	5314, -1000, -1000, -1000, -1000, 462, -1000, 462, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 297, 1711, 985, -1000, 11765,
	11765, -1000, -1000, 855, 855, 9376, 6553, 1344, 1247, -1000,
	-1000, 126, 778, 126, 11765, 11765, -1000, 11765, 11765, -1000,
	-183, 913, 363, -1000, 10973, 578, -1000, -1000, 11765, 11765,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 216,
	215, 212, 20114, -1000, -1000, 679, 656, 1125, 589, 589,
	-1000, -1000, 20114, -1000, -1000, -1000, -1000, 1349, 10973, -1000,
	801, -1000, 4901, 1302, 1059, 20114, 956, 1412, 13362, 20114,
	914, -1000, 348, 1272, 1052, 1058, 1260, -1000, -1000, -1000,
	-1000, 1098, -1000, 1094, -1000, -1000, -1000, -1000, -1000, 777,
	1356, 16543, 878, -1000, 878, -1000, 252, -1000, -1000, -1000,
	-130, -154, -1000, -1000, -1000, 4488, -1000, 4488, -1000, 1056,
	11765, -1000, -1000, -1000, 277, 277, -1000, 573, -1000, -1000,
	-1000, 852, -1000, 832, 790, 829, 22, -1000, 953, 1215,
	347, 347, -1000, 479, -1000, 736, -1000, -1000, 20114, 59,
	-1000, 967, 688, -1000, 20114, -1000, -1000, 20114, -1000, -1000,
	20114, -1000, 58, 805, -1000, -1000, -1000, 809, -1000, 45,
	278, 277, -185, 736, 20114, 20114, 20114, -1000, 20114, -1000,
	432, 432, -1000, 11765, 1711, 1711, -1000, -1000, 685, -1000,
	1302, -1000, 685, 961, 961, -1000, 961, 965, -1000, 961,
	27, 961, 20, 685, 685, 1835, 1039, 511, 417, 956,
	-175, -1000, 589, 10973, 1007, 696, 956, 956, 956, 792,
	-1000, 649, -20, -1000, -1000, -1000, 1347, 1339, 589, -1000,
	-1000, -1000, 1279, 812, 714, -1000, -1000, 8980, 795, 1138,
	242, 792, 1344, 20114, 10973, -1000, -1000, 10973, 959, -1000,
	10973, -1000, -1000, -1000, 1344, 1344, 878, -1000, -1000, 306,
	-1000, -1000, -1000, 4075, -1000, -45, 1396, 1711, -1000, -1000,
	-1000, -1000, -20, 648, -20, 455, -1000, 450, -1000, -1000,
	-233, -1000, -1000, 1012, 1072, -1000, -1000, 958, -1000, -1000,
	-1000, 729, -1000, -1000, -1000, -1000, -1000, 160, 20114, -1000,
	-1000, -1000, 347, -1000, -1000, 6553, -1000, -1000, 957, 1030,
	-1000, -1000, -1000, -1000, 1711, -1000, 1247, -1000, -1000, 143,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 11765, 11765,
	11765, 11765, 11765, 1302, 623, 589, 11765, 11765, 16147, 20114,
	20114, 14154, 20114, -20, -68, -1000, 10973, 10973, 1269, -1000,
	956, -1000, 972, 20114, 956, 20114, -1000, 1302, -1000, 589,
	589, 20114, 589, 1302, -1000, 342, -1000, -132, 277, -1000,
	277, 706, 702, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1293, 20114, -1000, 20114, -1000, 713, 788, -1000, 345,
	20114, 20114, -1000, -1000, -1000, 495, 495, 495, 495, 109,
	685, -1000, 495, 495, 762, -1000, 762, 762, 285, -1000,
	-292, -1000, 1190, 1183, 589, 773, 1395, -1000, 956, 1412,
	234, 714, -1000, -1000, 754, -1000, 431, 1268, -1000, 1224,
	-1000, -1000, -1000, -1000, -1000, 955, 723, 954, -1000, -1000,
	6553, 4488, 720, -1000, -1000, -1000, -1000, -1000, 685, 82,
	-189, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -68, 176,
	-1000, 1154, 1151, 1329, 20114, 714, 20114, -1000, -1000, 622,
	-1000, -1000, 132, -1000, 20114, -1000, -1000, 1026, -1000, 1124,
	-182, -195, 1158, 1162, 1162, 1183, 1327, 1179, 1169, -1000,
	615, 697, -1000, -1000, -1000, -86, 711, -185, -1000, 1121,
	-1000, 1156, 631, -1000, -1000, -1000, -1000, 606, -1000, 1322,
	1313, -1000, 174, -1000, -1000, 1055, -1000, -187, -1000, 467,
	-1000, -1000, -1000, 581, 572, 72, 1038, -1000, 1390, -192,
	-1000, -1000, -1000, -1000, -1000, -1000, 1388, 310, 310, -197,
	-1000, -1000, -1000, 169, 660, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1675, 1674, 14, 80, 77, 1668, 1667, 1666, 1665,
	128, 123, 121, 1664, 1663, 1662, 1661, 1660, 1658, 1657,
	1656, 1655, 1651, 1645, 1644, 108, 1643, 1642, 1641, 1640,
	1639, 109, 105, 446, 1638, 110, 1637, 1635, 1634, 1633,
	1628, 1625, 1616, 1615, 1614, 1612, 1611, 1610, 125, 1608,
	1606, 1604, 1601, 1600, 1599, 1598, 1596, 1595, 1593, 1592,
	101, 1590, 36, 272, 49, 66, 1587, 67, 1586, 1584,
	1583, 1579, 1577, 462, 1561, 37, 68, 63, 1560, 33,
	1559, 1558, 104, 1557, 1556, 62, 1555, 1553, 2361, 1552,
	56, 69, 12, 22, 1548, 1547, 1546, 1545, 30, 2190,
	1543, 1542, 16, 1541, 1540, 113, 1539, 74, 21, 18,
	24, 17, 1538, 78, 1537, 7, 42, 27, 1535, 75,
	1534, 1532, 1531, 1530, 40, 1529, 71, 82, 61, 1526,
	5, 9, 1525, 1524, 1520, 1519, 1518, 1517, 3, 1516,
	1515, 1514, 1512, 59, 1510, 10, 1508, 57, 41, 25,
	8, 1503, 1502, 23, 95, 55, 96, 1500, 1497, 1496,
	864, 1495, 54, 1494, 127, 1493, 39, 1490, 517, 568,
	1489, 1484, 1484, 1484, 1484, 44, 872, 1961, 65, 99,
	1483, 1482, 1739, 51, 70, 19, 1480, 1478, 1477, 106,
	64, 46, 764, 38, 1475, 1474, 1473, 1472, 1471, 1470,
	1467, 122, 1466, 1464, 1463, 143, 31, 1462, 98, 26,
	1460, 1459, 1456, 1454, 48, 34, 1452, 90, 87, 45,
	84, 1449, 100, 94, 76, 1447, 20, 1445, 1444, 1443,
	1442, 35, 13, 1441, 86, 79, 43, 29, 32, 81,
	1440, 28, 1437, 1430, 83, 89, 1430, 1430, 1430, 11,
	1429, 4, 0, 1428, 6, 102, 1428, 1225, 734, 1,
	1427, 2, 1426, 1423, 73, 1422, 1421, 1420, 1419, 2288,
	218, 97, 1418, 103,
}

var yyR1 = [...]int{
	0, 267, 268, 268, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 252, 252, 252, 255, 255, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	271, 271, 82, 82, 83, 83, 147, 147, 13, 14,
	14, 156, 156, 155, 155, 155, 157, 157, 157, 157,
	192, 192, 15, 15, 15, 15, 15, 61, 61, 254,
	254, 253, 251, 251, 250, 250, 249, 23, 24, 28,
	29, 30, 257, 257, 227, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 229, 229, 216,
	216, 228, 228, 228, 228, 228, 228, 228, 215, 194,
	194, 194, 194, 197, 197, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 196, 196, 196, 196, 196, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 214, 214, 201,
	201, 208, 208, 209, 209, 209, 211, 211, 212, 212,
	170, 170, 170, 203, 203, 204, 204, 210, 210, 205,
	205, 205, 206, 206, 206, 207, 207, 207, 213, 213,
	213, 213, 213, 202, 202, 217, 241, 241, 240, 240,
	236, 236, 236, 236, 226, 226, 233, 233, 233, 233,
	233, 225, 225, 221, 221, 221, 222, 222, 223, 223,
	220, 220, 224, 224, 235, 235, 234, 218, 218, 219,
	219, 244, 244, 244, 244, 245, 260, 261, 259, 259,
	259, 259, 259, 171, 171, 171, 230, 230, 230, 231,
	231, 231, 232, 232, 232, 258, 258, 116, 116, 117,
	117, 27, 27, 26, 26, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 256, 256,
	256, 256, 256, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 248, 246, 246, 247, 247, 17, 22, 22,
	18, 18, 18, 18, 19, 19, 36, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 163, 163, 262, 262, 165, 165,
	161, 161, 164, 164, 162, 162, 162, 166, 166, 166,
	167, 167, 266, 266, 266, 38, 38, 40, 40, 41,
	42, 42, 187, 187, 188, 188, 43, 44, 53, 53,
	53, 53, 53, 53, 55, 55, 55, 7, 7, 7,
	7, 50, 50, 50, 6, 6, 39, 39, 46, 263,
	263, 264, 265, 265, 265, 265, 47, 20, 272, 48,
	49, 49, 60, 60, 60, 56, 56, 56, 59, 59,
	59, 64, 64, 66, 66, 66, 66, 66, 67, 67,
	67, 67, 67, 67, 63, 63, 65, 65, 65, 65,
	180, 180, 180, 179, 179, 74, 74, 75, 75, 76,
	76, 77, 77, 77, 114, 91, 91, 146, 146, 145,
	145, 148, 148, 78, 78, 78, 78, 79, 79, 80,
	80, 81, 81, 186, 186, 185, 185, 185, 184, 184,
	84, 84, 84, 86, 85, 85, 85, 85, 87, 87,
	89, 89, 88, 88, 90, 92, 92, 92, 92, 92,
	93, 93, 73, 73, 73, 73, 73, 73, 73, 73,
	159, 159, 95, 95, 94, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 106, 106, 106, 106, 106, 106,
	96, 96, 96, 96, 96, 96, 96, 62, 62, 107,
	107, 107, 113, 108, 108, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 103,
	103, 103, 103, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 273, 273, 105, 104, 104, 104, 104, 104,
	104, 104, 58, 58, 58, 58, 58, 191, 191, 193,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 120, 120, 57, 57, 118, 118, 119, 121,
	121, 115, 115, 115, 98, 98, 98, 98, 98, 98,
	98, 98, 100, 100, 100, 122, 122, 123, 123, 124,
	124, 125, 125, 126, 127, 127, 127, 128, 128, 128,
	128, 242, 242, 242, 242, 242, 237, 237, 237, 237,
	238, 238, 238, 68, 68, 68, 68, 70, 70, 69,
	69, 51, 51, 52, 52, 52, 71, 71, 72, 72,
	72, 72, 143, 143, 143, 129, 129, 129, 129, 134,
	134, 134, 130, 130, 132, 132, 132, 133, 133, 133,
	131, 137, 137, 139, 139, 138, 138, 136, 136, 141,
	141, 140, 140, 135, 135, 97, 97, 97, 97, 97,
	144, 144, 144, 144, 149, 149, 109, 109, 111, 111,
	110, 112, 150, 150, 153, 151, 151, 154, 154, 154,
	154, 154, 152, 152, 152, 181, 181, 181, 158, 158,
	168, 168, 169, 169, 160, 160, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 173, 173, 173, 174,
	174, 142, 142, 142, 142, 243, 243, 239, 177, 177,
	178, 178, 182, 182, 183, 183, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 269, 270, 189, 190, 190, 190,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 3, 3, 0, 2,
	1, 2, 1, 0, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 0, 1, 0, 2, 0,
	2, 0, 1, 1, 3, 2, 2, 2, 5, 5,
	3, 3, 3, 5, 6, 6, 6, 6, 2, 2,
	2, 2, 3, 3, 3, 4, 2, 4, 3, 6,
	7, 5, 5, 5, 12, 7, 5, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 5, 4, 3, 2, 3, 4, 3, 3,
	3, 3, 3, 3, 4, 2, 4, 4, 4, 4,
	4, 5, 7, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 7, 2, 4, 5, 4, 3, 3,
	5, 2, 3, 3, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 0, 2, 2, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 0, 3, 3, 3, 0, 3, 1,
	1, 0, 4, 0, 1, 1, 0, 3, 1, 3,
	2, 1, 0, 2, 4, 0, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	3, 0, 4, 0, 1, 2, 1, 5, 4, 4,
	1, 3, 3, 5, 0, 5, 1, 3, 1, 2,
	3, 1, 1, 3, 3, 1, 3, 3, 3, 3,
	3, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -267, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -269, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 151, -29, -24, 152, -30, 154, 153, 188,
	155, 181, 70, 216, 217, 219, 220, 221, 222, -55,
	186, 187, 157, 35, 41, 32, 33, 80, 9, 314,
	183, 182, 26, -268, 418, -60, 5, -124, 16, -3,
	-48, -272, -48, -48, -48, -48, -48, -48, -227, -229,
	80, 124, 80, -61, 160, -142, -257, 105, 166, 169,
	170, 305, 159, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 156, 76, 152, 158, -35, 315, 103, 102,
	100, 101, 153, 160, -257, 162, 276, -255, -252, 83,
	84, 85, 160, 160, 161, 162, -257, 160, -88, -182,
	-252, -176, 324, 174, 356, 357, 215, 76, 266, 216,
	230, 224, 251, 243, 325, 358, 175, 204, 241, 244,
	292, 359, 288, 271, 279, 94, 219, 301, 360, 75,
	47, 40, 184, 239, 235, 205, 361, 333, 198, 103,
	100, 233, 46, 28, 102, 45, 362, 281, 256, 44,
	363, 79, 329, 283, 234, 280, 214, 157, 364, 412,
	290, 365, 257, 261, 366, 293, 48, 367, 368, 101,
	369, 74, 228, 229, 370, 212, 173, 295, 255, 171,
	34, 284, 326, 54, 192, 296, 42, 259, 41, 416,
	371, 254, 250, 49, 372, 373, 374, 375, 253, 227,
	249, 210, 58, 263, 262, 264, 199, 291, 246, 376,
	377, 378, 178, 77, 379, 236, 19, 380, 381, 206,
	382, 52, 383, 384, 299, 187, 385, 50, 37, 190,
	386, 387, 388, 389, 390, 289, 391, 282, 258, 260,
	194, 278, 328, 392, 232, 393, 179, 191, 186, 300,
	180, 394, 395, 396, 397, 398, 399, 400, 220, 39,
	401, 402, 403, 404, 213, 209, 294, 303, 57, 78,
	268, 405, 226, 207, 406, 217, 51, 201, 274, 104,
	211, 43, 247, 193, 407, 408, 237, 238, 252, 225,
	248, 218, 413, 195, 188, 409, 302, 208, 269, 330,
	200, 245, 242, 202, 410, 162, 196, 197, 411, 414,
	285, 275, 286, 287, 276, 203, 240, 270, 160, 244,
	292, 271, 272, 273, 284, 285, 290, 289, 194, -266,
	293, 160, -161, 142, 151, 281, -165, 282, 275, 276,
	203, -262, -252, 294, 416, 277, 283, 287, 286, -182,
	218, -187, 223, -177, -252, -176, 221, -88, -53, 412,
	155, -189, -189, -189, -108, -73, -94, 108, -99, 30,
	24, -98, -95, -115, -112, -113, 142, 143, 145, 144,
	146, 131, 132, 139, 109, 147, -103, -101, -102, -104,
	87, 86, 95, 88, 89, 90, 91, 96, 97, 98,
	-177, -182, -110, -269, 64, 65, 315, 316, 317, 318,
	323, 319, 111, 53, 304, 313, 312, 311, 308, 309,
	306, 307, 321, 322, 165, 305, 159, 137, 314, -252,
	-176, 40, 274, 274, -5, -4, -269, 6, 21, 22,
	-128, 18, 17, -270, 82, -56, -66, 59, 60, -67,
	22, 36, 63, 61, -49, -65, 133, -73, -182, -65,
	-160, 164, -160, -160, -151, -192, 218, -154, 294, 293,
	-178, -152, -177, -175, 292, 244, 291, 156, 331, 107,
	23, 25, 110, 142, 17, 111, 158, 172, 141, 168,
	315, 151, 68, 332, 306, 307, 304, 310, 317, 318,
	305, 272, 30, 11, 334, 26, 182, 22, 36, 135,
	153, 114, 115, 185, 24, 183, 98, 337, 20, 71,
	177, 12, 170, 14, 338, 339, 15, 165, 164, 126,
	161, 66, 9, 147, 27, 123, 62, 340, 29, 341,
	342, 343, 344, 64, 124, 18, 308, 309, 32, 417,
	345, 323, 189, 137, 69, 55, 108, 346, 347, 96,
	348, 99, 72, 105, 16, 67, 38, 349, 350, 167,
	351, 297, 352, 125, 154, 314, 65, 353, 159, 273,
	6, 320, 31, 181, 169, 63, 354, 160, 113, 321,
	322, 163, 97, 5, 166, 33, 10, 70, 73, 311,
	312, 313, 53, 327, 112, 13, 355, 298, 106, -228,
	124, -215, -219, -177, 176, -245, 172, -88, -235, -234,
	-177, -68, 76, -169, 165, 161, -169, 314, -31, -32,
	244, 141, 81, -219, -218, -217, -258, 176, -244, -233,
	168, 177, -225, 169, 170, -220, 161, 29, -226, 116,
	-258, -258, 244, 163, 34, 34, 104, 104, -258, -220,
	167, 177, -88, -88, 151, 153, 156, 72, -33, 200,
	-22, -88, -168, 165, -252, -168, -168, -88, 148, -88,
	31, -166, 124, 13, -166, -166, -166, -166, -166, 201,
	288, 201, 288, 201, 202, 201, 202, 201, -164, -163,
	279, 280, 274, 278, -252, 305, 290, -252, 194, 160,
	195, 162, -221, 161, 34, 173, 202, 274, 197, -166,
	-190, -269, -178, 163, -177, -50, -177, 87, -7, -3,
	-11, -10, -12, 116, 81, 107, 105, 106, 123, -73,
	-96, 126, 108, 124, 125, 110, 128, 127, 138, 131,
	132, 133, 134, 135, 136, 137, 129, 130, 141, 116,
	117, 118, 119, 120, 121, 122, -159, -269, -113, -269,
	149, 150, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -269, 148, -2, -108, -4, -269, -269, -269,
	-269, -269, -269, -269, -269, -120, -73, -269, -273, -105,
	-269, -273, -105, -273, -105, -273, -269, -273, -105, -273,
	-105, -273, -273, -105, -269, -269, -269, -269, -269, -269,
	-269, -189, -263, -264, -91, -88, -124, -3, -48, -143,
	20, 32, -73, -125, -126, -73, -124, 55, -63, -65,
	-67, 59, 60, 93, 12, -180, -179, 23, -177, 87,
	148, 12, -89, 27, -88, -75, -76, -77, -78, -91,
	-114, -269, 12, -82, -83, -88, -90, -182, 81, 218,
	-154, -192, -156, -155, 295, 297, 116, -181, -177, 87,
	30, 31, 82, 81, -88, -194, -197, -199, -198, -200,
	-195, -196, 241, 242, 142, 245, 247, 248, 249, 250,
	251, 252, 253, 254, 255, 256, 31, 184, 237, 238,
	239, 240, 257, 258, 259, 260, 261, 262, 263, 264,
	224, 243, 325, 225, 226, 227, 228, 229, 230, 232,
	233, 234, 235, 236, -255, -252, 80, 82, 81, -201,
	80, -71, 205, 116, -88, 108, -252, -252, 31, -226,
	-25, 80, -215, -224, -255, -252, 80, 29, 167, 166,
	-223, -220, -223, -224, -252, 30, 74, 75, -115, -177,
	-182, -115, 31, 244, -115, -252, 29, 29, -190, 196,
	196, 160, 160, 209, -88, 40, 81, 163, -82, 24,
	72, -88, -252, -183, -182, -175, -166, 87, -73, -166,
	-88, -166, -88, -166, -166, -166, -166, -162, 12, 126,
	-222, 12, 126, -162, -190, -190, -88, -190, -190, -88,
	-190, -190, -222, -167, 124, 72, -188, 221, 255, 413,
	414, 415, -73, -73, -73, -73, -106, 96, 108, 97,
	98, -99, -107, -110, -113, 92, 126, 124, 125, 110,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -99, -99, -191, -252, 87, -252, -98,
	-98, -177, -64, 22, 36, -63, -178, -183, -175, -60,
	-270, -270, -124, -63, -63, -73, -73, -115, 87, -63,
	-115, 87, -63, -63, -59, 22, 36, -118, -119, 112,
	-115, -270, -99, -177, -177, -63, -64, -64, -63, -63,
	81, -265, 297, 298, 417, -185, 190, -184, 23, -182,
	87, -128, -270, -129, 27, 10, 126, 81, 19, 81,
	-127, 25, 26, -128, -100, -177, 88, 91, -74, 81,
	12, -67, -88, -179, 133, -183, -88, -147, 190, -88,
	31, 81, -84, -86, -85, -87, 62, 66, 68, 63,
	64, 65, 69, -186, 23, -75, -3, -269, -88, -82,
	-271, 81, 12, 73, -271, 81, 148, -154, -156, 81,
	296, 298, 299, 72, 99, -73, -206, 141, -230, -231,
	-232, -178, 87, 88, -215, -217, -218, -219, 82, -170,
	96, 108, -211, 269, -201, -201, -201, -201, -201, -205,
	244, -205, -205, -205, 80, 80, -201, -201, -201, -201,
	-208, 80, -208, -208, -209, 80, -209, -245, -73, -241,
	-240, -236, -239, 171, 94, 327, 73, -234, -127, 88,
	-70, 207, 116, 208, 210, 211, 24, -243, -239, -226,
	-252, 87, -216, -215, -116, 214, -244, -235, 80, 29,
	-223, -224, -224, 153, 31, 148, -215, -226, 31, -252,
	-88, -88, -88, -88, -88, 156, 153, 198, -88, -88,
	-88, -190, -166, -182, -182, -88, -166, -88, 87, -88,
	-177, 96, 97, 98, -107, -99, -99, -99, -62, 185,
	107, -270, -270, -63, -63, -269, 148, -5, -128, -270,
	-270, 81, 73, 23, 12, 12, -270, 12, 12, -270,
	-270, -63, -121, -119, 114, -73, -270, -270, 81, 81,
	-270, -270, -270, -270, -270, -264, 416, 298, -92, 70,
	164, 71, -269, -184, -143, 38, 46, 57, -73, -73,
	-126, -143, -158, 20, 12, 53, 53, -93, 13, -65,
	-75, -67, 148, -93, -97, 31, 53, -3, -269, -269,
	-150, -153, -115, -76, -77, -77, -76, -77, 62, 62,
	62, 67, 62, 67, 62, -85, -182, -270, -270, -3,
	-147, 73, -75, -88, -75, -90, -182, 133, -155, -157,
	300, 297, 303, -252, 87, 81, -232, 116, -219, -203,
	30, 96, -212, 270, -205, -205, -206, 31, -206, -206,
	-206, -214, 87, -214, 88, 88, 82, -242, -237, -238,
	32, 76, -236, -226, 87, 37, -177, 82, 162, 213,
	-72, 310, 87, 83, 72, -252, 87, 81, 82, -117,
	215, -115, 82, -145, -177, -224, 30, 30, -178, -116,
	-191, -191, -254, 73, 196, 266, 196, 199, 163, -190,
	-162, -162, -62, 107, -99, -99, -270, -270, -64, -178,
	-124, -143, -193, 142, 241, 184, 239, 235, 255, 246,
	268, 237, 269, -191, -193, -99, -99, -99, -99, 324,
	-124, 115, -73, 113, -99, -99, 161, 161, 161, -148,
	-177, 39, 87, 87, 58, -88, -122, 14, -73, 133,
	-128, -149, 72, -150, -109, -111, -110, -269, -144, -270,
	-177, -148, -93, 81, 116, -80, -79, 72, 73, -81,
	72, -79, 62, 62, -270, -93, -75, -93, -93, 148,
	297, 301, 302, -231, -232, -204, 72, -99, -206, -206,
	-252, 142, 82, 81, 82, 81, 82, 81, -171, 362,
	108, -238, -237, -226, -226, 88, -252, -88, -69, 205,
	212, 80, 84, -88, -215, -115, -241, 82, 81, -98,
	-117, -207, 141, -206, -251, 327, -253, -252, -177, -177,
	-177, -88, -166, -166, -99, -270, -128, -270, -201, -201,
	-201, -209, -201, 229, -201, 229, -270, -270, 20, 20,
	20, 20, -269, -57, 320, -73, 81, 81, -269, -269,
	-269, -270, 81, 87, -205, -123, 15, 17, 28, -149,
	81, -270, -270, 81, 53, 148, -270, -124, -153, -73,
	-73, 80, -73, -124, -93, -210, 266, 10, -205, 87,
	-205, 88, 88, 362, 30, 77, 78, 79, 30, 74,
	75, -146, 80, 82, 179, -177, -226, -250, -249, -178,
	80, 73, -143, -205, -252, -99, -99, -99, -99, -99,
	-128, 87, -99, -99, -145, -270, -145, -145, -185, -177,
	-205, -131, -136, -164, -73, -108, 29, -111, 53, -3,
	-177, -109, -177, -128, -145, -128, -213, 167, 29, 166,
	-102, -206, -206, 82, 82, 23, -145, -88, -252, 87,
	81, 116, -145, -88, -270, -270, -270, -270, -58, 126,
	327, -270, -270, -270, -270, -270, -270, -92, -134, 412,
	-137, 42, -138, 43, 10, -109, 148, 82, -202, 94,
	29, 29, -3, 82, 80, -249, -232, 82, -270, 325,
	69, 328, -131, 47, 247, -139, 51, -140, -135, 52,
	17, -150, -177, 87, -51, 327, -145, -254, 58, 326,
	329, -132, 49, -130, 48, -130, -138, 17, -141, 44,
	45, 87, -52, 204, 416, 82, -251, 58, -133, 50,
	72, 99, 87, 17, 17, 172, -260, -261, 72, 327,
	72, 99, 87, 87, 206, -261, 72, 11, 10, 328,
	-259, 180, 175, 178, 31, -259, 329, 174, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 709, 0, 448, 448, 448, 448, 448, 448, 448,
	0, 0, -2, -2, -2, 0, 36, 0, 0, 0,
	0, -2, 406, 407, 0, 409, -2, 0, 0, 418,
	1206, 1206, 1206, 0, 0, 0, 0, 1204, 53, 54,
	424, 425, 426, 1, 3, 0, 452, 717, 0, 0,
	-2, 450, 0, 0, 824, 824, 824, 0, 82, 83,
	0, 0, 0, 733, 822, 0, 822, 0, 842, 843,
	844, 102, 103, 86, -2, 107, 108, 0, 112, 306,
	282, 283, -2, 224, 275, 275, 0, 0, 0, 0,
	0, 0, 275, 0, 101, 0, 0, 111, 37, 33,
	34, 35, 0, 820, 0, 820, 820, 0, 345, 532,
	852, 853, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 0, 0,
	397, 397, 397, 397, 397, 397, 0, 355, 0, 0,
	0, 0, 0, 0, 0, 371, 0, 374, 0, 0,
	381, 397, 1207, 403, 404, 391, 389, 386, 387, 405,
	408, 0, 413, 416, 848, 849, 0, 431, 0, 1045,
	423, 436, 437, 447, 38, 583, 542, 0, 548, 550,
	0, 585, 586, 587, 588, 589, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 615, 616, 617, 618,
	694, 695, 696, 697, 698, 699, 700, 701, 552, 553,
	691, 0, 801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 682, 0, 652, 652, 652, 652, 652, 652,
	652, 652, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 1206, 0, 446, 709, 49, 0, 448, 453, 454,
	752, 0, 0, 709, 1205, 0, 0, -2, -2, 464,
	470, 471, 472, 473, 449, 0, 476, 480, 0, 0,
	0, 825, 0, 0, 68, 0, 1177, 805, -2, -2,
	0, 0, 850, 851, -2, 1005, -2, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 0,
	0, 121, 122, 0, 36, 250, 0, 117, 0, 244,
	179, 746, 0, 0, 0, 0, 0, 88, 109, 110,
	0, 224, 111, 285, 286, 287, 0, -2, 248, 0,
	276, 0, 0, 238, 238, 242, 240, 241, 0, 225,
	0, 0, 0, 0, 298, 299, 300, 301, 0, 0,
	0, 0, 98, 1207, 0, 0, 0, 0, -2, 0,
	337, 0, 0, 0, 0, 0, 0, 344, 0, 346,
	397, 348, 0, 0, 349, 350, 351, 352, 353, 397,
	0, 397, 0, 397, 397, 397, 397, 394, 0, 394,
	392, 393, 384, 385, 1207, 1207, 0, 1207, 1207, 0,
	1207, 1207, 0, 233, 234, 235, 400, 378, 379, 382,
	383, 1208, 1209, 414, 417, 434, 432, 433, 435, 427,
	428, 429, 430, 0, 0, 0, 0, 0, 0, 546,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	571, 572, 573, 574, 575, 576, 549, 0, 563, 0,
	0, 0, 605, 606, 607, 608, 609, 610, 611, 612,
	613, 0, 461, 0, 0, 0, 709, 0, 0, 0,
	0, 0, 0, 0, 458, 0, 683, 0, 636, 644,
	0, 637, 645, 638, 646, 639, 0, 640, 647, 641,
	648, 642, 643, 649, 0, 0, 0, 461, 461, 0,
	0, 39, 438, 439, 0, 515, 717, 0, 463, 755,
	0, 0, 718, 710, 711, 714, 717, 0, 485, 474,
	465, 468, 469, 451, 0, 477, 481, 0, 483, 484,
	0, 0, 66, 0, 531, 0, 487, 489, 490, 491,
	513, 0, 0, 0, 0, 62, 64, 532, 0, 1177,
	811, 0, 70, 71, 0, 0, 0, 202, 815, 816,
	817, 813, 266, 231, 0, 190, 186, 130, 131, 132,
	179, 134, 179, 179, 179, 179, 199, 199, 199, 199,
	162, 163, 164, 165, 166, 0, 0, 149, 179, 179,
	179, 179, 169, 170, 171, 172, 173, 174, 175, 176,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 181,
	181, 181, 183, 183, 0, 37, 0, 216, 0, 714,
	0, 737, 0, 0, 97, 0, 845, 100, 224, 0,
	284, 0, 277, 232, 0, -2, 0, 0, 0, 238,
	242, 239, 242, 230, 243, 290, 291, 292, 0, 691,
	0, 0, 224, 0, 302, 303, 304, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 340, 821,
	0, 1207, 343, 533, 854, 855, 347, 398, 399, 354,
	372, 356, 375, 357, 359, 358, 360, 397, 0, 0,
	0, 236, 237, 397, 363, 364, 365, 366, 367, 368,
	369, 370, 0, 377, 0, 0, 0, 415, 419, 420,
	421, 422, 584, 543, 544, 545, 547, 564, 0, 566,
	568, 554, 555, 579, 580, 581, 0, 0, 0, 0,
	577, 559, 0, 590, 591, 592, 593, 594, 595, 596,
	597, 598, 599, 600, 601, 604, 667, 668, 0, 602,
	603, 614, 0, 0, 0, 462, 692, 0, -2, 0,
	582, 800, 717, 0, 0, 0, 0, 587, 694, 0,
	587, 694, 0, 0, 0, 459, 460, 689, 686, 0,
	0, 653, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 441, 442, 444, 0, 535, 1115, 516, 0, 518,
	519, 752, 50, 40, 0, 753, 0, 0, 0, 0,
	713, 715, 716, 752, 0, 702, 0, 0, 540, 0,
	0, 466, 46, 482, 478, 0, 540, 0, 0, 530,
	0, 0, 0, 0, 0, 0, 520, 0, 0, 523,
	0, 0, 0, 0, 514, 0, 0, 0, -2, 0,
	0, 0, 60, 61, 0, 0, 0, 806, 69, 0,
	0, 74, 75, 807, 808, 809, 810, 0, 104, 267,
	269, 272, 273, 274, 123, 125, 126, 127, 118, 193,
	191, 0, 188, 187, 133, 199, 199, 156, 157, 202,
	0, 202, 202, 202, 0, 0, 150, 151, 152, 153,
	144, 0, 145, 146, 147, 0, 148, 249, 0, 721,
	217, 218, 220, 224, 0, 0, 0, 245, 246, 0,
	0, 0, 0, 734, 735, 736, 823, 0, 846, 0,
	115, 116, 0, 119, 279, 0, 247, 0, 0, 226,
	242, 227, 228, 0, 0, 0, 277, 0, 0, 305,
	89, 311, 313, 312, 316, 0, 0, 0, 0, 338,
	1207, 342, 361, 395, 396, 394, 376, 394, 401, 380,
	411, 565, 567, 569, 556, 577, 560, 0, 557, 0,
	0, 551, 619, 0, 0, 461, 0, 709, 752, 623,
	624, 0, 0, 0, 0, 0, 660, 0, 0, 661,
	0, 709, 0, 687, 0, 0, 635, 654, 0, 0,
	655, 656, 657, 658, 659, 440, 443, 445, 495, 0,
	0, 0, 0, 517, 42, 0, 0, 0, 719, 720,
	712, 41, 0, 818, 819, 703, 704, 705, 0, 475,
	486, 467, 0, 717, 794, 0, 0, 786, 0, 0,
	540, 802, 0, 488, 509, 511, 0, 506, 521, 522,
	524, 0, 526, 0, 528, 529, 492, 493, 494, 0,
	540, 0, 540, 63, 540, 65, 0, 534, 72, 73,
	0, 0, 79, 203, 204, 0, 270, 0, 124, 195,
	0, 192, 129, 189, 202, 202, 158, 0, 159, 160,
	161, 0, 177, 0, 0, 0, 263, 84, 725, 724,
	224, 224, 219, 0, 222, 0, 847, 180, 0, 0,
	747, 748, 0, 751, 0, 113, 114, 0, 288, 289,
	0, 278, 216, 0, 499, 229, 293, 0, 692, 279,
	205, 202, 92, 0, 0, 0, 0, 309, 0, 341,
	397, 397, 558, 0, 578, 561, 620, 621, 0, 693,
	717, 44, 0, 179, 179, 672, 179, 183, 675, 179,
	677, 179, 680, 0, 0, 0, 0, 0, 0, 0,
	684, 634, 690, 0, 0, 0, 0, 0, 0, 0,
	501, 0, 199, 757, 754, 43, 707, 0, 541, 479,
	47, 51, 0, 794, 785, 796, 798, 0, 0, 0,
	790, 0, 709, 0, 0, 503, 510, 0, 0, 504,
	0, 505, 525, 527, -2, 709, 540, 58, 59, 0,
	76, 77, 78, 268, 271, 197, 0, 194, 154, 155,
	200, 201, 199, 0, 199, 0, 184, 0, 255, 264,
	0, 722, 723, 0, 0, 221, 223, 497, 738, 739,
	740, 0, 750, 99, 120, 280, 215, 0, 0, 294,
	295, 296, 224, 297, 310, 0, 90, 91, 0, 0,
	315, 339, 362, 373, 562, 622, 752, 625, 669, 199,
	673, 674, 676, 678, 679, 681, 627, 626, 0, 0,
	0, 0, 0, 717, 0, 688, 0, 0, 0, 0,
	0, 515, 0, 199, 777, 48, 0, 0, 0, 52,
	0, 799, 0, 0, 0, 0, 67, 717, 803, 804,
	507, 0, 512, 717, 57, 208, 198, 0, 202, 178,
	202, 0, 0, 265, 726, 727, 728, 729, 730, 731,
	732, 0, 0, 749, 0, 500, 0, 93, 94, 0,
	0, 0, 45, 670, 671, 0, 0, 0, 0, 662,
	0, 685, 0, 0, 0, 537, 0, 0, 535, 502,
	759, 758, 771, 775, 708, 706, 0, 797, 0, 789,
	792, 788, 791, 55, 0, 56, 213, 0, 210, 212,
	196, 167, 168, 182, 185, 0, 0, 0, 206, 207,
	0, 0, 0, 317, 628, 630, 629, 631, 0, 0,
	0, 633, 650, 651, 536, 538, 539, 496, 777, 0,
	770, 773, -2, 0, 0, 787, 0, 508, 128, 0,
	209, 211, 741, 498, 0, 95, 96, 89, 632, 0,
	0, 0, 764, 762, 762, 775, 0, 779, 0, 784,
	0, 795, 793, 214, 85, 743, 0, 92, 663, 0,
	666, 767, 0, 760, 763, 761, 772, 0, 778, 0,
	0, 776, 0, 744, 745, 251, 314, 664, 756, 0,
	765, 766, 774, 0, 0, 0, 252, 253, 0, 0,
	768, 769, 780, 782, 742, 254, 0, 0, 0, 0,
	256, 258, 259, 0, 0, 257, 665, 260, 261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 109, 3, 3, 3, 136, 128, 3,
	80, 82, 133, 131, 81, 132, 148, 134, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 418,
	117, 116, 118, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 138, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 127, 3, 139,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 110, 111, 112, 113, 114, 115,
	119, 120, 121, 122, 123, 124, 125, 126, 129, 130,
	135, 137, 140, 141, 142, 143, 144, 145, 146, 147,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:398
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:403
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:404
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:408
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:439
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:445
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:449
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:458
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:468
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:474
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:480
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:489
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:493
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:497
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:520
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:534
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:540
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:554
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:558
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:565
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:577
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:589
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:593
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:605
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:609
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:613
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:623
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:650
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:662
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:666
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:686
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:690
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:700
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:730
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:737
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:745
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:756
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:765
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:775
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:780
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:785
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:802
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:808
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:822
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:829
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:847
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:853
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:871
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:875
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:880
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:890
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:894
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:900
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:904
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:915
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:921
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:925
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:931
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:941
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:945
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:958
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:964
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:975
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:997
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1001
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1005
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1009
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1017
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1021
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1025
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1029
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1067
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1071
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1141
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1156
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1160
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1209
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1217
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1227
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1235
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1239
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1254
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1258
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1267
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1276
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1280
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1289
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1298
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1302
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1307
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = ""
		}
	case 206:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1333
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1337
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1341
		{
			yyVAL.colKeyOpt = colKey
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1349
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.literal = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1364
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = nil
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1373
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1389
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1393
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1402
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1408
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1412
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1426
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1430
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1434
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1477
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1506
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1512
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1546
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1550
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1556
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1562
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1568
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1595
		{
			yyVAL.boolean = true
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.boolean = true
		}
	case 265:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.boolean = false
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = yyDollar[1].str
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1638
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1642
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 275:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1651
		{
			yyVAL.bytes = []byte("")
		}
	case 277:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1657
		{
			yyVAL.colName = nil
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1666
		{
			yyVAL.colName = nil
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1675
		{
			yyVAL.alterOptions = nil
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1689
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1695
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1699
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 288:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1707
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1711
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1719
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1723
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1727
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 294:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1731
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 295:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1735
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1739
		{
			yyVAL.alterOption = &AlterCharset{IsDefault: true, CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 297:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1743
		{
			yyVAL.alterOption = &AlterCharset{IsDefault: false, CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1775
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1813
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1817
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 309:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1824
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 310:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1831
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 311:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1843
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1853
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1857
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 314:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1861
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 315:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1874
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1884
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 317:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1888
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 332:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1917
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1923
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1933
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 336:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1937
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1943
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1953
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1965
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1970
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1974
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1989
		{
			yyVAL.statement = &OtherRead{}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1995
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1999
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2007
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2011
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2015
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2019
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 354:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2031
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2035
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2039
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2043
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2047
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 362:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2063
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2072
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2080
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2092
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2096
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 373:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2100
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2113
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2123
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2128
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2145
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2165
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2185
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2189
		{
			yyVAL.str = "extended "
		}
	case 390:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2195
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = "full "
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2215
		{
			yyVAL.str = ""
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2219
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.showFilter = nil
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2237
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2243
		{
			yyVAL.showFilter = nil
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2247
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2253
		{
			yyVAL.empty = struct{}{}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2257
		{
			yyVAL.empty = struct{}{}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2261
		{
			yyVAL.empty = struct{}{}
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.statement = &Begin{}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2281
		{
			yyVAL.statement = &Begin{}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.statement = &Commit{}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2293
		{
			yyVAL.statement = &Rollback{}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2297
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2302
		{
			yyVAL.empty = struct{}{}
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.empty = struct{}{}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2307
		{
			yyVAL.empty = struct{}{}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.empty = struct{}{}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2314
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2320
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2325
		{
			yyVAL.explainType = EmptyType
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2329
		{
			yyVAL.explainType = JSONType
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2333
		{
			yyVAL.explainType = TreeType
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2337
		{
			yyVAL.explainType = VitessType
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2341
		{
			yyVAL.explainType = TraditionalType
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.explainType = AnalyzeType
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2359
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2369
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2382
		{
			yyVAL.str = ""
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.str = ""
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.str = ""
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.statement = &OtherRead{}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2400
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2410
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2416
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2426
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.lockType = Read
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2442
		{
			yyVAL.lockType = ReadLocal
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.lockType = Write
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2462
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2466
		{
			setAllowComments(yylex, true)
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2470
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.bytes2 = nil
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2480
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.boolean = true
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.boolean = false
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.boolean = true
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = ""
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2503
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = SQLCacheStr
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2512
		{
			yyVAL.boolean = false
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2516
		{
			yyVAL.boolean = true
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.boolean = true
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.selectExprs = nil
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2534
		{
			yyVAL.strs = nil
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2538
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2542
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2546
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2550
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2556
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.str = SQLCacheStr
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2564
		{
			yyVAL.str = DistinctStr
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2568
		{
			yyVAL.str = DistinctStr
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2572
		{
			yyVAL.str = StraightJoinHint
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2576
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2582
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2586
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2592
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2596
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2600
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2604
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2609
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2613
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2629
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2633
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2639
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2643
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2667
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 496:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2677
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.columns = nil
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2686
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2719
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2723
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2727
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2731
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2739
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2743
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2749
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2751
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2754
		{
			yyVAL.empty = struct{}{}
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2756
		{
			yyVAL.empty = struct{}{}
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2759
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2767
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.joinType = NormalJoinType
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.joinType = NormalJoinType
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2788
		{
			yyVAL.joinType = NormalJoinType
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.joinType = StraightJoinType
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.joinType = LeftJoinType
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2804
		{
			yyVAL.joinType = LeftJoinType
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.joinType = RightJoinType
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2812
		{
			yyVAL.joinType = RightJoinType
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2818
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2822
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2832
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2842
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2852
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2857
		{
			yyVAL.indexHints = nil
		}
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2861
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2865
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 538:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2869
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2873
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2878
		{
			yyVAL.expr = nil
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2892
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2900
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2904
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2908
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2916
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = ""
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2926
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2942
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2946
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2950
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2954
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 558:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2958
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2962
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2966
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2970
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 562:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2974
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2978
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2984
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2996
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3000
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3018
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3026
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3030
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3034
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3039
		{
			yyVAL.expr = nil
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3043
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3053
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3057
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3063
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3079
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3083
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 590:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3127
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3135
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3139
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3143
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3151
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3159
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3175
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3179
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3187
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3201
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3205
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3209
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3227
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 620:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3231
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 621:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3235
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 622:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3239
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3249
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3253
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 625:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3257
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 626:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3261
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 627:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3265
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 628:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3269
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 629:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3273
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 630:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3277
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 631:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3281
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 632:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3285
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 633:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3289
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 634:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3293
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3297
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3320
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3330
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3336
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3341
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3350
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3364
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 650:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3373
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 651:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3377
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 655:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 656:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3401
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 657:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 658:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3409
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3421
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3427
		{
			yyVAL.matchExprOption = NoOption
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3435
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 665:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3439
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3453
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3479
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3485
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3489
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3505
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 682:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.expr = nil
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3523
		{
			yyVAL.str = string("")
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3527
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3533
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3543
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3548
		{
			yyVAL.expr = nil
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3552
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3558
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3562
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3566
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3572
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3576
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3580
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3584
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3588
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3592
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3596
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3600
		{
			yyVAL.expr = &NullVal{}
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3606
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3615
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3619
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
			yyVAL.exprs = nil
		}
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3633
		{
			yyVAL.expr = nil
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3637
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3642
		{
			yyVAL.orderBy = nil
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3646
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3652
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3656
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3662
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3667
		{
			yyVAL.orderDirection = AscOrder
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.orderDirection = AscOrder
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3675
		{
			yyVAL.orderDirection = DescOrder
		}
	case 717:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3680
		{
			yyVAL.limit = nil
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3684
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3688
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3692
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3697
		{
			yyVAL.indexOptions = nil
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3701
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3709
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3713
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3720
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3724
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3738
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3742
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3746
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3751
		{
			yyVAL.str = ""
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = yyDollar[3].str
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3787
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = yyDollar[2].str
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = "cascaded"
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3800
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3809
		{
			yyVAL.str = ""
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3813
		{
			yyVAL.str = yyDollar[3].str
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3819
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3836
		{
			yyVAL.lock = NoLock
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3840
		{
			yyVAL.lock = ForUpdateLock
		}
	case 754:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3844
		{
			yyVAL.lock = ShareModeLock
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3849
		{
			yyVAL.selectInto = nil
		}
	case 756:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3853
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3857
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3861
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = ""
		}
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3870
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3874
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3879
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			yyVAL.str = " header"
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3888
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.str = " manifest on"
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = " manifest off"
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3901
		{
			yyVAL.str = ""
		}
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = " overwrite on"
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3909
		{
			yyVAL.str = " overwrite off"
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3915
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3920
		{
			yyVAL.str = ""
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3929
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3933
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3938
		{
			yyVAL.str = ""
		}
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3942
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3947
		{
			yyVAL.str = ""
		}
	case 778:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3951
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3956
		{
			yyVAL.str = ""
		}
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3965
		{
			yyVAL.str = ""
		}
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3969
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3974
		{
			yyVAL.str = ""
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3978
		{
			yyVAL.str = " optionally"
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3991
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 787:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3999
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 788:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4003
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 789:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4007
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4017
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4021
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 793:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4025
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 794:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4030
		{
			yyVAL.updateExprs = nil
		}
	case 795:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4034
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4040
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4044
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4054
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4066
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4076
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4102
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4106
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4110
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4114
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4118
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4126
		{
			yyVAL.bytes = []byte("charset")
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4133
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4137
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4141
		{
			yyVAL.expr = &Default{}
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4150
		{
			yyVAL.boolean = false
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4152
		{
			yyVAL.boolean = true
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4155
		{
			yyVAL.boolean = false
		}
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4157
		{
			yyVAL.boolean = true
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4160
		{
			yyVAL.ignore = false
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4162
		{
			yyVAL.ignore = true
		}
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4166
		{
			yyVAL.empty = struct{}{}
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4168
		{
			yyVAL.empty = struct{}{}
		}
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.empty = struct{}{}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.empty = struct{}{}
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.empty = struct{}{}
		}
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.empty = struct{}{}
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4178
		{
			yyVAL.empty = struct{}{}
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4180
		{
			yyVAL.empty = struct{}{}
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4182
		{
			yyVAL.empty = struct{}{}
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4184
		{
			yyVAL.empty = struct{}{}
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4188
		{
			yyVAL.empty = struct{}{}
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4190
		{
			yyVAL.empty = struct{}{}
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4192
		{
			yyVAL.empty = struct{}{}
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4196
		{
			yyVAL.empty = struct{}{}
		}
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4198
		{
			yyVAL.empty = struct{}{}
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4210
		{
			yyVAL.indexOptions = nil
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4212
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4216
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4233
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4239
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4243
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4250
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			decNesting(yylex)
		}
	case 1206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4637
		{
			skipToEnd(yylex)
		}
	case 1207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4642
		{
			skipToEnd(yylex)
		}
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4646
		{
			skipToEnd(yylex)
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4650
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
