// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	literal              *Literal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	OnlineDDLHint        *OnlineDDLHint
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const VALUES = 57379
const LAST_INSERT_ID = 57380
const NEXT = 57381
const VALUE = 57382
const SHARE = 57383
const MODE = 57384
const SQL_NO_CACHE = 57385
const SQL_CACHE = 57386
const SQL_CALC_FOUND_ROWS = 57387
const JOIN = 57388
const STRAIGHT_JOIN = 57389
const LEFT = 57390
const RIGHT = 57391
const INNER = 57392
const OUTER = 57393
const CROSS = 57394
const NATURAL = 57395
const USE = 57396
const FORCE = 57397
const ON = 57398
const USING = 57399
const ID = 57400
const AT_ID = 57401
const AT_AT_ID = 57402
const HEX = 57403
const STRING = 57404
const INTEGRAL = 57405
const FLOAT = 57406
const HEXNUM = 57407
const VALUE_ARG = 57408
const LIST_ARG = 57409
const COMMENT = 57410
const COMMENT_KEYWORD = 57411
const BIT_LITERAL = 57412
const NULL = 57413
const TRUE = 57414
const FALSE = 57415
const OFF = 57416
const OR = 57417
const XOR = 57418
const AND = 57419
const NOT = 57420
const BETWEEN = 57421
const CASE = 57422
const WHEN = 57423
const THEN = 57424
const ELSE = 57425
const END = 57426
const LE = 57427
const GE = 57428
const NE = 57429
const NULL_SAFE_EQUAL = 57430
const IS = 57431
const LIKE = 57432
const REGEXP = 57433
const IN = 57434
const SHIFT_LEFT = 57435
const SHIFT_RIGHT = 57436
const DIV = 57437
const MOD = 57438
const UNARY = 57439
const COLLATE = 57440
const BINARY = 57441
const UNDERSCORE_BINARY = 57442
const UNDERSCORE_UTF8MB4 = 57443
const UNDERSCORE_UTF8 = 57444
const UNDERSCORE_LATIN1 = 57445
const INTERVAL = 57446
const JSON_EXTRACT_OP = 57447
const JSON_UNQUOTE_EXTRACT_OP = 57448
const CREATE = 57449
const ALTER = 57450
const DROP = 57451
const RENAME = 57452
const ANALYZE = 57453
const ADD = 57454
const FLUSH = 57455
const SCHEMA = 57456
const TABLE = 57457
const INDEX = 57458
const VIEW = 57459
const TO = 57460
const IGNORE = 57461
const IF = 57462
const UNIQUE = 57463
const PRIMARY = 57464
const COLUMN = 57465
const SPATIAL = 57466
const FULLTEXT = 57467
const KEY_BLOCK_SIZE = 57468
const CHECK = 57469
const INDEXES = 57470
const ACTION = 57471
const CASCADE = 57472
const CONSTRAINT = 57473
const FOREIGN = 57474
const NO = 57475
const REFERENCES = 57476
const RESTRICT = 57477
const SHOW = 57478
const DESCRIBE = 57479
const EXPLAIN = 57480
const DATE = 57481
const ESCAPE = 57482
const REPAIR = 57483
const OPTIMIZE = 57484
const TRUNCATE = 57485
const MAXVALUE = 57486
const PARTITION = 57487
const REORGANIZE = 57488
const LESS = 57489
const THAN = 57490
const PROCEDURE = 57491
const TRIGGER = 57492
const VINDEX = 57493
const VINDEXES = 57494
const STATUS = 57495
const VARIABLES = 57496
const WARNINGS = 57497
const SEQUENCE = 57498
const BEGIN = 57499
const START = 57500
const TRANSACTION = 57501
const COMMIT = 57502
const ROLLBACK = 57503
const SAVEPOINT = 57504
const RELEASE = 57505
const WORK = 57506
const BIT = 57507
const TINYINT = 57508
const SMALLINT = 57509
const MEDIUMINT = 57510
const INT = 57511
const INTEGER = 57512
const BIGINT = 57513
const INTNUM = 57514
const REAL = 57515
const DOUBLE = 57516
const FLOAT_TYPE = 57517
const DECIMAL = 57518
const NUMERIC = 57519
const TIME = 57520
const TIMESTAMP = 57521
const DATETIME = 57522
const YEAR = 57523
const CHAR = 57524
const VARCHAR = 57525
const BOOL = 57526
const CHARACTER = 57527
const VARBINARY = 57528
const NCHAR = 57529
const TEXT = 57530
const TINYTEXT = 57531
const MEDIUMTEXT = 57532
const LONGTEXT = 57533
const BLOB = 57534
const TINYBLOB = 57535
const MEDIUMBLOB = 57536
const LONGBLOB = 57537
const JSON = 57538
const ENUM = 57539
const GEOMETRY = 57540
const POINT = 57541
const LINESTRING = 57542
const POLYGON = 57543
const GEOMETRYCOLLECTION = 57544
const MULTIPOINT = 57545
const MULTILINESTRING = 57546
const MULTIPOLYGON = 57547
const NULLX = 57548
const AUTO_INCREMENT = 57549
const APPROXNUM = 57550
const SIGNED = 57551
const UNSIGNED = 57552
const ZEROFILL = 57553
const COLLATION = 57554
const DATABASES = 57555
const TABLES = 57556
const VITESS_METADATA = 57557
const VSCHEMA = 57558
const FULL = 57559
const PROCESSLIST = 57560
const COLUMNS = 57561
const FIELDS = 57562
const ENGINES = 57563
const PLUGINS = 57564
const EXTENDED = 57565
const NAMES = 57566
const CHARSET = 57567
const GLOBAL = 57568
const SESSION = 57569
const ISOLATION = 57570
const LEVEL = 57571
const READ = 57572
const WRITE = 57573
const ONLY = 57574
const REPEATABLE = 57575
const COMMITTED = 57576
const UNCOMMITTED = 57577
const SERIALIZABLE = 57578
const CURRENT_TIMESTAMP = 57579
const DATABASE = 57580
const CURRENT_DATE = 57581
const CURRENT_TIME = 57582
const LOCALTIME = 57583
const LOCALTIMESTAMP = 57584
const UTC_DATE = 57585
const UTC_TIME = 57586
const UTC_TIMESTAMP = 57587
const REPLACE = 57588
const CONVERT = 57589
const CAST = 57590
const SUBSTR = 57591
const SUBSTRING = 57592
const GROUP_CONCAT = 57593
const SEPARATOR = 57594
const TIMESTAMPADD = 57595
const TIMESTAMPDIFF = 57596
const MATCH = 57597
const AGAINST = 57598
const BOOLEAN = 57599
const LANGUAGE = 57600
const WITH = 57601
const QUERY = 57602
const EXPANSION = 57603
const UNUSED = 57604
const ARRAY = 57605
const CUME_DIST = 57606
const DESCRIPTION = 57607
const DENSE_RANK = 57608
const EMPTY = 57609
const EXCEPT = 57610
const FIRST_VALUE = 57611
const GROUPING = 57612
const GROUPS = 57613
const JSON_TABLE = 57614
const LAG = 57615
const LAST_VALUE = 57616
const LATERAL = 57617
const LEAD = 57618
const MEMBER = 57619
const NTH_VALUE = 57620
const NTILE = 57621
const OF = 57622
const OVER = 57623
const PERCENT_RANK = 57624
const RANK = 57625
const RECURSIVE = 57626
const ROW_NUMBER = 57627
const SYSTEM = 57628
const WINDOW = 57629
const ACTIVE = 57630
const ADMIN = 57631
const BUCKETS = 57632
const CLONE = 57633
const COMPONENT = 57634
const DEFINITION = 57635
const ENFORCED = 57636
const EXCLUDE = 57637
const FOLLOWING = 57638
const GEOMCOLLECTION = 57639
const GET_MASTER_PUBLIC_KEY = 57640
const HISTOGRAM = 57641
const HISTORY = 57642
const INACTIVE = 57643
const INVISIBLE = 57644
const LOCKED = 57645
const MASTER_COMPRESSION_ALGORITHMS = 57646
const MASTER_PUBLIC_KEY_PATH = 57647
const MASTER_TLS_CIPHERSUITES = 57648
const MASTER_ZSTD_COMPRESSION_LEVEL = 57649
const NESTED = 57650
const NETWORK_NAMESPACE = 57651
const NOWAIT = 57652
const NULLS = 57653
const OJ = 57654
const OLD = 57655
const OPTIONAL = 57656
const ORDINALITY = 57657
const ORGANIZATION = 57658
const OTHERS = 57659
const PATH = 57660
const PERSIST = 57661
const PERSIST_ONLY = 57662
const PRECEDING = 57663
const PRIVILEGE_CHECKS_USER = 57664
const PROCESS = 57665
const RANDOM = 57666
const REFERENCE = 57667
const REQUIRE_ROW_FORMAT = 57668
const RESOURCE = 57669
const RESPECT = 57670
const RESTART = 57671
const RETAIN = 57672
const REUSE = 57673
const ROLE = 57674
const SECONDARY = 57675
const SECONDARY_ENGINE = 57676
const SECONDARY_LOAD = 57677
const SECONDARY_UNLOAD = 57678
const SKIP = 57679
const SRID = 57680
const THREAD_PRIORITY = 57681
const TIES = 57682
const UNBOUNDED = 57683
const VCPU = 57684
const VISIBLE = 57685
const FORMAT = 57686
const TREE = 57687
const VITESS = 57688
const TRADITIONAL = 57689

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	34, 307,
	133, 307,
	145, 307,
	170, 321,
	171, 321,
	-2, 309,
	-1, 49,
	135, 331,
	-2, 329,
	-1, 72,
	39, 367,
	-2, 375,
	-1, 391,
	121, 701,
	-2, 697,
	-1, 392,
	121, 702,
	-2, 698,
	-1, 406,
	39, 368,
	-2, 380,
	-1, 407,
	39, 369,
	-2, 381,
	-1, 432,
	89, 955,
	-2, 74,
	-1, 433,
	89, 871,
	-2, 75,
	-1, 438,
	89, 838,
	-2, 660,
	-1, 440,
	89, 902,
	-2, 662,
	-1, 762,
	57, 56,
	59, 56,
	-2, 60,
	-1, 941,
	121, 704,
	-2, 700,
	-1, 1372,
	5, 619,
	18, 619,
	20, 619,
	32, 619,
	60, 619,
	-2, 406,
}

const yyPrivate = 57344

const yyLast = 17900

var yyAct = [...]int{

	391, 1601, 1611, 1411, 1568, 1298, 335, 1471, 1203, 1484,
	1047, 1517, 364, 1223, 350, 1352, 1385, 605, 1020, 1204,
	1043, 1349, 1070, 71, 3, 1090, 689, 1353, 1249, 1076,
	1358, 594, 1046, 321, 735, 728, 1056, 1364, 399, 92,
	863, 1317, 1141, 286, 928, 306, 286, 882, 1266, 1275,
	776, 92, 1022, 286, 1006, 935, 408, 756, 437, 738,
	761, 961, 733, 69, 1060, 337, 905, 755, 1086, 28,
	393, 562, 773, 423, 775, 999, 764, 1017, 745, 286,
	92, 1190, 333, 563, 286, 326, 286, 67, 322, 426,
	72, 325, 702, 891, 66, 8, 7, 434, 583, 6,
	703, 1604, 376, 284, 382, 383, 380, 381, 379, 378,
	377, 1588, 274, 317, 1109, 272, 1599, 1576, 384, 385,
	1596, 1412, 74, 75, 76, 77, 78, 79, 1108, 1587,
	1575, 1334, 1441, 567, 414, 418, 1379, 394, 30, 425,
	1037, 60, 34, 35, 564, 623, 566, 94, 95, 96,
	1380, 1381, 431, 282, 278, 279, 280, 1038, 1039, 94,
	95, 96, 1237, 324, 777, 1236, 778, 323, 1238, 1257,
	1107, 1543, 651, 650, 660, 661, 653, 654, 655, 656,
	657, 658, 659, 652, 1069, 1474, 662, 618, 1077, 1300,
	59, 619, 616, 617, 94, 95, 96, 1432, 1430, 314,
	621, 312, 890, 316, 1302, 851, 1598, 622, 611, 612,
	848, 850, 1595, 1569, 275, 1297, 1000, 1561, 600, 1061,
	602, 608, 1619, 1104, 1101, 1102, 584, 1100, 1224, 1226,
	569, 420, 1303, 938, 856, 625, 273, 839, 1375, 1063,
	1374, 1318, 892, 893, 894, 1301, 852, 849, 1518, 1373,
	565, 1526, 599, 601, 572, 1063, 579, 276, 1294, 289,
	1111, 1114, 277, 1520, 1296, 1121, 674, 675, 1120, 1550,
	1454, 1233, 1063, 286, 574, 575, 1195, 281, 286, 1170,
	585, 1615, 1320, 1149, 286, 770, 749, 94, 95, 96,
	286, 592, 687, 1160, 598, 92, 590, 1157, 1044, 92,
	1106, 92, 662, 978, 94, 95, 96, 92, 652, 1033,
	1225, 662, 883, 887, 877, 642, 1559, 92, 92, 1322,
	607, 1326, 1105, 1321, 576, 1319, 577, 1535, 1362, 578,
	1324, 779, 609, 573, 1519, 1077, 635, 596, 582, 1323,
	912, 597, 631, 1062, 589, 962, 1336, 416, 1544, 841,
	591, 1574, 1325, 1327, 910, 911, 909, 636, 637, 1062,
	1527, 1525, 1110, 1255, 1059, 1057, 809, 1058, 1295, 774,
	1293, 94, 95, 96, 1055, 1061, 1062, 1112, 639, 586,
	587, 588, 651, 650, 660, 661, 653, 654, 655, 656,
	657, 658, 659, 652, 642, 61, 662, 1613, 672, 884,
	1614, 878, 1612, 674, 675, 568, 327, 674, 675, 640,
	641, 639, 403, 1564, 634, 632, 742, 92, 633, 726,
	286, 595, 286, 286, 962, 1398, 1167, 642, 725, 1579,
	92, 94, 95, 96, 1480, 690, 92, 1479, 82, 1142,
	655, 656, 657, 658, 659, 652, 419, 434, 662, 429,
	797, 1270, 651, 650, 660, 661, 653, 654, 655, 656,
	657, 658, 659, 652, 1269, 739, 662, 561, 641, 639,
	705, 707, 709, 711, 713, 715, 716, 83, 706, 708,
	753, 712, 714, 762, 717, 642, 1066, 727, 1134, 1135,
	1136, 810, 1258, 1067, 570, 571, 763, 1581, 1560, 754,
	1497, 768, 650, 660, 661, 653, 654, 655, 656, 657,
	658, 659, 652, 1477, 1267, 662, 603, 823, 826, 827,
	828, 829, 830, 831, 421, 832, 833, 834, 835, 836,
	811, 812, 813, 814, 795, 796, 824, 1131, 798, 1620,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	815, 816, 817, 818, 819, 820, 821, 822, 900, 902,
	903, 868, 286, 854, 403, 901, 837, 92, 580, 840,
	1361, 842, 286, 286, 92, 92, 92, 640, 641, 639,
	286, 983, 984, 1621, 286, 1338, 1156, 286, 861, 862,
	1532, 286, 59, 92, 1450, 642, 1523, 1597, 92, 92,
	92, 286, 92, 92, 908, 68, 1155, 1531, 1154, 825,
	1583, 403, 92, 92, 653, 654, 655, 656, 657, 658,
	659, 652, 787, 1350, 662, 867, 1361, 640, 641, 639,
	1523, 1572, 843, 844, 640, 641, 639, 1523, 403, 737,
	853, 640, 641, 639, 425, 642, 1394, 860, 1064, 865,
	1523, 1551, 642, 94, 95, 96, 638, 857, 906, 642,
	403, 873, 59, 929, 94, 95, 96, 766, 930, 1523,
	1522, 646, 931, 649, 1027, 980, 765, 643, 70, 663,
	664, 665, 666, 667, 668, 669, 92, 647, 648, 645,
	651, 650, 660, 661, 653, 654, 655, 656, 657, 658,
	659, 652, 950, 953, 662, 939, 1469, 1468, 963, 1456,
	403, 907, 767, 327, 769, 979, 1453, 403, 1534, 92,
	92, 991, 700, 1404, 1403, 945, 1400, 1401, 940, 94,
	95, 96, 1402, 1240, 640, 641, 639, 92, 1400, 1399,
	991, 403, 30, 690, 286, 1003, 941, 92, 731, 734,
	1241, 286, 642, 286, 1003, 403, 1036, 932, 933, 1191,
	30, 286, 286, 1191, 975, 286, 286, 939, 1173, 286,
	286, 286, 92, 1504, 985, 92, 942, 971, 972, 638,
	403, 786, 785, 1172, 1018, 1198, 92, 563, 1002, 434,
	997, 1199, 434, 991, 59, 1589, 993, 353, 352, 355,
	356, 357, 358, 1048, 994, 1003, 354, 359, 941, 1361,
	765, 998, 59, 1001, 981, 610, 1003, 613, 1072, 1073,
	1074, 1075, 855, 624, 1444, 995, 1029, 771, 1486, 865,
	1078, 1079, 1080, 766, 1083, 1084, 1085, 1071, 1026, 992,
	286, 92, 1028, 92, 1034, 1113, 1030, 1035, 392, 286,
	286, 286, 286, 286, 396, 30, 286, 286, 1051, 1031,
	286, 92, 1092, 1461, 1091, 651, 650, 660, 661, 653,
	654, 655, 656, 657, 658, 659, 652, 286, 767, 662,
	765, 1390, 286, 1244, 286, 286, 991, 93, 1087, 286,
	92, 287, 1365, 1366, 287, 1082, 1081, 1299, 1487, 93,
	1095, 287, 1088, 1089, 1094, 1180, 59, 59, 1606, 1115,
	1116, 1117, 1118, 1119, 1128, 1602, 1122, 1123, 1392, 1368,
	1124, 1350, 906, 1271, 888, 946, 947, 287, 93, 952,
	955, 956, 287, 859, 287, 1215, 1213, 1126, 1371, 1370,
	1216, 1214, 1127, 1217, 869, 1012, 1013, 1212, 1211, 1132,
	1593, 1586, 1342, 736, 970, 1591, 1189, 973, 974, 1008,
	1011, 1012, 1013, 1009, 1188, 1010, 1014, 958, 885, 1365,
	1366, 729, 1262, 784, 593, 907, 1137, 1254, 1566, 1565,
	1448, 959, 1502, 730, 1151, 1252, 895, 896, 897, 898,
	1246, 1482, 1097, 286, 1008, 1011, 1012, 1013, 1009, 858,
	1010, 1014, 1016, 400, 286, 286, 286, 286, 286, 1205,
	70, 1179, 394, 1150, 1447, 409, 286, 397, 398, 1187,
	286, 1184, 1166, 1200, 286, 401, 1446, 1186, 286, 410,
	1345, 1191, 620, 1608, 1607, 1608, 740, 741, 412, 1161,
	411, 948, 949, 1222, 1183, 1239, 1158, 92, 881, 750,
	1194, 1192, 743, 1548, 1475, 977, 1245, 1242, 396, 68,
	1250, 1250, 1207, 1208, 1048, 1210, 73, 65, 1, 1218,
	1193, 1206, 1600, 1413, 1209, 1483, 1228, 1103, 1567, 1516,
	1196, 1384, 1054, 838, 1045, 81, 560, 1234, 80, 1251,
	845, 846, 847, 1558, 876, 92, 92, 1261, 606, 1263,
	1264, 1265, 1259, 1260, 1053, 1230, 1052, 1524, 1229, 866,
	1231, 1473, 1232, 1065, 870, 871, 872, 1256, 874, 875,
	1068, 287, 1391, 1247, 1248, 92, 287, 1042, 879, 880,
	1253, 1268, 287, 1274, 1563, 792, 1438, 790, 287, 409,
	791, 789, 794, 93, 793, 788, 299, 93, 889, 93,
	92, 1290, 313, 410, 1015, 93, 929, 780, 1093, 744,
	406, 407, 412, 84, 411, 93, 93, 1314, 1292, 1291,
	1146, 1147, 1099, 886, 1305, 1306, 296, 614, 615, 301,
	271, 1307, 670, 1185, 1235, 1315, 286, 1316, 1339, 435,
	428, 1164, 1356, 982, 732, 1445, 92, 1344, 1329, 1335,
	1328, 1165, 92, 92, 1313, 1205, 699, 1351, 960, 759,
	336, 940, 1354, 1314, 899, 351, 651, 650, 660, 661,
	653, 654, 655, 656, 657, 658, 659, 652, 92, 941,
	662, 348, 349, 986, 1197, 1348, 644, 334, 328, 758,
	751, 1007, 92, 1005, 92, 92, 1343, 1369, 1250, 1250,
	1004, 424, 1367, 1363, 1383, 757, 990, 405, 1376, 1048,
	1440, 1048, 1542, 1397, 1377, 93, 404, 957, 287, 52,
	287, 287, 286, 627, 1382, 318, 1388, 1389, 93, 33,
	1395, 1396, 1387, 413, 93, 1360, 23, 22, 21, 20,
	19, 25, 286, 18, 17, 16, 581, 37, 92, 27,
	1414, 92, 92, 92, 286, 26, 15, 14, 13, 1406,
	1168, 12, 1378, 660, 661, 653, 654, 655, 656, 657,
	658, 659, 652, 11, 1407, 662, 1409, 1181, 1182, 734,
	10, 9, 1405, 5, 4, 630, 24, 1419, 1420, 688,
	2, 1425, 1426, 0, 1427, 0, 0, 1429, 1428, 1431,
	0, 0, 1408, 0, 1423, 0, 0, 1096, 0, 1098,
	0, 0, 0, 0, 1418, 0, 0, 0, 1205, 0,
	0, 0, 0, 1449, 0, 0, 0, 1125, 0, 0,
	0, 1458, 0, 92, 0, 0, 0, 0, 0, 0,
	0, 92, 0, 1242, 0, 1457, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 92, 0, 0, 1470,
	287, 0, 330, 92, 0, 93, 1467, 0, 0, 0,
	287, 287, 93, 93, 93, 0, 0, 1490, 287, 1476,
	1485, 1478, 287, 0, 0, 287, 0, 0, 0, 287,
	0, 93, 0, 0, 0, 0, 93, 93, 93, 287,
	93, 93, 0, 0, 92, 92, 1489, 92, 0, 1488,
	93, 93, 92, 1354, 92, 92, 92, 286, 0, 1510,
	92, 1511, 1513, 1514, 1501, 0, 1505, 966, 1503, 1496,
	1308, 0, 0, 0, 0, 1515, 1521, 92, 286, 0,
	1528, 0, 0, 0, 1536, 0, 1509, 1529, 0, 1530,
	651, 650, 660, 661, 653, 654, 655, 656, 657, 658,
	659, 652, 0, 0, 662, 1337, 0, 1354, 0, 1557,
	1549, 0, 0, 0, 92, 0, 0, 0, 1556, 1555,
	365, 29, 0, 0, 93, 92, 92, 0, 0, 1346,
	0, 0, 1285, 0, 1570, 0, 1571, 0, 1537, 402,
	0, 92, 1485, 1048, 0, 1205, 0, 1577, 0, 0,
	29, 0, 286, 0, 0, 0, 0, 93, 93, 0,
	92, 0, 0, 0, 1281, 1282, 1283, 0, 1585, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 1590, 1592,
	92, 0, 287, 0, 0, 93, 0, 1594, 395, 287,
	0, 287, 1605, 0, 0, 0, 94, 95, 96, 287,
	287, 1616, 1273, 287, 287, 0, 0, 287, 287, 287,
	93, 0, 1580, 93, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 0, 1284, 0, 0, 0,
	0, 1289, 1286, 1277, 1287, 1280, 0, 1276, 0, 0,
	290, 1278, 1279, 0, 0, 0, 0, 0, 0, 293,
	0, 0, 0, 0, 0, 1288, 0, 300, 0, 0,
	0, 0, 0, 0, 0, 0, 1442, 0, 287, 93,
	0, 93, 0, 0, 0, 0, 0, 287, 287, 287,
	287, 287, 0, 327, 287, 287, 0, 0, 287, 93,
	1459, 298, 0, 1460, 0, 0, 1462, 305, 1437, 0,
	0, 1443, 0, 0, 0, 287, 0, 0, 0, 0,
	287, 0, 287, 287, 0, 0, 0, 287, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 0, 651, 650, 660, 661, 653, 654, 655, 656,
	657, 658, 659, 652, 302, 294, 662, 303, 304, 310,
	0, 0, 0, 295, 297, 307, 0, 292, 309, 308,
	0, 0, 0, 1143, 1500, 327, 0, 1436, 651, 650,
	660, 661, 653, 654, 655, 656, 657, 658, 659, 652,
	0, 0, 662, 651, 650, 660, 661, 653, 654, 655,
	656, 657, 658, 659, 652, 604, 0, 662, 0, 604,
	0, 604, 0, 0, 0, 0, 0, 604, 0, 0,
	0, 287, 0, 0, 0, 0, 0, 0, 0, 29,
	0, 0, 287, 287, 287, 287, 287, 0, 0, 0,
	0, 0, 671, 673, 287, 0, 0, 0, 287, 0,
	0, 0, 287, 1435, 0, 0, 287, 651, 650, 660,
	661, 653, 654, 655, 656, 657, 658, 659, 652, 0,
	362, 662, 0, 686, 0, 93, 0, 691, 692, 693,
	694, 695, 696, 697, 698, 0, 701, 704, 704, 704,
	710, 704, 704, 710, 704, 718, 719, 720, 721, 722,
	723, 724, 1481, 0, 0, 0, 29, 0, 0, 91,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 315, 0, 93, 93, 0, 0, 0, 0, 0,
	0, 0, 760, 651, 650, 660, 661, 653, 654, 655,
	656, 657, 658, 659, 652, 0, 0, 662, 0, 0,
	436, 0, 0, 93, 651, 650, 660, 661, 653, 654,
	655, 656, 657, 658, 659, 652, 0, 0, 662, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 0,
	93, 93, 0, 0, 0, 0, 0, 904, 0, 0,
	913, 914, 915, 916, 917, 918, 919, 920, 921, 922,
	923, 924, 925, 926, 927, 0, 93, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	93, 0, 93, 93, 0, 0, 0, 604, 0, 0,
	0, 0, 0, 0, 604, 604, 604, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 0,
	287, 0, 0, 604, 0, 0, 0, 0, 604, 604,
	604, 0, 604, 604, 0, 0, 0, 0, 0, 0,
	287, 0, 604, 604, 0, 0, 93, 0, 0, 93,
	93, 93, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 944, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 0, 0, 436,
	0, 436, 0, 0, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 976, 0, 0, 626, 628, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1019, 0, 0, 0, 760, 0, 0, 0, 760,
	0, 0, 93, 93, 0, 93, 0, 747, 0, 0,
	93, 0, 93, 93, 93, 287, 0, 0, 93, 0,
	436, 0, 0, 1138, 1139, 1140, 781, 0, 0, 0,
	0, 0, 0, 0, 0, 93, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 604, 93, 604, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 93, 93, 0, 0, 0, 0, 0,
	0, 604, 0, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1144,
	287, 0, 0, 1145, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 0, 1152, 1153, 0, 0, 0, 0,
	1159, 0, 0, 1162, 1163, 0, 0, 0, 93, 0,
	0, 1169, 0, 0, 0, 1171, 0, 0, 1174, 1175,
	1176, 1177, 1178, 0, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 436, 436, 436, 0, 0, 0,
	1148, 0, 0, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 436, 436,
	436, 0, 436, 436, 0, 1220, 1221, 0, 0, 0,
	0, 0, 436, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	1201, 1202, 0, 0, 760, 760, 760, 760, 760, 30,
	31, 32, 60, 34, 35, 0, 0, 0, 0, 0,
	1019, 0, 1227, 0, 0, 1309, 1310, 0, 760, 64,
	0, 0, 0, 0, 36, 55, 56, 0, 58, 0,
	1330, 1331, 0, 1332, 1333, 0, 934, 0, 436, 0,
	0, 0, 0, 0, 0, 1340, 1341, 45, 0, 0,
	0, 59, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 968,
	969, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1311, 1312, 604, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 747, 0, 0,
	436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 604, 0, 38, 39, 41,
	40, 43, 436, 57, 0, 436, 0, 1393, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 44, 63, 62, 0,
	0, 53, 54, 42, 0, 0, 0, 0, 0, 0,
	1372, 0, 0, 0, 0, 0, 0, 46, 47, 0,
	48, 49, 50, 51, 0, 0, 0, 0, 0, 0,
	0, 1421, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 436, 29, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1133, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1422, 0, 0, 0, 1424, 61, 0, 0, 0,
	363, 0, 0, 0, 0, 0, 1433, 1434, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1451, 1452, 0, 1455, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 311, 0, 1491, 1492,
	1493, 1494, 1495, 285, 1466, 0, 1498, 1499, 0, 0,
	0, 0, 0, 0, 0, 1439, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 417, 417, 0, 0, 427,
	0, 0, 0, 0, 285, 0, 285, 0, 0, 0,
	0, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1463, 1464, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 604, 436, 0, 0,
	0, 1512, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1538,
	1539, 1540, 1541, 0, 1545, 0, 1546, 1547, 0, 0,
	0, 1355, 0, 29, 0, 1272, 436, 0, 0, 1552,
	0, 1553, 1554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1533, 0, 436, 1609, 0, 0, 0,
	1573, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1355, 0, 0, 0, 0,
	436, 0, 0, 0, 0, 1582, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 0, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 285, 0, 436, 1617, 1618, 964,
	285, 0, 1357, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1603,
	0, 0, 436, 0, 436, 1386, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 1415, 1416, 1417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 285, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 0, 0, 0,
	0, 0, 0, 436, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1506, 1507, 0, 1508, 0, 0,
	0, 0, 1472, 0, 1472, 1472, 1472, 0, 0, 0,
	1386, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 285, 0, 0, 0, 1472, 0, 0,
	285, 0, 0, 0, 285, 0, 0, 285, 0, 0,
	0, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 436, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 964,
	0, 1578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1584, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 0, 0, 0, 0, 417, 864, 0,
	0, 0, 417, 417, 0, 0, 417, 417, 417, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 417, 417, 417, 417, 417, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 0,
	864, 285, 0, 285, 0, 0, 0, 0, 0, 0,
	0, 285, 1024, 0, 0, 285, 285, 0, 0, 285,
	1032, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	285, 285, 285, 285, 0, 0, 285, 285, 0, 0,
	285, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 0, 0,
	0, 0, 285, 0, 1129, 1130, 0, 0, 0, 285,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 417, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 417, 285, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 965, 285, 285, 285, 285, 285, 0,
	0, 0, 0, 0, 0, 0, 1219, 0, 0, 0,
	285, 0, 0, 0, 1024, 0, 0, 0, 285, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 417,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 965,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1024, 0, 0,
	0, 0, 546, 534, 0, 0, 491, 549, 464, 481,
	557, 482, 485, 522, 449, 504, 183, 479, 285, 468,
	444, 475, 445, 466, 493, 126, 497, 463, 536, 507,
	548, 155, 0, 469, 555, 157, 513, 0, 230, 171,
	0, 0, 0, 495, 538, 502, 531, 490, 523, 454,
	512, 550, 480, 520, 551, 0, 0, 0, 94, 95,
	96, 0, 1049, 1050, 0, 0, 0, 0, 0, 116,
	0, 517, 545, 477, 519, 521, 559, 443, 514, 965,
	447, 450, 556, 541, 472, 473, 1243, 0, 0, 0,
	0, 0, 285, 494, 503, 528, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 470, 0, 511, 0, 0,
	0, 451, 448, 0, 0, 0, 0, 492, 0, 0,
	0, 453, 0, 471, 529, 0, 441, 135, 533, 540,
	489, 288, 544, 487, 486, 547, 202, 0, 234, 139,
	154, 112, 151, 98, 108, 0, 137, 180, 210, 214,
	537, 467, 476, 120, 474, 212, 190, 251, 510, 192,
	211, 158, 240, 203, 250, 260, 261, 237, 258, 266,
	227, 101, 236, 248, 117, 222, 0, 0, 0, 103,
	246, 233, 169, 148, 149, 102, 0, 208, 125, 133,
	122, 182, 243, 244, 121, 269, 109, 257, 105, 110,
	256, 176, 239, 247, 170, 163, 104, 245, 168, 162,
	153, 129, 141, 200, 160, 201, 142, 173, 172, 174,
	0, 446, 0, 231, 254, 270, 114, 462, 238, 264,
	265, 0, 204, 115, 134, 128, 199, 132, 175, 111,
	144, 228, 152, 159, 207, 268, 189, 213, 118, 253,
	229, 458, 461, 456, 457, 505, 506, 552, 553, 554,
	530, 452, 0, 459, 460, 0, 535, 542, 543, 509,
	97, 106, 156, 267, 205, 131, 255, 442, 455, 124,
	465, 0, 0, 478, 483, 484, 496, 498, 499, 500,
	501, 508, 515, 516, 518, 524, 525, 526, 527, 532,
	539, 558, 99, 100, 107, 113, 119, 123, 127, 130,
	136, 140, 143, 145, 146, 147, 150, 161, 164, 165,
	166, 167, 177, 178, 179, 181, 184, 185, 186, 187,
	188, 191, 193, 194, 195, 196, 197, 198, 206, 209,
	215, 216, 217, 218, 219, 220, 221, 223, 224, 225,
	226, 232, 235, 241, 242, 252, 259, 262, 138, 249,
	263, 546, 534, 0, 0, 491, 549, 464, 481, 557,
	482, 485, 522, 449, 504, 183, 479, 0, 468, 444,
	475, 445, 466, 493, 126, 497, 463, 536, 507, 548,
	155, 0, 469, 555, 157, 513, 0, 230, 171, 0,
	0, 0, 495, 538, 502, 531, 490, 523, 454, 512,
	550, 480, 520, 551, 0, 0, 0, 94, 95, 96,
	0, 1049, 1050, 0, 0, 0, 0, 0, 116, 0,
	517, 545, 477, 519, 521, 559, 443, 514, 0, 447,
	450, 556, 541, 472, 473, 0, 0, 0, 0, 0,
	0, 0, 494, 503, 528, 488, 0, 0, 0, 0,
	0, 0, 0, 0, 470, 0, 511, 0, 0, 0,
	451, 448, 0, 0, 0, 0, 492, 0, 0, 0,
	453, 0, 471, 529, 0, 441, 135, 533, 540, 489,
	288, 544, 487, 486, 547, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 537,
	467, 476, 120, 474, 212, 190, 251, 510, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	446, 0, 231, 254, 270, 114, 462, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	458, 461, 456, 457, 505, 506, 552, 553, 554, 530,
	452, 0, 459, 460, 0, 535, 542, 543, 509, 97,
	106, 156, 267, 205, 131, 255, 442, 455, 124, 465,
	0, 0, 478, 483, 484, 496, 498, 499, 500, 501,
	508, 515, 516, 518, 524, 525, 526, 527, 532, 539,
	558, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 138, 249, 263,
	546, 534, 0, 0, 491, 549, 464, 481, 557, 482,
	485, 522, 449, 504, 183, 479, 0, 468, 444, 475,
	445, 466, 493, 126, 497, 463, 536, 507, 548, 155,
	0, 469, 555, 157, 513, 0, 230, 171, 0, 0,
	0, 495, 538, 502, 531, 490, 523, 454, 512, 550,
	480, 520, 551, 59, 0, 0, 94, 95, 96, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 517,
	545, 477, 519, 521, 559, 443, 514, 0, 447, 450,
	556, 541, 472, 473, 0, 0, 0, 0, 0, 0,
	0, 494, 503, 528, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 470, 0, 511, 0, 0, 0, 451,
	448, 0, 0, 0, 0, 492, 0, 0, 0, 453,
	0, 471, 529, 0, 441, 135, 533, 540, 489, 288,
	544, 487, 486, 547, 202, 0, 234, 139, 154, 112,
	151, 98, 108, 0, 137, 180, 210, 214, 537, 467,
	476, 120, 474, 212, 190, 251, 510, 192, 211, 158,
	240, 203, 250, 260, 261, 237, 258, 266, 227, 101,
	236, 248, 117, 222, 0, 0, 0, 103, 246, 233,
	169, 148, 149, 102, 0, 208, 125, 133, 122, 182,
	243, 244, 121, 269, 109, 257, 105, 110, 256, 176,
	239, 247, 170, 163, 104, 245, 168, 162, 153, 129,
	141, 200, 160, 201, 142, 173, 172, 174, 0, 446,
	0, 231, 254, 270, 114, 462, 238, 264, 265, 0,
	204, 115, 134, 128, 199, 132, 175, 111, 144, 228,
	152, 159, 207, 268, 189, 213, 118, 253, 229, 458,
	461, 456, 457, 505, 506, 552, 553, 554, 530, 452,
	0, 459, 460, 0, 535, 542, 543, 509, 97, 106,
	156, 267, 205, 131, 255, 442, 455, 124, 465, 0,
	0, 478, 483, 484, 496, 498, 499, 500, 501, 508,
	515, 516, 518, 524, 525, 526, 527, 532, 539, 558,
	99, 100, 107, 113, 119, 123, 127, 130, 136, 140,
	143, 145, 146, 147, 150, 161, 164, 165, 166, 167,
	177, 178, 179, 181, 184, 185, 186, 187, 188, 191,
	193, 194, 195, 196, 197, 198, 206, 209, 215, 216,
	217, 218, 219, 220, 221, 223, 224, 225, 226, 232,
	235, 241, 242, 252, 259, 262, 138, 249, 263, 546,
	534, 0, 0, 491, 549, 464, 481, 557, 482, 485,
	522, 449, 504, 183, 479, 0, 468, 444, 475, 445,
	466, 493, 126, 497, 463, 536, 507, 548, 155, 0,
	469, 555, 157, 513, 0, 230, 171, 0, 0, 0,
	495, 538, 502, 531, 490, 523, 454, 512, 550, 480,
	520, 551, 0, 0, 0, 94, 95, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 517, 545,
	477, 519, 521, 559, 443, 514, 0, 447, 450, 556,
	541, 472, 473, 0, 0, 0, 0, 0, 0, 0,
	494, 503, 528, 488, 0, 0, 0, 0, 0, 0,
	1347, 0, 470, 0, 511, 0, 0, 0, 451, 448,
	0, 0, 0, 0, 492, 0, 0, 0, 453, 0,
	471, 529, 0, 441, 135, 533, 540, 489, 288, 544,
	487, 486, 547, 202, 0, 234, 139, 154, 112, 151,
	98, 108, 0, 137, 180, 210, 214, 537, 467, 476,
	120, 474, 212, 190, 251, 510, 192, 211, 158, 240,
	203, 250, 260, 261, 237, 258, 266, 227, 101, 236,
	248, 117, 222, 0, 0, 0, 103, 246, 233, 169,
	148, 149, 102, 0, 208, 125, 133, 122, 182, 243,
	244, 121, 269, 109, 257, 105, 110, 256, 176, 239,
	247, 170, 163, 104, 245, 168, 162, 153, 129, 141,
	200, 160, 201, 142, 173, 172, 174, 0, 446, 0,
	231, 254, 270, 114, 462, 238, 264, 265, 0, 204,
	115, 134, 128, 199, 132, 175, 111, 144, 228, 152,
	159, 207, 268, 189, 213, 118, 253, 229, 458, 461,
	456, 457, 505, 506, 552, 553, 554, 530, 452, 0,
	459, 460, 0, 535, 542, 543, 509, 97, 106, 156,
	267, 205, 131, 255, 442, 455, 124, 465, 0, 0,
	478, 483, 484, 496, 498, 499, 500, 501, 508, 515,
	516, 518, 524, 525, 526, 527, 532, 539, 558, 99,
	100, 107, 113, 119, 123, 127, 130, 136, 140, 143,
	145, 146, 147, 150, 161, 164, 165, 166, 167, 177,
	178, 179, 181, 184, 185, 186, 187, 188, 191, 193,
	194, 195, 196, 197, 198, 206, 209, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 232, 235,
	241, 242, 252, 259, 262, 138, 249, 263, 546, 534,
	0, 0, 491, 549, 464, 481, 557, 482, 485, 522,
	449, 504, 183, 479, 0, 468, 444, 475, 445, 466,
	493, 126, 497, 463, 536, 507, 548, 155, 0, 469,
	555, 157, 513, 0, 230, 171, 0, 0, 0, 495,
	538, 502, 531, 490, 523, 454, 512, 550, 480, 520,
	551, 0, 0, 0, 94, 95, 96, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 517, 545, 477,
	519, 521, 559, 443, 514, 0, 447, 450, 556, 541,
	472, 473, 0, 0, 0, 0, 0, 0, 0, 494,
	503, 528, 488, 0, 0, 0, 0, 0, 0, 1033,
	0, 470, 0, 511, 0, 0, 0, 451, 448, 0,
	0, 0, 0, 492, 0, 0, 0, 453, 0, 471,
	529, 0, 441, 135, 533, 540, 489, 288, 544, 487,
	486, 547, 202, 0, 234, 139, 154, 112, 151, 98,
	108, 0, 137, 180, 210, 214, 537, 467, 476, 120,
	474, 212, 190, 251, 510, 192, 211, 158, 240, 203,
	250, 260, 261, 237, 258, 266, 227, 101, 236, 248,
	117, 222, 0, 0, 0, 103, 246, 233, 169, 148,
	149, 102, 0, 208, 125, 133, 122, 182, 243, 244,
	121, 269, 109, 257, 105, 110, 256, 176, 239, 247,
	170, 163, 104, 245, 168, 162, 153, 129, 141, 200,
	160, 201, 142, 173, 172, 174, 0, 446, 0, 231,
	254, 270, 114, 462, 238, 264, 265, 0, 204, 115,
	134, 128, 199, 132, 175, 111, 144, 228, 152, 159,
	207, 268, 189, 213, 118, 253, 229, 458, 461, 456,
	457, 505, 506, 552, 553, 554, 530, 452, 0, 459,
	460, 0, 535, 542, 543, 509, 97, 106, 156, 267,
	205, 131, 255, 442, 455, 124, 465, 0, 0, 478,
	483, 484, 496, 498, 499, 500, 501, 508, 515, 516,
	518, 524, 525, 526, 527, 532, 539, 558, 99, 100,
	107, 113, 119, 123, 127, 130, 136, 140, 143, 145,
	146, 147, 150, 161, 164, 165, 166, 167, 177, 178,
	179, 181, 184, 185, 186, 187, 188, 191, 193, 194,
	195, 196, 197, 198, 206, 209, 215, 216, 217, 218,
	219, 220, 221, 223, 224, 225, 226, 232, 235, 241,
	242, 252, 259, 262, 138, 249, 263, 546, 534, 0,
	0, 491, 549, 464, 481, 557, 482, 485, 522, 449,
	504, 183, 479, 0, 468, 444, 475, 445, 466, 493,
	126, 497, 463, 536, 507, 548, 155, 0, 469, 555,
	157, 513, 0, 230, 171, 0, 0, 0, 495, 538,
	502, 531, 490, 523, 454, 512, 550, 480, 520, 551,
	0, 0, 0, 94, 95, 96, 0, 0, 0, 0,
	0, 0, 0, 0, 116, 0, 517, 545, 477, 519,
	521, 559, 443, 514, 0, 447, 450, 556, 541, 472,
	473, 0, 0, 0, 0, 0, 0, 0, 494, 503,
	528, 488, 0, 0, 0, 0, 0, 0, 996, 0,
	470, 0, 511, 0, 0, 0, 451, 448, 0, 0,
	0, 0, 492, 0, 0, 0, 453, 0, 471, 529,
	0, 441, 135, 533, 540, 489, 288, 544, 487, 486,
	547, 202, 0, 234, 139, 154, 112, 151, 98, 108,
	0, 137, 180, 210, 214, 537, 467, 476, 120, 474,
	212, 190, 251, 510, 192, 211, 158, 240, 203, 250,
	260, 261, 237, 258, 266, 227, 101, 236, 248, 117,
	222, 0, 0, 0, 103, 246, 233, 169, 148, 149,
	102, 0, 208, 125, 133, 122, 182, 243, 244, 121,
	269, 109, 257, 105, 110, 256, 176, 239, 247, 170,
	163, 104, 245, 168, 162, 153, 129, 141, 200, 160,
	201, 142, 173, 172, 174, 0, 446, 0, 231, 254,
	270, 114, 462, 238, 264, 265, 0, 204, 115, 134,
	128, 199, 132, 175, 111, 144, 228, 152, 159, 207,
	268, 189, 213, 118, 253, 229, 458, 461, 456, 457,
	505, 506, 552, 553, 554, 530, 452, 0, 459, 460,
	0, 535, 542, 543, 509, 97, 106, 156, 267, 205,
	131, 255, 442, 455, 124, 465, 0, 0, 478, 483,
	484, 496, 498, 499, 500, 501, 508, 515, 516, 518,
	524, 525, 526, 527, 532, 539, 558, 99, 100, 107,
	113, 119, 123, 127, 130, 136, 140, 143, 145, 146,
	147, 150, 161, 164, 165, 166, 167, 177, 178, 179,
	181, 184, 185, 186, 187, 188, 191, 193, 194, 195,
	196, 197, 198, 206, 209, 215, 216, 217, 218, 219,
	220, 221, 223, 224, 225, 226, 232, 235, 241, 242,
	252, 259, 262, 138, 249, 263, 546, 534, 0, 0,
	491, 549, 464, 481, 557, 482, 485, 522, 449, 504,
	183, 479, 0, 468, 444, 475, 445, 466, 493, 126,
	497, 463, 536, 507, 548, 155, 0, 469, 555, 157,
	513, 0, 230, 171, 0, 0, 0, 495, 538, 502,
	531, 490, 523, 454, 512, 550, 480, 520, 551, 0,
	0, 0, 94, 95, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 517, 545, 477, 519, 521,
	559, 443, 514, 0, 447, 450, 556, 541, 472, 473,
	0, 0, 0, 0, 0, 0, 0, 494, 503, 528,
	488, 0, 0, 0, 0, 0, 0, 0, 0, 470,
	0, 511, 0, 0, 0, 451, 448, 0, 0, 0,
	0, 492, 0, 0, 0, 453, 0, 471, 529, 0,
	441, 135, 533, 540, 489, 288, 544, 487, 486, 547,
	202, 0, 234, 139, 154, 112, 151, 98, 108, 0,
	137, 180, 210, 214, 537, 467, 476, 120, 474, 212,
	190, 251, 510, 192, 211, 158, 240, 203, 250, 260,
	261, 237, 258, 266, 227, 101, 236, 248, 117, 222,
	0, 0, 0, 103, 246, 233, 169, 148, 149, 102,
	0, 208, 125, 133, 122, 182, 243, 244, 121, 269,
	109, 257, 105, 110, 256, 176, 239, 247, 170, 163,
	104, 245, 168, 162, 153, 129, 141, 200, 160, 201,
	142, 173, 172, 174, 0, 446, 0, 231, 254, 270,
	114, 462, 238, 264, 265, 0, 204, 115, 134, 128,
	199, 132, 175, 111, 144, 228, 152, 159, 207, 268,
	189, 213, 118, 253, 229, 458, 461, 456, 457, 505,
	506, 552, 553, 554, 530, 452, 0, 459, 460, 0,
	535, 542, 543, 509, 97, 106, 156, 267, 205, 131,
	255, 442, 455, 124, 465, 0, 0, 478, 483, 484,
	496, 498, 499, 500, 501, 508, 515, 516, 518, 524,
	525, 526, 527, 532, 539, 558, 99, 100, 107, 113,
	119, 123, 127, 130, 136, 140, 143, 145, 146, 147,
	150, 161, 164, 165, 166, 167, 177, 178, 179, 181,
	184, 185, 186, 187, 188, 191, 193, 194, 195, 196,
	197, 198, 206, 209, 215, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 232, 235, 241, 242, 252,
	259, 262, 138, 249, 263, 546, 534, 0, 0, 491,
	549, 464, 481, 557, 482, 485, 522, 449, 504, 183,
	479, 0, 468, 444, 475, 445, 466, 493, 126, 497,
	463, 536, 507, 548, 155, 0, 469, 555, 157, 513,
	0, 230, 171, 0, 0, 0, 495, 538, 502, 531,
	490, 523, 454, 512, 550, 480, 520, 551, 0, 0,
	0, 94, 95, 96, 0, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 517, 545, 477, 519, 521, 559,
	443, 514, 0, 447, 450, 556, 541, 472, 473, 0,
	0, 0, 0, 0, 0, 0, 494, 503, 528, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 470, 0,
	511, 0, 0, 0, 451, 448, 0, 0, 0, 0,
	492, 0, 0, 0, 453, 0, 471, 529, 0, 441,
	135, 533, 540, 489, 288, 544, 487, 486, 547, 202,
	0, 234, 139, 154, 112, 151, 98, 108, 0, 137,
	180, 210, 214, 537, 467, 476, 120, 474, 212, 190,
	251, 510, 192, 211, 158, 240, 203, 250, 260, 261,
	237, 258, 266, 227, 101, 236, 248, 117, 222, 0,
	0, 0, 103, 246, 233, 169, 148, 149, 102, 0,
	208, 125, 133, 122, 182, 243, 244, 121, 269, 109,
	257, 105, 439, 256, 176, 239, 247, 170, 163, 104,
	245, 168, 162, 153, 129, 141, 200, 160, 201, 142,
	173, 172, 174, 0, 446, 0, 231, 254, 270, 114,
	462, 238, 264, 265, 0, 204, 115, 134, 128, 199,
	132, 440, 438, 433, 432, 152, 159, 207, 268, 189,
	213, 118, 253, 229, 458, 461, 456, 457, 505, 506,
	552, 553, 554, 530, 452, 0, 459, 460, 0, 535,
	542, 543, 509, 97, 106, 156, 267, 205, 131, 255,
	442, 455, 124, 465, 0, 0, 478, 483, 484, 496,
	498, 499, 500, 501, 508, 515, 516, 518, 524, 525,
	526, 527, 532, 539, 558, 99, 100, 107, 113, 119,
	123, 127, 130, 136, 140, 143, 145, 146, 147, 150,
	161, 164, 165, 166, 167, 177, 178, 179, 181, 184,
	185, 186, 187, 188, 191, 193, 194, 195, 196, 197,
	198, 206, 209, 215, 216, 217, 218, 219, 220, 221,
	223, 224, 225, 226, 232, 235, 241, 242, 252, 259,
	262, 138, 249, 263, 546, 534, 0, 0, 491, 549,
	464, 481, 557, 482, 485, 522, 449, 504, 183, 479,
	0, 468, 444, 475, 445, 466, 493, 126, 497, 463,
	536, 507, 548, 155, 0, 469, 555, 157, 513, 0,
	230, 171, 0, 0, 0, 495, 538, 502, 531, 490,
	523, 454, 512, 550, 480, 520, 551, 0, 0, 0,
	94, 95, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 517, 545, 477, 519, 521, 559, 443,
	514, 0, 447, 450, 556, 541, 472, 473, 0, 0,
	0, 0, 0, 0, 0, 494, 503, 528, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 470, 0, 511,
	0, 0, 0, 451, 448, 0, 0, 0, 0, 492,
	0, 0, 0, 453, 0, 471, 529, 0, 441, 135,
	533, 540, 489, 288, 544, 487, 486, 547, 202, 0,
	234, 139, 154, 112, 151, 98, 108, 0, 137, 180,
	210, 214, 537, 467, 476, 120, 474, 212, 190, 251,
	510, 192, 211, 158, 240, 203, 250, 260, 261, 237,
	258, 266, 227, 101, 236, 772, 117, 222, 0, 0,
	0, 103, 246, 233, 169, 148, 149, 102, 0, 208,
	125, 133, 122, 182, 243, 244, 121, 269, 109, 257,
	105, 439, 256, 176, 239, 247, 170, 163, 104, 245,
	168, 162, 153, 129, 141, 200, 160, 201, 142, 173,
	172, 174, 0, 446, 0, 231, 254, 270, 114, 462,
	238, 264, 265, 0, 204, 115, 134, 128, 199, 132,
	440, 438, 433, 432, 152, 159, 207, 268, 189, 213,
	118, 253, 229, 458, 461, 456, 457, 505, 506, 552,
	553, 554, 530, 452, 0, 459, 460, 0, 535, 542,
	543, 509, 97, 106, 156, 267, 205, 131, 255, 442,
	455, 124, 465, 0, 0, 478, 483, 484, 496, 498,
	499, 500, 501, 508, 515, 516, 518, 524, 525, 526,
	527, 532, 539, 558, 99, 100, 107, 113, 119, 123,
	127, 130, 136, 140, 143, 145, 146, 147, 150, 161,
	164, 165, 166, 167, 177, 178, 179, 181, 184, 185,
	186, 187, 188, 191, 193, 194, 195, 196, 197, 198,
	206, 209, 215, 216, 217, 218, 219, 220, 221, 223,
	224, 225, 226, 232, 235, 241, 242, 252, 259, 262,
	138, 249, 263, 546, 534, 0, 0, 491, 549, 464,
	481, 557, 482, 485, 522, 449, 504, 183, 479, 0,
	468, 444, 475, 445, 466, 493, 126, 497, 463, 536,
	507, 548, 155, 0, 469, 555, 157, 513, 0, 230,
	171, 0, 0, 0, 495, 538, 502, 531, 490, 523,
	454, 512, 550, 480, 520, 551, 0, 0, 0, 94,
	95, 96, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 517, 545, 477, 519, 521, 559, 443, 514,
	0, 447, 450, 556, 541, 472, 473, 0, 0, 0,
	0, 0, 0, 0, 494, 503, 528, 488, 0, 0,
	0, 0, 0, 0, 0, 0, 470, 0, 511, 0,
	0, 0, 451, 448, 0, 0, 0, 0, 492, 0,
	0, 0, 453, 0, 471, 529, 0, 441, 135, 533,
	540, 489, 288, 544, 487, 486, 547, 202, 0, 234,
	139, 154, 112, 151, 98, 108, 0, 137, 180, 210,
	214, 537, 467, 476, 120, 474, 212, 190, 251, 510,
	192, 211, 158, 240, 203, 250, 260, 261, 237, 258,
	266, 227, 101, 236, 430, 117, 222, 0, 0, 0,
	103, 246, 233, 169, 148, 149, 102, 0, 208, 125,
	133, 122, 182, 243, 244, 121, 269, 109, 257, 105,
	439, 256, 176, 239, 247, 170, 163, 104, 245, 168,
	162, 153, 129, 141, 200, 160, 201, 142, 173, 172,
	174, 0, 446, 0, 231, 254, 270, 114, 462, 238,
	264, 265, 0, 204, 115, 134, 128, 199, 132, 440,
	438, 433, 432, 152, 159, 207, 268, 189, 213, 118,
	253, 229, 458, 461, 456, 457, 505, 506, 552, 553,
	554, 530, 452, 0, 459, 460, 0, 535, 542, 543,
	509, 97, 106, 156, 267, 205, 131, 255, 442, 455,
	124, 465, 0, 0, 478, 483, 484, 496, 498, 499,
	500, 501, 508, 515, 516, 518, 524, 525, 526, 527,
	532, 539, 558, 99, 100, 107, 113, 119, 123, 127,
	130, 136, 140, 143, 145, 146, 147, 150, 161, 164,
	165, 166, 167, 177, 178, 179, 181, 184, 185, 186,
	187, 188, 191, 193, 194, 195, 196, 197, 198, 206,
	209, 215, 216, 217, 218, 219, 220, 221, 223, 224,
	225, 226, 232, 235, 241, 242, 252, 259, 262, 138,
	249, 263, 183, 0, 0, 936, 0, 332, 0, 0,
	0, 126, 0, 331, 0, 0, 0, 155, 0, 937,
	375, 157, 0, 0, 230, 171, 0, 0, 0, 0,
	0, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 94, 95, 96, 353, 352, 355,
	356, 357, 358, 0, 0, 116, 354, 359, 360, 361,
	0, 0, 0, 0, 329, 346, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 344, 415,
	0, 0, 0, 389, 0, 345, 0, 0, 338, 339,
	341, 340, 342, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 388, 0, 0, 288, 0, 0,
	386, 0, 202, 0, 234, 139, 154, 112, 151, 98,
	108, 0, 137, 180, 210, 214, 0, 0, 0, 120,
	0, 212, 190, 251, 0, 192, 211, 158, 240, 203,
	250, 260, 261, 237, 258, 266, 227, 101, 236, 248,
	117, 222, 0, 0, 0, 103, 246, 233, 169, 148,
	149, 102, 0, 208, 125, 133, 122, 182, 243, 244,
	121, 269, 109, 257, 105, 110, 256, 176, 239, 247,
	170, 163, 104, 245, 168, 162, 153, 129, 141, 200,
	160, 201, 142, 173, 172, 174, 0, 0, 0, 231,
	254, 270, 114, 0, 238, 264, 265, 0, 204, 115,
	134, 128, 199, 132, 175, 111, 144, 228, 152, 159,
	207, 268, 189, 213, 118, 253, 229, 376, 387, 382,
	383, 380, 381, 379, 378, 377, 390, 368, 369, 370,
	371, 373, 0, 384, 385, 372, 97, 106, 156, 267,
	205, 131, 255, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	107, 113, 119, 123, 127, 130, 136, 140, 143, 145,
	146, 147, 150, 161, 164, 165, 166, 167, 177, 178,
	179, 181, 184, 185, 186, 187, 188, 191, 193, 194,
	195, 196, 197, 198, 206, 209, 215, 216, 217, 218,
	219, 220, 221, 223, 224, 225, 226, 232, 235, 241,
	242, 252, 259, 262, 138, 249, 263, 183, 0, 0,
	0, 0, 332, 0, 0, 0, 126, 0, 331, 0,
	0, 0, 155, 0, 0, 375, 157, 0, 0, 230,
	171, 0, 0, 0, 0, 0, 366, 367, 0, 0,
	0, 0, 0, 0, 1040, 0, 59, 0, 0, 94,
	95, 96, 353, 352, 355, 356, 357, 358, 0, 0,
	116, 354, 359, 360, 361, 1041, 0, 0, 0, 329,
	346, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 344, 0, 0, 0, 0, 389, 0,
	345, 0, 0, 338, 339, 341, 340, 342, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 388,
	0, 0, 288, 0, 0, 386, 0, 202, 0, 234,
	139, 154, 112, 151, 98, 108, 0, 137, 180, 210,
	214, 0, 0, 0, 120, 0, 212, 190, 251, 0,
	192, 211, 158, 240, 203, 250, 260, 261, 237, 258,
	266, 227, 101, 236, 248, 117, 222, 0, 0, 0,
	103, 246, 233, 169, 148, 149, 102, 0, 208, 125,
	133, 122, 182, 243, 244, 121, 269, 109, 257, 105,
	110, 256, 176, 239, 247, 170, 163, 104, 245, 168,
	162, 153, 129, 141, 200, 160, 201, 142, 173, 172,
	174, 0, 0, 0, 231, 254, 270, 114, 0, 238,
	264, 265, 0, 204, 115, 134, 128, 199, 132, 175,
	111, 144, 228, 152, 159, 207, 268, 189, 213, 118,
	253, 229, 376, 387, 382, 383, 380, 381, 379, 378,
	377, 390, 368, 369, 370, 371, 373, 0, 384, 385,
	372, 97, 106, 156, 267, 205, 131, 255, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 107, 113, 119, 123, 127,
	130, 136, 140, 143, 145, 146, 147, 150, 161, 164,
	165, 166, 167, 177, 178, 179, 181, 184, 185, 186,
	187, 188, 191, 193, 194, 195, 196, 197, 198, 206,
	209, 215, 216, 217, 218, 219, 220, 221, 223, 224,
	225, 226, 232, 235, 241, 242, 252, 259, 262, 138,
	249, 263, 183, 0, 0, 0, 0, 332, 0, 0,
	0, 126, 0, 331, 0, 0, 0, 155, 0, 0,
	375, 157, 0, 0, 230, 171, 0, 0, 0, 0,
	0, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 403, 94, 95, 96, 353, 352, 355,
	356, 357, 358, 0, 0, 116, 354, 359, 360, 361,
	0, 0, 0, 0, 329, 346, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 344, 0,
	0, 0, 0, 389, 0, 345, 0, 0, 338, 339,
	341, 340, 342, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 388, 0, 0, 288, 0, 0,
	386, 0, 202, 0, 234, 139, 154, 112, 151, 98,
	108, 0, 137, 180, 210, 214, 0, 0, 0, 120,
	0, 212, 190, 251, 0, 192, 211, 158, 240, 203,
	250, 260, 261, 237, 258, 266, 227, 101, 236, 248,
	117, 222, 0, 0, 0, 103, 246, 233, 169, 148,
	149, 102, 0, 208, 125, 133, 122, 182, 243, 244,
	121, 269, 109, 257, 105, 110, 256, 176, 239, 247,
	170, 163, 104, 245, 168, 162, 153, 129, 141, 200,
	160, 201, 142, 173, 172, 174, 0, 0, 0, 231,
	254, 270, 114, 0, 238, 264, 265, 0, 204, 115,
	134, 128, 199, 132, 175, 111, 144, 228, 152, 159,
	207, 268, 189, 213, 118, 253, 229, 376, 387, 382,
	383, 380, 381, 379, 378, 377, 390, 368, 369, 370,
	371, 373, 0, 384, 385, 372, 97, 106, 156, 267,
	205, 131, 255, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	107, 113, 119, 123, 127, 130, 136, 140, 143, 145,
	146, 147, 150, 161, 164, 165, 166, 167, 177, 178,
	179, 181, 184, 185, 186, 187, 188, 191, 193, 194,
	195, 196, 197, 198, 206, 209, 215, 216, 217, 218,
	219, 220, 221, 223, 224, 225, 226, 232, 235, 241,
	242, 252, 259, 262, 138, 249, 263, 183, 0, 0,
	0, 0, 332, 0, 0, 0, 126, 0, 331, 0,
	0, 0, 155, 0, 0, 375, 157, 0, 0, 230,
	171, 0, 0, 0, 0, 0, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 94,
	95, 96, 353, 352, 355, 356, 357, 358, 0, 0,
	116, 354, 359, 360, 361, 0, 0, 0, 0, 329,
	346, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 344, 415, 0, 0, 0, 389, 0,
	345, 0, 0, 338, 339, 341, 340, 342, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 388,
	0, 0, 288, 0, 0, 386, 0, 202, 0, 234,
	139, 154, 112, 151, 98, 108, 0, 137, 180, 210,
	214, 0, 0, 0, 120, 0, 212, 190, 251, 0,
	192, 211, 158, 240, 203, 250, 260, 261, 237, 258,
	266, 227, 101, 236, 248, 117, 222, 0, 0, 0,
	103, 246, 233, 169, 148, 149, 102, 0, 208, 125,
	133, 122, 182, 243, 244, 121, 269, 109, 257, 105,
	110, 256, 176, 239, 247, 170, 163, 104, 245, 168,
	162, 153, 129, 141, 200, 160, 201, 142, 173, 172,
	174, 0, 0, 0, 231, 254, 270, 114, 0, 238,
	264, 265, 0, 204, 115, 134, 128, 199, 132, 175,
	111, 144, 228, 152, 159, 207, 268, 189, 213, 118,
	253, 229, 376, 387, 382, 383, 380, 381, 379, 378,
	377, 390, 368, 369, 370, 371, 373, 0, 384, 385,
	372, 97, 106, 156, 267, 205, 131, 255, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 107, 113, 119, 123, 127,
	130, 136, 140, 143, 145, 146, 147, 150, 161, 164,
	165, 166, 167, 177, 178, 179, 181, 184, 185, 186,
	187, 188, 191, 193, 194, 195, 196, 197, 198, 206,
	209, 215, 216, 217, 218, 219, 220, 221, 223, 224,
	225, 226, 232, 235, 241, 242, 252, 259, 262, 138,
	249, 263, 183, 0, 0, 0, 0, 332, 0, 0,
	0, 126, 0, 331, 0, 0, 0, 155, 0, 0,
	375, 157, 0, 0, 230, 171, 0, 0, 0, 0,
	0, 366, 367, 0, 0, 0, 0, 0, 0, 0,
	0, 59, 0, 0, 94, 95, 96, 353, 954, 355,
	356, 357, 358, 0, 0, 116, 354, 359, 360, 361,
	0, 0, 0, 0, 329, 346, 0, 374, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 343, 344, 415,
	0, 0, 0, 389, 0, 345, 0, 0, 338, 339,
	341, 340, 342, 347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 388, 0, 0, 288, 0, 0,
	386, 0, 202, 0, 234, 139, 154, 112, 151, 98,
	108, 0, 137, 180, 210, 214, 0, 0, 0, 120,
	0, 212, 190, 251, 0, 192, 211, 158, 240, 203,
	250, 260, 261, 237, 258, 266, 227, 101, 236, 248,
	117, 222, 0, 0, 0, 103, 246, 233, 169, 148,
	149, 102, 0, 208, 125, 133, 122, 182, 243, 244,
	121, 269, 109, 257, 105, 110, 256, 176, 239, 247,
	170, 163, 104, 245, 168, 162, 153, 129, 141, 200,
	160, 201, 142, 173, 172, 174, 0, 0, 0, 231,
	254, 270, 114, 0, 238, 264, 265, 0, 204, 115,
	134, 128, 199, 132, 175, 111, 144, 228, 152, 159,
	207, 268, 189, 213, 118, 253, 229, 376, 387, 382,
	383, 380, 381, 379, 378, 377, 390, 368, 369, 370,
	371, 373, 0, 384, 385, 372, 97, 106, 156, 267,
	205, 131, 255, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 99, 100,
	107, 113, 119, 123, 127, 130, 136, 140, 143, 145,
	146, 147, 150, 161, 164, 165, 166, 167, 177, 178,
	179, 181, 184, 185, 186, 187, 188, 191, 193, 194,
	195, 196, 197, 198, 206, 209, 215, 216, 217, 218,
	219, 220, 221, 223, 224, 225, 226, 232, 235, 241,
	242, 252, 259, 262, 138, 249, 263, 183, 0, 0,
	0, 0, 332, 0, 0, 0, 126, 0, 331, 0,
	0, 0, 155, 0, 0, 375, 157, 0, 0, 230,
	171, 0, 0, 0, 0, 0, 366, 367, 0, 0,
	0, 0, 0, 0, 0, 0, 59, 0, 0, 94,
	95, 96, 353, 951, 355, 356, 357, 358, 0, 0,
	116, 354, 359, 360, 361, 0, 0, 0, 0, 329,
	346, 0, 374, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 343, 344, 415, 0, 0, 0, 389, 0,
	345, 0, 0, 338, 339, 341, 340, 342, 347, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 135, 388,
	0, 0, 288, 0, 0, 386, 0, 202, 0, 234,
	139, 154, 112, 151, 98, 108, 0, 137, 180, 210,
	214, 0, 0, 0, 120, 0, 212, 190, 251, 0,
	192, 211, 158, 240, 203, 250, 260, 261, 237, 258,
	266, 227, 101, 236, 248, 117, 222, 0, 0, 0,
	103, 246, 233, 169, 148, 149, 102, 0, 208, 125,
	133, 122, 182, 243, 244, 121, 269, 109, 257, 105,
	110, 256, 176, 239, 247, 170, 163, 104, 245, 168,
	162, 153, 129, 141, 200, 160, 201, 142, 173, 172,
	174, 0, 0, 0, 231, 254, 270, 114, 0, 238,
	264, 265, 0, 204, 115, 134, 128, 199, 132, 175,
	111, 144, 228, 152, 159, 207, 268, 189, 213, 118,
	253, 229, 376, 387, 382, 383, 380, 381, 379, 378,
	377, 390, 368, 369, 370, 371, 373, 0, 384, 385,
	372, 97, 106, 156, 267, 205, 131, 255, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 100, 107, 113, 119, 123, 127,
	130, 136, 140, 143, 145, 146, 147, 150, 161, 164,
	165, 166, 167, 177, 178, 179, 181, 184, 185, 186,
	187, 188, 191, 193, 194, 195, 196, 197, 198, 206,
	209, 215, 216, 217, 218, 219, 220, 221, 223, 224,
	225, 226, 232, 235, 241, 242, 252, 259, 262, 138,
	249, 263, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	332, 0, 0, 0, 126, 0, 331, 0, 0, 0,
	155, 0, 0, 375, 157, 0, 0, 230, 171, 0,
	0, 0, 0, 0, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 94, 95, 96,
	353, 352, 355, 356, 357, 358, 0, 0, 116, 354,
	359, 360, 361, 0, 0, 0, 0, 329, 346, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 344, 0, 0, 0, 0, 389, 0, 345, 0,
	0, 338, 339, 341, 340, 342, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 388, 0, 0,
	288, 0, 0, 386, 0, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 0,
	0, 0, 120, 0, 212, 190, 251, 0, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	0, 0, 231, 254, 270, 114, 0, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	376, 387, 382, 383, 380, 381, 379, 378, 377, 390,
	368, 369, 370, 371, 373, 0, 384, 385, 372, 97,
	106, 156, 267, 205, 131, 255, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 138, 249, 263,
	183, 0, 0, 0, 0, 332, 0, 0, 0, 126,
	0, 331, 0, 0, 0, 155, 0, 0, 375, 157,
	0, 0, 230, 171, 0, 0, 0, 0, 0, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 0, 94, 95, 96, 353, 352, 355, 356, 357,
	358, 0, 0, 116, 354, 359, 360, 361, 0, 0,
	0, 0, 329, 346, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 344, 0, 0, 0,
	0, 389, 0, 345, 0, 0, 338, 339, 341, 340,
	342, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 388, 0, 0, 288, 0, 0, 386, 0,
	202, 0, 234, 139, 154, 112, 151, 98, 108, 0,
	137, 180, 210, 214, 0, 0, 0, 120, 0, 212,
	190, 251, 0, 192, 211, 158, 240, 203, 250, 260,
	261, 237, 258, 266, 227, 101, 236, 248, 117, 222,
	0, 0, 0, 103, 246, 233, 169, 148, 149, 102,
	0, 208, 125, 133, 122, 182, 243, 244, 121, 269,
	109, 257, 105, 110, 256, 176, 239, 247, 170, 163,
	104, 245, 168, 162, 153, 129, 141, 200, 160, 201,
	142, 173, 172, 174, 0, 0, 0, 231, 254, 270,
	114, 0, 238, 264, 265, 0, 204, 115, 134, 128,
	199, 132, 175, 111, 144, 228, 152, 159, 207, 268,
	189, 213, 118, 253, 229, 376, 387, 382, 383, 380,
	381, 379, 378, 377, 390, 368, 369, 370, 371, 373,
	0, 384, 385, 372, 97, 106, 156, 267, 205, 131,
	255, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 107, 113,
	119, 123, 127, 130, 136, 140, 143, 145, 146, 147,
	150, 161, 164, 165, 166, 167, 177, 178, 179, 181,
	184, 185, 186, 187, 188, 191, 193, 194, 195, 196,
	197, 198, 206, 209, 215, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 232, 235, 241, 242, 252,
	259, 262, 138, 249, 263, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	155, 0, 0, 375, 157, 0, 0, 230, 171, 0,
	0, 0, 0, 0, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 94, 95, 96,
	353, 352, 355, 356, 357, 358, 0, 0, 116, 354,
	359, 360, 361, 0, 0, 0, 0, 0, 346, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 344, 0, 0, 0, 0, 389, 0, 345, 0,
	0, 338, 339, 341, 340, 342, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 388, 0, 0,
	288, 0, 0, 386, 0, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 0,
	0, 0, 120, 0, 212, 190, 251, 1610, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	0, 0, 231, 254, 270, 114, 0, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	376, 387, 382, 383, 380, 381, 379, 378, 377, 390,
	368, 369, 370, 371, 373, 0, 384, 385, 372, 97,
	106, 156, 267, 205, 131, 255, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 138, 249, 263,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 155, 0, 0, 375, 157,
	0, 0, 230, 171, 0, 0, 0, 0, 0, 366,
	367, 0, 0, 0, 0, 0, 0, 0, 0, 59,
	0, 403, 94, 95, 96, 353, 352, 355, 356, 357,
	358, 0, 0, 116, 354, 359, 360, 361, 0, 0,
	0, 0, 0, 346, 0, 374, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 343, 344, 0, 0, 0,
	0, 389, 0, 345, 0, 0, 338, 339, 341, 340,
	342, 347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 388, 0, 0, 288, 0, 0, 386, 0,
	202, 0, 234, 139, 154, 112, 151, 98, 108, 0,
	137, 180, 210, 214, 0, 0, 0, 120, 0, 212,
	190, 251, 0, 192, 211, 158, 240, 203, 250, 260,
	261, 237, 258, 266, 227, 101, 236, 248, 117, 222,
	0, 0, 0, 103, 246, 233, 169, 148, 149, 102,
	0, 208, 125, 133, 122, 182, 243, 244, 121, 269,
	109, 257, 105, 110, 256, 176, 239, 247, 170, 163,
	104, 245, 168, 162, 153, 129, 141, 200, 160, 201,
	142, 173, 172, 174, 0, 0, 0, 231, 254, 270,
	114, 0, 238, 264, 265, 0, 204, 115, 134, 128,
	199, 132, 175, 111, 144, 228, 152, 159, 207, 268,
	189, 213, 118, 253, 229, 376, 387, 382, 383, 380,
	381, 379, 378, 377, 390, 368, 369, 370, 371, 373,
	0, 384, 385, 372, 97, 106, 156, 267, 205, 131,
	255, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 107, 113,
	119, 123, 127, 130, 136, 140, 143, 145, 146, 147,
	150, 161, 164, 165, 166, 167, 177, 178, 179, 181,
	184, 185, 186, 187, 188, 191, 193, 194, 195, 196,
	197, 198, 206, 209, 215, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 232, 235, 241, 242, 252,
	259, 262, 138, 249, 263, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	155, 0, 0, 375, 157, 0, 0, 230, 171, 0,
	0, 0, 0, 0, 366, 367, 0, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 0, 94, 95, 96,
	353, 352, 355, 356, 357, 358, 0, 0, 116, 354,
	359, 360, 361, 0, 0, 0, 0, 0, 346, 0,
	374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	343, 344, 0, 0, 0, 0, 389, 0, 345, 0,
	0, 338, 339, 341, 340, 342, 347, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 388, 0, 0,
	288, 0, 0, 386, 0, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 0,
	0, 0, 120, 0, 212, 190, 251, 0, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	0, 0, 231, 254, 270, 114, 0, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	376, 387, 382, 383, 380, 381, 379, 378, 377, 390,
	368, 369, 370, 371, 373, 0, 384, 385, 372, 97,
	106, 156, 267, 205, 131, 255, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 138, 249, 263,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 157,
	0, 0, 230, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 95, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 651, 650, 660, 661, 653, 654, 655, 656, 657,
	658, 659, 652, 0, 0, 662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 288, 0, 0, 0, 0,
	202, 0, 234, 139, 154, 112, 151, 98, 108, 0,
	137, 180, 210, 214, 0, 0, 0, 120, 0, 212,
	190, 251, 0, 192, 211, 158, 240, 203, 250, 260,
	261, 237, 258, 266, 227, 101, 236, 248, 117, 222,
	0, 0, 0, 103, 246, 233, 169, 148, 149, 102,
	0, 208, 125, 133, 122, 182, 243, 244, 121, 269,
	109, 257, 105, 110, 256, 176, 239, 247, 170, 163,
	104, 245, 168, 162, 153, 129, 141, 200, 160, 201,
	142, 173, 172, 174, 0, 0, 0, 231, 254, 270,
	114, 0, 238, 264, 265, 0, 204, 115, 134, 128,
	199, 132, 175, 111, 144, 228, 152, 159, 207, 268,
	189, 213, 118, 253, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 106, 156, 267, 205, 131,
	255, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 107, 113,
	119, 123, 127, 130, 136, 140, 143, 145, 146, 147,
	150, 161, 164, 165, 166, 167, 177, 178, 179, 181,
	184, 185, 186, 187, 188, 191, 193, 194, 195, 196,
	197, 198, 206, 209, 215, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 232, 235, 241, 242, 252,
	259, 262, 138, 249, 263, 183, 0, 0, 0, 746,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 157, 0, 0, 230, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 95, 96,
	0, 748, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 640, 641, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	288, 0, 0, 0, 0, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 0,
	0, 0, 120, 0, 212, 190, 251, 0, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	0, 0, 231, 254, 270, 114, 0, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	106, 156, 267, 205, 131, 255, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 138, 249, 263,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 157,
	0, 0, 230, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 95, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 86,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 88, 89, 0, 85, 0, 0, 0, 90,
	202, 0, 234, 139, 154, 112, 151, 98, 108, 0,
	137, 180, 210, 214, 0, 0, 0, 120, 0, 212,
	190, 251, 0, 192, 211, 158, 240, 203, 250, 260,
	261, 237, 258, 266, 227, 101, 236, 248, 117, 222,
	0, 0, 0, 103, 246, 233, 169, 148, 149, 102,
	0, 208, 125, 133, 122, 182, 243, 244, 121, 269,
	109, 257, 105, 110, 256, 176, 239, 247, 170, 163,
	104, 245, 168, 162, 153, 129, 141, 200, 160, 201,
	142, 173, 172, 174, 0, 0, 0, 231, 254, 270,
	114, 0, 238, 264, 265, 0, 204, 115, 134, 128,
	199, 132, 175, 111, 144, 228, 152, 159, 207, 268,
	189, 213, 118, 253, 229, 0, 87, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 106, 156, 267, 205, 131,
	255, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 107, 113,
	119, 123, 127, 130, 136, 140, 143, 145, 146, 147,
	150, 161, 164, 165, 166, 167, 177, 178, 179, 181,
	184, 185, 186, 187, 188, 191, 193, 194, 195, 196,
	197, 198, 206, 209, 215, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 232, 235, 241, 242, 252,
	259, 262, 138, 249, 263, 183, 0, 0, 0, 1023,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 157, 0, 0, 230, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 95, 96,
	0, 1025, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	288, 0, 0, 0, 0, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 0,
	0, 0, 120, 0, 212, 190, 251, 0, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	0, 0, 231, 254, 270, 114, 0, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	106, 156, 267, 205, 131, 255, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 138, 249, 263,
	30, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 157, 0, 0, 230, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 59, 0, 0, 94, 95, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 288, 0,
	0, 0, 0, 202, 0, 234, 139, 154, 112, 151,
	98, 108, 0, 137, 180, 210, 214, 0, 0, 0,
	120, 0, 212, 190, 251, 0, 192, 211, 158, 240,
	203, 250, 260, 261, 237, 258, 266, 227, 101, 236,
	248, 117, 222, 0, 0, 0, 103, 246, 233, 169,
	148, 149, 102, 0, 208, 125, 133, 122, 182, 243,
	244, 121, 269, 109, 257, 105, 110, 256, 176, 239,
	247, 170, 163, 104, 245, 168, 162, 153, 129, 141,
	200, 160, 201, 142, 173, 172, 174, 0, 0, 0,
	231, 254, 270, 114, 0, 238, 264, 265, 0, 204,
	115, 134, 128, 199, 132, 175, 111, 144, 228, 152,
	159, 207, 268, 189, 213, 118, 253, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 106, 156,
	267, 205, 131, 255, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 107, 113, 119, 123, 127, 130, 136, 140, 143,
	145, 146, 147, 150, 161, 164, 165, 166, 167, 177,
	178, 179, 181, 184, 185, 186, 187, 188, 191, 193,
	194, 195, 196, 197, 198, 206, 209, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 232, 235,
	241, 242, 252, 259, 262, 138, 249, 263, 183, 0,
	0, 0, 1023, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 157, 0, 0,
	230, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 95, 96, 0, 1025, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 288, 0, 0, 0, 0, 202, 0,
	234, 139, 154, 112, 151, 98, 108, 0, 137, 180,
	210, 214, 0, 0, 0, 120, 0, 212, 190, 251,
	0, 1021, 211, 158, 240, 203, 250, 260, 261, 237,
	258, 266, 227, 101, 236, 248, 117, 222, 0, 0,
	0, 103, 246, 233, 169, 148, 149, 102, 0, 208,
	125, 133, 122, 182, 243, 244, 121, 269, 109, 257,
	105, 110, 256, 176, 239, 247, 170, 163, 104, 245,
	168, 162, 153, 129, 141, 200, 160, 201, 142, 173,
	172, 174, 0, 0, 0, 231, 254, 270, 114, 0,
	238, 264, 265, 0, 204, 115, 134, 128, 199, 132,
	175, 111, 144, 228, 152, 159, 207, 268, 189, 213,
	118, 253, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 106, 156, 267, 205, 131, 255, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 107, 113, 119, 123,
	127, 130, 136, 140, 143, 145, 146, 147, 150, 161,
	164, 165, 166, 167, 177, 178, 179, 181, 184, 185,
	186, 187, 188, 191, 193, 194, 195, 196, 197, 198,
	206, 209, 215, 216, 217, 218, 219, 220, 221, 223,
	224, 225, 226, 232, 235, 241, 242, 252, 259, 262,
	138, 249, 263, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 157, 0, 0, 230, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 95, 96, 0, 0,
	988, 0, 0, 989, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 288, 0,
	0, 0, 0, 202, 0, 234, 139, 154, 112, 151,
	98, 108, 0, 137, 180, 210, 214, 0, 0, 0,
	120, 0, 212, 190, 251, 0, 192, 211, 158, 240,
	203, 250, 260, 261, 237, 258, 266, 227, 101, 236,
	248, 117, 222, 0, 0, 0, 103, 246, 233, 169,
	148, 149, 102, 0, 208, 125, 133, 122, 182, 243,
	244, 121, 269, 109, 257, 105, 110, 256, 176, 239,
	247, 170, 163, 104, 245, 168, 162, 153, 129, 141,
	200, 160, 201, 142, 173, 172, 174, 0, 0, 0,
	231, 254, 270, 114, 0, 238, 264, 265, 0, 204,
	115, 134, 128, 199, 132, 175, 111, 144, 228, 152,
	159, 207, 268, 189, 213, 118, 253, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 106, 156,
	267, 205, 131, 255, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 107, 113, 119, 123, 127, 130, 136, 140, 143,
	145, 146, 147, 150, 161, 164, 165, 166, 167, 177,
	178, 179, 181, 184, 185, 186, 187, 188, 191, 193,
	194, 195, 196, 197, 198, 206, 209, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 232, 235,
	241, 242, 252, 259, 262, 138, 249, 263, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 783,
	0, 0, 0, 155, 0, 0, 0, 157, 0, 0,
	230, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 95, 96, 0, 782, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 288, 0, 0, 0, 0, 202, 0,
	234, 139, 154, 112, 151, 98, 108, 0, 137, 180,
	210, 214, 0, 0, 0, 120, 0, 212, 190, 251,
	0, 192, 211, 158, 240, 203, 250, 260, 261, 237,
	258, 266, 227, 101, 236, 248, 117, 222, 0, 0,
	0, 103, 246, 233, 169, 148, 149, 102, 0, 208,
	125, 133, 122, 182, 243, 244, 121, 269, 109, 257,
	105, 110, 256, 176, 239, 247, 170, 163, 104, 245,
	168, 162, 153, 129, 141, 200, 160, 201, 142, 173,
	172, 174, 0, 0, 0, 231, 254, 270, 114, 0,
	238, 264, 265, 0, 204, 115, 134, 128, 199, 132,
	175, 111, 144, 228, 152, 159, 207, 268, 189, 213,
	118, 253, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 106, 156, 267, 205, 131, 255, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 107, 113, 119, 123,
	127, 130, 136, 140, 143, 145, 146, 147, 150, 161,
	164, 165, 166, 167, 177, 178, 179, 181, 184, 185,
	186, 187, 188, 191, 193, 194, 195, 196, 197, 198,
	206, 209, 215, 216, 217, 218, 219, 220, 221, 223,
	224, 225, 226, 232, 235, 241, 242, 252, 259, 262,
	138, 249, 263, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 157, 0, 0, 230, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 403, 94, 95, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 288, 0,
	0, 0, 0, 202, 0, 234, 139, 154, 112, 151,
	98, 108, 0, 137, 180, 210, 214, 0, 0, 0,
	120, 0, 212, 190, 251, 0, 192, 211, 158, 240,
	203, 250, 260, 261, 237, 258, 266, 227, 101, 236,
	248, 117, 222, 0, 0, 0, 103, 246, 233, 169,
	148, 149, 102, 0, 208, 125, 133, 122, 182, 243,
	244, 121, 269, 109, 257, 105, 110, 256, 176, 239,
	247, 170, 163, 104, 245, 168, 162, 153, 129, 141,
	200, 160, 201, 142, 173, 172, 174, 0, 0, 0,
	231, 254, 270, 114, 0, 238, 264, 265, 0, 204,
	115, 134, 128, 199, 132, 175, 111, 144, 228, 152,
	159, 207, 268, 189, 213, 118, 253, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 106, 156,
	267, 205, 131, 255, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 107, 113, 119, 123, 127, 130, 136, 140, 143,
	145, 146, 147, 150, 161, 164, 165, 166, 167, 177,
	178, 179, 181, 184, 185, 186, 187, 188, 191, 193,
	194, 195, 196, 197, 198, 206, 209, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 232, 235,
	241, 242, 252, 259, 262, 138, 249, 263, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 157, 0, 0,
	230, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 59, 0, 0,
	94, 95, 96, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 288, 0, 0, 0, 0, 202, 0,
	234, 139, 154, 112, 151, 98, 108, 0, 137, 180,
	210, 214, 0, 0, 0, 120, 0, 212, 190, 251,
	0, 192, 211, 158, 240, 203, 250, 260, 261, 237,
	258, 266, 227, 101, 236, 248, 117, 222, 0, 0,
	0, 103, 246, 233, 169, 148, 149, 102, 0, 208,
	125, 133, 122, 182, 243, 244, 121, 269, 109, 257,
	105, 110, 256, 176, 239, 247, 170, 163, 104, 245,
	168, 162, 153, 129, 141, 200, 160, 201, 142, 173,
	172, 174, 0, 0, 0, 231, 254, 270, 114, 0,
	238, 264, 265, 0, 204, 115, 134, 128, 199, 132,
	175, 111, 144, 228, 152, 159, 207, 268, 189, 213,
	118, 253, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 106, 156, 267, 205, 131, 255, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 107, 113, 119, 123,
	127, 130, 136, 140, 143, 145, 146, 147, 150, 161,
	164, 165, 166, 167, 177, 178, 179, 181, 184, 185,
	186, 187, 188, 191, 193, 194, 195, 196, 197, 198,
	206, 209, 215, 216, 217, 218, 219, 220, 221, 223,
	224, 225, 226, 232, 235, 241, 242, 252, 259, 262,
	138, 249, 263, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 157, 0, 0, 230, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 95, 96, 0, 1025,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 288, 0,
	0, 0, 0, 202, 0, 234, 139, 154, 112, 151,
	98, 108, 0, 137, 180, 210, 214, 0, 0, 0,
	120, 0, 212, 190, 251, 0, 192, 211, 158, 240,
	203, 250, 260, 261, 237, 258, 266, 227, 101, 236,
	248, 117, 222, 0, 0, 0, 103, 246, 233, 169,
	148, 149, 102, 0, 208, 125, 133, 122, 182, 243,
	244, 121, 269, 109, 257, 105, 110, 256, 176, 239,
	247, 170, 163, 104, 245, 168, 162, 153, 129, 141,
	200, 160, 201, 142, 173, 172, 174, 0, 0, 0,
	231, 254, 270, 114, 0, 238, 264, 265, 0, 204,
	115, 134, 128, 199, 132, 175, 111, 144, 228, 152,
	159, 207, 268, 189, 213, 118, 253, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 106, 156,
	267, 205, 131, 255, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 107, 113, 119, 123, 127, 130, 136, 140, 143,
	145, 146, 147, 150, 161, 164, 165, 166, 167, 177,
	178, 179, 181, 184, 185, 186, 187, 188, 191, 193,
	194, 195, 196, 197, 198, 206, 209, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 232, 235,
	241, 242, 252, 259, 262, 138, 249, 263, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 157, 0, 0,
	230, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 95, 96, 0, 748, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 288, 0, 0, 0, 0, 202, 0,
	234, 139, 154, 112, 151, 98, 108, 0, 137, 180,
	210, 214, 0, 0, 0, 120, 0, 212, 190, 251,
	0, 192, 211, 158, 240, 203, 250, 260, 261, 237,
	258, 266, 227, 101, 236, 248, 117, 222, 0, 0,
	0, 103, 246, 233, 169, 148, 149, 102, 0, 208,
	125, 133, 122, 182, 243, 244, 121, 269, 109, 257,
	105, 110, 256, 176, 239, 247, 170, 163, 104, 245,
	168, 162, 153, 129, 141, 200, 160, 201, 142, 173,
	172, 174, 0, 0, 0, 231, 254, 270, 114, 0,
	238, 264, 265, 0, 204, 115, 134, 128, 199, 132,
	175, 111, 144, 228, 152, 159, 207, 268, 189, 213,
	118, 253, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 106, 156, 267, 205, 131, 255, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 107, 113, 119, 123,
	127, 130, 136, 140, 143, 145, 146, 147, 150, 161,
	164, 165, 166, 167, 177, 178, 179, 181, 184, 185,
	186, 187, 188, 191, 193, 194, 195, 196, 197, 198,
	206, 209, 215, 216, 217, 218, 219, 220, 221, 223,
	224, 225, 226, 232, 235, 241, 242, 252, 259, 262,
	138, 249, 263, 183, 0, 0, 0, 0, 0, 0,
	0, 752, 126, 0, 0, 0, 0, 0, 155, 0,
	0, 0, 157, 0, 0, 230, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 95, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 135, 0, 0, 0, 288, 0,
	0, 0, 0, 202, 0, 234, 139, 154, 112, 151,
	98, 108, 0, 137, 180, 210, 214, 0, 0, 0,
	120, 0, 212, 190, 251, 0, 192, 211, 158, 240,
	203, 250, 260, 261, 237, 258, 266, 227, 101, 236,
	248, 117, 222, 0, 0, 0, 103, 246, 233, 169,
	148, 149, 102, 0, 208, 125, 133, 122, 182, 243,
	244, 121, 269, 109, 257, 105, 110, 256, 176, 239,
	247, 170, 163, 104, 245, 168, 162, 153, 129, 141,
	200, 160, 201, 142, 173, 172, 174, 0, 0, 0,
	231, 254, 270, 114, 0, 238, 264, 265, 0, 204,
	115, 134, 128, 199, 132, 175, 111, 144, 228, 152,
	159, 207, 268, 189, 213, 118, 253, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 106, 156,
	267, 205, 131, 255, 0, 0, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	100, 107, 113, 119, 123, 127, 130, 136, 140, 143,
	145, 146, 147, 150, 161, 164, 165, 166, 167, 177,
	178, 179, 181, 184, 185, 186, 187, 188, 191, 193,
	194, 195, 196, 197, 198, 206, 209, 215, 216, 217,
	218, 219, 220, 221, 223, 224, 225, 226, 232, 235,
	241, 242, 252, 259, 262, 138, 249, 263, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 0,
	0, 0, 0, 155, 0, 0, 0, 157, 0, 0,
	230, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 95, 96, 0, 629, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 135,
	0, 0, 0, 288, 0, 0, 0, 0, 202, 0,
	234, 139, 154, 112, 151, 98, 108, 0, 137, 180,
	210, 214, 0, 0, 0, 120, 0, 212, 190, 251,
	0, 192, 211, 158, 240, 203, 250, 260, 261, 237,
	258, 266, 227, 101, 236, 248, 117, 222, 0, 0,
	0, 103, 246, 233, 169, 148, 149, 102, 0, 208,
	125, 133, 122, 182, 243, 244, 121, 269, 109, 257,
	105, 110, 256, 176, 239, 247, 170, 163, 104, 245,
	168, 162, 153, 129, 141, 200, 160, 201, 142, 173,
	172, 174, 0, 0, 0, 231, 254, 270, 114, 0,
	238, 264, 265, 0, 204, 115, 134, 128, 199, 132,
	175, 111, 144, 228, 152, 159, 207, 268, 189, 213,
	118, 253, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 106, 156, 267, 205, 131, 255, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 99, 100, 107, 113, 119, 123,
	127, 130, 136, 140, 143, 145, 146, 147, 150, 161,
	164, 165, 166, 167, 177, 178, 179, 181, 184, 185,
	186, 187, 188, 191, 193, 194, 195, 196, 197, 198,
	206, 209, 215, 216, 217, 218, 219, 220, 221, 223,
	224, 225, 226, 232, 235, 241, 242, 252, 259, 262,
	138, 249, 263, 422, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 157,
	0, 0, 230, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 95, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 0, 0, 288, 0, 0, 0, 0,
	202, 0, 234, 139, 154, 112, 151, 98, 108, 0,
	137, 180, 210, 214, 0, 0, 0, 120, 0, 212,
	190, 251, 0, 192, 211, 158, 240, 203, 250, 260,
	261, 237, 258, 266, 227, 101, 236, 248, 117, 222,
	0, 0, 0, 103, 246, 233, 169, 148, 149, 102,
	0, 208, 125, 133, 122, 182, 243, 244, 121, 269,
	109, 257, 105, 110, 256, 176, 239, 247, 170, 163,
	104, 245, 168, 162, 153, 129, 141, 200, 160, 201,
	142, 173, 172, 174, 0, 0, 0, 231, 254, 270,
	114, 0, 238, 264, 265, 0, 204, 115, 134, 128,
	199, 132, 175, 111, 144, 228, 152, 159, 207, 268,
	189, 213, 118, 253, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 106, 156, 267, 205, 131,
	255, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 107, 113,
	119, 123, 127, 130, 136, 140, 143, 145, 146, 147,
	150, 161, 164, 165, 166, 167, 177, 178, 179, 181,
	184, 185, 186, 187, 188, 191, 193, 194, 195, 196,
	197, 198, 206, 209, 215, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 232, 235, 241, 242, 252,
	259, 262, 138, 249, 263, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 157, 0, 0, 230, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 95, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 320, 0, 135, 0, 0, 0,
	288, 0, 0, 0, 0, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 0,
	0, 0, 120, 0, 212, 190, 251, 0, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	0, 0, 231, 254, 270, 114, 0, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	106, 156, 267, 205, 131, 255, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 319, 249, 263,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 157,
	0, 0, 230, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 95, 96, 0, 0, 0, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 135, 0, 283, 0, 288, 0, 0, 0, 0,
	202, 0, 234, 139, 154, 112, 151, 98, 108, 0,
	137, 180, 210, 214, 0, 0, 0, 120, 0, 212,
	190, 251, 0, 192, 211, 158, 240, 203, 250, 260,
	261, 237, 258, 266, 227, 101, 236, 248, 117, 222,
	0, 0, 0, 103, 246, 233, 169, 148, 149, 102,
	0, 208, 125, 133, 122, 182, 243, 244, 121, 269,
	109, 257, 105, 110, 256, 176, 239, 247, 170, 163,
	104, 245, 168, 162, 153, 129, 141, 200, 160, 201,
	142, 173, 172, 174, 0, 0, 0, 231, 254, 270,
	114, 0, 238, 264, 265, 0, 204, 115, 134, 128,
	199, 132, 175, 111, 144, 228, 152, 159, 207, 268,
	189, 213, 118, 253, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 106, 156, 267, 205, 131,
	255, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 100, 107, 113,
	119, 123, 127, 130, 136, 140, 143, 145, 146, 147,
	150, 161, 164, 165, 166, 167, 177, 178, 179, 181,
	184, 185, 186, 187, 188, 191, 193, 194, 195, 196,
	197, 198, 206, 209, 215, 216, 217, 218, 219, 220,
	221, 223, 224, 225, 226, 232, 235, 241, 242, 252,
	259, 262, 138, 249, 263, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	155, 0, 0, 0, 157, 0, 0, 230, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 95, 96,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 135, 0, 0, 0,
	288, 0, 0, 0, 0, 202, 0, 234, 139, 154,
	112, 151, 98, 108, 0, 137, 180, 210, 214, 0,
	0, 0, 120, 0, 212, 190, 251, 0, 192, 211,
	158, 240, 203, 250, 260, 261, 237, 258, 266, 227,
	101, 236, 248, 117, 222, 0, 0, 0, 103, 246,
	233, 169, 148, 149, 102, 0, 208, 125, 133, 122,
	182, 243, 244, 121, 269, 109, 257, 105, 110, 256,
	176, 239, 247, 170, 163, 104, 245, 168, 162, 153,
	129, 141, 200, 160, 201, 142, 173, 172, 174, 0,
	0, 0, 231, 254, 270, 114, 0, 238, 264, 265,
	0, 204, 115, 134, 128, 199, 132, 175, 111, 144,
	228, 152, 159, 207, 268, 189, 213, 118, 253, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	106, 156, 267, 205, 131, 255, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 100, 107, 113, 119, 123, 127, 130, 136,
	140, 143, 145, 146, 147, 150, 161, 164, 165, 166,
	167, 177, 178, 179, 181, 184, 185, 186, 187, 188,
	191, 193, 194, 195, 196, 197, 198, 206, 209, 215,
	216, 217, 218, 219, 220, 221, 223, 224, 225, 226,
	232, 235, 241, 242, 252, 259, 262, 138, 249, 263,
}
var yyPact = [...]int{

	2533, -1000, -271, 1054, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 994, 849,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 380, 12341, -19,
	130, 22, 17191, 127, 1545, 17536, -1000, 25, -1000, 18,
	17536, 24, 16846, -1000, -1000, -64, -68, -1000, 10271, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 848, 996, 985,
	1008, 600, 1117, -1000, 8878, 8878, 95, 95, 16501, 7498,
	-1000, -1000, 370, 17536, 117, 17536, -130, 93, 93, 93,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 122, 17536, 592, 592, 200, 503, 17536, 89, 592,
	89, 89, 89, 17536, -1000, 175, -1000, -1000, -1000, 17536,
	592, 943, 324, 86, 4985, -1000, 187, -1000, 4985, 38,
	4985, -44, 1019, 29, -24, -1000, 4985, -1000, -1000, -1000,
	-1000, -1000, -1000, 100, -1000, -1000, 17536, 16149, 132, 247,
	-1000, -1000, -1000, -1000, -1000, -1000, 597, 331, -1000, 10271,
	590, 604, 604, -1000, -1000, 144, -1000, -1000, 11306, 11306,
	11306, 11306, 11306, 11306, 11306, 11306, 11306, 11306, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 604, 171, -1000, 9926, 604, 604, 604, 604,
	604, 604, 604, 604, 10271, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, -1000, -1000, 994, -1000, 849, -1000, -1000, -1000, 951,
	10271, 10271, 994, -1000, 914, 8878, -1000, -1000, 993, -1000,
	-1000, -1000, -1000, 345, 1040, -1000, 11996, 165, 1037, 15804,
	-1000, 14769, 17536, 821, 655, -1000, -1000, 164, 768, 7139,
	-81, -1000, -1000, -1000, 242, 14079, -1000, -1000, -1000, 942,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	722, 17536, -1000, 335, -1000, 592, 4985, 103, 592, 268,
	592, 17536, 17536, 4985, 4985, 4985, 42, 79, 73, 17536,
	498, 763, 99, 17536, 975, 877, 17536, 592, 592, -1000,
	6421, -1000, 4985, 324, -1000, 496, 10271, 4985, 4985, 4985,
	17536, 4985, 4985, -1000, -1000, -1000, 302, -1000, -1000, -1000,
	-1000, 4985, 4985, -1000, 1036, 300, -1000, -1000, -1000, -1000,
	10271, 216, -1000, 868, -1000, 23, -1000, -1000, -1000, -1000,
	-1000, 1054, -1000, -1000, -1000, -120, -1000, -1000, 10271, 10271,
	10271, 10271, 484, 219, 11306, 534, 257, 11306, 11306, 11306,
	11306, 11306, 11306, 11306, 11306, 11306, 11306, 11306, 11306, 11306,
	11306, 11306, 603, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 592, -1000, 1052, 733, 733, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 11651, 7843, 6421, 600, 720,
	994, 8878, 8878, 10271, 10271, 9568, 9223, 8878, 945, 260,
	331, 17536, -1000, -1000, 10961, -1000, -1000, -1000, -1000, -1000,
	504, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 17536, 17536,
	8878, 8878, 8878, 8878, 8878, 985, 600, 993, -1000, 1045,
	204, 656, 755, -1000, 556, 985, 13734, 827, -1000, 993,
	-1000, -1000, -1000, 17536, -1000, -1000, 15459, -1000, -1000, 6062,
	17536, 54, 17536, -1000, 757, 948, -1000, -1000, -1000, 979,
	13044, 13389, 54, 617, 14769, 17536, -1000, -1000, 14769, 17536,
	5703, 6780, -81, -1000, 6780, 697, -1000, -106, -91, 8188,
	184, -1000, -1000, -1000, -1000, 4626, 226, 588, 412, -43,
	-1000, -1000, -1000, 779, -1000, 779, 779, 779, 779, -14,
	-14, -14, -14, -1000, -1000, -1000, -1000, -1000, 838, 837,
	-1000, 779, 779, 779, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 830, 830, 830, 806, 806, 847, -1000, 17536,
	4985, 968, 4985, -1000, 98, -1000, -1000, -1000, 17536, 17536,
	17536, 17536, 17536, 139, -1000, 17536, 17536, 751, -1000, 17536,
	4985, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 331,
	-1000, -1000, -1000, -1000, -1000, -1000, 17536, -1000, -1000, -1000,
	-1000, 17536, 324, 17536, 17536, 331, -1000, 472, 17536, 17536,
	-1000, -1000, -1000, -1000, -1000, 331, 219, 389, 298, -1000,
	-1000, 414, -1000, -1000, 1874, -1000, -1000, -1000, -1000, 534,
	11306, 11306, 11306, 282, 1874, 1713, 1211, 401, 188, 334,
	334, 197, 197, 197, 197, 197, 510, 510, -1000, -1000,
	-1000, 504, -1000, -1000, -1000, 504, 8878, 8878, 734, 604,
	162, -1000, 848, -1000, -1000, 985, 681, 681, 549, 563,
	285, 1034, 681, 281, 1027, 681, 681, 8878, -1000, -1000,
	339, -1000, 10271, 504, -1000, 158, -1000, 352, 724, 709,
	681, 504, 504, 681, 681, 951, -1000, -1000, 864, 10271,
	10271, 10271, -1000, -1000, -1000, 951, 1007, -1000, 927, 919,
	1018, 8878, 14769, 993, -1000, -1000, -1000, 155, 1018, 754,
	604, -1000, 17536, 14769, 14769, 14769, 14769, 14769, -1000, 902,
	901, -1000, 890, 889, 897, 17536, -1000, 695, 600, 13044,
	174, 604, -1000, 15114, -1000, -1000, 1018, 14769, 746, -1000,
	746, -1000, 150, -1000, -1000, 697, -81, -85, -1000, -1000,
	-1000, -1000, 331, -1000, 668, 691, 4267, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 825, 592, -1000, 961, 210, 243,
	592, 956, -1000, -1000, -1000, 947, -1000, 289, -59, -1000,
	-1000, 426, -14, -14, -1000, -1000, 184, 941, 184, 184,
	184, 449, 449, -1000, -1000, -1000, -1000, 398, -1000, -1000,
	-1000, 385, -1000, 867, 17536, 4985, -1000, -1000, -1000, -1000,
	1513, 1513, 235, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 53, 840, -1000, -1000, -1000, -1000,
	21, 36, 97, -1000, 4985, -1000, 300, 300, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 282, 1874,
	1400, -1000, 11306, 11306, -1000, -1000, 681, 681, 8878, 6421,
	994, 951, -1000, -1000, 126, 603, 126, 11306, 11306, -1000,
	11306, 11306, -1000, -142, 662, 258, -1000, 10271, 499, -1000,
	6421, -1000, 11306, 11306, -1000, -1000, -1000, -1000, -1000, -1000,
	910, 331, 331, -1000, -1000, 17536, -1000, -1000, -1000, -1000,
	1016, 10271, -1000, 686, -1000, 5344, 985, 865, 17536, 604,
	1054, 13044, 17536, 750, -1000, 239, 948, 836, 863, 913,
	-1000, -1000, -1000, -1000, 893, -1000, 892, -1000, -1000, -1000,
	-1000, -1000, 600, -1000, 116, 107, 105, 17536, -1000, 994,
	746, -1000, -1000, 203, -1000, -1000, -111, -101, -1000, -1000,
	-1000, 4626, -1000, 4626, 17536, 70, -1000, 592, 592, -1000,
	-1000, -1000, 823, 862, 11306, -1000, -1000, -1000, 586, 184,
	184, -1000, 310, -1000, -1000, -1000, 679, -1000, 667, 673,
	664, 17536, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 17536, -1000, -1000, -1000, -1000, -1000, 17536, -155, 592,
	17536, 17536, 17536, 17536, -1000, 324, 324, -1000, 11306, 1874,
	1874, -1000, -1000, 504, -1000, 985, -1000, 504, 779, 779,
	-1000, 779, 806, -1000, 779, 11, 779, 10, 504, 504,
	1853, 1777, 1698, 1116, 604, -137, -1000, 331, 10271, -1000,
	1662, 765, -1000, -1000, 1011, 997, 331, -1000, -1000, -1000,
	952, 567, 535, -1000, -1000, 8533, 657, 149, 650, -1000,
	994, 17536, 10271, -1000, -1000, 10271, 805, -1000, 10271, -1000,
	-1000, -1000, 994, 604, 604, 604, 650, 985, -1000, -1000,
	-1000, -1000, 4267, -1000, 647, -1000, 779, -1000, -1000, -1000,
	17536, -39, 1044, 1874, -1000, -1000, -1000, -1000, -1000, -14,
	448, -14, 371, -1000, 368, 4985, -1000, -1000, -1000, -1000,
	964, -1000, 6421, -1000, -1000, 770, 841, -1000, -1000, -1000,
	-1000, 1874, -1000, 951, -1000, -1000, 133, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 11306, 11306, 11306, 11306, 11306,
	985, 435, 331, 11306, 11306, -1000, 10271, 10271, 953, -1000,
	604, -1000, 736, 17536, 17536, -1000, 17536, 985, -1000, 331,
	331, 17536, 331, 14424, 17536, 17536, 12686, -1000, 191, 17536,
	-1000, 610, -1000, 222, -1000, -152, 184, -1000, 184, 547,
	530, -1000, 604, 659, -1000, 238, 17536, 17536, -1000, -1000,
	-1000, 352, 352, 352, 352, 72, 504, -1000, 352, 352,
	331, 597, 1043, -1000, 604, 1054, 148, -1000, -1000, -1000,
	591, 578, -1000, 578, 578, 174, 191, -1000, 592, 227,
	433, -1000, 66, 17536, 341, 950, -1000, 949, -1000, -1000,
	-1000, -1000, -1000, 51, 6421, 4626, 571, -1000, -1000, -1000,
	-1000, -1000, 504, 77, -160, -1000, -1000, -1000, 17536, 535,
	17536, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 363, -1000,
	-1000, 17536, -1000, -1000, 432, -1000, -1000, 551, -1000, 17536,
	-1000, -1000, 840, -1000, 909, -146, -167, 511, -1000, -1000,
	737, -1000, -1000, 51, 918, -155, -1000, 908, -1000, 17536,
	-1000, 48, -1000, -156, 537, 41, -161, 859, 604, -177,
	852, -1000, 1023, 10616, -1000, -1000, 1025, 250, 250, 352,
	504, -1000, -1000, -1000, 76, 509, -1000, -1000, -1000, -1000,
	-1000, -1000,
}
var yyPgo = [...]int{

	0, 1340, 1339, 23, 69, 70, 1336, 1335, 1334, 1333,
	99, 96, 95, 1331, 1330, 1323, 1311, 1308, 1307, 1306,
	1305, 1299, 1297, 1296, 1295, 1294, 1293, 1291, 1290, 1289,
	1288, 1287, 1286, 90, 1283, 87, 1279, 1275, 1273, 1269,
	1267, 1266, 1262, 1260, 42, 233, 55, 59, 1257, 56,
	347, 1256, 77, 67, 57, 1255, 37, 1253, 1252, 73,
	1251, 1250, 54, 1243, 1241, 60, 1240, 89, 1239, 13,
	81, 1238, 1237, 1236, 1234, 82, 1412, 1233, 1232, 14,
	1231, 1215, 100, 1214, 66, 26, 15, 12, 27, 1210,
	65, 1209, 6, 1208, 61, 1206, 1201, 1197, 1195, 34,
	1194, 62, 1193, 38, 35, 1192, 7, 75, 30, 21,
	8, 1190, 1189, 19, 72, 50, 74, 1184, 1183, 446,
	1182, 1180, 1179, 47, 1178, 1177, 1176, 31, 1173, 98,
	405, 1172, 1169, 1168, 1163, 58, 848, 1890, 17, 78,
	1159, 1158, 1157, 2800, 40, 52, 18, 1154, 1152, 1148,
	33, 516, 44, 369, 1146, 41, 1145, 1144, 1142, 1141,
	1140, 1137, 1135, 22, 1134, 1130, 1122, 29, 20, 1120,
	1117, 68, 25, 1113, 1111, 1107, 48, 71, 1106, 1104,
	64, 1098, 1094, 28, 1093, 1088, 1086, 1085, 1084, 32,
	10, 1082, 16, 1081, 11, 1079, 36, 1078, 4, 1077,
	9, 1075, 3, 0, 1073, 5, 49, 2, 1072, 1,
	1068, 1067, 1530, 1477, 76, 1066, 92,
}
var yyR1 = [...]int{

	0, 210, 211, 211, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	203, 203, 203, 21, 3, 3, 3, 3, 2, 2,
	8, 9, 4, 5, 5, 10, 10, 36, 36, 11,
	12, 12, 12, 12, 214, 214, 59, 59, 60, 60,
	107, 107, 13, 14, 14, 116, 116, 115, 115, 115,
	117, 117, 117, 117, 153, 153, 15, 15, 15, 15,
	15, 15, 15, 205, 205, 204, 202, 202, 201, 201,
	200, 22, 185, 187, 187, 186, 186, 186, 186, 177,
	156, 156, 156, 156, 159, 159, 157, 157, 157, 157,
	157, 157, 157, 157, 157, 158, 158, 158, 158, 158,
	160, 160, 160, 160, 160, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	162, 162, 162, 162, 162, 162, 162, 162, 176, 176,
	163, 163, 171, 171, 172, 172, 172, 169, 169, 170,
	170, 173, 173, 173, 165, 165, 166, 166, 174, 174,
	167, 167, 167, 168, 168, 168, 175, 175, 175, 175,
	175, 164, 164, 178, 178, 195, 195, 194, 194, 194,
	184, 184, 191, 191, 191, 191, 191, 181, 181, 181,
	182, 182, 180, 180, 183, 183, 193, 193, 192, 179,
	179, 196, 196, 196, 196, 208, 209, 207, 207, 207,
	207, 207, 188, 188, 188, 189, 189, 189, 190, 190,
	190, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 199, 197, 197, 198, 198, 17, 23, 23,
	18, 18, 18, 18, 18, 19, 19, 24, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 124, 124, 126, 126, 122,
	122, 125, 125, 123, 123, 123, 127, 127, 127, 128,
	128, 154, 154, 154, 26, 26, 28, 28, 29, 30,
	30, 148, 148, 149, 149, 31, 32, 37, 37, 37,
	37, 37, 37, 39, 39, 39, 7, 7, 7, 7,
	38, 38, 38, 6, 6, 27, 27, 27, 27, 20,
	215, 33, 34, 34, 35, 35, 35, 41, 41, 41,
	40, 40, 40, 46, 46, 48, 48, 48, 48, 48,
	49, 49, 49, 49, 49, 49, 45, 45, 47, 47,
	47, 47, 140, 140, 140, 139, 139, 51, 51, 52,
	52, 53, 53, 54, 54, 54, 91, 68, 68, 106,
	106, 108, 108, 55, 55, 55, 55, 56, 56, 57,
	57, 58, 58, 147, 147, 146, 146, 146, 145, 145,
	61, 61, 61, 63, 62, 62, 62, 62, 64, 64,
	66, 66, 65, 65, 67, 69, 69, 69, 69, 69,
	70, 70, 50, 50, 50, 50, 50, 50, 50, 50,
	120, 120, 72, 72, 71, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 83, 83, 83, 83, 83, 83,
	73, 73, 73, 73, 73, 73, 73, 44, 44, 84,
	84, 84, 90, 85, 85, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 76,
	76, 76, 76, 76, 76, 76, 76, 76, 76, 80,
	80, 80, 80, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 216, 216, 82, 81, 81, 81, 81, 81,
	81, 81, 42, 42, 42, 42, 42, 152, 152, 155,
	155, 155, 155, 155, 155, 155, 155, 155, 155, 155,
	155, 155, 95, 95, 43, 43, 93, 93, 94, 96,
	96, 92, 92, 92, 75, 75, 75, 75, 75, 75,
	75, 75, 77, 77, 77, 97, 97, 98, 98, 99,
	99, 100, 100, 101, 102, 102, 102, 103, 103, 103,
	103, 104, 104, 104, 74, 74, 74, 74, 105, 105,
	105, 105, 109, 109, 86, 86, 88, 88, 87, 89,
	110, 110, 113, 111, 111, 114, 114, 114, 114, 114,
	112, 112, 112, 142, 142, 142, 118, 118, 129, 129,
	130, 130, 119, 119, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 121, 121, 121, 132, 132, 132,
	133, 133, 134, 134, 134, 141, 141, 137, 137, 138,
	138, 143, 143, 144, 144, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 135, 135, 135, 135, 135, 135,
	135, 135, 135, 135, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 136,
	136, 136, 136, 136, 136, 136, 136, 136, 136, 212,
	213, 150, 151, 151, 151,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 2, 4, 6, 6, 7, 4, 6,
	5, 7, 8, 1, 3, 7, 8, 1, 1, 9,
	8, 7, 6, 6, 1, 1, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 8, 4,
	6, 5, 5, 0, 2, 1, 0, 2, 1, 3,
	3, 4, 4, 2, 4, 1, 3, 3, 3, 8,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 1, 4, 4, 2, 2, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 6, 6,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 0,
	1, 0, 1, 2, 0, 2, 0, 3, 0, 1,
	0, 3, 3, 0, 2, 2, 0, 2, 1, 2,
	1, 0, 2, 5, 4, 1, 2, 2, 3, 2,
	0, 1, 2, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 2, 3,
	1, 10, 11, 11, 12, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 6, 7, 7, 7, 7, 4, 5, 4, 4,
	7, 5, 5, 5, 12, 7, 5, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 5, 4, 4, 3, 2, 3, 4, 4,
	3, 4, 4, 4, 4, 4, 4, 3, 2, 7,
	2, 3, 4, 3, 7, 5, 4, 2, 4, 4,
	3, 3, 5, 2, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 3, 2,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 2, 1,
	3, 1, 1, 1, 3, 3, 3, 3, 7, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 2,
	3, 3, 1, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 0, 1, 0, 2, 1, 2, 4, 0,
	2, 1, 3, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 0, 3, 0, 2, 0,
	3, 1, 3, 2, 0, 1, 1, 0, 2, 4,
	4, 0, 2, 4, 2, 1, 5, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 2, 3, 0, 1, 1,
	1, 1, 0, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -210, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -24, -25, -26, -28,
	-29, -30, -31, -32, -6, -27, -20, -21, -4, -212,
	6, 7, 8, -36, 10, 11, 31, -22, 124, 125,
	127, 126, 160, 128, 153, 54, 174, 175, 177, 178,
	179, 180, -39, 158, 159, 32, 33, 130, 35, 58,
	9, 263, 155, 154, 26, -211, 365, -35, 5, -99,
	16, -3, -33, -215, -33, -33, -33, -33, -33, -33,
	-185, -187, 58, 97, -134, 134, 78, 255, 131, 132,
	138, -137, -203, -136, 61, 62, 63, 273, 146, 305,
	306, 174, 188, 182, 209, 201, 274, 307, 147, 199,
	202, 242, 144, 308, 229, 236, 72, 177, 251, 309,
	156, 197, 193, 310, 282, 191, 28, 311, 238, 214,
	312, 278, 240, 192, 237, 130, 313, 149, 361, 142,
	314, 215, 219, 315, 243, 316, 317, 318, 186, 187,
	319, 145, 245, 213, 143, 34, 275, 38, 164, 246,
	217, 320, 212, 208, 321, 322, 323, 324, 211, 185,
	207, 42, 221, 220, 222, 241, 204, 325, 326, 327,
	150, 328, 194, 19, 329, 330, 331, 332, 333, 249,
	159, 334, 162, 335, 336, 337, 338, 339, 340, 239,
	216, 218, 139, 166, 235, 277, 341, 247, 190, 342,
	151, 163, 158, 250, 152, 343, 344, 345, 346, 347,
	348, 349, 178, 350, 351, 352, 353, 173, 244, 253,
	41, 226, 354, 184, 141, 355, 175, 170, 231, 205,
	165, 356, 357, 195, 196, 210, 183, 206, 176, 362,
	167, 160, 358, 252, 227, 279, 203, 200, 171, 359,
	168, 169, 360, 363, 232, 233, 172, 276, 248, 198,
	228, -121, 134, 255, 131, 233, 276, 132, 132, 133,
	134, 255, 131, 132, -65, -143, -203, -136, 134, 132,
	115, 202, 242, 124, 230, 238, -126, 239, 166, -154,
	132, -122, 229, 232, 233, 172, -203, 240, 244, 243,
	234, -143, 176, -148, 181, -137, 179, -65, -37, 361,
	128, -150, -150, 231, 231, -150, -85, -50, -71, 81,
	-76, 30, 24, -75, -72, -92, -89, -90, 115, 116,
	118, 117, 119, 104, 105, 112, 82, 120, -80, -78,
	-79, -81, 65, 64, 73, 66, 67, 68, 69, 74,
	75, 76, -137, -143, -87, -212, 48, 49, 264, 265,
	266, 267, 272, 268, 84, 37, 254, 262, 261, 260,
	258, 259, 256, 257, 270, 271, 137, 255, 131, 110,
	263, -203, -136, -5, -4, -212, 6, 21, 22, -103,
	18, 17, -213, 60, -41, -48, 43, 44, -49, 22,
	36, 47, 45, -34, -47, 106, -50, -143, -47, -119,
	136, -119, 12, -59, -60, -65, -67, -143, -111, -153,
	176, -114, 244, 243, -138, -112, -137, -135, 242, 202,
	241, 129, 280, 80, 23, 25, 224, 83, 115, 17,
	84, 114, 264, 124, 52, 281, 256, 257, 254, 266,
	267, 255, 230, 30, 11, 283, 26, 154, 22, 36,
	108, 126, 87, 88, 157, 24, 155, 76, 286, 20,
	55, 12, 14, 287, 288, 15, 137, 136, 99, 133,
	50, 9, 120, 27, 96, 46, 289, 29, 290, 291,
	292, 293, 48, 97, 18, 258, 259, 32, 294, 272,
	161, 110, 53, 39, 81, 295, 296, 74, 297, 77,
	56, 78, 16, 51, 298, 299, 300, 301, 98, 127,
	263, 49, 302, 131, 6, 269, 31, 153, 47, 303,
	132, 86, 270, 271, 135, 75, 5, 138, 33, 10,
	54, 57, 260, 261, 262, 37, 85, 13, 304, 79,
	-186, 97, -177, -203, -65, 133, -65, 263, -130, 137,
	-130, -130, 132, -65, -203, -203, 124, 126, 129, 56,
	65, -23, -65, -129, 137, -203, -129, -129, -129, -65,
	121, -65, -203, 31, -127, 97, 13, 255, -203, 166,
	132, 167, 134, -151, -212, -138, -181, 133, 34, 145,
	-151, 170, 171, -151, -125, -124, 236, 237, 231, 235,
	13, 171, 231, 169, -151, 135, -137, -38, -137, 65,
	-7, -3, -11, -10, -12, 89, -150, -150, 59, 80,
	78, 79, 96, -50, -73, 99, 81, 97, 98, 83,
	101, 100, 111, 104, 105, 106, 107, 108, 109, 110,
	102, 103, 114, 89, 90, 91, 92, 93, 94, 95,
	-120, -212, -90, -212, 122, 123, -76, -76, -76, -76,
	-76, -76, -76, -76, -76, -76, -212, 121, -2, -85,
	-4, -212, -212, -212, -212, -212, -212, -212, -212, -95,
	-50, -212, -216, -82, -212, -216, -82, -216, -82, -216,
	-212, -216, -82, -216, -82, -216, -216, -82, -212, -212,
	-212, -212, -212, -212, -212, -99, -3, -33, -104, 20,
	32, -50, -100, -101, -50, -99, 39, -45, -47, -49,
	43, 44, 71, 12, -140, -139, 23, -137, 65, 121,
	12, -66, 27, -65, -52, -53, -54, -55, -68, -91,
	-212, -65, -65, -59, -214, 59, 12, 57, -214, 59,
	121, 59, 176, -114, -153, -116, -115, 245, 247, 89,
	-142, -137, 65, 30, 31, 60, 59, -65, -156, -159,
	-161, -160, -162, -157, -158, 199, 200, 115, 203, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 31,
	156, 195, 196, 197, 198, 215, 216, 217, 218, 219,
	220, 221, 222, 182, 201, 274, 183, 184, 185, 186,
	187, 188, 190, 191, 192, 193, 194, -203, -151, 134,
	-203, 81, -203, -65, -65, -151, -151, -151, 168, 168,
	132, 132, 173, -65, 65, 59, 135, -59, 24, 56,
	-65, -203, -203, -144, -143, -135, -151, -127, 65, -50,
	-151, -151, -151, -65, -151, -151, -182, 12, 99, -151,
	-151, 12, -123, 12, 99, -50, -128, 97, 56, -149,
	179, 213, 362, 363, 364, -50, -50, -50, -50, -83,
	74, 81, 75, 76, -76, -84, -87, -90, 70, 99,
	97, 98, 83, -76, -76, -76, -76, -76, -76, -76,
	-76, -76, -76, -76, -76, -76, -76, -76, -152, -203,
	65, -203, -75, -75, -137, -46, 22, 36, -45, -138,
	-144, -135, -35, -213, -213, -99, -45, -45, -50, -50,
	-92, 65, -45, -92, 65, -45, -45, -40, 22, 36,
	-93, -94, 85, -92, -137, -143, -213, -76, -137, -137,
	-45, -46, -46, -45, -45, -103, -213, 10, 99, 59,
	19, 59, -102, 25, 26, -103, -77, -137, 66, 69,
	-51, 59, 12, -49, -65, -139, 106, -144, -65, -107,
	162, -65, 31, 59, -61, -63, -62, -64, 46, 50,
	52, 47, 48, 49, 53, -147, 23, -52, -3, -212,
	-146, 162, -145, 23, -143, 65, -107, 57, -52, -65,
	-52, -67, -143, 106, -114, -116, 59, 246, 248, 249,
	56, 77, -50, -168, 114, -188, -189, -190, -138, 65,
	66, -177, -178, -179, -191, 148, -196, 139, 141, 138,
	-180, 149, 133, 29, 60, -173, 74, 81, -169, 227,
	-163, 58, -163, -163, -163, -163, -167, 202, -167, -167,
	-167, 58, 58, -163, -163, -163, -171, 58, -171, -171,
	-172, 58, -172, -141, 57, -65, -151, 24, -151, -131,
	129, 126, 127, -199, 125, 224, 202, 72, 30, 16,
	264, 162, 279, -203, 163, -65, -65, -65, -65, -65,
	129, 126, -65, -65, -65, -151, -65, -65, -127, -143,
	-143, 65, -65, -137, 74, 75, 76, -84, -76, -76,
	-76, -44, 157, 80, -213, -213, -45, -45, -212, 121,
	-5, -103, -213, -213, 59, 57, 23, 12, 12, -213,
	12, 12, -213, -213, -45, -96, -94, 87, -50, -213,
	121, -213, 59, 59, -213, -213, -213, -213, -213, -104,
	41, -50, -50, -101, -104, -118, 20, 12, 37, 37,
	-70, 13, -47, -52, -49, 121, -70, -74, 31, 37,
	-3, -212, -212, -110, -113, -92, -53, -54, -54, -53,
	-54, 46, 46, 46, 51, 46, 51, 46, -62, -143,
	-213, -213, -3, -69, 54, 136, 55, -212, -145, -70,
	-52, -70, -70, 121, -115, -117, 250, 247, 253, -203,
	65, 59, -190, 89, 58, -203, 29, -180, -180, -183,
	-203, -183, 29, -165, 30, 74, -170, 228, 66, -167,
	-167, -168, 31, -168, -168, -168, -176, 65, -176, 66,
	66, 56, -137, -151, -150, -206, 144, 140, 148, 149,
	142, 61, 62, 63, 133, 29, 139, 141, 162, 138,
	-206, -132, -133, 135, 23, 133, 29, 162, -205, 57,
	168, 224, 168, 135, -151, -123, -123, -44, 80, -76,
	-76, -213, -213, -46, -138, -99, -104, -155, 115, 199,
	156, 197, 193, 213, 204, 226, 195, 227, -152, -155,
	-76, -76, -76, -76, 273, -99, 88, -50, 86, -138,
	-76, -76, 42, -65, -97, 14, -50, 106, -103, -109,
	56, -110, -86, -88, -87, -212, -105, -137, -108, -137,
	-70, 59, 89, -57, -56, 56, 57, -58, 56, -56,
	46, 46, -213, 133, 133, 133, -108, -99, -70, 247,
	251, 252, -189, -190, -193, -192, -137, -196, -183, -183,
	58, -166, 56, -76, 60, -168, -168, -203, 115, 60,
	59, 60, 59, 60, 59, -65, -150, -150, -65, -150,
	-137, -202, 276, -204, -203, -137, -137, -137, -65, -127,
	-127, -76, -213, -103, -213, -163, -163, -163, -172, -163,
	187, -163, 187, -213, -213, 20, 20, 20, 20, -212,
	-43, 269, -50, 59, 59, -98, 15, 17, 28, -109,
	59, -213, -213, 59, 121, -213, 59, -99, -113, -50,
	-50, 58, -50, -212, -212, -212, -213, -103, 60, 59,
	-163, -106, -137, -174, 224, 10, -167, 65, -167, 66,
	66, -151, 27, -201, -200, -138, 58, 57, -104, -167,
	-203, -76, -76, -76, -76, -76, -103, 65, -76, -76,
	-50, -85, 29, -88, 37, -3, -137, -137, -137, -103,
	-106, -106, -213, -106, -106, -146, -195, -194, 57, 143,
	72, -192, 60, 59, -175, 139, 29, 138, -79, -168,
	-168, 60, 60, -212, 59, 89, -106, -65, -213, -213,
	-213, -213, -42, 99, 276, -213, -213, -213, 10, -86,
	121, 60, -213, -213, -213, -69, -194, -203, -184, 89,
	65, 151, -137, -164, 72, 29, 29, -197, -198, 162,
	-200, -190, 60, -213, 274, 53, 277, -110, -137, 66,
	-65, 65, -213, 59, -137, -205, 42, 275, 278, 58,
	-198, 37, -202, 42, -106, 164, 276, 60, 165, 277,
	-208, -209, 56, -212, 278, -209, 56, 11, 10, -76,
	161, -207, 152, 147, 150, 31, -207, -213, -213, 146,
	30, 74,
}
var yyDef = [...]int{

	29, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 619, 0,
	360, 360, 360, 360, 360, 360, 360, 0, 692, 684,
	0, 0, 0, 0, -2, 325, 326, 0, 328, -2,
	0, 0, 337, 1001, 1001, 0, 0, 1001, 0, 999,
	47, 48, 343, 344, 345, 1, 3, 0, 364, 627,
	0, 0, -2, 362, 0, 0, 672, 672, 0, 0,
	76, 77, 0, 0, 0, 987, 0, 670, 670, 670,
	693, 694, 697, 698, 30, 31, 32, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, 841, 842, 843, 844, 845, 846,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 859, 860, 861, 862, 863, 864, 865, 866,
	867, 868, 869, 870, 871, 872, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 883, 884, 885, 886,
	887, 888, 889, 890, 891, 892, 893, 894, 895, 896,
	897, 898, 899, 900, 901, 902, 903, 904, 905, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 916,
	917, 918, 919, 920, 921, 922, 923, 924, 925, 926,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	988, 989, 990, 991, 992, 993, 994, 995, 996, 997,
	998, 0, 0, 0, 0, 0, 0, 0, 668, 0,
	668, 668, 668, 0, 276, 442, 701, 702, 987, 0,
	0, 0, 316, 0, 1002, 288, 0, 290, 1002, 0,
	1002, 0, 297, 0, 0, 303, 1002, 308, 322, 323,
	310, 324, 327, 0, 332, 335, 0, 350, 0, 865,
	342, 355, 356, 1001, 1001, 359, 33, 493, 452, 0,
	458, 460, 0, 495, 496, 497, 498, 499, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 525, 526,
	527, 528, 604, 605, 606, 607, 608, 609, 610, 611,
	462, 463, 601, 0, 649, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 592, 0, 562, 562, 562, 562,
	562, 562, 562, 562, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 619, 43, 0, 360, 365, 366, 631,
	0, 0, 619, 1000, 0, 0, -2, -2, 376, 382,
	383, 384, 385, 361, 0, 388, 392, 0, 0, 0,
	673, 0, 0, 0, 0, 56, 58, 442, 62, 0,
	975, 653, -2, -2, 0, 0, 699, 700, -2, 837,
	-2, 705, 706, 707, 708, 709, 710, 711, 712, 713,
	714, 715, 716, 717, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 727, 728, 729, 730, 731, 732, 733,
	734, 735, 736, 737, 738, 739, 740, 741, 742, 743,
	744, 745, 746, 747, 748, 749, 750, 751, 752, 753,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	764, 765, 766, 767, 768, 769, 770, 771, 772, 773,
	774, 775, 776, 777, 778, 779, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	0, 0, 95, 0, 93, 0, 1002, 0, 0, 0,
	0, 0, 0, 1002, 1002, 1002, 0, 0, 0, 0,
	685, 267, 0, 0, 0, 0, 0, 0, 0, 275,
	0, 277, 1002, 316, 280, 0, 0, 1002, 1002, 1002,
	0, 1002, 1002, 287, 1003, 1004, 0, 197, 198, 199,
	291, 1002, 1002, 293, 0, 313, 311, 312, 305, 306,
	0, 319, 300, 301, 304, 333, 336, 353, 351, 352,
	354, 346, 347, 348, 349, 0, 357, 358, 0, 0,
	0, 0, 0, 456, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 481, 482, 483, 484, 485, 486,
	459, 0, 473, 0, 0, 0, 515, 516, 517, 518,
	519, 520, 521, 522, 523, 0, 373, 0, 0, 0,
	619, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	593, 0, 546, 554, 0, 547, 555, 548, 556, 549,
	0, 550, 557, 551, 558, 552, 553, 559, 0, 0,
	0, 373, 373, 0, 0, 627, 0, 375, 34, 0,
	0, 628, 620, 621, 624, 627, 0, 397, 386, 377,
	380, 381, 363, 0, 389, 393, 0, 395, 396, 0,
	0, 60, 0, 441, 0, 399, 401, 402, 403, 423,
	0, 425, -2, 0, 0, 0, 54, 55, 0, 0,
	0, 0, 975, 659, 0, 64, 65, 0, 0, 0,
	173, 663, 664, 665, 661, 222, 0, 0, 161, 157,
	101, 102, 103, 150, 105, 150, 150, 150, 150, 170,
	170, 170, 170, 133, 134, 135, 136, 137, 0, 0,
	120, 150, 150, 150, 124, 140, 141, 142, 143, 144,
	145, 146, 147, 106, 107, 108, 109, 110, 111, 112,
	113, 114, 152, 152, 152, 154, 154, 695, 79, 0,
	1002, 0, 1002, 91, 0, 236, 238, 239, 0, 0,
	0, 0, 0, 0, 686, 0, 0, 270, 669, 0,
	1002, 273, 274, 443, 703, 704, 278, 279, 317, 318,
	281, 282, 283, 284, 285, 286, 0, 200, 201, 292,
	296, 0, 316, 0, 0, 298, 299, 0, 0, 0,
	334, 338, 339, 340, 341, 494, 453, 454, 455, 457,
	474, 0, 476, 478, 464, 465, 489, 490, 491, 0,
	0, 0, 0, 487, 469, 0, 500, 501, 502, 503,
	504, 505, 506, 507, 508, 509, 510, 511, 514, 577,
	578, 0, 512, 513, 524, 0, 0, 0, 374, 602,
	0, -2, 0, 492, 648, 627, 0, 0, 0, 0,
	497, 604, 0, 497, 604, 0, 0, 0, 371, 372,
	599, 596, 0, 0, 601, 0, 563, 0, 0, 0,
	0, 0, 0, 0, 0, 631, 44, 632, 0, 0,
	0, 0, 623, 625, 626, 631, 0, 612, 0, 0,
	450, 0, 0, 378, 40, 394, 390, 0, 450, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 430, 0,
	0, 433, 0, 0, 0, 0, 424, 0, 0, 0,
	445, 919, 426, 0, 428, 429, 450, 0, 450, 57,
	450, 59, 0, 444, 654, 63, 0, 0, 68, 69,
	655, 656, 657, 658, 0, 92, 223, 225, 228, 229,
	230, 96, 97, 98, 0, 0, 210, 0, 0, 204,
	204, 0, 202, 203, 94, 164, 162, 0, 159, 158,
	104, 0, 170, 170, 127, 128, 173, 0, 173, 173,
	173, 0, 0, 121, 122, 123, 115, 0, 116, 117,
	118, 0, 119, 0, 0, 1002, 81, 671, 82, 1001,
	0, 0, 687, 237, 674, 675, 676, 677, 678, 679,
	680, 681, 682, 683, 0, 83, 241, 243, 242, 246,
	0, 0, 0, 268, 1002, 272, 313, 313, 295, 314,
	315, 320, 302, 330, 475, 477, 479, 466, 487, 470,
	0, 467, 0, 0, 461, 529, 0, 0, 373, 0,
	619, 631, 533, 534, 0, 0, 0, 0, 0, 570,
	0, 0, 571, 0, 619, 0, 597, 0, 0, 545,
	0, 564, 0, 0, 565, 566, 567, 568, 569, 36,
	0, 629, 630, 622, 35, 0, 666, 667, 613, 614,
	615, 0, 387, 398, 379, 0, 627, 642, 0, 0,
	635, 0, 0, 450, 650, 0, 400, 419, 421, 0,
	416, 431, 432, 434, 0, 436, 0, 438, 439, 404,
	405, 406, 0, 407, 0, 0, 0, 0, 427, 619,
	450, 52, 53, 0, 66, 67, 0, 0, 73, 174,
	175, 0, 226, 0, 0, 0, 192, 204, 204, 195,
	205, 196, 0, 166, 0, 163, 100, 160, 0, 173,
	173, 129, 0, 130, 131, 132, 0, 148, 0, 0,
	0, 0, 696, 80, 231, 1001, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	1001, 0, 1001, 688, 689, 690, 691, 0, 86, 0,
	0, 0, 0, 0, 271, 316, 316, 468, 0, 488,
	471, 530, 531, 0, 603, 627, 38, 0, 150, 150,
	582, 150, 154, 585, 150, 587, 150, 590, 0, 0,
	0, 0, 0, 0, 0, 594, 544, 600, 0, 602,
	0, 0, 633, 37, 617, 0, 451, 391, 41, 45,
	0, 642, 634, 644, 646, 0, 0, 638, 0, 411,
	619, 0, 0, 413, 420, 0, 0, 414, 0, 415,
	435, 437, -2, 0, 0, 0, 0, 627, 51, 70,
	71, 72, 224, 227, 0, 206, 150, 209, 193, 194,
	0, 168, 0, 165, 151, 125, 126, 171, 172, 170,
	0, 170, 0, 155, 0, 1002, 232, 233, 234, 235,
	0, 240, 0, 84, 85, 0, 0, 245, 269, 289,
	294, 472, 532, 631, 535, 579, 170, 583, 584, 586,
	588, 589, 591, 537, 536, 0, 0, 0, 0, 0,
	627, 0, 598, 0, 0, 42, 0, 0, 0, 46,
	0, 647, 0, 0, 0, 61, 0, 627, 651, 652,
	417, 0, 422, 0, 0, 0, 425, 50, 184, 0,
	208, 0, 409, 176, 169, 0, 173, 149, 173, 0,
	0, 78, 0, 87, 88, 0, 0, 0, 39, 580,
	581, 0, 0, 0, 0, 572, 0, 595, 0, 0,
	618, 616, 0, 645, 0, 637, 640, 639, 412, 49,
	0, 0, 447, 0, 0, 445, 183, 185, 0, 190,
	0, 207, 0, 0, 181, 0, 178, 180, 167, 138,
	139, 153, 156, 0, 0, 0, 0, 247, 538, 540,
	539, 541, 0, 0, 0, 543, 560, 561, 0, 636,
	0, 418, 446, 448, 449, 408, 186, 187, 0, 191,
	189, 0, 410, 99, 0, 177, 179, 0, 263, 0,
	89, 90, 83, 542, 0, 0, 0, 643, 641, 188,
	0, 182, 262, 0, 0, 86, 573, 0, 576, 0,
	264, 0, 244, 574, 0, 0, 0, 211, 0, 0,
	212, 213, 0, 0, 575, 214, 0, 0, 0, 0,
	0, 215, 217, 218, 0, 0, 216, 265, 266, 219,
	220, 221,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 82, 3, 3, 3, 109, 101, 3,
	58, 60, 106, 104, 59, 105, 121, 107, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 365,
	90, 89, 91, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 111, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 100, 3, 112,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
	86, 87, 88, 92, 93, 94, 95, 96, 97, 98,
	99, 102, 103, 108, 110, 113, 114, 115, 116, 117,
	118, 119, 120, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:339
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:344
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:345
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:349
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 29:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:377
		{
			setParseTree(yylex, nil)
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:383
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:387
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:391
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 33:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:397
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 34:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:403
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 35:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:411
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 36:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:415
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:419
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 38:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:442
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:450
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].str, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].str)
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:456
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:462
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereStr, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:470
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereStr, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingStr, yyDollar[8].expr))
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:476
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:480
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:487
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:499
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			yyVAL.str = InsertStr
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:515
		{
			yyVAL.str = ReplaceStr
		}
	case 49:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:521
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:527
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 52:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:535
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 53:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:539
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:545
		{
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:549
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:553
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:559
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:563
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 60:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:568
		{
			yyVAL.partitions = nil
		}
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:572
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:578
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 63:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:584
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 64:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:588
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:594
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:598
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:608
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:612
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:618
		{
			yyVAL.str = RepeatableRead
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:622
		{
			yyVAL.str = ReadCommitted
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:626
		{
			yyVAL.str = ReadUncommitted
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.str = Serializable
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.str = SessionStr
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:640
		{
			yyVAL.str = GlobalStr
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:646
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:651
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 78:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:657
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 79:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:662
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:666
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 81:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:670
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 83:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:679
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:689
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:694
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:705
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:716
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 91:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:722
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:729
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:736
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:740
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:746
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:755
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:759
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 99:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:765
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:776
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:787
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:792
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:818
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:830
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:836
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:842
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:848
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:854
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:860
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:868
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:872
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 126:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:914
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:918
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 139:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:947
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:957
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:961
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:977
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:981
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:997
		{
			yyVAL.literal = nil
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1001
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 152:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1006
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 153:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1010
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 154:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1018
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 156:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1028
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1036
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1040
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1045
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1049
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1055
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1059
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1068
		{
			yyVAL.optVal = nil
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1077
		{
			yyVAL.optVal = nil
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1081
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1086
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1095
		{
			yyVAL.str = ""
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1099
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1103
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1108
		{
			yyVAL.str = ""
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1112
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1121
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1125
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.colKeyOpt = colKey
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1133
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1137
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1142
		{
			yyVAL.literal = nil
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1152
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 184:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1156
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1162
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1166
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1176
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1187
		{
			yyVAL.str = ""
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1201
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1205
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1209
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1213
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1219
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1223
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1227
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1244
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.str = ""
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1267
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1273
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal}
		}
	case 209:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 211:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1290
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 212:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1294
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 213:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1298
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 214:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1302
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1308
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1320
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1324
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1328
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 222:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1341
		{
			yyVAL.str = ""
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1345
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1357
		{
			yyVAL.str = yyDollar[1].str
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1371
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1379
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1385
		{
			yyVAL.statement = &DDL{Action: AlterStr, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1389
		{
			yyVAL.statement = &DDL{Action: AlterStr, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 233:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1393
		{
			yyVAL.statement = &DDL{Action: AlterStr, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 234:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1397
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 235:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1402
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 236:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1407
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1411
		{
			yyVAL.statement = &DDL{Action: AlterStr, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 238:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1415
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1419
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 240:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1423
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 241:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1435
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 242:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1445
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1449
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 244:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1453
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1466
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 246:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1476
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 247:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1480
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1509
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1519
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 265:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1525
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 266:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1529
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1535
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1541
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 269:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1545
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1553
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1561
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1566
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1574
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1584
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1588
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1593
		{
			yyVAL.statement = &OtherRead{}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1599
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1604
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1609
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1614
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1619
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1623
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1627
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1631
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1635
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1639
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1643
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1647
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1652
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1660
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1664
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1668
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 295:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1673
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1683
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1687
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1691
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1695
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1708
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1712
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].colIdent.String())}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = ""
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = "extended "
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1752
		{
			yyVAL.str = ""
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1756
		{
			yyVAL.str = "full "
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1762
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1772
		{
			yyVAL.str = ""
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1776
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1780
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1786
		{
			yyVAL.showFilter = nil
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1800
		{
			yyVAL.showFilter = nil
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1804
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = SessionStr
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = GlobalStr
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1824
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Begin{}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Begin{}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1844
		{
			yyVAL.statement = &Commit{}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1850
		{
			yyVAL.statement = &Rollback{}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1854
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1859
		{
			yyVAL.empty = struct{}{}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.empty = struct{}{}
		}
	case 333:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1864
		{
			yyVAL.empty = struct{}{}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.empty = struct{}{}
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1882
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = JSONStr
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = TreeStr
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = VitessStr
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1898
		{
			yyVAL.str = TraditionalStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.str = AnalyzeStr
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1922
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1930
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1947
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &OtherRead{}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].str, Statement: yyDollar[3].statement}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1963
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1967
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1985
		{
			setAllowComments(yylex, true)
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1989
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1995
		{
			yyVAL.bytes2 = nil
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1999
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2005
		{
			yyVAL.str = UnionStr
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2009
		{
			yyVAL.str = UnionAllStr
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = UnionDistinctStr
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2018
		{
			yyVAL.str = ""
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = SQLCacheStr
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = ""
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = DistinctStr
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.str = DistinctStr
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2044
		{
			yyVAL.selectExprs = nil
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2053
		{
			yyVAL.strs = nil
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2061
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2069
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2075
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.str = SQLCacheStr
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.str = DistinctStr
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = DistinctStr
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = StraightJoinHint
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2105
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2119
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2123
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2132
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2136
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2148
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2152
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2162
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2176
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2180
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2186
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2196
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2202
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2206
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2212
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2216
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2229
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2233
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2237
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2247
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 418:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2249
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2253
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2261
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2264
		{
			yyVAL.empty = struct{}{}
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.empty = struct{}{}
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2269
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2277
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2284
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.str = JoinStr
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2294
		{
			yyVAL.str = JoinStr
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2298
		{
			yyVAL.str = JoinStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = StraightJoinStr
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2310
		{
			yyVAL.str = LeftJoinStr
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2314
		{
			yyVAL.str = LeftJoinStr
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2318
		{
			yyVAL.str = RightJoinStr
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.str = RightJoinStr
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.str = NaturalJoinStr
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2342
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2352
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2356
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2362
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2367
		{
			yyVAL.indexHints = nil
		}
	case 446:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2371
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2379
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2383
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2388
		{
			yyVAL.expr = nil
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2398
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2406
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2410
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2414
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2418
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2426
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2432
		{
			yyVAL.str = ""
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2436
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2446
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2452
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2460
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2464
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2468
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2472
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2476
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2480
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 472:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2484
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2488
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = IsNullStr
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = IsNotNullStr
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = IsTrueStr
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.str = IsNotTrueStr
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2510
		{
			yyVAL.str = IsFalseStr
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = IsNotFalseStr
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2520
		{
			yyVAL.str = EqualStr
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = LessThanStr
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = GreaterThanStr
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2532
		{
			yyVAL.str = LessEqualStr
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = GreaterEqualStr
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = NotEqualStr
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2549
		{
			yyVAL.expr = nil
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2553
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2559
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2601
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2613
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2617
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2621
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2625
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2645
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2649
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2657
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2677
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Str, Expr: yyDollar[2].expr}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2681
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2685
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Str, Expr: yyDollar[2].expr}
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2697
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2711
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2715
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2719
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2737
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2741
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2745
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 532:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2749
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 533:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2759
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2763
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 535:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2767
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 536:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2771
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2775
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2779
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 539:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2783
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 540:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2787
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 541:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2791
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 542:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2795
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 543:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2799
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2803
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2807
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2817
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2821
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2830
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2835
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2840
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2851
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2856
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2864
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2874
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2879
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 560:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2883
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2887
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2897
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 566:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2911
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2915
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2919
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 569:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2923
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2927
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2931
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = BooleanModeStr
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 575:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yyVAL.str = QueryExpansionStr
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2959
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2963
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2977
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2981
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2989
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2995
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2999
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3007
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3011
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3019
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3024
		{
			yyVAL.expr = nil
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3033
		{
			yyVAL.str = string("")
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3037
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3053
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3058
		{
			yyVAL.expr = nil
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3068
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3072
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3076
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3082
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3086
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3102
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3106
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = &NullVal{}
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3125
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3129
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3134
		{
			yyVAL.exprs = nil
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3138
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3143
		{
			yyVAL.expr = nil
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3152
		{
			yyVAL.orderBy = nil
		}
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3156
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3166
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3172
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3177
		{
			yyVAL.str = AscScr
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.str = AscScr
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3185
		{
			yyVAL.str = DescScr
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3190
		{
			yyVAL.limit = nil
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3194
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3198
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3202
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3207
		{
			yyVAL.str = ""
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3211
		{
			yyVAL.str = ForUpdateStr
		}
	case 633:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3215
		{
			yyVAL.str = ShareModeStr
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3236
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3240
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3246
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3250
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3254
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3258
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3263
		{
			yyVAL.updateExprs = nil
		}
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3267
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3277
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3283
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3287
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3293
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3313
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3319
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3325
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3329
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrLiteral([]byte("on"))}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrLiteral([]byte("off"))}
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3343
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3347
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3351
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3359
		{
			yyVAL.bytes = []byte("charset")
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3374
		{
			yyVAL.expr = &Default{}
		}
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3383
		{
			yyVAL.byt = 0
		}
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3385
		{
			yyVAL.byt = 1
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3388
		{
			yyVAL.empty = struct{}{}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3390
		{
			yyVAL.empty = struct{}{}
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.str = ""
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.str = IgnoreStr
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3399
		{
			yyVAL.empty = struct{}{}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.empty = struct{}{}
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3403
		{
			yyVAL.empty = struct{}{}
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.empty = struct{}{}
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.empty = struct{}{}
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.empty = struct{}{}
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.empty = struct{}{}
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.empty = struct{}{}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.empty = struct{}{}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.empty = struct{}{}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3421
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3425
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
			}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
				Options:  string(yyDollar[3].bytes),
			}
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3439
		{
			yyVAL.empty = struct{}{}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3441
		{
			yyVAL.empty = struct{}{}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3443
		{
			yyVAL.empty = struct{}{}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3447
		{
			yyVAL.empty = struct{}{}
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3449
		{
			yyVAL.empty = struct{}{}
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3452
		{
			yyVAL.empty = struct{}{}
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.empty = struct{}{}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3456
		{
			yyVAL.empty = struct{}{}
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3459
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3461
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3465
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3476
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3486
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 999:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3813
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			decNesting(yylex)
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3827
		{
			skipToEnd(yylex)
		}
	case 1002:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			skipToEnd(yylex)
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			skipToEnd(yylex)
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
