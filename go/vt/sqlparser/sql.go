// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const REVERT = 57537
const SCHEMA = 57538
const TABLE = 57539
const INDEX = 57540
const VIEW = 57541
const TO = 57542
const IGNORE = 57543
const IF = 57544
const PRIMARY = 57545
const COLUMN = 57546
const SPATIAL = 57547
const FULLTEXT = 57548
const KEY_BLOCK_SIZE = 57549
const CHECK = 57550
const INDEXES = 57551
const ACTION = 57552
const CASCADE = 57553
const CONSTRAINT = 57554
const FOREIGN = 57555
const NO = 57556
const REFERENCES = 57557
const RESTRICT = 57558
const SHOW = 57559
const DESCRIBE = 57560
const EXPLAIN = 57561
const DATE = 57562
const ESCAPE = 57563
const REPAIR = 57564
const OPTIMIZE = 57565
const TRUNCATE = 57566
const COALESCE = 57567
const EXCHANGE = 57568
const REBUILD = 57569
const PARTITIONING = 57570
const REMOVE = 57571
const MAXVALUE = 57572
const PARTITION = 57573
const REORGANIZE = 57574
const LESS = 57575
const THAN = 57576
const PROCEDURE = 57577
const TRIGGER = 57578
const VINDEX = 57579
const VINDEXES = 57580
const DIRECTORY = 57581
const NAME = 57582
const UPGRADE = 57583
const STATUS = 57584
const VARIABLES = 57585
const WARNINGS = 57586
const CASCADED = 57587
const DEFINER = 57588
const OPTION = 57589
const SQL = 57590
const UNDEFINED = 57591
const SEQUENCE = 57592
const MERGE = 57593
const TEMPORARY = 57594
const TEMPTABLE = 57595
const INVOKER = 57596
const SECURITY = 57597
const FIRST = 57598
const AFTER = 57599
const LAST = 57600
const VITESS_MIGRATION = 57601
const CANCEL = 57602
const RETRY = 57603
const COMPLETE = 57604
const CLEANUP = 57605
const BEGIN = 57606
const START = 57607
const TRANSACTION = 57608
const COMMIT = 57609
const ROLLBACK = 57610
const SAVEPOINT = 57611
const RELEASE = 57612
const WORK = 57613
const BIT = 57614
const TINYINT = 57615
const SMALLINT = 57616
const MEDIUMINT = 57617
const INT = 57618
const INTEGER = 57619
const BIGINT = 57620
const INTNUM = 57621
const REAL = 57622
const DOUBLE = 57623
const FLOAT_TYPE = 57624
const DECIMAL_TYPE = 57625
const NUMERIC = 57626
const TIME = 57627
const TIMESTAMP = 57628
const DATETIME = 57629
const YEAR = 57630
const CHAR = 57631
const VARCHAR = 57632
const BOOL = 57633
const CHARACTER = 57634
const VARBINARY = 57635
const NCHAR = 57636
const TEXT = 57637
const TINYTEXT = 57638
const MEDIUMTEXT = 57639
const LONGTEXT = 57640
const BLOB = 57641
const TINYBLOB = 57642
const MEDIUMBLOB = 57643
const LONGBLOB = 57644
const JSON = 57645
const ENUM = 57646
const GEOMETRY = 57647
const POINT = 57648
const LINESTRING = 57649
const POLYGON = 57650
const GEOMETRYCOLLECTION = 57651
const MULTIPOINT = 57652
const MULTILINESTRING = 57653
const MULTIPOLYGON = 57654
const NULLX = 57655
const AUTO_INCREMENT = 57656
const APPROXNUM = 57657
const SIGNED = 57658
const UNSIGNED = 57659
const ZEROFILL = 57660
const CODE = 57661
const COLLATION = 57662
const COLUMNS = 57663
const DATABASES = 57664
const ENGINES = 57665
const EVENT = 57666
const EXTENDED = 57667
const FIELDS = 57668
const FULL = 57669
const FUNCTION = 57670
const GTID_EXECUTED = 57671
const KEYSPACES = 57672
const OPEN = 57673
const PLUGINS = 57674
const PRIVILEGES = 57675
const PROCESSLIST = 57676
const SCHEMAS = 57677
const TABLES = 57678
const TRIGGERS = 57679
const USER = 57680
const VGTID_EXECUTED = 57681
const VITESS_KEYSPACES = 57682
const VITESS_METADATA = 57683
const VITESS_MIGRATIONS = 57684
const VITESS_REPLICATION_STATUS = 57685
const VITESS_SHARDS = 57686
const VITESS_TABLETS = 57687
const VSCHEMA = 57688
const NAMES = 57689
const GLOBAL = 57690
const SESSION = 57691
const ISOLATION = 57692
const LEVEL = 57693
const READ = 57694
const WRITE = 57695
const ONLY = 57696
const REPEATABLE = 57697
const COMMITTED = 57698
const UNCOMMITTED = 57699
const SERIALIZABLE = 57700
const CURRENT_TIMESTAMP = 57701
const DATABASE = 57702
const CURRENT_DATE = 57703
const CURRENT_TIME = 57704
const LOCALTIME = 57705
const LOCALTIMESTAMP = 57706
const CURRENT_USER = 57707
const UTC_DATE = 57708
const UTC_TIME = 57709
const UTC_TIMESTAMP = 57710
const DAY = 57711
const DAY_HOUR = 57712
const DAY_MICROSECOND = 57713
const DAY_MINUTE = 57714
const DAY_SECOND = 57715
const HOUR = 57716
const HOUR_MICROSECOND = 57717
const HOUR_MINUTE = 57718
const HOUR_SECOND = 57719
const MICROSECOND = 57720
const MINUTE = 57721
const MINUTE_MICROSECOND = 57722
const MINUTE_SECOND = 57723
const MONTH = 57724
const QUARTER = 57725
const SECOND = 57726
const SECOND_MICROSECOND = 57727
const YEAR_MONTH = 57728
const WEEK = 57729
const REPLACE = 57730
const CONVERT = 57731
const CAST = 57732
const SUBSTR = 57733
const SUBSTRING = 57734
const GROUP_CONCAT = 57735
const SEPARATOR = 57736
const TIMESTAMPADD = 57737
const TIMESTAMPDIFF = 57738
const WEIGHT_STRING = 57739
const MATCH = 57740
const AGAINST = 57741
const BOOLEAN = 57742
const LANGUAGE = 57743
const WITH = 57744
const QUERY = 57745
const EXPANSION = 57746
const WITHOUT = 57747
const VALIDATION = 57748
const UNUSED = 57749
const ARRAY = 57750
const CUME_DIST = 57751
const DESCRIPTION = 57752
const DENSE_RANK = 57753
const EMPTY = 57754
const EXCEPT = 57755
const FIRST_VALUE = 57756
const GROUPING = 57757
const GROUPS = 57758
const JSON_TABLE = 57759
const LAG = 57760
const LAST_VALUE = 57761
const LATERAL = 57762
const LEAD = 57763
const MEMBER = 57764
const NTH_VALUE = 57765
const NTILE = 57766
const OF = 57767
const OVER = 57768
const PERCENT_RANK = 57769
const RANK = 57770
const RECURSIVE = 57771
const ROW_NUMBER = 57772
const SYSTEM = 57773
const WINDOW = 57774
const ACTIVE = 57775
const ADMIN = 57776
const BUCKETS = 57777
const CLONE = 57778
const COMPONENT = 57779
const DEFINITION = 57780
const ENFORCED = 57781
const EXCLUDE = 57782
const FOLLOWING = 57783
const GEOMCOLLECTION = 57784
const GET_MASTER_PUBLIC_KEY = 57785
const HISTOGRAM = 57786
const HISTORY = 57787
const INACTIVE = 57788
const INVISIBLE = 57789
const LOCKED = 57790
const MASTER_COMPRESSION_ALGORITHMS = 57791
const MASTER_PUBLIC_KEY_PATH = 57792
const MASTER_TLS_CIPHERSUITES = 57793
const MASTER_ZSTD_COMPRESSION_LEVEL = 57794
const NESTED = 57795
const NETWORK_NAMESPACE = 57796
const NOWAIT = 57797
const NULLS = 57798
const OJ = 57799
const OLD = 57800
const OPTIONAL = 57801
const ORDINALITY = 57802
const ORGANIZATION = 57803
const OTHERS = 57804
const PATH = 57805
const PERSIST = 57806
const PERSIST_ONLY = 57807
const PRECEDING = 57808
const PRIVILEGE_CHECKS_USER = 57809
const PROCESS = 57810
const RANDOM = 57811
const REFERENCE = 57812
const REQUIRE_ROW_FORMAT = 57813
const RESOURCE = 57814
const RESPECT = 57815
const RESTART = 57816
const RETAIN = 57817
const REUSE = 57818
const ROLE = 57819
const SECONDARY = 57820
const SECONDARY_ENGINE = 57821
const SECONDARY_LOAD = 57822
const SECONDARY_UNLOAD = 57823
const SKIP = 57824
const SRID = 57825
const THREAD_PRIORITY = 57826
const TIES = 57827
const UNBOUNDED = 57828
const VCPU = 57829
const VISIBLE = 57830
const FORMAT = 57831
const TREE = 57832
const VITESS = 57833
const TRADITIONAL = 57834
const LOCAL = 57835
const LOW_PRIORITY = 57836
const NO_WRITE_TO_BINLOG = 57837
const LOGS = 57838
const ERROR = 57839
const GENERAL = 57840
const HOSTS = 57841
const OPTIMIZER_COSTS = 57842
const USER_RESOURCES = 57843
const SLOW = 57844
const CHANNEL = 57845
const RELAY = 57846
const EXPORT = 57847
const AVG_ROW_LENGTH = 57848
const CONNECTION = 57849
const CHECKSUM = 57850
const DELAY_KEY_WRITE = 57851
const ENCRYPTION = 57852
const ENGINE = 57853
const INSERT_METHOD = 57854
const MAX_ROWS = 57855
const MIN_ROWS = 57856
const PACK_KEYS = 57857
const PASSWORD = 57858
const FIXED = 57859
const DYNAMIC = 57860
const COMPRESSED = 57861
const REDUNDANT = 57862
const COMPACT = 57863
const ROW_FORMAT = 57864
const STATS_AUTO_RECALC = 57865
const STATS_PERSISTENT = 57866
const STATS_SAMPLE_PAGES = 57867
const STORAGE = 57868
const MEMORY = 57869
const DISK = 57870
const PARTITIONS = 57871
const LINEAR = 57872
const RANGE = 57873
const LIST = 57874
const SUBPARTITION = 57875
const SUBPARTITIONS = 57876
const HASH = 57877

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	553, 137,
	-2, 143,
	-1, 45,
	116, 143,
	156, 143,
	309, 143,
	-2, 442,
	-1, 52,
	33, 615,
	215, 615,
	226, 615,
	259, 629,
	260, 629,
	-2, 617,
	-1, 57,
	217, 639,
	-2, 637,
	-1, 108,
	214, 1088,
	-2, 116,
	-1, 110,
	1, 138,
	553, 138,
	-2, 143,
	-1, 120,
	117, 345,
	220, 345,
	-2, 436,
	-1, 139,
	116, 143,
	156, 143,
	309, 143,
	-2, 451,
	-1, 599,
	200, 1109,
	-2, 1105,
	-1, 600,
	200, 1110,
	-2, 1106,
	-1, 671,
	57, 707,
	-2, 715,
	-1, 708,
	132, 1468,
	-2, 109,
	-1, 709,
	132, 1345,
	-2, 110,
	-1, 715,
	132, 1399,
	-2, 1082,
	-1, 858,
	132, 1278,
	-2, 1079,
	-1, 894,
	225, 38,
	230, 38,
	-2, 356,
	-1, 971,
	1, 490,
	553, 490,
	-2, 143,
	-1, 1168,
	57, 708,
	-2, 720,
	-1, 1169,
	57, 709,
	-2, 721,
	-1, 1221,
	116, 143,
	156, 143,
	309, 143,
	-2, 386,
	-1, 1224,
	23, 162,
	-2, 164,
	-1, 1297,
	117, 345,
	220, 345,
	-2, 436,
	-1, 1306,
	225, 39,
	230, 39,
	-2, 357,
	-1, 1557,
	200, 1114,
	-2, 1108,
	-1, 1632,
	116, 143,
	156, 143,
	309, 143,
	-2, 387,
	-1, 1870,
	75, 91,
	84, 91,
	-2, 773,
	-1, 2040,
	47, 1050,
	-2, 1044,
	-1, 2229,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 748,
}

const yyPrivate = 57344

const yyLast = 33652

var yyAct = [...]int{
	599, 696, 2497, 2446, 2382, 2384, 2274, 2468, 2413, 2235,
	2149, 2137, 2432, 2419, 2347, 1150, 1034, 1588, 593, 34,
	2051, 2054, 3, 2299, 1899, 686, 1890, 90, 1897, 1815,
	2138, 664, 2055, 1183, 1843, 2200, 2194, 594, 2052, 2304,
	602, 1571, 550, 1605, 2049, 1866, 2220, 2041, 176, 2291,
	1835, 176, 1664, 514, 176, 1916, 1592, 548, 1977, 530,
	546, 176, 554, 1939, 1669, 591, 543, 1684, 861, 176,
	2096, 592, 1918, 1917, 576, 982, 1618, 1855, 33, 713,
	542, 176, 148, 35, 924, 1610, 1827, 1551, 1170, 1629,
	668, 1993, 672, 1609, 1697, 690, 1729, 1501, 666, 1508,
	687, 134, 1671, 530, 1910, 1278, 530, 176, 530, 889,
	689, 1192, 1872, 1460, 559, 1683, 1213, 1612, 1153, 710,
	1520, 1573, 1304, 85, 1320, 1478, 1411, 1052, 1311, 868,
	1408, 1394, 895, 1681, 1011, 89, 865, 1597, 890, 892,
	902, 869, 891, 1660, 1196, 700, 678, 1032, 547, 1212,
	1027, 1416, 673, 111, 1273, 1210, 151, 674, 92, 112,
	1593, 676, 117, 1296, 967, 118, 537, 1122, 1118, 70,
	2481, 2329, 83, 2498, 2414, 2237, 79, 2237, 2238, 2239,
	1564, 2385, 1957, 1956, 1727, 675, 71, 1985, 8, 91,
	7, 6, 1986, 1467, 1554, 1466, 694, 1465, 699, 1568,
	1569, 113, 1380, 178, 179, 180, 1464, 1463, 680, 119,
	1462, 1449, 2460, 487, 84, 862, 540, 1454, 541, 1813,
	2037, 926, 929, 1837, 2118, 2251, 2343, 2342, 928, 538,
	927, 872, 2491, 877, 940, 941, 72, 944, 945, 946,
	947, 667, 2442, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 707, 96,
	665, 905, 906, 714, 883, 2486, 681, 113, 688, 2269,
	882, 1767, 2270, 2400, 884, 1053, 2476, 1676, 72, 72,
	930, 931, 932, 2275, 2433, 2317, 1715, 2441, 937, 1992,
	2181, 1287, 2399, 172, 1214, 1053, 1215, 98, 99, 1814,
	102, 1674, 1846, 108, 72, 1881, 173, 74, 1880, 482,
	1964, 1882, 942, 81, 1963, 2088, 2089, 114, 2087, 178,
	179, 180, 881, 970, 976, 977, 1018, 1847, 1020, 663,
	156, 113, 671, 1624, 1625, 1765, 1984, 1764, 1623, 989,
	1030, 1570, 1001, 876, 990, 661, 878, 1006, 1007, 517,
	660, 1002, 988, 989, 987, 81, 81, 1907, 990, 2173,
	702, 703, 2331, 995, 1017, 1019, 1644, 1643, 2151, 517,
	2017, 2171, 1887, 1453, 528, 1994, 532, 1063, 879, 2197,
	526, 81, 1741, 1738, 1740, 1739, 1157, 153, 1084, 154,
	504, 1960, 1400, 517, 1940, 1698, 1743, 1063, 1744, 171,
	1745, 178, 179, 180, 1455, 1456, 1457, 966, 1370, 2352,
	1085, 1086, 1087, 1088, 1089, 1090, 1091, 1093, 1092, 1094,
	1095, 2145, 1730, 1735, 2485, 517, 1673, 1395, 1003, 2146,
	1024, 517, 972, 943, 1008, 1010, 503, 1972, 1029, 881,
	996, 873, 1004, 1005, 1009, 2152, 1746, 501, 875, 874,
	1371, 949, 1372, 1015, 948, 1996, 1734, 1016, 881, 965,
	2461, 2153, 1732, 2339, 2264, 885, 886, 1021, 1059, 1903,
	913, 1051, 911, 1700, 2482, 582, 1736, 1606, 1096, 1886,
	922, 1290, 176, 921, 176, 498, 880, 176, 1059, 1014,
	2474, 920, 919, 923, 512, 879, 1733, 918, 917, 866,
	916, 1765, 915, 157, 910, 1022, 1096, 866, 866, 509,
	897, 864, 162, 898, 1409, 530, 530, 530, 1998, 2016,
	2002, 969, 1997, 1976, 1995, 1310, 1682, 2125, 701, 2000,
	1973, 1721, 1959, 530, 530, 1405, 999, 1039, 1999, 1816,
	1818, 933, 518, 904, 2024, 1949, 1069, 2023, 2022, 1285,
	1284, 2001, 2003, 34, 1283, 1406, 2117, 1045, 1281, 486,
	1988, 481, 518, 2377, 985, 2234, 991, 992, 993, 994,
	488, 904, 490, 505, 1116, 520, 2216, 519, 494, 1401,
	492, 496, 506, 497, 1717, 491, 518, 502, 1778, 1031,
	493, 507, 508, 510, 524, 523, 511, 1877, 500, 521,
	2472, 1097, 1098, 880, 2480, 2328, 1962, 914, 968, 912,
	1842, 1399, 543, 1099, 1100, 1101, 1102, 2332, 518, 149,
	1805, 1675, 880, 1107, 518, 1110, 1563, 904, 1309, 1148,
	1023, 1058, 1055, 1056, 1057, 1062, 1064, 1061, 2398, 1060,
	903, 939, 2198, 1025, 1200, 1979, 1054, 1130, 980, 80,
	1978, 1058, 1055, 1056, 1057, 1062, 1064, 1061, 1096, 1060,
	1630, 176, 110, 1036, 1037, 904, 1054, 1979, 903, 1095,
	1766, 1143, 1978, 907, 897, 2086, 1103, 904, 176, 1971,
	1012, 683, 1970, 908, 1160, 1817, 2353, 2412, 1164, 1149,
	1158, 80, 80, 1193, 668, 666, 1163, 530, 105, 1161,
	1028, 176, 2009, 75, 1417, 1893, 530, 1382, 1381, 1383,
	1384, 1385, 530, 986, 975, 2394, 978, 80, 998, 984,
	71, 2210, 710, 1048, 903, 1046, 1047, 925, 1731, 1000,
	897, 900, 901, 1402, 866, 1216, 904, 1049, 894, 898,
	1396, 1521, 1397, 522, 1120, 1398, 1121, 1124, 1149, 595,
	1894, 577, 579, 596, 597, 106, 575, 578, 598, 1716,
	1929, 515, 903, 1136, 1137, 1138, 1139, 907, 897, 1162,
	1521, 1068, 1792, 89, 903, 1896, 516, 908, 1154, 1891,
	897, 900, 901, 2313, 866, 580, 581, 583, 894, 898,
	2107, 1067, 1068, 1901, 1902, 909, 92, 2106, 2470, 1704,
	1892, 2471, 1319, 2469, 178, 179, 180, 893, 1503, 1483,
	1013, 150, 155, 152, 158, 159, 160, 161, 163, 164,
	165, 166, 1783, 1484, 1485, 1482, 1151, 167, 168, 169,
	170, 1782, 1898, 903, 1418, 938, 1709, 971, 1318, 1182,
	1308, 1066, 1159, 1067, 1068, 667, 983, 1714, 1206, 1207,
	2011, 1709, 1712, 1066, 1179, 1067, 1068, 665, 2425, 913,
	2178, 176, 2423, 1713, 911, 1274, 714, 1066, 2454, 1067,
	1068, 2427, 2428, 2092, 1282, 1504, 1901, 1902, 1711, 1211,
	178, 179, 180, 2424, 1839, 1088, 1089, 1090, 1091, 1093,
	1092, 1094, 1095, 530, 2495, 1306, 1900, 1090, 1091, 1093,
	1092, 1094, 1095, 1315, 1201, 1598, 1599, 1317, 1903, 2500,
	530, 530, 1389, 530, 2445, 530, 530, 1084, 530, 530,
	530, 530, 530, 530, 2404, 1177, 1770, 1771, 1772, 1066,
	1165, 1067, 1068, 530, 2415, 2176, 1177, 176, 1353, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1093, 1092, 1094, 1095,
	1177, 1840, 2370, 176, 1788, 2483, 2405, 1473, 1475, 1476,
	1066, 1302, 1067, 1068, 530, 2290, 176, 2250, 1316, 1288,
	1289, 1066, 2184, 1067, 1068, 1388, 1800, 1407, 1474, 1900,
	2455, 176, 705, 2249, 2371, 1066, 1415, 1067, 1068, 1190,
	1295, 1903, 1177, 1348, 1349, 81, 1387, 176, 2123, 1525,
	1066, 1350, 1067, 1068, 176, 1914, 1781, 1895, 1066, 1481,
	1067, 1068, 1913, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 530, 530, 530, 1314, 1787, 1356, 1357, 2484,
	1313, 1679, 1377, 1362, 1363, 1322, 1280, 1323, 1177, 1325,
	1327, 1312, 1312, 1331, 1333, 1335, 1337, 1339, 1390, 1305,
	1293, 1292, 176, 1291, 1189, 613, 614, 615, 1375, 1386,
	1413, 2443, 1066, 1374, 1067, 1068, 1373, 1468, 1469, 1470,
	1471, 1421, 1364, 1066, 1366, 1067, 1068, 1358, 1425, 1355,
	1427, 1428, 1429, 1430, 178, 179, 180, 1434, 2104, 1354,
	1066, 1329, 1067, 1068, 1351, 1376, 1066, 1502, 1067, 1068,
	2374, 1448, 2373, 1066, 2416, 1067, 1068, 1509, 1510, 1410,
	1511, 530, 2372, 2335, 2312, 1515, 2183, 1479, 1177, 2310,
	2287, 2247, 1419, 1420, 1186, 883, 530, 530, 113, 2103,
	1550, 882, 1477, 178, 179, 180, 1424, 1286, 1923, 1066,
	1487, 1067, 1068, 1431, 1432, 1433, 1915, 1555, 1066, 1423,
	1067, 1068, 1066, 1911, 1067, 1068, 176, 1725, 543, 1086,
	1087, 1088, 1089, 1090, 1091, 1093, 1092, 1094, 1095, 1444,
	1445, 1446, 1576, 1187, 1724, 1447, 1591, 1577, 1506, 1505,
	1522, 1066, 176, 1067, 1068, 530, 1450, 1578, 1414, 1579,
	1378, 1594, 1595, 1365, 1480, 176, 1361, 1360, 530, 1359,
	178, 179, 180, 176, 1884, 176, 1188, 176, 176, 530,
	1557, 1026, 530, 2148, 1833, 2499, 95, 1555, 1628, 2359,
	1559, 1560, 2337, 530, 2336, 710, 2273, 94, 710, 93,
	1486, 1941, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 2209, 178, 179, 180, 89,
	1692, 86, 1608, 86, 178, 179, 180, 1556, 1690, 1584,
	88, 88, 87, 94, 87, 89, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1093, 1092, 1094, 1095, 1668, 530, 1926,
	1557, 2267, 2479, 1638, 1685, 1686, 1687, 1833, 2465, 1689,
	1691, 1634, 1650, 1651, 1652, 1653, 1177, 1833, 2449, 1507,
	1833, 2439, 530, 680, 1633, 2211, 1513, 1514, 530, 1315,
	1065, 95, 1315, 2050, 1315, 2494, 1177, 1851, 1177, 1177,
	1708, 1616, 94, 2209, 93, 1666, 1558, 1603, 1586, 1561,
	1562, 1779, 1637, 88, 1699, 1645, 2393, 1646, 1647, 1648,
	1649, 1833, 1601, 1852, 1672, 1833, 2408, 1833, 2388, 2113,
	530, 1622, 1502, 1656, 1657, 1658, 1659, 1502, 1502, 1621,
	1873, 1636, 1583, 1779, 1620, 1635, 2360, 1177, 1797, 714,
	1696, 1852, 714, 2267, 1177, 1549, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1070, 1833, 2265, 1709, 1177, 2214, 1177,
	2447, 1177, 1796, 176, 2115, 2114, 2111, 2112, 2111, 2110,
	176, 1852, 1177, 1779, 1177, 176, 176, 1765, 1958, 176,
	1667, 176, 1680, 1662, 1663, 1873, 1678, 176, 1718, 1677,
	1688, 1277, 1943, 1874, 176, 1937, 1938, 1833, 1832, 1829,
	1709, 1703, 1876, 1710, 1706, 1693, 1707, 1702, 1701, 1705,
	905, 906, 1667, 1844, 88, 1719, 1065, 1177, 1844, 1720,
	1596, 1312, 176, 530, 1722, 1723, 1541, 1530, 1531, 1532,
	1533, 1543, 1534, 1535, 1536, 1548, 1544, 1537, 1538, 1545,
	1546, 1547, 1539, 1540, 1542, 1277, 1276, 2081, 1874, 1222,
	1221, 1181, 1566, 1458, 1404, 1208, 1765, 1765, 2252, 670,
	1709, 888, 887, 1344, 2489, 1756, 1757, 2411, 81, 2387,
	1759, 1779, 2381, 1084, 600, 1987, 1728, 2349, 1184, 1760,
	2324, 2244, 2186, 2256, 1852, 1279, 1665, 2147, 2383, 2209,
	1479, 2109, 1944, 1793, 1661, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1093, 1092, 1094, 1095, 1655, 1749, 2253, 2254,
	2255, 1654, 1775, 1345, 1346, 1347, 1392, 1920, 1307, 1303,
	1275, 107, 177, 970, 1919, 177, 1341, 2150, 177, 2451,
	2257, 2258, 2350, 531, 1676, 177, 81, 176, 2221, 2222,
	2420, 2224, 2130, 177, 2129, 176, 2128, 2050, 1930, 1750,
	1811, 1451, 2072, 530, 2227, 177, 1763, 2073, 2226, 1857,
	1860, 1861, 1862, 1858, 1838, 1859, 1863, 1480, 1193, 2221,
	2222, 1920, 2069, 1342, 1343, 2068, 2463, 531, 1773, 2070,
	531, 177, 531, 2440, 2071, 176, 176, 1590, 1185, 1857,
	1860, 1861, 1862, 1858, 34, 1859, 1863, 2074, 1848, 1861,
	1862, 1883, 1774, 1868, 1776, 1582, 1084, 2042, 2044, 1080,
	1791, 1081, 2215, 1557, 2134, 2030, 2045, 2369, 1834, 2029,
	2303, 2305, 2205, 2039, 1403, 1082, 1083, 1079, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1093, 1092, 1094, 1095, 659,
	2202, 1905, 1641, 1830, 1924, 684, 935, 530, 2201, 1175,
	1171, 934, 176, 685, 1154, 1812, 1517, 86, 2160, 176,
	1556, 1919, 1982, 1867, 1172, 530, 1820, 1951, 87, 1038,
	1518, 530, 1831, 1908, 1909, 1315, 1315, 1826, 1841, 1950,
	530, 1789, 1936, 1175, 1171, 1888, 114, 2207, 88, 1580,
	1581, 1174, 1955, 1173, 1598, 1599, 2126, 1753, 1172, 1871,
	1875, 2390, 2345, 176, 176, 176, 176, 176, 1672, 1878,
	1904, 1865, 1587, 1742, 1889, 86, 1769, 1802, 1803, 93,
	176, 176, 88, 1168, 1169, 1174, 87, 1173, 1922, 95,
	1912, 692, 693, 2028, 2448, 95, 176, 2311, 2300, 2309,
	94, 2027, 93, 1921, 2308, 2301, 94, 1927, 93, 2206,
	2204, 88, 2131, 1953, 1502, 2090, 1694, 691, 94, 2006,
	2007, 2195, 1844, 95, 2010, 1295, 2453, 2452, 2012, 2013,
	2014, 1931, 1932, 1933, 94, 1829, 530, 1798, 1202, 1194,
	1954, 100, 101, 1952, 2453, 2375, 2102, 666, 682, 97,
	530, 2008, 2021, 82, 1, 2015, 608, 1945, 1946, 2422,
	176, 499, 1567, 1152, 530, 513, 1990, 2418, 1989, 1379,
	1369, 2276, 2346, 530, 1670, 896, 2048, 139, 1631, 1632,
	530, 530, 2435, 176, 176, 176, 176, 176, 584, 2021,
	104, 859, 2032, 1974, 103, 176, 899, 997, 672, 2047,
	176, 176, 2062, 176, 2004, 2033, 176, 176, 176, 1991,
	1695, 2005, 2268, 1906, 1642, 2056, 1228, 1226, 1164, 1227,
	1980, 1225, 2020, 1981, 1230, 1229, 1224, 1452, 527, 2105,
	1864, 174, 1217, 1195, 176, 936, 489, 2116, 1726, 2053,
	495, 1108, 2080, 2031, 2053, 2026, 1879, 529, 2082, 2034,
	711, 2083, 704, 2058, 2199, 2124, 2038, 2040, 673, 1836,
	2043, 176, 2036, 674, 2368, 2302, 2389, 1639, 530, 2064,
	2065, 2075, 2067, 1191, 2025, 530, 2063, 1790, 2079, 2066,
	176, 1115, 1519, 2084, 1613, 1575, 1472, 1413, 552, 2099,
	176, 712, 2136, 551, 863, 2098, 870, 549, 2095, 89,
	2091, 1822, 1845, 1071, 176, 2061, 603, 176, 1203, 1856,
	1854, 1853, 1751, 1617, 2223, 2219, 177, 2161, 177, 1611,
	2119, 177, 2120, 1828, 560, 553, 545, 601, 2094, 2097,
	1640, 1961, 2144, 2133, 2121, 2122, 2132, 1050, 2135, 1167,
	539, 1672, 871, 2182, 1516, 2351, 2142, 2099, 1768, 531,
	531, 531, 2140, 2098, 2180, 1166, 1528, 176, 1529, 2330,
	1885, 2156, 60, 2155, 38, 534, 2459, 531, 531, 1041,
	698, 32, 31, 30, 29, 1084, 2163, 1777, 2162, 28,
	23, 2169, 22, 21, 172, 20, 2158, 2159, 19, 543,
	25, 18, 17, 16, 109, 47, 2193, 1085, 1086, 1087,
	1088, 1089, 1090, 1091, 1093, 1092, 1094, 1095, 114, 44,
	42, 116, 176, 115, 45, 41, 973, 2196, 2203, 39,
	27, 156, 26, 15, 14, 2240, 2208, 2218, 13, 12,
	2166, 2167, 11, 2168, 10, 9, 2170, 5, 2172, 4,
	2228, 2245, 1044, 2225, 24, 2, 2236, 2232, 2233, 0,
	0, 0, 0, 0, 2230, 0, 176, 2231, 0, 176,
	176, 176, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 2241, 2242, 2271, 0, 2243, 0, 0, 153, 2263,
	154, 530, 530, 530, 530, 0, 0, 0, 0, 0,
	171, 0, 0, 0, 0, 177, 0, 2246, 2283, 2248,
	0, 0, 0, 0, 0, 0, 0, 2272, 2284, 0,
	2285, 0, 177, 0, 0, 2288, 2289, 0, 0, 530,
	530, 530, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 0, 0, 0, 177, 2286, 0, 0, 0,
	531, 0, 2315, 0, 0, 530, 531, 530, 0, 0,
	0, 0, 0, 2323, 2282, 0, 2325, 0, 0, 0,
	2298, 0, 34, 2297, 0, 2307, 2318, 2320, 2306, 2295,
	2296, 0, 0, 0, 2316, 530, 666, 0, 2314, 2056,
	2322, 0, 0, 2056, 0, 0, 0, 0, 0, 0,
	0, 0, 2334, 0, 157, 2326, 2327, 0, 0, 0,
	0, 0, 2053, 162, 0, 1176, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2340, 0, 2348, 2338, 0, 0, 0, 0, 2341, 0,
	0, 0, 2366, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2281, 0, 0, 0, 2367, 0, 0,
	0, 0, 2365, 0, 0, 530, 0, 2364, 0, 0,
	0, 0, 0, 2386, 0, 0, 0, 0, 0, 2376,
	0, 0, 2379, 0, 0, 0, 0, 0, 2378, 0,
	530, 176, 0, 0, 666, 2056, 0, 0, 2380, 0,
	0, 530, 0, 0, 34, 177, 0, 2395, 2392, 0,
	0, 0, 0, 712, 712, 712, 0, 0, 530, 1245,
	149, 0, 0, 2410, 0, 0, 0, 0, 530, 0,
	0, 1040, 1042, 2430, 530, 530, 2406, 531, 0, 0,
	0, 0, 0, 0, 0, 2417, 2409, 0, 2434, 34,
	2348, 2436, 530, 2429, 531, 531, 2421, 531, 2426, 531,
	531, 0, 531, 531, 531, 531, 531, 531, 0, 2444,
	0, 0, 2450, 0, 0, 0, 0, 531, 2053, 0,
	0, 177, 2456, 0, 0, 0, 0, 0, 0, 2464,
	2462, 0, 0, 0, 0, 0, 0, 177, 2467, 2466,
	0, 2473, 0, 0, 0, 0, 0, 1146, 531, 2475,
	177, 2478, 0, 2477, 0, 0, 0, 0, 0, 0,
	0, 2487, 0, 0, 0, 177, 2490, 2488, 0, 0,
	0, 2493, 2492, 0, 0, 530, 0, 0, 0, 0,
	0, 177, 2501, 0, 0, 0, 1233, 0, 177, 0,
	0, 0, 2496, 0, 0, 0, 0, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 531, 531, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1198, 177, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	1218, 0, 150, 155, 152, 158, 159, 160, 161, 163,
	164, 165, 166, 0, 0, 0, 1246, 0, 167, 168,
	169, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 531, 0, 0, 0, 0, 0, 0, 1259, 1262,
	1263, 1264, 1265, 1266, 1267, 0, 1268, 1269, 1270, 1271,
	1272, 1247, 1248, 1249, 1250, 1231, 1232, 1260, 0, 1234,
	177, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243,
	1244, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 0, 531, 0, 0, 0, 0, 177, 0, 177,
	0, 177, 177, 531, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 172, 0, 1146, 0, 1261, 0, 1321, 1321,
	0, 1321, 0, 1321, 1321, 0, 1330, 1321, 1321, 1321,
	1321, 1321, 531, 0, 0, 0, 114, 0, 136, 1146,
	1146, 863, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 0, 153, 0, 154, 0,
	0, 0, 0, 0, 123, 124, 145, 144, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	712, 712, 712, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 177,
	177, 0, 0, 177, 0, 177, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	1180, 0, 0, 0, 0, 0, 177, 531, 0, 0,
	0, 140, 121, 147, 128, 120, 0, 141, 142, 1512,
	0, 0, 157, 0, 0, 0, 1146, 0, 0, 0,
	0, 162, 129, 0, 1526, 1527, 0, 0, 0, 712,
	0, 0, 0, 0, 0, 0, 132, 130, 125, 126,
	127, 131, 0, 0, 0, 0, 122, 0, 0, 0,
	0, 0, 0, 0, 0, 133, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 585, 1589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1198, 0, 0, 712,
	0, 0, 0, 0, 0, 0, 0, 712, 0, 0,
	712, 177, 0, 0, 0, 0, 0, 0, 0, 177,
	0, 863, 0, 0, 0, 0, 0, 531, 149, 0,
	175, 0, 0, 485, 0, 0, 525, 0, 0, 0,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 177,
	177, 0, 0, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 870, 0, 0, 697,
	0, 697, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	863, 0, 0, 143, 0, 0, 870, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 137, 0, 0, 138,
	0, 531, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 531, 0, 0, 863, 0,
	0, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 177, 177,
	177, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 0, 0, 0, 0, 1155, 167, 168, 169, 170,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 1762, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 484, 531, 0, 0,
	0, 0, 0, 0, 531, 531, 533, 177, 177, 177,
	177, 177, 0, 0, 662, 0, 0, 0, 0, 177,
	0, 0, 0, 0, 177, 177, 0, 177, 0, 0,
	177, 177, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1523, 0, 0, 0, 1524,
	0, 0, 867, 0, 0, 0, 172, 0, 177, 0,
	0, 0, 0, 0, 0, 0, 0, 1935, 0, 0,
	0, 0, 712, 0, 0, 1178, 1565, 0, 0, 0,
	114, 0, 136, 0, 0, 177, 0, 0, 0, 0,
	0, 1823, 531, 156, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 0, 177, 1585, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 177, 135,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 154, 0, 0, 0, 0, 0, 1298, 1299,
	145, 144, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 485, 0, 0, 485,
	0, 177, 0, 0, 0, 1925, 72, 36, 37, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1589, 0, 0, 78, 0, 0, 1942,
	40, 66, 67, 0, 64, 68, 0, 0, 1947, 0,
	0, 0, 0, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 53, 0, 0, 140, 1300, 147, 0, 1297,
	0, 141, 142, 81, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 0, 0, 0, 0,
	177, 0, 0, 177, 177, 177, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1147, 0, 0, 0, 531, 531, 531, 531, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2035, 531, 531, 531, 177, 0, 0, 0,
	0, 712, 0, 485, 0, 1146, 0, 0, 2060, 1321,
	1146, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	679, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 43, 46, 49, 48, 51, 0, 63,
	0, 0, 69, 485, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 77, 76, 0, 0, 61,
	62, 50, 0, 0, 0, 0, 0, 974, 0, 979,
	531, 0, 981, 1780, 0, 0, 0, 1784, 0, 1785,
	1786, 0, 0, 0, 0, 0, 863, 0, 1794, 1146,
	0, 1795, 0, 1589, 610, 73, 0, 143, 0, 0,
	0, 54, 55, 0, 56, 57, 58, 59, 0, 0,
	137, 0, 0, 138, 0, 0, 1799, 1801, 0, 531,
	0, 0, 0, 0, 1806, 1807, 1808, 1809, 1810, 0,
	1585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1821, 0, 0, 531, 177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 0, 73, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 0, 0, 0, 669, 0, 531, 531,
	0, 0, 0, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 75, 0, 0, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 0, 1147, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1147, 1147, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1589, 0, 0, 0, 0, 1367, 1205, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 2277,
	2278, 2279, 2280, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 485, 2293, 2293, 2293,
	0, 0, 0, 0, 0, 1435, 1436, 485, 485, 485,
	485, 485, 485, 485, 0, 0, 0, 0, 1146, 0,
	0, 0, 0, 2319, 0, 2321, 0, 0, 2018, 2019,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 1589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2059, 0, 0, 0, 0,
	0, 0, 0, 0, 712, 0, 0, 0, 0, 0,
	0, 0, 2077, 2078, 0, 0, 0, 697, 0, 0,
	0, 0, 0, 0, 697, 697, 1223, 0, 0, 0,
	1147, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 697, 1412, 697, 697, 697, 697, 697, 0,
	0, 0, 0, 1589, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1367, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1589, 0,
	697, 0, 0, 0, 0, 0, 0, 0, 0, 2402,
	0, 0, 0, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 1352, 0, 1146, 0, 2407, 485, 0, 0,
	0, 0, 0, 1412, 0, 485, 1589, 485, 0, 485,
	1619, 0, 712, 712, 0, 0, 0, 0, 0, 0,
	0, 1393, 0, 0, 0, 0, 0, 0, 0, 2165,
	1589, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2174, 2175, 2177, 2179, 0, 0, 0, 0, 0, 0,
	2185, 0, 1422, 0, 0, 0, 2187, 0, 0, 1426,
	0, 2191, 0, 0, 0, 0, 0, 0, 0, 0,
	1437, 1438, 1439, 1440, 1441, 1442, 1443, 0, 0, 1033,
	1033, 1033, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 0, 0, 2217, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 1461, 0, 0,
	0, 0, 0, 1589, 0, 2229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 669, 1104, 1105, 1106,
	0, 1109, 0, 1111, 1112, 1113, 1114, 0, 1117, 1119,
	1119, 0, 1119, 1123, 1123, 1125, 1126, 1127, 1128, 1129,
	0, 1131, 1132, 1133, 1134, 1135, 0, 0, 0, 0,
	1123, 1123, 1123, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2266, 0, 172, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1294, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 0, 0, 114,
	0, 136, 485, 0, 0, 0, 0, 485, 485, 0,
	0, 485, 156, 1754, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 2292, 0, 485, 1156, 0, 0,
	669, 0, 0, 0, 669, 0, 0, 0, 0, 0,
	669, 0, 0, 146, 0, 0, 0, 0, 135, 0,
	1600, 0, 0, 0, 485, 0, 0, 0, 1604, 0,
	1607, 0, 0, 1461, 0, 0, 0, 0, 0, 153,
	0, 154, 0, 0, 0, 0, 2333, 1298, 1299, 145,
	144, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 697,
	2354, 2355, 2356, 0, 2357, 2358, 0, 2361, 0, 0,
	0, 2362, 2363, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 697, 697, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 485,
	0, 0, 0, 0, 140, 1300, 147, 1367, 1297, 0,
	141, 142, 0, 0, 0, 157, 0, 2397, 0, 0,
	0, 0, 0, 0, 162, 2401, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1461, 0,
	0, 0, 0, 0, 0, 1737, 0, 0, 0, 0,
	1747, 1748, 0, 0, 1752, 0, 2457, 2458, 0, 0,
	0, 0, 1755, 0, 0, 0, 0, 0, 0, 1758,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 1934, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 1761, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 485, 485, 485, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 143, 0, 0, 0,
	0, 0, 697, 0, 0, 0, 1033, 1033, 1033, 137,
	0, 0, 138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 697, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1147,
	0, 0, 0, 0, 1147, 485, 485, 485, 485, 485,
	0, 0, 0, 0, 0, 0, 0, 2076, 0, 0,
	0, 1870, 485, 1367, 0, 485, 0, 0, 485, 2085,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 485, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 485, 0, 0, 0, 1928, 0, 0,
	0, 0, 0, 1147, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 1614, 0, 0, 0, 0, 485, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 1965, 1966,
	1967, 1968, 1969, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1461, 1975, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1983, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 485, 0,
	0, 485, 485, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 2108,
	0, 0, 0, 0, 604, 611, 612, 613, 614, 615,
	605, 607, 0, 0, 0, 606, 0, 0, 609, 616,
	617, 0, 0, 0, 0, 0, 2127, 0, 0, 0,
	0, 0, 0, 0, 1367, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2139, 0, 0, 0, 0,
	0, 0, 1147, 0, 0, 2143, 0, 0, 0, 0,
	0, 2100, 2101, 0, 0, 0, 0, 0, 0, 2154,
	0, 0, 2157, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 0, 0, 0, 0, 0, 0,
	0, 0, 2192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	1804, 0, 0, 0, 0, 604, 611, 612, 613, 614,
	615, 605, 607, 0, 0, 0, 606, 1819, 0, 609,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 485, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 1850, 0, 0, 0, 0, 0, 0, 1147, 1869,
	0, 2259, 2100, 2101, 2260, 2261, 2262, 0, 0, 0,
	0, 0, 0, 0, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 595, 0, 0, 0, 596, 597, 0, 0, 0,
	598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1948, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1614, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2396, 0, 0, 0,
	0, 0, 2057, 0, 73, 0, 0, 1614, 1614, 1614,
	1614, 1614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1869, 0, 0, 1614, 0, 0,
	1614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2093, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2141, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2164, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2188, 2189, 2190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1614, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2057, 0, 73, 0,
	2057, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	840, 826, 409, 0, 774, 843, 744, 762, 853, 765,
	768, 808, 723, 787, 332, 759, 0, 748, 719, 754,
	720, 746, 776, 236, 743, 828, 791, 842, 288, 233,
	725, 749, 346, 764, 187, 810, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	849, 292, 797, 0, 394, 317, 0, 0, 0, 778,
	832, 785, 822, 773, 809, 733, 796, 844, 760, 805,
	845, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 2437, 0, 2438, 0, 0,
	0, 0, 2057, 0, 210, 0, 217, 756, 802, 839,
	757, 804, 231, 276, 238, 230, 413, 850, 831, 0,
	0, 202, 841, 780, 2391, 807, 0, 856, 718, 799,
	73, 721, 724, 852, 835, 752, 241, 0, 0, 0,
	0, 0, 0, 0, 777, 786, 819, 771, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 795, 0, 0,
	0, 729, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 775, 0, 0, 0, 732, 0,
	751, 820, 0, 716, 259, 726, 318, 0, 824, 834,
	772, 445, 838, 770, 769, 814, 730, 830, 763, 287,
	728, 284, 182, 198, 0, 761, 328, 368, 374, 829,
	747, 755, 222, 753, 372, 342, 430, 206, 249, 365,
	347, 370, 794, 812, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 1035, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 742, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 825, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 817, 855, 341, 373, 212, 432,
	393, 737, 741, 735, 736, 789, 790, 738, 846, 847,
	848, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	821, 731, 0, 739, 740, 0, 827, 836, 837, 857,
	793, 181, 195, 290, 851, 362, 252, 459, 439, 435,
	717, 734, 228, 745, 0, 0, 758, 766, 767, 779,
	781, 782, 783, 784, 314, 800, 801, 803, 811, 813,
	816, 818, 823, 833, 854, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 792, 798, 301, 246,
	264, 275, 806, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 788, 815, 297, 410, 411, 271, 840, 826,
	409, 0, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 332, 759, 0, 748, 719, 754, 720, 746,
	776, 236, 743, 828, 791, 842, 288, 233, 725, 749,
	346, 764, 187, 810, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 849, 292,
	797, 0, 394, 317, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 756, 802, 839, 757, 804,
	231, 276, 238, 230, 413, 850, 831, 0, 0, 202,
	841, 780, 0, 807, 0, 856, 718, 799, 0, 721,
	724, 852, 835, 752, 241, 0, 0, 0, 0, 0,
	0, 0, 777, 786, 819, 771, 0, 0, 0, 0,
	0, 2086, 0, 750, 0, 795, 0, 0, 0, 729,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 775, 0, 0, 0, 732, 0, 751, 820,
	0, 716, 259, 726, 318, 0, 824, 834, 772, 445,
	838, 770, 769, 814, 730, 830, 763, 287, 728, 284,
	182, 198, 0, 761, 328, 368, 374, 829, 747, 755,
	222, 753, 372, 342, 430, 206, 249, 365, 347, 370,
	794, 812, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 1035, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 742, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 825, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 817, 855, 341, 373, 212, 432, 393, 737,
	741, 735, 736, 789, 790, 738, 846, 847, 848, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 821, 731,
	0, 739, 740, 0, 827, 836, 837, 857, 793, 181,
	195, 290, 851, 362, 252, 459, 439, 435, 717, 734,
	228, 745, 0, 0, 758, 766, 767, 779, 781, 782,
	783, 784, 314, 800, 801, 803, 811, 813, 816, 818,
	823, 833, 854, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 792, 798, 301, 246, 264, 275,
	806, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	788, 815, 297, 410, 411, 271, 840, 826, 409, 0,
	774, 843, 744, 762, 853, 765, 768, 808, 723, 787,
	332, 759, 0, 748, 719, 754, 720, 746, 776, 236,
	743, 828, 791, 842, 288, 233, 725, 749, 346, 764,
	187, 810, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 849, 292, 797, 0,
	394, 317, 0, 0, 0, 778, 832, 785, 822, 773,
	809, 733, 796, 844, 760, 805, 845, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 756, 802, 839, 757, 804, 231, 276,
	238, 230, 413, 850, 831, 0, 0, 202, 841, 780,
	0, 807, 0, 856, 718, 799, 0, 721, 724, 852,
	835, 752, 241, 0, 0, 0, 0, 0, 0, 0,
	777, 786, 819, 771, 0, 0, 0, 0, 0, 2046,
	0, 750, 0, 795, 0, 0, 0, 729, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	775, 0, 0, 0, 732, 0, 751, 820, 0, 716,
	259, 726, 318, 0, 824, 834, 772, 445, 838, 770,
	769, 814, 730, 830, 763, 287, 728, 284, 182, 198,
	0, 761, 328, 368, 374, 829, 747, 755, 222, 753,
	372, 342, 430, 206, 249, 365, 347, 370, 794, 812,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	1035, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	742, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 825, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	817, 855, 341, 373, 212, 432, 393, 737, 741, 735,
	736, 789, 790, 738, 846, 847, 848, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 821, 731, 0, 739,
	740, 0, 827, 836, 837, 857, 793, 181, 195, 290,
	851, 362, 252, 459, 439, 435, 717, 734, 228, 745,
	0, 0, 758, 766, 767, 779, 781, 782, 783, 784,
	314, 800, 801, 803, 811, 813, 816, 818, 823, 833,
	854, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 792, 798, 301, 246, 264, 275, 806, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 788, 815,
	297, 410, 411, 271, 840, 826, 409, 0, 774, 843,
	744, 762, 853, 765, 768, 808, 723, 787, 332, 759,
	0, 748, 719, 754, 720, 746, 776, 236, 743, 828,
	791, 842, 288, 233, 725, 749, 346, 764, 187, 810,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 849, 292, 797, 0, 394, 317,
	0, 0, 0, 778, 832, 785, 822, 773, 809, 733,
	796, 844, 760, 805, 845, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 756, 802, 839, 757, 804, 231, 276, 238, 230,
	413, 850, 831, 0, 0, 202, 841, 780, 0, 807,
	0, 856, 718, 799, 0, 721, 724, 852, 835, 752,
	241, 0, 0, 0, 0, 0, 0, 0, 777, 786,
	819, 771, 0, 0, 0, 0, 0, 1602, 0, 750,
	0, 795, 0, 0, 0, 729, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 775, 0,
	0, 0, 732, 0, 751, 820, 0, 716, 259, 726,
	318, 0, 824, 834, 772, 445, 838, 770, 769, 814,
	730, 830, 763, 287, 728, 284, 182, 198, 0, 761,
	328, 368, 374, 829, 747, 755, 222, 753, 372, 342,
	430, 206, 249, 365, 347, 370, 794, 812, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 1035, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 742, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 825, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 817, 855,
	341, 373, 212, 432, 393, 737, 741, 735, 736, 789,
	790, 738, 846, 847, 848, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 821, 731, 0, 739, 740, 0,
	827, 836, 837, 857, 793, 181, 195, 290, 851, 362,
	252, 459, 439, 435, 717, 734, 228, 745, 0, 0,
	758, 766, 767, 779, 781, 782, 783, 784, 314, 800,
	801, 803, 811, 813, 816, 818, 823, 833, 854, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	792, 798, 301, 246, 264, 275, 806, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 788, 815, 297, 410,
	411, 271, 840, 826, 409, 0, 774, 843, 744, 762,
	853, 765, 768, 808, 723, 787, 332, 759, 0, 748,
	719, 754, 720, 746, 776, 236, 743, 828, 791, 842,
	288, 233, 725, 749, 346, 764, 187, 810, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 849, 292, 797, 0, 394, 317, 0, 0,
	0, 778, 832, 785, 822, 773, 809, 733, 796, 844,
	760, 805, 845, 278, 219, 186, 329, 395, 251, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 756,
	802, 839, 757, 804, 231, 276, 238, 230, 413, 850,
	831, 0, 0, 202, 841, 780, 0, 807, 0, 856,
	718, 799, 0, 721, 724, 852, 835, 752, 241, 0,
	0, 0, 0, 0, 0, 0, 777, 786, 819, 771,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 795,
	0, 0, 0, 729, 722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 0,
	732, 0, 751, 820, 0, 716, 259, 726, 318, 0,
	824, 834, 772, 445, 838, 770, 769, 814, 730, 830,
	763, 287, 728, 284, 182, 198, 0, 761, 328, 368,
	374, 829, 747, 755, 222, 753, 372, 342, 430, 206,
	249, 365, 347, 370, 794, 812, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 1035, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 742, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 825,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 817, 855, 341, 373,
	212, 432, 393, 737, 741, 735, 736, 789, 790, 738,
	846, 847, 848, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 821, 731, 0, 739, 740, 0, 827, 836,
	837, 857, 793, 181, 195, 290, 851, 362, 252, 459,
	439, 435, 717, 734, 228, 745, 0, 0, 758, 766,
	767, 779, 781, 782, 783, 784, 314, 800, 801, 803,
	811, 813, 816, 818, 823, 833, 854, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 792, 798,
	301, 246, 264, 275, 806, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 788, 815, 297, 410, 411, 271,
	840, 826, 409, 0, 774, 843, 744, 762, 853, 765,
	768, 808, 723, 787, 332, 759, 0, 748, 719, 754,
	720, 746, 776, 236, 743, 828, 791, 842, 288, 233,
	725, 749, 346, 764, 187, 810, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	849, 292, 797, 0, 394, 317, 0, 0, 0, 778,
	832, 785, 822, 773, 809, 733, 796, 844, 760, 805,
	845, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 756, 802, 839,
	757, 804, 231, 276, 238, 230, 413, 850, 831, 0,
	0, 202, 841, 780, 0, 807, 0, 856, 718, 799,
	0, 721, 724, 852, 835, 752, 241, 0, 0, 0,
	0, 0, 0, 0, 777, 786, 819, 771, 0, 0,
	0, 0, 0, 0, 0, 750, 0, 795, 0, 0,
	0, 729, 722, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 775, 0, 0, 0, 732, 0,
	751, 820, 0, 716, 259, 726, 318, 0, 824, 834,
	772, 445, 838, 770, 769, 814, 730, 830, 763, 287,
	728, 284, 182, 198, 0, 761, 328, 368, 374, 829,
	747, 755, 222, 753, 372, 342, 430, 206, 249, 365,
	347, 370, 794, 812, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 1035, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 742, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 825, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 817, 855, 341, 373, 212, 432,
	393, 737, 741, 735, 736, 789, 790, 738, 846, 847,
	848, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	821, 731, 0, 739, 740, 0, 827, 836, 837, 857,
	793, 181, 195, 290, 851, 362, 252, 459, 439, 435,
	717, 734, 228, 745, 0, 0, 758, 766, 767, 779,
	781, 782, 783, 784, 314, 800, 801, 803, 811, 813,
	816, 818, 823, 833, 854, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 792, 798, 301, 246,
	264, 275, 806, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 788, 815, 297, 410, 411, 271, 840, 826,
	409, 0, 774, 843, 744, 762, 853, 765, 768, 808,
	723, 787, 332, 759, 0, 748, 719, 754, 720, 746,
	776, 236, 743, 828, 791, 842, 288, 233, 725, 749,
	346, 764, 187, 810, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 849, 292,
	797, 0, 394, 317, 0, 0, 0, 778, 832, 785,
	822, 773, 809, 733, 796, 844, 760, 805, 845, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 756, 802, 839, 757, 804,
	231, 276, 238, 230, 413, 850, 831, 0, 0, 858,
	841, 780, 0, 807, 0, 856, 718, 799, 0, 721,
	724, 852, 835, 752, 241, 0, 0, 0, 0, 0,
	0, 0, 777, 786, 819, 771, 0, 0, 0, 0,
	0, 0, 0, 750, 0, 795, 0, 0, 0, 729,
	722, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 775, 0, 0, 0, 732, 0, 751, 820,
	0, 716, 259, 726, 318, 0, 824, 834, 772, 445,
	838, 770, 769, 814, 730, 830, 763, 287, 728, 284,
	182, 198, 0, 761, 328, 368, 374, 829, 747, 755,
	222, 753, 372, 342, 430, 206, 249, 365, 347, 370,
	794, 812, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 727, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 742, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 825, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 715, 709, 708,
	285, 294, 817, 855, 341, 373, 212, 432, 393, 737,
	741, 735, 736, 789, 790, 738, 846, 847, 848, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 821, 731,
	0, 739, 740, 0, 827, 836, 837, 857, 793, 181,
	195, 290, 851, 362, 252, 459, 439, 435, 717, 734,
	228, 745, 0, 0, 758, 766, 767, 779, 781, 782,
	783, 784, 314, 800, 801, 803, 811, 813, 816, 818,
	823, 833, 854, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 792, 798, 301, 246, 264, 275,
	806, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	788, 815, 297, 410, 411, 271, 840, 826, 409, 0,
	774, 843, 744, 762, 853, 765, 768, 808, 723, 787,
	332, 759, 0, 748, 719, 754, 720, 746, 776, 236,
	743, 828, 791, 842, 288, 233, 725, 749, 346, 764,
	187, 810, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 849, 292, 797, 0,
	394, 317, 0, 0, 0, 778, 832, 785, 822, 773,
	809, 733, 796, 844, 760, 805, 845, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 756, 802, 839, 757, 804, 231, 276,
	238, 230, 413, 850, 831, 0, 0, 858, 841, 780,
	0, 807, 0, 856, 718, 799, 0, 721, 724, 852,
	835, 752, 241, 0, 0, 0, 0, 0, 0, 0,
	777, 786, 819, 771, 0, 0, 0, 0, 0, 0,
	0, 750, 0, 795, 0, 0, 0, 729, 722, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	775, 0, 0, 0, 732, 0, 751, 820, 0, 716,
	259, 726, 318, 0, 824, 834, 772, 445, 838, 770,
	769, 814, 730, 830, 763, 287, 728, 284, 182, 198,
	0, 761, 328, 368, 374, 829, 747, 755, 222, 753,
	372, 342, 430, 206, 249, 365, 347, 370, 794, 812,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 1209, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	727, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	742, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 825, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 715, 709, 708, 285, 294,
	817, 855, 341, 373, 212, 432, 393, 737, 741, 735,
	736, 789, 790, 738, 846, 847, 848, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 821, 731, 0, 739,
	740, 0, 827, 836, 837, 857, 793, 181, 195, 290,
	851, 362, 252, 459, 439, 435, 717, 734, 228, 745,
	0, 0, 758, 766, 767, 779, 781, 782, 783, 784,
	314, 800, 801, 803, 811, 813, 816, 818, 823, 833,
	854, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 792, 798, 301, 246, 264, 275, 806, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 788, 815,
	297, 410, 411, 271, 840, 826, 409, 0, 774, 843,
	744, 762, 853, 765, 768, 808, 723, 787, 332, 759,
	0, 748, 719, 754, 720, 746, 776, 236, 743, 828,
	791, 842, 288, 233, 725, 749, 346, 764, 187, 810,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 849, 292, 797, 0, 394, 317,
	0, 0, 0, 778, 832, 785, 822, 773, 809, 733,
	796, 844, 760, 805, 845, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 756, 802, 839, 757, 804, 231, 276, 238, 230,
	413, 850, 831, 0, 0, 858, 841, 780, 0, 807,
	0, 856, 718, 799, 0, 721, 724, 852, 835, 752,
	241, 0, 0, 0, 0, 0, 0, 0, 777, 786,
	819, 771, 0, 0, 0, 0, 0, 0, 0, 750,
	0, 795, 0, 0, 0, 729, 722, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 775, 0,
	0, 0, 732, 0, 751, 820, 0, 716, 259, 726,
	318, 0, 824, 834, 772, 445, 838, 770, 769, 814,
	730, 830, 763, 287, 728, 284, 182, 198, 0, 761,
	328, 368, 374, 829, 747, 755, 222, 753, 372, 342,
	430, 206, 249, 365, 347, 370, 794, 812, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 706, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 727, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 742, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 825, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 715, 709, 708, 285, 294, 817, 855,
	341, 373, 212, 432, 393, 737, 741, 735, 736, 789,
	790, 738, 846, 847, 848, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 821, 731, 0, 739, 740, 0,
	827, 836, 837, 857, 793, 181, 195, 290, 851, 362,
	252, 459, 439, 435, 717, 734, 228, 745, 0, 0,
	758, 766, 767, 779, 781, 782, 783, 784, 314, 800,
	801, 803, 811, 813, 816, 818, 823, 833, 854, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	792, 798, 301, 246, 264, 275, 806, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 788, 815, 297, 410,
	411, 271, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 1552, 0, 561,
	0, 0, 0, 236, 566, 0, 0, 0, 288, 233,
	0, 1553, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	573, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 81, 0,
	0, 178, 179, 180, 604, 611, 612, 613, 614, 615,
	605, 607, 0, 0, 210, 606, 217, 582, 609, 616,
	617, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 544,
	558, 0, 572, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 556, 695, 0, 0, 0, 589, 0, 557,
	0, 0, 565, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 588, 0,
	0, 445, 0, 0, 586, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 595, 587, 577, 579, 596, 597, 574, 575, 578,
	598, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	590, 564, 563, 0, 570, 571, 0, 580, 581, 583,
	562, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 561,
	0, 0, 0, 236, 566, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	573, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 1626,
	0, 278, 219, 186, 329, 395, 251, 0, 81, 0,
	0, 178, 179, 180, 604, 611, 612, 613, 614, 615,
	605, 607, 0, 0, 210, 606, 217, 582, 609, 616,
	617, 1627, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 544,
	558, 0, 572, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 556, 0, 0, 0, 0, 589, 0, 557,
	0, 0, 565, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
	635, 636, 637, 638, 639, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 658, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 588, 0,
	0, 445, 0, 0, 586, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 595, 587, 577, 579, 596, 597, 574, 575, 578,
	598, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	590, 564, 563, 0, 570, 571, 0, 580, 581, 583,
	562, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 72, 409, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 604, 611, 612, 613, 614,
	615, 605, 607, 0, 0, 210, 606, 217, 582, 609,
	616, 617, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 589, 0,
	557, 0, 0, 565, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 588,
	0, 0, 445, 0, 0, 586, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 595, 587, 577, 579, 596, 597, 574, 575,
	578, 598, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 590, 564, 563, 0, 570, 571, 0, 580, 581,
	583, 562, 181, 195, 290, 80, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 604, 611, 612, 613, 614,
	615, 605, 607, 0, 0, 210, 606, 217, 582, 609,
	616, 617, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 589, 0,
	557, 0, 0, 565, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 588,
	0, 0, 445, 0, 0, 586, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 2431, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 595, 587, 577, 579, 596, 597, 574, 575,
	578, 598, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 590, 564, 563, 0, 570, 571, 0, 580, 581,
	583, 562, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 1177, 178, 179, 180, 604, 611, 612, 613, 614,
	615, 605, 607, 0, 0, 210, 606, 217, 582, 609,
	616, 617, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 589, 0,
	557, 0, 0, 565, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 588,
	0, 0, 445, 0, 0, 586, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 595, 587, 577, 579, 596, 597, 574, 575,
	578, 598, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 590, 564, 563, 0, 570, 571, 0, 580, 581,
	583, 562, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 604, 611, 612, 613, 614,
	615, 605, 607, 0, 0, 210, 606, 217, 582, 609,
	616, 617, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 695, 0, 0, 0, 589, 0,
	557, 0, 0, 565, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 588,
	0, 0, 445, 0, 0, 586, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 595, 587, 577, 579, 596, 597, 574, 575,
	578, 598, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 590, 564, 563, 0, 570, 571, 0, 580, 581,
	583, 562, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 604, 611, 612, 613, 614,
	615, 605, 607, 0, 0, 210, 606, 217, 582, 609,
	616, 617, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 589, 0,
	557, 0, 0, 565, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 588,
	0, 0, 445, 0, 0, 586, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 595, 587, 577, 579, 596, 597, 574, 575,
	578, 598, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 590, 564, 563, 0, 570, 571, 0, 580, 581,
	583, 562, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 604, 611, 612, 613, 614,
	615, 605, 607, 0, 0, 210, 606, 217, 582, 609,
	616, 617, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 589, 0,
	557, 0, 0, 565, 618, 619, 620, 621, 622, 623,
	624, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 635, 636, 637, 638, 639, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 650, 651, 652, 653,
	654, 655, 656, 657, 658, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 588,
	0, 0, 445, 0, 0, 586, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 595, 587, 577, 579, 596, 597, 574, 575,
	578, 598, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 590, 564, 563, 0, 570, 571, 0, 580, 581,
	583, 562, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 904, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 903, 445, 0, 0, 0, 0, 0, 900, 901,
	287, 866, 284, 182, 198, 894, 898, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 1197,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 1199, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 1066, 0, 1067, 1068,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 1142, 1145, 0, 0, 0,
	0, 1141, 1144, 0, 0, 210, 1140, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 72, 409, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	81, 0, 1177, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 80, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 72, 409, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 81, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 80, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 1574, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 1572, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 860, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 866, 284, 182, 198, 864, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 1574, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 1177, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 2294, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	1824, 0, 0, 0, 1825, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 1220, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1219, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 2403, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 2294, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 81, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 0, 409, 297, 410, 411,
	271, 1615, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1096, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 1459, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1340, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1338, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1336, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1334, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1332, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1328, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1326, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	1324, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 1301, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 1204, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 1043,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 677, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 536, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 535, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 483, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 0, 0, 297, 410,
	411, 271,
}

var yyPact = [...]int{
	3530, -1000, -381, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1725, 1754, -1000, -1000, -1000, -1000, 1801,
	-1000, 615, 1468, -1000, 1687, 2757, -1000, 33099, 347, -1000,
	32559, 345, 233, 33099, -1000, 97, -1000, 86, 33099, 90,
	32019, -1000, -1000, -294, 14196, 1627, -3, -8, 33099, -1000,
	1788, 1483, -1000, 273, -1000, -1000, -1000, -1000, -1000, -1000,
	31479, -1000, -1000, -1000, 1691, 1667, 1808, 539, 1635, -1000,
	1731, 1483, -1000, 14196, 1770, 1740, 13656, -1000, 13656, 310,
	-1000, -1000, 10409, -1000, -1000, 18518, 33099, 33099, 226, -1000,
	1687, -1000, -1000, 309, -1000, 220, 1408, -1000, 1407, -1000,
	559, 547, 256, 361, 359, 254, 252, 250, 249, 244,
	243, 235, 232, 248, -1000, 595, 595, -193, -195, 2049,
	289, 289, 289, 324, 1648, 1643, -1000, 618, -1000, 595,
	595, 277, 595, 595, 595, 595, 198, 195, 595, 595,
	595, 595, 595, 595, 595, 595, 595, 595, 595, 595,
	595, 595, 595, 245, 1687, 174, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33099, 109, 33099, -1000, 448, 33099, 706, 706, 1,
	706, 706, 706, 706, 104, 503, -11, -1000, 92, 183,
	88, 176, 668, 112, 117, -1000, -1000, 170, 668, 1121,
	560, 85, -1000, 706, 8217, 8217, 8217, -1000, 1669, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 320, -1000, -1000,
	-1000, -1000, 33099, 30939, 298, 605, -1000, -1000, -1000, 118,
	-1000, -1000, 1226, 733, 14196, 1244, -1000, 1515, 502, -1000,
	-1000, -1000, -1000, -1000, 400, 14736, 14736, 14736, 14736, -1000,
	-1000, 1415, 1415, 1415, 1415, 14736, 1415, 14736, 1415, 1415,
	1415, 1415, 14196, 1415, 1415, 1415, -1000, 1415, 1415, 1415,
	1415, 1415, 1415, 1415, 1415, 447, 1415, 1415, 1415, 1415,
	1415, -1000, -1000, -1000, -1000, 1415, 1415, 1415, 1415, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 16356, -1000,
	12036, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	33099, -1000, 1415, 110, 1731, 1483, -1000, 1788, 1760, 273,
	-1000, 1692, 1306, 1233, 1033, 1483, 1397, 33099, -1000, 1425,
	-1000, -1000, -1000, 1559, 1083, 1116, -1000, -1000, -1000, -1000,
	970, 14196, -1000, -1000, 1797, -1000, 15816, 444, 806, 1796,
	30399, -1000, 310, 310, 1401, 9861, -73, -1000, -1000, -1000,
	603, 20678, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1669, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1395,
	33099, -1000, -1000, 2349, 1047, -1000, 1467, -1000, 1391, -1000,
	1432, 1475, 344, 1047, 339, 335, 334, -1000, -114, -1000,
	-1000, -1000, -1000, -1000, 595, 595, 236, 2757, 4410, -1000,
	-1000, -1000, 29859, 1466, 1047, -1000, 1465, -1000, 722, 408,
	425, 425, 1047, -1000, -1000, 33099, 1047, 720, 684, 33099,
	33099, -1000, 29319, -1000, 28779, 28239, 999, 33099, 27699, 27159,
	26619, 26079, 25539, -1000, 1527, -1000, 1464, -1000, -1000, -1000,
	33099, 33099, 33099, 253, -1000, -1000, 33099, 1047, -1000, -1000,
	997, 987, 595, 595, 985, 1109, 1107, 1106, 595, 595,
	980, 1103, 22838, 177, 974, 971, 966, 1003, 1100, 173,
	967, 883, 956, 33099, 1463, 33099, -1000, 164, 537, 302,
	601, 1687, 1612, 1400, 318, 341, 1047, 295, 295, -1000,
	8765, -1000, -1000, 1098, 14196, -1000, 692, 668, 668, -1000,
	-1000, -1000, -1000, -1000, -1000, 706, 33099, 692, -1000, -1000,
	-1000, 668, 706, 33099, 706, 706, 706, 706, 668, 668,
	668, 706, 33099, 33099, 33099, 33099, 33099, 33099, 33099, 33099,
	33099, 8217, 8217, 8217, 560, 706, -302, -1000, 1096, -1000,
	1507, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 87,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -103,
	1399, 24999, -1000, -303, -306, -307, -316, -1000, -1000, -1000,
	-318, -320, -1000, -1000, -1000, 14196, 14196, 14196, 14196, -1000,
	854, 14736, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 912,
	683, 14736, 14736, 14736, 14736, 14736, 14736, 14736, 14736, 14736,
	14736, 14736, 14736, 14736, 14736, 14736, 718, 1089, 1088, 502,
	502, 502, 502, -1000, 13656, 14196, 14196, 502, -1000, 1047,
	24459, 13656, 13656, 14196, 1664, 613, 733, 33099, -1000, 1033,
	-1000, -1000, -1000, 907, -1000, 33099, 33099, 1070, 14196, 10955,
	8765, 13656, 13656, 13656, 13656, 13656, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 426, 1211, 1231,
	1362, -1000, 1398, -1000, -170, 17978, 14196, 1087, -1000, -1000,
	-1000, 1731, -1000, 1731, 1211, 1658, 1578, 13656, -1000, -1000,
	1658, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1234,
	-1000, 33099, 1397, 1719, 33099, 1557, 1086, 253, -1000, 14196,
	14196, 1366, -1000, 880, 33099, -1000, -1000, 23919, -1000, -1000,
	7669, -1000, 33099, 229, 33099, -1000, 22298, 23379, 9313, -73,
	-1000, 9313, 1267, -1000, -30, -37, 11495, 504, -1000, -1000,
	-1000, 2049, 15276, 1198, 1634, 33, -1000, -1000, -1000, 1432,
	-1000, 1432, 1432, 1432, 1432, 253, 253, 253, 253, -1000,
	-1000, -1000, -1000, -1000, 1458, 1453, -1000, 1432, 1432, 1432,
	1432, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1441, 1441,
	1441, 1433, 1433, 274, -1000, 14196, 202, 33099, 1699, 939,
	164, 307, 1489, 1047, 1047, 1047, 307, -1000, 1168, 1160,
	-1000, 1351, -1000, -1000, 1769, -1000, -1000, 509, 753, 748,
	453, 33099, 122, 225, -1000, 283, -1000, 33099, 1047, 681,
	425, 1047, -1000, 1047, -1000, -1000, -1000, -1000, -1000, 1047,
	1346, -1000, 1406, 767, 741, 752, 736, 1346, -1000, -1000,
	-133, 1346, -1000, 1346, -1000, 1346, -1000, 1346, -1000, 1346,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 554, 33099,
	122, 718, -1000, 314, -1000, -1000, 718, 718, -1000, -1000,
	-1000, -1000, 1084, 1067, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -359, 33099, -1000, 157, 596, 208, 242, 209, 33099,
	105, 1722, 130, 190, 33099, 33099, 295, 1505, 33099, 1703,
	33099, -1000, -1000, -1000, -1000, 733, 33099, -1000, -1000, 706,
	706, -1000, -1000, 33099, 706, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 706, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 33099, 33099, -1000, -1000, -1000, -1000, -1000, 138, -32,
	251, -1000, -1000, -1000, -1000, -1000, 1726, -1000, 733, 669,
	648, -1000, -1000, -1000, 823, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 912, 14736, 14736, 14736, 1924, 350, 796, 1123,
	1015, 739, 739, 749, 749, 516, 516, 516, 516, 516,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1319, -1000, 983,
	747, 1033, -1000, 1319, 1319, 942, 13656, -1000, -1000, 642,
	-1000, 14196, 1033, -1000, -1000, 1033, 1308, 1284, 1795, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	953, 1033, 13656, 13656, 1279, 1415, 420, -1000, 1319, 1033,
	1033, 1319, 1319, 8765, 1033, -1000, 33099, -1000, -291, -1000,
	-71, 467, 1415, -1000, 22838, 1033, 1226, -1000, -1000, -1000,
	-1000, -1000, 20138, 1417, 1658, -1000, -1000, 1415, 1343, -1000,
	-1000, 253, 15, 794, 733, 733, 14196, -1000, -1000, -1000,
	-1000, -1000, -1000, 410, 1779, 272, 1415, -1000, 1287, 1555,
	-1000, -1000, -1000, 1718, 17438, 33099, 1403, 1348, -1000, 397,
	-1000, 1267, -73, -64, -1000, -1000, -1000, -1000, 733, -1000,
	1114, 231, 288, -1000, 282, -1000, -1000, -1000, -1000, 676,
	1717, 1632, 22, -1000, -1000, -1000, 253, 253, -1000, -1000,
	-1000, -1000, -1000, -1000, 1063, 1063, -1000, -1000, -1000, -1000,
	-1000, 920, -1000, -1000, -1000, 913, -1000, -1000, 1061, 1523,
	202, -1000, -1000, 595, 1048, 1637, 33099, -1000, -1000, 1194,
	157, 33099, 636, 1504, -1000, 1489, 1489, 1489, 33099, -1000,
	-1000, -1000, -1000, 3401, 33099, 1341, -1000, 120, -1000, 1146,
	33099, -1000, 1337, 1439, 1047, 1047, -1000, -1000, -1000, 33099,
	1415, -1000, -1000, -1000, -1000, 331, 1680, 1668, 122, 120,
	504, 1047, -1000, -1000, -1000, -1000, -1000, -362, 1323, 316,
	119, 224, 33099, 33099, 33099, 33099, 33099, 474, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 180, 313, -1000, 33099,
	33099, 439, -1000, -1000, -1000, 668, -1000, -1000, 668, -1000,
	-1000, -1000, -1000, -1000, 1661, 33099, -33, -335, -1000, -328,
	-1000, -1000, -1000, -1000, 1382, 322, 796, 14736, 14736, 13656,
	-127, 218, 218, 718, -1000, -1000, -1000, 14196, 14196, 1247,
	571, -1000, 14196, 721, -1000, -1000, 14196, 14196, 14196, -1000,
	213, -1000, 1319, 1319, 13656, 8765, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 333, 332, 329, 33099,
	-1000, -1000, 1751, -1000, 1594, 1590, 1793, 1779, -1000, 22298,
	1658, -1000, -1000, 33099, -286, -1000, 1609, 1592, -1000, -1000,
	-1000, -1000, 7121, 1731, 14196, 1503, 33099, 1415, -1000, 16897,
	33099, 33099, 22298, 22298, 22298, 22298, 22298, -1000, 1541, 1538,
	-1000, 1545, 1518, 1563, 33099, -1000, 1317, 1033, 1760, 17438,
	19058, 1402, 22298, -1000, -1000, 22298, 33099, 6573, -1000, -1000,
	-51, -58, -1000, -1000, -1000, -1000, 1768, 2049, -1000, -1000,
	-1000, -1000, 770, 5115, 1806, -1000, 1039, -1000, 998, -1000,
	679, 672, -1000, 33099, 1438, -1000, -1000, -1000, -1000, -1000,
	1314, -1000, 1312, 1265, 1310, 100, -1000, 1469, 1660, 595,
	595, -1000, 906, -1000, 1047, -1000, -1000, 311, -1000, 1702,
	33099, 1502, 1500, 1498, -1000, 1765, 1257, 33099, -1000, -1000,
	33099, -1000, 1589, 202, 33099, -1000, -1000, -1000, 225, 33099,
	-1000, 5276, 120, -1000, -1000, -1000, -1000, -1000, -1000, 33099,
	158, -1000, 1434, 1126, -1000, 1482, -1000, -1000, -1000, -1000,
	114, 207, -1000, 33099, 417, 1523, 33099, -1000, -1000, -1000,
	706, 706, -1000, -1000, 1657, -1000, 1047, 14736, 14736, -1000,
	502, -1000, 1415, 1033, 1432, 1432, -1000, 1432, 1433, -1000,
	1432, 77, 1432, 65, 1033, 1033, 851, 840, -121, -1000,
	733, 14196, 1032, 888, 865, 1429, -1000, -1000, -1000, -1000,
	1033, -1000, 1415, 1415, 1415, 1302, 33099, -1000, -1000, -1000,
	-1000, 1779, 1777, 1259, -1000, -1000, 15, 330, -1000, 1625,
	1592, -1000, 1763, 1605, 1762, -1000, -1000, -1000, 733, -1000,
	1689, 1239, -1000, 589, 1221, -1000, -1000, 13116, 1304, 1587,
	376, 1302, 1435, 1555, 1494, 1497, 1525, -1000, -1000, -1000,
	-1000, 1524, -1000, 1520, -1000, -1000, 1425, -1000, -1000, 1231,
	229, 22298, 1430, 1430, -1000, 365, -1000, -1000, -1000, -1000,
	-370, -1000, -1000, 14196, -1000, -1000, -1000, -1000, -1000, -1000,
	963, 963, 373, -1000, -1000, -1000, -1000, -1000, 1428, 14196,
	253, 1031, 253, 891, -1000, 875, -1000, -1000, -231, -1000,
	-1000, 1459, 1484, -1000, -1000, 33099, -1000, -1000, 33099, 33099,
	33099, 33099, -1000, -1000, 214, -1000, 1300, 1289, -1000, -150,
	-1000, 14196, -1000, 1425, -1000, -1000, -1000, 1141, -1000, -136,
	33099, 33099, 33099, 33099, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 502, 14736, -1000, -1000, 315, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 14196, -1000, 14196, -1000,
	1731, 1030, 733, 14196, 14196, -1000, 873, -1000, 19598, 21758,
	21758, 19058, -1000, 1777, 1753, 1758, 1599, 1601, 1601, 1625,
	-1000, 1757, 1752, -1000, 1029, 1750, 1024, 665, -1000, 33099,
	14196, 1415, -1000, 230, 33099, 1415, 33099, -1000, 1772, -1000,
	-1000, 14196, 1427, -1000, 14196, -1000, -1000, -1000, -1000, -1000,
	1779, 1430, -1000, -1000, 527, 53, 279, -1000, -1000, -1000,
	865, -1000, -1000, -1000, 33099, 1028, -1000, -1000, -1000, 1139,
	1137, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1425,
	-1000, -1000, -1000, 1257, 212, 237, -1000, 225, -1000, -196,
	-197, 865, 1709, -1000, -1000, 8765, -1000, -1000, 1424, 1487,
	-1000, 267, -1000, -1000, 865, 865, 1033, -1000, 865, 865,
	1134, 1282, -1000, -1000, -1000, 1282, 1282, 467, 1753, -1000,
	14196, 14196, 1595, 878, -1000, -1000, -1000, -1000, 1022, 1012,
	-1000, 1010, -1000, 1805, -1000, 733, -1000, 1415, -1000, 363,
	1221, -1000, 1731, 733, 33099, 733, 1772, -1000, 1419, 1440,
	-365, 14196, 1416, -1000, 1263, -1000, -1000, -1000, 1708, 1415,
	-1000, -1000, -1000, -1000, -1000, 273, 1252, -1000, 583, 33099,
	33099, 1033, 221, -147, -1000, -1000, -1000, -1000, -1000, 1033,
	21218, -1000, -1000, -1000, -1000, -1000, 733, 1226, -1000, 850,
	-1000, -1000, -1000, -1000, -1000, 33099, 1221, 33099, -1000, 1261,
	1731, 14196, 1414, 555, -376, 842, 1019, 33099, 1496, 759,
	273, 12576, -135, 8765, 6025, 1216, -1000, -1000, 1553, -131,
	-179, -1000, -1000, -1000, -1000, -1000, 1161, -1000, -1000, -1000,
	976, 33099, 822, 1307, 1747, -1000, -1000, 1213, 1485, -1000,
	1786, -1000, -1000, -1000, 765, 890, -1000, -1000, -1000, -135,
	865, 1033, -1000, -50, -1000, -1000, -1000, -1000, -1000, 1482,
	-1000, 1546, -1000, -365, 1203, -1000, -1000, 225, -372, -1000,
	-1000, 1804, 570, 570, -1000, -1000, -1000, -1000, -1000, 265,
	-1000, -1000, -136, -143, -376, -365, 1197, 52, -1000, -1000,
	-1000, 247, 926, -1000, 160, -1000, -155, 1307, -376, -1000,
	1411, 1440, -1000, -1000, -1000, -1000, -189, -1000, 1307, 14196,
	1232, -1000, -1000, 809, 33099, -378, 1130, -1000, 817, -378,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 9, 2116, 5, 2, 4, 2115, 18, 78, 169,
	22, 176, 83, 2114, 2112, 2109, 2107, 191, 190, 188,
	2105, 2104, 2102, 2099, 2098, 2094, 2093, 2092, 2090, 2089,
	185, 146, 161, 2086, 2085, 2084, 101, 163, 73, 72,
	165, 2083, 2081, 55, 2080, 2079, 2065, 159, 153, 662,
	2064, 156, 94, 2063, 2062, 2061, 2060, 2058, 2055, 2053,
	2052, 2050, 2049, 2044, 2043, 2042, 2041, 259, 2040, 2039,
	12, 2036, 58, 2035, 2034, 2032, 2030, 2029, 8, 2028,
	2026, 2025, 2024, 127, 2018, 2015, 2014, 189, 2012, 2010,
	194, 87, 99, 2009, 2007, 88, 164, 2002, 96, 131,
	2001, 2000, 1, 1999, 70, 71, 1998, 148, 57, 65,
	40, 1997, 1996, 1995, 74, 60, 1994, 86, 45, 1993,
	93, 85, 1989, 46, 1985, 1984, 113, 1983, 1982, 1981,
	77, 1980, 1979, 3295, 1978, 76, 117, 29, 34, 1976,
	1973, 1972, 1971, 1967, 42, 1963, 1958, 1956, 125, 15,
	1955, 21, 37, 32, 114, 1954, 62, 63, 1952, 120,
	1951, 1947, 36, 23, 31, 1943, 27, 111, 137, 25,
	100, 123, 1937, 1936, 39, 50, 1935, 1934, 1932, 1930,
	1929, 1927, 47, 1926, 35, 1924, 180, 1923, 17, 33,
	49, 43, 124, 44, 20, 1922, 160, 1920, 38, 155,
	116, 149, 1916, 1915, 1911, 145, 223, 1910, 1908, 75,
	150, 130, 133, 1907, 231, 1906, 1905, 79, 1504, 1858,
	16, 144, 1903, 1902, 3042, 126, 121, 41, 1901, 134,
	1900, 1898, 1897, 166, 147, 97, 879, 91, 1896, 1895,
	1894, 1891, 1889, 1887, 1886, 105, 167, 56, 89, 143,
	52, 1884, 1883, 1882, 104, 68, 1880, 142, 138, 109,
	140, 1867, 151, 128, 122, 1866, 84, 1864, 1861, 1860,
	1852, 82, 1849, 1848, 1847, 1845, 141, 129, 102, 67,
	1844, 64, 115, 132, 136, 11, 3, 30, 162, 14,
	1842, 6, 0, 1841, 10, 154, 233, 139, 1840, 1839,
	7, 1837, 13, 1835, 1833, 118, 1832, 1831, 1829, 28,
	24, 26, 1826, 1825, 1824, 1823, 3804, 2275, 112, 1819,
	168,
}

//line sql.y:6011
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 314, 315, 315, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 292, 292, 292, 295, 295,
	28, 62, 30, 30, 29, 29, 32, 32, 31, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 15, 16, 11, 11, 17, 17,
	74, 74, 18, 19, 19, 19, 19, 318, 318, 128,
	128, 126, 126, 127, 127, 191, 191, 20, 21, 21,
	201, 201, 200, 200, 200, 202, 202, 202, 202, 236,
	236, 22, 22, 22, 22, 22, 88, 88, 294, 294,
	293, 291, 291, 290, 290, 289, 34, 35, 44, 44,
	44, 44, 45, 46, 296, 296, 267, 50, 50, 49,
	49, 49, 49, 51, 51, 48, 48, 47, 47, 269,
	269, 256, 256, 268, 268, 268, 268, 268, 268, 268,
	255, 255, 101, 101, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 308, 308, 173, 173, 173,
	173, 173, 173, 106, 106, 114, 114, 114, 114, 104,
	104, 105, 103, 103, 103, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 312, 312,
	312, 312, 312, 312, 312, 312, 312, 312, 113, 113,
	110, 110, 110, 111, 111, 111, 309, 309, 309, 309,
	238, 238, 238, 238, 241, 241, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 240, 240, 240, 240, 240,
	242, 242, 242, 242, 242, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	244, 244, 244, 244, 244, 244, 244, 244, 254, 254,
	245, 245, 249, 249, 250, 250, 250, 251, 251, 251,
	252, 252, 247, 247, 247, 247, 248, 248, 248, 257,
	281, 281, 280, 280, 278, 278, 278, 278, 266, 266,
	275, 275, 275, 275, 275, 265, 265, 261, 261, 261,
	262, 262, 263, 263, 260, 260, 264, 264, 277, 277,
	276, 258, 258, 259, 259, 283, 310, 310, 310, 310,
	311, 311, 284, 301, 302, 300, 300, 300, 300, 300,
	72, 72, 72, 213, 213, 213, 273, 273, 272, 272,
	272, 274, 274, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 208, 208, 208, 299, 299, 299, 299, 299, 299,
	298, 298, 298, 270, 270, 270, 297, 297, 52, 52,
	157, 157, 41, 41, 41, 41, 41, 41, 40, 40,
	40, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 42, 42, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 76, 76, 76, 76, 78,
	78, 78, 286, 286, 1, 1, 5, 5, 2, 2,
	77, 77, 3, 3, 4, 4, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 253, 253,
	253, 285, 285, 287, 287, 24, 33, 33, 25, 25,
	25, 25, 26, 26, 53, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 303, 303, 207, 207, 215, 215, 206,
	206, 229, 229, 229, 209, 209, 209, 210, 210, 307,
	307, 307, 55, 55, 57, 57, 58, 59, 59, 231,
	231, 232, 232, 60, 61, 73, 73, 73, 73, 73,
	73, 75, 75, 75, 14, 14, 14, 14, 69, 69,
	69, 13, 13, 56, 56, 63, 304, 304, 305, 306,
	306, 306, 306, 64, 66, 27, 27, 27, 27, 27,
	27, 94, 94, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 89, 89, 89, 84, 84,
	319, 67, 68, 68, 87, 87, 87, 81, 81, 81,
	86, 86, 86, 91, 91, 93, 93, 93, 93, 93,
	95, 95, 95, 95, 95, 95, 95, 90, 90, 92,
	92, 92, 92, 222, 222, 222, 221, 221, 117, 117,
	119, 118, 118, 120, 120, 121, 121, 121, 155, 136,
	136, 189, 189, 188, 188, 190, 190, 190, 190, 192,
	192, 122, 122, 122, 122, 123, 123, 124, 124, 125,
	125, 230, 230, 227, 227, 227, 226, 226, 129, 129,
	129, 131, 130, 130, 130, 130, 132, 132, 134, 134,
	133, 133, 135, 137, 137, 137, 137, 137, 138, 138,
	102, 102, 102, 102, 102, 102, 112, 112, 112, 112,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 204, 204, 139,
	139, 147, 147, 147, 147, 140, 140, 140, 140, 140,
	140, 140, 148, 148, 148, 154, 149, 149, 145, 145,
	145, 145, 143, 143, 143, 143, 143, 143, 143, 143,
	143, 143, 144, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 313, 313, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 320, 320, 246, 246, 246,
	146, 146, 146, 146, 146, 85, 85, 85, 85, 85,
	235, 235, 235, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 160, 160, 82, 82,
	158, 158, 159, 161, 161, 156, 156, 156, 142, 142,
	142, 162, 162, 163, 163, 164, 164, 166, 165, 165,
	167, 168, 168, 168, 169, 169, 170, 170, 170, 43,
	43, 43, 43, 43, 38, 38, 38, 38, 39, 39,
	39, 96, 96, 96, 96, 98, 98, 97, 97, 70,
	70, 71, 71, 71, 99, 99, 100, 100, 100, 100,
	186, 186, 171, 171, 171, 178, 178, 178, 174, 174,
	176, 176, 176, 177, 177, 177, 175, 183, 183, 185,
	185, 184, 184, 180, 180, 181, 181, 182, 182, 182,
	179, 179, 141, 141, 141, 141, 141, 187, 187, 187,
	187, 193, 193, 151, 151, 153, 153, 152, 116, 194,
	194, 198, 195, 195, 199, 199, 199, 199, 199, 196,
	196, 197, 197, 223, 223, 223, 203, 203, 214, 214,
	211, 211, 212, 212, 205, 205, 216, 216, 216, 65,
	150, 150, 282, 282, 279, 219, 219, 220, 220, 224,
	224, 228, 228, 225, 225, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 316, 317, 233,
	234, 234, 234,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 1, 2, 1,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 1, 5, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 0, 2, 2, 2, 0, 2, 2, 5,
	0, 1, 1, 2, 1, 3, 2, 3, 0, 1,
	4, 3, 3, 4, 2, 0, 2, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 7, 5, 6, 6, 7,
	0, 1, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 1, 0, 1, 2, 0, 1, 1, 3,
	2, 1, 2, 3, 3, 4, 4, 3, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 4,
	5, 0, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	0, 2, 0, 1, 5, 1, 3, 7, 1, 3,
	3, 1, 2, 2, 2, 5, 5, 5, 6, 8,
	6, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 1, 3, 5, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 4, 4, 2, 11,
	3, 6, 8, 6, 6, 6, 13, 8, 6, 10,
	5, 5, 5, 5, 5, 0, 10, 11, 7, 0,
	8, 9, 0, 3, 0, 1, 0, 3, 1, 1,
	3, 4, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 8, 8, 3, 3, 5, 7, 7,
	6, 5, 3, 2, 3, 3, 3, 7, 3, 3,
	3, 3, 4, 7, 5, 2, 4, 4, 4, 4,
	4, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 2, 4, 2, 4, 5, 4,
	4, 4, 4, 4, 3, 3, 3, 5, 2, 3,
	3, 3, 3, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 1, 3, 2, 1,
	2, 1, 2, 2, 4, 3, 3, 6, 4, 7,
	6, 1, 3, 2, 2, 2, 2, 1, 1, 1,
	3, 2, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 2, 3, 4,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 1,
	2, 1, 3, 1, 1, 1, 4, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	3, 3, 3, 2, 3, 1, 3, 4, 3, 1,
	3, 4, 5, 6, 3, 4, 5, 6, 3, 4,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 2, 2, 2, 2, 1, 1, 2, 9, 6,
	6, 6, 2, 2, 3, 3, 3, 0, 3, 1,
	1, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 5,
	5, 6, 4, 4, 8, 6, 8, 6, 8, 5,
	4, 2, 2, 1, 2, 2, 2, 8, 8, 6,
	4, 9, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	4, 4, 4, 4, 4, 0, 3, 4, 7, 3,
	1, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 2,
	2, 0, 3, 0, 2, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 3, 3, 3, 0, 3, 1, 1, 0,
	4, 0, 1, 1, 0, 3, 1, 3, 2, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -314, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -53, -54, -55, -57,
	-58, -59, -60, -61, -13, -56, -27, -28, -62, -63,
	-64, -65, -66, -8, -7, -12, 7, 8, -74, -29,
	30, -34, -44, 203, -45, -35, 204, -46, 206, 205,
	241, 207, 234, 72, 281, 282, 284, 285, 286, 287,
	-75, 239, 240, 209, 34, 43, 31, 32, 35, 212,
	-9, -30, 6, -316, 9, 405, 236, 235, 26, -11,
	419, 83, -315, 553, -186, -171, 20, 31, 27, -170,
	-166, -87, -171, 18, 16, 5, -67, -319, -67, -67,
	10, 11, -67, -267, -269, 83, 140, 83, -67, -50,
	-49, -48, -47, -51, 29, -41, -42, -288, -40, -37,
	208, 205, 249, 107, 108, 241, 242, 243, 207, 225,
	240, 244, 239, 258, -36, 78, 31, 419, 422, -274,
	204, 210, 211, 406, 110, 109, 73, 206, -271, 331,
	523, -51, 525, 99, 101, 524, 42, 215, 526, 527,
	528, 529, 224, 530, 531, 532, 533, 539, 540, 541,
	542, 111, 5, -67, -228, -224, -292, -218, 86, 87,
	88, 416, 227, 450, 451, 274, 78, 39, 331, 523,
	281, 295, 289, 316, 308, 417, 452, 277, 228, 262,
	520, 306, 116, 525, 280, 453, 242, 336, 337, 338,
	99, 284, 373, 538, 279, 454, 536, 101, 524, 77,
	49, 42, 237, 304, 300, 526, 263, 455, 427, 256,
	110, 107, 545, 34, 298, 48, 28, 535, 109, 47,
	527, 131, 456, 528, 340, 321, 514, 46, 341, 243,
	457, 81, 421, 522, 342, 299, 343, 273, 534, 209,
	458, 506, 344, 345, 515, 459, 322, 326, 460, 365,
	346, 552, 50, 461, 462, 516, 108, 463, 76, 529,
	293, 294, 464, 271, 226, 367, 320, 224, 33, 347,
	418, 275, 56, 250, 368, 44, 324, 549, 43, 510,
	465, 513, 319, 315, 51, 466, 467, 468, 469, 530,
	318, 292, 314, 544, 439, 268, 531, 60, 211, 328,
	327, 329, 257, 364, 311, 470, 471, 472, 231, 79,
	473, 301, 19, 474, 475, 348, 264, 476, 54, 477,
	478, 371, 240, 479, 52, 532, 37, 245, 546, 533,
	480, 481, 482, 483, 484, 350, 485, 349, 323, 325,
	252, 351, 420, 486, 297, 244, 537, 487, 232, 521,
	246, 249, 239, 372, 233, 488, 489, 490, 491, 492,
	278, 493, 494, 285, 539, 41, 495, 496, 497, 498,
	272, 267, 366, 375, 59, 80, 333, 499, 519, 291,
	265, 500, 282, 53, 540, 541, 542, 259, 543, 7,
	550, 551, 353, 111, 269, 270, 45, 312, 251, 501,
	502, 302, 303, 317, 290, 313, 283, 507, 253, 354,
	241, 503, 374, 266, 334, 424, 258, 355, 518, 423,
	310, 307, 260, 504, 356, 216, 254, 255, 505, 508,
	357, 358, 276, 359, 360, 361, 362, 363, 261, 422,
	288, 305, 335, 386, 387, 388, 389, 390, 391, 392,
	393, 394, 395, 396, 397, 398, 399, 400, 401, 402,
	403, 214, -67, 214, -133, -224, 214, -196, 337, -215,
	339, 352, 347, 357, 345, -207, 348, 350, 252, -307,
	365, 214, 354, 203, 157, 340, 349, 358, 359, 276,
	360, 363, 261, -303, -292, 528, 543, 116, 309, 344,
	342, 366, 510, 362, 361, -224, 283, -231, 288, -219,
	-292, -218, 286, -133, -73, 506, 207, -233, -233, -89,
	510, 512, -149, -102, 124, -112, -115, -107, -108, -143,
	-144, -145, -146, -113, -156, 146, 147, 154, 125, -154,
	-116, 24, 415, 407, 406, 157, 29, 199, 66, 67,
	409, 410, 127, 55, 382, 383, -114, 378, 384, 379,
	412, 413, 102, 414, -219, -224, 219, 377, 213, 152,
	405, -109, -105, -7, -152, 376, 380, 381, 385, -292,
	-218, -111, -110, -139, 89, 95, 100, 96, -312, 103,
	-316, 90, 91, 92, 93, 94, 104, 105, 158, 159,
	160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
	170, 171, 172, 173, 174, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 42,
	353, 353, -133, -67, -164, -87, -166, -9, -7, -316,
	6, -67, -7, -8, -12, -30, -32, 446, -31, -224,
	-171, -186, 10, 142, 40, 48, -169, -170, -11, -7,
	-102, 17, 21, 22, -92, 148, -102, -224, -68, -92,
	-205, 218, -67, -67, -195, -236, 283, -199, 366, 365,
	-220, -197, -219, -217, -196, 364, 208, 425, 123, 23,
	25, 126, 157, 17, 127, 35, 210, 309, 225, 156,
	221, 406, 203, 70, 426, 378, 379, 376, 382, 408,
	409, 377, 339, 29, 11, 428, 26, 235, 22, 36,
	150, 205, 130, 238, 24, 236, 102, 105, 431, 20,
	73, 230, 12, 223, 38, 14, 432, 433, 15, 219,
	218, 142, 215, 68, 9, 199, 27, 139, 64, 434,
	118, 435, 436, 437, 438, 66, 140, 18, 547, 380,
	381, 31, 511, 415, 247, 152, 71, 57, 512, 124,
	440, 441, 103, 442, 106, 74, 517, 120, 16, 69,
	40, 443, 248, 444, 220, 548, 445, 369, 446, 141,
	206, 405, 67, 447, 213, 352, 6, 411, 30, 234,
	222, 113, 65, 448, 214, 129, 412, 413, 217, 104,
	5, 117, 32, 10, 72, 75, 383, 384, 385, 55,
	112, 419, 128, 13, 449, 370, 122, 414, 116, -268,
	140, -255, -259, -219, 229, -284, 225, -133, -277, -276,
	-219, -88, -214, 215, 223, 222, 117, -296, 120, 269,
	377, 213, -47, -48, -196, 156, 246, 84, 84, -259,
	-258, -257, -297, 248, 229, -283, -275, 221, 230, -265,
	222, 223, -260, 215, 118, -297, -260, 220, 230, 248,
	248, 111, 248, 111, 248, 248, 248, 248, 248, 248,
	248, 248, 248, 245, -266, 132, -266, 423, 423, -271,
	-297, -297, -297, 217, 33, 33, -216, -260, 217, 23,
	-266, -266, -196, 156, -266, -266, -266, -266, 256, 256,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
	-266, -266, -266, -266, -266, 214, -296, -96, 363, 276,
	78, -49, 258, -33, -133, -214, 215, 216, -296, -133,
	200, -133, -209, 140, 13, -209, -206, 353, 351, 338,
	343, -209, -209, -209, -209, 259, 336, -261, 215, 33,
	226, 353, 259, 336, 259, 260, 259, 260, 346, 356,
	259, -229, 12, 142, 377, 341, 345, 252, 214, 253,
	216, 355, -292, 513, 260, -229, 90, -210, 140, 353,
	255, -209, -234, -316, -220, 309, -234, -234, 30, 217,
	-219, -69, -219, 90, -14, -10, -18, -17, -19, 132,
	-94, 353, -83, 157, 528, 514, 515, 516, 513, 350,
	521, 519, 517, 259, 518, 84, 120, 122, 123, -102,
	139, -140, 132, 133, 134, 135, 136, 137, 138, 142,
	124, 126, 140, 141, 121, 143, 144, 145, 146, 147,
	148, 149, 151, 150, 152, 153, 156, 201, 202, -108,
	-108, -108, -108, -154, -316, -316, -316, -108, -204, -316,
	-108, -316, -316, -316, -316, -160, -102, -316, -320, -316,
	-320, -320, -246, -316, -246, -316, -316, -316, -316, -316,
	200, -316, -316, -316, -316, -316, -246, -246, -246, -246,
	100, 95, 89, -156, 96, 90, -219, -224, -7, -8,
	-149, -233, -304, -305, -136, -133, -316, 276, -169, -11,
	-7, -164, -170, -166, -7, -67, -81, -93, 61, 62,
	-95, 22, 36, 65, 63, 21, -317, 85, -317, -186,
	-317, 84, -32, -189, 83, 59, 41, 90, 90, 84,
	19, -165, -167, -102, 12, -222, -221, 23, -219, 90,
	200, 98, 12, -134, 27, -133, -205, -205, 84, 283,
	-199, -236, -201, -200, 367, 369, 132, -223, -219, 90,
	29, 85, 84, -133, -238, -241, -243, -242, -244, -239,
	-240, 306, 307, 157, 310, 312, 313, 314, 315, 316,
	317, 318, 319, 320, 321, 30, 237, 302, 303, 304,
	305, 322, 323, 324, 325, 326, 327, 328, 329, 289,
	308, 417, 290, 291, 292, 293, 294, 295, 297, 298,
	299, 300, 301, -295, -292, 83, 85, 84, -245, 83,
	-96, 214, -292, 215, 215, 215, -67, 405, -266, -266,
	245, -40, -37, -288, 16, -36, -37, 208, 107, 108,
	205, 83, -255, 83, -264, -295, -292, 83, 118, 220,
	117, -263, -260, -263, -264, -292, -156, -292, 118, 118,
	-192, -219, -192, -192, 21, -192, 21, -192, 21, 92,
	-219, -192, 21, -192, 21, -192, 21, -192, 21, -192,
	21, 29, 76, 77, 29, 79, 80, 81, -156, -156,
	-255, -196, -133, -292, 92, 92, -266, -266, 92, 90,
	90, 90, -266, -266, 92, 90, -226, -224, 90, -298,
	231, 273, 275, 92, 92, 92, 92, 29, 90, -299,
	29, 535, 534, 536, 537, 538, 92, 29, 92, 29,
	92, -219, 83, -133, -99, 263, 203, 205, 208, 74,
	90, 277, 132, 42, 84, 217, 214, -292, -211, 219,
	-211, -225, -224, -217, 90, -102, -262, 12, 142, -229,
	-229, -209, -133, -262, -229, -209, -133, -209, -209, -209,
	-209, -229, -229, -229, -209, -224, -224, -133, -133, -133,
	-133, -133, -133, -133, -234, -234, -234, -210, -209, 513,
	90, 74, -232, 286, 320, 507, 508, 509, 84, 419,
	-126, -133, 513, 513, 513, 513, 513, 513, -102, -102,
	-102, -102, -147, 103, 124, 104, 105, -115, -148, -152,
	-154, 97, 142, 126, 140, 141, -107, -108, -107, -107,
	-107, -107, -107, -107, -107, -107, -107, -107, -107, -107,
	-107, -235, -292, 90, 157, 90, 90, -90, -92, -102,
	-102, -292, -219, -90, -90, -102, -86, 22, 36, -158,
	-159, 128, -156, -317, -317, 92, -219, -219, -80, -79,
	387, 388, 389, 390, 392, 393, 394, 397, 398, 402,
	403, 386, 404, 391, 396, 399, 400, 401, 395, 305,
	-102, -91, 22, 36, -90, -220, -225, -217, -90, -91,
	-91, -90, -90, 200, -186, -317, 84, -306, 369, 370,
	511, -227, 248, -226, 23, -150, -149, 90, -169, -169,
	61, 62, 57, -90, -95, -317, -31, 23, -188, -219,
	60, 90, -247, -196, -102, -102, 84, -168, 25, 26,
	-133, -221, 148, -225, -133, -191, 248, -133, -118, -120,
	-121, -122, -136, -155, -316, 12, -126, -127, -135, -224,
	-199, -201, 84, 368, 370, 371, 74, 106, -102, -248,
	156, -273, -272, -271, -255, -257, -258, -259, 85, -172,
	-101, 38, -251, 334, 333, -245, -245, -245, -245, -245,
	-247, -247, -247, -247, 83, 83, -245, -245, -245, -245,
	-249, 83, -249, -249, -250, 83, -250, -284, -102, -281,
	-280, -278, -279, 224, 99, 419, 75, -276, -168, 92,
	-99, -212, 219, -282, -279, -292, -292, -292, -212, -292,
	90, -292, 90, 84, 17, -256, -255, -52, 273, -287,
	248, -283, -277, -264, 118, -263, -264, -264, -292, 84,
	27, 111, 111, 111, 111, 419, 205, 30, -255, -52,
	-235, 217, -235, -235, 90, 90, -208, 543, -126, -98,
	265, 132, 254, 254, 214, 214, 267, -133, 278, 280,
	279, 277, 21, 266, 268, 270, 256, -133, -133, -211,
	74, -128, -133, 24, -224, -133, -209, -209, -133, -209,
	-209, -133, -219, -83, 369, 84, 419, 20, -84, 20,
	103, 104, 105, -148, -107, -108, -107, 123, 238, 84,
	-317, 23, 84, 75, -317, -317, -317, 84, 12, -90,
	-161, -159, 130, -102, -317, -317, 84, 84, 12, -317,
	23, -317, -90, -90, -316, 200, -317, -317, -317, -317,
	-317, -220, -305, 510, 370, -137, 72, 218, 73, -316,
	-226, -317, -142, -219, 92, 96, -171, -117, -119, 12,
	-95, -154, 85, 84, -247, -175, -180, -206, -292, 90,
	157, -167, 200, -138, 13, -141, 30, 55, -10, -316,
	-316, 30, 84, -129, -131, -130, -132, 64, 68, 70,
	65, 66, 67, 71, -230, 23, -118, -8, -7, -316,
	-133, -126, -318, 12, 75, -318, 84, 200, -200, -202,
	372, 369, 375, -292, 90, -76, 248, 84, -271, -259,
	-311, 103, 124, 29, 74, 331, 99, -309, 156, -310,
	220, 117, 118, 232, 23, 39, -252, 335, -247, -247,
	-254, 90, -254, 92, 92, 85, -43, -38, -39, 31,
	78, -278, -266, 90, 37, -219, 85, -98, -133, 124,
	74, -282, -282, -282, -224, 16, -188, 84, 85, -157,
	274, 85, -219, 85, 83, -264, -264, -219, -316, 214,
	29, 29, -52, -157, -248, -292, 545, 544, 85, 216,
	272, -100, 382, 90, 86, -133, -133, -133, -133, -133,
	208, 205, 257, 217, -126, -133, 84, -72, 233, 228,
	-229, -229, 31, -133, 369, 522, 520, 123, 238, -115,
	-108, -92, 416, -237, 157, 306, 237, 304, 300, 320,
	311, 333, 302, 334, -237, -235, -102, -102, -164, 131,
	-102, 129, -102, -102, -102, -313, 306, 157, -317, -317,
	-91, -220, 215, 215, 215, -192, -203, 20, 12, 55,
	55, -117, -138, -118, -95, -219, -178, 506, -183, 44,
	-181, -182, 45, -179, 46, 54, 148, -169, -102, -193,
	74, -194, -198, -156, -151, -153, -152, -316, -187, -317,
	-219, -192, -194, -120, -121, -121, -120, -121, 64, 64,
	64, 69, 64, 69, 64, -130, -224, -317, -317, -8,
	-227, 75, -118, -118, -135, -224, 148, 369, 373, 374,
	17, -271, 103, -316, -106, -114, -104, -103, -105, -109,
	146, 147, 10, 90, 90, -292, 118, 118, -133, 83,
	85, 84, 85, 84, 85, 84, -213, 456, 124, -39,
	-38, -266, -266, 92, -292, 216, 24, -133, 74, 74,
	74, 17, -255, -156, 55, -281, -188, -285, -287, -133,
	-104, -316, -157, -133, -97, 263, 271, 83, 87, -294,
	75, 254, 331, 254, -133, -72, -43, -133, -209, -209,
	31, -292, -115, -108, -316, -317, -245, -245, -245, -250,
	-245, 294, -245, 294, -317, -317, 84, -317, 20, -317,
	-82, 411, -102, 84, 84, -317, 83, -317, -316, -316,
	-316, -317, -133, -138, -162, 14, -175, 49, 312, -185,
	-184, 53, 45, -182, 17, 47, 17, 28, -193, 84,
	132, 84, -317, -317, 84, 55, 200, -317, -138, -124,
	-123, 74, 75, -125, 74, -123, 64, 64, -189, -317,
	-191, -118, -138, -138, 200, -1, -2, 547, 548, 549,
	-102, -110, -110, -144, 83, -102, -247, 90, -247, 92,
	92, 456, 29, 79, 80, 81, 29, 76, 77, -133,
	-133, -133, -133, -188, 250, 85, -317, 84, -253, 419,
	422, -102, -189, 85, -291, 419, -293, -219, -219, -219,
	-219, -107, -247, -292, -102, -102, -169, 90, -102, -102,
	92, -190, -317, -219, 220, -190, -190, -227, -162, -163,
	15, 17, -176, 51, -174, 50, -174, -184, 17, 17,
	90, 17, 90, 118, -198, -102, -153, 55, -10, -219,
	-151, -219, -164, -102, 83, -102, -138, -138, 552, 118,
	-77, 83, 338, -317, -188, 85, 85, 85, -189, 251,
	-310, -287, 423, 423, -317, 23, -290, -289, -220, 83,
	75, -85, 142, 419, -317, -317, -317, -317, -317, 85,
	84, -317, -317, -317, -137, -163, -102, -149, -177, 52,
	74, 106, 90, 90, 90, 10, -151, 200, -169, -188,
	-164, 83, -5, 78, -3, 546, -102, 83, 85, -173,
	23, -316, -10, 84, 132, -188, -133, -317, 417, 71,
	420, -317, -219, 220, 74, 106, -194, -219, 85, -169,
	-102, 83, 132, -78, 550, 92, 85, -188, -301, -302,
	74, -311, -308, 103, 124, 99, -309, 112, 113, -10,
	-102, 247, -70, 419, -289, -270, -220, 90, 92, 85,
	60, 418, 421, 85, -188, 92, -286, 83, 17, 85,
	-302, 74, 11, 10, 103, 90, -70, -317, -317, -71,
	262, 510, -294, 60, -3, 85, -285, -1, -300, 233,
	228, 231, 30, -300, 225, -291, 419, -78, -3, 85,
	552, 118, 227, 29, 103, 264, 420, -286, -78, 83,
	-5, 421, -286, -102, 83, 85, -188, -4, 551, 85,
	92, -4,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 700, 700, 700, 0,
	700, 0, 0, 700, -2, -2, 700, 1111, 0, 700,
	0, 0, -2, 633, 634, 0, 636, -2, 0, 0,
	645, 1559, 1559, 695, 0, 0, 0, 0, 0, 700,
	975, 45, 700, 0, 80, 81, 651, 652, 653, 60,
	0, 1557, 1, 3, 66, 70, 0, 0, 0, 53,
	984, 0, 73, 0, 0, 704, 0, 702, 0, 1094,
	700, 700, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 485, 445, 488, 443, 474,
	-2, 436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 448, 338, 338, 0, 0, -2,
	436, 436, 436, 0, 0, 0, 471, 1096, 391, 338,
	338, 0, 338, 338, 338, 338, 0, 0, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 1001, 143, 1112, 1109, 1110, 35, 36,
	37, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305,
	1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325,
	1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335,
	1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345,
	1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355,
	1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365,
	1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375,
	1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395,
	1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405,
	1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415,
	1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435,
	1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445,
	1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455,
	1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465,
	1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475,
	1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485,
	1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495,
	1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505,
	1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515,
	1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525,
	1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
	1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545,
	1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555,
	1556, 0, 1088, 0, 563, 790, 0, 624, 624, 0,
	624, 624, 624, 624, 0, 0, 0, 575, 0, 0,
	0, 0, 621, 0, 0, 594, 596, 0, 621, 0,
	627, 0, 608, 624, 1560, 1560, 1560, 1079, 0, 618,
	616, 630, 631, 613, 614, 632, 635, 0, 640, 643,
	1105, 1106, 0, 658, 44, 1337, 650, 663, 664, 0,
	696, 697, 40, 876, 0, 805, 809, 820, 833, 834,
	835, 836, 837, 839, 840, 0, 0, 0, 0, 845,
	846, 0, 0, 0, 0, 0, 857, 0, 0, 0,
	0, 0, 956, 0, 925, 925, 893, 925, 927, 927,
	0, 0, 0, 0, 965, 0, 0, 0, 0, 0,
	0, 248, 249, 875, 1068, 927, 927, 927, 927, -2,
	-2, 195, 196, 197, 198, 199, 200, 201, 0, 191,
	0, 253, 254, 250, 251, 252, 859, 860, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 1559,
	0, 673, 0, 0, 984, 0, 976, 975, 58, 0,
	700, -2, 0, 0, 0, 0, 42, 0, 47, 751,
	72, 71, 1020, 0, 0, 0, 54, 985, 62, 64,
	986, 0, 705, 706, 0, 729, 733, 0, 701, 0,
	0, 1095, 1094, 1094, 97, 0, 1502, 1072, -2, -2,
	0, 0, 1107, 1108, 1081, -2, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, -2, 0,
	0, 153, 154, 0, 38, 364, 0, 149, 0, 358,
	310, 1001, 0, 0, 0, 0, 0, 700, 0, 1089,
	134, 135, 141, 142, 338, 338, 0, 143, 143, 452,
	453, 454, 0, 0, -2, 362, 0, 437, 0, 0,
	352, 352, 356, 354, 355, 0, 0, 0, 0, 0,
	0, 465, 0, 466, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 547, 0, 339, 0, 483, 484, 392,
	0, 0, 0, 0, 463, 464, 0, 0, 1097, 1098,
	0, 0, 338, 338, 0, 0, 0, 0, 338, 338,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 1014, 0, 0,
	0, -2, 0, 555, 0, 0, 0, 1090, 1090, 562,
	0, 564, 565, 0, 0, 566, 0, 621, 621, 619,
	620, 568, 569, 570, 571, 624, 0, 0, 347, 348,
	349, 621, 624, 0, 624, 624, 624, 624, 621, 621,
	621, 624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1560, 1560, 1560, 627, 624, 0, 604, 0, 605,
	606, 609, 610, 1561, 1562, 1126, 611, 612, 1080, 641,
	644, 661, 659, 660, 662, 654, 655, 656, 657, 0,
	675, 676, 681, 0, 0, 0, 0, 687, 688, 689,
	0, 0, 692, 693, 694, 0, 0, 0, 0, 803,
	0, 0, 865, 866, 867, 868, 869, 870, 871, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 841,
	842, 843, 844, 847, 0, 0, 0, 852, 853, 0,
	0, 0, 0, 0, 710, 0, 957, 0, 891, 0,
	892, 894, 895, 0, 896, 0, 0, 0, 0, 713,
	0, 0, 713, 713, 0, 0, 185, 186, 187, 188,
	202, 203, 204, 205, 206, 255, 965, 0, 875, 0,
	0, 41, 665, 666, 0, 773, 1100, 0, 52, 61,
	63, 984, 56, 984, 0, 715, 0, 0, -2, -2,
	716, 722, 723, 724, 725, 726, 49, 1558, 50, 0,
	69, 0, 43, 0, 0, 0, 0, 322, 1023, 0,
	0, 977, 978, 981, 0, 730, 734, 0, 736, 737,
	0, 703, 0, 95, 0, 789, 0, 0, 0, 1502,
	1078, 0, 99, 100, 0, 0, 0, 326, 1083, 1084,
	1085, -2, 345, 0, -2, 317, 261, 262, 263, 310,
	265, 310, 310, 310, 310, 322, 322, 322, 322, 293,
	294, 295, 296, 297, 0, 0, 280, 310, 310, 310,
	310, 300, 301, 302, 303, 304, 305, 306, 307, 266,
	267, 268, 269, 270, 271, 272, 273, 274, 312, 312,
	312, 314, 314, 0, 39, 0, 330, 0, 981, 0,
	1014, 1092, 1102, 0, 0, 0, 1092, 117, 0, 0,
	486, 446, 475, 487, 0, 449, 450, -2, 0, 0,
	436, 0, 438, 0, 346, 0, -2, 0, 356, 0,
	352, 356, 353, 356, 344, 357, 467, 468, 469, 0,
	527, 759, 0, 0, 0, 0, 0, 533, 534, 535,
	0, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 476, 477, 478, 479, 480, 481, 482, 0, 0,
	438, 0, 472, 0, 393, 394, 0, 0, 397, 398,
	399, 400, 0, 0, 403, 404, 405, 776, 777, 406,
	430, 431, 432, 407, 408, 409, 410, 411, 412, 413,
	424, 425, 426, 427, 428, 429, 414, 415, 416, 417,
	418, 421, 0, 127, 1005, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1090, 0, 0, 0,
	0, 791, 1113, 1114, 625, 626, 0, 350, 351, 624,
	624, 572, 595, 0, 624, 576, 597, 577, 579, 578,
	580, 599, 600, 624, 583, 622, 623, 584, 585, 586,
	587, 588, 589, 590, 591, 592, 593, 601, 602, 603,
	628, 0, 0, 642, 646, 647, 648, 649, 0, 0,
	678, 91, 683, 684, 685, 686, 698, 691, 877, 800,
	801, 802, 804, 806, 0, 861, 863, 808, 810, 872,
	873, 874, 0, 0, 0, 0, 0, 814, 818, 821,
	822, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 838, 940, 941, 942, 855, 856, 0, 727, 0,
	0, 0, 854, 0, 0, 0, 0, 711, 712, 963,
	960, 0, 0, 926, 928, 0, 0, 0, 0, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	0, 0, 0, 0, 714, 966, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 1067, 0, 668, 669, 671,
	0, 793, 0, 774, 0, 0, 1101, 674, 55, 57,
	720, 721, 0, 738, 717, 51, 46, 0, 0, 753,
	1021, 322, 1043, 0, 987, 988, 0, 980, 982, 983,
	74, 735, 731, 0, 798, 0, 0, 788, 0, 741,
	743, 744, 745, 771, 0, 0, 0, 0, 93, 790,
	1073, 98, 0, 0, 103, 104, 1074, 1075, 1076, 1077,
	0, 505, -2, 388, 155, 157, 158, 159, 150, 370,
	0, 0, 320, 318, 319, 264, 322, 322, 287, 288,
	289, 290, 291, 292, 0, 0, 281, 282, 283, 284,
	275, 0, 276, 277, 278, 0, 279, 363, 0, 989,
	331, 332, 334, 338, 0, 0, 0, 359, 360, 0,
	1005, 0, 0, 0, 1103, 1102, 1102, 1102, 0, 145,
	146, 147, 148, 143, 0, 0, 151, 440, 439, 0,
	0, 361, 0, 0, 356, 356, 341, 342, 470, 0,
	0, 529, 530, 531, 532, 0, 0, 0, 438, 440,
	326, 0, 395, 396, 401, 402, 419, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 501,
	502, 503, 504, 1002, 1003, 1004, 0, 0, 556, 0,
	0, 380, 89, 1091, 561, 621, 582, 598, 621, 574,
	581, 607, 638, 682, 0, 0, 0, 0, 690, 0,
	807, 862, 864, 811, 0, 815, 819, 0, 0, 0,
	0, 0, 0, 0, 858, 882, 883, 0, 0, 975,
	0, 961, 0, 0, 890, 929, 0, 0, 0, 900,
	0, 878, 0, 0, 713, 0, 930, 931, 932, 933,
	934, 966, 667, 670, 672, 749, 0, 0, 0, 0,
	775, 1099, 0, 968, 0, 0, 738, 798, 739, 0,
	718, 48, 752, 0, 1025, 1024, 1037, 1050, 323, 324,
	325, 979, 0, 984, 0, 1061, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 0, 0, 778, 0, 0,
	781, 0, 0, 0, 0, 772, 0, 0, 0, 0,
	-2, 0, 0, 87, 88, 0, 0, 0, 101, 102,
	0, 0, 108, 327, 328, 136, 0, 143, 390, 156,
	160, 165, 0, 0, 0, 170, 0, 172, 0, 371,
	0, 257, 259, 0, 0, 163, 260, 321, 285, 286,
	0, 308, 0, 0, 0, 383, 113, 993, 992, 338,
	338, 333, 0, 336, 0, 1104, 311, 0, 126, 0,
	0, 0, 0, 0, 132, 0, 444, 0, 455, 456,
	0, 526, 0, 330, 0, 340, 343, 760, 0, 0,
	457, 0, 440, 461, 462, 473, 422, 423, 420, 0,
	0, 1015, 1016, 0, 1019, 118, 493, 495, 494, 498,
	0, 0, 491, 0, 380, 989, 0, 560, 381, 382,
	624, 624, 677, 92, 0, 680, 0, 0, 0, 812,
	816, 728, 0, 0, 310, 310, 946, 310, 314, 949,
	310, 951, 310, 954, 0, 0, 0, 0, 958, 889,
	964, 0, 0, 0, 0, 0, 902, 903, 879, 880,
	0, 967, 0, 0, 0, 0, 0, 1086, 1087, 969,
	970, 798, 971, 740, 719, 754, 1043, 0, 1036, 0,
	-2, 1045, 0, 0, 0, 1051, 732, 75, 799, 78,
	0, 1061, 1069, 0, 1052, 1063, 1065, 0, 0, 0,
	1057, 0, 798, 742, 767, 769, 0, 764, 779, 780,
	782, 0, 784, 0, 786, 787, 751, 747, 748, 0,
	95, 0, 798, 798, 94, 0, 792, 105, 106, 107,
	514, 389, 166, 0, 168, 183, 184, 189, 190, 192,
	0, 0, 0, 171, 173, 174, 256, 258, 0, 0,
	322, 0, 322, 0, 315, 0, 372, 384, 0, 990,
	991, 0, 0, 335, 337, 0, 1093, 128, 0, 0,
	0, 0, 152, 441, 0, 329, 0, 0, 551, 548,
	458, 0, 460, 751, 1006, 1007, 1008, 0, 1018, 121,
	0, 0, 0, 0, 557, 558, 559, 90, 567, 573,
	679, 699, 813, 817, 0, 849, 943, 322, 947, 948,
	950, 952, 953, 955, 850, 851, 0, 885, 0, 887,
	984, 0, 962, 0, 0, 899, 0, 881, 0, 0,
	0, 773, 59, 971, 973, 0, 1030, 1028, 1028, 1038,
	1039, 0, 0, 1046, 0, 0, 0, 0, 79, 0,
	0, 0, 1066, 0, 0, 0, 0, 96, 975, 761,
	768, 0, 0, 762, 0, 763, 783, 785, 746, -2,
	798, 798, 85, 86, 0, 0, 0, 515, 518, 519,
	0, 193, 194, 169, 0, 0, 298, 309, 299, 0,
	0, 385, 994, 995, 996, 997, 998, 999, 1000, 751,
	129, 130, 131, 447, 0, 0, 528, 0, 536, 0,
	0, 0, 0, 1017, 492, 0, 119, 120, 0, 0,
	497, 935, 944, 945, 0, 0, 0, 959, 0, 0,
	0, 0, 795, 755, 756, 0, 0, 793, 973, 77,
	0, 0, 1033, 0, 1026, 1029, 1027, 1040, 0, 0,
	1047, 0, 1049, 0, 1070, 1071, 1064, 0, 1056, 1059,
	1055, 1058, 984, 765, 0, 770, 975, 84, 0, 516,
	522, 0, 0, 167, 0, 177, 313, 316, 0, 0,
	365, 552, 549, 550, 459, 0, 122, 123, 0, 0,
	0, 0, 0, 0, 884, 886, 888, 897, 898, 0,
	0, 794, 796, 797, 750, 76, 974, 972, 1022, 0,
	1031, 1032, 1041, 1042, 1048, 0, 1054, 0, 82, 0,
	984, 0, 0, 0, 509, 0, 0, 0, 366, 370,
	0, 0, 1009, 0, 0, 0, 499, 848, 0, 0,
	0, 901, 757, 758, 1034, 1035, 1062, 1060, 766, 83,
	0, 0, 0, 512, 0, 523, 520, 0, 367, 368,
	0, 161, 178, 179, 0, 0, 182, 175, 176, 1009,
	0, 0, 489, 1011, 124, 125, 433, 434, 435, 118,
	936, 0, 939, 522, 0, 517, 508, 0, 514, 521,
	369, 0, 0, 0, 180, 181, 114, 553, 554, 0,
	1012, 1013, 121, 937, 509, 522, 0, 0, 373, 375,
	376, 0, 0, 374, 0, 496, 0, 512, 509, 513,
	0, 516, 377, 378, 379, 1010, 0, 506, 512, 0,
	0, 938, 507, 0, 0, 524, 0, 510, 0, 524,
	525, 511,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 553,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:463
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:468
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:469
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:473
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:506
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:516
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:520
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:525
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:529
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:535
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:541
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:547
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:551
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:556
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:560
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:566
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:570
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:576
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:582
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:586
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:590
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:613
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:624
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:630
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:637
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:643
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:650
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:654
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:660
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:664
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:668
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:672
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:676
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:682
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:695
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:722
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:729
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:735
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:743
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:747
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:755
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:767
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:779
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:783
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:789
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:795
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:799
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:803
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:807
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:812
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:813
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:817
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:827
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:831
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:837
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:850
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:856
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:862
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:866
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:872
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:876
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:882
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:886
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:890
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:896
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:900
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:904
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:908
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:914
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:918
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:924
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:937
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:946
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:950
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:957
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:961
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:966
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:970
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:981
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:986
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:992
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:997
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1009
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1016
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1023
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1028
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1033
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1038
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1045
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1052
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1063
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1070
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1074
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1080
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1084
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1092
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1098
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1102
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1108
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1112
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1118
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1122
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1129
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1133
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1139
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1149
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1154
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1159
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1163
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1176
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1182
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1188
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1200
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1209
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1213
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1219
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1225
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1230
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1235
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1240
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1245
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1250
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1259
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1266
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1270
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1275
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1290
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1296
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1301
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1308
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1315
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1319
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1323
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1327
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1338
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1345
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1349
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1355
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1359
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1363
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1367
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1371
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1375
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1379
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1384
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1388
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1392
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1396
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1400
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1407
		{
			yyVAL.str = Armscii8Str
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1411
		{
			yyVAL.str = ASCIIStr
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1415
		{
			yyVAL.str = Big5Str
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.str = UBinaryStr
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.str = Cp1250Str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1427
		{
			yyVAL.str = Cp1251Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = Cp1256Str
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = Cp1257Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = Cp850Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = Cp852Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.str = Cp866Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = Cp932Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = Dec8Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = EucjpmsStr
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = EuckrStr
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = Gb18030Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = Gb2312Str
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = GbkStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = Geostd8Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = GreekStr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = HebrewStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = Hp8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Keybcs2Str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = Koi8rStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Koi8uStr
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = Latin1Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = Latin2Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Latin5Str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Latin7Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = MacceStr
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = MacromanStr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = SjisStr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Swe7Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Tis620Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Ucs2Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = UjisStr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = Utf16Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = Utf16leStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Utf32Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Utf8Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Utf8mb4Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1577
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1581
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1585
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1596
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1600
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1606
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1610
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1614
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1618
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1624
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1640
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1650
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1654
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1658
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1662
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1684
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 276:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1696
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1724
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1728
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1738
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1742
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1746
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1750
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1758
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 299:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1835
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1840
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1849
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1854
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 313:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1858
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1866
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1876
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1884
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1888
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1892
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1897
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1901
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1906
		{
			yyVAL.str = ""
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1918
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1923
		{
			yyVAL.str = ""
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1927
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1931
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1938
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1943
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1947
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1953
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1963
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1967
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1972
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1976
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1982
		{
			yyVAL.str = ""
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1992
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1996
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2000
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2004
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2008
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyVAL.str = yyDollar[2].str
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2023
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.str = "key"
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = yyDollar[1].str
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = ""
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2076
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2080
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2086
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2092
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2096
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2102
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2106
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2112
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2118
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2122
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2126
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2130
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2139
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2145
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2151
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2157
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2163
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2167
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2171
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2175
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2179
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2184
		{
			yyVAL.str = ""
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2197
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2205
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2210
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2214
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2220
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2224
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2228
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2234
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2238
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2244
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2248
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2252
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2256
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2260
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2264
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2268
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2272
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2276
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2280
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2284
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2288
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2292
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2296
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2300
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2304
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2308
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2312
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2316
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2320
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2324
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2328
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2332
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2336
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2340
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2344
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2348
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2352
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = ""
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2388
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2397
		{
			yyVAL.str = ""
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2403
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2407
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2412
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2416
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2421
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2425
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2429
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2433
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 447:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2441
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2447
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2455
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2461
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2465
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2469
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2473
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2477
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2481
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2485
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2489
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2493
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2497
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2501
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2505
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2509
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2513
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2517
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2521
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2525
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2529
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2533
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2537
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2541
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2545
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2549
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2555
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2559
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2565
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2569
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2573
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2577
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2581
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2585
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2589
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2593
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2597
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2603
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2609
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2616
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2629
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2633
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2640
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2647
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2669
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2673
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2677
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2690
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2700
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2704
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2729
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2736
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2755
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2767
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2780
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2791
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2795
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2804
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2815
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2819
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2824
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2833
		{
			yyVAL.str = ""
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2853
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2857
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = ""
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 524:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2871
		{
			yyVAL.str = ""
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2875
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 526:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2881
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2885
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2889
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2893
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2897
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2901
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2905
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2909
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2913
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2917
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2921
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2925
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2929
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2933
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2937
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2941
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2945
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2949
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2953
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2957
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2961
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2965
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2970
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2974
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2978
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2985
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 553:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2995
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2999
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3005
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3011
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3015
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 558:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3021
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3025
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3044
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3048
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3053
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3067
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3083
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3087
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3107
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3119
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3123
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3135
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3139
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3143
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3147
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3151
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3155
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3163
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3167
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3179
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3187
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3191
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3195
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3199
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3203
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3208
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3216
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3229
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3252
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3256
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3260
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3276
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3280
		{
			yyVAL.str = "extended "
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3286
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3290
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3306
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3310
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3324
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3328
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3338
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3344
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3348
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3358
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3362
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3368
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3372
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3378
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3384
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3388
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3393
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3398
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3400
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3405
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3411
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3416
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3420
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3424
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3428
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3432
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3436
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.str = yyDollar[1].str
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.str = yyDollar[1].str
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = yyDollar[1].str
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3456
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3460
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3464
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3468
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3473
		{
			yyVAL.str = ""
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3477
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3481
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3487
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3491
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3497
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3501
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3507
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3513
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3517
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3523
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3529
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3533
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3537
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3541
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3547
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3553
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3559
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3563
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3567
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3571
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3575
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3579
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3585
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3627
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3639
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3644
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3648
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3657
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3661
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3666
		{
			setAllowComments(yylex, true)
		}
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3676
		{
			yyVAL.strs = nil
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3680
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3686
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3690
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3694
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3699
		{
			yyVAL.str = ""
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3703
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3707
		{
			yyVAL.str = SQLCacheStr
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3712
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3716
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3720
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3725
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3729
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3734
		{
			yyVAL.strs = nil
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3738
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3742
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3746
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3750
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3760
		{
			yyVAL.str = SQLCacheStr
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = DistinctStr
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = DistinctStr
		}
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3772
		{
			yyVAL.str = StraightJoinHint
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3776
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3780
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3786
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3790
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3796
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3800
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3804
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3808
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3813
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3817
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 735:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3828
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 738:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3833
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3837
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3843
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3849
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3853
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3863
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3867
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3871
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3877
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3883
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3887
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3892
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3896
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3902
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3906
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3912
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3916
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3920
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 758:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3924
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3930
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3934
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3947
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3951
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3955
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3959
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3965
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3967
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3971
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3973
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3979
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3984
		{
			yyVAL.empty = struct{}{}
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3987
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3995
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4002
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4008
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4012
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4016
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4022
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4028
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4032
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4036
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4040
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4046
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4050
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4060
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4064
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4070
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4074
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4080
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4089
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4093
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4097
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:4101
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4110
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4117
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4121
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4125
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4129
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4133
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4137
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4144
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4148
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4152
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4156
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4162
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4166
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4170
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4174
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4182
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4186
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4190
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4194
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4198
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4202
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4208
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4212
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4216
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4220
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4224
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4228
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4232
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4236
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4240
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4244
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4248
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4252
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4256
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4262
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4282
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4286
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4290
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4294
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4298
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4310
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4318
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4322
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4326
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4330
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4334
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4338
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4342
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4354
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4361
		{
			yyVAL.str = ""
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4371
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4375
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4382
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4386
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4390
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4394
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4400
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4404
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4408
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4412
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4416
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4420
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4424
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4430
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4434
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4438
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4445
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4451
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4455
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 878:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4465
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4469
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4473
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4477
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4487
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4491
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4495
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4499
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4503
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4507
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4511
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4515
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4519
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4534
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4544
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4548
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4553
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4557
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4561
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4565
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4569
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4573
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), Cast: yyDollar[5].str, Length: yyDollar[7].str}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4582
		{
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4584
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4588
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4592
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4596
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4600
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4604
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4608
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4612
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4616
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4620
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4624
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4630
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4634
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4638
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4642
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4646
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4650
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4654
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4658
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4662
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4676
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4680
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4690
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4694
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4698
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4712
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4716
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4720
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4724
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4728
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4734
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4738
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 943:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4748
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4752
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4756
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4760
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4764
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4768
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4774
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4778
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4782
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4786
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4790
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4794
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4798
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4803
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4807
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4812
		{
			yyVAL.str = string("")
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4816
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4822
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4826
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 962:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4832
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4837
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4841
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4847
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4851
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4855
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4861
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4870
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4874
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4880
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4884
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4893
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4898
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4902
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4908
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4914
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4918
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4924
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4929
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4933
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4937
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4942
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4946
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4952
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4956
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4960
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4965
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4969
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4973
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4977
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4981
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4988
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4992
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4996
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5000
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5006
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5010
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5014
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5019
		{
			yyVAL.str = ""
		}
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5023
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5027
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1004:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5031
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1005:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5036
		{
			yyVAL.str = ""
		}
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5040
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5046
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5050
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5055
		{
			yyVAL.str = ""
		}
	case 1010:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5059
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5064
		{
			yyVAL.str = "cascaded"
		}
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5068
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5072
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1014:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5077
		{
			yyVAL.str = ""
		}
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5081
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5087
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5091
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5095
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5099
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1020:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5105
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5109
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5115
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5119
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5123
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5128
		{
			yyVAL.str = ""
		}
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5132
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5136
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1028:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5141
		{
			yyVAL.str = ""
		}
	case 1029:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5145
		{
			yyVAL.str = " header"
		}
	case 1030:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5150
		{
			yyVAL.str = ""
		}
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5154
		{
			yyVAL.str = " manifest on"
		}
	case 1032:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5158
		{
			yyVAL.str = " manifest off"
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5163
		{
			yyVAL.str = ""
		}
	case 1034:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5167
		{
			yyVAL.str = " overwrite on"
		}
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5171
		{
			yyVAL.str = " overwrite off"
		}
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5177
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5182
		{
			yyVAL.str = ""
		}
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5186
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5196
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1041:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5202
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5206
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1043:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5211
		{
			yyVAL.str = ""
		}
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5215
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5221
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5225
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5231
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1048:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5235
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5239
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5244
		{
			yyVAL.str = ""
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5248
		{
			yyVAL.str = " optionally"
		}
	case 1052:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5261
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5265
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5269
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5273
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5277
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5283
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5287
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5291
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1060:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5295
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5304
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5310
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5314
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5320
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5324
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5330
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5345
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5349
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1071:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5355
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5361
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5365
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1074:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5371
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5375
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5379
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5383
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5387
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5395
		{
			yyVAL.str = "charset"
		}
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5405
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5409
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5413
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5422
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5424
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5427
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5429
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5432
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5434
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5437
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5439
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5442
		{
			yyVAL.empty = struct{}{}
		}
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5444
		{
			yyVAL.empty = struct{}{}
		}
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5446
		{
			yyVAL.empty = struct{}{}
		}
	case 1099:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5450
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5459
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5464
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5466
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5470
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5476
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5480
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5487
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5493
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5497
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5503
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5507
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5514
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5981
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5990
		{
			decNesting(yylex)
		}
	case 1559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5995
		{
			skipToEnd(yylex)
		}
	case 1560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6000
		{
			skipToEnd(yylex)
		}
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6004
		{
			skipToEnd(yylex)
		}
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6008
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
