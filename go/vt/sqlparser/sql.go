// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
	renameTablePairs       []*RenameTablePair
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const COMPRESSION = 57435
const NULL = 57436
const TRUE = 57437
const FALSE = 57438
const OFF = 57439
const DISCARD = 57440
const IMPORT = 57441
const ENABLE = 57442
const DISABLE = 57443
const TABLESPACE = 57444
const OR = 57445
const XOR = 57446
const AND = 57447
const NOT = 57448
const BETWEEN = 57449
const CASE = 57450
const WHEN = 57451
const THEN = 57452
const ELSE = 57453
const END = 57454
const LE = 57455
const GE = 57456
const NE = 57457
const NULL_SAFE_EQUAL = 57458
const IS = 57459
const LIKE = 57460
const REGEXP = 57461
const IN = 57462
const SHIFT_LEFT = 57463
const SHIFT_RIGHT = 57464
const DIV = 57465
const MOD = 57466
const UNARY = 57467
const COLLATE = 57468
const BINARY = 57469
const UNDERSCORE_BINARY = 57470
const UNDERSCORE_UTF8MB4 = 57471
const UNDERSCORE_UTF8 = 57472
const UNDERSCORE_LATIN1 = 57473
const INTERVAL = 57474
const JSON_EXTRACT_OP = 57475
const JSON_UNQUOTE_EXTRACT_OP = 57476
const CREATE = 57477
const ALTER = 57478
const DROP = 57479
const RENAME = 57480
const ANALYZE = 57481
const ADD = 57482
const FLUSH = 57483
const CHANGE = 57484
const MODIFY = 57485
const SCHEMA = 57486
const TABLE = 57487
const INDEX = 57488
const VIEW = 57489
const TO = 57490
const IGNORE = 57491
const IF = 57492
const UNIQUE = 57493
const PRIMARY = 57494
const COLUMN = 57495
const SPATIAL = 57496
const FULLTEXT = 57497
const KEY_BLOCK_SIZE = 57498
const CHECK = 57499
const INDEXES = 57500
const ACTION = 57501
const CASCADE = 57502
const CONSTRAINT = 57503
const FOREIGN = 57504
const NO = 57505
const REFERENCES = 57506
const RESTRICT = 57507
const SHOW = 57508
const DESCRIBE = 57509
const EXPLAIN = 57510
const DATE = 57511
const ESCAPE = 57512
const REPAIR = 57513
const OPTIMIZE = 57514
const TRUNCATE = 57515
const COALESCE = 57516
const EXCHANGE = 57517
const REBUILD = 57518
const PARTITIONING = 57519
const REMOVE = 57520
const MAXVALUE = 57521
const PARTITION = 57522
const REORGANIZE = 57523
const LESS = 57524
const THAN = 57525
const PROCEDURE = 57526
const TRIGGER = 57527
const VINDEX = 57528
const VINDEXES = 57529
const DIRECTORY = 57530
const NAME = 57531
const UPGRADE = 57532
const STATUS = 57533
const VARIABLES = 57534
const WARNINGS = 57535
const CASCADED = 57536
const DEFINER = 57537
const OPTION = 57538
const SQL = 57539
const UNDEFINED = 57540
const SEQUENCE = 57541
const MERGE = 57542
const TEMPTABLE = 57543
const INVOKER = 57544
const SECURITY = 57545
const FIRST = 57546
const AFTER = 57547
const LAST = 57548
const BEGIN = 57549
const START = 57550
const TRANSACTION = 57551
const COMMIT = 57552
const ROLLBACK = 57553
const SAVEPOINT = 57554
const RELEASE = 57555
const WORK = 57556
const BIT = 57557
const TINYINT = 57558
const SMALLINT = 57559
const MEDIUMINT = 57560
const INT = 57561
const INTEGER = 57562
const BIGINT = 57563
const INTNUM = 57564
const REAL = 57565
const DOUBLE = 57566
const FLOAT_TYPE = 57567
const DECIMAL = 57568
const NUMERIC = 57569
const TIME = 57570
const TIMESTAMP = 57571
const DATETIME = 57572
const YEAR = 57573
const CHAR = 57574
const VARCHAR = 57575
const BOOL = 57576
const CHARACTER = 57577
const VARBINARY = 57578
const NCHAR = 57579
const TEXT = 57580
const TINYTEXT = 57581
const MEDIUMTEXT = 57582
const LONGTEXT = 57583
const BLOB = 57584
const TINYBLOB = 57585
const MEDIUMBLOB = 57586
const LONGBLOB = 57587
const JSON = 57588
const ENUM = 57589
const GEOMETRY = 57590
const POINT = 57591
const LINESTRING = 57592
const POLYGON = 57593
const GEOMETRYCOLLECTION = 57594
const MULTIPOINT = 57595
const MULTILINESTRING = 57596
const MULTIPOLYGON = 57597
const NULLX = 57598
const AUTO_INCREMENT = 57599
const APPROXNUM = 57600
const SIGNED = 57601
const UNSIGNED = 57602
const ZEROFILL = 57603
const COLLATION = 57604
const DATABASES = 57605
const SCHEMAS = 57606
const TABLES = 57607
const VITESS_METADATA = 57608
const VSCHEMA = 57609
const FULL = 57610
const PROCESSLIST = 57611
const COLUMNS = 57612
const FIELDS = 57613
const ENGINES = 57614
const PLUGINS = 57615
const EXTENDED = 57616
const KEYSPACES = 57617
const VITESS_KEYSPACES = 57618
const VITESS_SHARDS = 57619
const VITESS_TABLETS = 57620
const CODE = 57621
const PRIVILEGES = 57622
const FUNCTION = 57623
const NAMES = 57624
const CHARSET = 57625
const GLOBAL = 57626
const SESSION = 57627
const ISOLATION = 57628
const LEVEL = 57629
const READ = 57630
const WRITE = 57631
const ONLY = 57632
const REPEATABLE = 57633
const COMMITTED = 57634
const UNCOMMITTED = 57635
const SERIALIZABLE = 57636
const CURRENT_TIMESTAMP = 57637
const DATABASE = 57638
const CURRENT_DATE = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const CURRENT_USER = 57643
const UTC_DATE = 57644
const UTC_TIME = 57645
const UTC_TIMESTAMP = 57646
const REPLACE = 57647
const CONVERT = 57648
const CAST = 57649
const SUBSTR = 57650
const SUBSTRING = 57651
const GROUP_CONCAT = 57652
const SEPARATOR = 57653
const TIMESTAMPADD = 57654
const TIMESTAMPDIFF = 57655
const MATCH = 57656
const AGAINST = 57657
const BOOLEAN = 57658
const LANGUAGE = 57659
const WITH = 57660
const QUERY = 57661
const EXPANSION = 57662
const WITHOUT = 57663
const VALIDATION = 57664
const UNUSED = 57665
const ARRAY = 57666
const CUME_DIST = 57667
const DESCRIPTION = 57668
const DENSE_RANK = 57669
const EMPTY = 57670
const EXCEPT = 57671
const FIRST_VALUE = 57672
const GROUPING = 57673
const GROUPS = 57674
const JSON_TABLE = 57675
const LAG = 57676
const LAST_VALUE = 57677
const LATERAL = 57678
const LEAD = 57679
const MEMBER = 57680
const NTH_VALUE = 57681
const NTILE = 57682
const OF = 57683
const OVER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const RECURSIVE = 57687
const ROW_NUMBER = 57688
const SYSTEM = 57689
const WINDOW = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const FORMAT = 57747
const TREE = 57748
const VITESS = 57749
const TRADITIONAL = 57750
const LOCAL = 57751
const LOW_PRIORITY = 57752
const AVG_ROW_LENGTH = 57753
const CONNECTION = 57754
const CHECKSUM = 57755
const DELAY_KEY_WRITE = 57756
const ENCRYPTION = 57757
const ENGINE = 57758
const INSERT_METHOD = 57759
const MAX_ROWS = 57760
const MIN_ROWS = 57761
const PACK_KEYS = 57762
const PASSWORD = 57763
const FIXED = 57764
const DYNAMIC = 57765
const COMPRESSED = 57766
const REDUNDANT = 57767
const COMPACT = 57768
const ROW_FORMAT = 57769
const STATS_AUTO_RECALC = 57770
const STATS_PERSISTENT = 57771
const STATS_SAMPLE_PAGES = 57772
const STORAGE = 57773
const MEMORY = 57774
const DISK = 57775

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	1, 110,
	451, 110,
	-2, 116,
	-1, 44,
	142, 116,
	252, 116,
	300, 116,
	-2, 328,
	-1, 51,
	34, 466,
	163, 466,
	175, 466,
	208, 480,
	209, 480,
	-2, 468,
	-1, 56,
	165, 490,
	-2, 488,
	-1, 80,
	55, 533,
	-2, 541,
	-1, 104,
	1, 111,
	451, 111,
	-2, 116,
	-1, 114,
	168, 233,
	169, 233,
	-2, 322,
	-1, 133,
	142, 116,
	252, 116,
	300, 116,
	-2, 337,
	-1, 549,
	149, 916,
	-2, 912,
	-1, 550,
	149, 917,
	-2, 913,
	-1, 567,
	55, 534,
	-2, 546,
	-1, 568,
	55, 535,
	-2, 547,
	-1, 588,
	117, 1243,
	-2, 82,
	-1, 589,
	117, 1130,
	-2, 83,
	-1, 595,
	117, 1178,
	-2, 894,
	-1, 729,
	117, 1072,
	-2, 891,
	-1, 764,
	174, 36,
	179, 36,
	-2, 244,
	-1, 843,
	1, 375,
	451, 375,
	-2, 116,
	-1, 1058,
	1, 271,
	451, 271,
	-2, 116,
	-1, 1136,
	168, 233,
	169, 233,
	-2, 322,
	-1, 1145,
	174, 37,
	179, 37,
	-2, 245,
	-1, 1339,
	149, 919,
	-2, 915,
	-1, 1429,
	73, 64,
	81, 64,
	-2, 68,
	-1, 1450,
	1, 272,
	451, 272,
	-2, 116,
	-1, 1841,
	5, 788,
	18, 788,
	20, 788,
	32, 788,
	82, 788,
	-2, 572,
	-1, 2055,
	45, 862,
	-2, 860,
}

const yyPrivate = 57344

const yyLast = 26074

var yyAct = [...]int{
	549, 2141, 1890, 2055, 2128, 2105, 1759, 2068, 493, 1655,
	2001, 1728, 508, 1979, 79, 3, 1623, 1821, 1447, 896,
	522, 962, 1013, 1822, 1514, 1376, 1006, 1887, 1656, 1818,
	560, 1121, 1732, 1482, 1487, 1713, 1642, 1467, 1714, 491,
	1833, 1780, 1333, 1426, 1583, 1712, 1254, 173, 1267, 593,
	185, 1325, 458, 185, 77, 142, 1143, 1706, 474, 1489,
	185, 855, 1512, 1050, 759, 128, 1043, 1408, 1415, 569,
	1016, 1011, 1378, 1561, 1036, 1000, 1359, 495, 1302, 1034,
	794, 554, 1033, 31, 733, 484, 1150, 740, 474, 1391,
	1040, 474, 185, 474, 1233, 741, 746, 737, 765, 760,
	761, 1049, 75, 1047, 1431, 145, 1120, 590, 1468, 1478,
	1023, 836, 1270, 105, 106, 894, 1135, 111, 112, 975,
	8, 7, 6, 172, 1751, 1750, 976, 80, 1161, 74,
	481, 2003, 762, 1543, 772, 1373, 1374, 1288, 2097, 1621,
	2052, 1958, 2030, 2029, 1864, 1974, 1220, 798, 1975, 107,
	797, 2147, 2102, 575, 579, 734, 2140, 76, 2079, 555,
	436, 113, 82, 83, 84, 85, 86, 87, 185, 2131,
	1891, 1531, 2101, 1797, 488, 1920, 2078, 1122, 185, 751,
	849, 33, 1622, 185, 68, 37, 38, 1848, 1849, 799,
	1847, 587, 482, 483, 1442, 1443, 594, 1051, 1492, 1052,
	102, 178, 179, 180, 174, 175, 176, 1441, 1550, 171,
	107, 796, 1549, 462, 1686, 865, 754, 1685, 753, 752,
	1687, 874, 875, 553, 810, 811, 892, 814, 815, 816,
	817, 552, 1115, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 832, 833, 834, 775, 1697,
	776, 1461, 1951, 1911, 812, 67, 1909, 1375, 1336, 1761,
	863, 461, 100, 2081, 449, 472, 876, 800, 801, 802,
	877, 874, 875, 450, 1287, 476, 807, 1491, 107, 470,
	166, 1733, 1513, 447, 534, 1546, 540, 541, 538, 539,
	1234, 537, 536, 535, 102, 167, 1239, 1289, 1290, 1291,
	2130, 542, 543, 866, 891, 108, 837, 130, 174, 175,
	176, 174, 175, 176, 813, 150, 1210, 102, 94, 95,
	869, 870, 444, 755, 98, 867, 868, 97, 96, 890,
	1762, 456, 2042, 924, 923, 933, 934, 926, 927, 928,
	929, 930, 931, 932, 925, 577, 140, 935, 864, 1755,
	1240, 129, 101, 2098, 871, 844, 1756, 1211, 1242, 1212,
	1243, 1244, 1238, 1764, 1558, 819, 818, 1763, 1236, 147,
	2026, 148, 1969, 462, 1515, 774, 117, 118, 139, 138,
	165, 1409, 783, 781, 792, 791, 790, 883, 789, 885,
	788, 787, 774, 786, 785, 780, 756, 1129, 793, 2145,
	437, 438, 439, 1237, 454, 455, 465, 1863, 847, 485,
	451, 453, 466, 440, 441, 468, 467, 170, 443, 442,
	1970, 461, 446, 463, 462, 2148, 882, 884, 134, 115,
	141, 122, 114, 462, 135, 136, 185, 738, 151, 1493,
	2077, 2117, 768, 1548, 888, 1565, 101, 738, 156, 123,
	878, 881, 767, 738, 848, 104, 1362, 736, 745, 474,
	474, 474, 581, 126, 124, 119, 120, 121, 125, 101,
	1765, 2082, 461, 116, 784, 782, 2018, 474, 474, 809,
	462, 461, 127, 1149, 1148, 774, 1432, 2069, 774, 1537,
	1247, 1781, 900, 906, 803, 1722, 1545, 69, 774, 858,
	859, 860, 861, 862, 1806, 1805, 1804, 1624, 1626, 773,
	749, 1533, 748, 747, 1743, 435, 767, 770, 771, 893,
	738, 177, 1284, 880, 764, 768, 773, 1557, 461, 2059,
	1556, 1602, 777, 767, 1783, 1940, 563, 1846, 879, 1647,
	2043, 1563, 778, 763, 1591, 2143, 1562, 464, 2144, 143,
	2142, 1599, 774, 185, 459, 1222, 1221, 1223, 1224, 1225,
	779, 947, 948, 1523, 1437, 1027, 960, 853, 945, 460,
	1448, 1004, 935, 887, 1682, 897, 898, 1003, 474, 1387,
	872, 185, 1563, 185, 185, 889, 474, 1562, 857, 850,
	851, 1785, 474, 1789, 915, 1784, 912, 1782, 137, 909,
	907, 908, 1787, 1625, 2034, 590, 925, 963, 795, 935,
	131, 1786, 915, 132, 1831, 2019, 2017, 1235, 1053, 773,
	910, 808, 773, 842, 1788, 1790, 1032, 1001, 843, 767,
	770, 771, 773, 738, 1532, 914, 912, 764, 768, 1017,
	924, 923, 933, 934, 926, 927, 928, 929, 930, 931,
	932, 925, 915, 1268, 935, 978, 980, 982, 984, 986,
	988, 989, 979, 981, 1799, 985, 987, 1271, 990, 947,
	948, 949, 950, 951, 952, 953, 954, 955, 956, 957,
	958, 1309, 998, 1530, 841, 1005, 773, 1360, 1119, 947,
	948, 90, 777, 767, 594, 1307, 1308, 1306, 744, 1584,
	856, 1528, 778, 144, 149, 146, 152, 153, 154, 155,
	157, 158, 159, 160, 174, 175, 176, 1389, 1327, 161,
	162, 163, 164, 933, 934, 926, 927, 928, 929, 930,
	931, 932, 925, 185, 783, 935, 91, 1111, 928, 929,
	930, 931, 932, 925, 781, 185, 935, 1695, 1123, 1124,
	1125, 1126, 926, 927, 928, 929, 930, 931, 932, 925,
	2062, 1020, 935, 474, 838, 1145, 839, 1597, 1269, 840,
	174, 175, 176, 1154, 1328, 1596, 1360, 1158, 1609, 1388,
	474, 474, 1272, 474, 1155, 474, 474, 1458, 474, 474,
	474, 474, 474, 474, 913, 914, 912, 2149, 750, 1459,
	913, 914, 912, 474, 913, 914, 912, 185, 1194, 1189,
	1190, 2132, 915, 913, 914, 912, 1525, 1525, 915, 1229,
	1957, 1801, 915, 1207, 1134, 1015, 1297, 1299, 1300, 1153,
	1702, 915, 169, 916, 474, 1127, 1128, 67, 1298, 2133,
	1529, 1527, 185, 2122, 1576, 1577, 1578, 1141, 185, 1305,
	1598, 185, 1253, 1956, 185, 1117, 1869, 1710, 1152, 2135,
	1110, 1392, 1393, 1709, 2150, 185, 1496, 185, 1808, 485,
	1227, 2123, 1230, 1215, 1131, 1132, 1130, 1228, 973, 474,
	474, 185, 474, 474, 185, 474, 474, 1191, 1144, 1214,
	1213, 1205, 1199, 1197, 1198, 1196, 1195, 1217, 1170, 1203,
	1204, 1048, 2134, 1256, 580, 1151, 1151, 1009, 1012, 1163,
	2124, 1164, 1192, 1166, 1168, 564, 1809, 1172, 1174, 1176,
	1178, 1180, 1273, 1758, 2113, 1259, 743, 1261, 1226, 1263,
	1264, 1265, 1266, 913, 914, 912, 1326, 2091, 1248, 1303,
	1992, 1954, 913, 914, 912, 1329, 174, 175, 176, 107,
	1689, 915, 174, 175, 176, 1216, 1507, 753, 752, 474,
	915, 924, 923, 933, 934, 926, 927, 928, 929, 930,
	931, 932, 925, 1928, 1810, 935, 1719, 1348, 1351, 1707,
	1337, 1573, 1541, 1361, 1540, 1257, 1343, 1330, 1331, 585,
	582, 583, 474, 474, 1274, 1275, 1304, 1277, 1278, 1282,
	1280, 1281, 1218, 185, 174, 175, 176, 1338, 1505, 1206,
	1339, 1202, 174, 175, 176, 474, 1208, 1711, 1201, 174,
	175, 176, 185, 564, 1200, 474, 1876, 2116, 2024, 185,
	963, 185, 1876, 2075, 1382, 1876, 2060, 1367, 1368, 185,
	185, 913, 914, 912, 1394, 76, 474, 1337, 2023, 474,
	1876, 564, 1889, 1427, 1876, 2032, 1972, 564, 1735, 915,
	474, 1525, 564, 1721, 1340, 590, 1938, 564, 590, 1876,
	1881, 1861, 1860, 1433, 1406, 1857, 1858, 1339, 1456, 511,
	510, 513, 514, 515, 516, 1857, 1856, 1402, 512, 1433,
	517, 1830, 1301, 1400, 564, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1935, 1469, 1470, 1471, 1451, 474, 33, 1923, 1432, 1752,
	1114, 1737, 564, 474, 1455, 1730, 1731, 550, 1504, 1506,
	1430, 1412, 564, 1643, 1434, 1404, 1643, 33, 911, 564,
	911, 474, 1436, 1484, 1452, 1490, 1435, 474, 1439, 1438,
	1434, 1154, 1363, 1154, 594, 1114, 1113, 594, 1432, 1454,
	1453, 1524, 1650, 2008, 924, 923, 933, 934, 926, 927,
	928, 929, 930, 931, 932, 925, 1411, 186, 935, 1819,
	186, 1059, 1058, 2033, 1651, 475, 1676, 186, 1830, 1876,
	67, 474, 1526, 1326, 1432, 1401, 1859, 1412, 1326, 1326,
	1440, 1412, 78, 1258, 1830, 1495, 33, 1521, 1485, 1522,
	1494, 67, 1497, 1614, 1959, 475, 1480, 1481, 475, 186,
	475, 1613, 557, 1344, 1345, 1511, 1412, 1350, 1353, 1354,
	1501, 1502, 1503, 185, 1517, 1400, 1520, 185, 185, 185,
	185, 185, 1485, 1516, 1536, 1185, 1525, 185, 185, 1538,
	1539, 185, 1366, 1525, 1535, 1369, 1370, 1292, 1293, 1294,
	1295, 1960, 1961, 1962, 1400, 1716, 1508, 1400, 1390, 185,
	185, 185, 775, 1371, 776, 1534, 1246, 1045, 1917, 758,
	67, 2119, 757, 185, 1151, 2067, 185, 474, 67, 1981,
	1888, 1946, 1186, 1187, 1188, 186, 67, 1116, 1483, 1462,
	1757, 1463, 1464, 1465, 1466, 186, 1518, 1479, 1473, 1472,
	186, 1232, 1346, 1347, 1146, 1142, 1112, 1474, 1475, 1476,
	1477, 92, 1963, 1544, 171, 1566, 1715, 1303, 919, 1567,
	922, 1182, 1834, 1835, 1760, 1571, 936, 937, 938, 939,
	940, 941, 942, 1982, 920, 921, 918, 924, 923, 933,
	934, 926, 927, 928, 929, 930, 931, 932, 925, 1122,
	2137, 935, 2129, 1852, 1840, 1837, 1964, 1965, 1819, 1726,
	1716, 1725, 185, 1839, 1593, 1183, 1184, 1724, 1499, 1285,
	185, 1250, 1664, 1663, 1304, 1579, 924, 923, 933, 934,
	926, 927, 928, 929, 930, 931, 932, 925, 1667, 1446,
	935, 2100, 185, 1668, 1417, 1420, 1421, 1422, 1418, 1629,
	1419, 1423, 1811, 185, 185, 185, 185, 185, 1341, 1342,
	1657, 1636, 1592, 1652, 555, 185, 1665, 1632, 1014, 185,
	2087, 1666, 185, 185, 1939, 1608, 185, 185, 185, 1669,
	1879, 1421, 1422, 1674, 1648, 1645, 1001, 1620, 1641, 1688,
	1640, 2084, 1628, 1417, 1420, 1421, 1422, 1418, 1486, 1419,
	1423, 1383, 1635, 1834, 1835, 2121, 99, 2104, 2106, 1701,
	1630, 1644, 1646, 2112, 2111, 1677, 2056, 2054, 1631, 1679,
	1245, 551, 1580, 1581, 1582, 1720, 1700, 1256, 1703, 1704,
	1705, 1356, 1670, 1659, 1660, 1658, 1662, 1675, 1661, 805,
	185, 1698, 1699, 1680, 1683, 1357, 1691, 804, 1715, 899,
	474, 1745, 168, 570, 1744, 181, 474, 1692, 1694, 474,
	1490, 1154, 1734, 570, 1007, 108, 474, 571, 2064, 2063,
	1738, 1708, 2006, 1498, 1519, 1160, 1008, 571, 1749, 1159,
	1147, 1933, 1385, 1740, 1392, 1393, 185, 1249, 1717, 2025,
	1018, 1019, 573, 1976, 572, 1748, 1425, 558, 559, 1639,
	567, 568, 573, 186, 572, 2126, 185, 1638, 1747, 561,
	1338, 2125, 1718, 1339, 1134, 2109, 2088, 1739, 1932, 1875,
	1509, 562, 78, 1931, 1814, 1643, 475, 475, 475, 2139,
	2138, 2139, 474, 1588, 1589, 1603, 1600, 1746, 1326, 1028,
	1021, 2057, 1952, 1386, 475, 475, 557, 76, 81, 73,
	1766, 1777, 1, 445, 1606, 1778, 1372, 999, 457, 1768,
	1779, 1769, 2127, 1219, 1209, 1770, 1892, 1978, 474, 1798,
	1882, 1488, 766, 1776, 133, 1449, 1450, 2071, 185, 89,
	1792, 731, 88, 769, 886, 1510, 2016, 1973, 474, 1791,
	1696, 1460, 1950, 1851, 474, 474, 1693, 2061, 1065, 1657,
	1820, 1063, 1064, 1062, 1067, 1066, 1061, 1777, 1286, 471,
	1424, 1054, 1823, 1022, 806, 1862, 1457, 185, 1283, 1817,
	186, 923, 933, 934, 926, 927, 928, 929, 930, 931,
	932, 925, 1829, 1542, 935, 452, 873, 448, 943, 1637,
	1684, 591, 1838, 584, 1825, 475, 1610, 2110, 186, 2085,
	186, 186, 1842, 475, 1844, 2083, 1845, 1854, 1855, 475,
	1843, 1870, 2053, 185, 2002, 185, 185, 185, 2086, 2051,
	2120, 474, 2103, 1384, 1633, 1634, 1012, 1010, 1930, 1813,
	1607, 972, 1878, 1358, 185, 1037, 1850, 494, 1296, 509,
	1866, 506, 1865, 507, 1395, 1649, 1807, 917, 492, 1772,
	1773, 1893, 474, 474, 474, 486, 185, 1883, 1029, 1490,
	1416, 1414, 1880, 1413, 1793, 1794, 1251, 1795, 1796, 1886,
	1041, 1836, 1832, 1828, 1035, 1885, 1586, 1399, 1802, 1803,
	1587, 1547, 1754, 566, 93, 1355, 1867, 1868, 2041, 1919,
	565, 1594, 1595, 59, 36, 478, 2096, 1601, 902, 1902,
	1604, 1605, 574, 30, 29, 1877, 28, 23, 1611, 1907,
	1612, 22, 21, 1615, 1616, 1617, 1618, 1619, 20, 19,
	1898, 1899, 25, 18, 17, 16, 103, 46, 43, 1657,
	41, 110, 109, 44, 40, 845, 27, 1929, 26, 15,
	1934, 14, 1942, 13, 12, 11, 10, 9, 5, 1943,
	186, 4, 905, 24, 961, 1948, 2, 0, 0, 1853,
	0, 0, 186, 0, 0, 0, 474, 474, 0, 0,
	1949, 0, 0, 1672, 1673, 0, 0, 1967, 0, 474,
	475, 0, 474, 0, 1953, 0, 1955, 0, 0, 1966,
	1977, 0, 0, 0, 0, 0, 1985, 475, 475, 0,
	475, 1980, 475, 475, 0, 475, 475, 475, 475, 475,
	475, 0, 0, 0, 0, 474, 474, 474, 185, 1983,
	475, 0, 0, 0, 186, 521, 1995, 1997, 1998, 474,
	0, 474, 0, 1984, 0, 0, 1900, 474, 0, 0,
	1991, 0, 2009, 1999, 2005, 1800, 1823, 2011, 2014, 2007,
	1823, 475, 0, 0, 0, 2020, 2000, 0, 0, 186,
	0, 185, 2021, 2013, 2022, 186, 0, 0, 186, 2015,
	0, 186, 474, 185, 0, 184, 0, 0, 469, 1815,
	0, 2031, 186, 2035, 186, 184, 0, 2028, 0, 0,
	0, 0, 0, 0, 0, 0, 475, 475, 186, 475,
	475, 186, 475, 475, 1904, 1905, 2050, 1906, 578, 578,
	1908, 0, 1910, 0, 0, 0, 2058, 184, 0, 1823,
	0, 0, 0, 0, 474, 474, 166, 0, 0, 0,
	2065, 0, 0, 0, 0, 1774, 1775, 2070, 0, 0,
	0, 0, 0, 1980, 2072, 0, 0, 0, 0, 0,
	474, 108, 2080, 0, 0, 0, 1657, 2089, 474, 0,
	0, 150, 0, 2092, 0, 0, 0, 0, 0, 2095,
	0, 0, 2099, 0, 0, 0, 475, 2108, 2107, 1986,
	1987, 1988, 1989, 1990, 0, 0, 0, 1993, 1994, 0,
	0, 0, 2118, 184, 0, 0, 0, 0, 0, 0,
	1826, 0, 1690, 184, 0, 0, 0, 0, 184, 475,
	475, 0, 0, 0, 0, 147, 0, 148, 0, 0,
	186, 1841, 2136, 0, 0, 0, 165, 0, 0, 0,
	0, 2146, 475, 166, 1916, 0, 0, 1921, 0, 186,
	0, 0, 475, 0, 0, 0, 186, 0, 186, 1922,
	0, 0, 0, 0, 0, 0, 186, 186, 108, 0,
	485, 0, 0, 475, 0, 0, 475, 1944, 150, 0,
	1945, 1915, 0, 1947, 0, 0, 0, 475, 0, 0,
	0, 0, 0, 0, 151, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 924, 923, 933, 934,
	926, 927, 928, 929, 930, 931, 932, 925, 0, 0,
	935, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 147, 1901, 148, 1914, 0, 1903, 0, 0,
	0, 2093, 475, 165, 0, 0, 0, 0, 1912, 1913,
	475, 0, 924, 923, 933, 934, 926, 927, 928, 929,
	930, 931, 932, 925, 1927, 0, 935, 0, 475, 0,
	0, 0, 0, 0, 475, 0, 0, 2004, 485, 0,
	0, 1936, 1937, 0, 0, 1941, 0, 0, 0, 924,
	923, 933, 934, 926, 927, 928, 929, 930, 931, 932,
	925, 151, 0, 935, 0, 143, 0, 0, 0, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 475, 924,
	923, 933, 934, 926, 927, 928, 929, 930, 931, 932,
	925, 520, 0, 935, 0, 0, 0, 0, 0, 1971,
	0, 0, 0, 924, 923, 933, 934, 926, 927, 928,
	929, 930, 931, 932, 925, 0, 0, 935, 0, 0,
	186, 0, 0, 0, 186, 186, 186, 186, 186, 0,
	0, 184, 0, 0, 186, 186, 0, 0, 186, 0,
	0, 1996, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 186, 186, 186, 0,
	0, 0, 0, 0, 0, 1771, 0, 0, 0, 0,
	186, 0, 143, 186, 475, 0, 0, 0, 0, 592,
	0, 0, 735, 0, 742, 924, 923, 933, 934, 926,
	927, 928, 929, 930, 931, 932, 925, 0, 0, 935,
	0, 0, 0, 2037, 2038, 2039, 2040, 0, 2044, 0,
	2045, 2046, 2047, 0, 2048, 2049, 0, 0, 0, 144,
	149, 146, 152, 153, 154, 155, 157, 158, 159, 160,
	0, 0, 0, 0, 0, 161, 162, 163, 164, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2076, 186,
	0, 0, 578, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 184, 0, 184, 1044,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 186, 186, 186, 186, 0, 0, 0, 0, 0,
	2114, 2115, 186, 0, 0, 0, 186, 0, 0, 186,
	186, 0, 0, 186, 186, 186, 144, 149, 146, 152,
	153, 154, 155, 157, 158, 159, 160, 1585, 0, 0,
	0, 0, 161, 162, 163, 164, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 924, 923, 933,
	934, 926, 927, 928, 929, 930, 931, 932, 925, 0,
	0, 935, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 475, 0, 0,
	0, 0, 0, 475, 0, 0, 475, 0, 0, 0,
	0, 0, 0, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 0, 0, 0, 0, 523, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1157, 0, 0, 166, 0, 0, 0, 0, 475,
	0, 0, 0, 0, 0, 1727, 0, 0, 0, 0,
	0, 32, 0, 0, 0, 0, 1157, 1157, 0, 108,
	0, 130, 184, 0, 0, 0, 0, 0, 0, 150,
	0, 0, 0, 0, 0, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 556, 475, 0, 184, 0, 0,
	140, 475, 475, 184, 0, 129, 184, 0, 0, 1255,
	592, 592, 592, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 184, 147, 186, 148, 0, 0, 901, 903,
	1137, 1138, 139, 138, 165, 0, 184, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 0, 186, 186, 186, 0, 0, 0, 475, 0,
	0, 0, 134, 1139, 141, 0, 1136, 0, 135, 136,
	0, 186, 151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 0, 475,
	475, 475, 0, 186, 0, 578, 1255, 0, 0, 0,
	578, 578, 1002, 0, 578, 578, 578, 0, 0, 1025,
	1157, 0, 0, 0, 0, 0, 0, 592, 0, 0,
	0, 0, 0, 1055, 0, 0, 0, 0, 0, 578,
	578, 578, 578, 578, 0, 0, 0, 0, 1380, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 477, 1255, 184, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 184, 184, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 739, 0, 0, 0, 0, 0,
	0, 0, 0, 475, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 475, 0, 0, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 132, 0, 0,
	0, 0, 475, 475, 475, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 475, 0, 475, 0,
	835, 0, 0, 0, 475, 0, 0, 0, 0, 0,
	846, 0, 0, 0, 0, 852, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 1156, 0, 475,
	186, 1162, 1162, 0, 1162, 0, 1162, 1162, 0, 1171,
	1162, 1162, 1162, 1162, 1162, 0, 0, 0, 0, 0,
	0, 0, 1156, 1156, 735, 0, 0, 144, 149, 146,
	152, 153, 154, 155, 157, 158, 159, 160, 0, 0,
	0, 0, 0, 161, 162, 163, 164, 895, 895, 895,
	0, 475, 475, 0, 0, 1231, 0, 0, 184, 0,
	0, 0, 184, 184, 184, 184, 184, 32, 0, 0,
	0, 0, 184, 184, 0, 0, 184, 475, 944, 946,
	0, 0, 0, 0, 0, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 1568, 1569, 184, 0, 0, 0,
	592, 592, 0, 592, 592, 0, 592, 592, 184, 959,
	0, 184, 0, 964, 965, 966, 967, 968, 969, 970,
	971, 0, 974, 977, 977, 977, 983, 977, 977, 983,
	977, 991, 992, 993, 994, 995, 996, 997, 0, 0,
	0, 0, 0, 0, 0, 32, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	578, 578, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1038, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 578, 592, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1156, 184, 0, 0,
	0, 0, 0, 0, 0, 1380, 0, 0, 0, 0,
	0, 0, 0, 1364, 1365, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 578, 184, 854, 0,
	0, 0, 0, 0, 0, 0, 1396, 1157, 184, 184,
	184, 184, 184, 0, 0, 0, 1025, 0, 0, 592,
	1671, 0, 0, 0, 184, 0, 0, 184, 184, 0,
	0, 184, 1681, 1255, 0, 0, 0, 592, 0, 0,
	592, 0, 0, 33, 34, 35, 68, 37, 38, 0,
	0, 735, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 1133, 39, 65,
	66, 0, 63, 0, 0, 0, 0, 0, 64, 0,
	0, 108, 0, 130, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 184, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 742, 52, 0, 1157,
	0, 0, 0, 0, 1500, 0, 0, 67, 0, 1255,
	0, 0, 140, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 735, 0, 0, 0, 0, 0, 742, 0,
	0, 184, 0, 1031, 0, 147, 1042, 148, 0, 0,
	0, 0, 1137, 1138, 139, 138, 165, 0, 0, 0,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 0, 578, 0, 0, 42,
	45, 48, 47, 50, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 134, 1139, 141, 0, 1136, 0,
	135, 136, 0, 0, 151, 0, 0, 0, 0, 0,
	51, 71, 70, 0, 156, 60, 61, 49, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 895, 895, 0,
	895, 895, 0, 895, 895, 0, 1157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 54, 0, 55, 56, 57, 58, 0, 0,
	0, 0, 184, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1118, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	184, 184, 184, 1082, 0, 143, 0, 0, 0, 1157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 184, 0, 0, 0, 0, 0, 0, 0, 1193,
	0, 0, 0, 0, 137, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 1428, 0, 0,
	0, 0, 0, 1156, 1241, 0, 0, 0, 0, 0,
	1042, 0, 0, 1252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 1260, 0, 1262,
	0, 0, 0, 0, 0, 1070, 0, 0, 0, 0,
	0, 0, 0, 1276, 0, 0, 1279, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1083, 144,
	149, 146, 152, 153, 154, 155, 157, 158, 159, 160,
	0, 0, 0, 0, 0, 161, 162, 163, 164, 0,
	0, 1729, 0, 0, 0, 1156, 0, 1736, 0, 0,
	1729, 0, 0, 0, 0, 592, 0, 1741, 0, 0,
	0, 0, 0, 1380, 1096, 1099, 1100, 1101, 1102, 1103,
	1104, 0, 1105, 1106, 1107, 1108, 1109, 1084, 1085, 1086,
	1087, 1068, 1069, 1097, 0, 1071, 0, 1072, 1073, 1074,
	1075, 1076, 1077, 1078, 1079, 1080, 1081, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 0, 184, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 184, 0,
	0, 0, 0, 592, 1403, 0, 0, 0, 0, 0,
	0, 1407, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 1429, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1162,
	0, 0, 0, 0, 0, 1098, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 592,
	0, 0, 1156, 0, 0, 1827, 1162, 0, 0, 0,
	0, 0, 0, 1157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1590, 0, 0, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 735, 0, 0, 1156, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1894, 1895, 1896, 0, 0, 0, 0,
	1038, 0, 0, 0, 0, 0, 0, 1653, 1654, 0,
	0, 1038, 1038, 1038, 1038, 1038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1428, 0, 0,
	1038, 0, 0, 0, 1038, 1042, 0, 0, 0, 1551,
	1552, 1553, 1554, 1555, 0, 0, 0, 0, 0, 1559,
	1560, 0, 0, 1564, 0, 0, 0, 0, 0, 0,
	0, 0, 1156, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1570, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1572, 0, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1729, 1968, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1729, 0, 0, 592, 0, 1742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1729, 1729, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2010, 0, 2012, 0, 0, 0, 0, 0, 1729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1729, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1678, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 32, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 592, 592, 0, 0, 0,
	0, 0, 0, 0, 0, 1038, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1156,
	0, 2090, 0, 0, 0, 0, 0, 0, 0, 1729,
	0, 0, 1723, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1753, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1918, 0, 0, 0,
	0, 0, 0, 1924, 1925, 1926, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 1872, 1873, 1874,
	0, 0, 0, 0, 1824, 0, 32, 0, 1824, 0,
	0, 0, 0, 0, 0, 0, 1884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1897, 0,
	0, 0, 0, 0, 0, 32, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 32, 2066, 0, 0, 0, 0,
	0, 0, 0, 0, 713, 700, 0, 0, 651, 716,
	622, 640, 725, 642, 645, 683, 603, 664, 321, 637,
	0, 626, 599, 633, 600, 624, 653, 237, 657, 621,
	702, 667, 715, 280, 0, 627, 334, 685, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 722, 284, 674, 0, 379, 306, 0, 0,
	0, 655, 705, 662, 696, 650, 684, 611, 673, 717,
	638, 681, 718, 270, 221, 192, 318, 380, 249, 0,
	0, 0, 174, 175, 176, 0, 2073, 2074, 0, 0,
	0, 0, 0, 213, 0, 219, 678, 712, 635, 680,
	233, 268, 239, 232, 394, 682, 728, 598, 675, 0,
	601, 604, 724, 708, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 654, 663, 693, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 672, 0, 0,
	0, 607, 602, 2027, 0, 0, 0, 652, 0, 0,
	0, 610, 0, 629, 694, 2036, 596, 256, 605, 307,
	698, 707, 649, 421, 711, 647, 646, 714, 689, 608,
	704, 641, 279, 606, 276, 188, 202, 0, 639, 317,
	355, 360, 703, 625, 634, 224, 632, 358, 330, 409,
	209, 247, 352, 335, 356, 671, 687, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 620,
	699, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 691, 727, 329, 359, 215, 411,
	378, 615, 619, 613, 614, 665, 666, 616, 719, 720,
	721, 695, 609, 0, 617, 618, 0, 701, 709, 710,
	670, 187, 200, 282, 723, 349, 250, 432, 416, 414,
	597, 612, 230, 623, 0, 0, 636, 643, 644, 656,
	658, 659, 660, 661, 669, 676, 677, 679, 686, 688,
	690, 692, 697, 706, 726, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 668, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	713, 700, 0, 0, 651, 716, 622, 640, 725, 642,
	645, 683, 603, 664, 321, 637, 0, 626, 599, 633,
	600, 624, 653, 237, 657, 621, 702, 667, 715, 280,
	0, 627, 334, 685, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 722, 284,
	674, 0, 379, 306, 0, 0, 0, 655, 705, 662,
	696, 650, 684, 611, 673, 717, 638, 681, 718, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 219, 678, 712, 635, 680, 233, 268, 239, 232,
	394, 682, 728, 598, 675, 0, 601, 604, 724, 708,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 654,
	663, 693, 648, 0, 0, 0, 0, 0, 0, 1816,
	0, 628, 0, 672, 0, 0, 0, 607, 602, 0,
	0, 0, 0, 652, 0, 0, 0, 610, 0, 629,
	694, 0, 596, 256, 605, 307, 698, 707, 649, 421,
	711, 647, 646, 714, 689, 608, 704, 641, 279, 606,
	276, 188, 202, 0, 639, 317, 355, 360, 703, 625,
	634, 224, 632, 358, 330, 409, 209, 247, 352, 335,
	356, 671, 687, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 620, 699, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	691, 727, 329, 359, 215, 411, 378, 615, 619, 613,
	614, 665, 666, 616, 719, 720, 721, 695, 609, 0,
	617, 618, 0, 701, 709, 710, 670, 187, 200, 282,
	723, 349, 250, 432, 416, 414, 597, 612, 230, 623,
	0, 0, 636, 643, 644, 656, 658, 659, 660, 661,
	669, 676, 677, 679, 686, 688, 690, 692, 697, 706,
	726, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 668, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 713, 700, 0, 0,
	651, 716, 622, 640, 725, 642, 645, 683, 603, 664,
	321, 637, 0, 626, 599, 633, 600, 624, 653, 237,
	657, 621, 702, 667, 715, 280, 0, 627, 334, 685,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 722, 284, 674, 0, 379, 306,
	0, 0, 0, 655, 705, 662, 696, 650, 684, 611,
	673, 717, 638, 681, 718, 270, 221, 192, 318, 380,
	249, 0, 0, 0, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 219, 678, 712,
	635, 680, 233, 268, 239, 232, 394, 682, 728, 598,
	675, 0, 601, 604, 724, 708, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 654, 663, 693, 648, 0,
	0, 0, 0, 0, 0, 1682, 0, 628, 0, 672,
	0, 0, 0, 607, 602, 0, 0, 0, 0, 652,
	0, 0, 0, 610, 0, 629, 694, 0, 596, 256,
	605, 307, 698, 707, 649, 421, 711, 647, 646, 714,
	689, 608, 704, 641, 279, 606, 276, 188, 202, 0,
	639, 317, 355, 360, 703, 625, 634, 224, 632, 358,
	330, 409, 209, 247, 352, 335, 356, 671, 687, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 205, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 620, 699, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	312, 206, 264, 377, 277, 286, 691, 727, 329, 359,
	215, 411, 378, 615, 619, 613, 614, 665, 666, 616,
	719, 720, 721, 695, 609, 0, 617, 618, 0, 701,
	709, 710, 670, 187, 200, 282, 723, 349, 250, 432,
	416, 414, 597, 612, 230, 623, 0, 0, 636, 643,
	644, 656, 658, 659, 660, 661, 669, 676, 677, 679,
	686, 688, 690, 692, 697, 706, 726, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 668, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 713, 700, 0, 0, 651, 716, 622, 640,
	725, 642, 645, 683, 603, 664, 321, 637, 0, 626,
	599, 633, 600, 624, 653, 237, 657, 621, 702, 667,
	715, 280, 0, 627, 334, 685, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	722, 284, 674, 0, 379, 306, 0, 0, 0, 655,
	705, 662, 696, 650, 684, 611, 673, 717, 638, 681,
	718, 270, 221, 192, 318, 380, 249, 0, 0, 0,
	174, 175, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 219, 678, 712, 635, 680, 233, 268,
	239, 232, 394, 682, 728, 598, 675, 0, 601, 604,
	724, 708, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 654, 663, 693, 648, 0, 0, 0, 0, 0,
	0, 1405, 0, 628, 0, 672, 0, 0, 0, 607,
	602, 0, 0, 0, 0, 652, 0, 0, 0, 610,
	0, 629, 694, 0, 596, 256, 605, 307, 698, 707,
	649, 421, 711, 647, 646, 714, 689, 608, 704, 641,
	279, 606, 276, 188, 202, 0, 639, 317, 355, 360,
	703, 625, 634, 224, 632, 358, 330, 409, 209, 247,
	352, 335, 356, 671, 687, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 406, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 205,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 620, 699, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 312, 206, 264, 377,
	277, 286, 691, 727, 329, 359, 215, 411, 378, 615,
	619, 613, 614, 665, 666, 616, 719, 720, 721, 695,
	609, 0, 617, 618, 0, 701, 709, 710, 670, 187,
	200, 282, 723, 349, 250, 432, 416, 414, 597, 612,
	230, 623, 0, 0, 636, 643, 644, 656, 658, 659,
	660, 661, 669, 676, 677, 679, 686, 688, 690, 692,
	697, 706, 726, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 668, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 713, 700,
	0, 0, 651, 716, 622, 640, 725, 642, 645, 683,
	603, 664, 321, 637, 0, 626, 599, 633, 600, 624,
	653, 237, 657, 621, 702, 667, 715, 280, 0, 627,
	334, 685, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 722, 284, 674, 0,
	379, 306, 0, 0, 0, 655, 705, 662, 696, 650,
	684, 611, 673, 717, 638, 681, 718, 270, 221, 192,
	318, 380, 249, 67, 0, 0, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	678, 712, 635, 680, 233, 268, 239, 232, 394, 682,
	728, 598, 675, 0, 601, 604, 724, 708, 630, 631,
	0, 0, 0, 0, 0, 0, 0, 654, 663, 693,
	648, 0, 0, 0, 0, 0, 0, 0, 0, 628,
	0, 672, 0, 0, 0, 607, 602, 0, 0, 0,
	0, 652, 0, 0, 0, 610, 0, 629, 694, 0,
	596, 256, 605, 307, 698, 707, 649, 421, 711, 647,
	646, 714, 689, 608, 704, 641, 279, 606, 276, 188,
	202, 0, 639, 317, 355, 360, 703, 625, 634, 224,
	632, 358, 330, 409, 209, 247, 352, 335, 356, 671,
	687, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 620, 699, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 691, 727,
	329, 359, 215, 411, 378, 615, 619, 613, 614, 665,
	666, 616, 719, 720, 721, 695, 609, 0, 617, 618,
	0, 701, 709, 710, 670, 187, 200, 282, 723, 349,
	250, 432, 416, 414, 597, 612, 230, 623, 0, 0,
	636, 643, 644, 656, 658, 659, 660, 661, 669, 676,
	677, 679, 686, 688, 690, 692, 697, 706, 726, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	668, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 713, 700, 0, 0, 651, 716,
	622, 640, 725, 642, 645, 683, 603, 664, 321, 637,
	0, 626, 599, 633, 600, 624, 653, 237, 657, 621,
	702, 667, 715, 280, 0, 627, 334, 685, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 722, 284, 674, 0, 379, 306, 0, 0,
	0, 655, 705, 662, 696, 650, 684, 611, 673, 717,
	638, 681, 718, 270, 221, 192, 318, 380, 249, 0,
	0, 0, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 219, 678, 712, 635, 680,
	233, 268, 239, 232, 394, 682, 728, 598, 675, 0,
	601, 604, 724, 708, 630, 631, 0, 0, 0, 0,
	0, 0, 0, 654, 663, 693, 648, 0, 0, 0,
	0, 0, 0, 0, 0, 628, 0, 672, 0, 0,
	0, 607, 602, 0, 0, 0, 0, 652, 0, 0,
	0, 610, 0, 629, 694, 0, 596, 256, 605, 307,
	698, 707, 649, 421, 711, 647, 646, 714, 689, 608,
	704, 641, 279, 606, 276, 188, 202, 0, 639, 317,
	355, 360, 703, 625, 634, 224, 632, 358, 330, 409,
	209, 247, 352, 335, 356, 671, 687, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 620,
	699, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 691, 727, 329, 359, 215, 411,
	378, 615, 619, 613, 614, 665, 666, 616, 719, 720,
	721, 695, 609, 0, 617, 618, 0, 701, 709, 710,
	670, 187, 200, 282, 723, 349, 250, 432, 416, 414,
	597, 612, 230, 623, 0, 0, 636, 643, 644, 656,
	658, 659, 660, 661, 669, 676, 677, 679, 686, 688,
	690, 692, 697, 706, 726, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 668, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	713, 700, 0, 0, 651, 716, 622, 640, 725, 642,
	645, 683, 603, 664, 321, 637, 0, 626, 599, 633,
	600, 624, 653, 237, 657, 621, 702, 667, 715, 280,
	0, 627, 334, 685, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 722, 284,
	674, 0, 379, 306, 0, 0, 0, 655, 705, 662,
	696, 650, 684, 611, 673, 717, 638, 681, 718, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 219, 678, 712, 635, 680, 233, 268, 239, 232,
	394, 682, 728, 598, 675, 0, 601, 604, 724, 708,
	630, 631, 0, 0, 0, 0, 0, 0, 0, 654,
	663, 693, 648, 0, 0, 0, 0, 0, 0, 0,
	0, 628, 0, 672, 0, 0, 0, 607, 602, 0,
	0, 0, 0, 652, 0, 0, 0, 610, 0, 629,
	694, 0, 596, 256, 605, 307, 698, 707, 649, 421,
	711, 647, 646, 714, 689, 608, 704, 641, 279, 606,
	276, 188, 202, 0, 639, 317, 355, 360, 703, 625,
	634, 224, 632, 358, 330, 409, 209, 247, 352, 335,
	356, 671, 687, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 730, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 620, 699, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 595, 729, 589, 588, 277, 286,
	691, 727, 329, 359, 215, 411, 378, 615, 619, 613,
	614, 665, 666, 616, 719, 720, 721, 695, 609, 0,
	617, 618, 0, 701, 709, 710, 670, 187, 200, 282,
	723, 349, 250, 432, 416, 414, 597, 612, 230, 623,
	0, 0, 636, 643, 644, 656, 658, 659, 660, 661,
	669, 676, 677, 679, 686, 688, 690, 692, 697, 706,
	726, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 668, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 713, 700, 0, 0,
	651, 716, 622, 640, 725, 642, 645, 683, 603, 664,
	321, 637, 0, 626, 599, 633, 600, 624, 653, 237,
	657, 621, 702, 667, 715, 280, 0, 627, 334, 685,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 722, 284, 674, 0, 379, 306,
	0, 0, 0, 655, 705, 662, 696, 650, 684, 611,
	673, 717, 638, 681, 718, 270, 221, 192, 318, 380,
	249, 0, 0, 0, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 219, 678, 712,
	635, 680, 233, 268, 239, 232, 394, 682, 728, 598,
	675, 0, 601, 604, 724, 708, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 654, 663, 693, 648, 0,
	0, 0, 0, 0, 0, 0, 0, 628, 0, 672,
	0, 0, 0, 607, 602, 0, 0, 0, 0, 652,
	0, 0, 0, 610, 0, 629, 694, 0, 596, 256,
	605, 307, 698, 707, 649, 421, 711, 647, 646, 714,
	689, 608, 704, 641, 279, 606, 276, 188, 202, 0,
	639, 317, 355, 360, 703, 625, 634, 224, 632, 358,
	330, 409, 209, 247, 352, 335, 356, 671, 687, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 1046, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 730, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 620, 699, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	595, 729, 589, 588, 277, 286, 691, 727, 329, 359,
	215, 411, 378, 615, 619, 613, 614, 665, 666, 616,
	719, 720, 721, 695, 609, 0, 617, 618, 0, 701,
	709, 710, 670, 187, 200, 282, 723, 349, 250, 432,
	416, 414, 597, 612, 230, 623, 0, 0, 636, 643,
	644, 656, 658, 659, 660, 661, 669, 676, 677, 679,
	686, 688, 690, 692, 697, 706, 726, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 668, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 713, 700, 0, 0, 651, 716, 622, 640,
	725, 642, 645, 683, 603, 664, 321, 637, 0, 626,
	599, 633, 600, 624, 653, 237, 657, 621, 702, 667,
	715, 280, 0, 627, 334, 685, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	722, 284, 674, 0, 379, 306, 0, 0, 0, 655,
	705, 662, 696, 650, 684, 611, 673, 717, 638, 681,
	718, 270, 221, 192, 318, 380, 249, 0, 0, 0,
	174, 175, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 219, 678, 712, 635, 680, 233, 268,
	239, 232, 394, 682, 728, 598, 675, 0, 601, 604,
	724, 708, 630, 631, 0, 0, 0, 0, 0, 0,
	0, 654, 663, 693, 648, 0, 0, 0, 0, 0,
	0, 0, 0, 628, 0, 672, 0, 0, 0, 607,
	602, 0, 0, 0, 0, 652, 0, 0, 0, 610,
	0, 629, 694, 0, 596, 256, 605, 307, 698, 707,
	649, 421, 711, 647, 646, 714, 689, 608, 704, 641,
	279, 606, 276, 188, 202, 0, 639, 317, 355, 360,
	703, 625, 634, 224, 632, 358, 330, 409, 209, 247,
	352, 335, 356, 671, 687, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 586, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 730,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 620, 699, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 595, 729, 589, 588,
	277, 286, 691, 727, 329, 359, 215, 411, 378, 615,
	619, 613, 614, 665, 666, 616, 719, 720, 721, 695,
	609, 0, 617, 618, 0, 701, 709, 710, 670, 187,
	200, 282, 723, 349, 250, 432, 416, 414, 597, 612,
	230, 623, 0, 0, 636, 643, 644, 656, 658, 659,
	660, 661, 669, 676, 677, 679, 686, 688, 690, 692,
	697, 706, 726, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 668, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 321, 0,
	0, 1334, 0, 490, 0, 0, 0, 237, 0, 489,
	0, 0, 0, 280, 0, 1335, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 533, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 524, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 67,
	0, 0, 174, 175, 176, 511, 510, 513, 514, 515,
	516, 0, 0, 213, 512, 219, 517, 518, 519, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 487, 504,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 502, 576, 0, 0, 0, 547, 0, 503,
	0, 0, 496, 497, 499, 498, 500, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 307,
	546, 0, 0, 421, 0, 0, 544, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 534, 545, 540, 541, 538, 539, 0, 537, 536,
	535, 548, 526, 527, 528, 529, 531, 0, 542, 543,
	530, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	321, 0, 0, 0, 0, 490, 0, 0, 0, 237,
	0, 489, 0, 0, 0, 280, 0, 0, 334, 0,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 533, 284, 0, 0, 379, 306,
	0, 0, 0, 0, 0, 524, 525, 0, 0, 0,
	0, 0, 0, 1444, 0, 270, 221, 192, 318, 380,
	249, 67, 0, 0, 174, 175, 176, 511, 510, 513,
	514, 515, 516, 0, 0, 213, 512, 219, 517, 518,
	519, 1445, 233, 268, 239, 232, 394, 0, 0, 0,
	487, 504, 0, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 502, 0, 0, 0, 0, 547,
	0, 503, 0, 0, 496, 497, 499, 498, 500, 505,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 307, 546, 0, 0, 421, 0, 0, 544, 0,
	0, 0, 0, 0, 279, 0, 276, 188, 202, 0,
	0, 317, 355, 360, 0, 0, 0, 224, 0, 358,
	330, 409, 209, 247, 352, 335, 356, 0, 0, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 205, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 0, 0, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	312, 206, 264, 377, 277, 286, 0, 0, 329, 359,
	215, 411, 378, 534, 545, 540, 541, 538, 539, 0,
	537, 536, 535, 548, 526, 527, 528, 529, 531, 0,
	542, 543, 530, 187, 200, 282, 0, 349, 250, 432,
	416, 414, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 0, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 321, 0, 0, 0, 0, 490, 0, 0,
	0, 237, 0, 489, 0, 0, 0, 280, 0, 0,
	334, 0, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 533, 284, 0, 0,
	379, 306, 0, 0, 0, 0, 0, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 221, 192,
	318, 380, 249, 67, 0, 564, 174, 175, 176, 511,
	510, 513, 514, 515, 516, 0, 0, 213, 512, 219,
	517, 518, 519, 0, 233, 268, 239, 232, 394, 0,
	0, 0, 487, 504, 0, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 502, 0, 0, 0,
	0, 547, 0, 503, 0, 0, 496, 497, 499, 498,
	500, 505, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 307, 546, 0, 0, 421, 0, 0,
	544, 0, 0, 0, 0, 0, 279, 0, 276, 188,
	202, 0, 0, 317, 355, 360, 0, 0, 0, 224,
	0, 358, 330, 409, 209, 247, 352, 335, 356, 0,
	0, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 0, 0, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 0, 0,
	329, 359, 215, 411, 378, 534, 545, 540, 541, 538,
	539, 0, 537, 536, 535, 548, 526, 527, 528, 529,
	531, 0, 542, 543, 530, 187, 200, 282, 0, 349,
	250, 432, 416, 414, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	0, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 321, 0, 0, 0, 0, 490,
	0, 0, 0, 237, 0, 489, 0, 0, 0, 280,
	0, 0, 334, 0, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 533, 284,
	0, 0, 379, 306, 0, 0, 0, 0, 0, 524,
	525, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	221, 192, 318, 380, 249, 67, 0, 0, 174, 175,
	176, 511, 510, 513, 514, 515, 516, 0, 0, 213,
	512, 219, 517, 518, 519, 0, 233, 268, 239, 232,
	394, 0, 0, 0, 487, 504, 0, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 502, 576,
	0, 0, 0, 547, 0, 503, 0, 0, 496, 497,
	499, 498, 500, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 307, 546, 0, 0, 421,
	0, 0, 544, 0, 0, 0, 0, 0, 279, 0,
	276, 188, 202, 0, 0, 317, 355, 360, 0, 0,
	0, 224, 0, 358, 330, 409, 209, 247, 352, 335,
	356, 0, 0, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 0, 0, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	0, 0, 329, 359, 215, 411, 378, 534, 545, 540,
	541, 538, 539, 0, 537, 536, 535, 548, 526, 527,
	528, 529, 531, 0, 542, 543, 530, 187, 200, 282,
	0, 349, 250, 432, 416, 414, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 0, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 321, 0, 0, 0,
	0, 490, 0, 0, 0, 237, 0, 489, 0, 0,
	0, 280, 0, 0, 334, 0, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	533, 284, 0, 0, 379, 306, 0, 0, 0, 0,
	0, 524, 525, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 221, 192, 318, 380, 249, 67, 0, 0,
	174, 175, 176, 511, 1352, 513, 514, 515, 516, 0,
	0, 213, 512, 219, 517, 518, 519, 0, 233, 268,
	239, 232, 394, 0, 0, 0, 487, 504, 0, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 501,
	502, 576, 0, 0, 0, 547, 0, 503, 0, 0,
	496, 497, 499, 498, 500, 505, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 307, 546, 0,
	0, 421, 0, 0, 544, 0, 0, 0, 0, 0,
	279, 0, 276, 188, 202, 0, 0, 317, 355, 360,
	0, 0, 0, 224, 0, 358, 330, 409, 209, 247,
	352, 335, 356, 0, 0, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 406, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 205,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 0, 0, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 312, 206, 264, 377,
	277, 286, 0, 0, 329, 359, 215, 411, 378, 534,
	545, 540, 541, 538, 539, 0, 537, 536, 535, 548,
	526, 527, 528, 529, 531, 0, 542, 543, 530, 187,
	200, 282, 0, 349, 250, 432, 416, 414, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 0, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 321, 0,
	0, 0, 0, 490, 0, 0, 0, 237, 0, 489,
	0, 0, 0, 280, 0, 0, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 533, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 524, 525, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 67,
	0, 0, 174, 175, 176, 511, 1349, 513, 514, 515,
	516, 0, 0, 213, 512, 219, 517, 518, 519, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 487, 504,
	0, 532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 501, 502, 576, 0, 0, 0, 547, 0, 503,
	0, 0, 496, 497, 499, 498, 500, 505, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 307,
	546, 0, 0, 421, 0, 0, 544, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 534, 545, 540, 541, 538, 539, 0, 537, 536,
	535, 548, 526, 527, 528, 529, 531, 0, 542, 543,
	530, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	557, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 490, 0,
	0, 0, 237, 0, 489, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 533, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 524, 525,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 67, 0, 0, 174, 175, 176,
	511, 510, 513, 514, 515, 516, 0, 0, 213, 512,
	219, 517, 518, 519, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 487, 504, 0, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 501, 502, 0, 0,
	0, 0, 547, 0, 503, 0, 0, 496, 497, 499,
	498, 500, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 546, 0, 0, 421, 0,
	0, 544, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 534, 545, 540, 541,
	538, 539, 0, 537, 536, 535, 548, 526, 527, 528,
	529, 531, 0, 542, 543, 530, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 0, 0, 0,
	490, 0, 0, 0, 237, 0, 489, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 533,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 67, 0, 0, 174,
	175, 176, 511, 510, 513, 514, 515, 516, 0, 0,
	213, 512, 219, 517, 518, 519, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 487, 504, 0, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 501, 502,
	0, 0, 0, 0, 547, 0, 503, 0, 0, 496,
	497, 499, 498, 500, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 546, 0, 0,
	421, 0, 0, 544, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 534, 545,
	540, 541, 538, 539, 0, 537, 536, 535, 548, 526,
	527, 528, 529, 531, 0, 542, 543, 530, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 533, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 524, 525, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 67, 0,
	0, 174, 175, 176, 511, 510, 513, 514, 515, 516,
	0, 0, 213, 512, 219, 517, 518, 519, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 504, 0,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	501, 502, 0, 0, 0, 0, 547, 0, 503, 0,
	0, 496, 497, 499, 498, 500, 505, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 546,
	0, 0, 421, 0, 0, 544, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 2094, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	534, 545, 540, 541, 538, 539, 0, 537, 536, 535,
	548, 526, 527, 528, 529, 531, 0, 542, 543, 530,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 533, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 524, 525, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	67, 0, 564, 174, 175, 176, 511, 510, 513, 514,
	515, 516, 0, 0, 213, 512, 219, 517, 518, 519,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	504, 0, 532, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 501, 502, 0, 0, 0, 0, 547, 0,
	503, 0, 0, 496, 497, 499, 498, 500, 505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 546, 0, 0, 421, 0, 0, 544, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 534, 545, 540, 541, 538, 539, 0, 537,
	536, 535, 548, 526, 527, 528, 529, 531, 0, 542,
	543, 530, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 533, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 524, 525, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 67, 0, 0, 174, 175, 176, 511, 510,
	513, 514, 515, 516, 0, 0, 213, 512, 219, 517,
	518, 519, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 504, 0, 532, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 501, 502, 0, 0, 0, 0,
	547, 0, 503, 0, 0, 496, 497, 499, 498, 500,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 546, 0, 0, 421, 0, 0, 544,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 534, 545, 540, 541, 538, 539,
	0, 537, 536, 535, 548, 526, 527, 528, 529, 531,
	0, 542, 543, 530, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 0, 0, 0, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 924, 923, 933, 934, 926, 927, 928, 929,
	930, 931, 932, 925, 0, 0, 935, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 774, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 0,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 0, 0, 0, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 219, 0, 0, 0, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 0, 0, 773,
	421, 0, 0, 0, 0, 0, 0, 770, 771, 279,
	738, 276, 188, 202, 764, 768, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 0,
	0, 1024, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 0, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 0, 0,
	0, 174, 175, 176, 0, 1026, 0, 0, 0, 0,
	0, 0, 213, 0, 219, 0, 0, 0, 0, 233,
	268, 239, 232, 394, 913, 914, 912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 915, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 33,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 280, 0, 0,
	334, 0, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 0, 284, 0, 0,
	379, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 221, 192,
	318, 380, 249, 67, 0, 564, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	0, 0, 0, 0, 233, 268, 239, 232, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 307, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 276, 188,
	202, 0, 0, 317, 355, 360, 0, 0, 0, 224,
	0, 358, 330, 409, 209, 247, 352, 335, 356, 0,
	0, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 0, 0, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 0, 0,
	329, 359, 215, 411, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 200, 282, 0, 349,
	250, 432, 416, 414, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	0, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 321, 0, 0, 0, 1379, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 280,
	0, 0, 334, 0, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 0, 284,
	0, 0, 379, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 1381, 0, 0, 0, 0, 0, 0, 213,
	0, 219, 0, 0, 0, 0, 233, 268, 239, 232,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 307, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	276, 188, 202, 0, 0, 317, 355, 360, 0, 0,
	0, 224, 0, 358, 330, 409, 209, 247, 352, 335,
	356, 0, 1377, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 0, 0, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	0, 0, 329, 359, 215, 411, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 200, 282,
	0, 349, 250, 432, 416, 414, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 0, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 280, 0, 0, 334, 0, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	0, 284, 0, 0, 379, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 221, 192, 318, 380, 249, 0, 0, 0,
	174, 175, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 219, 0, 0, 0, 0, 233, 268,
	239, 232, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 732, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 307, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 738, 276, 188, 202, 736, 0, 317, 355, 360,
	0, 0, 0, 224, 0, 358, 330, 409, 209, 247,
	352, 335, 356, 0, 0, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 406, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 205,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 0, 0, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 312, 206, 264, 377,
	277, 286, 0, 0, 329, 359, 215, 411, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	200, 282, 0, 349, 250, 432, 416, 414, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 0, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 321, 0,
	0, 0, 1379, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 280, 0, 0, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 0, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 0,
	0, 0, 174, 175, 176, 0, 1381, 0, 0, 0,
	0, 0, 0, 213, 0, 219, 0, 0, 0, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 307,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 258, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	33, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 67, 0, 0, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 0,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 0, 0, 0, 174,
	175, 176, 0, 0, 1397, 0, 0, 1398, 0, 0,
	213, 0, 219, 0, 0, 0, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 1057, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 0, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 0, 0,
	0, 174, 175, 176, 0, 1056, 0, 0, 0, 0,
	0, 0, 213, 0, 219, 0, 0, 0, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	0, 0, 564, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 0, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 67, 0, 0, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 219, 0,
	0, 0, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 0, 0, 0, 174, 175, 176,
	0, 1381, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 0,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 0, 0, 0, 174,
	175, 176, 0, 1026, 0, 0, 0, 0, 0, 0,
	213, 0, 219, 0, 0, 0, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 1181,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 0, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 0, 0,
	0, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 219, 0, 0, 0, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 1179, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	0, 0, 0, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 1177, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 0, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 0, 0, 0, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 219, 0,
	0, 0, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 1175, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 0, 0, 0, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 321, 0, 1173, 0, 0,
	0, 0, 0, 0, 237, 0, 0, 0, 0, 0,
	280, 0, 0, 334, 0, 370, 223, 289, 287, 396,
	246, 240, 236, 222, 265, 294, 332, 387, 326, 0,
	284, 0, 0, 379, 306, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 221, 192, 318, 380, 249, 0, 0, 0, 174,
	175, 176, 0, 0, 0, 0, 0, 0, 0, 0,
	213, 0, 219, 0, 0, 0, 0, 233, 268, 239,
	232, 394, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 256, 0, 307, 0, 0, 0,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	0, 276, 188, 202, 0, 0, 317, 355, 360, 0,
	0, 0, 224, 0, 358, 330, 409, 209, 247, 352,
	335, 356, 0, 0, 357, 285, 398, 347, 408, 422,
	423, 231, 311, 415, 391, 419, 431, 203, 228, 324,
	384, 412, 376, 304, 395, 275, 375, 254, 191, 283,
	195, 386, 406, 214, 368, 0, 0, 0, 197, 404,
	383, 301, 272, 273, 196, 0, 351, 235, 252, 226,
	320, 401, 402, 225, 433, 204, 418, 199, 205, 417,
	313, 397, 405, 302, 293, 198, 403, 300, 292, 278,
	245, 261, 345, 288, 346, 262, 309, 308, 310, 0,
	193, 0, 381, 413, 434, 211, 0, 0, 393, 427,
	430, 0, 348, 212, 253, 244, 344, 251, 281, 426,
	428, 429, 210, 342, 259, 312, 206, 264, 377, 277,
	286, 0, 0, 329, 359, 215, 411, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 200,
	282, 0, 349, 250, 432, 416, 414, 0, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 201, 208, 217, 229, 242, 248,
	257, 260, 263, 266, 267, 269, 274, 291, 295, 296,
	297, 298, 314, 315, 316, 319, 322, 323, 325, 327,
	328, 331, 337, 338, 339, 340, 341, 343, 350, 354,
	361, 362, 363, 364, 365, 366, 367, 371, 372, 373,
	374, 382, 385, 399, 400, 410, 420, 424, 258, 407,
	425, 0, 290, 0, 194, 220, 207, 227, 241, 243,
	271, 299, 305, 333, 336, 255, 238, 218, 353, 216,
	369, 388, 389, 390, 392, 303, 234, 321, 0, 1169,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 280, 0, 0, 334, 0, 370, 223, 289,
	287, 396, 246, 240, 236, 222, 265, 294, 332, 387,
	326, 0, 284, 0, 0, 379, 306, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 221, 192, 318, 380, 249, 0, 0,
	0, 174, 175, 176, 0, 0, 0, 0, 0, 0,
	0, 0, 213, 0, 219, 0, 0, 0, 0, 233,
	268, 239, 232, 394, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 307, 0,
	0, 0, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 0, 276, 188, 202, 0, 0, 317, 355,
	360, 0, 0, 0, 224, 0, 358, 330, 409, 209,
	247, 352, 335, 356, 0, 0, 357, 285, 398, 347,
	408, 422, 423, 231, 311, 415, 391, 419, 431, 203,
	228, 324, 384, 412, 376, 304, 395, 275, 375, 254,
	191, 283, 195, 386, 406, 214, 368, 0, 0, 0,
	197, 404, 383, 301, 272, 273, 196, 0, 351, 235,
	252, 226, 320, 401, 402, 225, 433, 204, 418, 199,
	205, 417, 313, 397, 405, 302, 293, 198, 403, 300,
	292, 278, 245, 261, 345, 288, 346, 262, 309, 308,
	310, 0, 193, 0, 381, 413, 434, 211, 0, 0,
	393, 427, 430, 0, 348, 212, 253, 244, 344, 251,
	281, 426, 428, 429, 210, 342, 259, 312, 206, 264,
	377, 277, 286, 0, 0, 329, 359, 215, 411, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 200, 282, 0, 349, 250, 432, 416, 414, 0,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 190, 201, 208, 217, 229,
	242, 248, 257, 260, 263, 266, 267, 269, 274, 291,
	295, 296, 297, 298, 314, 315, 316, 319, 322, 323,
	325, 327, 328, 331, 337, 338, 339, 340, 341, 343,
	350, 354, 361, 362, 363, 364, 365, 366, 367, 371,
	372, 373, 374, 382, 385, 399, 400, 410, 420, 424,
	258, 407, 425, 0, 290, 0, 194, 220, 207, 227,
	241, 243, 271, 299, 305, 333, 336, 255, 238, 218,
	353, 216, 369, 388, 389, 390, 392, 303, 234, 321,
	0, 1167, 0, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 280, 0, 0, 334, 0, 370,
	223, 289, 287, 396, 246, 240, 236, 222, 265, 294,
	332, 387, 326, 0, 284, 0, 0, 379, 306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 221, 192, 318, 380, 249,
	0, 0, 0, 174, 175, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 213, 0, 219, 0, 0, 0,
	0, 233, 268, 239, 232, 394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	307, 0, 0, 0, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 0, 276, 188, 202, 0, 0,
	317, 355, 360, 0, 0, 0, 224, 0, 358, 330,
	409, 209, 247, 352, 335, 356, 0, 0, 357, 285,
	398, 347, 408, 422, 423, 231, 311, 415, 391, 419,
	431, 203, 228, 324, 384, 412, 376, 304, 395, 275,
	375, 254, 191, 283, 195, 386, 406, 214, 368, 0,
	0, 0, 197, 404, 383, 301, 272, 273, 196, 0,
	351, 235, 252, 226, 320, 401, 402, 225, 433, 204,
	418, 199, 205, 417, 313, 397, 405, 302, 293, 198,
	403, 300, 292, 278, 245, 261, 345, 288, 346, 262,
	309, 308, 310, 0, 193, 0, 381, 413, 434, 211,
	0, 0, 393, 427, 430, 0, 348, 212, 253, 244,
	344, 251, 281, 426, 428, 429, 210, 342, 259, 312,
	206, 264, 377, 277, 286, 0, 0, 329, 359, 215,
	411, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 200, 282, 0, 349, 250, 432, 416,
	414, 0, 0, 230, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 201, 208,
	217, 229, 242, 248, 257, 260, 263, 266, 267, 269,
	274, 291, 295, 296, 297, 298, 314, 315, 316, 319,
	322, 323, 325, 327, 328, 331, 337, 338, 339, 340,
	341, 343, 350, 354, 361, 362, 363, 364, 365, 366,
	367, 371, 372, 373, 374, 382, 385, 399, 400, 410,
	420, 424, 258, 407, 425, 0, 290, 0, 194, 220,
	207, 227, 241, 243, 271, 299, 305, 333, 336, 255,
	238, 218, 353, 216, 369, 388, 389, 390, 392, 303,
	234, 321, 0, 1165, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 0, 280, 0, 0, 334,
	0, 370, 223, 289, 287, 396, 246, 240, 236, 222,
	265, 294, 332, 387, 326, 0, 284, 0, 0, 379,
	306, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 221, 192, 318,
	380, 249, 0, 0, 0, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 213, 0, 219, 0,
	0, 0, 0, 233, 268, 239, 232, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 307, 0, 0, 0, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 0, 276, 188, 202,
	0, 0, 317, 355, 360, 0, 0, 0, 224, 0,
	358, 330, 409, 209, 247, 352, 335, 356, 0, 0,
	357, 285, 398, 347, 408, 422, 423, 231, 311, 415,
	391, 419, 431, 203, 228, 324, 384, 412, 376, 304,
	395, 275, 375, 254, 191, 283, 195, 386, 406, 214,
	368, 0, 0, 0, 197, 404, 383, 301, 272, 273,
	196, 0, 351, 235, 252, 226, 320, 401, 402, 225,
	433, 204, 418, 199, 205, 417, 313, 397, 405, 302,
	293, 198, 403, 300, 292, 278, 245, 261, 345, 288,
	346, 262, 309, 308, 310, 0, 193, 0, 381, 413,
	434, 211, 0, 0, 393, 427, 430, 0, 348, 212,
	253, 244, 344, 251, 281, 426, 428, 429, 210, 342,
	259, 312, 206, 264, 377, 277, 286, 0, 0, 329,
	359, 215, 411, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 200, 282, 0, 349, 250,
	432, 416, 414, 0, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	201, 208, 217, 229, 242, 248, 257, 260, 263, 266,
	267, 269, 274, 291, 295, 296, 297, 298, 314, 315,
	316, 319, 322, 323, 325, 327, 328, 331, 337, 338,
	339, 340, 341, 343, 350, 354, 361, 362, 363, 364,
	365, 366, 367, 371, 372, 373, 374, 382, 385, 399,
	400, 410, 420, 424, 258, 407, 425, 0, 290, 0,
	194, 220, 207, 227, 241, 243, 271, 299, 305, 333,
	336, 255, 238, 218, 353, 216, 369, 388, 389, 390,
	392, 303, 234, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 237, 0, 0, 0, 0, 0, 280, 0,
	0, 334, 0, 370, 223, 289, 287, 396, 246, 240,
	236, 222, 265, 294, 332, 387, 326, 0, 284, 0,
	0, 379, 306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 221,
	192, 318, 380, 249, 1140, 0, 0, 174, 175, 176,
	0, 0, 0, 0, 0, 0, 0, 0, 213, 0,
	219, 0, 0, 0, 0, 233, 268, 239, 232, 394,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 307, 0, 0, 0, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 0, 276,
	188, 202, 0, 0, 317, 355, 360, 0, 0, 0,
	224, 0, 358, 330, 409, 209, 247, 352, 335, 356,
	0, 0, 357, 285, 398, 347, 408, 422, 423, 231,
	311, 415, 391, 419, 431, 203, 228, 324, 384, 412,
	376, 304, 395, 275, 375, 254, 191, 283, 195, 386,
	406, 214, 368, 0, 0, 0, 197, 404, 383, 301,
	272, 273, 196, 0, 351, 235, 252, 226, 320, 401,
	402, 225, 433, 204, 418, 199, 205, 417, 313, 397,
	405, 302, 293, 198, 403, 300, 292, 278, 245, 261,
	345, 288, 346, 262, 309, 308, 310, 0, 193, 0,
	381, 413, 434, 211, 0, 0, 393, 427, 430, 0,
	348, 212, 253, 244, 344, 251, 281, 426, 428, 429,
	210, 342, 259, 312, 206, 264, 377, 277, 286, 0,
	0, 329, 359, 215, 411, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 200, 282, 0,
	349, 250, 432, 416, 414, 0, 0, 230, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 201, 208, 217, 229, 242, 248, 257, 260,
	263, 266, 267, 269, 274, 291, 295, 296, 297, 298,
	314, 315, 316, 319, 322, 323, 325, 327, 328, 331,
	337, 338, 339, 340, 341, 343, 350, 354, 361, 362,
	363, 364, 365, 366, 367, 371, 372, 373, 374, 382,
	385, 399, 400, 410, 420, 424, 258, 407, 425, 0,
	290, 0, 194, 220, 207, 227, 241, 243, 271, 299,
	305, 333, 336, 255, 238, 218, 353, 216, 369, 388,
	389, 390, 392, 303, 234, 1039, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 280, 0, 0,
	334, 0, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 0, 284, 0, 0,
	379, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 221, 192,
	318, 380, 249, 0, 0, 0, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	0, 0, 0, 0, 233, 268, 239, 232, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 307, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 276, 188,
	202, 0, 0, 317, 355, 360, 0, 0, 0, 224,
	0, 358, 330, 409, 209, 247, 352, 335, 356, 0,
	0, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 0, 0, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 0, 0,
	329, 359, 215, 411, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 200, 282, 0, 349,
	250, 432, 416, 414, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	0, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234, 321, 0, 0, 0, 0, 0,
	0, 0, 1030, 237, 0, 0, 0, 0, 0, 280,
	0, 0, 334, 0, 370, 223, 289, 287, 396, 246,
	240, 236, 222, 265, 294, 332, 387, 326, 0, 284,
	0, 0, 379, 306, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	221, 192, 318, 380, 249, 0, 0, 0, 174, 175,
	176, 0, 0, 0, 0, 0, 0, 0, 0, 213,
	0, 219, 0, 0, 0, 0, 233, 268, 239, 232,
	394, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 307, 0, 0, 0, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 0,
	276, 188, 202, 0, 0, 317, 355, 360, 0, 0,
	0, 224, 0, 358, 330, 409, 209, 247, 352, 335,
	356, 0, 0, 357, 285, 398, 347, 408, 422, 423,
	231, 311, 415, 391, 419, 431, 203, 228, 324, 384,
	412, 376, 304, 395, 275, 375, 254, 191, 283, 195,
	386, 406, 214, 368, 0, 0, 0, 197, 404, 383,
	301, 272, 273, 196, 0, 351, 235, 252, 226, 320,
	401, 402, 225, 433, 204, 418, 199, 205, 417, 313,
	397, 405, 302, 293, 198, 403, 300, 292, 278, 245,
	261, 345, 288, 346, 262, 309, 308, 310, 0, 193,
	0, 381, 413, 434, 211, 0, 0, 393, 427, 430,
	0, 348, 212, 253, 244, 344, 251, 281, 426, 428,
	429, 210, 342, 259, 312, 206, 264, 377, 277, 286,
	0, 0, 329, 359, 215, 411, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 200, 282,
	0, 349, 250, 432, 416, 414, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 201, 208, 217, 229, 242, 248, 257,
	260, 263, 266, 267, 269, 274, 291, 295, 296, 297,
	298, 314, 315, 316, 319, 322, 323, 325, 327, 328,
	331, 337, 338, 339, 340, 341, 343, 350, 354, 361,
	362, 363, 364, 365, 366, 367, 371, 372, 373, 374,
	382, 385, 399, 400, 410, 420, 424, 258, 407, 425,
	0, 290, 0, 194, 220, 207, 227, 241, 243, 271,
	299, 305, 333, 336, 255, 238, 218, 353, 216, 369,
	388, 389, 390, 392, 303, 234, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 280, 0, 0, 334, 0, 370, 223, 289, 287,
	396, 246, 240, 236, 222, 265, 294, 332, 387, 326,
	0, 284, 0, 0, 379, 306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 221, 192, 318, 380, 249, 0, 0, 0,
	174, 175, 176, 0, 904, 0, 0, 0, 0, 0,
	0, 213, 0, 219, 0, 0, 0, 0, 233, 268,
	239, 232, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 307, 0, 0,
	0, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 0, 276, 188, 202, 0, 0, 317, 355, 360,
	0, 0, 0, 224, 0, 358, 330, 409, 209, 247,
	352, 335, 356, 0, 0, 357, 285, 398, 347, 408,
	422, 423, 231, 311, 415, 391, 419, 431, 203, 228,
	324, 384, 412, 376, 304, 395, 275, 375, 254, 191,
	283, 195, 386, 406, 214, 368, 0, 0, 0, 197,
	404, 383, 301, 272, 273, 196, 0, 351, 235, 252,
	226, 320, 401, 402, 225, 433, 204, 418, 199, 205,
	417, 313, 397, 405, 302, 293, 198, 403, 300, 292,
	278, 245, 261, 345, 288, 346, 262, 309, 308, 310,
	0, 193, 0, 381, 413, 434, 211, 0, 0, 393,
	427, 430, 0, 348, 212, 253, 244, 344, 251, 281,
	426, 428, 429, 210, 342, 259, 312, 206, 264, 377,
	277, 286, 0, 0, 329, 359, 215, 411, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	200, 282, 0, 349, 250, 432, 416, 414, 0, 0,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 201, 208, 217, 229, 242,
	248, 257, 260, 263, 266, 267, 269, 274, 291, 295,
	296, 297, 298, 314, 315, 316, 319, 322, 323, 325,
	327, 328, 331, 337, 338, 339, 340, 341, 343, 350,
	354, 361, 362, 363, 364, 365, 366, 367, 371, 372,
	373, 374, 382, 385, 399, 400, 410, 420, 424, 258,
	407, 425, 0, 290, 0, 194, 220, 207, 227, 241,
	243, 271, 299, 305, 333, 336, 255, 238, 218, 353,
	216, 369, 388, 389, 390, 392, 303, 234, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 0, 0,
	0, 0, 0, 280, 0, 0, 334, 0, 370, 223,
	289, 287, 396, 246, 240, 236, 222, 265, 294, 332,
	387, 326, 0, 284, 0, 0, 379, 306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 221, 192, 318, 380, 249, 0,
	0, 0, 174, 175, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 219, 0, 0, 0, 0,
	233, 268, 239, 232, 394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 256, 0, 307,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 0, 276, 188, 202, 0, 0, 317,
	355, 360, 0, 0, 0, 224, 0, 358, 330, 409,
	209, 247, 352, 335, 356, 0, 0, 357, 285, 398,
	347, 408, 422, 423, 231, 311, 415, 391, 419, 431,
	203, 228, 324, 384, 412, 376, 304, 395, 275, 375,
	254, 191, 283, 195, 386, 406, 214, 368, 0, 0,
	0, 197, 404, 383, 301, 272, 273, 196, 0, 351,
	235, 252, 226, 320, 401, 402, 225, 433, 204, 418,
	199, 205, 417, 313, 397, 405, 302, 293, 198, 403,
	300, 292, 278, 245, 261, 345, 288, 346, 262, 309,
	308, 310, 0, 193, 0, 381, 413, 434, 211, 0,
	0, 393, 427, 430, 0, 348, 212, 253, 244, 344,
	251, 281, 426, 428, 429, 210, 342, 259, 312, 206,
	264, 377, 277, 286, 0, 0, 329, 359, 215, 411,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 200, 282, 0, 349, 250, 432, 416, 414,
	0, 0, 230, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 201, 208, 217,
	229, 242, 248, 257, 260, 263, 266, 267, 269, 274,
	291, 295, 296, 297, 298, 314, 315, 316, 319, 322,
	323, 325, 327, 328, 331, 337, 338, 339, 340, 341,
	343, 350, 354, 361, 362, 363, 364, 365, 366, 367,
	371, 372, 373, 374, 382, 385, 399, 400, 410, 420,
	424, 479, 407, 425, 0, 290, 0, 194, 220, 207,
	227, 241, 243, 271, 299, 305, 333, 336, 255, 238,
	218, 353, 216, 369, 388, 389, 390, 392, 303, 234,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 280, 0, 0, 334, 0,
	370, 223, 289, 287, 396, 246, 240, 236, 222, 265,
	294, 332, 387, 326, 0, 284, 0, 0, 379, 306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 221, 192, 318, 380,
	249, 0, 0, 0, 174, 175, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 213, 0, 219, 0, 0,
	0, 0, 233, 268, 239, 232, 394, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 307, 0, 182, 0, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 0, 276, 188, 202, 0,
	0, 317, 355, 360, 0, 0, 0, 224, 0, 358,
	330, 409, 209, 247, 352, 335, 356, 0, 0, 357,
	285, 398, 347, 408, 422, 423, 231, 311, 415, 391,
	419, 431, 203, 228, 324, 384, 412, 376, 304, 395,
	275, 375, 254, 191, 283, 195, 386, 406, 214, 368,
	0, 0, 0, 197, 404, 383, 301, 272, 273, 196,
	0, 351, 235, 252, 226, 320, 401, 402, 225, 433,
	204, 418, 199, 205, 417, 313, 397, 405, 302, 293,
	198, 403, 300, 292, 278, 245, 261, 345, 288, 346,
	262, 309, 308, 310, 0, 193, 0, 381, 413, 434,
	211, 0, 0, 393, 427, 430, 0, 348, 212, 253,
	244, 344, 251, 281, 426, 428, 429, 210, 342, 259,
	312, 206, 264, 377, 277, 286, 0, 0, 329, 359,
	215, 411, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 200, 282, 0, 349, 250, 432,
	416, 414, 0, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 201,
	208, 217, 229, 242, 248, 257, 260, 263, 266, 267,
	269, 274, 291, 295, 296, 297, 298, 314, 315, 316,
	319, 322, 323, 325, 327, 328, 331, 337, 338, 339,
	340, 341, 343, 350, 354, 361, 362, 363, 364, 365,
	366, 367, 371, 372, 373, 374, 382, 385, 399, 400,
	410, 420, 424, 258, 407, 425, 0, 290, 0, 194,
	220, 207, 227, 241, 243, 271, 299, 305, 333, 336,
	255, 238, 218, 353, 216, 369, 388, 389, 390, 392,
	303, 234, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 280, 0, 0,
	334, 0, 370, 223, 289, 287, 396, 246, 240, 236,
	222, 265, 294, 332, 387, 326, 0, 284, 0, 0,
	379, 306, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 221, 192,
	318, 380, 249, 0, 0, 0, 174, 175, 176, 0,
	0, 0, 0, 0, 0, 0, 0, 213, 0, 219,
	0, 0, 0, 0, 233, 268, 239, 232, 394, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 307, 0, 0, 0, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 0, 276, 188,
	202, 0, 0, 317, 355, 360, 0, 0, 0, 224,
	0, 358, 330, 409, 209, 247, 352, 335, 356, 0,
	0, 357, 285, 398, 347, 408, 422, 423, 231, 311,
	415, 391, 419, 431, 203, 228, 324, 384, 412, 376,
	304, 395, 275, 375, 254, 191, 283, 195, 386, 406,
	214, 368, 0, 0, 0, 197, 404, 383, 301, 272,
	273, 196, 0, 351, 235, 252, 226, 320, 401, 402,
	225, 433, 204, 418, 199, 205, 417, 313, 397, 405,
	302, 293, 198, 403, 300, 292, 278, 245, 261, 345,
	288, 346, 262, 309, 308, 310, 0, 193, 0, 381,
	413, 434, 211, 0, 0, 393, 427, 430, 0, 348,
	212, 253, 244, 344, 251, 281, 426, 428, 429, 210,
	342, 259, 312, 206, 264, 377, 277, 286, 0, 0,
	329, 359, 215, 411, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 200, 282, 0, 349,
	250, 432, 416, 414, 0, 0, 230, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 201, 208, 217, 229, 242, 248, 257, 260, 263,
	266, 267, 269, 274, 291, 295, 296, 297, 298, 314,
	315, 316, 319, 322, 323, 325, 327, 328, 331, 337,
	338, 339, 340, 341, 343, 350, 354, 361, 362, 363,
	364, 365, 366, 367, 371, 372, 373, 374, 382, 385,
	399, 400, 410, 420, 424, 258, 407, 425, 0, 290,
	0, 194, 220, 207, 227, 241, 243, 271, 299, 305,
	333, 336, 255, 238, 218, 353, 216, 369, 388, 389,
	390, 392, 303, 234,
}

var yyPact = [...]int{
	3377, -1000, -322, 1602, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1566, 1200, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	611, 1241, 156, 1495, 275, 133, 936, 359, 39, 25191,
	353, 121, 25623, -1000, 53, -1000, 34, 25623, 46, 24759,
	-1000, -1000, -1000, 11766, 1441, -51, -59, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1216, 1536, 1551, 1564, 1040,
	1501, -1000, 10025, 10025, 296, 296, 296, 8297, -1000, -1000,
	15667, 25623, 25623, 1248, 291, 936, 350, 349, 347, 291,
	-143, -1000, -1000, -1000, 1495, -1000, -1000, 181, -1000, 201,
	1201, -1000, 1198, -1000, 346, 363, 198, 278, 277, 197,
	196, 194, 193, 191, 189, 188, 187, 204, -1000, 491,
	491, -189, -192, 2138, 282, 282, 282, 329, 1473, 1465,
	-1000, 456, -1000, 491, 491, 172, 491, 491, 491, 491,
	161, 160, 491, 491, 491, 491, 491, 491, 491, 491,
	491, 491, 491, 491, 491, 491, 491, 25623, -1000, 94,
	612, 506, 1495, 148, -1000, -1000, -1000, 25623, 287, 936,
	287, 287, 25623, -1000, 418, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 25623, 575, 575, 575, 575,
	575, 575, 52, -1000, 7, 117, 112, 146, -16, 936,
	225, -1000, 410, -1000, 120, 22, -1000, 575, 6513, 6513,
	6513, -1000, 1478, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 327, -1000, -1000, -1000, -1000, 25623, 24327, 175, 503,
	-1000, -1000, -1000, -1000, 1059, 688, -1000, 11766, 1219, 1208,
	1208, -1000, -1000, 411, -1000, -1000, 13062, 13062, 13062, 13062,
	13062, 13062, 13062, 13062, 13062, 13062, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1208, 417, -1000, 11334, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 11766, 1208, 1208, 1208, 1208, 1208, 1208, 1208,
	1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, 1208, -1000,
	-1000, -1000, 25623, -1000, 1566, -1000, 1200, -1000, -1000, -1000,
	1504, 11766, 11766, 1566, -1000, 1373, 10025, -1000, -1000, 1491,
	-1000, -1000, -1000, -1000, 668, 1588, -1000, 14358, 416, 1587,
	23895, -1000, 18272, 23463, 1196, 7851, -106, -1000, -1000, -1000,
	501, 17408, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1478, 1100, 25623, -1000, -1000, 3632, 936, -1000, 1236, -1000,
	1074, -1000, 1217, 94, 25623, 579, 1286, 936, 936, 936,
	936, -1000, -1000, -1000, 491, 491, 203, 275, 3391, -1000,
	-1000, -1000, 23024, 1235, 936, -1000, 1234, -1000, 1511, 315,
	469, 469, 936, -1000, -1000, 25623, 936, 1510, 1506, 25623,
	25623, -1000, 22592, -1000, 22160, 21728, 810, 25623, 21296, 20864,
	20432, 20000, 19568, -1000, 1301, -1000, 1215, -1000, -1000, -1000,
	25623, 25623, 25623, -39, -1000, -1000, 25623, 936, -1000, -1000,
	808, 807, 491, 491, 804, 937, 931, 924, 491, 491,
	803, 922, 929, 136, 802, 801, 785, 867, 915, 116,
	840, 789, 784, 25623, 1231, -1000, 76, 500, 165, 200,
	134, 25623, 143, 1495, 1440, 1195, 325, 25623, 1523, 1309,
	25623, 936, -1000, 6959, -1000, -1000, 898, 11766, -1000, -1000,
	-1000, -1000, -1000, 575, 25623, 575, 25623, 575, 575, 575,
	575, 641, 655, 641, -1000, -1000, -1000, -1000, 6513, 6513,
	25623, 6513, 6513, 25623, 6513, 6513, 655, -1000, -1000, -1000,
	397, -1000, 1307, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	45, -1000, -1000, -1000, -1000, -1000, 1602, -1000, -1000, -1000,
	-126, 11766, 11766, 11766, 11766, 729, 470, 13062, 757, 570,
	13062, 13062, 13062, 13062, 13062, 13062, 13062, 13062, 13062, 13062,
	13062, 13062, 13062, 13062, 13062, 631, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 936, -1000, 1600, 993, 993, 430,
	430, 430, 430, 430, 430, 430, 430, 430, 13494, 8729,
	6959, 1040, 1057, 1566, 10025, 10025, 11766, 11766, 10889, 10457,
	10025, 1469, 574, 688, 25623, -1000, -1000, 12630, -1000, -1000,
	-1000, -1000, -1000, 941, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 25623, 25623, 10025, 10025, 10025, 10025, 10025, -1000, 1192,
	-1000, -170, 15235, 1551, 1040, 1491, 1515, 1593, 452, 698,
	1187, -1000, 836, 1551, 16976, 1183, -1000, 1491, -1000, -1000,
	-1000, 25623, -1000, -1000, 19136, -1000, -1000, 6067, 25623, 184,
	25623, -1000, 1145, 1342, -1000, -1000, -1000, 1533, 16544, 25623,
	1077, 1061, -1000, -1000, 415, 7405, -106, -1000, 7405, 1119,
	-1000, -97, -112, 9161, 428, -1000, -1000, -1000, 2138, 13926,
	996, 690, -26, -1000, -1000, -1000, 1217, -1000, 1217, 1217,
	1217, 1217, -39, -39, -39, -39, -1000, -1000, -1000, -1000,
	-1000, 1229, 1228, -1000, 1217, 1217, 1217, 1217, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1227, 1227, 1227, 1218, 1218,
	273, -1000, 11766, 104, 25623, 1519, 778, 76, -1000, 1509,
	1306, -1000, 25623, 1286, 1286, 1286, -1000, 921, 869, -1000,
	1185, -1000, -1000, 1563, -1000, -1000, 459, 639, 629, 523,
	25623, 61, 177, -1000, 263, -1000, 25623, 1226, 1505, 469,
	936, -1000, 936, -1000, -1000, -1000, -1000, 414, -1000, -1000,
	936, 1172, -1000, 1165, 736, 596, 735, 578, 1172, -1000,
	-1000, -164, 1172, -1000, 1172, -1000, 1172, -1000, 1172, -1000,
	1172, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 480,
	25623, 61, 631, -1000, 324, -1000, -1000, 631, 631, -1000,
	-1000, -1000, -1000, 897, 895, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -315, 25623, 332, 65, 125, 25623, 25623, 25623, 25623,
	25623, 373, -1000, -1000, -1000, 159, 25623, 25623, 405, -1000,
	25623, 364, -1000, -1000, -1000, -1000, -1000, -1000, 688, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 575, 25623, 25623,
	25623, -1000, -1000, 575, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 25623, -1000, 894, 25623, 25623, -1000, -1000, -1000,
	-1000, -1000, 688, 470, 528, 488, -1000, -1000, 747, -1000,
	-1000, 2191, -1000, -1000, -1000, -1000, 757, 13062, 13062, 13062,
	512, 2191, 2469, 593, 1552, 430, 604, 604, 467, 467,
	467, 467, 467, 620, 620, -1000, -1000, -1000, -1000, 941,
	-1000, -1000, -1000, 941, 10025, 10025, 1154, 1208, 395, -1000,
	1216, -1000, -1000, 1551, 1012, 1012, 694, 827, 539, 1584,
	1012, 519, 1583, 1012, 1012, 10025, -1000, -1000, 663, -1000,
	11766, 941, -1000, 833, 1140, 1132, 1012, 941, 941, 1012,
	1012, 25623, -1000, -287, -1000, -124, 437, 1208, -1000, 18704,
	-1000, -1000, 1504, -1000, -1000, 1432, -1000, 1370, 11766, 11766,
	11766, -1000, -1000, -1000, 1504, 1547, -1000, 1397, 1395, 1572,
	10025, 18272, 1491, -1000, -1000, -1000, 390, 1572, 1131, 1208,
	-1000, 25623, 18272, 18272, 18272, 18272, 18272, -1000, 1321, 1320,
	-1000, 1364, 1336, 1377, 25623, -1000, 1050, 1040, 16544, 184,
	1113, 18272, 25623, -1000, -1000, 18272, 25623, 5621, -1000, 1119,
	-106, -91, -1000, -1000, -1000, -1000, 688, -1000, 863, -1000,
	2031, -1000, 279, -1000, -1000, -1000, -1000, 1488, -1000, 650,
	-29, -1000, -1000, -39, -39, -1000, -1000, 428, 687, 428,
	428, 428, 892, 892, -1000, -1000, -1000, -1000, -1000, 775,
	-1000, -1000, -1000, 769, -1000, -1000, 935, 1294, 104, -1000,
	-1000, 491, 889, 1448, -1000, -1000, 981, 331, -1000, 25623,
	-1000, 1305, 1299, 1297, -1000, -1000, -1000, -1000, 2709, 25623,
	1044, -1000, 59, 25623, 976, 25623, -1000, 1039, 25623, -1000,
	936, -1000, -1000, 6959, -1000, 25623, 1208, -1000, -1000, -1000,
	-1000, 352, 1484, 1481, 61, 59, 428, 936, -1000, -1000,
	-1000, -1000, -1000, -325, 1037, 25623, 137, -1000, 1220, 839,
	-1000, 1261, -1000, -1000, -1000, -1000, 56, 164, 157, 305,
	-1000, -1000, -1000, -1000, 1294, 25623, -1000, -1000, -1000, -1000,
	641, -1000, 641, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	512, 2191, 2297, -1000, 13062, 13062, -1000, -1000, 1012, 1012,
	10025, 6959, 1566, 1504, -1000, -1000, 348, 631, 348, 13062,
	13062, -1000, 13062, 13062, -1000, -159, 1186, 548, -1000, 11766,
	707, -1000, -1000, 13062, 13062, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 343, 342, 341, 25623, -1000, -1000,
	829, 887, 1354, 688, 688, -1000, -1000, 25623, -1000, -1000,
	-1000, -1000, 1570, 11766, -1000, 1116, -1000, 5175, 1551, 1296,
	25623, 1208, 1602, 14803, 25623, 1123, -1000, 497, 1342, 1260,
	1293, 1391, -1000, -1000, -1000, -1000, 1311, -1000, 1302, -1000,
	-1000, -1000, -1000, -1000, 1040, 1572, 18272, 1120, -1000, 1120,
	-1000, 388, -1000, -1000, -1000, -115, -122, -1000, -1000, -1000,
	2138, -1000, -1000, 1291, 13062, -1000, -1000, -1000, 428, 428,
	-1000, -1000, -1000, -1000, -1000, -1000, 1004, -1000, 994, 1115,
	990, 35, -1000, 1189, 1476, 491, 491, -1000, 768, -1000,
	936, -1000, 25623, -1000, 25623, 25623, 25623, 1562, 1108, -1000,
	25623, -1000, -1000, 25623, -1000, -1000, 1387, 104, 988, -1000,
	-1000, -1000, 177, 25623, -1000, 993, 59, -1000, -1000, -1000,
	-1000, -1000, -1000, 1210, -1000, -1000, -1000, 970, -1000, -165,
	936, 25623, 25623, 25623, -1000, 25623, -1000, -1000, 575, 575,
	-1000, 13062, 2191, 2191, -1000, -1000, 941, -1000, 1551, -1000,
	941, 1217, 1217, -1000, 1217, 1218, -1000, 1217, 19, 1217,
	16, 941, 941, 2215, 2161, 2124, 1258, 1208, -153, -1000,
	688, 11766, 2078, 1036, 1208, 1208, 1208, 980, 886, -39,
	-1000, -1000, -1000, 1568, 1561, 688, -1000, -1000, -1000, 1513,
	1107, 1029, -1000, -1000, 9593, 985, 1381, 386, 980, 1566,
	25623, 11766, -1000, -1000, 11766, 1211, -1000, 11766, -1000, -1000,
	-1000, 1566, 1566, 1120, -1000, -1000, 440, -1000, -1000, -1000,
	-1000, -22, 1592, 2191, -1000, -1000, -39, 854, -39, 765,
	-1000, 732, -1000, -1000, -231, -1000, -1000, 1184, 1292, -1000,
	-1000, 1210, -1000, -1000, -1000, 25623, 25623, -1000, -1000, 173,
	-1000, 239, 975, -1000, -190, -1000, -1000, 1530, 25623, -1000,
	-1000, 6959, -1000, -1000, 1209, 1270, -1000, -1000, -1000, -1000,
	2191, -1000, 1504, -1000, -1000, 228, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 13062, 13062, 13062, 13062, 13062, 1551,
	853, 688, 13062, 13062, 17840, 25623, 25623, 16099, -39, -66,
	-1000, 11766, 11766, 1503, -1000, 1208, -1000, 1110, 25623, 1208,
	25623, -1000, 1551, -1000, 688, 688, 25623, 688, 1551, -1000,
	447, -1000, -28, 428, -1000, 428, 966, 946, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1526, 1108, -1000, 170,
	25623, -1000, 177, -1000, -196, -197, 1200, 973, 1102, -1000,
	487, 25623, 25623, -1000, -1000, -1000, 833, 833, 833, 833,
	205, 941, -1000, 833, 833, 969, -1000, 969, 969, 437,
	-282, -1000, 1435, 1433, 688, 1059, 1591, -1000, 1208, 1602,
	380, 1029, -1000, -1000, 954, -1000, 666, 1500, -1000, 1499,
	-1000, -1000, -1000, -1000, -1000, 1200, 1208, 1205, -1000, -1000,
	-1000, 152, -1000, 6959, 4729, 951, -1000, -1000, -1000, -1000,
	-1000, 941, 107, -178, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -66, 216, -1000, 1400, 1378, 1559, 25623, 1029, 25623,
	-1000, -1000, 850, -1000, -1000, 152, 12198, 25623, -1000, -73,
	-1000, -1000, -1000, -1000, -1000, 1261, -1000, 1343, -162, -185,
	1418, 1420, 1420, 1433, 1558, 1430, 1428, -1000, 837, 1010,
	-1000, -1000, -1000, 833, 941, 945, 267, -1000, -1000, -165,
	-1000, 1223, -1000, 1415, 771, -1000, -1000, -1000, -1000, 823,
	-1000, 1554, 1548, -1000, -1000, -1000, 1290, 87, -1000, -166,
	-1000, 739, -1000, -1000, -1000, 815, 772, 1288, -1000, 1579,
	-1000, -180, -1000, -1000, -1000, -1000, -1000, 1581, 368, 368,
	-186, -1000, -1000, -1000, 249, 767, -1000, -1000, -1000, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 1866, 1864, 14, 83, 81, 1863, 1862, 1861, 1858,
	122, 121, 120, 1857, 1856, 1855, 1854, 1853, 1851, 1849,
	1848, 1846, 1845, 1844, 1843, 65, 116, 35, 38, 118,
	1842, 1841, 45, 1840, 1838, 1837, 114, 113, 455, 1836,
	105, 1835, 1834, 1833, 1832, 1829, 1828, 1822, 1821, 1817,
	1816, 1814, 1813, 127, 1812, 1808, 7, 1806, 73, 1805,
	1804, 1803, 1800, 1799, 1798, 1795, 102, 1794, 44, 258,
	42, 70, 1793, 69, 832, 1792, 94, 111, 1791, 345,
	1787, 43, 82, 79, 1784, 40, 1782, 1781, 90, 1780,
	1776, 1773, 68, 1771, 1770, 2902, 1768, 66, 74, 16,
	36, 1765, 1758, 1757, 1755, 39, 174, 1754, 1753, 12,
	1751, 1749, 126, 1748, 78, 21, 17, 20, 23, 1747,
	77, 1745, 8, 62, 32, 1743, 76, 1741, 1740, 1739,
	1738, 22, 1737, 71, 89, 30, 1733, 5, 10, 1732,
	1730, 1729, 1728, 1724, 1722, 3, 1715, 1709, 1707, 26,
	1704, 11, 27, 67, 128, 29, 9, 1703, 108, 1701,
	28, 103, 63, 101, 1700, 1699, 1698, 904, 1697, 48,
	1696, 131, 1695, 1693, 61, 1678, 408, 698, 1676, 1675,
	1674, 49, 1127, 2331, 19, 110, 1673, 1671, 1935, 46,
	72, 25, 1670, 1669, 1668, 130, 115, 51, 901, 41,
	1666, 1665, 1664, 1663, 1662, 1661, 1658, 232, 1657, 1656,
	1653, 37, 18, 109, 33, 1652, 1651, 1650, 1647, 1646,
	57, 84, 1645, 100, 99, 64, 134, 1644, 112, 86,
	56, 1643, 80, 1642, 1641, 1639, 1637, 55, 1636, 1635,
	1634, 1632, 95, 87, 59, 31, 1631, 34, 106, 98,
	97, 1630, 24, 117, 13, 1627, 2, 0, 1626, 6,
	123, 1466, 132, 1624, 1623, 1, 1622, 4, 1618, 1617,
	75, 1616, 1613, 1612, 1609, 2698, 456, 104, 1608, 119,
}

var yyR1 = [...]int{
	0, 273, 274, 274, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 257, 257, 257, 260, 260, 21, 50,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 60, 60, 11, 12, 12, 12, 12,
	277, 277, 90, 90, 88, 88, 89, 89, 153, 153,
	13, 14, 14, 163, 163, 162, 162, 162, 164, 164,
	164, 164, 198, 198, 15, 15, 15, 15, 15, 67,
	67, 259, 259, 258, 256, 256, 255, 255, 254, 23,
	24, 33, 33, 33, 33, 34, 35, 261, 261, 233,
	39, 39, 38, 38, 38, 38, 40, 40, 37, 37,
	36, 36, 235, 235, 222, 222, 234, 234, 234, 234,
	234, 234, 234, 221, 200, 200, 200, 200, 203, 203,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 202,
	202, 202, 202, 202, 204, 204, 204, 204, 204, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 206, 206, 206, 206, 206, 206,
	206, 206, 220, 220, 207, 207, 213, 213, 214, 214,
	214, 216, 216, 217, 217, 178, 178, 178, 209, 209,
	210, 210, 215, 215, 211, 211, 211, 212, 212, 212,
	219, 219, 219, 219, 219, 208, 208, 223, 247, 247,
	246, 246, 244, 244, 244, 244, 232, 232, 241, 241,
	241, 241, 241, 231, 231, 227, 227, 227, 228, 228,
	229, 229, 226, 226, 230, 230, 243, 243, 242, 224,
	224, 225, 225, 249, 249, 249, 249, 250, 266, 267,
	265, 265, 265, 265, 265, 58, 58, 58, 179, 179,
	179, 239, 239, 238, 238, 238, 240, 240, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 173, 173, 173,
	264, 264, 264, 264, 264, 264, 263, 263, 263, 236,
	236, 236, 262, 262, 123, 123, 124, 124, 30, 30,
	30, 30, 30, 30, 29, 29, 29, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 31,
	31, 26, 26, 26, 26, 26, 26, 26, 26, 26,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 253,
	253, 253, 253, 253, 253, 253, 253, 218, 218, 218,
	251, 251, 252, 252, 17, 22, 22, 18, 18, 18,
	18, 19, 19, 41, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 170, 170, 268, 268, 172, 172, 168, 168,
	171, 171, 169, 169, 169, 174, 174, 174, 175, 175,
	272, 272, 272, 43, 43, 45, 45, 46, 47, 47,
	193, 193, 194, 194, 48, 49, 59, 59, 59, 59,
	59, 59, 61, 61, 61, 7, 7, 7, 7, 55,
	55, 55, 6, 6, 44, 44, 51, 269, 269, 270,
	271, 271, 271, 271, 52, 20, 278, 53, 54, 54,
	66, 66, 66, 62, 62, 62, 65, 65, 65, 70,
	70, 72, 72, 72, 72, 72, 73, 73, 73, 73,
	73, 73, 69, 69, 71, 71, 71, 71, 186, 186,
	186, 185, 185, 80, 80, 81, 81, 82, 82, 83,
	83, 83, 121, 98, 98, 152, 152, 151, 151, 154,
	154, 84, 84, 84, 84, 85, 85, 86, 86, 87,
	87, 192, 192, 191, 191, 191, 190, 190, 91, 91,
	91, 93, 92, 92, 92, 92, 94, 94, 96, 96,
	95, 95, 97, 99, 99, 99, 99, 99, 100, 100,
	79, 79, 79, 79, 79, 79, 79, 79, 166, 166,
	102, 102, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 113, 113, 113, 113, 113, 113, 103, 103,
	103, 103, 103, 103, 103, 68, 68, 114, 114, 114,
	120, 115, 115, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 110, 110, 110,
	110, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 109, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 109, 109, 109,
	279, 279, 112, 111, 111, 111, 111, 111, 111, 111,
	64, 64, 64, 64, 64, 197, 197, 197, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 127, 127, 63, 63, 125, 125, 126, 128, 128,
	122, 122, 122, 105, 105, 105, 105, 105, 105, 105,
	105, 107, 107, 107, 129, 129, 130, 130, 131, 131,
	132, 132, 133, 134, 134, 134, 135, 135, 135, 135,
	32, 32, 32, 32, 32, 27, 27, 27, 27, 28,
	28, 28, 74, 74, 74, 74, 76, 76, 75, 75,
	56, 56, 57, 57, 57, 77, 77, 78, 78, 78,
	78, 149, 149, 149, 136, 136, 136, 136, 141, 141,
	141, 137, 137, 139, 139, 139, 140, 140, 140, 138,
	144, 144, 146, 146, 145, 145, 143, 143, 148, 148,
	147, 147, 142, 142, 104, 104, 104, 104, 104, 150,
	150, 150, 150, 155, 155, 116, 116, 118, 118, 117,
	119, 156, 156, 160, 157, 157, 161, 161, 161, 161,
	161, 158, 158, 159, 159, 187, 187, 187, 165, 165,
	176, 176, 177, 177, 167, 167, 180, 180, 180, 248,
	248, 245, 183, 183, 184, 184, 188, 188, 189, 189,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 181,
	181, 181, 181, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 182, 182,
	182, 275, 276, 195, 196, 196, 196,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 11, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 4,
	3, 6, 7, 7, 7, 4, 2, 1, 1, 4,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 8, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 0, 1, 0, 1, 2, 0, 2,
	0, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 1, 2, 1, 0, 2, 5, 0, 1,
	1, 2, 1, 3, 2, 3, 0, 1, 3, 3,
	3, 4, 2, 0, 2, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 10, 11, 11, 12, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 0, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 0, 2, 0, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 4, 4, 2, 10, 3, 6, 7, 5, 5,
	5, 12, 7, 5, 9, 5, 3, 7, 4, 4,
	4, 4, 3, 3, 3, 7, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 0, 2, 2,
	1, 3, 8, 8, 3, 3, 5, 5, 6, 5,
	4, 3, 2, 3, 3, 3, 3, 3, 3, 3,
	4, 2, 4, 4, 4, 4, 4, 5, 7, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 4, 7,
	2, 4, 5, 4, 3, 3, 5, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 5,
	0, 1, 0, 1, 2, 3, 0, 3, 3, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 2, 2, 3, 1, 3, 2,
	1, 2, 1, 2, 2, 2, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 0,
	1, 0, 1, 2, 3, 4, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 2, 3, 5, 0, 1,
	2, 1, 1, 0, 2, 1, 3, 1, 1, 1,
	3, 3, 3, 3, 7, 0, 3, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 5,
	6, 4, 4, 6, 6, 6, 8, 8, 8, 8,
	9, 8, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 1, 2, 3,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 0, 2, 0, 3,
	1, 3, 2, 0, 1, 1, 0, 2, 4, 4,
	0, 2, 2, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 0, 2, 4, 0, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 4, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -273, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -4, -275, 6, 7, 8, -60, 10, 11, 31,
	-23, -33, 152, -34, -24, 153, -35, 155, 154, 190,
	156, 183, 70, 224, 225, 227, 228, 229, 230, -61,
	188, 189, 158, 35, 41, 32, 33, 80, 9, 322,
	185, 184, 26, -274, 451, -66, 5, -131, 16, -3,
	-53, -278, -53, -53, -53, -53, -53, -53, -233, -235,
	80, 125, 80, -67, 162, 163, 172, 171, 168, -261,
	106, 313, 161, -39, -38, -37, -36, -40, 30, -30,
	-31, -253, -29, -26, 157, 154, 198, 101, 102, 190,
	191, 192, 156, 174, 189, 193, 188, 207, -25, 76,
	32, 335, 338, -240, 153, 159, 160, 323, 104, 103,
	71, 155, -237, 274, 428, -40, 430, 94, 96, 429,
	40, 163, 431, 432, 433, 434, 173, 435, 436, 437,
	438, 444, 445, 446, 447, 105, 5, 162, -261, -74,
	284, 76, -260, -257, 83, 84, 85, 162, 162, 163,
	164, -261, 162, -95, -188, -257, -182, 332, 176, 366,
	367, 222, 76, 274, 428, 224, 238, 232, 259, 251,
	333, 368, 177, 211, 249, 252, 300, 430, 369, 191,
	296, 279, 287, 94, 227, 309, 443, 370, 441, 96,
	429, 75, 47, 40, 186, 247, 243, 431, 212, 371,
	343, 205, 104, 101, 450, 241, 46, 28, 440, 103,
	45, 432, 372, 433, 289, 264, 44, 192, 373, 79,
	337, 291, 242, 288, 221, 439, 158, 374, 422, 298,
	375, 265, 269, 376, 301, 48, 377, 378, 102, 379,
	74, 434, 236, 237, 380, 219, 175, 303, 263, 173,
	34, 292, 334, 223, 54, 199, 304, 42, 267, 41,
	426, 381, 262, 258, 49, 382, 383, 384, 385, 435,
	261, 235, 257, 449, 217, 436, 58, 160, 271, 270,
	272, 206, 299, 254, 386, 387, 388, 180, 77, 389,
	244, 19, 390, 391, 213, 392, 52, 393, 394, 307,
	189, 395, 50, 437, 37, 194, 438, 396, 397, 398,
	399, 400, 297, 401, 290, 266, 268, 201, 286, 336,
	402, 240, 193, 442, 403, 181, 195, 198, 188, 308,
	182, 404, 405, 406, 407, 408, 409, 410, 228, 444,
	39, 411, 412, 413, 414, 220, 216, 302, 311, 57,
	78, 276, 415, 234, 214, 416, 225, 51, 445, 446,
	447, 208, 448, 282, 105, 218, 43, 255, 200, 417,
	418, 245, 246, 260, 233, 256, 226, 423, 202, 190,
	419, 310, 215, 277, 340, 207, 339, 253, 250, 209,
	420, 164, 203, 204, 421, 424, 293, 283, 294, 295,
	284, 210, 338, 248, 278, 162, -158, 279, 280, 281,
	292, 293, 298, 297, 201, -272, 301, 162, -168, 143,
	152, 289, -172, 290, 283, 284, 210, -268, -257, 433,
	448, 300, 252, 302, 426, 285, 291, 295, 294, -188,
	226, -193, 231, -183, -257, -182, 229, -95, -59, 422,
	156, -195, -195, -195, -115, -79, -101, 109, -106, 30,
	24, -105, -102, -122, -119, -120, 143, 144, 146, 145,
	147, 132, 133, 140, 110, 148, -110, -108, -109, -111,
	87, 86, 95, 88, 89, 90, 91, 97, 98, 99,
	-183, -188, -117, -275, 64, 65, 323, 324, 325, 326,
	331, 327, 112, 53, 312, 321, 320, 319, 316, 317,
	314, 315, 329, 330, 167, 313, 161, 138, 322, -257,
	-182, 40, 282, 282, -5, -4, -275, 6, 21, 22,
	-135, 18, 17, -276, 82, -62, -72, 59, 60, -73,
	22, 36, 63, 61, -54, -71, 134, -79, -188, -71,
	-167, 166, -167, -167, -157, -198, 226, -161, 302, 301,
	-184, -159, -183, -181, -158, 299, 157, 341, 108, 23,
	25, 111, 143, 17, 112, 159, 174, 142, 170, 323,
	152, 68, 342, 314, 315, 312, 318, 325, 326, 313,
	280, 30, 11, 344, 26, 184, 22, 36, 136, 154,
	115, 116, 187, 24, 185, 99, 347, 20, 71, 179,
	12, 172, 14, 348, 349, 15, 167, 166, 127, 163,
	66, 9, 148, 27, 124, 62, 350, 29, 351, 352,
	353, 354, 64, 125, 18, 316, 317, 32, 427, 355,
	331, 196, 138, 69, 55, 109, 356, 357, 97, 358,
	100, 72, 106, 16, 67, 38, 359, 197, 360, 169,
	361, 305, 362, 126, 155, 322, 65, 363, 161, 281,
	6, 328, 31, 183, 171, 63, 364, 162, 114, 329,
	330, 165, 98, 5, 168, 33, 10, 70, 73, 319,
	320, 321, 53, 335, 113, 13, 365, 306, 107, 300,
	252, -234, 125, -221, -225, -183, 178, -250, 174, -95,
	-243, -242, -183, -74, -177, 167, -257, 163, 163, 163,
	-177, 322, -36, -37, -158, 142, 195, 81, 81, -225,
	-224, -223, -262, 197, 178, -249, -241, 170, 179, -231,
	171, 172, -226, 163, 29, -262, -226, 169, 179, 197,
	197, 105, 197, 105, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 194, -232, 117, -232, 339, 339, -237,
	-262, -262, -262, 165, 34, 34, -180, -226, 165, 23,
	-232, -232, -158, 142, -232, -232, -232, -232, 205, 205,
	-232, -232, -232, -232, -232, -232, -232, -232, -232, -232,
	-232, -232, -232, -232, -232, -95, -77, 212, 152, 154,
	157, 72, 117, -38, 207, -22, -95, -176, 167, -257,
	-176, -176, -95, 149, -95, -174, 125, 13, -174, -174,
	-174, -174, -174, 208, 296, 208, 296, 208, 209, 208,
	209, 208, -171, -170, 287, 288, 282, 286, -257, 313,
	298, -257, 201, 162, 202, 164, -227, 163, 34, 175,
	209, 282, 204, -174, -196, -275, -184, -196, -196, 31,
	165, -183, -55, -183, 87, -7, -3, -11, -10, -12,
	117, 81, 108, 106, 107, 124, -79, -103, 127, 109,
	125, 126, 111, 129, 128, 139, 132, 133, 134, 135,
	136, 137, 138, 130, 131, 142, 117, 118, 119, 120,
	121, 122, 123, -166, -275, -120, -275, 150, 151, -106,
	-106, -106, -106, -106, -106, -106, -106, -106, -106, -275,
	149, -2, -115, -4, -275, -275, -275, -275, -275, -275,
	-275, -275, -127, -79, -275, -279, -112, -275, -279, -112,
	-279, -112, -279, -275, -279, -112, -279, -112, -279, -279,
	-112, -275, -275, -275, -275, -275, -275, -275, -195, -269,
	-270, -98, -95, -131, -3, -53, -149, 20, 32, -79,
	-132, -133, -79, -131, 55, -69, -71, -73, 59, 60,
	93, 12, -186, -185, 23, -183, 87, 149, 12, -96,
	27, -95, -81, -82, -83, -84, -98, -121, -275, 12,
	-88, -89, -95, -97, -188, 81, 226, -161, -198, -163,
	-162, 303, 305, 117, -187, -183, 87, 30, 82, 81,
	-95, -200, -203, -205, -204, -206, -201, -202, 249, 250,
	143, 253, 255, 256, 257, 258, 259, 260, 261, 262,
	263, 264, 31, 186, 245, 246, 247, 248, 265, 266,
	267, 268, 269, 270, 271, 272, 232, 251, 333, 233,
	234, 235, 236, 237, 238, 240, 241, 242, 243, 244,
	-260, -257, 80, 82, 81, -207, 80, -77, -95, 109,
	-248, -245, 73, -257, -257, -257, -257, -232, -232, 194,
	-29, -26, -253, 16, -25, -26, 157, 101, 102, 154,
	80, -221, 80, -230, -260, -257, 80, 29, 169, 168,
	-229, -226, -229, -230, -257, -122, -183, -188, -257, 29,
	29, -154, -183, -154, -154, 21, -154, 21, -154, 21,
	88, -183, -154, 21, -154, 21, -154, 21, -154, 21,
	-154, 21, 30, 74, 75, 30, 77, 78, 79, -122,
	-122, -221, -158, -95, -257, 88, 88, -232, -232, 88,
	87, 87, 87, -232, -232, 88, 87, -257, 87, -263,
	180, 221, 223, 88, 88, 88, 88, 30, 87, -264,
	30, 440, 439, 441, 442, 443, 88, 30, 88, 30,
	88, -183, 80, -76, 214, 117, 203, 203, 162, 162,
	216, -95, 215, 217, 218, 40, 81, 165, -88, 24,
	72, -90, -95, -257, -189, -188, -181, 87, -79, -174,
	-95, -174, -95, -174, -174, -174, -174, -169, 12, 127,
	-228, 12, 127, -169, -196, -196, -95, -196, -196, -95,
	-196, -196, -228, -175, 125, 72, -194, 229, 263, 423,
	424, 425, -79, -79, -79, -79, -113, 97, 109, 98,
	99, -106, -114, -117, -120, 92, 127, 125, 126, 111,
	-106, -106, -106, -106, -106, -106, -106, -106, -106, -106,
	-106, -106, -106, -106, -106, -197, -257, 87, 143, -257,
	-105, -105, -183, -70, 22, 36, -69, -184, -189, -181,
	-66, -276, -276, -131, -69, -69, -79, -79, -122, 87,
	-69, -122, 87, -69, -69, -65, 22, 36, -125, -126,
	113, -122, -276, -106, -183, -183, -69, -70, -70, -69,
	-69, 81, -271, 305, 306, 427, -191, 197, -190, 23,
	-188, 87, -135, -276, -136, 27, 10, 127, 81, 19,
	81, -134, 25, 26, -135, -107, -183, 88, 91, -80,
	81, 12, -73, -95, -185, 134, -189, -95, -153, 197,
	-95, 31, 81, -91, -93, -92, -94, 62, 66, 68,
	63, 64, 65, 69, -192, 23, -81, -3, -275, -95,
	-88, -277, 81, 12, 73, -277, 81, 149, -161, -163,
	81, 304, 306, 307, 72, 100, -79, -212, 142, -239,
	-238, -237, -221, -223, -224, -225, 82, -178, 97, 109,
	-216, 277, -207, -207, -207, -207, -207, -211, -158, -211,
	-211, -211, 80, 80, -207, -207, -207, -207, -213, 80,
	-213, -213, -214, 80, -214, -250, -79, -247, -246, -244,
	-245, 173, 94, 335, -242, -134, 88, -76, 24, 72,
	-183, -248, -248, -248, -257, 87, -257, 87, 81, 17,
	-222, -221, -123, 221, -252, 197, -249, -243, 80, 29,
	-229, -230, -230, 149, -257, 81, 27, 105, 105, 105,
	105, 335, 154, 31, -221, -123, -197, 165, -197, -197,
	87, 87, -173, 448, -88, 164, 220, -78, 318, 87,
	83, -95, -95, -95, -95, -95, 157, 154, 205, -95,
	-95, -58, 182, 177, -95, 81, -58, -174, -188, -188,
	-95, -174, -95, 87, -95, -183, 97, 98, 99, -114,
	-106, -106, -106, -68, 187, 108, -276, -276, -69, -69,
	-275, 149, -5, -135, -276, -276, 81, 73, 23, 12,
	12, -276, 12, 12, -276, -276, -69, -128, -126, 115,
	-79, -276, -276, 81, 81, -276, -276, -276, -276, -276,
	-270, 426, 306, -99, 70, 166, 71, -275, -190, -149,
	38, 46, 57, -79, -79, -133, -149, -165, 20, 12,
	53, 53, -100, 13, -71, -81, -73, 149, -100, -104,
	31, 53, -3, -275, -275, -156, -160, -122, -82, -83,
	-83, -82, -83, 62, 62, 62, 67, 62, 67, 62,
	-92, -188, -276, -276, -3, -153, 73, -81, -95, -81,
	-97, -188, 134, -162, -164, 308, 305, 311, -257, 87,
	81, -237, -225, -209, 30, 97, -217, 278, -211, -211,
	-212, -257, 143, -212, -212, -212, -220, 87, -220, 88,
	88, 82, -32, -27, -28, 32, 76, -244, -232, 87,
	37, 82, 164, -95, 72, 72, 72, 16, -151, -183,
	81, 82, -124, 222, -122, 82, -183, 82, -151, -230,
	-184, -183, -275, 162, 30, 30, -123, -124, -212, -257,
	450, 449, 82, -95, -75, 212, 219, 80, 84, -259,
	73, 203, 274, 203, 206, 165, -32, -95, -169, -169,
	-68, 108, -106, -106, -276, -276, -70, -184, -131, -149,
	-199, 143, 249, 186, 247, 243, 263, 254, 276, 245,
	277, -197, -199, -106, -106, -106, -106, 332, -131, 116,
	-79, 114, -106, -106, 163, 163, 163, -154, 39, 87,
	87, 58, -95, -129, 14, -79, 134, -135, -155, 72,
	-156, -116, -118, -117, -275, -150, -276, -183, -154, -100,
	81, 117, -86, -85, 72, 73, -87, 72, -85, 62,
	62, -276, -100, -81, -100, -100, 149, 305, 309, 310,
	-237, -210, 72, -106, -212, -212, 82, 81, 82, 81,
	82, 81, -179, 372, 109, -28, -27, -232, -232, 88,
	-257, -95, -95, -95, -95, 17, 81, -221, -122, 53,
	-247, 82, -251, -252, -95, -105, -124, -152, 80, 82,
	-256, 335, -258, -257, -183, -183, -183, -95, -174, -174,
	-106, -276, -135, -276, -207, -207, -207, -214, -207, 237,
	-207, 237, -276, -276, 20, 20, 20, 20, -275, -63,
	328, -79, 81, 81, -275, -275, -275, -276, 87, -211,
	-130, 15, 17, 28, -155, 81, -276, -276, 81, 53,
	149, -276, -131, -160, -79, -79, 80, -79, -131, -100,
	-215, 274, 10, -211, 87, -211, 88, 88, 372, 30,
	77, 78, 79, 30, 74, 75, -152, -151, -183, 199,
	181, -276, 81, -218, 335, 338, 23, -151, -255, -254,
	-184, 80, 73, -149, -211, -257, -106, -106, -106, -106,
	-106, -135, 87, -106, -106, -151, -276, -151, -151, -191,
	-211, -138, -143, -171, -79, -115, 29, -118, 53, -3,
	-183, -116, -183, -135, -151, -135, -219, 169, 29, 168,
	-109, -212, -212, 82, 82, 23, 200, -95, -252, 339,
	339, -3, 82, 81, 117, -151, -95, -276, -276, -276,
	-276, -64, 127, 335, -276, -276, -276, -276, -276, -276,
	-99, -141, 422, -144, 42, -145, 43, 10, -116, 149,
	82, -208, 94, 29, 29, -3, -275, 80, -56, 335,
	-254, -236, -184, 87, 88, 82, -276, 333, 69, 336,
	-138, 47, 255, -146, 51, -147, -142, 52, 17, -156,
	-183, 87, -56, -106, 196, -151, -57, 211, 426, -259,
	58, 334, 337, -139, 49, -137, 48, -137, -145, 17,
	-148, 44, 45, 87, -276, -276, 82, 174, -256, 58,
	-140, 50, 72, 100, 87, 17, 17, -266, -267, 72,
	213, 335, 72, 100, 87, 87, -267, 72, 11, 10,
	336, -265, 182, 177, 180, 31, -265, 337, 176, 30,
	97,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 788, 0, 526, 526, 526, 526, 526, 526, 526,
	0, 0, 89, -2, -2, 812, 36, 0, 0, 0,
	0, -2, 484, 485, 0, 487, -2, 0, 0, 496,
	1303, 1303, 1303, 0, 0, 0, 0, 1301, 53, 54,
	502, 503, 504, 1, 3, 0, 530, 796, 0, 0,
	-2, 528, 0, 0, 904, 904, 904, 0, 84, 85,
	0, 0, 0, 812, 902, 0, 0, 0, 0, 902,
	0, 107, 108, 88, -2, 112, 113, 0, 117, 370,
	331, 373, 329, 359, -2, 322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 334, 226,
	226, 0, 0, -2, 322, 322, 322, 0, 0, 0,
	356, 906, 276, 226, 226, 0, 226, 226, 226, 226,
	0, 0, 226, 226, 226, 226, 226, 226, 226, 226,
	226, 226, 226, 226, 226, 226, 226, 0, 106, 825,
	0, 0, 116, 37, 33, 34, 35, 0, 900, 0,
	900, 900, 0, 422, 610, 916, 917, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225,
	1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255,
	1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285,
	1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295,
	1296, 1297, 1298, 1299, 1300, 0, 475, 475, 475, 475,
	475, 475, 0, 431, 0, 0, 0, 0, 0, 0,
	0, 447, 0, 450, 0, 0, 457, 475, 1304, 1304,
	1304, 891, 0, 481, 482, 469, 467, 464, 465, 483,
	486, 0, 491, 494, 912, 913, 0, 509, 0, 1124,
	501, 514, 515, 525, 38, 661, 620, 0, 626, 628,
	0, 663, 664, 665, 666, 667, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 693, 694, 695, 696,
	773, 774, 775, 776, 777, 778, 779, 780, 630, 631,
	770, 0, 880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 761, 0, 730, 730, 730, 730, 730, 730,
	730, 730, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 1303, 0, 524, 788, 49, 0, 526, 531, 532,
	831, 0, 0, 788, 1302, 0, 0, -2, -2, 542,
	548, 549, 550, 551, 527, 0, 554, 558, 0, 0,
	0, 905, 0, 0, 70, 0, 1272, 884, -2, -2,
	0, 0, 914, 915, 893, -2, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 940, 941, 942, 943,
	944, 945, 946, 947, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 957, 958, 959, 960, 961, 962, 963,
	964, 965, 966, 967, 968, 969, 970, 971, 972, 973,
	974, 975, 976, 977, 978, 979, 980, 981, 982, 983,
	984, 985, 986, 987, 988, 989, 990, 991, 992, 993,
	994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003,
	1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033,
	1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043,
	1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, -2,
	1071, 0, 0, 126, 127, 0, 36, 252, 0, 122,
	0, 246, 184, 825, 0, 0, 909, 0, 0, 0,
	0, 90, 114, 115, 226, 226, 0, 116, 116, 338,
	339, 340, 0, 0, -2, 250, 0, 323, 0, 0,
	240, 240, 244, 242, 243, 0, 0, 0, 0, 0,
	0, 350, 0, 351, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 406, 0, 227, 0, 368, 369, 277,
	0, 0, 0, 0, 348, 349, 0, 0, 907, 908,
	0, 0, 226, 226, 0, 0, 0, 0, 226, 226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 100, 816, 0, 0, 0,
	0, 0, 0, -2, 0, 414, 0, 0, 0, 0,
	0, 0, 421, 0, 423, 424, 0, 0, 425, 426,
	427, 428, 429, 475, 0, 475, 0, 475, 475, 475,
	475, 472, 0, 472, 470, 471, 462, 463, 1304, 1304,
	0, 1304, 1304, 0, 1304, 1304, 0, 235, 236, 237,
	478, 454, 455, 458, 459, 1305, 1306, 460, 461, 892,
	492, 495, 512, 510, 511, 513, 505, 506, 507, 508,
	0, 0, 0, 0, 0, 0, 624, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 648, 649, 650, 651,
	652, 653, 654, 627, 0, 641, 0, 0, 0, 683,
	684, 685, 686, 687, 688, 689, 690, 691, 0, 539,
	0, 0, 0, 788, 0, 0, 0, 0, 0, 0,
	0, 536, 0, 762, 0, 714, 722, 0, 715, 723,
	716, 724, 717, 0, 718, 725, 719, 726, 720, 721,
	727, 0, 0, 0, 539, 539, 0, 0, 39, 516,
	517, 0, 593, 796, 0, 541, 834, 0, 0, 797,
	789, 790, 793, 796, 0, 563, 552, 543, 546, 547,
	529, 0, 555, 559, 0, 561, 562, 0, 0, 68,
	0, 609, 0, 565, 567, 568, 569, 591, 0, 0,
	0, 0, 64, 66, 610, 0, 1272, 890, 0, 72,
	73, 0, 0, 0, 207, 895, 896, 897, -2, 233,
	0, 195, 191, 135, 136, 137, 184, 139, 184, 184,
	184, 184, 204, 204, 204, 204, 167, 168, 169, 170,
	171, 0, 0, 154, 184, 184, 184, 184, 174, 175,
	176, 177, 178, 179, 180, 181, 140, 141, 142, 143,
	144, 145, 146, 147, 148, 186, 186, 186, 188, 188,
	0, 37, 0, 218, 0, 793, 0, 816, 99, 0,
	0, 910, 0, 909, 909, 909, 105, 0, 0, 371,
	332, 360, 372, 0, 335, 336, -2, 0, 0, 322,
	0, 324, 0, 234, 0, -2, 0, 0, 0, 240,
	244, 241, 244, 232, 245, 352, 770, 0, 353, 354,
	0, 386, 579, 0, 0, 0, 0, 0, 392, 393,
	394, 0, 396, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 361, 362, 363, 364, 365, 366, 367, 0,
	0, 324, 0, 357, 0, 278, 279, 0, 0, 282,
	283, 284, 285, 0, 0, 288, 289, 290, 291, 292,
	316, 317, 318, 293, 294, 295, 296, 297, 298, 299,
	310, 311, 312, 313, 314, 315, 300, 301, 302, 303,
	304, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 813, 814, 815, 0, 0, 0, 265, 901,
	0, 265, 62, 420, 611, 918, 919, 476, 477, 430,
	448, 432, 451, 433, 435, 434, 436, 475, 0, 0,
	0, 238, 239, 475, 439, 440, 441, 442, 443, 444,
	445, 446, 0, 453, 0, 0, 0, 493, 497, 498,
	499, 500, 662, 621, 622, 623, 625, 642, 0, 644,
	646, 632, 633, 657, 658, 659, 0, 0, 0, 0,
	655, 637, 0, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 682, 745, 746, 747, 0,
	680, 681, 692, 0, 0, 0, 540, 771, 0, -2,
	0, 660, 879, 796, 0, 0, 0, 0, 665, 773,
	0, 665, 773, 0, 0, 0, 537, 538, 768, 765,
	0, 0, 731, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 519, 520, 522, 0, 613, 0, 594, 0,
	596, 597, 831, 50, 40, 0, 832, 0, 0, 0,
	0, 792, 794, 795, 831, 0, 781, 0, 0, 618,
	0, 0, 544, 46, 560, 556, 0, 618, 0, 0,
	608, 0, 0, 0, 0, 0, 0, 598, 0, 0,
	601, 0, 0, 0, 0, 592, 0, 0, 0, -2,
	0, 0, 0, 60, 61, 0, 0, 0, 885, 71,
	0, 0, 76, 77, 886, 887, 888, 889, 0, 109,
	-2, 273, 128, 130, 131, 132, 123, 198, 196, 0,
	193, 192, 138, 204, 204, 161, 162, 207, 0, 207,
	207, 207, 0, 0, 155, 156, 157, 158, 149, 0,
	150, 151, 152, 0, 153, 251, 0, 800, 219, 220,
	222, 226, 0, 0, 247, 248, 0, 0, 903, 0,
	911, 0, 0, 0, 118, 119, 120, 121, 116, 0,
	0, 124, 326, 0, 0, 0, 249, 0, 0, 228,
	244, 229, 230, 0, 355, 0, 0, 388, 389, 390,
	391, 0, 0, 0, 324, 326, 207, 0, 280, 281,
	286, 287, 305, 0, 0, 0, 0, 826, 827, 0,
	830, 91, 378, 380, 379, 383, 0, 0, 0, 0,
	415, 417, 266, 267, 800, 0, 419, 437, 473, 474,
	472, 452, 472, 479, 456, 489, 643, 645, 647, 634,
	655, 638, 0, 635, 0, 0, 629, 697, 0, 0,
	539, 0, 788, 831, 701, 702, 0, 0, 0, 0,
	0, 738, 0, 0, 739, 0, 788, 0, 766, 0,
	0, 713, 732, 0, 0, 733, 734, 735, 736, 737,
	518, 521, 523, 573, 0, 0, 0, 0, 595, 42,
	0, 0, 0, 798, 799, 791, 41, 0, 898, 899,
	782, 783, 784, 0, 553, 564, 545, 0, 796, 873,
	0, 0, 865, 0, 0, 618, 881, 0, 566, 587,
	589, 0, 584, 599, 600, 602, 0, 604, 0, 606,
	607, 570, 571, 572, 0, 618, 0, 618, 65, 618,
	67, 0, 612, 74, 75, 0, 0, 81, 208, 209,
	116, 275, 129, 200, 0, 197, 134, 194, 207, 207,
	163, 205, 206, 164, 165, 166, 0, 182, 0, 0,
	0, 268, 86, 804, 803, 226, 226, 221, 0, 224,
	0, 185, 0, 101, 0, 0, 0, 0, 330, 577,
	0, 341, 342, 0, 325, 385, 0, 218, 0, 231,
	771, 580, 0, 0, 343, 0, 326, 346, 347, 358,
	308, 309, 306, 575, 817, 818, 819, 0, 829, 94,
	0, 0, 0, 0, 376, 0, 418, 63, 475, 475,
	636, 0, 656, 639, 698, 699, 0, 772, 796, 44,
	0, 184, 184, 751, 184, 188, 754, 184, 756, 184,
	759, 0, 0, 0, 0, 0, 0, 0, 763, 712,
	769, 0, 0, 0, 0, 0, 0, 0, 0, 204,
	836, 833, 43, 786, 0, 619, 557, 47, 51, 0,
	873, 864, 875, 877, 0, 0, 0, 869, 0, 788,
	0, 0, 581, 588, 0, 0, 582, 0, 583, 603,
	605, -2, 788, 618, 58, 59, 0, 78, 79, 80,
	274, 202, 0, 199, 159, 160, 204, 0, 204, 0,
	189, 0, 257, 269, 0, 801, 802, 0, 0, 223,
	225, 575, 102, 103, 104, 0, 0, 125, 327, 0,
	217, 0, 0, 410, 407, 344, 345, 0, 0, 828,
	377, 0, 92, 93, 0, 0, 382, 416, 438, 449,
	640, 700, 831, 703, 748, 204, 752, 753, 755, 757,
	758, 760, 705, 704, 0, 0, 0, 0, 0, 796,
	0, 767, 0, 0, 0, 0, 0, 593, 204, 856,
	48, 0, 0, 0, 52, 0, 878, 0, 0, 0,
	0, 69, 796, 882, 883, 585, 0, 590, 796, 57,
	210, 203, 0, 207, 183, 207, 0, 0, 270, 805,
	806, 807, 808, 809, 810, 811, 0, 333, 578, 0,
	0, 387, 0, 395, 0, 0, 0, 0, 95, 96,
	0, 0, 0, 45, 749, 750, 0, 0, 0, 0,
	740, 0, 764, 0, 0, 0, 615, 0, 0, 613,
	838, 837, 850, 854, 787, 785, 0, 876, 0, 868,
	871, 867, 870, 55, 0, 56, 215, 0, 212, 214,
	201, 172, 173, 187, 190, 0, 0, 0, 411, 408,
	409, 820, 576, 0, 0, 0, 384, 706, 708, 707,
	709, 0, 0, 0, 711, 728, 729, 614, 616, 617,
	574, 856, 0, 849, 852, -2, 0, 0, 866, 0,
	586, 133, 0, 211, 213, 820, 0, 0, 374, 822,
	97, 98, 319, 320, 321, 91, 710, 0, 0, 0,
	843, 841, 841, 854, 0, 858, 0, 863, 0, 874,
	872, 216, 87, 0, 0, 0, 0, 823, 824, 94,
	741, 0, 744, 846, 0, 839, 842, 840, 851, 0,
	857, 0, 0, 855, 412, 413, 253, 0, 381, 742,
	835, 0, 844, 845, 853, 0, 0, 254, 255, 0,
	821, 0, 847, 848, 859, 861, 256, 0, 0, 0,
	0, 258, 260, 261, 0, 0, 259, 743, 262, 263,
	264,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 110, 3, 3, 3, 137, 129, 3,
	80, 82, 134, 132, 81, 133, 149, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 451,
	118, 117, 119, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 111, 112, 113, 114, 115,
	116, 120, 121, 122, 123, 124, 125, 126, 127, 130,
	131, 136, 138, 141, 142, 143, 144, 145, 146, 147,
	148, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:406
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:411
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:412
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:416
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:447
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:453
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:466
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:470
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:476
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:482
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:488
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:497
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:501
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:505
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:528
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:536
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:542
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:548
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:556
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:562
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:566
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:573
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:585
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:613
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:649
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:655
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:659
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:664
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:668
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:680
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:684
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:690
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:694
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:700
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyVAL.characteristic = ReadWrite
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:708
		{
			yyVAL.characteristic = ReadOnly
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:714
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:722
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:726
		{
			yyVAL.isolationLevel = Serializable
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:732
		{
			yyVAL.scope = SessionScope
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:736
		{
			yyVAL.scope = GlobalScope
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:742
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:748
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:755
		{
			indexDef := yyDollar[1].alterTable.AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumns
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptions...)
			yyDollar[1].alterTable.AlterOptions = append(yyDollar[1].alterTable.AlterOptions, yyDollar[6].alterOptions...)
			yyDollar[1].alterTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:764
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:775
		{
			yyVAL.boolean = false
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:779
		{
			yyVAL.boolean = true
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:784
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:788
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:794
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:799
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:804
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:821
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:827
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:834
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 101:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:841
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].bytes)}, Options: yyDollar[4].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 102:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:846
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Fulltext: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:851
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Spatial: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:856
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Unique: true}, Options: yyDollar[5].indexOptions}}}}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:863
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:881
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:887
		{
			yyVAL.collateAndCharsets = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:891
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:897
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:901
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:905
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:914
		{
			yyVAL.boolean = false
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.boolean = true
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:924
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:928
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:934
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:938
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:945
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:949
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:955
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:965
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:975
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 129:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:979
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:988
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:998
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1009
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1025
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1031
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1035
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1043
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1047
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1051
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1055
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1059
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1063
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1081
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 173:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1220
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.literal = nil
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1234
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1239
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 187:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1243
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1251
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1261
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1269
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1278
		{
			yyVAL.boolean = false
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1282
		{
			yyVAL.boolean = true
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1288
		{
			yyVAL.boolean = false
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.boolean = false
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1296
		{
			yyVAL.boolean = true
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1301
		{
			yyVAL.optVal = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1305
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.optVal = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1314
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1319
		{
			yyVAL.boolean = false
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.boolean = true
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1328
		{
			yyVAL.str = ""
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1336
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1341
		{
			yyVAL.str = ""
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1345
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1354
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.colKeyOpt = colKey
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1370
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1375
		{
			yyVAL.literal = nil
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 217:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1390
		{
			yyVAL.indexOptions = nil
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1400
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1419
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = ""
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1451
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1455
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = ""
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = yyDollar[2].str
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1470
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 240:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = "key"
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = yyDollar[1].str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1504
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = ""
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1527
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1549
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1553
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 253:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1559
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 254:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1563
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 255:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1567
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 256:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1571
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 257:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1577
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1583
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1589
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1599
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 263:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1607
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 264:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1611
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = ""
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1629
		{
			yyVAL.boolean = true
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.boolean = true
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1637
		{
			yyVAL.boolean = false
		}
	case 271:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1642
		{
			yyVAL.tableOptions = nil
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1646
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1656
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1660
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1666
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1670
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1676
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1680
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1684
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1688
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1692
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1696
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1700
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1704
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1708
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1712
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1716
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1720
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1724
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1728
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1732
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1740
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1744
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1748
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1752
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1760
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1764
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1768
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1776
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1784
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1788
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = ""
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1820
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1833
		{
			yyVAL.bytes = []byte("")
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1839
		{
			yyVAL.colName = nil
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1843
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1848
		{
			yyVAL.colName = nil
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1852
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 328:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1857
		{
			yyVAL.alterOptions = nil
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1861
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1865
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1869
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 333:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1877
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1883
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1887
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1901
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1905
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1909
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1913
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1917
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1921
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 344:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1925
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 345:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1929
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1933
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 347:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1937
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1941
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1945
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1957
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1961
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1965
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 355:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1969
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.alterOption = &Force{}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1977
		{
			yyVAL.alterOption = &RenameTableName{Table: yyDollar[3].tableName}
		}
	case 358:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1981
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1987
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1991
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1997
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2001
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2005
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2013
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2025
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2029
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2035
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2041
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2048
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 374:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 376:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2072
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 377:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2079
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2091
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2101
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2105
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 381:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 382:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2132
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 384:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2136
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2149
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2153
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2157
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2161
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2165
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2169
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2173
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2177
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2181
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2185
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 395:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2189
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2193
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2197
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2201
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2209
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2221
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2225
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2229
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2233
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2238
		{
			yyVAL.boolean = false
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			yyVAL.boolean = false
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.boolean = true
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2253
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2257
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 412:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2263
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 413:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2267
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2273
		{
			yyVAL.statement = &RenameTable{TablePairs: yyDollar[3].renameTablePairs}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2279
		{
			yyVAL.renameTablePairs = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2283
		{
			yyVAL.renameTablePairs = append(yyDollar[1].renameTablePairs, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2289
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2293
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptions...)}
			} else {
				yyVAL.statement = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptions...)}
			}
		}
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2302
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 420:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2306
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2312
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2316
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2321
		{
			yyVAL.statement = &OtherRead{}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2327
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2331
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2343
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2359
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2363
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2371
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2375
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2379
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 438:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2383
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2387
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2391
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2395
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2400
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2404
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2408
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2412
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2416
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2428
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2433
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2437
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2441
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2451
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2464
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2468
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2473
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2487
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2491
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2495
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2521
		{
			yyVAL.str = ""
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = "extended "
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = ""
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = "full "
		}
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2541
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2565
		{
			yyVAL.showFilter = nil
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2573
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2579
		{
			yyVAL.showFilter = nil
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2583
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2589
		{
			yyVAL.empty = struct{}{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.empty = struct{}{}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2613
		{
			yyVAL.statement = &Begin{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.statement = &Begin{}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2623
		{
			yyVAL.statement = &Commit{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2629
		{
			yyVAL.statement = &Rollback{}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2633
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2638
		{
			yyVAL.empty = struct{}{}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2640
		{
			yyVAL.empty = struct{}{}
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2643
		{
			yyVAL.empty = struct{}{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.empty = struct{}{}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2650
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2656
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2661
		{
			yyVAL.explainType = EmptyType
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2665
		{
			yyVAL.explainType = JSONType
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2669
		{
			yyVAL.explainType = TreeType
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.explainType = VitessType
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2677
		{
			yyVAL.explainType = TraditionalType
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2681
		{
			yyVAL.explainType = AnalyzeType
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2687
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2691
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2695
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2709
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2713
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = ""
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2726
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2732
		{
			yyVAL.statement = &OtherRead{}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2736
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2762
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2774
		{
			yyVAL.lockType = Read
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2778
		{
			yyVAL.lockType = ReadLocal
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.lockType = Write
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2798
		{
			yyVAL.statement = &Flush{}
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2802
		{
			setAllowComments(yylex, true)
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2806
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2812
		{
			yyVAL.bytes2 = nil
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.boolean = true
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2826
		{
			yyVAL.boolean = false
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2830
		{
			yyVAL.boolean = true
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2835
		{
			yyVAL.str = ""
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.str = SQLCacheStr
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2848
		{
			yyVAL.boolean = false
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.boolean = true
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.boolean = true
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2861
		{
			yyVAL.selectExprs = nil
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2865
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2870
		{
			yyVAL.strs = nil
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2878
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2886
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.str = SQLCacheStr
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.str = DistinctStr
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.str = DistinctStr
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.str = StraightJoinHint
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2922
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2928
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2936
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 557:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2940
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2945
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2949
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2953
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2965
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2969
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2979
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2989
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2993
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2997
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3003
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3009
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 574:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3013
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3018
		{
			yyVAL.columns = nil
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3022
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3028
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3032
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3038
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3042
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3055
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3059
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3063
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3067
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3073
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 586:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3075
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3079
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3081
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3085
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3087
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3090
		{
			yyVAL.empty = struct{}{}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3092
		{
			yyVAL.empty = struct{}{}
		}
	case 593:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3095
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3103
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3110
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.joinType = NormalJoinType
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3120
		{
			yyVAL.joinType = NormalJoinType
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.joinType = NormalJoinType
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.joinType = StraightJoinType
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3136
		{
			yyVAL.joinType = LeftJoinType
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3140
		{
			yyVAL.joinType = LeftJoinType
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.joinType = RightJoinType
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3148
		{
			yyVAL.joinType = RightJoinType
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3154
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3158
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3178
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3182
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3188
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3193
		{
			yyVAL.indexHints = nil
		}
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3197
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3201
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 616:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3205
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 617:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3209
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 618:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3214
		{
			yyVAL.expr = nil
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3218
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3228
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3232
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3236
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3240
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3244
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3248
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3252
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3258
		{
			yyVAL.str = ""
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3268
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3272
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3282
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 636:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3302
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 639:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3306
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 640:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3310
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3324
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3328
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3332
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3336
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3340
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3346
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3358
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3362
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3366
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3370
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3375
		{
			yyVAL.expr = nil
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3385
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3409
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3479
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3491
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3499
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3503
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3507
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3515
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3545
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 697:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3563
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3567
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 699:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3571
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 700:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3575
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3585
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 703:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3593
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 704:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3597
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 705:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3601
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 706:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3605
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 707:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3609
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 708:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3613
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 709:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3617
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 710:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3621
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 711:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3625
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3629
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3633
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3672
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3682
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3690
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 725:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3695
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3700
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 728:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 729:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3713
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3733
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3737
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3741
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3745
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3749
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3753
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3757
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3763
		{
			yyVAL.matchExprOption = NoOption
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3771
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 743:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3775
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3785
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3799
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3803
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3807
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3811
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3815
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3819
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3825
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3829
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3854
		{
			yyVAL.expr = nil
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3863
		{
			yyVAL.str = string("")
		}
	case 764:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3867
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3877
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3883
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = nil
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3902
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 772:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3906
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3912
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3916
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3920
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3924
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3936
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3940
		{
			yyVAL.expr = &NullVal{}
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3946
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3955
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3959
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3964
		{
			yyVAL.exprs = nil
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3968
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3973
		{
			yyVAL.expr = nil
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3977
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3982
		{
			yyVAL.orderBy = nil
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3986
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3992
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3996
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4002
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4007
		{
			yyVAL.orderDirection = AscOrder
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.orderDirection = AscOrder
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.orderDirection = DescOrder
		}
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4020
		{
			yyVAL.limit = nil
		}
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4024
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 798:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4028
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4032
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4037
		{
			yyVAL.alterOptions = nil
		}
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4041
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4045
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption, yyDollar[2].alterOption}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4049
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4053
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4060
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4064
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4068
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4072
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4078
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4082
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4086
		{
			yyVAL.alterOption = AlgorithmValue(yyDollar[3].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 814:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4099
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 815:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4103
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = ""
		}
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4112
		{
			yyVAL.str = yyDollar[3].str
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4122
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = ""
		}
	case 821:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = yyDollar[2].str
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.str = "cascaded"
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4140
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4149
		{
			yyVAL.str = ""
		}
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4153
		{
			yyVAL.str = yyDollar[3].str
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4159
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4163
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4167
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4171
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4176
		{
			yyVAL.lock = NoLock
		}
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4180
		{
			yyVAL.lock = ForUpdateLock
		}
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4184
		{
			yyVAL.lock = ShareModeLock
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4189
		{
			yyVAL.selectInto = nil
		}
	case 835:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4193
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4197
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 837:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4201
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4206
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4210
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4214
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 841:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = ""
		}
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4223
		{
			yyVAL.str = " header"
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = " manifest on"
		}
	case 845:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = " manifest off"
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4241
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = " overwrite on"
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = " overwrite off"
		}
	case 849:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 856:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4287
		{
			yyVAL.str = ""
		}
	case 857:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = ""
		}
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4305
		{
			yyVAL.str = ""
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4309
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = ""
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4318
		{
			yyVAL.str = " optionally"
		}
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4331
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4335
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4339
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4343
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4347
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4353
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4357
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4361
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 872:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4365
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4370
		{
			yyVAL.updateExprs = nil
		}
	case 874:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4374
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4390
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4394
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4406
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4416
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4420
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4426
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4432
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4436
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4442
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4446
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4450
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4458
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4466
		{
			yyVAL.bytes = []byte("charset")
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4476
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.expr = &Default{}
		}
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4493
		{
			yyVAL.boolean = false
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4495
		{
			yyVAL.boolean = true
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4498
		{
			yyVAL.boolean = false
		}
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4500
		{
			yyVAL.boolean = true
		}
	case 904:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4503
		{
			yyVAL.ignore = false
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4505
		{
			yyVAL.ignore = true
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4508
		{
			yyVAL.empty = struct{}{}
		}
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4510
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4512
		{
			yyVAL.empty = struct{}{}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4515
		{
			yyVAL.indexOptions = nil
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4521
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4527
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4531
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4538
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4544
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4555
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4961
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4970
		{
			decNesting(yylex)
		}
	case 1303:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4975
		{
			skipToEnd(yylex)
		}
	case 1304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4980
		{
			skipToEnd(yylex)
		}
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4984
		{
			skipToEnd(yylex)
		}
	case 1306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4988
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
