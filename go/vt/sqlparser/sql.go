// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const DECIMAL = 57433
const HEXNUM = 57434
const VALUE_ARG = 57435
const LIST_ARG = 57436
const COMMENT = 57437
const COMMENT_KEYWORD = 57438
const BIT_LITERAL = 57439
const COMPRESSION = 57440
const EXTRACT = 57441
const NULL = 57442
const TRUE = 57443
const FALSE = 57444
const OFF = 57445
const DISCARD = 57446
const IMPORT = 57447
const ENABLE = 57448
const DISABLE = 57449
const TABLESPACE = 57450
const VIRTUAL = 57451
const STORED = 57452
const EMPTY_FROM_CLAUSE = 57453
const LOWER_THAN_CHARSET = 57454
const CHARSET = 57455
const UNIQUE = 57456
const KEY = 57457
const EXPRESSION_PREC_SETTER = 57458
const OR = 57459
const XOR = 57460
const AND = 57461
const NOT = 57462
const BETWEEN = 57463
const CASE = 57464
const WHEN = 57465
const THEN = 57466
const ELSE = 57467
const END = 57468
const LE = 57469
const GE = 57470
const NE = 57471
const NULL_SAFE_EQUAL = 57472
const IS = 57473
const LIKE = 57474
const REGEXP = 57475
const IN = 57476
const SHIFT_LEFT = 57477
const SHIFT_RIGHT = 57478
const DIV = 57479
const MOD = 57480
const UNARY = 57481
const COLLATE = 57482
const BINARY = 57483
const UNDERSCORE_ARMSCII8 = 57484
const UNDERSCORE_ASCII = 57485
const UNDERSCORE_BIG5 = 57486
const UNDERSCORE_BINARY = 57487
const UNDERSCORE_CP1250 = 57488
const UNDERSCORE_CP1251 = 57489
const UNDERSCORE_CP1256 = 57490
const UNDERSCORE_CP1257 = 57491
const UNDERSCORE_CP850 = 57492
const UNDERSCORE_CP852 = 57493
const UNDERSCORE_CP866 = 57494
const UNDERSCORE_CP932 = 57495
const UNDERSCORE_DEC8 = 57496
const UNDERSCORE_EUCJPMS = 57497
const UNDERSCORE_EUCKR = 57498
const UNDERSCORE_GB18030 = 57499
const UNDERSCORE_GB2312 = 57500
const UNDERSCORE_GBK = 57501
const UNDERSCORE_GEOSTD8 = 57502
const UNDERSCORE_GREEK = 57503
const UNDERSCORE_HEBREW = 57504
const UNDERSCORE_HP8 = 57505
const UNDERSCORE_KEYBCS2 = 57506
const UNDERSCORE_KOI8R = 57507
const UNDERSCORE_KOI8U = 57508
const UNDERSCORE_LATIN1 = 57509
const UNDERSCORE_LATIN2 = 57510
const UNDERSCORE_LATIN5 = 57511
const UNDERSCORE_LATIN7 = 57512
const UNDERSCORE_MACCE = 57513
const UNDERSCORE_MACROMAN = 57514
const UNDERSCORE_SJIS = 57515
const UNDERSCORE_SWE7 = 57516
const UNDERSCORE_TIS620 = 57517
const UNDERSCORE_UCS2 = 57518
const UNDERSCORE_UJIS = 57519
const UNDERSCORE_UTF16 = 57520
const UNDERSCORE_UTF16LE = 57521
const UNDERSCORE_UTF32 = 57522
const UNDERSCORE_UTF8 = 57523
const UNDERSCORE_UTF8MB4 = 57524
const INTERVAL = 57525
const JSON_EXTRACT_OP = 57526
const JSON_UNQUOTE_EXTRACT_OP = 57527
const CREATE = 57528
const ALTER = 57529
const DROP = 57530
const RENAME = 57531
const ANALYZE = 57532
const ADD = 57533
const FLUSH = 57534
const CHANGE = 57535
const MODIFY = 57536
const DEALLOCATE = 57537
const REVERT = 57538
const SCHEMA = 57539
const TABLE = 57540
const INDEX = 57541
const VIEW = 57542
const TO = 57543
const IGNORE = 57544
const IF = 57545
const PRIMARY = 57546
const COLUMN = 57547
const SPATIAL = 57548
const FULLTEXT = 57549
const KEY_BLOCK_SIZE = 57550
const CHECK = 57551
const INDEXES = 57552
const ACTION = 57553
const CASCADE = 57554
const CONSTRAINT = 57555
const FOREIGN = 57556
const NO = 57557
const REFERENCES = 57558
const RESTRICT = 57559
const SHOW = 57560
const DESCRIBE = 57561
const EXPLAIN = 57562
const DATE = 57563
const ESCAPE = 57564
const REPAIR = 57565
const OPTIMIZE = 57566
const TRUNCATE = 57567
const COALESCE = 57568
const EXCHANGE = 57569
const REBUILD = 57570
const PARTITIONING = 57571
const REMOVE = 57572
const PREPARE = 57573
const EXECUTE = 57574
const MAXVALUE = 57575
const PARTITION = 57576
const REORGANIZE = 57577
const LESS = 57578
const THAN = 57579
const PROCEDURE = 57580
const TRIGGER = 57581
const VINDEX = 57582
const VINDEXES = 57583
const DIRECTORY = 57584
const NAME = 57585
const UPGRADE = 57586
const STATUS = 57587
const VARIABLES = 57588
const WARNINGS = 57589
const CASCADED = 57590
const DEFINER = 57591
const OPTION = 57592
const SQL = 57593
const UNDEFINED = 57594
const SEQUENCE = 57595
const MERGE = 57596
const TEMPORARY = 57597
const TEMPTABLE = 57598
const INVOKER = 57599
const SECURITY = 57600
const FIRST = 57601
const AFTER = 57602
const LAST = 57603
const VITESS_MIGRATION = 57604
const CANCEL = 57605
const RETRY = 57606
const COMPLETE = 57607
const CLEANUP = 57608
const BEGIN = 57609
const START = 57610
const TRANSACTION = 57611
const COMMIT = 57612
const ROLLBACK = 57613
const SAVEPOINT = 57614
const RELEASE = 57615
const WORK = 57616
const BIT = 57617
const TINYINT = 57618
const SMALLINT = 57619
const MEDIUMINT = 57620
const INT = 57621
const INTEGER = 57622
const BIGINT = 57623
const INTNUM = 57624
const REAL = 57625
const DOUBLE = 57626
const FLOAT_TYPE = 57627
const DECIMAL_TYPE = 57628
const NUMERIC = 57629
const TIME = 57630
const TIMESTAMP = 57631
const DATETIME = 57632
const YEAR = 57633
const CHAR = 57634
const VARCHAR = 57635
const BOOL = 57636
const CHARACTER = 57637
const VARBINARY = 57638
const NCHAR = 57639
const TEXT = 57640
const TINYTEXT = 57641
const MEDIUMTEXT = 57642
const LONGTEXT = 57643
const BLOB = 57644
const TINYBLOB = 57645
const MEDIUMBLOB = 57646
const LONGBLOB = 57647
const JSON = 57648
const ENUM = 57649
const GEOMETRY = 57650
const POINT = 57651
const LINESTRING = 57652
const POLYGON = 57653
const GEOMETRYCOLLECTION = 57654
const MULTIPOINT = 57655
const MULTILINESTRING = 57656
const MULTIPOLYGON = 57657
const ASCII = 57658
const UNICODE = 57659
const NULLX = 57660
const AUTO_INCREMENT = 57661
const APPROXNUM = 57662
const SIGNED = 57663
const UNSIGNED = 57664
const ZEROFILL = 57665
const CODE = 57666
const COLLATION = 57667
const COLUMNS = 57668
const DATABASES = 57669
const ENGINES = 57670
const EVENT = 57671
const EXTENDED = 57672
const FIELDS = 57673
const FULL = 57674
const FUNCTION = 57675
const GTID_EXECUTED = 57676
const KEYSPACES = 57677
const OPEN = 57678
const PLUGINS = 57679
const PRIVILEGES = 57680
const PROCESSLIST = 57681
const SCHEMAS = 57682
const TABLES = 57683
const TRIGGERS = 57684
const USER = 57685
const VGTID_EXECUTED = 57686
const VITESS_KEYSPACES = 57687
const VITESS_METADATA = 57688
const VITESS_MIGRATIONS = 57689
const VITESS_REPLICATION_STATUS = 57690
const VITESS_SHARDS = 57691
const VITESS_TABLETS = 57692
const VSCHEMA = 57693
const NAMES = 57694
const GLOBAL = 57695
const SESSION = 57696
const ISOLATION = 57697
const LEVEL = 57698
const READ = 57699
const WRITE = 57700
const ONLY = 57701
const REPEATABLE = 57702
const COMMITTED = 57703
const UNCOMMITTED = 57704
const SERIALIZABLE = 57705
const CURRENT_TIMESTAMP = 57706
const DATABASE = 57707
const CURRENT_DATE = 57708
const CURRENT_TIME = 57709
const LOCALTIME = 57710
const LOCALTIMESTAMP = 57711
const CURRENT_USER = 57712
const UTC_DATE = 57713
const UTC_TIME = 57714
const UTC_TIMESTAMP = 57715
const DAY = 57716
const DAY_HOUR = 57717
const DAY_MICROSECOND = 57718
const DAY_MINUTE = 57719
const DAY_SECOND = 57720
const HOUR = 57721
const HOUR_MICROSECOND = 57722
const HOUR_MINUTE = 57723
const HOUR_SECOND = 57724
const MICROSECOND = 57725
const MINUTE = 57726
const MINUTE_MICROSECOND = 57727
const MINUTE_SECOND = 57728
const MONTH = 57729
const QUARTER = 57730
const SECOND = 57731
const SECOND_MICROSECOND = 57732
const YEAR_MONTH = 57733
const WEEK = 57734
const REPLACE = 57735
const CONVERT = 57736
const CAST = 57737
const SUBSTR = 57738
const SUBSTRING = 57739
const GROUP_CONCAT = 57740
const SEPARATOR = 57741
const TIMESTAMPADD = 57742
const TIMESTAMPDIFF = 57743
const WEIGHT_STRING = 57744
const MATCH = 57745
const AGAINST = 57746
const BOOLEAN = 57747
const LANGUAGE = 57748
const WITH = 57749
const QUERY = 57750
const EXPANSION = 57751
const WITHOUT = 57752
const VALIDATION = 57753
const UNUSED = 57754
const ARRAY = 57755
const CUME_DIST = 57756
const DESCRIPTION = 57757
const DENSE_RANK = 57758
const EMPTY = 57759
const EXCEPT = 57760
const FIRST_VALUE = 57761
const GROUPING = 57762
const GROUPS = 57763
const JSON_TABLE = 57764
const LAG = 57765
const LAST_VALUE = 57766
const LATERAL = 57767
const LEAD = 57768
const MEMBER = 57769
const NTH_VALUE = 57770
const NTILE = 57771
const OF = 57772
const OVER = 57773
const PERCENT_RANK = 57774
const RANK = 57775
const RECURSIVE = 57776
const ROW_NUMBER = 57777
const SYSTEM = 57778
const WINDOW = 57779
const ACTIVE = 57780
const ADMIN = 57781
const BUCKETS = 57782
const CLONE = 57783
const COMPONENT = 57784
const DEFINITION = 57785
const ENFORCED = 57786
const EXCLUDE = 57787
const FOLLOWING = 57788
const GEOMCOLLECTION = 57789
const GET_MASTER_PUBLIC_KEY = 57790
const HISTOGRAM = 57791
const HISTORY = 57792
const INACTIVE = 57793
const INVISIBLE = 57794
const LOCKED = 57795
const MASTER_COMPRESSION_ALGORITHMS = 57796
const MASTER_PUBLIC_KEY_PATH = 57797
const MASTER_TLS_CIPHERSUITES = 57798
const MASTER_ZSTD_COMPRESSION_LEVEL = 57799
const NESTED = 57800
const NETWORK_NAMESPACE = 57801
const NOWAIT = 57802
const NULLS = 57803
const OJ = 57804
const OLD = 57805
const OPTIONAL = 57806
const ORDINALITY = 57807
const ORGANIZATION = 57808
const OTHERS = 57809
const PATH = 57810
const PERSIST = 57811
const PERSIST_ONLY = 57812
const PRECEDING = 57813
const PRIVILEGE_CHECKS_USER = 57814
const PROCESS = 57815
const RANDOM = 57816
const REFERENCE = 57817
const REQUIRE_ROW_FORMAT = 57818
const RESOURCE = 57819
const RESPECT = 57820
const RESTART = 57821
const RETAIN = 57822
const REUSE = 57823
const ROLE = 57824
const SECONDARY = 57825
const SECONDARY_ENGINE = 57826
const SECONDARY_LOAD = 57827
const SECONDARY_UNLOAD = 57828
const SKIP = 57829
const SRID = 57830
const THREAD_PRIORITY = 57831
const TIES = 57832
const UNBOUNDED = 57833
const VCPU = 57834
const VISIBLE = 57835
const FORMAT = 57836
const TREE = 57837
const VITESS = 57838
const TRADITIONAL = 57839
const LOCAL = 57840
const LOW_PRIORITY = 57841
const NO_WRITE_TO_BINLOG = 57842
const LOGS = 57843
const ERROR = 57844
const GENERAL = 57845
const HOSTS = 57846
const OPTIMIZER_COSTS = 57847
const USER_RESOURCES = 57848
const SLOW = 57849
const CHANNEL = 57850
const RELAY = 57851
const EXPORT = 57852
const AVG_ROW_LENGTH = 57853
const CONNECTION = 57854
const CHECKSUM = 57855
const DELAY_KEY_WRITE = 57856
const ENCRYPTION = 57857
const ENGINE = 57858
const INSERT_METHOD = 57859
const MAX_ROWS = 57860
const MIN_ROWS = 57861
const PACK_KEYS = 57862
const PASSWORD = 57863
const FIXED = 57864
const DYNAMIC = 57865
const COMPRESSED = 57866
const REDUNDANT = 57867
const COMPACT = 57868
const ROW_FORMAT = 57869
const STATS_AUTO_RECALC = 57870
const STATS_PERSISTENT = 57871
const STATS_SAMPLE_PAGES = 57872
const STORAGE = 57873
const MEMORY = 57874
const DISK = 57875
const PARTITIONS = 57876
const LINEAR = 57877
const RANGE = 57878
const LIST = 57879
const SUBPARTITION = 57880
const SUBPARTITIONS = 57881
const HASH = 57882

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 47,
	11, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 140,
	558, 140,
	-2, 146,
	-1, 48,
	116, 146,
	156, 146,
	312, 146,
	-2, 447,
	-1, 55,
	33, 626,
	216, 626,
	227, 626,
	262, 640,
	263, 640,
	-2, 628,
	-1, 60,
	218, 651,
	-2, 649,
	-1, 114,
	215, 1119,
	-2, 119,
	-1, 116,
	1, 141,
	558, 141,
	-2, 146,
	-1, 126,
	117, 350,
	221, 350,
	-2, 441,
	-1, 145,
	116, 146,
	156, 146,
	312, 146,
	-2, 456,
	-1, 608,
	200, 1140,
	-2, 1136,
	-1, 609,
	200, 1141,
	-2, 1137,
	-1, 683,
	57, 719,
	-2, 734,
	-1, 720,
	132, 1502,
	-2, 112,
	-1, 721,
	132, 1379,
	-2, 113,
	-1, 727,
	132, 1433,
	-2, 1113,
	-1, 872,
	132, 1312,
	-2, 1110,
	-1, 910,
	226, 41,
	231, 41,
	-2, 361,
	-1, 987,
	1, 495,
	558, 495,
	-2, 146,
	-1, 1188,
	57, 720,
	-2, 739,
	-1, 1189,
	57, 721,
	-2, 740,
	-1, 1241,
	116, 146,
	156, 146,
	312, 146,
	-2, 391,
	-1, 1318,
	117, 350,
	221, 350,
	-2, 441,
	-1, 1327,
	226, 42,
	231, 42,
	-2, 362,
	-1, 1578,
	200, 1145,
	-2, 1139,
	-1, 1659,
	116, 146,
	156, 146,
	312, 146,
	-2, 392,
	-1, 1666,
	23, 165,
	-2, 167,
	-1, 1904,
	75, 94,
	84, 94,
	-2, 792,
	-1, 2073,
	47, 1081,
	-2, 1075,
	-1, 2277,
	5, 53,
	16, 53,
	18, 53,
	85, 53,
	-2, 767,
}

const yyPrivate = 57344

const yyLast = 34894

var yyAct = [...]int{
	608, 2531, 2502, 2336, 2537, 2488, 1602, 2194, 2124, 2131,
	2415, 3, 2084, 2165, 2361, 1050, 698, 96, 1167, 676,
	2177, 2429, 2176, 1847, 2087, 2133, 1719, 559, 2248, 2088,
	1203, 2366, 1877, 603, 2085, 2242, 585, 563, 611, 600,
	601, 1632, 2268, 619, 79, 2082, 556, 2074, 1869, 2179,
	1592, 182, 2235, 1689, 182, 1936, 523, 182, 2006, 1900,
	1965, 1709, 539, 1694, 182, 154, 1937, 699, 602, 37,
	875, 555, 182, 998, 539, 539, 1938, 1889, 725, 38,
	1645, 36, 1190, 1656, 1636, 918, 551, 182, 2022, 1572,
	940, 1617, 1637, 1849, 678, 1862, 1481, 1522, 1708, 1728,
	140, 1761, 1529, 1696, 1930, 95, 1233, 1325, 905, 539,
	1906, 1212, 539, 182, 539, 900, 1639, 557, 91, 1594,
	1541, 681, 1499, 79, 722, 1170, 1069, 1429, 1332, 882,
	911, 906, 1706, 1432, 568, 879, 1232, 907, 1216, 1230,
	690, 681, 908, 1415, 1317, 712, 680, 1048, 684, 1624,
	1043, 1437, 1293, 123, 124, 883, 98, 983, 688, 686,
	97, 685, 1618, 76, 1685, 546, 701, 2460, 1139, 1958,
	89, 1341, 2538, 1135, 2162, 85, 157, 1721, 117, 118,
	1585, 1298, 184, 185, 186, 1721, 1722, 1723, 1985, 1984,
	1759, 1956, 8, 125, 687, 77, 1070, 7, 6, 2014,
	2015, 1589, 1590, 1488, 1487, 706, 1486, 711, 1485, 692,
	1484, 945, 526, 922, 1483, 1470, 1401, 90, 496, 2516,
	876, 184, 185, 186, 119, 549, 1475, 550, 1070, 1845,
	2070, 547, 2301, 942, 591, 1871, 2411, 677, 2410, 953,
	891, 679, 2148, 944, 943, 886, 956, 957, 719, 960,
	961, 962, 963, 513, 1701, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	921, 726, 693, 700, 2547, 1027, 2329, 102, 1699, 2330,
	2498, 2541, 898, 1799, 78, 78, 2471, 2530, 2337, 946,
	947, 948, 2489, 119, 1575, 897, 896, 1747, 2497, 512,
	2021, 1080, 78, 2470, 78, 80, 2227, 1307, 1993, 1880,
	1915, 510, 1992, 1914, 1651, 1652, 1916, 1846, 104, 105,
	958, 108, 2121, 2122, 114, 2120, 2013, 179, 1650, 1234,
	491, 1235, 1796, 1080, 1881, 1022, 1023, 895, 1017, 992,
	993, 670, 1101, 1591, 1046, 669, 1018, 1797, 1927, 1005,
	672, 507, 1011, 2379, 1006, 2048, 683, 119, 1959, 2218,
	521, 87, 87, 2420, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1110, 1109, 1111, 1112, 518, 537, 1005, 2196, 87,
	2216, 87, 1006, 1474, 714, 715, 2245, 1570, 1669, 1668,
	1004, 541, 1003, 890, 1076, 893, 892, 1068, 535, 1174,
	1988, 1966, 526, 526, 1698, 2189, 1729, 2540, 527, 1773,
	1770, 1772, 1771, 2190, 1762, 1476, 1477, 1478, 1416, 1040,
	982, 2001, 1026, 1421, 1024, 1019, 1076, 988, 1775, 526,
	1776, 1012, 1777, 1778, 1025, 1020, 1021, 965, 497, 1767,
	499, 514, 959, 529, 1045, 528, 503, 964, 501, 505,
	515, 506, 2198, 500, 1764, 511, 1766, 2197, 502, 516,
	517, 519, 533, 532, 520, 986, 509, 530, 526, 2517,
	1562, 1551, 1552, 1553, 1554, 1564, 1555, 1556, 1557, 1569,
	1565, 1558, 1559, 1566, 1567, 1568, 1560, 1561, 1563, 1391,
	895, 182, 887, 182, 1768, 1732, 182, 2322, 1765, 889,
	888, 87, 901, 1633, 902, 894, 902, 2049, 899, 2173,
	938, 937, 936, 604, 1038, 586, 588, 605, 606, 929,
	584, 587, 607, 927, 539, 539, 539, 1113, 935, 1015,
	675, 934, 933, 1392, 932, 1393, 931, 1310, 939, 926,
	2137, 2535, 539, 539, 1034, 2542, 1036, 880, 893, 589,
	590, 2392, 914, 2528, 880, 1062, 913, 1075, 1072, 1073,
	1074, 1079, 1081, 1078, 1430, 1077, 880, 1049, 1049, 1049,
	878, 1001, 1071, 1007, 1008, 1009, 1010, 1113, 1707, 2147,
	713, 2002, 1753, 1426, 1033, 1035, 955, 79, 1056, 1075,
	1072, 1073, 1074, 1079, 1081, 1078, 1047, 1077, 527, 527,
	949, 895, 981, 1700, 1071, 2155, 2459, 1987, 1957, 1990,
	2017, 531, 37, 1422, 681, 1121, 1122, 1123, 1960, 1126,
	2172, 1128, 1129, 1130, 1131, 527, 1134, 1136, 1136, 524,
	1136, 1140, 1140, 1142, 1143, 1144, 1145, 1146, 1305, 1148,
	1149, 1150, 1151, 1152, 525, 2421, 1619, 1620, 1140, 1140,
	1140, 1140, 2246, 1039, 2469, 1160, 1797, 1331, 894, 930,
	1810, 1304, 1303, 928, 527, 2005, 985, 920, 2407, 920,
	182, 1977, 1052, 1053, 1427, 1031, 539, 1850, 1852, 1032,
	1301, 920, 1116, 1117, 1118, 1119, 920, 1798, 1165, 1037,
	182, 495, 1124, 1178, 1127, 490, 1420, 678, 1183, 1181,
	2450, 1166, 86, 86, 920, 1120, 81, 2000, 1749, 539,
	1999, 1030, 1014, 182, 2282, 1173, 1114, 1115, 539, 2023,
	86, 681, 86, 1016, 539, 681, 1403, 1402, 1404, 1405,
	1406, 681, 994, 722, 1002, 178, 1065, 991, 77, 2264,
	2533, 1063, 1064, 2534, 1911, 2532, 1180, 1876, 1182, 116,
	1184, 1113, 95, 1837, 1584, 984, 680, 1141, 1137, 120,
	1138, 1330, 1657, 1166, 2508, 919, 1220, 919, 2506, 894,
	923, 913, 162, 1153, 1154, 1155, 1156, 2510, 2511, 919,
	924, 954, 2135, 2136, 919, 1147, 1171, 996, 1112, 2507,
	913, 916, 917, 1041, 880, 2119, 695, 1504, 910, 914,
	2025, 2008, 919, 98, 1044, 2465, 2007, 923, 913, 920,
	2008, 1505, 1506, 1503, 1920, 2007, 2318, 924, 1028, 909,
	1438, 111, 2258, 2041, 1851, 1417, 941, 1418, 1763, 159,
	1419, 160, 1423, 1236, 1168, 1066, 1000, 925, 1542, 1949,
	677, 177, 1542, 1085, 1824, 184, 185, 186, 1202, 1524,
	2375, 679, 2293, 1179, 1107, 1108, 1110, 1109, 1111, 1112,
	1226, 1227, 2035, 2034, 2033, 2027, 1199, 2031, 2292, 2026,
	1736, 2024, 1340, 2127, 1339, 182, 2029, 1741, 112, 1294,
	726, 1329, 1746, 1748, 1744, 2028, 2134, 929, 1302, 1105,
	1106, 1107, 1108, 1110, 1109, 1111, 1112, 927, 2137, 1832,
	2030, 2032, 2524, 1083, 1745, 1084, 1085, 919, 2476, 539,
	2283, 1327, 2043, 913, 916, 917, 1525, 880, 2128, 1336,
	2443, 910, 914, 1338, 1084, 1085, 539, 539, 1813, 539,
	987, 539, 539, 1221, 539, 539, 539, 539, 539, 539,
	2477, 1410, 2224, 2130, 2543, 2545, 163, 2125, 1029, 539,
	1439, 1820, 2444, 182, 1374, 168, 2222, 1197, 1231, 1337,
	1185, 2135, 2136, 999, 1741, 1494, 1496, 1497, 2126, 182,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1087, 2230, 1323,
	539, 1197, 182, 2402, 1369, 1370, 1495, 87, 1546, 1308,
	1309, 1743, 1083, 1428, 1084, 1085, 1083, 182, 1084, 1085,
	2132, 1502, 1333, 1333, 1409, 1316, 1815, 1197, 1083, 2352,
	1084, 1085, 2351, 182, 1083, 1814, 1084, 1085, 2544, 1371,
	182, 1625, 1626, 1819, 2300, 1083, 1335, 1084, 1085, 182,
	182, 182, 182, 182, 182, 182, 182, 182, 539, 539,
	539, 2526, 1083, 1300, 1084, 1085, 1334, 2299, 1313, 1377,
	1378, 1083, 2456, 1084, 1085, 1383, 1384, 1314, 1312, 1083,
	2525, 1084, 1085, 1326, 2163, 2134, 155, 717, 2153, 182,
	1934, 1802, 1803, 1804, 1933, 1434, 1083, 2137, 1084, 1085,
	2447, 1049, 1049, 1049, 1704, 1442, 1197, 1083, 1387, 1084,
	1085, 1411, 1446, 2446, 1448, 1449, 1450, 1451, 1343, 1408,
	1344, 1455, 1346, 1348, 1396, 1210, 1352, 1354, 1356, 1358,
	1360, 1398, 1372, 1395, 1523, 1469, 1083, 1394, 1084, 1085,
	1385, 1083, 1431, 1084, 1085, 1379, 1376, 1532, 539, 1375,
	1500, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1109,
	1111, 1112, 1350, 539, 539, 1507, 2400, 1509, 1510, 1511,
	1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521,
	1498, 2445, 1407, 1576, 119, 1444, 897, 896, 2374, 1306,
	1209, 2372, 1543, 182, 1397, 2319, 539, 539, 2348, 2297,
	2129, 1083, 2289, 1084, 1085, 1465, 1466, 1467, 622, 623,
	624, 1468, 1597, 184, 185, 186, 1206, 2290, 1604, 2229,
	1605, 1943, 182, 1931, 1757, 539, 1083, 1756, 1084, 1085,
	1083, 1614, 1084, 1085, 1616, 182, 1935, 1508, 539, 1598,
	184, 185, 186, 182, 1918, 182, 1578, 182, 182, 539,
	1527, 1501, 539, 95, 1526, 1083, 1576, 1084, 1085, 1580,
	1581, 1471, 1435, 539, 722, 1207, 1399, 722, 184, 185,
	186, 1083, 95, 1084, 1085, 1386, 1382, 1381, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 1380,
	1641, 1208, 1042, 1610, 173, 174, 175, 176, 2193, 1440,
	1441, 1577, 1055, 184, 185, 186, 1635, 1717, 184, 185,
	186, 1197, 1715, 1445, 1856, 2539, 2428, 92, 539, 1578,
	1452, 1453, 1454, 94, 1710, 1711, 1712, 1660, 93, 1714,
	1716, 1856, 2495, 1661, 1856, 2482, 1856, 2480, 692, 2472,
	1197, 101, 2257, 539, 1643, 101, 1856, 2461, 1666, 539,
	1336, 2427, 100, 1336, 99, 1336, 100, 2396, 99, 2327,
	2458, 1740, 1612, 94, 2395, 1730, 1691, 1675, 1676, 1677,
	1678, 1664, 2335, 92, 1630, 2083, 1628, 1878, 1697, 1967,
	94, 1197, 1197, 2114, 93, 2257, 1648, 1946, 1647, 1856,
	2403, 539, 1797, 1523, 1663, 2327, 1197, 1665, 1523, 1523,
	1662, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1109, 1111,
	1112, 726, 2259, 1727, 726, 1856, 2325, 1741, 1197, 2262,
	1197, 1197, 2145, 2144, 100, 1197, 1082, 922, 2141, 2142,
	2141, 2140, 1886, 1197, 182, 1885, 1528, 1333, 1197, 1811,
	1197, 182, 2464, 1534, 1535, 1856, 182, 182, 1886, 1692,
	182, 1670, 182, 1671, 1672, 1673, 1674, 1735, 182, 1713,
	1738, 1750, 1739, 1579, 1705, 182, 1582, 1583, 1703, 1681,
	1682, 1683, 1684, 1702, 1687, 1688, 1878, 1733, 1734, 1907,
	1737, 1101, 1692, 2016, 921, 1797, 1986, 1297, 1971, 1886,
	1752, 1751, 1811, 182, 539, 1754, 1755, 1963, 1964, 1742,
	1856, 1867, 1609, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1110, 1109, 1111, 1112, 1864, 1886, 1907, 1082, 1197, 1297,
	1296, 1242, 1241, 609, 2143, 1649, 1811, 1829, 1828, 94,
	1760, 1741, 2302, 1724, 1788, 1789, 1101, 1623, 1809, 1791,
	1201, 1587, 1908, 1479, 1425, 1228, 682, 2257, 1792, 1365,
	904, 1910, 903, 2514, 2485, 2166, 1741, 1500, 1102, 1103,
	1104, 1105, 1106, 1107, 1108, 1110, 1109, 1111, 1112, 87,
	2417, 1806, 1204, 1808, 183, 1781, 2393, 183, 2386, 1908,
	183, 2317, 2303, 2304, 2305, 540, 1811, 183, 1797, 2314,
	2295, 2233, 2232, 1299, 1690, 183, 2191, 540, 540, 1366,
	1367, 1368, 2168, 2306, 2164, 1972, 1939, 1686, 182, 1680,
	183, 1891, 1894, 1895, 1896, 1892, 182, 1893, 1897, 1679,
	1843, 2269, 2270, 87, 1413, 1328, 1795, 1324, 1295, 539,
	1940, 113, 540, 986, 2195, 540, 183, 540, 1362, 539,
	1836, 2269, 2270, 1807, 1101, 2418, 1805, 1701, 1176, 2519,
	2307, 2308, 2521, 1940, 2503, 2272, 2160, 1853, 1501, 2159,
	2158, 2083, 182, 182, 1882, 1950, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1110, 1109, 1111, 1112, 681, 1917, 1782,
	1472, 1823, 2356, 1578, 2355, 1363, 1364, 1891, 1894, 1895,
	1896, 1892, 2275, 1893, 1897, 2274, 1883, 1884, 2105, 2103,
	1195, 1191, 2102, 2106, 2104, 1903, 2107, 2101, 1895, 1896,
	2496, 1615, 1205, 1865, 1608, 1192, 2263, 2075, 2077, 2064,
	2063, 37, 539, 2250, 1171, 708, 2078, 182, 1868, 1969,
	1902, 2249, 2354, 1844, 182, 1854, 2442, 2365, 1577, 2367,
	1606, 1607, 1194, 1901, 1193, 1921, 539, 2253, 1861, 2072,
	1424, 668, 1962, 539, 2139, 1875, 696, 1336, 1336, 1905,
	1925, 1944, 539, 951, 697, 1538, 950, 2205, 1866, 1939,
	2011, 92, 1054, 1979, 1983, 1909, 1912, 1697, 94, 1539,
	1195, 1191, 93, 1928, 1929, 182, 182, 182, 182, 182,
	1922, 1978, 120, 552, 1919, 1192, 92, 2255, 1625, 1626,
	1774, 101, 182, 182, 94, 1932, 1976, 93, 2156, 1942,
	1785, 2457, 100, 2413, 99, 2138, 1899, 1613, 182, 1941,
	1188, 1189, 1194, 94, 1193, 702, 2236, 1947, 1801, 1951,
	1952, 1953, 1981, 704, 705, 2062, 1523, 101, 99, 2434,
	2243, 2433, 2373, 2061, 2371, 1316, 2370, 2363, 100, 100,
	99, 2315, 1821, 2254, 2252, 2169, 1982, 1725, 539, 678,
	1311, 2040, 703, 2362, 1973, 1974, 1878, 101, 2523, 2522,
	1980, 1864, 1830, 2053, 539, 1222, 1214, 539, 100, 1175,
	106, 107, 2523, 2448, 2288, 182, 694, 103, 1834, 1835,
	88, 1, 617, 2505, 508, 1588, 1169, 539, 2003, 522,
	2501, 2018, 1400, 1390, 539, 539, 2338, 182, 182, 182,
	182, 182, 2053, 2414, 2080, 2066, 1968, 1731, 2095, 182,
	2313, 1695, 912, 2036, 182, 182, 145, 182, 1641, 1658,
	182, 182, 182, 2037, 2020, 2089, 1659, 2491, 2086, 110,
	873, 109, 915, 2086, 2067, 2090, 2052, 79, 2019, 1013,
	1641, 1641, 1641, 1641, 1641, 1726, 2055, 2056, 2057, 2328,
	1926, 1667, 2054, 1248, 1246, 2154, 1247, 1903, 2068, 1245,
	1641, 182, 684, 1641, 1250, 2113, 1249, 2065, 1244, 1831,
	1473, 536, 1898, 686, 539, 685, 2115, 180, 1237, 2116,
	95, 2096, 1184, 539, 2099, 2108, 1215, 952, 182, 2175,
	2097, 2098, 498, 2100, 2146, 2112, 2123, 1758, 182, 504,
	1434, 2117, 1125, 2060, 183, 1913, 183, 723, 716, 183,
	1601, 2091, 2247, 182, 2171, 2150, 182, 2071, 2073, 1870,
	2076, 2069, 2441, 2364, 2149, 2483, 2206, 1923, 1211, 2183,
	2182, 1822, 1132, 2180, 1540, 2058, 1640, 540, 540, 540,
	2151, 2152, 1596, 1697, 2170, 2174, 1493, 561, 560, 558,
	1857, 2186, 1879, 1088, 612, 540, 540, 1848, 1101, 1223,
	1890, 1097, 1888, 1098, 1887, 1783, 2094, 1644, 2271, 2267,
	2201, 182, 2200, 2009, 1638, 2209, 2010, 1099, 1100, 1096,
	1102, 1103, 1104, 1105, 1106, 1107, 1108, 1110, 1109, 1111,
	1112, 2214, 1863, 2203, 2204, 569, 562, 554, 2207, 610,
	2285, 2181, 1989, 2192, 1991, 178, 1924, 2188, 2241, 1067,
	1187, 548, 885, 1537, 2419, 2405, 1800, 2226, 1186, 2237,
	2238, 1549, 1550, 2161, 1718, 182, 63, 41, 2244, 120,
	543, 2251, 2515, 1058, 710, 32, 31, 30, 2266, 29,
	2256, 28, 162, 2291, 23, 2208, 22, 21, 182, 20,
	2276, 19, 2273, 25, 18, 17, 16, 115, 2280, 2281,
	50, 47, 45, 122, 121, 2278, 182, 48, 1641, 182,
	182, 182, 44, 989, 2286, 42, 27, 2183, 2182, 539,
	539, 2284, 26, 183, 2279, 2320, 2321, 2287, 15, 540,
	14, 13, 12, 11, 10, 9, 5, 4, 35, 159,
	34, 160, 33, 183, 1061, 24, 539, 539, 539, 539,
	2, 177, 1955, 1720, 0, 2211, 2212, 2323, 2213, 0,
	0, 2215, 540, 2217, 0, 2219, 183, 2324, 2334, 0,
	0, 540, 0, 2332, 2333, 0, 0, 540, 0, 0,
	0, 0, 2296, 0, 2298, 0, 0, 0, 0, 0,
	182, 0, 0, 2347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2343, 0, 0, 1086,
	0, 0, 0, 539, 0, 539, 0, 0, 0, 0,
	0, 0, 0, 2380, 0, 0, 2369, 2360, 2368, 2353,
	0, 2357, 2358, 0, 678, 0, 2384, 1133, 2382, 2378,
	2359, 0, 2376, 2089, 0, 2086, 0, 2089, 0, 0,
	0, 0, 0, 2090, 2344, 79, 163, 2090, 0, 0,
	0, 2388, 2389, 0, 0, 168, 2391, 0, 539, 0,
	0, 0, 0, 0, 2401, 552, 0, 0, 0, 0,
	37, 0, 0, 0, 0, 0, 0, 2398, 539, 0,
	2397, 0, 2399, 0, 0, 0, 0, 0, 2409, 0,
	0, 2408, 0, 2416, 539, 0, 2404, 0, 539, 539,
	0, 0, 0, 0, 0, 0, 2406, 0, 0, 0,
	0, 0, 0, 0, 0, 2438, 0, 0, 183, 2435,
	2436, 0, 2440, 2437, 0, 593, 0, 539, 0, 0,
	0, 0, 0, 2452, 539, 0, 0, 0, 0, 0,
	2455, 2451, 0, 0, 2449, 0, 678, 0, 2453, 1213,
	0, 0, 540, 2089, 0, 0, 0, 0, 539, 182,
	0, 0, 0, 2090, 2466, 2463, 155, 0, 0, 540,
	540, 0, 540, 0, 540, 540, 1145, 540, 540, 540,
	540, 540, 540, 0, 0, 0, 0, 538, 0, 0,
	0, 539, 540, 0, 0, 0, 183, 79, 0, 673,
	674, 2478, 0, 0, 0, 539, 539, 0, 0, 2484,
	2481, 0, 183, 539, 2486, 2490, 0, 0, 0, 0,
	2416, 2492, 37, 540, 0, 183, 2086, 0, 0, 0,
	2512, 0, 2504, 2509, 724, 0, 0, 877, 0, 884,
	183, 79, 0, 2518, 2520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 539, 183, 0, 0, 0,
	0, 2527, 2529, 183, 0, 2536, 37, 0, 0, 0,
	0, 0, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 540, 540, 540, 2546, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 161,
	158, 164, 165, 166, 167, 169, 170, 171, 172, 0,
	0, 540, 0, 0, 173, 174, 175, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 540,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 1436, 0, 540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 0,
	0, 540, 0, 0, 0, 0, 183, 0, 183, 0,
	183, 183, 540, 0, 0, 540, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 120, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 162, 1489, 1490,
	1491, 1492, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 0,
	0, 0, 0, 141, 0, 0, 540, 0, 1530, 1531,
	0, 0, 540, 0, 0, 0, 1536, 0, 0, 0,
	0, 0, 0, 0, 159, 0, 160, 0, 0, 0,
	0, 1571, 129, 130, 151, 150, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 724,
	724, 724, 0, 0, 0, 1621, 1622, 183, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 1057, 1059, 183,
	183, 0, 0, 183, 0, 183, 0, 0, 0, 0,
	0, 183, 1655, 0, 0, 0, 0, 0, 183, 146,
	127, 153, 134, 126, 0, 147, 148, 0, 0, 0,
	0, 163, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 135, 0, 0, 0, 0, 183, 540, 0, 0,
	0, 0, 0, 0, 0, 138, 136, 131, 132, 133,
	137, 0, 0, 0, 0, 0, 0, 128, 0, 0,
	0, 1693, 0, 1163, 0, 0, 139, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 594, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1196, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 0, 0,
	494, 155, 0, 534, 0, 0, 0, 0, 0, 0,
	494, 183, 0, 0, 1218, 0, 0, 0, 494, 183,
	0, 0, 0, 724, 0, 0, 0, 0, 0, 1238,
	0, 0, 540, 691, 0, 0, 0, 0, 0, 0,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 709,
	0, 709, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 183, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 143,
	0, 0, 144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 0, 0, 0, 0, 540, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 183,
	183, 183, 183, 156, 161, 158, 164, 165, 166, 167,
	169, 170, 171, 172, 0, 183, 183, 0, 0, 173,
	174, 175, 176, 0, 877, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 1163, 0, 0,
	0, 1342, 1342, 0, 1342, 0, 1342, 1342, 0, 1351,
	1342, 1342, 1342, 1342, 1342, 0, 0, 0, 0, 1213,
	0, 0, 1163, 1163, 877, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	540, 0, 0, 0, 0, 1412, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 540, 540, 0,
	183, 183, 183, 183, 183, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 183, 183, 0,
	183, 0, 0, 183, 183, 183, 0, 0, 0, 0,
	0, 0, 0, 724, 724, 724, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 183,
	0, 0, 0, 1533, 0, 0, 0, 494, 0, 494,
	1163, 0, 494, 0, 0, 2038, 2039, 0, 1547, 1548,
	2042, 0, 0, 724, 2044, 2045, 2046, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1600, 1603, 0, 183, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2081, 1961, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 0, 120, 0,
	142, 0, 0, 1218, 0, 0, 724, 0, 0, 0,
	0, 162, 0, 0, 724, 0, 0, 724, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 152, 0, 1164, 0, 0, 141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 183, 183, 183, 2167, 0, 0, 159, 0,
	160, 0, 540, 540, 0, 0, 1319, 1320, 151, 150,
	177, 0, 0, 884, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 540,
	540, 540, 540, 0, 0, 0, 0, 0, 877, 0,
	0, 0, 0, 0, 884, 0, 691, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1198,
	1200, 0, 0, 1172, 0, 0, 0, 0, 0, 494,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 2228,
	0, 0, 0, 0, 0, 0, 877, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 540, 0, 540, 0,
	0, 0, 0, 146, 1321, 153, 0, 1318, 0, 147,
	148, 0, 0, 0, 0, 163, 0, 493, 0, 0,
	0, 0, 0, 0, 168, 0, 552, 542, 0, 0,
	0, 0, 0, 0, 0, 671, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 0, 0,
	0, 540, 0, 0, 0, 1315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 120, 0,
	142, 540, 0, 0, 0, 0, 881, 0, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 540, 0, 1794,
	0, 540, 540, 0, 0, 0, 0, 0, 0, 0,
	2316, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 2331, 141, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 540, 0, 0,
	0, 494, 0, 0, 0, 155, 0, 0, 159, 0,
	160, 0, 0, 0, 0, 0, 1319, 1320, 151, 150,
	177, 540, 183, 0, 0, 0, 0, 0, 2345, 0,
	2346, 0, 0, 0, 0, 2349, 2350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1164, 0,
	0, 0, 0, 0, 540, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2377, 0, 0, 0, 540, 540,
	724, 0, 0, 1164, 1164, 2385, 540, 0, 2387, 494,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2390, 0, 0, 143, 1858, 1388, 144, 0, 0, 0,
	0, 2394, 0, 0, 1872, 0, 0, 0, 494, 0,
	1265, 0, 0, 146, 1321, 153, 0, 1318, 540, 147,
	148, 0, 0, 1433, 0, 163, 0, 0, 0, 0,
	552, 0, 0, 0, 168, 0, 0, 0, 0, 494,
	0, 0, 0, 0, 0, 0, 494, 0, 0, 0,
	0, 0, 0, 0, 0, 1456, 1457, 494, 494, 494,
	494, 494, 494, 494, 0, 0, 0, 0, 2439, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1945, 0, 0,
	0, 0, 0, 0, 0, 494, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 0, 0,
	0, 1603, 552, 173, 174, 175, 176, 0, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1253, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 709, 0,
	0, 0, 0, 0, 0, 709, 709, 0, 0, 0,
	0, 1164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 709, 1433, 709, 709, 709, 709, 709,
	1544, 0, 0, 0, 1545, 0, 0, 0, 0, 0,
	0, 2513, 0, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1198, 1586, 0, 0, 709, 0, 0, 0, 1266, 0,
	149, 0, 0, 724, 990, 0, 995, 0, 691, 997,
	0, 0, 0, 143, 0, 0, 144, 0, 0, 1342,
	0, 494, 2059, 1611, 0, 0, 0, 1433, 0, 494,
	0, 494, 0, 494, 1646, 0, 0, 0, 0, 0,
	0, 0, 724, 0, 0, 0, 1163, 0, 0, 2093,
	1342, 1163, 1279, 1282, 1283, 1284, 1285, 1286, 1287, 0,
	1288, 1289, 1290, 1291, 1292, 1267, 1268, 1269, 1270, 1251,
	1252, 1280, 0, 1254, 0, 1255, 1256, 1257, 1258, 1259,
	1260, 1261, 1262, 1263, 1264, 1271, 1272, 1273, 1274, 1275,
	1276, 1277, 1278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 161, 158,
	164, 165, 166, 167, 169, 170, 171, 172, 0, 877,
	0, 0, 1163, 173, 174, 175, 176, 0, 1603, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1281, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	494, 0, 0, 0, 0, 0, 1225, 494, 0, 0,
	0, 0, 494, 494, 0, 0, 494, 0, 1786, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 0, 0, 78, 39, 40, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 84, 0, 0, 494,
	43, 69, 70, 0, 67, 71, 0, 0, 0, 0,
	0, 0, 0, 68, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 1603, 1603, 0, 0, 0, 0,
	0, 0, 0, 0, 709, 0, 0, 0, 0, 0,
	0, 0, 1812, 0, 0, 0, 1816, 0, 1817, 1818,
	0, 2339, 2340, 2341, 2342, 0, 0, 1826, 0, 0,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	709, 709, 0, 0, 0, 0, 0, 0, 1243, 0,
	0, 1433, 0, 0, 494, 0, 1833, 0, 0, 0,
	0, 0, 1388, 1838, 1839, 1840, 1841, 1842, 0, 1611,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 1163, 0, 0, 0, 0, 2381, 0,
	2383, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 494, 494,
	0, 0, 0, 46, 49, 52, 51, 54, 0, 66,
	0, 0, 75, 72, 0, 0, 1373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1603, 0, 55, 83, 82, 0, 0,
	64, 65, 53, 0, 0, 1414, 0, 0, 73, 74,
	0, 0, 0, 724, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 2431,
	1954, 0, 0, 2431, 2431, 0, 1443, 0, 0, 0,
	0, 0, 0, 1447, 57, 58, 0, 59, 60, 61,
	62, 0, 0, 0, 1458, 1459, 1460, 1461, 1462, 1463,
	1464, 0, 1603, 0, 0, 0, 0, 0, 0, 1603,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 494, 494, 494, 494, 0, 0, 0, 0,
	0, 0, 1482, 1603, 0, 0, 0, 0, 494, 494,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1163, 0, 2479, 0, 709, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	724, 724, 0, 0, 0, 0, 0, 0, 2499, 0,
	0, 0, 0, 709, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2047, 0, 0, 2050, 2051,
	81, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 494, 0, 0, 86, 0, 0, 0, 0, 0,
	1603, 0, 0, 0, 0, 0, 0, 1164, 0, 0,
	0, 0, 1164, 494, 494, 494, 494, 494, 0, 0,
	0, 0, 0, 0, 0, 2109, 0, 2092, 0, 0,
	494, 1388, 0, 494, 0, 0, 494, 2118, 1433, 0,
	0, 0, 0, 0, 2110, 2111, 0, 0, 1627, 0,
	0, 0, 0, 0, 0, 0, 1631, 0, 1634, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1164, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 494,
	0, 0, 494, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2220, 2221, 2223, 2225, 0, 0, 0, 494, 0, 0,
	2231, 0, 0, 0, 0, 0, 2234, 0, 0, 0,
	0, 0, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2260, 2261, 0, 0, 2265, 0,
	0, 494, 0, 0, 0, 0, 0, 1482, 0, 0,
	0, 0, 0, 0, 1769, 0, 2277, 0, 0, 1779,
	1780, 0, 0, 1784, 494, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 494, 0, 0, 494, 494, 494, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	2326, 613, 620, 621, 622, 623, 624, 614, 616, 0,
	0, 0, 615, 0, 0, 618, 625, 626, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1388, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2184, 2185,
	0, 0, 0, 0, 1164, 0, 0, 0, 0, 0,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2412, 1904, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2422,
	2423, 2424, 0, 2425, 2426, 0, 0, 2430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2454, 0, 0, 0, 0, 0,
	1948, 0, 0, 0, 0, 494, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2468, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2473, 0, 1164, 0, 0, 0, 2474,
	2475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1994, 1995,
	1996, 1997, 1998, 0, 0, 0, 2487, 0, 0, 0,
	0, 0, 0, 604, 0, 1482, 2004, 605, 606, 0,
	0, 0, 607, 0, 0, 0, 87, 0, 0, 0,
	0, 2012, 613, 620, 621, 622, 623, 624, 614, 616,
	0, 0, 0, 615, 0, 0, 618, 625, 626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2184,
	2185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2178, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2199, 0, 0, 2202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2294, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2309,
	0, 0, 2310, 2311, 2312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 855, 841, 416,
	0, 788, 858, 757, 776, 868, 779, 782, 822, 735,
	801, 339, 773, 0, 761, 731, 768, 732, 759, 790,
	243, 756, 843, 805, 857, 295, 240, 737, 762, 353,
	778, 193, 824, 392, 228, 305, 302, 423, 254, 246,
	242, 227, 279, 311, 351, 410, 345, 864, 299, 811,
	0, 401, 324, 0, 0, 0, 792, 847, 799, 837,
	787, 823, 745, 810, 859, 774, 819, 860, 285, 226,
	192, 336, 402, 258, 0, 0, 0, 0, 184, 185,
	186, 0, 2493, 0, 2494, 0, 0, 0, 0, 0,
	0, 217, 0, 224, 770, 816, 854, 771, 818, 238,
	283, 245, 237, 420, 865, 846, 0, 0, 209, 856,
	794, 0, 821, 0, 871, 730, 813, 0, 733, 736,
	867, 850, 765, 248, 0, 0, 0, 0, 0, 0,
	0, 791, 800, 834, 785, 0, 0, 0, 0, 0,
	0, 0, 763, 0, 809, 0, 0, 0, 741, 734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 789, 0, 0, 0, 744, 0, 764, 835, 0,
	728, 266, 738, 325, 755, 0, 839, 849, 786, 453,
	853, 784, 783, 829, 742, 845, 777, 294, 740, 291,
	188, 205, 2467, 775, 335, 375, 381, 844, 760, 769,
	229, 766, 379, 349, 437, 213, 256, 372, 354, 377,
	828, 767, 808, 826, 378, 300, 425, 367, 435, 454,
	455, 236, 329, 444, 414, 450, 466, 206, 233, 343,
	407, 440, 398, 322, 421, 422, 290, 397, 264, 191,
	298, 460, 204, 387, 221, 211, 197, 409, 433, 218,
	390, 0, 0, 468, 199, 431, 406, 318, 287, 288,
	198, 0, 371, 241, 262, 231, 338, 428, 429, 230,
	469, 208, 449, 201, 1051, 448, 331, 424, 432, 319,
	310, 200, 430, 317, 309, 293, 252, 273, 365, 303,
	366, 274, 327, 326, 328, 194, 441, 0, 195, 0,
	403, 442, 470, 214, 215, 216, 754, 251, 255, 261,
	263, 269, 270, 277, 296, 342, 364, 362, 368, 840,
	419, 436, 445, 452, 458, 459, 461, 462, 463, 464,
	465, 330, 276, 399, 292, 301, 832, 870, 348, 380,
	219, 439, 400, 749, 753, 747, 748, 803, 804, 750,
	861, 862, 863, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 836, 743, 0, 751, 752, 0, 842, 851,
	852, 489, 807, 187, 202, 297, 866, 369, 259, 467,
	447, 443, 729, 746, 235, 758, 0, 0, 772, 780,
	781, 793, 795, 796, 797, 798, 321, 814, 815, 817,
	825, 827, 831, 833, 838, 848, 869, 189, 190, 203,
	212, 222, 234, 249, 257, 267, 272, 275, 280, 281,
	284, 289, 307, 312, 313, 314, 315, 332, 333, 334,
	337, 340, 341, 344, 346, 347, 350, 357, 358, 359,
	360, 361, 363, 370, 374, 382, 383, 384, 385, 386,
	388, 389, 393, 394, 395, 396, 404, 408, 426, 427,
	438, 451, 456, 268, 434, 457, 0, 306, 806, 812,
	308, 253, 271, 282, 820, 446, 405, 207, 376, 260,
	196, 225, 210, 232, 247, 250, 286, 316, 323, 352,
	356, 265, 244, 223, 373, 220, 391, 411, 412, 413,
	415, 320, 239, 355, 802, 830, 304, 417, 418, 278,
	855, 841, 416, 0, 788, 858, 757, 776, 868, 779,
	782, 822, 735, 801, 339, 773, 0, 761, 731, 768,
	732, 759, 790, 243, 756, 843, 805, 857, 295, 240,
	737, 762, 353, 778, 193, 824, 392, 228, 305, 302,
	423, 254, 246, 242, 227, 279, 311, 351, 410, 345,
	864, 299, 811, 0, 401, 324, 0, 0, 0, 792,
	847, 799, 837, 787, 823, 745, 810, 859, 774, 819,
	860, 285, 226, 192, 336, 402, 258, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 770, 816, 854,
	771, 818, 238, 283, 245, 237, 420, 865, 846, 0,
	0, 209, 856, 794, 0, 821, 0, 871, 730, 813,
	0, 733, 736, 867, 850, 765, 248, 0, 0, 0,
	0, 0, 0, 0, 791, 800, 834, 785, 0, 0,
	0, 0, 0, 2119, 0, 763, 0, 809, 0, 0,
	0, 741, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 789, 0, 0, 0, 744, 0,
	764, 835, 0, 728, 266, 738, 325, 755, 0, 839,
	849, 786, 453, 853, 784, 783, 829, 742, 845, 777,
	294, 740, 291, 188, 205, 0, 775, 335, 375, 381,
	844, 760, 769, 229, 766, 379, 349, 437, 213, 256,
	372, 354, 377, 828, 767, 808, 826, 378, 300, 425,
	367, 435, 454, 455, 236, 329, 444, 414, 450, 466,
	206, 233, 343, 407, 440, 398, 322, 421, 422, 290,
	397, 264, 191, 298, 460, 204, 387, 221, 211, 197,
	409, 433, 218, 390, 0, 0, 468, 199, 431, 406,
	318, 287, 288, 198, 0, 371, 241, 262, 231, 338,
	428, 429, 230, 469, 208, 449, 201, 1051, 448, 331,
	424, 432, 319, 310, 200, 430, 317, 309, 293, 252,
	273, 365, 303, 366, 274, 327, 326, 328, 194, 441,
	0, 195, 0, 403, 442, 470, 214, 215, 216, 754,
	251, 255, 261, 263, 269, 270, 277, 296, 342, 364,
	362, 368, 840, 419, 436, 445, 452, 458, 459, 461,
	462, 463, 464, 465, 330, 276, 399, 292, 301, 832,
	870, 348, 380, 219, 439, 400, 749, 753, 747, 748,
	803, 804, 750, 861, 862, 863, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 836, 743, 0, 751, 752,
	0, 842, 851, 852, 489, 807, 187, 202, 297, 866,
	369, 259, 467, 447, 443, 729, 746, 235, 758, 0,
	0, 772, 780, 781, 793, 795, 796, 797, 798, 321,
	814, 815, 817, 825, 827, 831, 833, 838, 848, 869,
	189, 190, 203, 212, 222, 234, 249, 257, 267, 272,
	275, 280, 281, 284, 289, 307, 312, 313, 314, 315,
	332, 333, 334, 337, 340, 341, 344, 346, 347, 350,
	357, 358, 359, 360, 361, 363, 370, 374, 382, 383,
	384, 385, 386, 388, 389, 393, 394, 395, 396, 404,
	408, 426, 427, 438, 451, 456, 268, 434, 457, 0,
	306, 806, 812, 308, 253, 271, 282, 820, 446, 405,
	207, 376, 260, 196, 225, 210, 232, 247, 250, 286,
	316, 323, 352, 356, 265, 244, 223, 373, 220, 391,
	411, 412, 413, 415, 320, 239, 355, 802, 830, 304,
	417, 418, 278, 855, 841, 416, 0, 788, 858, 757,
	776, 868, 779, 782, 822, 735, 801, 339, 773, 0,
	761, 731, 768, 732, 759, 790, 243, 756, 843, 805,
	857, 295, 240, 737, 762, 353, 778, 193, 824, 392,
	228, 305, 302, 423, 254, 246, 242, 227, 279, 311,
	351, 410, 345, 864, 299, 811, 0, 401, 324, 0,
	0, 0, 792, 847, 799, 837, 787, 823, 745, 810,
	859, 774, 819, 860, 285, 226, 192, 336, 402, 258,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	770, 816, 854, 771, 818, 238, 283, 245, 237, 420,
	865, 846, 0, 0, 209, 856, 794, 0, 821, 0,
	871, 730, 813, 0, 733, 736, 867, 850, 765, 248,
	0, 0, 0, 0, 0, 0, 0, 791, 800, 834,
	785, 0, 0, 0, 0, 0, 2079, 0, 763, 0,
	809, 0, 0, 0, 741, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 789, 0, 0,
	0, 744, 0, 764, 835, 0, 728, 266, 738, 325,
	755, 0, 839, 849, 786, 453, 853, 784, 783, 829,
	742, 845, 777, 294, 740, 291, 188, 205, 0, 775,
	335, 375, 381, 844, 760, 769, 229, 766, 379, 349,
	437, 213, 256, 372, 354, 377, 828, 767, 808, 826,
	378, 300, 425, 367, 435, 454, 455, 236, 329, 444,
	414, 450, 466, 206, 233, 343, 407, 440, 398, 322,
	421, 422, 290, 397, 264, 191, 298, 460, 204, 387,
	221, 211, 197, 409, 433, 218, 390, 0, 0, 468,
	199, 431, 406, 318, 287, 288, 198, 0, 371, 241,
	262, 231, 338, 428, 429, 230, 469, 208, 449, 201,
	1051, 448, 331, 424, 432, 319, 310, 200, 430, 317,
	309, 293, 252, 273, 365, 303, 366, 274, 327, 326,
	328, 194, 441, 0, 195, 0, 403, 442, 470, 214,
	215, 216, 754, 251, 255, 261, 263, 269, 270, 277,
	296, 342, 364, 362, 368, 840, 419, 436, 445, 452,
	458, 459, 461, 462, 463, 464, 465, 330, 276, 399,
	292, 301, 832, 870, 348, 380, 219, 439, 400, 749,
	753, 747, 748, 803, 804, 750, 861, 862, 863, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 836, 743,
	0, 751, 752, 0, 842, 851, 852, 489, 807, 187,
	202, 297, 866, 369, 259, 467, 447, 443, 729, 746,
	235, 758, 0, 0, 772, 780, 781, 793, 795, 796,
	797, 798, 321, 814, 815, 817, 825, 827, 831, 833,
	838, 848, 869, 189, 190, 203, 212, 222, 234, 249,
	257, 267, 272, 275, 280, 281, 284, 289, 307, 312,
	313, 314, 315, 332, 333, 334, 337, 340, 341, 344,
	346, 347, 350, 357, 358, 359, 360, 361, 363, 370,
	374, 382, 383, 384, 385, 386, 388, 389, 393, 394,
	395, 396, 404, 408, 426, 427, 438, 451, 456, 268,
	434, 457, 0, 306, 806, 812, 308, 253, 271, 282,
	820, 446, 405, 207, 376, 260, 196, 225, 210, 232,
	247, 250, 286, 316, 323, 352, 356, 265, 244, 223,
	373, 220, 391, 411, 412, 413, 415, 320, 239, 355,
	802, 830, 304, 417, 418, 278, 855, 841, 416, 0,
	788, 858, 757, 776, 868, 779, 782, 822, 735, 801,
	339, 773, 0, 761, 731, 768, 732, 759, 790, 243,
	756, 843, 805, 857, 295, 240, 737, 762, 353, 778,
	193, 824, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 864, 299, 811, 0,
	401, 324, 0, 0, 0, 792, 847, 799, 837, 787,
	823, 745, 810, 859, 774, 819, 860, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 770, 816, 854, 771, 818, 238, 283,
	245, 237, 420, 865, 846, 0, 0, 209, 856, 794,
	0, 821, 0, 871, 730, 813, 0, 733, 736, 867,
	850, 765, 248, 0, 0, 0, 0, 0, 0, 0,
	791, 800, 834, 785, 0, 0, 0, 0, 0, 1629,
	0, 763, 0, 809, 0, 0, 0, 741, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	789, 0, 0, 0, 744, 0, 764, 835, 0, 728,
	266, 738, 325, 755, 0, 839, 849, 786, 453, 853,
	784, 783, 829, 742, 845, 777, 294, 740, 291, 188,
	205, 0, 775, 335, 375, 381, 844, 760, 769, 229,
	766, 379, 349, 437, 213, 256, 372, 354, 377, 828,
	767, 808, 826, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 1051, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 754, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 840, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 832, 870, 348, 380, 219,
	439, 400, 749, 753, 747, 748, 803, 804, 750, 861,
	862, 863, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 836, 743, 0, 751, 752, 0, 842, 851, 852,
	489, 807, 187, 202, 297, 866, 369, 259, 467, 447,
	443, 729, 746, 235, 758, 0, 0, 772, 780, 781,
	793, 795, 796, 797, 798, 321, 814, 815, 817, 825,
	827, 831, 833, 838, 848, 869, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 806, 812, 308,
	253, 271, 282, 820, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 802, 830, 304, 417, 418, 278, 855,
	841, 416, 0, 788, 858, 757, 776, 868, 779, 782,
	822, 735, 801, 339, 773, 0, 761, 731, 768, 732,
	759, 790, 243, 756, 843, 805, 857, 295, 240, 737,
	762, 353, 778, 193, 824, 392, 228, 305, 302, 423,
	254, 246, 242, 227, 279, 311, 351, 410, 345, 864,
	299, 811, 0, 401, 324, 0, 0, 0, 792, 847,
	799, 837, 787, 823, 745, 810, 859, 774, 819, 860,
	285, 226, 192, 336, 402, 258, 0, 87, 0, 0,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 770, 816, 854, 771,
	818, 238, 283, 245, 237, 420, 865, 846, 0, 0,
	209, 856, 794, 0, 821, 0, 871, 730, 813, 0,
	733, 736, 867, 850, 765, 248, 0, 0, 0, 0,
	0, 0, 0, 791, 800, 834, 785, 0, 0, 0,
	0, 0, 0, 0, 763, 0, 809, 0, 0, 0,
	741, 734, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 789, 0, 0, 0, 744, 0, 764,
	835, 0, 728, 266, 738, 325, 755, 0, 839, 849,
	786, 453, 853, 784, 783, 829, 742, 845, 777, 294,
	740, 291, 188, 205, 0, 775, 335, 375, 381, 844,
	760, 769, 229, 766, 379, 349, 437, 213, 256, 372,
	354, 377, 828, 767, 808, 826, 378, 300, 425, 367,
	435, 454, 455, 236, 329, 444, 414, 450, 466, 206,
	233, 343, 407, 440, 398, 322, 421, 422, 290, 397,
	264, 191, 298, 460, 204, 387, 221, 211, 197, 409,
	433, 218, 390, 0, 0, 468, 199, 431, 406, 318,
	287, 288, 198, 0, 371, 241, 262, 231, 338, 428,
	429, 230, 469, 208, 449, 201, 1051, 448, 331, 424,
	432, 319, 310, 200, 430, 317, 309, 293, 252, 273,
	365, 303, 366, 274, 327, 326, 328, 194, 441, 0,
	195, 0, 403, 442, 470, 214, 215, 216, 754, 251,
	255, 261, 263, 269, 270, 277, 296, 342, 364, 362,
	368, 840, 419, 436, 445, 452, 458, 459, 461, 462,
	463, 464, 465, 330, 276, 399, 292, 301, 832, 870,
	348, 380, 219, 439, 400, 749, 753, 747, 748, 803,
	804, 750, 861, 862, 863, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 836, 743, 0, 751, 752, 0,
	842, 851, 852, 489, 807, 187, 202, 297, 866, 369,
	259, 467, 447, 443, 729, 746, 235, 758, 0, 0,
	772, 780, 781, 793, 795, 796, 797, 798, 321, 814,
	815, 817, 825, 827, 831, 833, 838, 848, 869, 189,
	190, 203, 212, 222, 234, 249, 257, 267, 272, 275,
	280, 281, 284, 289, 307, 312, 313, 314, 315, 332,
	333, 334, 337, 340, 341, 344, 346, 347, 350, 357,
	358, 359, 360, 361, 363, 370, 374, 382, 383, 384,
	385, 386, 388, 389, 393, 394, 395, 396, 404, 408,
	426, 427, 438, 451, 456, 268, 434, 457, 0, 306,
	806, 812, 308, 253, 271, 282, 820, 446, 405, 207,
	376, 260, 196, 225, 210, 232, 247, 250, 286, 316,
	323, 352, 356, 265, 244, 223, 373, 220, 391, 411,
	412, 413, 415, 320, 239, 355, 802, 830, 304, 417,
	418, 278, 855, 841, 416, 0, 788, 858, 757, 776,
	868, 779, 782, 822, 735, 801, 339, 773, 0, 761,
	731, 768, 732, 759, 790, 243, 756, 843, 805, 857,
	295, 240, 737, 762, 353, 778, 193, 824, 392, 228,
	305, 302, 423, 254, 246, 242, 227, 279, 311, 351,
	410, 345, 864, 299, 811, 0, 401, 324, 0, 0,
	0, 792, 847, 799, 837, 787, 823, 745, 810, 859,
	774, 819, 860, 285, 226, 192, 336, 402, 258, 0,
	0, 0, 0, 184, 185, 186, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 217, 0, 224, 770,
	816, 854, 771, 818, 238, 283, 245, 237, 420, 865,
	846, 0, 0, 209, 856, 794, 0, 821, 0, 871,
	730, 813, 0, 733, 736, 867, 850, 765, 248, 0,
	0, 0, 0, 0, 0, 0, 791, 800, 834, 785,
	0, 0, 0, 0, 0, 0, 0, 763, 0, 809,
	0, 0, 0, 741, 734, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	744, 0, 764, 835, 0, 728, 266, 738, 325, 755,
	0, 839, 849, 786, 453, 853, 784, 783, 829, 742,
	845, 777, 294, 740, 291, 188, 205, 0, 775, 335,
	375, 381, 844, 760, 769, 229, 766, 379, 349, 437,
	213, 256, 372, 354, 377, 828, 767, 808, 826, 378,
	300, 425, 367, 435, 454, 455, 236, 329, 444, 414,
	450, 466, 206, 233, 343, 407, 440, 398, 322, 421,
	422, 290, 397, 264, 191, 298, 460, 204, 387, 221,
	211, 197, 409, 433, 218, 390, 0, 0, 468, 199,
	431, 406, 318, 287, 288, 198, 0, 371, 241, 262,
	231, 338, 428, 429, 230, 469, 208, 449, 201, 1051,
	448, 331, 424, 432, 319, 310, 200, 430, 317, 309,
	293, 252, 273, 365, 303, 366, 274, 327, 326, 328,
	194, 441, 0, 195, 0, 403, 442, 470, 214, 215,
	216, 754, 251, 255, 261, 263, 269, 270, 277, 296,
	342, 364, 362, 368, 840, 419, 436, 445, 452, 458,
	459, 461, 462, 463, 464, 465, 330, 276, 399, 292,
	301, 832, 870, 348, 380, 219, 439, 400, 749, 753,
	747, 748, 803, 804, 750, 861, 862, 863, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 836, 743, 0,
	751, 752, 0, 842, 851, 852, 489, 807, 187, 202,
	297, 866, 369, 259, 467, 447, 443, 729, 746, 235,
	758, 0, 0, 772, 780, 781, 793, 795, 796, 797,
	798, 321, 814, 815, 817, 825, 827, 831, 833, 838,
	848, 869, 189, 190, 203, 212, 222, 234, 249, 257,
	267, 272, 275, 280, 281, 284, 289, 307, 312, 313,
	314, 315, 332, 333, 334, 337, 340, 341, 344, 346,
	347, 350, 357, 358, 359, 360, 361, 363, 370, 374,
	382, 383, 384, 385, 386, 388, 389, 393, 394, 395,
	396, 404, 408, 426, 427, 438, 451, 456, 268, 434,
	457, 0, 306, 806, 812, 308, 253, 271, 282, 820,
	446, 405, 207, 376, 260, 196, 225, 210, 232, 247,
	250, 286, 316, 323, 352, 356, 265, 244, 223, 373,
	220, 391, 411, 412, 413, 415, 320, 239, 355, 802,
	830, 304, 417, 418, 278, 855, 841, 416, 0, 788,
	858, 757, 776, 868, 779, 782, 822, 735, 801, 339,
	773, 0, 761, 731, 768, 732, 759, 790, 243, 756,
	843, 805, 857, 295, 240, 737, 762, 353, 778, 193,
	824, 392, 228, 305, 302, 423, 254, 246, 242, 227,
	279, 311, 351, 410, 345, 864, 299, 811, 0, 401,
	324, 0, 0, 0, 792, 847, 799, 837, 787, 823,
	745, 810, 859, 774, 819, 860, 285, 226, 192, 336,
	402, 258, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 770, 816, 854, 771, 818, 238, 283, 245,
	237, 420, 865, 846, 0, 0, 872, 856, 794, 0,
	821, 0, 871, 730, 813, 0, 733, 736, 867, 850,
	765, 248, 0, 0, 0, 0, 0, 0, 0, 791,
	800, 834, 785, 0, 0, 0, 0, 0, 0, 0,
	763, 0, 809, 0, 0, 0, 741, 734, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 789,
	0, 0, 0, 744, 0, 764, 835, 0, 728, 266,
	738, 325, 755, 0, 839, 849, 786, 453, 853, 784,
	783, 829, 742, 845, 777, 294, 740, 291, 188, 205,
	0, 775, 335, 375, 381, 844, 760, 769, 229, 766,
	379, 349, 437, 213, 256, 372, 354, 377, 828, 767,
	808, 826, 378, 300, 425, 367, 435, 454, 455, 236,
	329, 444, 414, 450, 466, 206, 233, 343, 407, 440,
	398, 322, 421, 422, 290, 397, 264, 191, 298, 460,
	204, 387, 221, 211, 197, 409, 433, 218, 390, 0,
	0, 468, 199, 431, 406, 318, 287, 288, 198, 0,
	371, 241, 262, 231, 338, 428, 429, 230, 469, 208,
	449, 201, 739, 448, 331, 424, 432, 319, 310, 200,
	430, 317, 309, 293, 252, 273, 365, 303, 366, 274,
	327, 326, 328, 194, 441, 0, 195, 0, 403, 442,
	470, 214, 215, 216, 754, 251, 255, 261, 263, 269,
	270, 277, 296, 342, 364, 362, 368, 840, 419, 436,
	445, 452, 458, 459, 461, 462, 463, 464, 465, 727,
	721, 720, 292, 301, 832, 870, 348, 380, 219, 439,
	400, 749, 753, 747, 748, 803, 804, 750, 861, 862,
	863, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	836, 743, 0, 751, 752, 0, 842, 851, 852, 489,
	807, 187, 202, 297, 866, 369, 259, 467, 447, 443,
	729, 746, 235, 758, 0, 0, 772, 780, 781, 793,
	795, 796, 797, 798, 321, 814, 815, 817, 825, 827,
	831, 833, 838, 848, 869, 189, 190, 203, 212, 222,
	234, 249, 257, 267, 272, 275, 280, 281, 284, 289,
	307, 312, 313, 314, 315, 332, 333, 334, 337, 340,
	341, 344, 346, 347, 350, 357, 358, 359, 360, 361,
	363, 370, 374, 382, 383, 384, 385, 386, 388, 389,
	393, 394, 395, 396, 404, 408, 426, 427, 438, 451,
	456, 268, 434, 457, 0, 306, 806, 812, 308, 253,
	271, 282, 820, 446, 405, 207, 376, 260, 196, 225,
	210, 232, 247, 250, 286, 316, 323, 352, 356, 265,
	244, 223, 373, 220, 391, 411, 412, 413, 415, 320,
	239, 355, 802, 830, 304, 417, 418, 278, 855, 841,
	416, 0, 788, 858, 757, 776, 868, 779, 782, 822,
	735, 801, 339, 773, 0, 761, 731, 768, 732, 759,
	790, 243, 756, 843, 805, 857, 295, 240, 737, 762,
	353, 778, 193, 824, 392, 228, 305, 302, 423, 254,
	246, 242, 227, 279, 311, 351, 410, 345, 864, 299,
	811, 0, 401, 324, 0, 0, 0, 792, 847, 799,
	837, 787, 823, 745, 810, 859, 774, 819, 860, 285,
	226, 192, 336, 402, 258, 0, 0, 0, 0, 184,
	185, 186, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 770, 816, 854, 771, 818,
	238, 283, 245, 237, 420, 865, 846, 0, 0, 872,
	856, 794, 0, 821, 0, 871, 730, 813, 0, 733,
	736, 867, 850, 765, 248, 0, 0, 0, 0, 0,
	0, 0, 791, 800, 834, 785, 0, 0, 0, 0,
	0, 0, 0, 763, 0, 809, 0, 0, 0, 741,
	734, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 789, 0, 0, 0, 744, 0, 764, 835,
	0, 728, 266, 738, 325, 755, 0, 839, 849, 786,
	453, 853, 784, 783, 829, 742, 845, 777, 294, 740,
	291, 188, 205, 0, 775, 335, 375, 381, 844, 760,
	769, 229, 766, 379, 349, 437, 213, 256, 372, 354,
	377, 828, 767, 808, 826, 378, 300, 425, 367, 435,
	454, 455, 236, 329, 444, 414, 450, 466, 206, 233,
	343, 407, 440, 398, 322, 421, 422, 290, 397, 264,
	191, 298, 460, 204, 387, 221, 211, 197, 409, 1229,
	218, 390, 0, 0, 468, 199, 431, 406, 318, 287,
	288, 198, 0, 371, 241, 262, 231, 338, 428, 429,
	230, 469, 208, 449, 201, 739, 448, 331, 424, 432,
	319, 310, 200, 430, 317, 309, 293, 252, 273, 365,
	303, 366, 274, 327, 326, 328, 194, 441, 0, 195,
	0, 403, 442, 470, 214, 215, 216, 754, 251, 255,
	261, 263, 269, 270, 277, 296, 342, 364, 362, 368,
	840, 419, 436, 445, 452, 458, 459, 461, 462, 463,
	464, 465, 727, 721, 720, 292, 301, 832, 870, 348,
	380, 219, 439, 400, 749, 753, 747, 748, 803, 804,
	750, 861, 862, 863, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 836, 743, 0, 751, 752, 0, 842,
	851, 852, 489, 807, 187, 202, 297, 866, 369, 259,
	467, 447, 443, 729, 746, 235, 758, 0, 0, 772,
	780, 781, 793, 795, 796, 797, 798, 321, 814, 815,
	817, 825, 827, 831, 833, 838, 848, 869, 189, 190,
	203, 212, 222, 234, 249, 257, 267, 272, 275, 280,
	281, 284, 289, 307, 312, 313, 314, 315, 332, 333,
	334, 337, 340, 341, 344, 346, 347, 350, 357, 358,
	359, 360, 361, 363, 370, 374, 382, 383, 384, 385,
	386, 388, 389, 393, 394, 395, 396, 404, 408, 426,
	427, 438, 451, 456, 268, 434, 457, 0, 306, 806,
	812, 308, 253, 271, 282, 820, 446, 405, 207, 376,
	260, 196, 225, 210, 232, 247, 250, 286, 316, 323,
	352, 356, 265, 244, 223, 373, 220, 391, 411, 412,
	413, 415, 320, 239, 355, 802, 830, 304, 417, 418,
	278, 855, 841, 416, 0, 788, 858, 757, 776, 868,
	779, 782, 822, 735, 801, 339, 773, 0, 761, 731,
	768, 732, 759, 790, 243, 756, 843, 805, 857, 295,
	240, 737, 762, 353, 778, 193, 824, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 864, 299, 811, 0, 401, 324, 0, 0, 0,
	792, 847, 799, 837, 787, 823, 745, 810, 859, 774,
	819, 860, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 770, 816,
	854, 771, 818, 238, 283, 245, 237, 420, 865, 846,
	0, 0, 872, 856, 794, 0, 821, 0, 871, 730,
	813, 0, 733, 736, 867, 850, 765, 248, 0, 0,
	0, 0, 0, 0, 0, 791, 800, 834, 785, 0,
	0, 0, 0, 0, 0, 0, 763, 0, 809, 0,
	0, 0, 741, 734, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 789, 0, 0, 0, 744,
	0, 764, 835, 0, 728, 266, 738, 325, 755, 0,
	839, 849, 786, 453, 853, 784, 783, 829, 742, 845,
	777, 294, 740, 291, 188, 205, 0, 775, 335, 375,
	381, 844, 760, 769, 229, 766, 379, 349, 437, 213,
	256, 372, 354, 377, 828, 767, 808, 826, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 718, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 739, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	754, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 840, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 727, 721, 720, 292, 301,
	832, 870, 348, 380, 219, 439, 400, 749, 753, 747,
	748, 803, 804, 750, 861, 862, 863, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 836, 743, 0, 751,
	752, 0, 842, 851, 852, 489, 807, 187, 202, 297,
	866, 369, 259, 467, 447, 443, 729, 746, 235, 758,
	0, 0, 772, 780, 781, 793, 795, 796, 797, 798,
	321, 814, 815, 817, 825, 827, 831, 833, 838, 848,
	869, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 806, 812, 308, 253, 271, 282, 820, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 802, 830,
	304, 417, 418, 278, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 339, 0, 0, 1573,
	0, 570, 0, 0, 0, 243, 575, 0, 0, 0,
	295, 240, 0, 1574, 353, 0, 193, 0, 392, 228,
	305, 302, 423, 254, 246, 242, 227, 279, 311, 351,
	410, 345, 582, 299, 0, 0, 401, 324, 0, 0,
	0, 0, 0, 577, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 285, 226, 192, 336, 402, 258, 0,
	87, 0, 0, 184, 185, 186, 613, 620, 621, 622,
	623, 624, 614, 616, 0, 0, 217, 615, 224, 591,
	618, 625, 626, 0, 238, 283, 245, 237, 420, 0,
	0, 0, 0, 209, 0, 0, 0, 0, 0, 0,
	0, 553, 567, 0, 581, 0, 0, 0, 248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 564, 565, 707, 0, 0, 0, 598,
	0, 566, 0, 0, 574, 627, 628, 629, 630, 631,
	632, 633, 634, 635, 636, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 650, 651,
	652, 653, 654, 655, 656, 657, 658, 659, 660, 661,
	662, 663, 664, 665, 666, 667, 576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 325, 0,
	0, 597, 0, 0, 453, 0, 0, 595, 0, 0,
	0, 0, 294, 0, 291, 188, 205, 0, 0, 335,
	375, 381, 0, 0, 0, 229, 0, 379, 349, 437,
	213, 256, 372, 354, 377, 0, 0, 0, 0, 378,
	300, 425, 367, 435, 454, 455, 236, 329, 444, 414,
	450, 466, 206, 233, 343, 407, 440, 398, 322, 421,
	422, 290, 397, 264, 191, 298, 460, 204, 387, 221,
	211, 197, 409, 433, 218, 390, 0, 0, 468, 199,
	431, 406, 318, 287, 288, 198, 0, 371, 241, 262,
	231, 338, 428, 429, 230, 469, 208, 449, 201, 0,
	448, 331, 424, 432, 319, 310, 200, 430, 317, 309,
	293, 252, 273, 365, 303, 366, 274, 327, 326, 328,
	194, 441, 0, 195, 0, 403, 442, 470, 214, 215,
	216, 0, 251, 255, 261, 263, 269, 270, 277, 296,
	342, 364, 362, 368, 0, 419, 436, 445, 452, 458,
	459, 461, 462, 463, 464, 465, 330, 276, 399, 292,
	301, 0, 0, 348, 380, 219, 439, 400, 604, 596,
	586, 588, 605, 606, 583, 584, 587, 607, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 488, 0, 599, 573, 572,
	0, 579, 580, 0, 589, 590, 592, 571, 187, 202,
	297, 0, 369, 259, 467, 447, 443, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 190, 203, 212, 222, 234, 249, 257,
	267, 272, 275, 280, 281, 284, 289, 307, 312, 313,
	314, 315, 332, 333, 334, 337, 340, 341, 344, 346,
	347, 350, 357, 358, 359, 360, 361, 363, 370, 374,
	382, 383, 384, 385, 386, 388, 389, 393, 394, 395,
	396, 404, 408, 426, 427, 438, 451, 456, 268, 434,
	457, 0, 306, 0, 0, 308, 253, 271, 282, 0,
	446, 405, 207, 376, 260, 196, 225, 210, 232, 247,
	250, 286, 316, 323, 352, 356, 265, 244, 223, 373,
	220, 391, 411, 412, 413, 415, 320, 239, 355, 416,
	0, 304, 417, 418, 278, 0, 0, 0, 0, 0,
	0, 339, 0, 0, 0, 0, 570, 0, 0, 0,
	243, 575, 0, 0, 0, 295, 240, 0, 0, 353,
	0, 193, 0, 392, 228, 305, 302, 423, 254, 246,
	242, 227, 279, 311, 351, 410, 345, 582, 299, 0,
	0, 401, 324, 0, 0, 0, 0, 0, 577, 578,
	0, 0, 0, 0, 0, 0, 1653, 0, 285, 226,
	192, 336, 402, 258, 0, 87, 0, 0, 184, 185,
	186, 613, 620, 621, 622, 623, 624, 614, 616, 0,
	0, 217, 615, 224, 591, 618, 625, 626, 1654, 238,
	283, 245, 237, 420, 0, 0, 0, 0, 209, 0,
	0, 0, 0, 0, 0, 0, 553, 567, 0, 581,
	0, 0, 0, 248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 564, 565,
	0, 0, 0, 0, 598, 0, 566, 0, 0, 574,
	627, 628, 629, 630, 631, 632, 633, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 576, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 325, 0, 0, 597, 0, 0, 453,
	0, 0, 595, 0, 0, 0, 0, 294, 0, 291,
	188, 205, 0, 0, 335, 375, 381, 0, 0, 0,
	229, 0, 379, 349, 437, 213, 256, 372, 354, 377,
	0, 0, 0, 0, 378, 300, 425, 367, 435, 454,
	455, 236, 329, 444, 414, 450, 466, 206, 233, 343,
	407, 440, 398, 322, 421, 422, 290, 397, 264, 191,
	298, 460, 204, 387, 221, 211, 197, 409, 433, 218,
	390, 0, 0, 468, 199, 431, 406, 318, 287, 288,
	198, 0, 371, 241, 262, 231, 338, 428, 429, 230,
	469, 208, 449, 201, 0, 448, 331, 424, 432, 319,
	310, 200, 430, 317, 309, 293, 252, 273, 365, 303,
	366, 274, 327, 326, 328, 194, 441, 0, 195, 0,
	403, 442, 470, 214, 215, 216, 0, 251, 255, 261,
	263, 269, 270, 277, 296, 342, 364, 362, 368, 0,
	419, 436, 445, 452, 458, 459, 461, 462, 463, 464,
	465, 330, 276, 399, 292, 301, 0, 0, 348, 380,
	219, 439, 400, 604, 596, 586, 588, 605, 606, 583,
	584, 587, 607, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	488, 0, 599, 573, 572, 0, 579, 580, 0, 589,
	590, 592, 571, 187, 202, 297, 0, 369, 259, 467,
	447, 443, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 190, 203,
	212, 222, 234, 249, 257, 267, 272, 275, 280, 281,
	284, 289, 307, 312, 313, 314, 315, 332, 333, 334,
	337, 340, 341, 344, 346, 347, 350, 357, 358, 359,
	360, 361, 363, 370, 374, 382, 383, 384, 385, 386,
	388, 389, 393, 394, 395, 396, 404, 408, 426, 427,
	438, 451, 456, 268, 434, 457, 0, 306, 0, 0,
	308, 253, 271, 282, 0, 446, 405, 207, 376, 260,
	196, 225, 210, 232, 247, 250, 286, 316, 323, 352,
	356, 265, 244, 223, 373, 220, 391, 411, 412, 413,
	415, 320, 239, 355, 78, 416, 304, 417, 418, 278,
	0, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 570, 0, 0, 0, 243, 575, 0, 0,
	0, 295, 240, 0, 0, 353, 0, 193, 0, 392,
	228, 305, 302, 423, 254, 246, 242, 227, 279, 311,
	351, 410, 345, 582, 299, 0, 0, 401, 324, 0,
	0, 0, 0, 0, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 226, 192, 336, 402, 258,
	0, 87, 0, 0, 184, 185, 186, 613, 620, 621,
	622, 623, 624, 614, 616, 0, 0, 217, 615, 224,
	591, 618, 625, 626, 0, 238, 283, 245, 237, 420,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 553, 567, 0, 581, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	598, 0, 566, 0, 0, 574, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 325,
	0, 0, 597, 0, 0, 453, 0, 0, 595, 0,
	0, 0, 0, 294, 0, 291, 188, 205, 0, 0,
	335, 375, 381, 0, 0, 0, 229, 0, 379, 349,
	437, 213, 256, 372, 354, 377, 0, 0, 0, 0,
	378, 300, 425, 367, 435, 454, 455, 236, 329, 444,
	414, 450, 466, 206, 233, 343, 407, 440, 398, 322,
	421, 422, 290, 397, 264, 191, 298, 460, 204, 387,
	221, 211, 197, 409, 433, 218, 390, 0, 0, 468,
	199, 431, 406, 318, 287, 288, 198, 0, 371, 241,
	262, 231, 338, 428, 429, 230, 469, 208, 449, 201,
	0, 448, 331, 424, 432, 319, 310, 200, 430, 317,
	309, 293, 252, 273, 365, 303, 366, 274, 327, 326,
	328, 194, 441, 0, 195, 0, 403, 442, 470, 214,
	215, 216, 0, 251, 255, 261, 263, 269, 270, 277,
	296, 342, 364, 362, 368, 0, 419, 436, 445, 452,
	458, 459, 461, 462, 463, 464, 465, 330, 276, 399,
	292, 301, 0, 0, 348, 380, 219, 439, 400, 604,
	596, 586, 588, 605, 606, 583, 584, 587, 607, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 599, 573,
	572, 0, 579, 580, 0, 589, 590, 592, 571, 187,
	202, 297, 86, 369, 259, 467, 447, 443, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 234, 249,
	257, 267, 272, 275, 280, 281, 284, 289, 307, 312,
	313, 314, 315, 332, 333, 334, 337, 340, 341, 344,
	346, 347, 350, 357, 358, 359, 360, 361, 363, 370,
	374, 382, 383, 384, 385, 386, 388, 389, 393, 394,
	395, 396, 404, 408, 426, 427, 438, 451, 456, 268,
	434, 457, 0, 306, 0, 0, 308, 253, 271, 282,
	0, 446, 405, 207, 376, 260, 196, 225, 210, 232,
	247, 250, 286, 316, 323, 352, 356, 265, 244, 223,
	373, 220, 391, 411, 412, 413, 415, 320, 239, 355,
	416, 0, 304, 417, 418, 278, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 570, 0, 0,
	0, 243, 575, 0, 0, 0, 295, 240, 0, 0,
	353, 0, 193, 0, 392, 228, 305, 302, 423, 254,
	246, 242, 227, 279, 311, 351, 410, 345, 582, 299,
	0, 0, 401, 324, 0, 0, 0, 0, 0, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	226, 192, 336, 402, 258, 0, 87, 0, 0, 184,
	185, 186, 613, 620, 621, 622, 623, 624, 614, 616,
	0, 0, 217, 615, 224, 591, 618, 625, 626, 0,
	238, 283, 245, 237, 420, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 553, 567, 0,
	581, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 598, 0, 566, 0, 0,
	574, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 325, 0, 0, 597, 0, 0,
	453, 0, 0, 595, 0, 0, 0, 0, 294, 0,
	291, 188, 205, 0, 0, 335, 375, 381, 0, 0,
	0, 229, 0, 379, 349, 437, 213, 256, 372, 354,
	377, 0, 0, 2462, 0, 378, 300, 425, 367, 435,
	454, 455, 236, 329, 444, 414, 450, 466, 206, 233,
	343, 407, 440, 398, 322, 421, 422, 290, 397, 264,
	191, 298, 460, 204, 387, 221, 211, 197, 409, 433,
	218, 390, 0, 0, 468, 199, 431, 406, 318, 287,
	288, 198, 0, 371, 241, 262, 231, 338, 428, 429,
	230, 469, 208, 449, 201, 0, 448, 331, 424, 432,
	319, 310, 200, 430, 317, 309, 293, 252, 273, 365,
	303, 366, 274, 327, 326, 328, 194, 441, 0, 195,
	0, 403, 442, 470, 214, 215, 216, 0, 251, 255,
	261, 263, 269, 270, 277, 296, 342, 364, 362, 368,
	0, 419, 436, 445, 452, 458, 459, 461, 462, 463,
	464, 465, 330, 276, 399, 292, 301, 0, 0, 348,
	380, 219, 439, 400, 604, 596, 586, 588, 605, 606,
	583, 584, 587, 607, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 599, 573, 572, 0, 579, 580, 0,
	589, 590, 592, 571, 187, 202, 297, 0, 369, 259,
	467, 447, 443, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 234, 249, 257, 267, 272, 275, 280,
	281, 284, 289, 307, 312, 313, 314, 315, 332, 333,
	334, 337, 340, 341, 344, 346, 347, 350, 357, 358,
	359, 360, 361, 363, 370, 374, 382, 383, 384, 385,
	386, 388, 389, 393, 394, 395, 396, 404, 408, 426,
	427, 438, 451, 456, 268, 434, 457, 0, 306, 0,
	0, 308, 253, 271, 282, 0, 446, 405, 207, 376,
	260, 196, 225, 210, 232, 247, 250, 286, 316, 323,
	352, 356, 265, 244, 223, 373, 220, 391, 411, 412,
	413, 415, 320, 239, 355, 416, 0, 304, 417, 418,
	278, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 570, 0, 0, 0, 243, 575, 0, 0,
	0, 295, 240, 0, 0, 353, 0, 193, 0, 392,
	228, 305, 302, 423, 254, 246, 242, 227, 279, 311,
	351, 410, 345, 582, 299, 0, 0, 401, 324, 0,
	0, 0, 0, 0, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 226, 192, 336, 402, 258,
	0, 87, 0, 1197, 184, 185, 186, 613, 620, 621,
	622, 623, 624, 614, 616, 0, 0, 217, 615, 224,
	591, 618, 625, 626, 0, 238, 283, 245, 237, 420,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 553, 567, 0, 581, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	598, 0, 566, 0, 0, 574, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 325,
	0, 0, 597, 0, 0, 453, 0, 0, 595, 0,
	0, 0, 0, 294, 0, 291, 188, 205, 0, 0,
	335, 375, 381, 0, 0, 0, 229, 0, 379, 349,
	437, 213, 256, 372, 354, 377, 0, 0, 0, 0,
	378, 300, 425, 367, 435, 454, 455, 236, 329, 444,
	414, 450, 466, 206, 233, 343, 407, 440, 398, 322,
	421, 422, 290, 397, 264, 191, 298, 460, 204, 387,
	221, 211, 197, 409, 433, 218, 390, 0, 0, 468,
	199, 431, 406, 318, 287, 288, 198, 0, 371, 241,
	262, 231, 338, 428, 429, 230, 469, 208, 449, 201,
	0, 448, 331, 424, 432, 319, 310, 200, 430, 317,
	309, 293, 252, 273, 365, 303, 366, 274, 327, 326,
	328, 194, 441, 0, 195, 0, 403, 442, 470, 214,
	215, 216, 0, 251, 255, 261, 263, 269, 270, 277,
	296, 342, 364, 362, 368, 0, 419, 436, 445, 452,
	458, 459, 461, 462, 463, 464, 465, 330, 276, 399,
	292, 301, 0, 0, 348, 380, 219, 439, 400, 604,
	596, 586, 588, 605, 606, 583, 584, 587, 607, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 599, 573,
	572, 0, 579, 580, 0, 589, 590, 592, 571, 187,
	202, 297, 0, 369, 259, 467, 447, 443, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 234, 249,
	257, 267, 272, 275, 280, 281, 284, 289, 307, 312,
	313, 314, 315, 332, 333, 334, 337, 340, 341, 344,
	346, 347, 350, 357, 358, 359, 360, 361, 363, 370,
	374, 382, 383, 384, 385, 386, 388, 389, 393, 394,
	395, 396, 404, 408, 426, 427, 438, 451, 456, 268,
	434, 457, 0, 306, 0, 0, 308, 253, 271, 282,
	0, 446, 405, 207, 376, 260, 196, 225, 210, 232,
	247, 250, 286, 316, 323, 352, 356, 265, 244, 223,
	373, 220, 391, 411, 412, 413, 415, 320, 239, 355,
	416, 0, 304, 417, 418, 278, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 570, 0, 0,
	0, 243, 575, 0, 0, 0, 295, 240, 0, 0,
	353, 0, 193, 0, 392, 228, 305, 302, 423, 254,
	246, 242, 227, 279, 311, 351, 410, 345, 582, 299,
	0, 0, 401, 324, 0, 0, 0, 0, 0, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	226, 192, 336, 402, 258, 0, 87, 0, 0, 184,
	185, 186, 613, 620, 621, 622, 623, 624, 614, 616,
	0, 0, 217, 615, 224, 591, 618, 625, 626, 0,
	238, 283, 245, 237, 420, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 553, 567, 0,
	581, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 707, 0, 0, 0, 598, 0, 566, 0, 0,
	574, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 325, 0, 0, 597, 0, 0,
	453, 0, 0, 595, 0, 0, 0, 0, 294, 0,
	291, 188, 205, 0, 0, 335, 375, 381, 0, 0,
	0, 229, 0, 379, 349, 437, 213, 256, 372, 354,
	377, 0, 0, 0, 0, 378, 300, 425, 367, 435,
	454, 455, 236, 329, 444, 414, 450, 466, 206, 233,
	343, 407, 440, 398, 322, 421, 422, 290, 397, 264,
	191, 298, 460, 204, 387, 221, 211, 197, 409, 433,
	218, 390, 0, 0, 468, 199, 431, 406, 318, 287,
	288, 198, 0, 371, 241, 262, 231, 338, 428, 429,
	230, 469, 208, 449, 201, 0, 448, 331, 424, 432,
	319, 310, 200, 430, 317, 309, 293, 252, 273, 365,
	303, 366, 274, 327, 326, 328, 194, 441, 0, 195,
	0, 403, 442, 470, 214, 215, 216, 0, 251, 255,
	261, 263, 269, 270, 277, 296, 342, 364, 362, 368,
	0, 419, 436, 445, 452, 458, 459, 461, 462, 463,
	464, 465, 330, 276, 399, 292, 301, 0, 0, 348,
	380, 219, 439, 400, 604, 596, 586, 588, 605, 606,
	583, 584, 587, 607, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 599, 573, 572, 0, 579, 580, 0,
	589, 590, 592, 571, 187, 202, 297, 0, 369, 259,
	467, 447, 443, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 234, 249, 257, 267, 272, 275, 280,
	281, 284, 289, 307, 312, 313, 314, 315, 332, 333,
	334, 337, 340, 341, 344, 346, 347, 350, 357, 358,
	359, 360, 361, 363, 370, 374, 382, 383, 384, 385,
	386, 388, 389, 393, 394, 395, 396, 404, 408, 426,
	427, 438, 451, 456, 268, 434, 457, 0, 306, 0,
	0, 308, 253, 271, 282, 0, 446, 405, 207, 376,
	260, 196, 225, 210, 232, 247, 250, 286, 316, 323,
	352, 356, 265, 244, 223, 373, 220, 391, 411, 412,
	413, 415, 320, 239, 355, 416, 0, 304, 417, 418,
	278, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 570, 0, 0, 0, 243, 575, 0, 0,
	0, 295, 240, 0, 0, 353, 0, 193, 0, 392,
	228, 305, 302, 423, 254, 246, 242, 227, 279, 311,
	351, 410, 345, 582, 299, 0, 0, 401, 324, 0,
	0, 0, 0, 0, 577, 578, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 226, 192, 336, 402, 258,
	0, 87, 0, 0, 184, 185, 186, 613, 620, 621,
	622, 623, 624, 614, 616, 0, 0, 217, 615, 224,
	591, 618, 625, 626, 0, 238, 283, 245, 237, 420,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 553, 567, 0, 581, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 564, 565, 0, 0, 0, 0,
	598, 0, 566, 0, 0, 574, 627, 628, 629, 630,
	631, 632, 633, 634, 635, 636, 637, 638, 639, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
	661, 662, 663, 664, 665, 666, 667, 576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 325,
	0, 0, 597, 0, 0, 453, 0, 0, 595, 0,
	0, 0, 0, 294, 0, 291, 188, 205, 0, 0,
	335, 375, 381, 0, 0, 0, 229, 0, 379, 349,
	437, 213, 256, 372, 354, 377, 0, 0, 0, 0,
	378, 300, 425, 367, 435, 454, 455, 236, 329, 444,
	414, 450, 466, 206, 233, 343, 407, 440, 398, 322,
	421, 422, 290, 397, 264, 191, 298, 460, 204, 387,
	221, 211, 197, 409, 433, 218, 390, 0, 0, 468,
	199, 431, 406, 318, 287, 288, 198, 0, 371, 241,
	262, 231, 338, 428, 429, 230, 469, 208, 449, 201,
	0, 448, 331, 424, 432, 319, 310, 200, 430, 317,
	309, 293, 252, 273, 365, 303, 366, 274, 327, 326,
	328, 194, 441, 0, 195, 0, 403, 442, 470, 214,
	215, 216, 0, 251, 255, 261, 263, 269, 270, 277,
	296, 342, 364, 362, 368, 0, 419, 436, 445, 452,
	458, 459, 461, 462, 463, 464, 465, 330, 276, 399,
	292, 301, 0, 0, 348, 380, 219, 439, 400, 604,
	596, 586, 588, 605, 606, 583, 584, 587, 607, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 599, 573,
	572, 0, 579, 580, 0, 589, 590, 592, 571, 187,
	202, 297, 0, 369, 259, 467, 447, 443, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 234, 249,
	257, 267, 272, 275, 280, 281, 284, 289, 307, 312,
	313, 314, 315, 332, 333, 334, 337, 340, 341, 344,
	346, 347, 350, 357, 358, 359, 360, 361, 363, 370,
	374, 382, 383, 384, 385, 386, 388, 389, 393, 394,
	395, 396, 404, 408, 426, 427, 438, 451, 456, 268,
	434, 457, 0, 306, 0, 0, 308, 253, 271, 282,
	0, 446, 405, 207, 376, 260, 196, 225, 210, 232,
	247, 250, 286, 316, 323, 352, 356, 265, 244, 223,
	373, 220, 391, 411, 412, 413, 415, 320, 239, 355,
	416, 0, 304, 417, 418, 278, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 0, 570, 0, 0,
	0, 243, 575, 0, 0, 0, 295, 240, 0, 0,
	353, 0, 193, 0, 392, 228, 305, 302, 423, 254,
	246, 242, 227, 279, 311, 351, 410, 345, 582, 299,
	0, 0, 401, 324, 0, 0, 0, 0, 0, 577,
	578, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	226, 192, 336, 402, 258, 0, 87, 0, 0, 184,
	185, 186, 613, 620, 621, 622, 623, 624, 614, 616,
	0, 0, 217, 615, 224, 591, 618, 625, 626, 0,
	238, 283, 245, 237, 420, 0, 0, 0, 0, 209,
	0, 0, 0, 0, 0, 0, 0, 0, 567, 0,
	581, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 564,
	565, 0, 0, 0, 0, 598, 0, 566, 0, 0,
	574, 627, 628, 629, 630, 631, 632, 633, 634, 635,
	636, 637, 638, 639, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 650, 651, 652, 653, 654, 655,
	656, 657, 658, 659, 660, 661, 662, 663, 664, 665,
	666, 667, 576, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 325, 0, 0, 597, 0, 0,
	453, 0, 0, 595, 0, 0, 0, 0, 294, 0,
	291, 188, 205, 0, 0, 335, 375, 381, 0, 0,
	0, 229, 0, 379, 349, 437, 213, 256, 372, 354,
	377, 0, 0, 0, 0, 378, 300, 425, 367, 435,
	454, 455, 236, 329, 444, 414, 450, 466, 206, 233,
	343, 407, 440, 398, 322, 421, 422, 290, 397, 264,
	191, 298, 460, 204, 387, 221, 211, 197, 409, 433,
	218, 390, 0, 0, 468, 199, 431, 406, 318, 287,
	288, 198, 0, 371, 241, 262, 231, 338, 428, 429,
	230, 469, 208, 449, 201, 0, 448, 331, 424, 432,
	319, 310, 200, 430, 317, 309, 293, 252, 273, 365,
	303, 366, 274, 327, 326, 328, 194, 441, 0, 195,
	0, 403, 442, 470, 214, 215, 216, 0, 251, 255,
	261, 263, 269, 270, 277, 296, 342, 364, 362, 368,
	0, 419, 436, 445, 452, 458, 459, 461, 462, 463,
	464, 465, 330, 276, 399, 292, 301, 0, 0, 348,
	380, 219, 439, 400, 604, 596, 586, 588, 605, 606,
	583, 584, 587, 607, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 599, 573, 572, 0, 579, 580, 0,
	589, 590, 592, 571, 187, 202, 297, 0, 369, 259,
	467, 447, 443, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 234, 249, 257, 267, 272, 275, 280,
	281, 284, 289, 307, 312, 313, 314, 315, 332, 333,
	334, 337, 340, 341, 344, 346, 347, 350, 357, 358,
	359, 360, 361, 363, 370, 374, 382, 383, 384, 385,
	386, 388, 389, 393, 394, 395, 396, 404, 408, 426,
	427, 438, 451, 456, 268, 434, 457, 0, 306, 0,
	0, 308, 253, 271, 282, 0, 446, 405, 207, 376,
	260, 196, 225, 210, 232, 247, 250, 286, 316, 323,
	352, 356, 265, 244, 223, 373, 220, 391, 411, 412,
	413, 415, 320, 239, 355, 416, 0, 304, 417, 418,
	278, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 295, 240, 0, 0, 353, 0, 193, 0, 392,
	228, 305, 302, 423, 254, 246, 242, 227, 279, 311,
	351, 410, 345, 0, 299, 0, 0, 401, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 226, 192, 336, 402, 258,
	0, 0, 0, 0, 184, 185, 186, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 224,
	0, 0, 0, 0, 0, 238, 283, 245, 237, 420,
	0, 0, 0, 0, 209, 0, 920, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 325,
	0, 0, 0, 0, 919, 453, 0, 0, 0, 0,
	0, 916, 917, 294, 880, 291, 188, 205, 910, 914,
	335, 375, 381, 0, 0, 0, 229, 0, 379, 349,
	437, 213, 256, 372, 354, 377, 0, 0, 0, 0,
	378, 300, 425, 367, 435, 454, 455, 236, 329, 444,
	414, 450, 466, 206, 233, 343, 407, 440, 398, 322,
	421, 422, 290, 397, 264, 191, 298, 460, 204, 387,
	221, 211, 197, 409, 433, 218, 390, 0, 0, 468,
	199, 431, 406, 318, 287, 288, 198, 0, 371, 241,
	262, 231, 338, 428, 429, 230, 469, 208, 449, 201,
	0, 448, 331, 424, 432, 319, 310, 200, 430, 317,
	309, 293, 252, 273, 365, 303, 366, 274, 327, 326,
	328, 194, 441, 0, 195, 0, 403, 442, 470, 214,
	215, 216, 0, 251, 255, 261, 263, 269, 270, 277,
	296, 342, 364, 362, 368, 0, 419, 436, 445, 452,
	458, 459, 461, 462, 463, 464, 465, 330, 276, 399,
	292, 301, 0, 0, 348, 380, 219, 439, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 0, 187,
	202, 297, 0, 369, 259, 467, 447, 443, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 234, 249,
	257, 267, 272, 275, 280, 281, 284, 289, 307, 312,
	313, 314, 315, 332, 333, 334, 337, 340, 341, 344,
	346, 347, 350, 357, 358, 359, 360, 361, 363, 370,
	374, 382, 383, 384, 385, 386, 388, 389, 393, 394,
	395, 396, 404, 408, 426, 427, 438, 451, 456, 268,
	434, 457, 0, 306, 0, 0, 308, 253, 271, 282,
	0, 446, 405, 207, 376, 260, 196, 225, 210, 232,
	247, 250, 286, 316, 323, 352, 356, 265, 244, 223,
	373, 220, 391, 411, 412, 413, 415, 320, 239, 355,
	416, 0, 304, 417, 418, 278, 0, 0, 0, 0,
	0, 0, 339, 0, 0, 0, 1217, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 295, 240, 0, 0,
	353, 0, 193, 0, 392, 228, 305, 302, 423, 254,
	246, 242, 227, 279, 311, 351, 410, 345, 0, 299,
	0, 0, 401, 324, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 285,
	226, 192, 336, 402, 258, 0, 0, 0, 0, 184,
	185, 186, 0, 1219, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 224, 0, 0, 0, 0, 0,
	238, 283, 245, 237, 420, 0, 0, 0, 0, 209,
	0, 0, 0, 1083, 0, 1084, 1085, 0, 0, 0,
	0, 0, 0, 0, 248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 325, 0, 0, 0, 0, 0,
	453, 0, 0, 0, 0, 0, 0, 0, 294, 0,
	291, 188, 205, 0, 0, 335, 375, 381, 0, 0,
	0, 229, 0, 379, 349, 437, 213, 256, 372, 354,
	377, 0, 0, 0, 0, 378, 300, 425, 367, 435,
	454, 455, 236, 329, 444, 414, 450, 466, 206, 233,
	343, 407, 440, 398, 322, 421, 422, 290, 397, 264,
	191, 298, 460, 204, 387, 221, 211, 197, 409, 433,
	218, 390, 0, 0, 468, 199, 431, 406, 318, 287,
	288, 198, 0, 371, 241, 262, 231, 338, 428, 429,
	230, 469, 208, 449, 201, 0, 448, 331, 424, 432,
	319, 310, 200, 430, 317, 309, 293, 252, 273, 365,
	303, 366, 274, 327, 326, 328, 194, 441, 0, 195,
	0, 403, 442, 470, 214, 215, 216, 0, 251, 255,
	261, 263, 269, 270, 277, 296, 342, 364, 362, 368,
	0, 419, 436, 445, 452, 458, 459, 461, 462, 463,
	464, 465, 330, 276, 399, 292, 301, 0, 0, 348,
	380, 219, 439, 400, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 488, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 187, 202, 297, 0, 369, 259,
	467, 447, 443, 0, 0, 235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 190,
	203, 212, 222, 234, 249, 257, 267, 272, 275, 280,
	281, 284, 289, 307, 312, 313, 314, 315, 332, 333,
	334, 337, 340, 341, 344, 346, 347, 350, 357, 358,
	359, 360, 361, 363, 370, 374, 382, 383, 384, 385,
	386, 388, 389, 393, 394, 395, 396, 404, 408, 426,
	427, 438, 451, 456, 268, 434, 457, 0, 306, 0,
	0, 308, 253, 271, 282, 0, 446, 405, 207, 376,
	260, 196, 225, 210, 232, 247, 250, 286, 316, 323,
	352, 356, 265, 244, 223, 373, 220, 391, 411, 412,
	413, 415, 320, 239, 355, 416, 0, 304, 417, 418,
	278, 0, 0, 0, 0, 0, 0, 339, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 295, 240, 0, 0, 353, 0, 193, 0, 392,
	228, 305, 302, 423, 254, 246, 242, 227, 279, 311,
	351, 410, 345, 0, 299, 0, 0, 401, 324, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 285, 226, 192, 336, 402, 258,
	0, 0, 0, 0, 184, 185, 186, 1159, 1162, 0,
	0, 0, 0, 1158, 1161, 0, 0, 217, 1157, 224,
	0, 0, 0, 0, 0, 238, 283, 245, 237, 420,
	0, 0, 0, 0, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 325,
	0, 0, 0, 0, 0, 453, 0, 0, 0, 0,
	0, 0, 0, 294, 0, 291, 188, 205, 0, 0,
	335, 375, 381, 0, 0, 0, 229, 0, 379, 349,
	437, 213, 256, 372, 354, 377, 0, 0, 0, 0,
	378, 300, 425, 367, 435, 454, 455, 236, 329, 444,
	414, 450, 466, 206, 233, 343, 407, 440, 398, 322,
	421, 422, 290, 397, 264, 191, 298, 460, 204, 387,
	221, 211, 197, 409, 433, 218, 390, 0, 0, 468,
	199, 431, 406, 318, 287, 288, 198, 0, 371, 241,
	262, 231, 338, 428, 429, 230, 469, 208, 449, 201,
	0, 448, 331, 424, 432, 319, 310, 200, 430, 317,
	309, 293, 252, 273, 365, 303, 366, 274, 327, 326,
	328, 194, 441, 0, 195, 0, 403, 442, 470, 214,
	215, 216, 0, 251, 255, 261, 263, 269, 270, 277,
	296, 342, 364, 362, 368, 0, 419, 436, 445, 452,
	458, 459, 461, 462, 463, 464, 465, 330, 276, 399,
	292, 301, 0, 0, 348, 380, 219, 439, 400, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 488, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 489, 0, 187,
	202, 297, 0, 369, 259, 467, 447, 443, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 190, 203, 212, 222, 234, 249,
	257, 267, 272, 275, 280, 281, 284, 289, 307, 312,
	313, 314, 315, 332, 333, 334, 337, 340, 341, 344,
	346, 347, 350, 357, 358, 359, 360, 361, 363, 370,
	374, 382, 383, 384, 385, 386, 388, 389, 393, 394,
	395, 396, 404, 408, 426, 427, 438, 451, 456, 268,
	434, 457, 0, 306, 0, 0, 308, 253, 271, 282,
	0, 446, 405, 207, 376, 260, 196, 225, 210, 232,
	247, 250, 286, 316, 323, 352, 356, 265, 244, 223,
	373, 220, 391, 411, 412, 413, 415, 320, 239, 355,
	78, 416, 304, 417, 418, 278, 0, 0, 0, 0,
	0, 0, 0, 339, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 295, 240, 0,
	0, 353, 0, 193, 0, 392, 228, 305, 302, 423,
	254, 246, 242, 227, 279, 311, 351, 410, 345, 0,
	299, 0, 0, 401, 324, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	285, 226, 192, 336, 402, 258, 0, 87, 0, 1197,
	184, 185, 186, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 224, 0, 0, 0, 0,
	0, 238, 283, 245, 237, 420, 0, 0, 0, 0,
	209, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 325, 0, 0, 0, 0,
	0, 453, 0, 0, 0, 0, 0, 0, 0, 294,
	0, 291, 188, 205, 0, 0, 335, 375, 381, 0,
	0, 0, 229, 0, 379, 349, 437, 213, 256, 372,
	354, 377, 0, 0, 0, 0, 378, 300, 425, 367,
	435, 454, 455, 236, 329, 444, 414, 450, 466, 206,
	233, 343, 407, 440, 398, 322, 421, 422, 290, 397,
	264, 191, 298, 460, 204, 387, 221, 211, 197, 409,
	433, 218, 390, 0, 0, 468, 199, 431, 406, 318,
	287, 288, 198, 0, 371, 241, 262, 231, 338, 428,
	429, 230, 469, 208, 449, 201, 0, 448, 331, 424,
	432, 319, 310, 200, 430, 317, 309, 293, 252, 273,
	365, 303, 366, 274, 327, 326, 328, 194, 441, 0,
	195, 0, 403, 442, 470, 214, 215, 216, 0, 251,
	255, 261, 263, 269, 270, 277, 296, 342, 364, 362,
	368, 0, 419, 436, 445, 452, 458, 459, 461, 462,
	463, 464, 465, 330, 276, 399, 292, 301, 0, 0,
	348, 380, 219, 439, 400, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 488, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 489, 0, 187, 202, 297, 86, 369,
	259, 467, 447, 443, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	190, 203, 212, 222, 234, 249, 257, 267, 272, 275,
	280, 281, 284, 289, 307, 312, 313, 314, 315, 332,
	333, 334, 337, 340, 341, 344, 346, 347, 350, 357,
	358, 359, 360, 361, 363, 370, 374, 382, 383, 384,
	385, 386, 388, 389, 393, 394, 395, 396, 404, 408,
	426, 427, 438, 451, 456, 268, 434, 457, 0, 306,
	0, 0, 308, 253, 271, 282, 0, 446, 405, 207,
	376, 260, 196, 225, 210, 232, 247, 250, 286, 316,
	323, 352, 356, 265, 244, 223, 373, 220, 391, 411,
	412, 413, 415, 320, 239, 355, 78, 416, 304, 417,
	418, 278, 0, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 295, 240, 0, 0, 353, 0, 193,
	0, 392, 228, 305, 302, 423, 254, 246, 242, 227,
	279, 311, 351, 410, 345, 0, 299, 0, 0, 401,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 226, 192, 336,
	402, 258, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 238, 283, 245,
	237, 420, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 325, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 291, 188, 205,
	0, 0, 335, 375, 381, 0, 0, 0, 229, 0,
	379, 349, 437, 213, 256, 372, 354, 377, 0, 0,
	0, 0, 378, 300, 425, 367, 435, 454, 455, 236,
	329, 444, 414, 450, 466, 206, 233, 343, 407, 440,
	398, 322, 421, 422, 290, 397, 264, 191, 298, 460,
	204, 387, 221, 211, 197, 409, 433, 218, 390, 0,
	0, 468, 199, 431, 406, 318, 287, 288, 198, 0,
	371, 241, 262, 231, 338, 428, 429, 230, 469, 208,
	449, 201, 0, 448, 331, 424, 432, 319, 310, 200,
	430, 317, 309, 293, 252, 273, 365, 303, 366, 274,
	327, 326, 328, 194, 441, 0, 195, 0, 403, 442,
	470, 214, 215, 216, 0, 251, 255, 261, 263, 269,
	270, 277, 296, 342, 364, 362, 368, 0, 419, 436,
	445, 452, 458, 459, 461, 462, 463, 464, 465, 330,
	276, 399, 292, 301, 0, 0, 348, 380, 219, 439,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 187, 202, 297, 86, 369, 259, 467, 447, 443,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	234, 249, 257, 267, 272, 275, 280, 281, 284, 289,
	307, 312, 313, 314, 315, 332, 333, 334, 337, 340,
	341, 344, 346, 347, 350, 357, 358, 359, 360, 361,
	363, 370, 374, 382, 383, 384, 385, 386, 388, 389,
	393, 394, 395, 396, 404, 408, 426, 427, 438, 451,
	456, 268, 434, 457, 0, 306, 0, 0, 308, 253,
	271, 282, 0, 446, 405, 207, 376, 260, 196, 225,
	210, 232, 247, 250, 286, 316, 323, 352, 356, 265,
	244, 223, 373, 220, 391, 411, 412, 413, 415, 320,
	239, 355, 416, 0, 304, 417, 418, 278, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 1595, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 295, 240,
	0, 0, 353, 0, 193, 0, 392, 228, 305, 302,
	423, 254, 246, 242, 227, 279, 311, 351, 410, 345,
	0, 299, 0, 0, 401, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 226, 192, 336, 402, 258, 0, 0, 0,
	0, 184, 185, 186, 0, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 238, 283, 245, 237, 420, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 325, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 291, 188, 205, 0, 0, 335, 375, 381,
	0, 0, 0, 229, 0, 379, 349, 437, 213, 256,
	372, 354, 377, 0, 0, 0, 1593, 378, 300, 425,
	367, 435, 454, 455, 236, 329, 444, 414, 450, 466,
	206, 233, 343, 407, 440, 398, 322, 421, 422, 290,
	397, 264, 191, 298, 460, 204, 387, 221, 211, 197,
	409, 433, 218, 390, 0, 0, 468, 199, 431, 406,
	318, 287, 288, 198, 0, 371, 241, 262, 231, 338,
	428, 429, 230, 469, 208, 449, 201, 0, 448, 331,
	424, 432, 319, 310, 200, 430, 317, 309, 293, 252,
	273, 365, 303, 366, 274, 327, 326, 328, 194, 441,
	0, 195, 0, 403, 442, 470, 214, 215, 216, 0,
	251, 255, 261, 263, 269, 270, 277, 296, 342, 364,
	362, 368, 0, 419, 436, 445, 452, 458, 459, 461,
	462, 463, 464, 465, 330, 276, 399, 292, 301, 0,
	0, 348, 380, 219, 439, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 187, 202, 297, 0,
	369, 259, 467, 447, 443, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 234, 249, 257, 267, 272,
	275, 280, 281, 284, 289, 307, 312, 313, 314, 315,
	332, 333, 334, 337, 340, 341, 344, 346, 347, 350,
	357, 358, 359, 360, 361, 363, 370, 374, 382, 383,
	384, 385, 386, 388, 389, 393, 394, 395, 396, 404,
	408, 426, 427, 438, 451, 456, 268, 434, 457, 0,
	306, 0, 0, 308, 253, 271, 282, 0, 446, 405,
	207, 376, 260, 196, 225, 210, 232, 247, 250, 286,
	316, 323, 352, 356, 265, 244, 223, 373, 220, 391,
	411, 412, 413, 415, 320, 239, 355, 416, 0, 304,
	417, 418, 278, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 295, 240, 0, 0, 353, 0, 193,
	0, 392, 228, 305, 302, 423, 254, 246, 242, 227,
	279, 311, 351, 410, 345, 0, 299, 0, 0, 401,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 226, 192, 336,
	402, 258, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 238, 283, 245,
	237, 420, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 325, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 294, 880, 291, 188, 205,
	878, 0, 335, 375, 381, 0, 0, 0, 229, 0,
	379, 349, 437, 213, 256, 372, 354, 377, 0, 0,
	0, 0, 378, 300, 425, 367, 435, 454, 455, 236,
	329, 444, 414, 450, 466, 206, 233, 343, 407, 440,
	398, 322, 421, 422, 290, 397, 264, 191, 298, 460,
	204, 387, 221, 211, 197, 409, 433, 218, 390, 0,
	0, 468, 199, 431, 406, 318, 287, 288, 198, 0,
	371, 241, 262, 231, 338, 428, 429, 230, 469, 208,
	449, 201, 0, 448, 331, 424, 432, 319, 310, 200,
	430, 317, 309, 293, 252, 273, 365, 303, 366, 274,
	327, 326, 328, 194, 441, 0, 195, 0, 403, 442,
	470, 214, 215, 216, 0, 251, 255, 261, 263, 269,
	270, 277, 296, 342, 364, 362, 368, 0, 419, 436,
	445, 452, 458, 459, 461, 462, 463, 464, 465, 330,
	276, 399, 292, 301, 0, 0, 348, 380, 219, 439,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 187, 202, 297, 0, 369, 259, 467, 447, 443,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	234, 249, 257, 267, 272, 275, 280, 281, 284, 289,
	307, 312, 313, 314, 315, 332, 333, 334, 337, 340,
	341, 344, 346, 347, 350, 357, 358, 359, 360, 361,
	363, 370, 374, 382, 383, 384, 385, 386, 388, 389,
	393, 394, 395, 396, 404, 408, 426, 427, 438, 451,
	456, 268, 434, 457, 0, 306, 0, 0, 308, 253,
	271, 282, 0, 446, 405, 207, 376, 260, 196, 225,
	210, 232, 247, 250, 286, 316, 323, 352, 356, 265,
	244, 223, 373, 220, 391, 411, 412, 413, 415, 320,
	239, 355, 416, 0, 304, 417, 418, 278, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 295, 240,
	0, 0, 353, 0, 193, 0, 392, 228, 305, 302,
	423, 254, 246, 242, 227, 279, 311, 351, 410, 345,
	0, 299, 0, 0, 401, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 226, 192, 336, 402, 258, 0, 0, 0,
	1197, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 238, 283, 245, 237, 420, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 325, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 2432, 0, 0, 0,
	294, 0, 291, 188, 205, 0, 0, 335, 375, 381,
	0, 0, 0, 229, 0, 379, 349, 437, 213, 256,
	372, 354, 377, 0, 0, 0, 0, 378, 300, 425,
	367, 435, 454, 455, 236, 329, 444, 414, 450, 466,
	206, 233, 343, 407, 440, 398, 322, 421, 422, 290,
	397, 264, 191, 298, 460, 204, 387, 221, 211, 197,
	409, 433, 218, 390, 0, 0, 468, 199, 431, 406,
	318, 287, 288, 198, 0, 371, 241, 262, 231, 338,
	428, 429, 230, 469, 208, 449, 201, 0, 448, 331,
	424, 432, 319, 310, 200, 430, 317, 309, 293, 252,
	273, 365, 303, 366, 274, 327, 326, 328, 194, 441,
	0, 195, 0, 403, 442, 470, 214, 215, 216, 0,
	251, 255, 261, 263, 269, 270, 277, 296, 342, 364,
	362, 368, 0, 419, 436, 445, 452, 458, 459, 461,
	462, 463, 464, 465, 330, 276, 399, 292, 301, 0,
	0, 348, 380, 219, 439, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 187, 202, 297, 0,
	369, 259, 467, 447, 443, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 234, 249, 257, 267, 272,
	275, 280, 281, 284, 289, 307, 312, 313, 314, 315,
	332, 333, 334, 337, 340, 341, 344, 346, 347, 350,
	357, 358, 359, 360, 361, 363, 370, 374, 382, 383,
	384, 385, 386, 388, 389, 393, 394, 395, 396, 404,
	408, 426, 427, 438, 451, 456, 268, 434, 457, 0,
	306, 0, 0, 308, 253, 271, 282, 0, 446, 405,
	207, 376, 260, 196, 225, 210, 232, 247, 250, 286,
	316, 323, 352, 356, 265, 244, 223, 373, 220, 391,
	411, 412, 413, 415, 320, 239, 355, 416, 0, 304,
	417, 418, 278, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 1595, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 295, 240, 0, 0, 353, 0, 193,
	0, 392, 228, 305, 302, 423, 254, 246, 242, 227,
	279, 311, 351, 410, 345, 0, 299, 0, 0, 401,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 226, 192, 336,
	402, 258, 0, 0, 0, 0, 184, 185, 186, 0,
	1389, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 238, 283, 245,
	237, 420, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 325, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 291, 188, 205,
	0, 0, 335, 375, 381, 0, 0, 0, 229, 0,
	379, 349, 437, 213, 256, 372, 354, 377, 0, 0,
	0, 0, 378, 300, 425, 367, 435, 454, 455, 236,
	329, 444, 414, 450, 466, 206, 233, 343, 407, 440,
	398, 322, 421, 422, 290, 397, 264, 191, 298, 460,
	204, 387, 221, 211, 197, 409, 433, 218, 390, 0,
	0, 468, 199, 431, 406, 318, 287, 288, 198, 0,
	371, 241, 262, 231, 338, 428, 429, 230, 469, 208,
	449, 201, 0, 448, 331, 424, 432, 319, 310, 200,
	430, 317, 309, 293, 252, 273, 365, 303, 366, 274,
	327, 326, 328, 194, 441, 0, 195, 0, 403, 442,
	470, 214, 215, 216, 0, 251, 255, 261, 263, 269,
	270, 277, 296, 342, 364, 362, 368, 0, 419, 436,
	445, 452, 458, 459, 461, 462, 463, 464, 465, 330,
	276, 399, 292, 301, 0, 0, 348, 380, 219, 439,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 187, 202, 297, 0, 369, 259, 467, 447, 443,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	234, 249, 257, 267, 272, 275, 280, 281, 284, 289,
	307, 312, 313, 314, 315, 332, 333, 334, 337, 340,
	341, 344, 346, 347, 350, 357, 358, 359, 360, 361,
	363, 370, 374, 382, 383, 384, 385, 386, 388, 389,
	393, 394, 395, 396, 404, 408, 426, 427, 438, 451,
	456, 268, 434, 457, 0, 306, 0, 0, 308, 253,
	271, 282, 0, 446, 405, 207, 376, 260, 196, 225,
	210, 232, 247, 250, 286, 316, 323, 352, 356, 265,
	244, 223, 373, 220, 391, 411, 412, 413, 415, 320,
	239, 355, 416, 0, 304, 417, 418, 278, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 295, 240,
	0, 0, 353, 0, 193, 0, 392, 228, 305, 302,
	423, 254, 246, 242, 227, 279, 311, 351, 410, 345,
	0, 299, 0, 0, 401, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 226, 192, 336, 402, 258, 0, 0, 0,
	0, 184, 185, 186, 0, 1873, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 238, 283, 245, 237, 420, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1874, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 325, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 291, 188, 205, 0, 0, 335, 375, 381,
	0, 0, 0, 229, 0, 379, 349, 437, 213, 256,
	372, 354, 377, 0, 0, 0, 0, 378, 300, 425,
	367, 435, 454, 455, 236, 329, 444, 414, 450, 466,
	206, 233, 343, 407, 440, 398, 322, 421, 422, 290,
	397, 264, 191, 298, 460, 204, 387, 221, 211, 197,
	409, 433, 218, 390, 0, 0, 468, 199, 431, 406,
	318, 287, 288, 198, 0, 371, 241, 262, 231, 338,
	428, 429, 230, 469, 208, 449, 201, 0, 448, 331,
	424, 432, 319, 310, 200, 430, 317, 309, 293, 252,
	273, 365, 303, 366, 274, 327, 326, 328, 194, 441,
	0, 195, 0, 403, 442, 470, 214, 215, 216, 0,
	251, 255, 261, 263, 269, 270, 277, 296, 342, 364,
	362, 368, 0, 419, 436, 445, 452, 458, 459, 461,
	462, 463, 464, 465, 330, 276, 399, 292, 301, 0,
	0, 348, 380, 219, 439, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 187, 202, 297, 0,
	369, 259, 467, 447, 443, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 234, 249, 257, 267, 272,
	275, 280, 281, 284, 289, 307, 312, 313, 314, 315,
	332, 333, 334, 337, 340, 341, 344, 346, 347, 350,
	357, 358, 359, 360, 361, 363, 370, 374, 382, 383,
	384, 385, 386, 388, 389, 393, 394, 395, 396, 404,
	408, 426, 427, 438, 451, 456, 268, 434, 457, 0,
	306, 0, 0, 308, 253, 271, 282, 0, 446, 405,
	207, 376, 260, 196, 225, 210, 232, 247, 250, 286,
	316, 323, 352, 356, 265, 244, 223, 373, 220, 391,
	411, 412, 413, 415, 320, 239, 355, 416, 0, 304,
	417, 418, 278, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 295, 240, 0, 0, 353, 0, 193,
	0, 392, 228, 305, 302, 423, 254, 246, 242, 227,
	279, 311, 351, 410, 345, 0, 299, 0, 0, 401,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 226, 192, 336,
	402, 258, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 1859, 0, 0, 0, 1860, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 238, 283, 245,
	237, 420, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 325, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 291, 188, 205,
	0, 0, 335, 375, 381, 0, 0, 0, 229, 0,
	379, 349, 437, 213, 256, 372, 354, 377, 0, 0,
	0, 0, 378, 300, 425, 367, 435, 454, 455, 236,
	329, 444, 414, 450, 466, 206, 233, 343, 407, 440,
	398, 322, 421, 422, 290, 397, 264, 191, 298, 460,
	204, 387, 221, 211, 197, 409, 433, 218, 390, 0,
	0, 468, 199, 431, 406, 318, 287, 288, 198, 0,
	371, 241, 262, 231, 338, 428, 429, 230, 469, 208,
	449, 201, 0, 448, 331, 424, 432, 319, 310, 200,
	430, 317, 309, 293, 252, 273, 365, 303, 366, 274,
	327, 326, 328, 194, 441, 0, 195, 0, 403, 442,
	470, 214, 215, 216, 0, 251, 255, 261, 263, 269,
	270, 277, 296, 342, 364, 362, 368, 0, 419, 436,
	445, 452, 458, 459, 461, 462, 463, 464, 465, 330,
	276, 399, 292, 301, 0, 0, 348, 380, 219, 439,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 187, 202, 297, 0, 369, 259, 467, 447, 443,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	234, 249, 257, 267, 272, 275, 280, 281, 284, 289,
	307, 312, 313, 314, 315, 332, 333, 334, 337, 340,
	341, 344, 346, 347, 350, 357, 358, 359, 360, 361,
	363, 370, 374, 382, 383, 384, 385, 386, 388, 389,
	393, 394, 395, 396, 404, 408, 426, 427, 438, 451,
	456, 268, 434, 457, 0, 306, 0, 0, 308, 253,
	271, 282, 0, 446, 405, 207, 376, 260, 196, 225,
	210, 232, 247, 250, 286, 316, 323, 352, 356, 265,
	244, 223, 373, 220, 391, 411, 412, 413, 415, 320,
	239, 355, 416, 0, 304, 417, 418, 278, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 1240, 0, 0, 0, 295, 240,
	0, 0, 353, 0, 193, 0, 392, 228, 305, 302,
	423, 254, 246, 242, 227, 279, 311, 351, 410, 345,
	0, 299, 0, 0, 401, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 226, 192, 336, 402, 258, 0, 0, 0,
	0, 184, 185, 186, 0, 1239, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 238, 283, 245, 237, 420, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 325, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 291, 188, 205, 0, 0, 335, 375, 381,
	0, 0, 0, 229, 0, 379, 349, 437, 213, 256,
	372, 354, 377, 0, 0, 0, 0, 378, 300, 425,
	367, 435, 454, 455, 236, 329, 444, 414, 450, 466,
	206, 233, 343, 407, 440, 398, 322, 421, 422, 290,
	397, 264, 191, 298, 460, 204, 387, 221, 211, 197,
	409, 433, 218, 390, 0, 0, 468, 199, 431, 406,
	318, 287, 288, 198, 0, 371, 241, 262, 231, 338,
	428, 429, 230, 469, 208, 449, 201, 0, 448, 331,
	424, 432, 319, 310, 200, 430, 317, 309, 293, 252,
	273, 365, 303, 366, 274, 327, 326, 328, 194, 441,
	0, 195, 0, 403, 442, 470, 214, 215, 216, 0,
	251, 255, 261, 263, 269, 270, 277, 296, 342, 364,
	362, 368, 0, 419, 436, 445, 452, 458, 459, 461,
	462, 463, 464, 465, 330, 276, 399, 292, 301, 0,
	0, 348, 380, 219, 439, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 187, 202, 297, 0,
	369, 259, 467, 447, 443, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 234, 249, 257, 267, 272,
	275, 280, 281, 284, 289, 307, 312, 313, 314, 315,
	332, 333, 334, 337, 340, 341, 344, 346, 347, 350,
	357, 358, 359, 360, 361, 363, 370, 374, 382, 383,
	384, 385, 386, 388, 389, 393, 394, 395, 396, 404,
	408, 426, 427, 438, 451, 456, 268, 434, 457, 0,
	306, 0, 0, 308, 253, 271, 282, 0, 446, 405,
	207, 376, 260, 196, 225, 210, 232, 247, 250, 286,
	316, 323, 352, 356, 265, 244, 223, 373, 220, 391,
	411, 412, 413, 415, 320, 239, 355, 416, 0, 304,
	417, 418, 278, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 295, 240, 0, 0, 353, 0, 193,
	0, 392, 228, 305, 302, 423, 254, 246, 242, 227,
	279, 311, 351, 410, 345, 0, 299, 0, 0, 401,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 226, 192, 336,
	402, 258, 0, 0, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 238, 283, 245,
	237, 420, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 325, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 2500, 0, 0, 0, 294, 0, 291, 188, 205,
	0, 0, 335, 375, 381, 0, 0, 0, 229, 0,
	379, 349, 437, 213, 256, 372, 354, 377, 0, 0,
	0, 0, 378, 300, 425, 367, 435, 454, 455, 236,
	329, 444, 414, 450, 466, 206, 233, 343, 407, 440,
	398, 322, 421, 422, 290, 397, 264, 191, 298, 460,
	204, 387, 221, 211, 197, 409, 433, 218, 390, 0,
	0, 468, 199, 431, 406, 318, 287, 288, 198, 0,
	371, 241, 262, 231, 338, 428, 429, 230, 469, 208,
	449, 201, 0, 448, 331, 424, 432, 319, 310, 200,
	430, 317, 309, 293, 252, 273, 365, 303, 366, 274,
	327, 326, 328, 194, 441, 0, 195, 0, 403, 442,
	470, 214, 215, 216, 0, 251, 255, 261, 263, 269,
	270, 277, 296, 342, 364, 362, 368, 0, 419, 436,
	445, 452, 458, 459, 461, 462, 463, 464, 465, 330,
	276, 399, 292, 301, 0, 0, 348, 380, 219, 439,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 187, 202, 297, 0, 369, 259, 467, 447, 443,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	234, 249, 257, 267, 272, 275, 280, 281, 284, 289,
	307, 312, 313, 314, 315, 332, 333, 334, 337, 340,
	341, 344, 346, 347, 350, 357, 358, 359, 360, 361,
	363, 370, 374, 382, 383, 384, 385, 386, 388, 389,
	393, 394, 395, 396, 404, 408, 426, 427, 438, 451,
	456, 268, 434, 457, 0, 306, 0, 0, 308, 253,
	271, 282, 0, 446, 405, 207, 376, 260, 196, 225,
	210, 232, 247, 250, 286, 316, 323, 352, 356, 265,
	244, 223, 373, 220, 391, 411, 412, 413, 415, 320,
	239, 355, 416, 0, 304, 417, 418, 278, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 295, 240,
	0, 0, 353, 0, 193, 0, 392, 228, 305, 302,
	423, 254, 246, 242, 227, 279, 311, 351, 410, 345,
	0, 299, 0, 0, 401, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 226, 192, 336, 402, 258, 0, 0, 0,
	0, 184, 185, 186, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 238, 283, 245, 237, 420, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 325, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 2432, 0, 0, 0,
	294, 0, 291, 188, 205, 0, 0, 335, 375, 381,
	0, 0, 0, 229, 0, 379, 349, 437, 213, 256,
	372, 354, 377, 0, 0, 0, 0, 378, 300, 425,
	367, 435, 454, 455, 236, 329, 444, 414, 450, 466,
	206, 233, 343, 407, 440, 398, 322, 421, 422, 290,
	397, 264, 191, 298, 460, 204, 387, 221, 211, 197,
	409, 433, 218, 390, 0, 0, 468, 199, 431, 406,
	318, 287, 288, 198, 0, 371, 241, 262, 231, 338,
	428, 429, 230, 469, 208, 449, 201, 0, 448, 331,
	424, 432, 319, 310, 200, 430, 317, 309, 293, 252,
	273, 365, 303, 366, 274, 327, 326, 328, 194, 441,
	0, 195, 0, 403, 442, 470, 214, 215, 216, 0,
	251, 255, 261, 263, 269, 270, 277, 296, 342, 364,
	362, 368, 0, 419, 436, 445, 452, 458, 459, 461,
	462, 463, 464, 465, 330, 276, 399, 292, 301, 0,
	0, 348, 380, 219, 439, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 187, 202, 297, 0,
	369, 259, 467, 447, 443, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 234, 249, 257, 267, 272,
	275, 280, 281, 284, 289, 307, 312, 313, 314, 315,
	332, 333, 334, 337, 340, 341, 344, 346, 347, 350,
	357, 358, 359, 360, 361, 363, 370, 374, 382, 383,
	384, 385, 386, 388, 389, 393, 394, 395, 396, 404,
	408, 426, 427, 438, 451, 456, 268, 434, 457, 0,
	306, 0, 0, 308, 253, 271, 282, 0, 446, 405,
	207, 376, 260, 196, 225, 210, 232, 247, 250, 286,
	316, 323, 352, 356, 265, 244, 223, 373, 220, 391,
	411, 412, 413, 415, 320, 239, 355, 416, 0, 304,
	417, 418, 278, 0, 0, 0, 0, 0, 0, 339,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 295, 240, 0, 0, 353, 0, 193,
	0, 392, 228, 305, 302, 423, 254, 246, 242, 227,
	279, 311, 351, 410, 345, 0, 299, 0, 0, 401,
	324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 285, 226, 192, 336,
	402, 258, 0, 87, 0, 0, 184, 185, 186, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 224, 0, 0, 0, 0, 0, 238, 283, 245,
	237, 420, 0, 0, 0, 0, 209, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	0, 325, 0, 0, 0, 0, 0, 453, 0, 0,
	0, 0, 0, 0, 0, 294, 0, 291, 188, 205,
	0, 0, 335, 375, 381, 0, 0, 0, 229, 0,
	379, 349, 437, 213, 256, 372, 354, 377, 0, 0,
	0, 0, 378, 300, 425, 367, 435, 454, 455, 236,
	329, 444, 414, 450, 466, 206, 233, 343, 407, 440,
	398, 322, 421, 422, 290, 397, 264, 191, 298, 460,
	204, 387, 221, 211, 197, 409, 433, 218, 390, 0,
	0, 468, 199, 431, 406, 318, 287, 288, 198, 0,
	371, 241, 262, 231, 338, 428, 429, 230, 469, 208,
	449, 201, 0, 448, 331, 424, 432, 319, 310, 200,
	430, 317, 309, 293, 252, 273, 365, 303, 366, 274,
	327, 326, 328, 194, 441, 0, 195, 0, 403, 442,
	470, 214, 215, 216, 0, 251, 255, 261, 263, 269,
	270, 277, 296, 342, 364, 362, 368, 0, 419, 436,
	445, 452, 458, 459, 461, 462, 463, 464, 465, 330,
	276, 399, 292, 301, 0, 0, 348, 380, 219, 439,
	400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 488, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 489,
	0, 187, 202, 297, 0, 369, 259, 467, 447, 443,
	0, 0, 235, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 190, 203, 212, 222,
	234, 249, 257, 267, 272, 275, 280, 281, 284, 289,
	307, 312, 313, 314, 315, 332, 333, 334, 337, 340,
	341, 344, 346, 347, 350, 357, 358, 359, 360, 361,
	363, 370, 374, 382, 383, 384, 385, 386, 388, 389,
	393, 394, 395, 396, 404, 408, 426, 427, 438, 451,
	456, 268, 434, 457, 0, 306, 0, 0, 308, 253,
	271, 282, 0, 446, 405, 207, 376, 260, 196, 225,
	210, 232, 247, 250, 286, 316, 323, 352, 356, 265,
	244, 223, 373, 220, 391, 411, 412, 413, 415, 320,
	239, 355, 416, 0, 304, 417, 418, 278, 0, 0,
	0, 0, 0, 0, 339, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 295, 240,
	0, 0, 353, 0, 193, 0, 392, 228, 305, 302,
	423, 254, 246, 242, 227, 279, 311, 351, 410, 345,
	0, 299, 0, 0, 401, 324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 285, 226, 192, 336, 402, 258, 0, 0, 0,
	0, 184, 185, 186, 0, 1389, 0, 0, 0, 0,
	0, 0, 0, 0, 217, 0, 224, 0, 0, 0,
	0, 0, 238, 283, 245, 237, 420, 0, 0, 0,
	0, 209, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 325, 0, 0, 0,
	0, 0, 453, 0, 0, 0, 0, 0, 0, 0,
	294, 0, 291, 188, 205, 0, 0, 335, 375, 381,
	0, 0, 0, 229, 0, 379, 349, 437, 213, 256,
	372, 354, 377, 0, 0, 0, 0, 378, 300, 425,
	367, 435, 454, 455, 236, 329, 444, 414, 450, 466,
	206, 233, 343, 407, 440, 398, 322, 421, 422, 290,
	397, 264, 191, 298, 460, 204, 387, 221, 211, 197,
	409, 433, 218, 390, 0, 0, 468, 199, 431, 406,
	318, 287, 288, 198, 0, 371, 241, 262, 231, 338,
	428, 429, 230, 469, 208, 449, 201, 0, 448, 331,
	424, 432, 319, 310, 200, 430, 317, 309, 293, 252,
	273, 365, 303, 366, 274, 327, 326, 328, 194, 441,
	0, 195, 0, 403, 442, 470, 214, 215, 216, 0,
	251, 255, 261, 263, 269, 270, 277, 296, 342, 364,
	362, 368, 0, 419, 436, 445, 452, 458, 459, 461,
	462, 463, 464, 465, 330, 276, 399, 292, 301, 0,
	0, 348, 380, 219, 439, 400, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 488, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 489, 0, 187, 202, 297, 0,
	369, 259, 467, 447, 443, 0, 0, 235, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 190, 203, 212, 222, 234, 249, 257, 267, 272,
	275, 280, 281, 284, 289, 307, 312, 313, 314, 315,
	332, 333, 334, 337, 340, 341, 344, 346, 347, 350,
	357, 358, 359, 360, 361, 363, 370, 374, 382, 383,
	384, 385, 386, 388, 389, 393, 394, 395, 396, 404,
	408, 426, 427, 438, 451, 456, 268, 434, 457, 0,
	306, 0, 0, 308, 253, 271, 282, 0, 446, 405,
	207, 376, 260, 196, 225, 210, 232, 247, 250, 286,
	316, 323, 352, 356, 265, 244, 223, 373, 220, 391,
	411, 412, 413, 415, 320, 239, 355, 0, 416, 304,
	417, 418, 278, 1642, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 1219, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 1599, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 1480, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 1361, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 1359, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 1357, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 1355, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 1353, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 1349, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 1347, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 1345, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 1322,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 1224, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 1060, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 0, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 689, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 544, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 416, 0,
	304, 417, 418, 278, 0, 0, 0, 0, 0, 0,
	339, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 295, 240, 0, 0, 353, 0,
	193, 0, 392, 228, 305, 302, 423, 254, 246, 242,
	227, 279, 311, 351, 410, 345, 0, 299, 0, 0,
	401, 324, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 285, 226, 192,
	336, 402, 258, 0, 0, 0, 0, 184, 185, 186,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	217, 0, 224, 0, 0, 0, 0, 0, 238, 283,
	245, 237, 420, 0, 0, 0, 0, 209, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 325, 0, 0, 0, 492, 0, 453, 0,
	0, 0, 0, 0, 0, 0, 294, 0, 291, 188,
	205, 0, 0, 335, 375, 381, 0, 0, 0, 229,
	0, 379, 349, 437, 213, 256, 372, 354, 377, 0,
	0, 0, 0, 378, 300, 425, 367, 435, 454, 455,
	236, 329, 444, 414, 450, 466, 206, 233, 343, 407,
	440, 398, 322, 421, 422, 290, 397, 264, 191, 298,
	460, 204, 387, 221, 211, 197, 409, 433, 218, 390,
	0, 0, 468, 199, 431, 406, 318, 287, 288, 198,
	0, 371, 241, 262, 231, 338, 428, 429, 230, 469,
	208, 449, 201, 0, 448, 331, 424, 432, 319, 310,
	200, 430, 317, 309, 293, 252, 273, 365, 303, 366,
	274, 327, 326, 328, 194, 441, 0, 195, 0, 403,
	442, 470, 214, 215, 216, 0, 251, 255, 261, 263,
	269, 270, 277, 296, 342, 364, 362, 368, 0, 419,
	436, 445, 452, 458, 459, 461, 462, 463, 464, 465,
	330, 276, 399, 292, 301, 0, 0, 348, 380, 219,
	439, 400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 488,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	489, 0, 187, 202, 297, 0, 369, 259, 467, 447,
	443, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 190, 203, 212,
	222, 234, 249, 257, 267, 272, 275, 280, 281, 284,
	289, 307, 312, 313, 314, 315, 332, 333, 334, 337,
	340, 341, 344, 346, 347, 350, 357, 358, 359, 360,
	361, 363, 370, 374, 382, 383, 384, 385, 386, 388,
	389, 393, 394, 395, 396, 404, 408, 426, 427, 438,
	451, 456, 268, 434, 457, 0, 306, 0, 0, 308,
	253, 271, 282, 0, 446, 405, 207, 376, 260, 196,
	225, 210, 232, 247, 250, 286, 316, 323, 352, 356,
	265, 244, 223, 373, 220, 391, 411, 412, 413, 415,
	320, 239, 355, 416, 0, 304, 417, 418, 278, 0,
	0, 0, 0, 0, 0, 339, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 295,
	240, 0, 0, 353, 0, 193, 0, 392, 228, 305,
	302, 423, 254, 246, 242, 227, 279, 311, 351, 410,
	345, 0, 299, 0, 0, 401, 324, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 285, 226, 192, 336, 402, 258, 0, 0,
	0, 0, 184, 185, 186, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 224, 0, 0,
	0, 0, 0, 238, 283, 245, 237, 420, 0, 0,
	0, 0, 209, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 325, 0, 0,
	0, 0, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 294, 0, 291, 188, 205, 0, 0, 335, 375,
	381, 0, 0, 0, 229, 0, 379, 349, 437, 213,
	256, 372, 354, 377, 0, 0, 0, 0, 378, 300,
	425, 367, 435, 454, 455, 236, 329, 444, 414, 450,
	466, 206, 233, 343, 407, 440, 398, 322, 421, 422,
	290, 397, 264, 191, 298, 460, 204, 387, 221, 211,
	197, 409, 433, 218, 390, 0, 0, 468, 199, 431,
	406, 318, 287, 288, 198, 0, 371, 241, 262, 231,
	338, 428, 429, 230, 469, 208, 449, 201, 0, 448,
	331, 424, 432, 319, 310, 200, 430, 317, 309, 293,
	252, 273, 365, 303, 366, 274, 327, 326, 328, 194,
	441, 0, 195, 0, 403, 442, 470, 214, 215, 216,
	0, 251, 255, 261, 263, 269, 270, 277, 296, 342,
	364, 362, 368, 0, 419, 436, 445, 452, 458, 459,
	461, 462, 463, 464, 465, 330, 276, 399, 292, 301,
	0, 0, 348, 380, 219, 439, 400, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 488, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 489, 0, 187, 202, 297,
	0, 369, 259, 467, 447, 443, 0, 0, 235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 190, 203, 212, 222, 234, 249, 257, 267,
	272, 275, 280, 281, 284, 289, 307, 312, 313, 314,
	315, 332, 333, 334, 337, 340, 341, 344, 346, 347,
	350, 357, 358, 359, 360, 361, 363, 370, 374, 382,
	383, 384, 385, 386, 388, 389, 393, 394, 395, 396,
	404, 408, 426, 427, 438, 451, 456, 268, 434, 457,
	0, 306, 0, 0, 308, 253, 271, 282, 0, 446,
	405, 207, 376, 260, 196, 225, 210, 232, 247, 250,
	286, 316, 323, 352, 356, 265, 244, 223, 373, 220,
	391, 411, 412, 413, 415, 320, 239, 355, 0, 0,
	304, 417, 418, 278,
}

var yyPact = [...]int{
	4470, -1000, -388, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1731, 1776, -1000, -1000,
	-1000, -1000, 1850, -1000, 738, 1528, -1000, 1743, 2745, -1000,
	34336, 480, -1000, 33791, 476, 96, 34336, -1000, 112, -1000,
	85, 34336, 102, 33246, -1000, -1000, -290, 14168, 1689, -13,
	-17, 34336, -1000, 34336, 34336, 282, 1842, 1520, -1000, 278,
	-1000, -1000, -1000, -1000, -1000, -1000, 32701, -1000, -1000, -1000,
	1757, 1756, 1856, 654, 1696, -1000, 1800, 1520, -1000, 14168,
	1825, 1792, 13623, -1000, 13623, 361, -1000, -1000, 10346, -1000,
	-1000, 18530, 34336, 34336, 276, -1000, 1743, -1000, -1000, 352,
	-1000, 255, 1448, -1000, 1446, -1000, 568, 586, 288, 412,
	408, 285, 283, 281, 280, 277, 261, 260, 259, 292,
	-1000, 694, 694, -184, -185, 2090, 334, 334, 334, 382,
	1713, 1710, -1000, 563, -1000, 694, 694, 286, 694, 694,
	694, 694, 188, 178, 694, 694, 694, 694, 694, 694,
	694, 694, 694, 694, 694, 694, 694, 694, 694, 387,
	1743, 166, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	34336, 123, 34336, -1000, 587, 34336, 823, 823, 34, 823,
	823, 823, 823, 90, 496, -20, -1000, 84, 173, 73,
	160, 806, 329, 135, -1000, -1000, 156, 806, 1182, 664,
	86, -1000, 823, 8134, 8134, 8134, -1000, 1722, -1000, -1000,
	-1000, -1000, -1000, -1000, 1195, -1000, 370, -1000, -1000, -1000,
	-1000, 34336, 32156, 296, 703, -1000, -1000, -1000, 39, -1000,
	-1000, 1322, 888, 14168, 838, -1000, 1927, 595, -1000, -1000,
	-1000, -1000, -1000, 515, 14713, 14713, 14713, 14713, -1000, -1000,
	1466, 1466, 1466, 1466, 14713, 1466, 14713, 1466, 1466, 1466,
	1466, 14168, 1466, 1466, 1466, -1000, 1466, 1466, 1466, 1466,
	1466, 1466, 1466, 1466, 585, 1466, 1466, 1466, 1466, 1466,
	-1000, -1000, -1000, -1000, 1466, 1466, 1466, 1466, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 16348, -1000, 11988,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 34336,
	-1000, 1466, 120, 1847, 1553, 34336, 1800, 1520, -1000, 1842,
	1812, 278, -1000, 1739, 1316, 1333, 1206, 1520, 1436, 34336,
	-1000, 1469, -1000, -1000, -1000, 1633, 1155, 1181, -1000, -1000,
	-1000, -1000, 1086, 14168, -1000, -1000, 1844, -1000, 15803, 566,
	835, 1843, 31611, -1000, 361, 361, 1441, 9793, -43, -1000,
	-1000, -1000, 701, 21255, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1722,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1417, 34336, -1000, -1000, 3980, 1162, -1000,
	1525, -1000, 1415, -1000, 1490, 1535, 465, 1162, 446, 445,
	422, -1000, -103, -1000, -1000, -1000, -1000, -1000, 694, 694,
	-1000, 291, 1823, 2745, 3809, -1000, -1000, -1000, 31066, 1524,
	1162, -1000, 1522, -1000, 763, 540, 551, 551, 1162, -1000,
	-1000, 34336, 1162, 756, 754, 34336, 34336, -1000, 30521, -1000,
	29976, 29431, 1050, 34336, 28886, 28341, 27796, 27251, 26706, -1000,
	1589, -1000, 1500, -1000, -1000, -1000, 34336, 34336, 34336, 287,
	-1000, -1000, 34336, 1162, -1000, -1000, 1037, 1034, 694, 694,
	1033, 1179, 1167, 1166, 694, 694, 1028, 1165, 23435, 257,
	1025, 1021, 1012, 1082, 1156, 187, 1070, 912, 999, 34336,
	1521, 34336, -1000, 152, 622, 333, 700, 1743, 1688, 1440,
	365, 459, 1162, 344, 344, -1000, 8687, -1000, -1000, 1152,
	14168, -1000, 808, 806, 806, -1000, -1000, -1000, -1000, -1000,
	-1000, 823, 34336, 808, -1000, -1000, -1000, 806, 823, 34336,
	823, 823, 823, 823, 806, 806, 806, 823, 34336, 34336,
	34336, 34336, 34336, 34336, 34336, 34336, 34336, 8134, 8134, 8134,
	664, 823, -303, -1000, 1151, -1000, 1586, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 94, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -97, 1439, 26161, -1000,
	-304, -308, -310, -312, -1000, -1000, -1000, -314, -315, -1000,
	-1000, -1000, 14168, 14168, 14168, 14168, -1000, 862, 14713, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 904, 671, 14713, 14713,
	14713, 14713, 14713, 14713, 14713, 14713, 14713, 14713, 14713, 14713,
	14713, 14713, 14713, 759, 1144, 1140, 595, 595, 595, 595,
	-1000, 13623, 14168, 14168, 595, -1000, 1162, 25616, 13623, 13623,
	14168, 1723, 710, 888, 34336, -1000, 1206, -1000, -1000, -1000,
	896, -1000, 34336, 34336, 79, 14168, 10897, 8687, 13623, 13623,
	13623, 13623, 13623, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 554, 1320, 1277, 1413, -1000, 1437,
	-1000, -173, 17985, 14168, 1129, 25071, 34336, -1000, -1000, -1000,
	-1000, 1800, -1000, 1800, 1320, 1659, 1637, 13623, -1000, -1000,
	1659, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1276,
	-1000, 34336, 1436, 1774, 34336, 1631, 1124, 313, -1000, 14168,
	14168, 1433, -1000, 996, 34336, -1000, -1000, 24526, -1000, -1000,
	7581, -1000, 34336, 252, 34336, -1000, 22890, 23981, 9240, -43,
	-1000, 9240, 1421, -1000, -45, -61, 11442, 606, -1000, -1000,
	-1000, 2090, 15258, 1292, 606, 50, -1000, -1000, -1000, 1490,
	-1000, 1490, 1490, 1490, 1490, 313, 313, 313, 313, -1000,
	-1000, -1000, -1000, -1000, 1516, 1506, -1000, 1490, 1490, 1490,
	1490, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1504, 1504,
	1504, 1491, 1491, 328, -1000, 14168, 179, 34336, 1753, 992,
	152, 358, 1552, 1162, 1162, 1162, 358, -1000, 1202, 1197,
	-1000, -367, 1429, -1000, -1000, 1820, -1000, -1000, 691, 786,
	776, 549, 34336, 130, 244, -1000, 321, -1000, 34336, 1162,
	752, 551, 1162, -1000, 1162, -1000, -1000, -1000, -1000, -1000,
	1162, 1427, -1000, 1452, 880, 773, 793, 771, 1427, -1000,
	-1000, -127, 1427, -1000, 1427, -1000, 1427, -1000, 1427, -1000,
	1427, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 678,
	34336, 130, 759, -1000, 364, -1000, -1000, 759, 759, -1000,
	-1000, -1000, -1000, 1117, 1114, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -358, 34336, -1000, 146, 696, 197, 241, 224,
	34336, 129, 1759, 159, 174, 34336, 34336, 344, 1585, 34336,
	1766, 34336, -1000, -1000, -1000, -1000, 888, 34336, -1000, -1000,
	823, 823, -1000, -1000, 34336, 823, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 823, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 34336, 34336, -1000, -1000, -1000, -1000, -1000, 71,
	-42, 263, -1000, -1000, -1000, -1000, -1000, 1788, -1000, 888,
	802, 720, -1000, -1000, -1000, 968, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 904, 14713, 14713, 14713, 1395, 421, 1503,
	988, 1237, 743, 743, 706, 706, 635, 635, 635, 635,
	635, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1335, -1000,
	905, 931, 1206, -1000, 1335, 1335, 939, 13623, -1000, -1000,
	714, -1000, 14168, 1206, -1000, -1000, 1206, 1424, 1423, 1840,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 876, 1206, 13623, 13623, 1422, 1466, 553, -1000, 1335,
	1206, 1206, 1335, 1335, 8687, 1206, -1000, 34336, -1000, -286,
	-1000, -58, 605, 1466, -1000, 23435, 1206, 1322, -1000, -1000,
	-1000, -1000, 1341, -1000, -1000, -1000, -1000, -1000, 20710, 1482,
	1659, -1000, -1000, 1466, 1396, -1000, 313, 6, 20165, -1000,
	-1000, 888, 888, 14168, -1000, -1000, -1000, -1000, -1000, -1000,
	547, 1833, 279, 1466, -1000, 1385, 1603, -1000, -1000, -1000,
	1773, 17440, 34336, 1484, 1447, -1000, 544, -1000, 1421, -43,
	-64, -1000, -1000, -1000, -1000, 888, -1000, 1134, 253, 730,
	-1000, 340, -1000, -1000, -1000, -1000, 1702, 8, -1000, -1000,
	-1000, 313, 313, -1000, -1000, -1000, -1000, -1000, -1000, 1113,
	1113, -1000, -1000, -1000, -1000, -1000, 982, -1000, -1000, -1000,
	978, -1000, -1000, 1131, 1555, 179, -1000, -1000, 694, 1111,
	1704, 34336, -1000, -1000, 1282, 146, 34336, 715, 1571, -1000,
	1552, 1552, 1552, 34336, -1000, -1000, -1000, -1000, -360, 51,
	275, -1000, -1000, -1000, 3569, 34336, 1393, -1000, 124, -1000,
	1274, 1654, 34336, -1000, 1383, 1502, 1162, 1162, -1000, -1000,
	-1000, 34336, 1466, -1000, -1000, -1000, -1000, 456, 1742, 1724,
	130, 124, 606, 1162, -1000, -1000, -1000, -1000, -1000, -361,
	1381, 390, 125, 222, 34336, 34336, 34336, 34336, 34336, 502,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 161, 363,
	-1000, 34336, 34336, 581, -1000, -1000, -1000, 806, -1000, -1000,
	806, -1000, -1000, -1000, -1000, -1000, 1719, 34336, -48, -328,
	-1000, -325, -1000, -1000, -1000, -1000, 1340, 371, 1503, 14713,
	14713, 13623, -121, 562, 562, 759, -1000, -1000, -1000, 14168,
	14168, 1388, 692, -1000, 14168, 783, -1000, -1000, 14168, 14168,
	14168, 1206, 198, -1000, 1335, 1335, 13623, 8687, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 605, -1000,
	551, 551, 551, 34336, -1000, -1000, 34336, 1803, -1000, 1645,
	1644, 1839, 1833, -1000, 22890, 1659, -1000, -1000, -281, -1000,
	1685, 1652, -1000, -1000, -1000, -1000, 7028, 1800, 14168, 1567,
	34336, 1466, -1000, 16894, 34336, 34336, 22890, 22890, 22890, 22890,
	22890, -1000, 1623, 1618, -1000, 1615, 1614, 1622, 34336, -1000,
	1328, 1206, 1812, 17440, 19620, 1288, 22890, -1000, -1000, 22890,
	34336, 6475, -1000, -1000, -49, -56, -1000, -1000, -1000, -1000,
	2090, -1000, -1000, 844, 1772, 1695, -1000, -1000, -1000, -1000,
	1326, -1000, 1324, 1420, 1318, 118, -1000, 1532, 1718, 694,
	694, -1000, 976, -1000, 1162, -1000, -1000, 388, -1000, 1764,
	34336, 1566, 1565, 1562, -1000, -381, 972, 1501, 1457, 14168,
	1499, 1818, 1341, 34336, -1000, -1000, 34336, -1000, -1000, 367,
	-1000, 179, 34336, -1000, -1000, -1000, 244, 34336, -1000, 5443,
	124, -1000, -1000, -1000, -1000, -1000, -1000, 34336, 139, -1000,
	1493, 1191, -1000, -1000, 1539, -1000, -1000, -1000, -1000, 121,
	195, -1000, 34336, 572, 1555, 34336, -1000, -1000, -1000, 823,
	823, -1000, -1000, 1716, -1000, 1162, 14713, 14713, -1000, 595,
	-1000, 1466, 1206, 1490, 1490, -1000, 1490, 1491, -1000, 1490,
	83, 1490, 62, 1490, -1000, -1000, 1206, 1206, 872, 922,
	-110, -1000, 888, 14168, 1115, 894, 1001, -1000, 1489, 1488,
	-1000, -1000, 1206, -1000, -1000, 1786, 1786, 1786, 1313, -1000,
	34336, -1000, -1000, -1000, -1000, 1833, 1806, 1411, -1000, 6,
	337, -1000, 1658, 1652, -1000, 1817, 1680, 1816, -1000, -1000,
	-1000, 888, -1000, 1749, 1281, -1000, 690, 1308, -1000, -1000,
	13078, 1315, 1641, 539, 1313, 1443, 1603, 1547, 1561, 1527,
	-1000, -1000, -1000, -1000, 1611, -1000, 1608, -1000, -1000, 1469,
	-1000, -1000, 1277, 252, 22890, 1344, 1344, -1000, 514, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 807, 5132, 1854, -1000,
	1092, -1000, 1107, -1000, 750, 734, -1000, 34336, 1487, -1000,
	313, 1089, 313, 955, -1000, 932, -1000, -1000, -229, -1000,
	-1000, 1483, 1554, -1000, -1000, 34336, -1000, -1000, 34336, 34336,
	34336, 1486, 1814, -1000, 14168, 1478, 684, 1090, 34336, 34336,
	-1000, -1000, 243, 1466, -1000, 1311, 1291, -1000, -148, -1000,
	14168, -1000, -1000, -1000, 1096, 1096, -1000, 1469, -1000, -1000,
	-1000, 1267, -1000, -1000, -136, 34336, 34336, 34336, 34336, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 595, 14713,
	-1000, -1000, 313, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 14168, -1000, 14168, -1000, 1800, 1088, 888, 14168,
	14168, -1000, 920, 917, -1000, 1466, 1648, 1466, 1466, 19620,
	-1000, 1806, 1828, 1810, 1666, 1669, 1669, 1658, -1000, 1809,
	1807, -1000, 1081, 1805, 1078, 732, -1000, 34336, 14168, 1466,
	-1000, 298, 34336, 1466, 34336, -1000, 1813, -1000, -1000, 14168,
	1475, -1000, 14168, -1000, -1000, -1000, -1000, -1000, 1833, 1344,
	-1000, -1000, 647, -1000, 14168, -1000, -1000, -1000, 132, -1000,
	-1000, -1000, -1000, -1000, 1473, 14168, -1000, -1000, -1000, 1259,
	1252, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1469,
	-1000, -1000, -1000, -1000, 244, -375, 1061, 34336, 891, -1000,
	1285, 1341, 418, -1000, 14168, 307, -1000, 244, -1000, -190,
	-192, 1001, -1000, -1000, 1770, -1000, -1000, 8687, -1000, -1000,
	1467, 1550, -1000, 221, -1000, 1001, 1001, 1206, -1000, 1001,
	1001, 1246, 1211, 19075, -1000, 1804, 1802, 22345, 22345, 605,
	1828, -1000, 14168, 14168, 1664, 846, -1000, -1000, -1000, -1000,
	1071, 1003, -1000, 990, -1000, 1853, -1000, 888, -1000, 1466,
	-1000, 500, 1308, -1000, 1800, 888, 34336, 888, 1813, -1000,
	1001, -1000, 1466, 34336, 967, -1000, -1000, 1768, 1255, 49,
	-1000, 1242, -1000, -1000, -1000, -1000, 12533, -1000, -1000, -1000,
	-1000, -1000, -1000, 278, 1338, -1000, 673, 34336, 34336, 1206,
	232, -139, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1235,
	-1000, -1000, -1000, -1000, -1000, 1235, 1235, -1000, -1000, 888,
	1322, -1000, 834, -1000, -1000, -1000, -1000, -1000, 34336, 1308,
	34336, -1000, 1232, 1800, -1000, 1230, -1000, 278, -1000, 1451,
	1457, -1000, 1206, -132, 8687, 5922, 1227, -1000, -1000, 1630,
	-125, -146, 21800, -1000, -1000, -1000, -1000, -1000, 1238, -1000,
	-1000, -1000, 1560, 665, -132, 14168, 1450, -1000, -1000, -46,
	-1000, -1000, -1000, -1000, -1000, 1539, -1000, 1569, -1000, -1000,
	-1000, 1558, -1000, 1838, -1000, -1000, -1000, 799, 970, -1000,
	-1000, -1000, -1000, 956, 34336, 327, -1000, -1000, -136, -137,
	-1000, 1852, 511, 511, -1000, -1000, -384, 1210, 140, -1000,
	-144, -1000, -1000, -1000, 317, 915, -1000, -1000, 853, -384,
	-1000, -152, -1000, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2203, 2202, 13, 4, 2200, 68, 81, 163, 11,
	175, 79, 2195, 2194, 2192, 2190, 2188, 2187, 2186, 198,
	197, 192, 2185, 2184, 2183, 2182, 2181, 2180, 2178, 2172,
	2166, 2165, 194, 140, 158, 2163, 2162, 2157, 100, 144,
	66, 76, 154, 2154, 2153, 55, 2152, 2151, 2150, 179,
	178, 749, 2147, 176, 99, 26, 2146, 2145, 2144, 2143,
	2141, 2139, 2137, 2136, 2134, 2131, 2129, 2127, 2126, 2125,
	277, 2124, 2123, 5, 2122, 58, 2120, 2117, 2116, 115,
	2114, 2113, 2112, 2111, 2108, 2107, 126, 2106, 2105, 2104,
	2103, 160, 2102, 2101, 294, 89, 102, 2100, 2099, 82,
	157, 2097, 101, 2096, 2094, 2093, 143, 2092, 1705, 2091,
	49, 40, 2090, 46, 117, 39, 38, 2089, 2087, 2086,
	36, 71, 2085, 95, 59, 2082, 84, 92, 2064, 42,
	2059, 2058, 96, 2057, 2055, 2054, 77, 2052, 2050, 3733,
	2049, 80, 116, 93, 52, 2047, 23, 32, 2044, 2043,
	2042, 2040, 2039, 27, 2038, 2037, 2036, 122, 18, 2032,
	24, 33, 29, 134, 2026, 37, 60, 2024, 120, 2022,
	2021, 35, 14, 19, 2018, 17, 111, 149, 16, 67,
	118, 2017, 2015, 31, 48, 2013, 2012, 2011, 2010, 2009,
	2008, 47, 2007, 28, 2002, 180, 2001, 6, 30, 21,
	2000, 41, 171, 45, 12, 1998, 162, 1997, 34, 139,
	106, 136, 1995, 1993, 1992, 145, 235, 1989, 1987, 73,
	150, 127, 132, 1984, 245, 1982, 1977, 78, 1503, 2385,
	15, 138, 1976, 1968, 3026, 133, 119, 50, 1967, 275,
	1962, 1961, 1960, 165, 147, 97, 958, 88, 1959, 1958,
	1956, 1954, 1949, 1946, 1944, 1943, 181, 168, 91, 83,
	164, 53, 1941, 1940, 1939, 104, 70, 1935, 137, 131,
	108, 85, 1929, 151, 128, 107, 1922, 90, 1921, 1920,
	1919, 1917, 65, 1916, 1909, 1906, 1902, 155, 129, 103,
	61, 1901, 63, 98, 130, 135, 22, 1900, 20, 1897,
	1896, 153, 10, 1893, 3, 0, 1886, 7, 152, 240,
	142, 1883, 1882, 1, 1880, 2, 1879, 1876, 125, 1875,
	1874, 1873, 9, 25, 8, 1872, 1871, 1870, 43, 3043,
	110, 1867, 173,
}

//line sql.y:6197
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 326, 327, 327, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 305, 305,
	305, 308, 308, 30, 65, 32, 32, 31, 31, 34,
	34, 33, 6, 6, 6, 7, 7, 7, 7, 7,
	7, 7, 7, 8, 8, 8, 8, 8, 9, 9,
	9, 9, 11, 11, 11, 11, 11, 17, 18, 10,
	10, 19, 19, 77, 77, 20, 21, 21, 21, 21,
	330, 330, 134, 134, 132, 132, 133, 133, 201, 201,
	22, 23, 23, 211, 211, 210, 210, 210, 212, 212,
	212, 212, 246, 246, 24, 24, 24, 24, 24, 92,
	92, 307, 307, 306, 304, 304, 303, 303, 302, 36,
	37, 46, 46, 46, 46, 47, 48, 309, 309, 278,
	52, 52, 51, 51, 51, 51, 53, 53, 50, 50,
	49, 49, 280, 280, 267, 267, 279, 279, 279, 279,
	279, 279, 279, 266, 266, 103, 103, 181, 181, 181,
	181, 181, 181, 181, 181, 181, 181, 181, 321, 321,
	182, 182, 182, 182, 182, 182, 112, 112, 120, 120,
	120, 120, 110, 110, 111, 109, 109, 109, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 325, 325, 325, 325, 325, 325, 325, 325, 325,
	325, 119, 119, 116, 116, 116, 117, 117, 117, 322,
	322, 322, 322, 249, 249, 249, 249, 252, 252, 250,
	250, 250, 250, 250, 250, 250, 250, 250, 251, 251,
	251, 251, 251, 253, 253, 253, 253, 253, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 255, 255, 255, 255, 255, 255, 255,
	255, 265, 265, 256, 256, 260, 260, 261, 261, 261,
	262, 262, 262, 263, 263, 258, 258, 258, 258, 258,
	258, 259, 259, 259, 268, 292, 292, 291, 291, 289,
	289, 289, 289, 277, 277, 286, 286, 286, 286, 286,
	276, 276, 272, 272, 272, 273, 273, 274, 274, 271,
	271, 275, 275, 288, 288, 287, 269, 269, 270, 270,
	294, 323, 323, 323, 323, 324, 324, 295, 314, 315,
	313, 313, 313, 313, 313, 75, 75, 75, 223, 223,
	223, 284, 284, 283, 283, 283, 285, 285, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 282, 282, 282, 282,
	282, 282, 282, 282, 282, 282, 218, 218, 218, 312,
	312, 312, 312, 312, 312, 311, 311, 311, 281, 281,
	281, 310, 310, 54, 54, 166, 166, 43, 43, 43,
	43, 43, 43, 42, 42, 42, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 38,
	38, 38, 38, 38, 38, 38, 38, 38, 38, 44,
	44, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	79, 79, 80, 80, 80, 80, 81, 81, 81, 297,
	297, 55, 55, 3, 3, 1, 1, 2, 2, 4,
	4, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 264, 264, 264, 296, 296, 298, 300,
	300, 300, 300, 299, 88, 88, 26, 35, 35, 27,
	27, 27, 27, 28, 28, 56, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 57,
	57, 57, 57, 57, 316, 316, 217, 217, 225, 225,
	216, 216, 239, 239, 239, 219, 219, 219, 220, 220,
	320, 320, 320, 58, 58, 58, 60, 60, 61, 62,
	62, 241, 241, 242, 242, 63, 64, 76, 76, 76,
	76, 76, 76, 78, 78, 78, 13, 13, 13, 13,
	72, 72, 72, 12, 12, 59, 59, 66, 317, 317,
	318, 319, 319, 319, 319, 67, 69, 29, 29, 29,
	29, 29, 29, 98, 98, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 93, 93, 93,
	87, 87, 331, 70, 71, 71, 91, 91, 91, 84,
	84, 84, 90, 90, 90, 14, 14, 15, 15, 200,
	200, 16, 95, 95, 97, 97, 97, 97, 97, 99,
	99, 99, 99, 99, 99, 99, 94, 94, 96, 96,
	96, 96, 232, 232, 232, 231, 231, 123, 123, 125,
	124, 124, 126, 126, 127, 127, 127, 164, 142, 142,
	198, 198, 197, 197, 199, 199, 199, 199, 202, 202,
	128, 128, 128, 128, 129, 129, 130, 130, 131, 131,
	240, 240, 237, 237, 237, 236, 236, 135, 135, 135,
	137, 136, 136, 136, 136, 138, 138, 140, 140, 139,
	139, 141, 146, 146, 145, 145, 143, 143, 143, 143,
	144, 144, 144, 144, 147, 147, 108, 108, 108, 108,
	108, 108, 118, 118, 118, 118, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 214, 214, 148, 148, 156, 156, 156,
	156, 149, 149, 149, 149, 149, 149, 149, 157, 157,
	157, 163, 158, 158, 154, 154, 154, 154, 152, 152,
	152, 152, 152, 152, 152, 152, 152, 152, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 332, 332,
	257, 257, 257, 155, 155, 155, 155, 155, 89, 89,
	89, 89, 89, 245, 245, 245, 248, 248, 248, 247,
	247, 247, 247, 247, 247, 247, 247, 247, 247, 247,
	247, 247, 247, 247, 169, 169, 85, 85, 167, 167,
	168, 170, 170, 165, 165, 165, 151, 151, 151, 171,
	171, 172, 172, 173, 173, 175, 174, 174, 176, 177,
	177, 177, 178, 178, 179, 179, 179, 45, 45, 45,
	45, 45, 40, 40, 40, 40, 41, 41, 41, 100,
	100, 100, 100, 102, 102, 101, 101, 73, 73, 74,
	74, 74, 106, 106, 107, 107, 107, 104, 104, 105,
	105, 195, 195, 180, 180, 180, 187, 187, 187, 183,
	183, 185, 185, 185, 186, 186, 186, 184, 192, 192,
	194, 194, 193, 193, 189, 189, 190, 190, 191, 191,
	191, 188, 188, 150, 150, 150, 150, 150, 196, 196,
	196, 196, 203, 203, 160, 160, 162, 162, 161, 122,
	204, 204, 208, 205, 205, 209, 209, 209, 209, 209,
	206, 206, 207, 207, 233, 233, 233, 213, 213, 224,
	224, 221, 221, 222, 222, 215, 215, 226, 226, 226,
	68, 159, 159, 293, 293, 290, 229, 229, 230, 230,
	234, 234, 238, 238, 235, 235, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 328, 329, 243, 244, 244, 244,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 9,
	8, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 6,
	4, 7, 8, 8, 8, 6, 3, 1, 1, 5,
	0, 1, 1, 1, 2, 2, 0, 1, 4, 4,
	4, 4, 2, 4, 1, 3, 1, 1, 3, 4,
	3, 3, 3, 5, 10, 0, 2, 0, 2, 3,
	5, 3, 4, 2, 3, 2, 3, 3, 1, 1,
	0, 2, 2, 3, 3, 2, 1, 1, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	1, 2, 1, 3, 1, 1, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 2, 2, 2, 2, 3, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 1, 1,
	1, 5, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 0, 3, 0, 5, 0, 3, 5,
	0, 1, 1, 0, 1, 0, 2, 2, 2, 1,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 4, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	7, 5, 6, 6, 7, 0, 1, 5, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 1, 0, 1,
	2, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	4, 4, 3, 3, 3, 3, 4, 4, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 4, 5, 0, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 1, 0, 2, 0, 1, 5,
	1, 3, 7, 1, 3, 3, 1, 2, 2, 2,
	5, 5, 5, 6, 8, 6, 5, 5, 2, 2,
	2, 2, 3, 3, 3, 4, 1, 3, 5, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	0, 6, 5, 6, 4, 5, 0, 8, 9, 0,
	3, 0, 1, 0, 3, 1, 1, 0, 2, 0,
	2, 5, 3, 7, 4, 4, 4, 4, 3, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 0, 2, 2, 1, 3, 2, 0,
	4, 4, 3, 2, 1, 3, 3, 3, 5, 7,
	7, 6, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 4, 4, 4, 3, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 0, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 3, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 4, 4, 2, 4, 0,
	1, 3, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 2,
	3, 5, 0, 1, 2, 1, 1, 0, 1, 2,
	1, 3, 1, 1, 1, 4, 3, 3, 3, 7,
	0, 3, 1, 3, 1, 1, 3, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 1, 1, 2, 6, 5, 6, 6,
	0, 2, 3, 3, 0, 2, 3, 3, 3, 2,
	3, 1, 3, 4, 3, 1, 3, 4, 5, 6,
	3, 4, 5, 6, 3, 4, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 6, 6, 6, 2, 2,
	3, 3, 3, 0, 3, 1, 1, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 4, 5, 5, 6, 4, 4,
	8, 6, 8, 6, 8, 5, 4, 2, 2, 1,
	2, 2, 2, 8, 8, 6, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 2, 3, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 0, 5, 5, 2,
	3, 1, 2, 2, 1, 2, 1, 2, 2, 1,
	2, 2, 1, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 1, 0,
	1, 2, 4, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -326, -5, -9, -17, -18, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -56, -57, -58, -60,
	-61, -62, -63, -64, -12, -59, -29, -30, -65, -66,
	-67, -68, -69, -14, -15, -16, -7, -6, -11, 7,
	8, -77, -31, 30, -36, -46, 203, -47, -37, 204,
	-48, 206, 205, 242, 207, 235, 72, 284, 285, 287,
	288, 289, 290, -78, 240, 241, 209, 34, 43, 31,
	32, 35, 213, 248, 249, 212, -8, -32, 6, -328,
	9, 410, 237, 236, 26, -10, 424, 83, -327, 558,
	-195, -180, 20, 31, 27, -179, -175, -91, -180, 18,
	16, 5, -70, -331, -70, -70, 10, 11, -70, -278,
	-280, 83, 140, 83, -70, -52, -51, -50, -49, -53,
	29, -43, -44, -301, -42, -39, 208, 205, 252, 107,
	108, 242, 243, 244, 207, 226, 241, 245, 240, 261,
	-38, 78, 31, 424, 427, -285, 204, 210, 211, 411,
	110, 109, 73, 206, -282, 336, 528, -53, 530, 99,
	101, 529, 42, 216, 531, 532, 533, 534, 225, 535,
	536, 537, 538, 544, 545, 546, 547, 111, 5, -70,
	-238, -234, -305, -228, 86, 87, 88, 421, 228, 455,
	456, 277, 78, 39, 333, 336, 528, 284, 298, 292,
	319, 311, 422, 457, 280, 229, 265, 525, 309, 116,
	530, 283, 458, 243, 341, 342, 343, 99, 287, 378,
	543, 282, 459, 541, 101, 529, 77, 49, 42, 238,
	307, 303, 531, 266, 460, 432, 259, 110, 107, 550,
	34, 301, 48, 28, 540, 109, 47, 532, 131, 461,
	533, 345, 324, 519, 46, 346, 244, 462, 81, 426,
	527, 347, 302, 348, 276, 539, 209, 463, 511, 349,
	350, 520, 464, 325, 329, 465, 370, 351, 557, 50,
	466, 467, 521, 108, 468, 76, 534, 296, 297, 469,
	274, 227, 372, 323, 225, 33, 352, 423, 278, 56,
	253, 373, 44, 327, 554, 43, 515, 470, 518, 322,
	318, 51, 471, 472, 473, 474, 535, 321, 295, 317,
	549, 444, 271, 536, 60, 211, 331, 330, 332, 260,
	369, 314, 475, 476, 477, 232, 79, 478, 304, 19,
	479, 480, 353, 267, 481, 54, 482, 483, 376, 241,
	484, 52, 537, 37, 246, 551, 538, 485, 486, 487,
	488, 489, 355, 490, 354, 326, 328, 255, 356, 425,
	491, 300, 245, 542, 492, 233, 526, 247, 252, 240,
	377, 234, 493, 494, 495, 496, 497, 281, 498, 499,
	288, 544, 41, 500, 501, 502, 503, 275, 270, 371,
	380, 59, 80, 338, 504, 524, 294, 268, 505, 285,
	53, 545, 546, 547, 262, 548, 7, 555, 556, 358,
	111, 272, 273, 45, 315, 254, 506, 507, 305, 306,
	320, 293, 316, 286, 512, 256, 359, 242, 508, 379,
	269, 334, 339, 429, 261, 360, 523, 428, 313, 310,
	263, 509, 361, 217, 257, 258, 510, 513, 362, 363,
	279, 364, 365, 366, 367, 368, 264, 427, 291, 308,
	340, 391, 392, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 419,
	215, -70, 215, -139, -234, 215, -206, 342, -225, 344,
	357, 352, 362, 350, -217, 353, 355, 255, -320, 370,
	215, 359, 203, 157, 345, 354, 363, 364, 279, 365,
	368, 264, -316, -305, 533, 548, 116, 312, 349, 347,
	371, 515, 367, 366, -234, 286, -241, 291, -229, -305,
	-228, 289, -139, -76, 511, 207, -243, -243, -93, 515,
	517, -158, -108, 124, -118, -121, -113, -114, -152, -153,
	-154, -155, -119, -165, 146, 147, 154, 125, -163, -122,
	24, 420, 412, 411, 157, 29, 199, 66, 67, 414,
	415, 127, 55, 387, 388, -120, 383, 389, 384, 417,
	418, 102, 419, -229, -234, 220, 382, 214, 152, 410,
	-115, -111, -6, -161, 381, 385, 386, 390, -305, -228,
	-117, -116, -148, 89, 95, 100, 96, -325, 103, -328,
	90, 91, 92, 93, 94, 104, 105, 158, 159, 160,
	161, 162, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 174, 175, 176, 177, 178, 179, 180,
	181, 182, 183, 184, 185, 186, 187, 188, 189, 190,
	191, 192, 193, 194, 195, 196, 197, 198, 42, 358,
	358, -139, -70, -229, -229, 248, -173, -91, -175, -8,
	-6, -328, 6, -70, -6, -7, -11, -32, -34, 451,
	-33, -234, -180, -195, 10, 142, 40, 48, -178, -179,
	-10, -6, -108, 17, 21, 22, -96, 148, -108, -234,
	-71, -96, -215, 219, -70, -70, -205, -246, 286, -209,
	371, 370, -230, -207, -229, -227, -206, 369, 208, 430,
	123, 23, 25, 126, 157, 17, 127, 35, 210, 312,
	226, 156, 222, 411, 203, 70, 431, 383, 384, 381,
	387, 413, 414, 382, 344, 212, 29, 11, 433, 26,
	236, 22, 36, 150, 205, 130, 239, 249, 24, 237,
	102, 105, 436, 20, 73, 231, 12, 224, 38, 14,
	437, 438, 15, 220, 219, 142, 216, 68, 9, 199,
	27, 139, 64, 439, 118, 440, 441, 442, 443, 66,
	140, 18, 552, 385, 386, 31, 516, 420, 250, 152,
	71, 57, 517, 124, 445, 446, 103, 447, 106, 74,
	522, 120, 16, 69, 40, 448, 251, 449, 248, 221,
	553, 450, 374, 451, 141, 206, 410, 67, 452, 214,
	357, 6, 416, 30, 235, 223, 113, 65, 453, 215,
	129, 417, 418, 218, 104, 5, 117, 32, 10, 72,
	75, 388, 389, 390, 55, 112, 424, 128, 13, 454,
	375, 122, 116, -279, 140, -266, -270, -229, 230, -295,
	226, -139, -288, -287, -229, -92, -224, 216, 224, 223,
	117, -309, 120, 272, 382, 214, -49, -50, -206, 156,
	-79, 247, 251, 84, 84, -270, -269, -268, -310, 251,
	230, -294, -286, 222, 231, -276, 223, 224, -271, 216,
	118, -310, -271, 221, 231, 251, 251, 111, 251, 111,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 246,
	-277, 132, -277, 428, 428, -282, -310, -310, -310, 218,
	33, 33, -226, -271, 218, 23, -277, -277, -206, 156,
	-277, -277, -277, -277, 259, 259, -277, -277, -277, -277,
	-277, -277, -277, -277, -277, -277, -277, -277, -277, -277,
	-277, 215, -309, -100, 368, 279, 78, -51, 261, -35,
	-139, -224, 216, 217, -309, -139, 200, -139, -219, 140,
	13, -219, -216, 358, 356, 343, 348, -219, -219, -219,
	-219, 262, 341, -272, 216, 33, 227, 358, 262, 341,
	262, 263, 262, 263, 351, 361, 262, -239, 12, 142,
	382, 346, 350, 255, 215, 256, 217, 360, -305, 518,
	263, -239, 90, -220, 140, 358, 258, -219, -244, -328,
	-230, 312, -244, -244, 30, 87, 218, -229, -72, -229,
	90, -13, -9, -20, -19, -21, 132, -98, 358, -86,
	157, 533, 519, 520, 521, 518, 355, 526, 524, 522,
	262, 523, 84, 120, 122, 123, -108, 139, -149, 132,
	133, 134, 135, 136, 137, 138, 142, 124, 126, 140,
	141, 121, 143, 144, 145, 146, 147, 148, 149, 151,
	150, 152, 153, 156, 201, 202, -114, -114, -114, -114,
	-163, -328, -328, -328, -114, -214, -328, -114, -328, -328,
	-328, -328, -169, -108, -328, -332, -328, -332, -332, -257,
	-328, -257, -328, -328, -328, -328, -328, 200, -328, -328,
	-328, -328, -328, -257, -257, -257, -257, 100, 95, 89,
	-165, 96, 90, -229, -234, -6, -7, -158, -243, -317,
	-318, -142, -139, -328, 279, 12, 75, -229, -178, -10,
	-6, -173, -179, -175, -6, -70, -84, -97, 61, 62,
	-99, 22, 36, 65, 63, 21, -329, 85, -329, -195,
	-329, 84, -34, -198, 83, 59, 41, 90, 90, 84,
	19, -174, -176, -108, 12, -232, -231, 23, -229, 90,
	200, 98, 12, -140, 27, -139, -215, -215, 84, 286,
	-209, -246, -211, -210, 372, 374, 132, -233, -229, 90,
	29, 85, 84, -139, -249, -252, -254, -253, -255, -250,
	-251, 309, 310, 157, 313, 315, 316, 317, 318, 319,
	320, 321, 322, 323, 324, 30, 238, 305, 306, 307,
	308, 325, 326, 327, 328, 329, 330, 331, 332, 292,
	311, 422, 293, 294, 295, 296, 297, 298, 300, 301,
	302, 303, 304, -308, -305, 83, 85, 84, -256, 83,
	-100, 215, -305, 216, 216, 216, -70, 410, -277, -277,
	246, 17, -42, -39, -301, 16, -38, -39, 208, 107,
	108, 205, 83, -266, 83, -275, -308, -305, 83, 118,
	221, 117, -274, -271, -274, -275, -305, -165, -305, 118,
	118, -202, -229, -202, -202, 21, -202, 21, -202, 21,
	92, -229, -202, 21, -202, 21, -202, 21, -202, 21,
	-202, 21, 29, 76, 77, 29, 79, 80, 81, -165,
	-165, -266, -206, -139, -305, 92, 92, -277, -277, 92,
	90, 90, 90, -277, -277, 92, 90, -236, -234, 90,
	-311, 232, 276, 278, 92, 92, 92, 92, 29, 90,
	-312, 29, 540, 539, 541, 542, 543, 92, 29, 92,
	29, 92, -229, 83, -139, -106, 266, 203, 205, 208,
	74, 90, 280, 132, 42, 84, 218, 215, -305, -221,
	220, -221, -235, -234, -227, 90, -108, -273, 12, 142,
	-239, -239, -219, -139, -273, -239, -219, -139, -219, -219,
	-219, -219, -239, -239, -239, -219, -234, -234, -139, -139,
	-139, -139, -139, -139, -139, -244, -244, -244, -220, -219,
	518, 90, 74, -242, 289, 323, 512, 513, 514, 84,
	424, -132, -139, 518, 518, 518, 518, 518, 518, -108,
	-108, -108, -108, -156, 103, 124, 104, 105, -121, -157,
	-161, -163, 97, 142, 126, 140, 141, -113, -114, -113,
	-113, -113, -113, -113, -113, -113, -113, -113, -113, -113,
	-113, -113, -245, -305, 90, 157, 90, 90, -94, -96,
	-108, -108, -305, -229, -94, -94, -108, -90, 22, 36,
	-167, -168, 128, -165, -329, -329, 92, -229, -229, -83,
	-82, 392, 393, 394, 395, 397, 398, 399, 402, 403,
	407, 408, 391, 409, 396, 401, 404, 405, 406, 400,
	308, -108, -95, 22, 36, -94, -230, -235, -227, -94,
	-95, -95, -94, -94, 200, -195, -329, 84, -319, 374,
	375, 516, -237, 251, -236, 23, -159, -158, 90, 90,
	-229, -200, -197, -229, -178, -178, 61, 62, 57, -94,
	-99, -329, -33, 23, -197, 60, 90, -258, -206, 333,
	334, -108, -108, 84, -177, 25, 26, -139, -231, 148,
	-235, -139, -201, 251, -139, -124, -126, -127, -128, -142,
	-164, -328, 12, -132, -133, -141, -234, -209, -211, 84,
	373, 375, 376, 74, 106, -108, -259, 156, -284, -283,
	-282, -266, -268, -269, -270, 85, -259, -262, 339, 338,
	-256, -256, -256, -256, -256, -258, -258, -258, -258, 83,
	83, -256, -256, -256, -256, -260, 83, -260, -260, -261,
	83, -261, -295, -108, -292, -291, -289, -290, 225, 99,
	424, 75, -287, -177, 92, -106, -222, 220, -293, -290,
	-305, -305, -305, -222, -305, 90, -305, 90, -80, -55,
	-1, 552, 553, 554, 84, 17, -267, -266, -54, 276,
	-298, -299, 251, -294, -288, -275, 118, -274, -275, -275,
	-305, 84, 27, 111, 111, 111, 111, 424, 205, 30,
	-266, -54, -245, 218, -245, -245, 90, 90, -218, 548,
	-132, -102, 268, 132, 257, 257, 215, 215, 270, -139,
	281, 283, 282, 280, 21, 269, 271, 273, 259, -139,
	-139, -221, 74, -134, -139, 24, -234, -139, -219, -219,
	-139, -219, -219, -139, -229, -86, 374, 84, 424, 20,
	-87, 20, 103, 104, 105, -157, -113, -114, -113, 123,
	239, 84, -329, 23, 84, 75, -329, -329, -329, 84,
	12, -94, -170, -168, 130, -108, -329, -329, 84, 84,
	12, -248, 23, -329, -94, -94, -328, 200, -329, -329,
	-329, -329, -329, -230, -318, 515, 375, -146, -145, -143,
	72, 219, 73, -328, -236, -329, 84, -151, -229, 92,
	96, -180, -123, -125, 12, -99, -163, 85, -258, -184,
	-189, -216, -229, 90, 157, -176, 200, -147, 13, -150,
	30, 55, -9, -328, -328, 30, 84, -135, -137, -136,
	-138, 64, 68, 70, 65, 66, 67, 71, -240, 23,
	-124, -7, -6, -328, -139, -132, -330, 12, 75, -330,
	84, 200, -210, -212, 377, 374, 380, -305, 90, -79,
	84, -282, -270, -181, -103, 38, -263, 340, -258, -258,
	-265, 90, -265, 92, 92, 85, -45, -40, -41, 31,
	78, -289, -277, 90, 37, -229, 85, -102, -139, 124,
	74, -293, -293, -293, -234, -2, 551, 557, 118, 83,
	343, 16, -197, 84, 85, -166, 277, 85, -300, 55,
	-229, 85, 83, -275, -275, -229, -328, 215, 29, 29,
	-54, -166, -259, -305, 550, 549, 85, 217, 275, -107,
	387, -104, 90, 86, -139, -139, -139, -139, -139, 208,
	205, 260, 218, -132, -139, 84, -75, 234, 229, -239,
	-239, 31, -139, 374, 527, 525, 123, 239, -121, -114,
	-96, 421, -247, 157, 309, 238, 307, 303, 323, 314,
	338, 305, 339, 302, 301, 300, -247, -245, -108, -108,
	-173, 131, -108, 129, -108, -108, -108, -329, 157, 309,
	-329, -329, -95, -230, -143, -271, -271, -271, -202, -229,
	-213, 20, 12, 55, 55, -123, -147, -124, -99, -187,
	511, -192, 44, -190, -191, 45, -188, 46, 54, 148,
	-178, -108, -203, 74, -204, -208, -165, -160, -162, -161,
	-328, -196, -329, -229, -202, -204, -126, -127, -127, -126,
	-127, 64, 64, 64, 69, 64, 69, 64, -136, -234,
	-329, -329, -7, -237, 75, -124, -124, -141, -234, 148,
	374, 378, 379, -282, -324, 103, 124, 29, 74, 336,
	99, -322, 156, -323, 221, 117, 118, 233, 23, 39,
	85, 84, 85, 84, 85, 84, -223, 461, 124, -41,
	-40, -277, -277, 92, -305, 217, 24, -139, 74, 74,
	74, -81, 555, 92, 83, -3, 78, -108, 83, 17,
	-266, -165, 253, 142, -292, -197, -296, -298, -139, -110,
	-328, -109, -111, -115, 146, 147, -166, -139, -101, 266,
	274, 83, -105, 87, -307, 75, 257, 336, 257, -139,
	-75, -45, -139, -219, -219, 31, -305, -121, -114, -328,
	-329, -256, -256, -256, -261, -256, 297, -256, 297, -256,
	-329, -329, 84, -329, 20, -329, -85, 416, -108, 84,
	84, -329, 83, 83, -329, -144, 20, -144, -144, -329,
	-139, -147, -171, 14, -184, 49, 315, -194, -193, 53,
	45, -191, 17, 47, 17, 28, -203, 84, 132, 84,
	-329, -329, 84, 55, 200, -329, -147, -130, -129, 74,
	75, -131, 74, -129, 64, 64, -198, -329, -201, -124,
	-147, -147, 200, 103, -328, -112, -120, -110, 10, 90,
	90, -305, 118, 118, -139, 83, -258, 90, -258, 92,
	92, 461, 29, 79, 80, 81, 29, 76, 77, -139,
	-139, -139, -139, -297, 83, 17, -108, 83, 132, 85,
	-197, -197, 254, -161, -328, 85, -329, 84, -264, 424,
	427, -108, -116, -116, -198, 85, -304, 424, -306, -229,
	-229, -229, -229, -113, -258, -108, -108, -178, 90, -108,
	-108, 92, 92, -328, 64, 16, 14, -328, -328, -237,
	-171, -172, 15, 17, -185, 51, -183, 50, -183, -193,
	17, 17, 90, 17, 90, 118, -208, -108, -162, 55,
	-9, -229, -160, -229, -173, -108, 83, -108, -147, -147,
	-108, -153, 419, 83, -108, 85, 85, -198, -296, -55,
	85, -197, 92, 85, -161, -88, -328, 250, -323, -298,
	428, 428, -329, 23, -303, -302, -230, 83, 75, -89,
	142, 424, -329, -329, -329, -329, -329, 85, 85, -199,
	-329, -229, 221, 17, 17, -199, -199, -146, -172, -108,
	-158, -186, 52, 74, 106, 90, 90, 90, 10, -160,
	200, -178, -197, -173, -329, -197, 85, 23, 85, 557,
	118, 85, 250, -9, 84, 132, -197, -139, -329, 422,
	71, 425, 84, -329, -329, -329, 74, 106, -204, -229,
	85, -178, 85, -182, -9, 83, -3, -329, -73, 424,
	-302, -281, -230, 90, 92, 85, 60, 423, 426, -229,
	221, -314, -315, 74, -324, -321, 103, 124, 99, -322,
	112, 113, -73, -108, 83, -74, 265, 515, -307, 60,
	-315, 74, 11, 10, 103, 90, 85, -197, 226, -304,
	424, -313, 234, 229, 232, 30, -313, -4, 556, 85,
	267, 425, 228, 29, 103, 92, -4, 426,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 712,
	712, 712, 0, 712, 0, 0, 712, -2, -2, 712,
	1142, 0, 712, 0, 0, -2, 644, 646, 0, 648,
	-2, 0, 0, 657, 1595, 1595, 707, 0, 0, 0,
	0, 0, 712, 0, 0, 0, 1003, 48, 712, 0,
	83, 84, 663, 664, 665, 63, 0, 1593, 1, 3,
	69, 73, 0, 0, 0, 56, 1012, 0, 76, 0,
	0, 716, 0, 714, 0, 1125, 712, 712, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 142, 143, 0,
	147, 510, 450, 493, 448, 479, -2, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	453, 343, 343, 0, 0, -2, 441, 441, 441, 0,
	0, 0, 476, 1127, 396, 343, 343, 0, 343, 343,
	343, 343, 0, 0, 343, 343, 343, 343, 343, 343,
	343, 343, 343, 343, 343, 343, 343, 343, 343, 1029,
	146, 1143, 1140, 1141, 38, 39, 40, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552,
	1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562,
	1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572,
	1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582,
	1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592,
	0, 1119, 0, 574, 809, 0, 635, 635, 0, 635,
	635, 635, 635, 0, 0, 0, 586, 0, 0, 0,
	0, 632, 0, 0, 605, 607, 0, 632, 0, 638,
	0, 619, 635, 1596, 1596, 1596, 1110, 0, 629, 627,
	641, 642, 624, 625, 643, 647, 0, 652, 655, 1136,
	1137, 0, 670, 47, 1371, 662, 675, 676, 0, 708,
	709, 43, 902, 0, 831, 835, 846, 859, 860, 861,
	862, 863, 865, 866, 0, 0, 0, 0, 871, 872,
	0, 0, 0, 0, 0, 883, 0, 0, 0, 0,
	0, 984, 0, 948, 948, 919, 948, 950, 950, 0,
	0, 0, 1592, 993, 0, 0, 0, 0, 0, 0,
	251, 252, 901, 1099, 950, 950, 950, 950, -2, -2,
	198, 199, 200, 201, 202, 203, 204, 0, 194, 0,
	256, 257, 253, 254, 255, 885, 886, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 240, 241, 242,
	243, 244, 245, 246, 247, 248, 249, 250, 1595, 0,
	685, 0, 0, 0, 727, 0, 1012, 0, 1004, 1003,
	61, 0, 712, -2, 0, 0, 0, 0, 45, 0,
	50, 770, 75, 74, 1051, 0, 0, 0, 57, 1013,
	65, 67, 1014, 0, 717, 718, 0, 748, 752, 0,
	713, 0, 0, 1126, 1125, 1125, 100, 0, 1536, 1103,
	-2, -2, 0, 0, 1138, 1139, 1112, -2, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, -2, 0, 0, 156, 157, 0, 41, 369,
	0, 152, 0, 363, 313, 1029, 0, 0, 0, 0,
	0, 712, 0, 1120, 137, 138, 144, 145, 343, 343,
	490, 0, 0, 146, 146, 457, 458, 459, 0, 0,
	-2, 367, 0, 442, 0, 0, 357, 357, 361, 359,
	360, 0, 0, 0, 0, 0, 0, 470, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 552,
	0, 344, 0, 488, 489, 397, 0, 0, 0, 0,
	468, 469, 0, 0, 1128, 1129, 0, 0, 343, 343,
	0, 0, 0, 0, 343, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 1042, 0, 0, 0, -2, 0, 566,
	0, 0, 0, 1121, 1121, 573, 0, 575, 576, 0,
	0, 577, 0, 632, 632, 630, 631, 579, 580, 581,
	582, 635, 0, 0, 352, 353, 354, 632, 635, 0,
	635, 635, 635, 635, 632, 632, 632, 635, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1596, 1596, 1596,
	638, 635, 0, 615, 0, 616, 617, 620, 621, 1597,
	1598, 1157, 622, 623, 1111, 645, 653, 656, 673, 671,
	672, 674, 666, 667, 668, 669, 0, 687, 688, 693,
	0, 0, 0, 0, 699, 700, 701, 0, 0, 704,
	705, 706, 0, 0, 0, 0, 829, 0, 0, 891,
	892, 893, 894, 895, 896, 897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 867, 868, 869, 870,
	873, 0, 0, 0, 878, 879, 0, 0, 0, 0,
	0, 722, 0, 985, 0, 917, 0, 918, 920, 921,
	0, 922, 0, 0, 0, 0, 732, 0, 0, 732,
	732, 0, 0, 188, 189, 190, 191, 205, 206, 207,
	208, 209, 258, 993, 0, 901, 0, 0, 44, 677,
	678, 0, 792, 1131, 0, 0, 729, 731, 55, 64,
	66, 1012, 59, 1012, 0, 734, 0, 0, -2, -2,
	735, 741, 742, 743, 744, 745, 52, 1594, 53, 0,
	72, 0, 46, 0, 0, 0, 0, 325, 1054, 0,
	0, 1005, 1006, 1009, 0, 749, 753, 0, 755, 756,
	0, 715, 0, 98, 0, 808, 0, 0, 0, 1536,
	1109, 0, 102, 103, 0, 0, 0, 331, 1114, 1115,
	1116, -2, 350, 0, 331, 320, 264, 265, 266, 313,
	268, 313, 313, 313, 313, 325, 325, 325, 325, 296,
	297, 298, 299, 300, 0, 0, 283, 313, 313, 313,
	313, 303, 304, 305, 306, 307, 308, 309, 310, 269,
	270, 271, 272, 273, 274, 275, 276, 277, 315, 315,
	315, 317, 317, 0, 42, 0, 335, 0, 1009, 0,
	1042, 1123, 1133, 0, 0, 0, 1123, 120, 0, 0,
	491, 521, 451, 480, 492, 0, 454, 455, -2, 0,
	0, 441, 0, 443, 0, 351, 0, -2, 0, 361,
	0, 357, 361, 358, 361, 349, 362, 472, 473, 474,
	0, 532, 778, 0, 0, 0, 0, 0, 538, 539,
	540, 0, 542, 543, 544, 545, 546, 547, 548, 549,
	550, 551, 481, 482, 483, 484, 485, 486, 487, 0,
	0, 443, 0, 477, 0, 398, 399, 0, 0, 402,
	403, 404, 405, 0, 0, 408, 409, 410, 795, 796,
	411, 435, 436, 437, 412, 413, 414, 415, 416, 417,
	418, 429, 430, 431, 432, 433, 434, 419, 420, 421,
	422, 423, 426, 0, 130, 1033, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1121, 0, 0,
	0, 0, 810, 1144, 1145, 636, 637, 0, 355, 356,
	635, 635, 583, 606, 0, 635, 587, 608, 588, 590,
	589, 591, 610, 611, 635, 594, 633, 634, 595, 596,
	597, 598, 599, 600, 601, 602, 603, 604, 612, 613,
	614, 639, 0, 0, 654, 658, 659, 660, 661, 0,
	0, 690, 94, 695, 696, 697, 698, 710, 703, 903,
	826, 827, 828, 830, 832, 0, 887, 889, 834, 836,
	898, 899, 900, 0, 0, 0, 0, 0, 840, 844,
	847, 848, 849, 850, 851, 852, 853, 854, 855, 856,
	857, 858, 864, 963, 964, 965, 881, 882, 0, 746,
	0, 0, 0, 880, 0, 0, 0, 0, 723, 724,
	991, 988, 0, 0, 949, 951, 0, 0, 0, 0,
	927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
	937, 938, 939, 940, 941, 942, 943, 944, 945, 946,
	947, 966, 0, 0, 0, 733, 994, 0, -2, 0,
	0, 0, 0, 0, 0, 0, 1098, 0, 680, 681,
	683, 0, 812, 0, 793, 0, 0, 1132, 686, 725,
	726, 728, 730, 772, 58, 60, 739, 740, 0, 757,
	736, 54, 49, 0, 0, 1052, 325, 1074, 0, 329,
	330, 1015, 1016, 0, 1008, 1010, 1011, 77, 754, 750,
	0, 824, 0, 0, 807, 0, 760, 762, 763, 764,
	790, 0, 0, 0, 0, 96, 809, 1104, 101, 0,
	0, 106, 107, 1105, 1106, 1107, 1108, 0, 510, -2,
	393, 158, 160, 161, 162, 153, -2, 323, 321, 322,
	267, 325, 325, 290, 291, 292, 293, 294, 295, 0,
	0, 284, 285, 286, 287, 278, 0, 279, 280, 281,
	0, 282, 368, 0, 1017, 336, 337, 339, 343, 0,
	0, 0, 364, 365, 0, 1033, 0, 0, 0, 1134,
	1133, 1133, 1133, 0, 148, 149, 150, 151, 527, 0,
	0, 522, 525, 526, 146, 0, 0, 154, 445, 444,
	0, 559, 0, 366, 0, 0, 361, 361, 346, 347,
	475, 0, 0, 534, 535, 536, 537, 0, 0, 0,
	443, 445, 331, 0, 400, 401, 406, 407, 424, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	505, 506, 507, 508, 509, 1030, 1031, 1032, 0, 0,
	567, 0, 0, 385, 92, 1122, 572, 632, 593, 609,
	632, 585, 592, 618, 650, 694, 0, 0, 0, 0,
	702, 0, 833, 888, 890, 837, 0, 841, 845, 0,
	0, 0, 0, 0, 0, 0, 884, 908, 909, 0,
	0, 1003, 0, 989, 0, 0, 916, 952, 0, 0,
	0, 0, 0, 904, 0, 0, 732, 0, 953, 954,
	955, 956, 957, 994, 679, 682, 684, 768, 813, 814,
	0, 0, 0, 0, 794, 1130, 0, 0, 996, 0,
	0, 757, 824, 758, 0, 737, 51, 771, 1056, 1055,
	1068, 1081, 326, 327, 328, 1007, 0, 1012, 0, 1092,
	0, 0, 1084, 0, 0, 0, 0, 0, 0, 0,
	0, 797, 0, 0, 800, 0, 0, 0, 0, 791,
	0, 0, 0, 0, -2, 0, 0, 90, 91, 0,
	0, 0, 104, 105, 0, 0, 111, 332, 333, 139,
	146, 395, 159, 375, 0, 0, 263, 324, 288, 289,
	0, 311, 0, 0, 0, 388, 116, 1021, 1020, 343,
	343, 338, 0, 341, 0, 1135, 314, 0, 129, 0,
	0, 0, 0, 0, 135, 516, 0, 0, 523, 0,
	0, 0, 449, 0, 460, 461, 0, 531, 558, 0,
	563, 335, 0, 345, 348, 779, 0, 0, 462, 0,
	445, 466, 467, 478, 427, 428, 425, 0, 0, 1043,
	1044, 1049, 1047, 1048, 121, 498, 500, 499, 503, 0,
	0, 496, 0, 385, 1017, 0, 571, 386, 387, 635,
	635, 689, 95, 0, 692, 0, 0, 0, 838, 842,
	747, 0, 0, 313, 313, 971, 313, 317, 974, 313,
	976, 313, 979, 313, 982, 983, 0, 0, 0, 0,
	986, 915, 992, 0, 0, 0, 0, 926, 0, 0,
	905, 906, 0, 995, 815, 820, 820, 820, 0, 773,
	0, 1117, 1118, 997, 998, 824, 999, 759, 738, 1074,
	0, 1067, 0, -2, 1076, 0, 0, 0, 1082, 751,
	78, 825, 81, 0, 1092, 1100, 0, 1083, 1094, 1096,
	0, 0, 0, 1088, 0, 824, 761, 786, 788, 0,
	783, 798, 799, 801, 0, 803, 0, 805, 806, 770,
	766, 767, 0, 98, 0, 824, 824, 97, 0, 811,
	108, 109, 110, 394, 163, 168, 0, 0, 0, 173,
	0, 175, 0, 376, 0, 260, 262, 0, 0, 166,
	325, 0, 325, 0, 318, 0, 377, 389, 0, 1018,
	1019, 0, 0, 340, 342, 0, 1124, 131, 0, 0,
	0, 519, 0, 528, 0, 0, 0, 0, 0, 0,
	155, 446, 0, 0, 334, 0, 0, 556, 553, 463,
	0, 192, 193, 195, 0, 0, 465, 770, 1034, 1035,
	1036, 0, 1046, 1050, 124, 0, 0, 0, 0, 568,
	569, 570, 93, 578, 584, 691, 711, 839, 843, 0,
	875, 969, 325, 972, 973, 975, 977, 978, 980, 981,
	876, 877, 0, 911, 0, 913, 1012, 0, 990, 0,
	0, 925, 0, 0, 907, 0, 0, 0, 0, 792,
	62, 999, 1001, 0, 1061, 1059, 1059, 1069, 1070, 0,
	0, 1077, 0, 0, 0, 0, 82, 0, 0, 0,
	1097, 0, 0, 0, 0, 99, 1003, 780, 787, 0,
	0, 781, 0, 782, 802, 804, 765, -2, 824, 824,
	88, 89, 0, 169, 0, 171, 186, 187, 0, 174,
	176, 177, 259, 261, 0, 0, 301, 312, 302, 0,
	0, 390, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 770,
	132, 133, 134, 511, 0, 521, 0, 0, 0, 514,
	0, 452, 0, 562, 0, 0, 533, 0, 541, 0,
	0, 0, 196, 197, 0, 1045, 497, 0, 122, 123,
	0, 0, 502, 958, 970, 0, 0, 0, 987, 0,
	0, 0, 0, 0, 821, 0, 0, 0, 0, 812,
	1001, 80, 0, 0, 1064, 0, 1057, 1060, 1058, 1071,
	0, 0, 1078, 0, 1080, 0, 1101, 1102, 1095, 0,
	1087, 1090, 1086, 1089, 1012, 784, 0, 789, 1003, 87,
	0, 172, 0, 0, 0, 316, 319, 0, 0, 0,
	512, 0, 524, 515, 560, 561, 0, 564, 370, 557,
	554, 555, 464, 0, 125, 126, 0, 0, 0, 0,
	0, 0, 910, 912, 914, 923, 924, 967, 968, 0,
	817, 774, 775, 822, 823, 0, 0, 769, 79, 1002,
	1000, 1053, 0, 1062, 1063, 1072, 1073, 1079, 0, 1085,
	0, 85, 0, 1012, 170, 0, 180, 0, 520, 0,
	523, 513, 0, 1037, 0, 0, 0, 504, 874, 0,
	0, 0, 0, 816, 818, 819, 1065, 1066, 1093, 1091,
	785, 86, 371, 375, 1037, 0, 0, 565, 494, 1039,
	127, 128, 438, 439, 440, 121, 959, 0, 962, 776,
	777, 372, 373, 0, 164, 181, 182, 0, 0, 185,
	178, 179, 117, 0, 0, 0, 1040, 1041, 124, 960,
	374, 0, 0, 0, 183, 184, 529, 0, 0, 501,
	0, 378, 380, 381, 0, 0, 379, 517, 0, 529,
	1038, 0, 382, 383, 384, 530, 518, 961,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 125, 3, 3, 3, 151, 143, 3,
	83, 85, 148, 146, 84, 147, 200, 149, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 558,
	133, 132, 134, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 153, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 121, 3, 154,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 122, 123, 124, 126,
	127, 128, 129, 130, 131, 135, 136, 137, 138, 139,
	140, 141, 142, 144, 145, 150, 152, 155, 156, 157,
	158, 159, 160, 161, 162, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:475
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:480
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:481
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:485
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:521
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:527
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:531
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:535
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:540
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:550
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:556
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:562
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:566
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:571
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:575
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:581
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:585
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:591
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:597
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:601
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:605
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:628
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:634
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:639
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:645
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:652
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:658
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:665
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:675
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:687
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:691
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:697
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:701
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:706
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:710
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:716
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:720
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:731
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:737
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:744
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:750
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:758
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:770
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:782
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:794
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:798
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:810
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:814
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:818
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:822
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:827
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:828
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:832
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:842
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:846
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:852
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:856
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:865
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:871
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:877
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:887
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:891
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:897
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:901
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:905
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:911
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:915
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:919
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:923
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:929
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:933
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:939
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:952
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:961
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:965
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:972
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:976
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:981
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:996
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1001
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1007
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1012
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1018
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1024
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1031
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1038
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1043
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1048
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1053
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1060
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1067
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1078
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1085
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1089
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1095
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1099
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1103
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1107
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1113
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1117
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1123
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1127
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1133
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1137
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1144
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1148
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1154
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1158
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1164
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1169
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1174
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1178
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1187
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1191
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1202
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1211
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1220
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1224
		{
			yyVAL.str = ""
		}
	case 167:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1233
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1237
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1243
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1249
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1259
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1264
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1269
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1283
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1290
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1294
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1299
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1303
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1308
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1314
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1320
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1325
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1332
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1339
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1343
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1347
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1351
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1362
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1369
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1373
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1379
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1383
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1399
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1403
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1408
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1412
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1416
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1420
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1424
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1431
		{
			yyVAL.str = Armscii8Str
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = ASCIIStr
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = Big5Str
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = UBinaryStr
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1447
		{
			yyVAL.str = Cp1250Str
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1451
		{
			yyVAL.str = Cp1251Str
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = Cp1256Str
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = Cp1257Str
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = Cp850Str
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = Cp852Str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = Cp866Str
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = Cp932Str
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = Dec8Str
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = EucjpmsStr
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1487
		{
			yyVAL.str = EuckrStr
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = Gb18030Str
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = Gb2312Str
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = GbkStr
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = Geostd8Str
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1507
		{
			yyVAL.str = GreekStr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1511
		{
			yyVAL.str = HebrewStr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1515
		{
			yyVAL.str = Hp8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1519
		{
			yyVAL.str = Keybcs2Str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1523
		{
			yyVAL.str = Koi8rStr
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1527
		{
			yyVAL.str = Koi8uStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1531
		{
			yyVAL.str = Latin1Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1535
		{
			yyVAL.str = Latin2Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.str = Latin5Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1543
		{
			yyVAL.str = Latin7Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1547
		{
			yyVAL.str = MacceStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = MacromanStr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = SjisStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = Swe7Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1563
		{
			yyVAL.str = Tis620Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1567
		{
			yyVAL.str = Ucs2Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1571
		{
			yyVAL.str = UjisStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1575
		{
			yyVAL.str = Utf16Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1579
		{
			yyVAL.str = Utf16leStr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1583
		{
			yyVAL.str = Utf32Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1587
		{
			yyVAL.str = Utf8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = Utf8mb4Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1601
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1605
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1630
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1634
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1638
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1642
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1659
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1670
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1674
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1690
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1694
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1698
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1702
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1708
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 279:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1714
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1720
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1732
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1740
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1748
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1752
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1756
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1762
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1766
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1770
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1778
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1782
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1786
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1790
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1798
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1802
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1806
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1810
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1814
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1864
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1869
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1873
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1878
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1882
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1890
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1894
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1900
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1908
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1912
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1916
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1921
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1925
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = ""
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1938
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1942
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.str = "latin1"
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1951
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.str = "ucs2"
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1957
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1961
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1965
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1972
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1977
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1981
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1987
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1997
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2001
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2006
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2010
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2026
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2030
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2034
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2038
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2042
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2051
		{
			yyVAL.str = yyDollar[2].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.str = "key"
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2085
		{
			yyVAL.str = yyDollar[1].str
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2100
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2110
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2120
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2126
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2130
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2136
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2140
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2146
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2152
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2156
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2160
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2164
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2173
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2179
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2185
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2191
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2197
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2201
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2205
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2209
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2213
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2231
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2235
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2244
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2248
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2254
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2258
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2262
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2268
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2272
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2278
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2282
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2286
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2290
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2294
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2298
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2302
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2306
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2310
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2314
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2318
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2322
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2326
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2330
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2334
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2338
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2342
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2346
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2350
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2354
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2358
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2362
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2366
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2370
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2374
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2378
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2382
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2386
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2391
		{
			yyVAL.str = ""
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2395
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2422
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2426
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2431
		{
			yyVAL.str = ""
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2437
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2441
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2446
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2450
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2455
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2459
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2463
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2467
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2471
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 452:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2475
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2481
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2485
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2489
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2495
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2499
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2503
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2507
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2511
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2515
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2519
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2523
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2527
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2531
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2535
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2539
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2543
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2547
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2551
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2555
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2559
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2563
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2567
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2571
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2575
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2579
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2583
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2589
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2593
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2599
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2603
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2607
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2611
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2615
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2619
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2623
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2627
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2631
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2637
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2644
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2658
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2664
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2668
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2675
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2682
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2704
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2708
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2725
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2735
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2739
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2750
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2764
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2771
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2778
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2785
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2789
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2798
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2806
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2815
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2822
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2830
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2834
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2843
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2858
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2863
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2867
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2872
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:2876
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2882
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:2886
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2891
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2895
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:2900
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:2904
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2910
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2914
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2918
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2922
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2926
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2930
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2934
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2938
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2942
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2946
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2950
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2954
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2958
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2962
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2966
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2970
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2974
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2978
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2982
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2986
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2990
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2994
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2999
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3003
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3007
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3014
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3018
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3024
		{
			yyVAL.partDefUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3029
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3033
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3040
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3047
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3056
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3062
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3066
		{
			yyVAL.str = ""
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3078
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3082
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 569:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3088
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3092
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3105
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3111
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3126
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3146
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3150
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3154
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3162
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3166
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3170
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3178
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3186
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3194
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3198
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3202
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3206
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3210
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3214
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3222
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3226
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3230
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3234
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3242
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3246
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3250
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3258
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3262
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3266
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3270
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3275
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3279
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3283
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3288
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3292
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3296
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3300
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3305
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3319
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3323
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3327
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3337
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3343
		{
			yyVAL.str = ""
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3347
		{
			yyVAL.str = "extended "
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3363
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3367
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3373
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3377
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3391
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3395
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3401
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3405
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3411
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3425
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3429
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3433
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3439
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3443
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3449
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3455
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3459
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3464
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3466
		{
			yyVAL.empty = struct{}{}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3469
		{
			yyVAL.empty = struct{}{}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3471
		{
			yyVAL.empty = struct{}{}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3476
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3482
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3487
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3491
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3495
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3499
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3503
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3507
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3513
		{
			yyVAL.str = yyDollar[1].str
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3517
		{
			yyVAL.str = yyDollar[1].str
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = yyDollar[1].str
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3527
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3531
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3535
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3539
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3544
		{
			yyVAL.str = ""
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3558
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3562
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3568
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3572
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3578
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3584
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3588
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3594
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3600
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3604
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3608
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3612
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3618
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3624
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3630
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3634
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3638
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3642
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3646
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3650
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3656
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3660
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3666
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 696:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3670
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3674
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3678
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3698
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3702
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3706
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3710
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3715
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3719
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3723
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3728
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3737
		{
			setAllowComments(yylex, true)
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3741
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3747
		{
			yyVAL.strs = nil
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3751
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 716:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3757
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3761
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3765
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3770
		{
			yyVAL.str = ""
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3774
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3778
		{
			yyVAL.str = SQLCacheStr
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3783
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3787
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3791
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3797
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[2].colIdent, Statement: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3801
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[2].colIdent, StatementIdentifier: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3807
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3811
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[2].colIdent, Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3816
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3820
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3826
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3835
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3840
		{
			yyVAL.strs = nil
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3848
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 738:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3856
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3866
		{
			yyVAL.str = SQLCacheStr
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.str = DistinctStr
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.str = DistinctStr
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3878
		{
			yyVAL.str = StraightJoinHint
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3882
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3892
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3896
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3902
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3906
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3910
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3914
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3919
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3923
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3927
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3934
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3939
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3943
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3949
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3955
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3959
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3969
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3973
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3977
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3983
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3989
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3993
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3998
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4002
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4008
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4012
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4018
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4022
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4026
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4030
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4036
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4040
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 780:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4053
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4057
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4061
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4065
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4071
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 785:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4073
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4079
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4083
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4085
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4088
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4093
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4101
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4114
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4118
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4122
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4128
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4134
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4138
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4142
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4146
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4152
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4156
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4166
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4176
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4180
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4186
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4191
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4195
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4201
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 816:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4211
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4215
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4219
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4223
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4228
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4232
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4236
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4240
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4246
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4250
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4257
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4261
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4265
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4269
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4273
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4277
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4284
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4288
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4292
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4296
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4302
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4306
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4310
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4314
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4318
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4322
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4326
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4330
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4334
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4338
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4342
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4348
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4352
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4356
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4360
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4364
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4368
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4372
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4376
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4380
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4384
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4388
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4392
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4402
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4406
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4410
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4414
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4418
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4422
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4426
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4430
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4434
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4438
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4442
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4446
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4450
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4454
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4458
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4462
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4466
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4470
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4474
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4482
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4486
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4494
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4498
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4505
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4509
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4515
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4519
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4526
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4530
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4534
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4538
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4544
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4548
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4552
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4556
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4560
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4564
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4568
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4574
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4578
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4582
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4589
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4595
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4599
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 904:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4609
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4613
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4617
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4631
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4643
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4647
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4651
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4655
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4659
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4663
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4667
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4678
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4682
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4688
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4692
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4697
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4701
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4705
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4709
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4713
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4719
		{
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4721
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4725
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4729
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4733
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4737
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4741
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4745
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4749
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4753
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4757
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4761
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4767
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4771
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4775
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4779
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4783
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4787
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4791
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4795
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4799
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4817
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4827
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4831
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4835
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4839
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4843
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4849
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4853
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4857
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4861
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4865
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4871
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4875
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4879
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 966:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4885
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4889
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4893
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4899
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4903
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4907
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4911
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4915
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4921
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4925
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4929
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4933
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4937
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4941
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4945
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4949
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4953
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4957
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4972
		{
			yyVAL.str = string("")
		}
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4976
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4982
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4986
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4992
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5001
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5007
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5011
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:5015
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5021
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5030
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5034
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5040
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5044
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5049
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5053
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5058
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5062
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5068
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:5074
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5078
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1008:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:5084
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5089
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5093
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:5097
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5106
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5112
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5116
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:5120
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5125
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5129
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5133
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5137
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:5141
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5148
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5152
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5156
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5160
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5166
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5170
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:5174
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5179
		{
			yyVAL.str = ""
		}
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5183
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5187
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5191
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5196
		{
			yyVAL.str = ""
		}
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5200
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5206
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5210
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1037:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5215
		{
			yyVAL.str = ""
		}
	case 1038:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5219
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5224
		{
			yyVAL.str = "cascaded"
		}
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5228
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5232
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1042:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5237
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5241
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5247
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5253
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:5259
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5268
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5272
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5277
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5281
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1051:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5287
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:5291
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5297
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5301
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:5305
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5310
		{
			yyVAL.str = ""
		}
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5314
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1058:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5318
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1059:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5323
		{
			yyVAL.str = ""
		}
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5327
		{
			yyVAL.str = " header"
		}
	case 1061:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5332
		{
			yyVAL.str = ""
		}
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5336
		{
			yyVAL.str = " manifest on"
		}
	case 1063:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5340
		{
			yyVAL.str = " manifest off"
		}
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5345
		{
			yyVAL.str = ""
		}
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5349
		{
			yyVAL.str = " overwrite on"
		}
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5353
		{
			yyVAL.str = " overwrite off"
		}
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5359
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1068:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5364
		{
			yyVAL.str = ""
		}
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5368
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5374
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1071:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5378
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1072:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5384
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1073:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5388
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1074:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5393
		{
			yyVAL.str = ""
		}
	case 1075:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5397
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1076:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5403
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1077:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5407
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5413
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1079:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5417
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5421
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1081:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5426
		{
			yyVAL.str = ""
		}
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5430
		{
			yyVAL.str = " optionally"
		}
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5443
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5447
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5451
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5455
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5459
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5465
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5469
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5473
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1091:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5477
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1092:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5482
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5486
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5492
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5496
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5502
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5506
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5512
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5517
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5527
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5531
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5537
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5543
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5547
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5553
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5557
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5561
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5565
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5569
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5577
		{
			yyVAL.str = "charset"
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5587
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5591
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5595
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5604
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5606
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5609
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5611
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5614
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5616
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5619
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5621
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5624
		{
			yyVAL.empty = struct{}{}
		}
	case 1128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5626
		{
			yyVAL.empty = struct{}{}
		}
	case 1129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5628
		{
			yyVAL.empty = struct{}{}
		}
	case 1130:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5632
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5641
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5648
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5652
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5658
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5662
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5669
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5675
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5679
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5685
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5689
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5696
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6168
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6177
		{
			decNesting(yylex)
		}
	case 1595:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6182
		{
			skipToEnd(yylex)
		}
	case 1596:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6187
		{
			skipToEnd(yylex)
		}
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6191
		{
			skipToEnd(yylex)
		}
	case 1598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6195
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
