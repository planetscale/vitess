// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const OR = 57457
const XOR = 57458
const AND = 57459
const NOT = 57460
const BETWEEN = 57461
const CASE = 57462
const WHEN = 57463
const THEN = 57464
const ELSE = 57465
const END = 57466
const LE = 57467
const GE = 57468
const NE = 57469
const NULL_SAFE_EQUAL = 57470
const IS = 57471
const LIKE = 57472
const REGEXP = 57473
const IN = 57474
const SHIFT_LEFT = 57475
const SHIFT_RIGHT = 57476
const DIV = 57477
const MOD = 57478
const UNARY = 57479
const COLLATE = 57480
const BINARY = 57481
const UNDERSCORE_BINARY = 57482
const UNDERSCORE_UTF8MB4 = 57483
const UNDERSCORE_UTF8 = 57484
const UNDERSCORE_LATIN1 = 57485
const INTERVAL = 57486
const JSON_EXTRACT_OP = 57487
const JSON_UNQUOTE_EXTRACT_OP = 57488
const CREATE = 57489
const ALTER = 57490
const DROP = 57491
const RENAME = 57492
const ANALYZE = 57493
const ADD = 57494
const FLUSH = 57495
const CHANGE = 57496
const MODIFY = 57497
const REVERT = 57498
const SCHEMA = 57499
const TABLE = 57500
const INDEX = 57501
const VIEW = 57502
const TO = 57503
const IGNORE = 57504
const IF = 57505
const PRIMARY = 57506
const COLUMN = 57507
const SPATIAL = 57508
const FULLTEXT = 57509
const KEY_BLOCK_SIZE = 57510
const CHECK = 57511
const INDEXES = 57512
const ACTION = 57513
const CASCADE = 57514
const CONSTRAINT = 57515
const FOREIGN = 57516
const NO = 57517
const REFERENCES = 57518
const RESTRICT = 57519
const SHOW = 57520
const DESCRIBE = 57521
const EXPLAIN = 57522
const DATE = 57523
const ESCAPE = 57524
const REPAIR = 57525
const OPTIMIZE = 57526
const TRUNCATE = 57527
const COALESCE = 57528
const EXCHANGE = 57529
const REBUILD = 57530
const PARTITIONING = 57531
const REMOVE = 57532
const MAXVALUE = 57533
const PARTITION = 57534
const REORGANIZE = 57535
const LESS = 57536
const THAN = 57537
const PROCEDURE = 57538
const TRIGGER = 57539
const VINDEX = 57540
const VINDEXES = 57541
const DIRECTORY = 57542
const NAME = 57543
const UPGRADE = 57544
const STATUS = 57545
const VARIABLES = 57546
const WARNINGS = 57547
const CASCADED = 57548
const DEFINER = 57549
const OPTION = 57550
const SQL = 57551
const UNDEFINED = 57552
const SEQUENCE = 57553
const MERGE = 57554
const TEMPORARY = 57555
const TEMPTABLE = 57556
const INVOKER = 57557
const SECURITY = 57558
const FIRST = 57559
const AFTER = 57560
const LAST = 57561
const VITESS_MIGRATION = 57562
const CANCEL = 57563
const RETRY = 57564
const COMPLETE = 57565
const BEGIN = 57566
const START = 57567
const TRANSACTION = 57568
const COMMIT = 57569
const ROLLBACK = 57570
const SAVEPOINT = 57571
const RELEASE = 57572
const WORK = 57573
const BIT = 57574
const TINYINT = 57575
const SMALLINT = 57576
const MEDIUMINT = 57577
const INT = 57578
const INTEGER = 57579
const BIGINT = 57580
const INTNUM = 57581
const REAL = 57582
const DOUBLE = 57583
const FLOAT_TYPE = 57584
const DECIMAL = 57585
const NUMERIC = 57586
const TIME = 57587
const TIMESTAMP = 57588
const DATETIME = 57589
const YEAR = 57590
const CHAR = 57591
const VARCHAR = 57592
const BOOL = 57593
const CHARACTER = 57594
const VARBINARY = 57595
const NCHAR = 57596
const TEXT = 57597
const TINYTEXT = 57598
const MEDIUMTEXT = 57599
const LONGTEXT = 57600
const BLOB = 57601
const TINYBLOB = 57602
const MEDIUMBLOB = 57603
const LONGBLOB = 57604
const JSON = 57605
const ENUM = 57606
const GEOMETRY = 57607
const POINT = 57608
const LINESTRING = 57609
const POLYGON = 57610
const GEOMETRYCOLLECTION = 57611
const MULTIPOINT = 57612
const MULTILINESTRING = 57613
const MULTIPOLYGON = 57614
const NULLX = 57615
const AUTO_INCREMENT = 57616
const APPROXNUM = 57617
const SIGNED = 57618
const UNSIGNED = 57619
const ZEROFILL = 57620
const CODE = 57621
const COLLATION = 57622
const COLUMNS = 57623
const DATABASES = 57624
const ENGINES = 57625
const EVENT = 57626
const EXTENDED = 57627
const FIELDS = 57628
const FULL = 57629
const FUNCTION = 57630
const GTID_EXECUTED = 57631
const KEYSPACES = 57632
const OPEN = 57633
const PLUGINS = 57634
const PRIVILEGES = 57635
const PROCESSLIST = 57636
const SCHEMAS = 57637
const TABLES = 57638
const TRIGGERS = 57639
const USER = 57640
const VGTID_EXECUTED = 57641
const VITESS_KEYSPACES = 57642
const VITESS_METADATA = 57643
const VITESS_MIGRATIONS = 57644
const VITESS_REPLICATION_STATUS = 57645
const VITESS_SHARDS = 57646
const VITESS_TABLETS = 57647
const VSCHEMA = 57648
const NAMES = 57649
const GLOBAL = 57650
const SESSION = 57651
const ISOLATION = 57652
const LEVEL = 57653
const READ = 57654
const WRITE = 57655
const ONLY = 57656
const REPEATABLE = 57657
const COMMITTED = 57658
const UNCOMMITTED = 57659
const SERIALIZABLE = 57660
const CURRENT_TIMESTAMP = 57661
const DATABASE = 57662
const CURRENT_DATE = 57663
const CURRENT_TIME = 57664
const LOCALTIME = 57665
const LOCALTIMESTAMP = 57666
const CURRENT_USER = 57667
const UTC_DATE = 57668
const UTC_TIME = 57669
const UTC_TIMESTAMP = 57670
const DAY = 57671
const DAY_HOUR = 57672
const DAY_MICROSECOND = 57673
const DAY_MINUTE = 57674
const DAY_SECOND = 57675
const HOUR = 57676
const HOUR_MICROSECOND = 57677
const HOUR_MINUTE = 57678
const HOUR_SECOND = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MINUTE_MICROSECOND = 57682
const MINUTE_SECOND = 57683
const MONTH = 57684
const QUARTER = 57685
const SECOND = 57686
const SECOND_MICROSECOND = 57687
const YEAR_MONTH = 57688
const WEEK = 57689
const REPLACE = 57690
const CONVERT = 57691
const CAST = 57692
const SUBSTR = 57693
const SUBSTRING = 57694
const GROUP_CONCAT = 57695
const SEPARATOR = 57696
const TIMESTAMPADD = 57697
const TIMESTAMPDIFF = 57698
const MATCH = 57699
const AGAINST = 57700
const BOOLEAN = 57701
const LANGUAGE = 57702
const WITH = 57703
const QUERY = 57704
const EXPANSION = 57705
const WITHOUT = 57706
const VALIDATION = 57707
const UNUSED = 57708
const ARRAY = 57709
const CUME_DIST = 57710
const DESCRIPTION = 57711
const DENSE_RANK = 57712
const EMPTY = 57713
const EXCEPT = 57714
const FIRST_VALUE = 57715
const GROUPING = 57716
const GROUPS = 57717
const JSON_TABLE = 57718
const LAG = 57719
const LAST_VALUE = 57720
const LATERAL = 57721
const LEAD = 57722
const MEMBER = 57723
const NTH_VALUE = 57724
const NTILE = 57725
const OF = 57726
const OVER = 57727
const PERCENT_RANK = 57728
const RANK = 57729
const RECURSIVE = 57730
const ROW_NUMBER = 57731
const SYSTEM = 57732
const WINDOW = 57733
const ACTIVE = 57734
const ADMIN = 57735
const BUCKETS = 57736
const CLONE = 57737
const COMPONENT = 57738
const DEFINITION = 57739
const ENFORCED = 57740
const EXCLUDE = 57741
const FOLLOWING = 57742
const GEOMCOLLECTION = 57743
const GET_MASTER_PUBLIC_KEY = 57744
const HISTOGRAM = 57745
const HISTORY = 57746
const INACTIVE = 57747
const INVISIBLE = 57748
const LOCKED = 57749
const MASTER_COMPRESSION_ALGORITHMS = 57750
const MASTER_PUBLIC_KEY_PATH = 57751
const MASTER_TLS_CIPHERSUITES = 57752
const MASTER_ZSTD_COMPRESSION_LEVEL = 57753
const NESTED = 57754
const NETWORK_NAMESPACE = 57755
const NOWAIT = 57756
const NULLS = 57757
const OJ = 57758
const OLD = 57759
const OPTIONAL = 57760
const ORDINALITY = 57761
const ORGANIZATION = 57762
const OTHERS = 57763
const PATH = 57764
const PERSIST = 57765
const PERSIST_ONLY = 57766
const PRECEDING = 57767
const PRIVILEGE_CHECKS_USER = 57768
const PROCESS = 57769
const RANDOM = 57770
const REFERENCE = 57771
const REQUIRE_ROW_FORMAT = 57772
const RESOURCE = 57773
const RESPECT = 57774
const RESTART = 57775
const RETAIN = 57776
const REUSE = 57777
const ROLE = 57778
const SECONDARY = 57779
const SECONDARY_ENGINE = 57780
const SECONDARY_LOAD = 57781
const SECONDARY_UNLOAD = 57782
const SKIP = 57783
const SRID = 57784
const THREAD_PRIORITY = 57785
const TIES = 57786
const UNBOUNDED = 57787
const VCPU = 57788
const VISIBLE = 57789
const FORMAT = 57790
const TREE = 57791
const VITESS = 57792
const TRADITIONAL = 57793
const LOCAL = 57794
const LOW_PRIORITY = 57795
const NO_WRITE_TO_BINLOG = 57796
const LOGS = 57797
const ERROR = 57798
const GENERAL = 57799
const HOSTS = 57800
const OPTIMIZER_COSTS = 57801
const USER_RESOURCES = 57802
const SLOW = 57803
const CHANNEL = 57804
const RELAY = 57805
const EXPORT = 57806
const AVG_ROW_LENGTH = 57807
const CONNECTION = 57808
const CHECKSUM = 57809
const DELAY_KEY_WRITE = 57810
const ENCRYPTION = 57811
const ENGINE = 57812
const INSERT_METHOD = 57813
const MAX_ROWS = 57814
const MIN_ROWS = 57815
const PACK_KEYS = 57816
const PASSWORD = 57817
const FIXED = 57818
const DYNAMIC = 57819
const COMPRESSED = 57820
const REDUNDANT = 57821
const COMPACT = 57822
const ROW_FORMAT = 57823
const STATS_AUTO_RECALC = 57824
const STATS_PERSISTENT = 57825
const STATS_SAMPLE_PAGES = 57826
const STORAGE = 57827
const MEMORY = 57828
const DISK = 57829
const PARTITIONS = 57830
const LINEAR = 57831
const RANGE = 57832
const LIST = 57833
const SUBPARTITION = 57834
const SUBPARTITIONS = 57835
const HASH = 57836

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	512, 137,
	-2, 143,
	-1, 45,
	115, 143,
	154, 143,
	269, 143,
	-2, 366,
	-1, 52,
	33, 537,
	176, 537,
	187, 537,
	220, 551,
	221, 551,
	-2, 539,
	-1, 57,
	178, 561,
	-2, 559,
	-1, 108,
	175, 1027,
	-2, 116,
	-1, 110,
	1, 138,
	512, 138,
	-2, 143,
	-1, 120,
	116, 269,
	181, 269,
	-2, 360,
	-1, 139,
	115, 143,
	154, 143,
	269, 143,
	-2, 375,
	-1, 608,
	161, 1048,
	-2, 1044,
	-1, 609,
	161, 1049,
	-2, 1045,
	-1, 623,
	57, 629,
	-2, 637,
	-1, 660,
	129, 1405,
	-2, 109,
	-1, 661,
	129, 1283,
	-2, 110,
	-1, 667,
	129, 1336,
	-2, 1021,
	-1, 810,
	129, 1217,
	-2, 1018,
	-1, 846,
	186, 38,
	191, 38,
	-2, 280,
	-1, 923,
	1, 413,
	512, 413,
	-2, 143,
	-1, 1122,
	57, 630,
	-2, 642,
	-1, 1123,
	57, 631,
	-2, 643,
	-1, 1175,
	115, 143,
	154, 143,
	269, 143,
	-2, 310,
	-1, 1178,
	23, 162,
	-2, 164,
	-1, 1251,
	116, 269,
	181, 269,
	-2, 360,
	-1, 1260,
	186, 39,
	191, 39,
	-2, 281,
	-1, 1472,
	161, 1053,
	-2, 1047,
	-1, 1590,
	115, 143,
	154, 143,
	269, 143,
	-2, 311,
	-1, 1830,
	75, 91,
	84, 91,
	-2, 95,
	-1, 2003,
	47, 989,
	-2, 983,
	-1, 2181,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 670,
}

const yyPrivate = 57344

const yyLast = 32472

var yyAct = [...]int{
	608, 2445, 2394, 648, 2332, 2361, 2334, 2416, 2222, 2187,
	2380, 2092, 2103, 2367, 2296, 3, 2014, 1546, 2017, 1850,
	2093, 1857, 638, 579, 1104, 2248, 1858, 1137, 2018, 1775,
	90, 1803, 2152, 2015, 1587, 616, 2146, 986, 2253, 1529,
	565, 2172, 1795, 2012, 1550, 1826, 1622, 2004, 176, 1879,
	934, 176, 549, 512, 176, 580, 34, 2240, 1941, 528,
	1902, 176, 547, 1627, 1880, 148, 1881, 665, 541, 176,
	1576, 1815, 1735, 1457, 1567, 639, 1642, 1960, 813, 33,
	1276, 176, 35, 876, 1563, 1787, 1469, 1416, 1465, 540,
	1367, 1655, 963, 1124, 1688, 841, 134, 642, 1641, 1629,
	1232, 618, 1568, 528, 1873, 1167, 528, 176, 528, 1832,
	89, 1146, 551, 85, 1570, 1531, 1107, 1488, 1434, 1004,
	820, 1364, 1258, 817, 1350, 1639, 821, 620, 1265, 624,
	1555, 1166, 847, 842, 843, 630, 854, 1164, 1150, 844,
	662, 979, 1372, 1250, 1227, 652, 984, 641, 92, 628,
	70, 151, 111, 625, 1551, 112, 626, 117, 535, 118,
	91, 1077, 919, 2429, 627, 71, 8, 79, 1080, 7,
	6, 1618, 83, 2278, 2446, 2189, 2190, 2191, 2189, 2362,
	2335, 1921, 1920, 646, 1686, 651, 1797, 1949, 1950, 119,
	1423, 824, 1422, 1522, 829, 1421, 113, 1420, 632, 1526,
	1527, 814, 1419, 1336, 1418, 881, 1405, 485, 178, 179,
	180, 538, 1410, 539, 2408, 1773, 2000, 2073, 2200, 2293,
	878, 536, 619, 2292, 602, 2218, 96, 84, 2219, 2439,
	880, 617, 879, 892, 893, 2390, 896, 897, 898, 899,
	659, 2434, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 666, 858, 640,
	2350, 857, 113, 835, 98, 99, 834, 102, 836, 72,
	108, 1725, 72, 173, 2424, 74, 480, 2223, 1634, 633,
	882, 883, 884, 1005, 889, 2381, 1674, 2389, 1516, 1977,
	72, 2135, 2349, 1806, 1241, 1774, 615, 2051, 2052, 623,
	1005, 1632, 1841, 1928, 2050, 1840, 894, 1927, 1842, 1948,
	172, 1582, 1583, 72, 1168, 1722, 1169, 1581, 1807, 953,
	613, 958, 959, 982, 612, 941, 113, 654, 655, 2280,
	942, 1866, 922, 954, 114, 1723, 947, 1602, 1601, 2266,
	1528, 833, 2149, 928, 929, 2105, 81, 156, 1015, 81,
	526, 2305, 1030, 1029, 1039, 1040, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1031, 2126, 1015, 1041, 81, 918, 1508,
	1497, 1498, 1499, 1500, 1510, 1501, 1502, 1503, 1515, 1511,
	1504, 1505, 1512, 1513, 1514, 1506, 1507, 1509, 1631, 1847,
	81, 941, 515, 970, 2124, 972, 942, 831, 1411, 1412,
	1413, 1409, 530, 153, 940, 154, 939, 960, 1468, 955,
	515, 1961, 948, 524, 1111, 171, 828, 961, 830, 515,
	981, 2106, 1356, 1903, 178, 179, 180, 1326, 833, 917,
	1656, 969, 971, 1699, 1697, 1698, 1694, 2099, 1011, 1924,
	1689, 1003, 1701, 1351, 1702, 2100, 1703, 2433, 976, 895,
	956, 957, 962, 515, 1963, 1011, 924, 1936, 837, 592,
	2409, 598, 599, 596, 597, 1704, 595, 594, 593, 1327,
	901, 1328, 900, 2107, 833, 1691, 825, 1693, 1658, 2289,
	176, 157, 176, 827, 826, 176, 2213, 1564, 865, 1695,
	162, 921, 1846, 863, 874, 600, 601, 178, 179, 180,
	873, 872, 1862, 974, 832, 871, 870, 869, 868, 951,
	867, 2072, 862, 528, 528, 528, 1965, 1692, 1969, 967,
	1964, 838, 1962, 968, 1244, 875, 515, 1967, 2430, 2420,
	831, 528, 528, 973, 2422, 1723, 1966, 937, 818, 943,
	944, 945, 946, 850, 2281, 818, 516, 1022, 997, 1968,
	1970, 1264, 818, 849, 1365, 966, 816, 2428, 653, 1926,
	1640, 2080, 983, 1937, 516, 2150, 502, 2277, 1680, 856,
	1357, 1940, 1361, 516, 991, 501, 885, 920, 1923, 1776,
	1778, 1633, 1987, 1986, 1985, 1239, 499, 866, 34, 1238,
	2306, 832, 864, 1075, 975, 856, 149, 2348, 1237, 977,
	1010, 1007, 1008, 1009, 1014, 1016, 1013, 516, 1012, 1913,
	2327, 1362, 1235, 176, 541, 1006, 1263, 1010, 1007, 1008,
	1009, 1014, 1016, 1013, 496, 1012, 2186, 110, 855, 1724,
	176, 75, 1006, 510, 849, 852, 853, 832, 818, 1112,
	1943, 80, 846, 850, 80, 1942, 484, 1147, 507, 528,
	618, 1117, 950, 176, 855, 1115, 479, 1753, 528, 1051,
	988, 989, 80, 952, 528, 2168, 1102, 1338, 1337, 1339,
	1340, 1341, 927, 1114, 938, 930, 1943, 1118, 1676, 891,
	516, 1942, 1837, 620, 1935, 80, 1777, 1934, 2418, 1750,
	1103, 2419, 1802, 2417, 1744, 662, 1116, 71, 1666, 1000,
	89, 1103, 998, 999, 1052, 1053, 1154, 1065, 486, 932,
	488, 503, 1588, 518, 1031, 517, 492, 1041, 490, 494,
	504, 495, 1041, 489, 2049, 500, 964, 1108, 491, 505,
	506, 508, 522, 521, 509, 635, 498, 519, 92, 1030,
	1029, 1039, 1040, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1031, 980, 1373, 1041, 1079, 1082, 1084, 1086, 1087, 1089,
	1091, 1092, 1083, 1085, 856, 1088, 1090, 1441, 1093, 1021,
	1105, 105, 936, 856, 1489, 2360, 2443, 856, 619, 1136,
	617, 1439, 1440, 1438, 2344, 1113, 1355, 150, 155, 152,
	158, 159, 160, 161, 163, 164, 165, 166, 1736, 2162,
	1160, 1161, 923, 167, 168, 169, 170, 1052, 1053, 1019,
	1020, 1018, 666, 176, 1675, 544, 877, 1228, 856, 1133,
	2262, 1690, 1358, 855, 1170, 106, 1236, 1021, 1001, 849,
	852, 853, 855, 818, 890, 1979, 855, 846, 850, 1052,
	1053, 859, 849, 1020, 1018, 528, 2060, 1260, 1018, 1119,
	1489, 860, 1760, 965, 1892, 1269, 845, 1673, 2059, 1273,
	1021, 1662, 528, 528, 1021, 528, 1275, 528, 528, 861,
	528, 528, 528, 528, 528, 528, 1352, 855, 1353, 1374,
	520, 1354, 859, 849, 1274, 528, 1262, 1671, 1668, 176,
	1309, 865, 860, 178, 179, 180, 935, 1459, 513, 1034,
	1035, 1036, 1037, 1038, 1031, 176, 1668, 1041, 1556, 1557,
	1270, 863, 2402, 514, 1672, 2353, 528, 2055, 176, 2320,
	1242, 1243, 1155, 1256, 178, 179, 180, 2448, 1799, 1363,
	2403, 2393, 1670, 176, 1165, 1304, 1305, 1249, 2363, 2199,
	1371, 2198, 1853, 1278, 2431, 1279, 2354, 1281, 1283, 176,
	2321, 1287, 1289, 1291, 1293, 1295, 176, 1728, 1729, 1730,
	2078, 2391, 1460, 1306, 1877, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 528, 528, 528, 1268, 1312, 1313,
	1345, 1343, 1267, 1246, 1318, 1319, 1234, 1854, 1876, 1266,
	1266, 1259, 1637, 1800, 1019, 1020, 1018, 1247, 1377, 1245,
	1369, 1019, 1020, 1018, 176, 1381, 1346, 1383, 1384, 1385,
	1386, 1856, 1021, 1331, 1390, 1851, 1748, 2432, 81, 1021,
	1322, 1424, 1425, 1426, 1427, 1747, 1144, 1333, 1404, 1860,
	1861, 1437, 1375, 1376, 1852, 1330, 1329, 657, 1320, 1314,
	1307, 2102, 1458, 1344, 1342, 1311, 1380, 2364, 1435, 1310,
	1285, 1461, 1366, 1387, 1388, 1389, 1240, 2324, 1140, 1019,
	1020, 1018, 1131, 2323, 528, 2322, 1131, 1019, 1020, 1018,
	2373, 2287, 1475, 1476, 2371, 113, 835, 1021, 2261, 834,
	1019, 1020, 1018, 2375, 2376, 1021, 2259, 2237, 1860, 1861,
	1332, 1143, 1379, 2372, 1859, 528, 528, 2161, 1021, 1019,
	1020, 1018, 2196, 1470, 2058, 1886, 1862, 1141, 1874, 1684,
	176, 1429, 1431, 1432, 541, 1462, 1463, 1021, 1403, 1683,
	1400, 1401, 1402, 1477, 1480, 1019, 1020, 1018, 1549, 1490,
	1430, 1535, 1406, 1472, 1370, 1534, 176, 1436, 1536, 528,
	1537, 1334, 1321, 1021, 178, 179, 180, 1552, 1553, 176,
	1317, 1316, 528, 1859, 1315, 1142, 1471, 176, 978, 176,
	2286, 176, 176, 528, 2221, 1862, 528, 178, 179, 180,
	1904, 1844, 1793, 2447, 1586, 2216, 2427, 528, 89, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1031, 1518, 1519, 1041,
	88, 1878, 1470, 1804, 89, 2013, 1749, 178, 179, 180,
	662, 1650, 94, 662, 1855, 2161, 1566, 1029, 1039, 1040,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1031, 1542, 1889,
	1041, 2044, 1472, 1804, 1019, 1020, 1018, 178, 179, 180,
	1723, 1648, 528, 1626, 1608, 1609, 1610, 1611, 1643, 1644,
	1645, 1591, 1021, 1647, 1649, 1561, 1596, 632, 1131, 1574,
	86, 1019, 1020, 1018, 86, 1592, 528, 88, 1811, 1981,
	2163, 87, 528, 1269, 1812, 87, 1269, 1131, 1269, 1021,
	1742, 1544, 1595, 1624, 1793, 2413, 1667, 1017, 1657, 1793,
	2397, 1793, 2387, 2343, 1603, 1833, 1604, 1605, 1606, 1607,
	1559, 1019, 1020, 1018, 2161, 1579, 1793, 2357, 1793, 2338,
	1578, 1793, 1614, 1615, 1616, 1617, 528, 1630, 1458, 1021,
	1594, 1593, 1812, 1458, 1458, 1131, 1812, 666, 2442, 1131,
	666, 2068, 1030, 1029, 1039, 1040, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1031, 1654, 1580, 1041, 1765, 1039, 1040,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1031, 1834, 176,
	1041, 1625, 2310, 1131, 2395, 2283, 176, 1836, 1635, 1638,
	1764, 176, 176, 1636, 1742, 176, 1646, 176, 1054, 1055,
	1056, 1057, 1058, 176, 1059, 1060, 1061, 1062, 1063, 1668,
	176, 1679, 1660, 1625, 1677, 1661, 1681, 1682, 1664, 95,
	1665, 858, 1659, 1663, 857, 1620, 1621, 609, 1678, 1651,
	94, 1266, 93, 2216, 1131, 1793, 2214, 1669, 176, 528,
	1030, 1029, 1039, 1040, 1032, 1033, 1034, 1035, 1036, 1037,
	1038, 1031, 1668, 1131, 1041, 1833, 1714, 1715, 1554, 568,
	567, 1717, 570, 571, 572, 573, 1687, 2166, 1131, 569,
	1718, 2132, 574, 2070, 2069, 177, 2066, 2067, 177, 2066,
	2065, 177, 95, 1812, 1131, 1135, 529, 2138, 177, 1742,
	1131, 1524, 1435, 94, 1668, 93, 177, 1723, 1922, 1131,
	1231, 1906, 1900, 1901, 88, 1473, 1474, 1789, 177, 1479,
	1482, 1483, 1793, 1792, 1707, 1017, 1131, 2201, 1834, 1231,
	1230, 1414, 88, 1761, 1176, 1175, 1360, 1723, 1162, 840,
	529, 839, 2437, 529, 177, 529, 1517, 622, 2359, 1520,
	1521, 81, 2337, 1030, 1029, 1039, 1040, 1032, 1033, 1034,
	1035, 1036, 1037, 1038, 1031, 176, 1300, 1041, 2331, 2298,
	1541, 1138, 1131, 176, 1721, 2273, 2193, 2202, 2203, 2204,
	1233, 528, 1623, 2101, 2062, 1907, 1619, 1613, 2205, 1742,
	2137, 1436, 1798, 1612, 1348, 1261, 1257, 1731, 1147, 1229,
	107, 1030, 1029, 1039, 1040, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1031, 176, 176, 1041, 1301, 1302, 1303, 1808,
	2333, 1883, 922, 2104, 81, 1882, 2173, 2174, 2299, 1843,
	1297, 1634, 2399, 2179, 1794, 2206, 2207, 1817, 1820, 1821,
	1822, 1818, 2368, 1819, 1823, 1759, 1030, 1029, 1039, 1040,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1031, 2176, 34,
	1041, 2085, 2084, 1817, 1820, 1821, 1822, 1818, 1828, 1819,
	1823, 2083, 1883, 2173, 2174, 528, 1790, 1298, 1299, 1108,
	176, 1772, 2013, 1869, 1870, 1871, 1872, 176, 1780, 1867,
	1868, 1893, 1827, 528, 1708, 1786, 1848, 1407, 1791, 528,
	2035, 1831, 2033, 1269, 1269, 2036, 1801, 2034, 2178, 528,
	1899, 2037, 2032, 1821, 1822, 2031, 2411, 2388, 1548, 1139,
	1540, 1919, 2005, 2007, 2167, 1835, 1838, 2089, 1849, 1993,
	1992, 2008, 176, 176, 176, 176, 176, 2319, 2154, 2252,
	2254, 2157, 2002, 1359, 1910, 1630, 2153, 611, 176, 176,
	1129, 1125, 636, 1864, 1918, 1885, 1599, 1887, 1875, 887,
	637, 1485, 2114, 886, 176, 1126, 86, 1882, 1884, 86,
	990, 1129, 1125, 1890, 1472, 1486, 88, 87, 1946, 1917,
	87, 1915, 1894, 1895, 1896, 528, 1126, 1914, 1249, 1458,
	1538, 1539, 1128, 114, 1127, 95, 2159, 1471, 1556, 1557,
	2081, 88, 1711, 2340, 1980, 577, 94, 2294, 93, 1916,
	1984, 1122, 1123, 1128, 1863, 1127, 1825, 88, 1545, 1991,
	528, 1700, 1959, 644, 645, 1908, 1909, 1990, 618, 95,
	176, 1727, 93, 1978, 528, 1938, 2396, 2260, 2258, 2257,
	94, 94, 93, 528, 2250, 1951, 1944, 2158, 2011, 1945,
	528, 528, 2156, 176, 176, 176, 176, 176, 2086, 1995,
	2053, 1652, 1971, 95, 527, 176, 2010, 1972, 2025, 1957,
	176, 2019, 1958, 176, 94, 1996, 176, 176, 176, 1433,
	1959, 643, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449,
	1450, 1451, 1452, 1453, 1454, 1455, 1456, 2249, 2147, 2016,
	1988, 1804, 1789, 176, 2016, 624, 2401, 2400, 664, 1766,
	1754, 815, 1994, 822, 1751, 1740, 1741, 177, 2045, 177,
	1156, 2046, 177, 1148, 1997, 1118, 2401, 2026, 2079, 625,
	2029, 2024, 626, 1757, 176, 2038, 2325, 1492, 100, 101,
	2057, 528, 2063, 2064, 89, 1369, 634, 2047, 528, 2042,
	529, 529, 529, 2054, 176, 2043, 2027, 2028, 97, 2030,
	82, 1, 2370, 497, 176, 2091, 1525, 1106, 529, 529,
	511, 2366, 1335, 1325, 2224, 2295, 1628, 848, 176, 139,
	1589, 176, 1590, 2383, 104, 811, 2075, 2074, 103, 851,
	949, 2115, 1653, 2217, 1865, 1600, 2088, 1182, 1180, 1181,
	1179, 1184, 1183, 1178, 1408, 525, 2076, 2077, 1824, 174,
	2090, 1171, 1149, 888, 487, 2071, 1685, 2096, 2095, 2087,
	493, 1049, 1989, 1630, 1839, 2136, 663, 656, 2021, 2110,
	176, 2151, 2001, 2003, 1796, 2112, 2113, 2109, 2006, 1999,
	2318, 2251, 2339, 1597, 1145, 1758, 2131, 1074, 1487, 1952,
	177, 1571, 2122, 550, 1533, 1428, 566, 563, 564, 1782,
	1805, 1023, 548, 542, 541, 2130, 2145, 177, 1157, 1030,
	1029, 1039, 1040, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1031, 1816, 2148, 1041, 1814, 176, 529, 1813, 1709, 1575,
	177, 2155, 2175, 2171, 1569, 529, 1788, 2170, 2160, 1598,
	1925, 529, 2119, 2120, 2098, 2121, 1002, 2180, 2123, 1121,
	2125, 2177, 537, 823, 1484, 2182, 2304, 2184, 2185, 1726,
	2134, 176, 1120, 1495, 176, 176, 176, 528, 1496, 2279,
	2183, 1845, 60, 38, 532, 2407, 993, 650, 2192, 32,
	31, 30, 29, 28, 2212, 2225, 528, 528, 528, 23,
	2195, 22, 2197, 21, 20, 19, 25, 18, 17, 16,
	109, 2230, 47, 44, 42, 2220, 1030, 1029, 1039, 1040,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1031, 116, 115,
	1041, 528, 528, 528, 176, 1030, 1029, 1039, 1040, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1031, 2236, 45, 1041,
	41, 925, 39, 27, 26, 2229, 2264, 528, 15, 528,
	14, 13, 12, 11, 10, 9, 5, 2272, 4, 996,
	2274, 2267, 2247, 2246, 2256, 24, 2269, 2019, 2, 2255,
	2188, 2019, 2265, 0, 528, 2263, 0, 0, 0, 2244,
	2245, 618, 0, 0, 0, 0, 2271, 0, 0, 0,
	177, 2282, 0, 618, 2016, 2276, 0, 0, 2275, 0,
	0, 34, 0, 0, 528, 0, 0, 0, 0, 0,
	2284, 0, 2285, 0, 0, 0, 2288, 2291, 0, 0,
	0, 2290, 529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2316, 541, 1732, 1733, 1734, 0, 529,
	529, 2297, 529, 0, 529, 529, 0, 529, 529, 529,
	529, 529, 529, 2315, 528, 2317, 2314, 0, 664, 664,
	664, 0, 529, 0, 2336, 2326, 177, 0, 0, 0,
	2019, 2329, 0, 0, 2328, 0, 992, 994, 2330, 528,
	176, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	2342, 528, 0, 529, 0, 177, 2345, 172, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 528, 0,
	177, 0, 0, 0, 0, 2358, 0, 0, 528, 0,
	0, 114, 2355, 0, 528, 528, 177, 0, 0, 0,
	34, 0, 0, 177, 156, 2365, 2377, 0, 2382, 2369,
	528, 2374, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 529, 529, 529, 0, 0, 0, 2392, 2016, 0,
	2398, 2297, 2384, 0, 0, 0, 0, 0, 2404, 2129,
	0, 0, 0, 0, 0, 0, 34, 0, 2412, 0,
	2410, 177, 0, 0, 0, 0, 2415, 2414, 0, 2421,
	153, 0, 154, 0, 1152, 0, 0, 0, 2425, 2423,
	2426, 0, 171, 664, 0, 578, 0, 0, 2435, 1172,
	0, 0, 2436, 0, 2438, 0, 0, 0, 0, 2440,
	0, 2441, 0, 528, 0, 0, 0, 0, 0, 2449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2444, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 175, 0, 0, 483, 1199, 0, 523,
	0, 0, 0, 0, 0, 0, 483, 0, 157, 0,
	0, 0, 529, 529, 483, 0, 0, 162, 0, 0,
	0, 0, 0, 0, 0, 0, 631, 177, 0, 1030,
	1029, 1039, 1040, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1031, 0, 649, 1041, 649, 0, 0, 0, 1130, 0,
	0, 0, 483, 177, 0, 0, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 177, 0, 0, 529,
	0, 0, 1953, 1954, 177, 0, 177, 0, 177, 177,
	529, 0, 1737, 529, 0, 0, 1973, 1974, 0, 1975,
	1976, 0, 0, 0, 529, 0, 0, 0, 0, 0,
	1982, 1983, 1030, 1029, 1039, 1040, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1031, 0, 0, 1041, 0, 0, 0,
	0, 0, 1187, 149, 0, 0, 0, 0, 0, 0,
	815, 1030, 1029, 1039, 1040, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1031, 1271, 0, 1041, 0, 1277, 1277, 529,
	1277, 0, 1277, 1277, 0, 1286, 1277, 1277, 1277, 1277,
	1277, 0, 0, 0, 0, 1200, 0, 0, 1271, 1271,
	815, 0, 0, 529, 0, 0, 0, 0, 0, 529,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2056,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1347, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1213, 1216, 1217, 1218,
	1219, 1220, 1221, 529, 1222, 1223, 1224, 1225, 1226, 1201,
	1202, 1203, 1204, 1185, 1186, 1214, 0, 1188, 0, 1189,
	1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 0, 0, 664,
	664, 664, 0, 0, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 177, 177,
	0, 0, 177, 0, 177, 0, 0, 0, 2116, 0,
	177, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 177, 529, 0, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1215, 0, 0, 0, 0, 0, 1464,
	0, 664, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 1494, 0, 1025, 0, 1028, 0, 0, 0, 0,
	0, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 2194, 1026,
	1027, 1024, 1030, 1029, 1039, 1040, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1031, 0, 0, 1041, 0, 0, 0,
	0, 0, 0, 0, 1547, 483, 0, 483, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 1152, 0, 0,
	664, 0, 177, 0, 0, 0, 0, 0, 664, 0,
	177, 664, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 815, 0, 0, 2231, 2232, 2233, 2234, 2235,
	0, 0, 0, 2238, 2239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 177, 172, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1898, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 114, 822, 136, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 815, 0, 0, 0, 0, 0, 822, 0, 0,
	0, 0, 529, 0, 0, 0, 0, 177, 483, 0,
	146, 0, 0, 0, 177, 135, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 631, 529, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 529, 154, 0, 0,
	0, 815, 0, 1252, 1253, 145, 144, 171, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 177,
	177, 177, 177, 177, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 1254, 147, 0, 1251, 0, 141, 142,
	0, 0, 529, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 162, 0, 1132, 1134, 0, 2378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1720, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 0, 0, 529, 529, 0,
	177, 177, 177, 177, 177, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 177, 0, 0,
	177, 0, 0, 177, 177, 177, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	177, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 529, 0,
	0, 0, 0, 0, 0, 529, 1783, 0, 1272, 1272,
	0, 177, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	1323, 0, 0, 143, 0, 177, 0, 0, 177, 0,
	0, 0, 0, 483, 0, 137, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 0, 177, 0, 0,
	1391, 1392, 483, 483, 483, 483, 483, 483, 483, 0,
	1888, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1547, 0,
	0, 0, 0, 0, 1905, 0, 0, 0, 0, 483,
	0, 0, 664, 0, 1911, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 177, 177, 177, 529, 0, 0, 0, 0, 0,
	649, 1368, 649, 649, 0, 0, 649, 649, 649, 0,
	0, 0, 1272, 529, 529, 529, 0, 0, 0, 0,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 649, 649, 649, 649, 649, 0, 0,
	0, 0, 0, 0, 0, 1323, 0, 0, 529, 529,
	529, 177, 0, 0, 0, 1277, 0, 649, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1998,
	0, 631, 0, 0, 529, 0, 529, 0, 664, 0,
	0, 0, 1271, 0, 483, 2023, 1277, 1271, 0, 0,
	1368, 0, 483, 0, 483, 0, 483, 1577, 0, 0,
	0, 529, 0, 0, 0, 0, 0, 0, 610, 73,
	0, 0, 0, 0, 0, 0, 0, 1491, 0, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 529, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1132, 1523, 0, 0, 0, 0, 0, 0,
	0, 0, 1109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 0, 0, 815, 0, 0, 1271,
	621, 529, 73, 1547, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	621, 0, 0, 482, 0, 0, 529, 177, 0, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 529, 0,
	0, 614, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 529, 0, 72, 36, 37,
	74, 0, 0, 0, 0, 529, 0, 0, 0, 0,
	0, 529, 529, 0, 0, 0, 0, 78, 0, 819,
	0, 40, 66, 67, 0, 64, 68, 529, 0, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 483, 483, 0, 0,
	483, 0, 1712, 53, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 81, 483, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1547, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2226, 2227, 2228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 43, 46, 49, 48, 51,
	0, 63, 649, 649, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2242, 2242, 2242, 0,
	649, 0, 0, 0, 0, 0, 52, 77, 76, 0,
	0, 61, 62, 50, 0, 0, 0, 1271, 0, 0,
	0, 0, 2268, 0, 2270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 0, 0, 0, 0, 0, 0, 0, 1323, 1547,
	0, 0, 54, 55, 0, 56, 57, 58, 59, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 664,
	1738, 0, 0, 0, 1739, 0, 0, 0, 483, 483,
	0, 0, 1745, 1746, 0, 0, 0, 0, 1752, 0,
	0, 1755, 1756, 0, 0, 0, 0, 0, 0, 1762,
	0, 1763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1547,
	0, 0, 0, 0, 0, 0, 1767, 1768, 1769, 1770,
	1771, 1543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1781, 0, 1547, 483, 0, 0, 0, 0,
	0, 0, 1897, 0, 0, 0, 2351, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 1271, 1368, 2356, 0, 0, 0, 0, 0, 80,
	0, 0, 0, 1547, 0, 0, 0, 0, 0, 664,
	664, 985, 985, 985, 0, 0, 0, 483, 483, 483,
	483, 483, 926, 0, 931, 1547, 0, 933, 0, 0,
	0, 73, 0, 483, 483, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1050, 621, 0, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 649, 649,
	0, 0, 0, 0, 0, 0, 1064, 0, 0, 0,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 0, 1076,
	1078, 1081, 1081, 1081, 1078, 1081, 1081, 1078, 1081, 1094,
	1095, 1096, 1097, 1098, 1099, 1100, 1101, 172, 1547, 0,
	0, 0, 0, 1110, 0, 483, 621, 0, 0, 0,
	621, 0, 0, 0, 0, 0, 621, 0, 0, 0,
	0, 114, 1272, 136, 0, 0, 0, 1272, 483, 483,
	483, 483, 483, 0, 156, 0, 0, 0, 0, 0,
	2039, 0, 0, 0, 0, 483, 0, 0, 483, 0,
	0, 483, 2048, 1368, 0, 0, 0, 0, 0, 1955,
	1956, 0, 0, 0, 0, 146, 0, 0, 0, 0,
	135, 0, 0, 0, 0, 0, 0, 0, 483, 0,
	0, 0, 0, 0, 0, 1159, 0, 0, 0, 0,
	153, 0, 154, 0, 0, 0, 0, 0, 123, 124,
	145, 144, 171, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 2022, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 483,
	0, 0, 0, 0, 0, 2040, 2041, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 483, 140, 121, 147,
	128, 120, 172, 141, 142, 0, 0, 0, 157, 0,
	0, 0, 0, 1248, 0, 0, 0, 162, 129, 0,
	0, 0, 0, 0, 0, 0, 114, 0, 136, 0,
	0, 0, 132, 130, 125, 126, 127, 131, 0, 156,
	0, 0, 122, 0, 0, 483, 0, 0, 0, 0,
	0, 133, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 0, 0, 0, 135, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1177, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 154, 0, 0,
	483, 0, 0, 1252, 1253, 145, 144, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2117, 0, 2118,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	2127, 2128, 0, 0, 0, 0, 483, 0, 0, 483,
	483, 483, 0, 2139, 0, 0, 0, 2143, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1308, 140, 1254, 147, 0, 1251, 0, 141, 142,
	0, 0, 0, 157, 0, 0, 0, 0, 0, 2164,
	2165, 0, 162, 2169, 0, 0, 0, 0, 0, 0,
	1349, 0, 0, 0, 0, 0, 0, 0, 143, 1323,
	0, 2181, 985, 985, 985, 0, 0, 0, 0, 0,
	137, 0, 0, 138, 0, 0, 0, 1272, 0, 0,
	0, 1378, 0, 0, 0, 0, 0, 0, 1382, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1393,
	1394, 1395, 1396, 1397, 1398, 1399, 0, 0, 0, 0,
	0, 2215, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 150, 155, 152, 158, 159, 160,
	161, 163, 164, 165, 166, 0, 0, 0, 0, 0,
	167, 168, 169, 170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 483, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 138, 0,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 1572,
	2300, 2301, 2302, 2303, 0, 2307, 0, 2308, 2309, 2311,
	0, 0, 0, 2312, 2313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1558, 0, 0, 0, 0, 0, 0, 0, 1562,
	0, 1565, 0, 0, 1417, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2405, 2406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1417, 0, 0, 0, 0, 0, 0, 1696, 0,
	0, 0, 0, 1705, 1706, 0, 0, 1710, 0, 0,
	0, 0, 0, 0, 0, 1713, 0, 0, 0, 0,
	0, 0, 1716, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1719, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1779,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 621, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1810, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1891, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1929, 1930, 1931, 1932, 1933, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1417, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1947, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2020, 0, 73, 0,
	0, 1572, 1572, 1572, 1572, 1572, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 1572, 0, 0, 1572, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2061, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2097, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2133, 0, 0, 0,
	2108, 0, 0, 2111, 2140, 2141, 2142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2144, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1572, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2208, 0, 0, 2209, 2210, 2211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 73, 0, 2020, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2020, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2341, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 2346, 793, 779, 407, 0, 726, 796, 696,
	714, 806, 717, 720, 761, 675, 739, 330, 711, 0,
	700, 671, 706, 672, 698, 728, 235, 695, 781, 743,
	795, 287, 232, 677, 701, 344, 716, 187, 763, 383,
	220, 297, 294, 414, 246, 238, 234, 219, 271, 303,
	342, 401, 336, 802, 291, 750, 0, 392, 315, 0,
	0, 0, 730, 785, 737, 775, 725, 762, 685, 749,
	797, 712, 758, 798, 277, 218, 186, 327, 393, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 2385, 0,
	2386, 0, 0, 0, 0, 0, 209, 0, 216, 708,
	755, 792, 709, 757, 230, 275, 237, 229, 411, 803,
	784, 0, 0, 202, 794, 732, 760, 809, 670, 752,
	0, 673, 676, 805, 788, 704, 240, 0, 0, 0,
	0, 0, 0, 0, 729, 738, 772, 723, 0, 0,
	0, 0, 0, 0, 0, 0, 702, 0, 748, 0,
	0, 0, 681, 674, 0, 0, 0, 0, 727, 0,
	0, 0, 684, 0, 703, 773, 0, 668, 258, 678,
	316, 0, 777, 787, 724, 443, 791, 722, 721, 767,
	682, 783, 715, 286, 680, 283, 182, 198, 0, 713,
	326, 366, 372, 782, 699, 707, 221, 705, 370, 340,
	428, 205, 248, 363, 345, 368, 747, 765, 369, 292,
	416, 358, 426, 444, 445, 228, 320, 434, 405, 440,
	456, 199, 225, 334, 398, 431, 389, 313, 412, 413,
	282, 388, 256, 185, 290, 450, 197, 378, 213, 190,
	400, 424, 210, 381, 0, 0, 458, 192, 422, 397,
	310, 279, 280, 191, 0, 362, 233, 254, 223, 329,
	419, 420, 222, 459, 201, 439, 194, 987, 438, 322,
	415, 423, 311, 302, 193, 421, 309, 301, 285, 244,
	265, 356, 295, 357, 266, 318, 317, 319, 0, 188,
	0, 394, 432, 460, 206, 207, 208, 694, 243, 247,
	253, 255, 261, 262, 269, 288, 333, 355, 353, 359,
	778, 410, 427, 435, 442, 448, 449, 451, 452, 453,
	454, 455, 321, 268, 390, 284, 293, 770, 808, 339,
	371, 211, 430, 391, 689, 693, 687, 688, 741, 742,
	690, 799, 800, 801, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 774, 683, 0, 691, 692, 0, 780,
	789, 790, 746, 181, 195, 289, 804, 360, 251, 457,
	437, 433, 669, 686, 227, 697, 0, 0, 710, 718,
	719, 731, 733, 734, 735, 736, 745, 753, 754, 756,
	764, 766, 769, 771, 776, 786, 807, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 272, 273,
	276, 281, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	379, 380, 384, 385, 386, 387, 395, 399, 417, 418,
	429, 441, 446, 260, 425, 447, 0, 298, 744, 751,
	300, 245, 263, 274, 759, 436, 396, 200, 367, 252,
	189, 217, 203, 224, 239, 242, 278, 308, 314, 343,
	347, 257, 236, 215, 364, 212, 382, 402, 403, 404,
	406, 312, 231, 346, 740, 768, 296, 408, 409, 270,
	793, 779, 407, 0, 726, 796, 696, 714, 806, 717,
	720, 761, 675, 739, 330, 711, 0, 700, 671, 706,
	672, 698, 728, 235, 695, 781, 743, 795, 287, 232,
	677, 701, 344, 716, 187, 763, 383, 220, 297, 294,
	414, 246, 238, 234, 219, 271, 303, 342, 401, 336,
	802, 291, 750, 0, 392, 315, 0, 0, 0, 730,
	785, 737, 775, 725, 762, 685, 749, 797, 712, 758,
	798, 277, 218, 186, 327, 393, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 708, 755, 792, 709,
	757, 230, 275, 237, 229, 411, 803, 784, 0, 0,
	202, 794, 732, 760, 809, 670, 752, 0, 673, 676,
	805, 788, 704, 240, 0, 0, 0, 0, 0, 0,
	0, 729, 738, 772, 723, 0, 0, 0, 0, 0,
	0, 2049, 0, 702, 0, 748, 0, 0, 0, 681,
	674, 0, 0, 0, 0, 727, 0, 0, 0, 684,
	0, 703, 773, 0, 668, 258, 678, 316, 0, 777,
	787, 724, 443, 791, 722, 721, 767, 682, 783, 715,
	286, 680, 283, 182, 198, 0, 713, 326, 366, 372,
	782, 699, 707, 221, 705, 370, 340, 428, 205, 248,
	363, 345, 368, 747, 765, 369, 292, 416, 358, 426,
	444, 445, 228, 320, 434, 405, 440, 456, 199, 225,
	334, 398, 431, 389, 313, 412, 413, 282, 388, 256,
	185, 290, 450, 197, 378, 213, 190, 400, 424, 210,
	381, 0, 0, 458, 192, 422, 397, 310, 279, 280,
	191, 0, 362, 233, 254, 223, 329, 419, 420, 222,
	459, 201, 439, 194, 987, 438, 322, 415, 423, 311,
	302, 193, 421, 309, 301, 285, 244, 265, 356, 295,
	357, 266, 318, 317, 319, 0, 188, 0, 394, 432,
	460, 206, 207, 208, 694, 243, 247, 253, 255, 261,
	262, 269, 288, 333, 355, 353, 359, 778, 410, 427,
	435, 442, 448, 449, 451, 452, 453, 454, 455, 321,
	268, 390, 284, 293, 770, 808, 339, 371, 211, 430,
	391, 689, 693, 687, 688, 741, 742, 690, 799, 800,
	801, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 0,
	774, 683, 0, 691, 692, 0, 780, 789, 790, 746,
	181, 195, 289, 804, 360, 251, 457, 437, 433, 669,
	686, 227, 697, 0, 0, 710, 718, 719, 731, 733,
	734, 735, 736, 745, 753, 754, 756, 764, 766, 769,
	771, 776, 786, 807, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 272, 273, 276, 281, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 348, 349, 350, 351, 352, 354,
	361, 365, 373, 374, 375, 376, 377, 379, 380, 384,
	385, 386, 387, 395, 399, 417, 418, 429, 441, 446,
	260, 425, 447, 0, 298, 744, 751, 300, 245, 263,
	274, 759, 436, 396, 200, 367, 252, 189, 217, 203,
	224, 239, 242, 278, 308, 314, 343, 347, 257, 236,
	215, 364, 212, 382, 402, 403, 404, 406, 312, 231,
	346, 740, 768, 296, 408, 409, 270, 793, 779, 407,
	0, 726, 796, 696, 714, 806, 717, 720, 761, 675,
	739, 330, 711, 0, 700, 671, 706, 672, 698, 728,
	235, 695, 781, 743, 795, 287, 232, 677, 701, 344,
	716, 187, 763, 383, 220, 297, 294, 414, 246, 238,
	234, 219, 271, 303, 342, 401, 336, 802, 291, 750,
	0, 392, 315, 0, 0, 0, 730, 785, 737, 775,
	725, 762, 685, 749, 797, 712, 758, 798, 277, 218,
	186, 327, 393, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 708, 755, 792, 709, 757, 230, 275,
	237, 229, 411, 803, 784, 0, 0, 202, 794, 732,
	760, 809, 670, 752, 0, 673, 676, 805, 788, 704,
	240, 0, 0, 0, 0, 0, 0, 0, 729, 738,
	772, 723, 0, 0, 0, 0, 0, 0, 2009, 0,
	702, 0, 748, 0, 0, 0, 681, 674, 0, 0,
	0, 0, 727, 0, 0, 0, 684, 0, 703, 773,
	0, 668, 258, 678, 316, 0, 777, 787, 724, 443,
	791, 722, 721, 767, 682, 783, 715, 286, 680, 283,
	182, 198, 0, 713, 326, 366, 372, 782, 699, 707,
	221, 705, 370, 340, 428, 205, 248, 363, 345, 368,
	747, 765, 369, 292, 416, 358, 426, 444, 445, 228,
	320, 434, 405, 440, 456, 199, 225, 334, 398, 431,
	389, 313, 412, 413, 282, 388, 256, 185, 290, 450,
	197, 378, 213, 190, 400, 424, 210, 381, 0, 0,
	458, 192, 422, 397, 310, 279, 280, 191, 0, 362,
	233, 254, 223, 329, 419, 420, 222, 459, 201, 439,
	194, 987, 438, 322, 415, 423, 311, 302, 193, 421,
	309, 301, 285, 244, 265, 356, 295, 357, 266, 318,
	317, 319, 0, 188, 0, 394, 432, 460, 206, 207,
	208, 694, 243, 247, 253, 255, 261, 262, 269, 288,
	333, 355, 353, 359, 778, 410, 427, 435, 442, 448,
	449, 451, 452, 453, 454, 455, 321, 268, 390, 284,
	293, 770, 808, 339, 371, 211, 430, 391, 689, 693,
	687, 688, 741, 742, 690, 799, 800, 801, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 774, 683, 0,
	691, 692, 0, 780, 789, 790, 746, 181, 195, 289,
	804, 360, 251, 457, 437, 433, 669, 686, 227, 697,
	0, 0, 710, 718, 719, 731, 733, 734, 735, 736,
	745, 753, 754, 756, 764, 766, 769, 771, 776, 786,
	807, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 272, 273, 276, 281, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 379, 380, 384, 385, 386, 387,
	395, 399, 417, 418, 429, 441, 446, 260, 425, 447,
	0, 298, 744, 751, 300, 245, 263, 274, 759, 436,
	396, 200, 367, 252, 189, 217, 203, 224, 239, 242,
	278, 308, 314, 343, 347, 257, 236, 215, 364, 212,
	382, 402, 403, 404, 406, 312, 231, 346, 740, 768,
	296, 408, 409, 270, 793, 779, 407, 0, 726, 796,
	696, 714, 806, 717, 720, 761, 675, 739, 330, 711,
	0, 700, 671, 706, 672, 698, 728, 235, 695, 781,
	743, 795, 287, 232, 677, 701, 344, 716, 187, 763,
	383, 220, 297, 294, 414, 246, 238, 234, 219, 271,
	303, 342, 401, 336, 802, 291, 750, 0, 392, 315,
	0, 0, 0, 730, 785, 737, 775, 725, 762, 685,
	749, 797, 712, 758, 798, 277, 218, 186, 327, 393,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	708, 755, 792, 709, 757, 230, 275, 237, 229, 411,
	803, 784, 0, 0, 202, 794, 732, 760, 809, 670,
	752, 0, 673, 676, 805, 788, 704, 240, 0, 0,
	0, 0, 0, 0, 0, 729, 738, 772, 723, 0,
	0, 0, 0, 0, 0, 1560, 0, 702, 0, 748,
	0, 0, 0, 681, 674, 0, 0, 0, 0, 727,
	0, 0, 0, 684, 0, 703, 773, 0, 668, 258,
	678, 316, 0, 777, 787, 724, 443, 791, 722, 721,
	767, 682, 783, 715, 286, 680, 283, 182, 198, 0,
	713, 326, 366, 372, 782, 699, 707, 221, 705, 370,
	340, 428, 205, 248, 363, 345, 368, 747, 765, 369,
	292, 416, 358, 426, 444, 445, 228, 320, 434, 405,
	440, 456, 199, 225, 334, 398, 431, 389, 313, 412,
	413, 282, 388, 256, 185, 290, 450, 197, 378, 213,
	190, 400, 424, 210, 381, 0, 0, 458, 192, 422,
	397, 310, 279, 280, 191, 0, 362, 233, 254, 223,
	329, 419, 420, 222, 459, 201, 439, 194, 987, 438,
	322, 415, 423, 311, 302, 193, 421, 309, 301, 285,
	244, 265, 356, 295, 357, 266, 318, 317, 319, 0,
	188, 0, 394, 432, 460, 206, 207, 208, 694, 243,
	247, 253, 255, 261, 262, 269, 288, 333, 355, 353,
	359, 778, 410, 427, 435, 442, 448, 449, 451, 452,
	453, 454, 455, 321, 268, 390, 284, 293, 770, 808,
	339, 371, 211, 430, 391, 689, 693, 687, 688, 741,
	742, 690, 799, 800, 801, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 774, 683, 0, 691, 692, 0,
	780, 789, 790, 746, 181, 195, 289, 804, 360, 251,
	457, 437, 433, 669, 686, 227, 697, 0, 0, 710,
	718, 719, 731, 733, 734, 735, 736, 745, 753, 754,
	756, 764, 766, 769, 771, 776, 786, 807, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 272,
	273, 276, 281, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 379, 380, 384, 385, 386, 387, 395, 399, 417,
	418, 429, 441, 446, 260, 425, 447, 0, 298, 744,
	751, 300, 245, 263, 274, 759, 436, 396, 200, 367,
	252, 189, 217, 203, 224, 239, 242, 278, 308, 314,
	343, 347, 257, 236, 215, 364, 212, 382, 402, 403,
	404, 406, 312, 231, 346, 740, 768, 296, 408, 409,
	270, 793, 779, 407, 0, 726, 796, 696, 714, 806,
	717, 720, 761, 675, 739, 330, 711, 0, 700, 671,
	706, 672, 698, 728, 235, 695, 781, 743, 795, 287,
	232, 677, 701, 344, 716, 187, 763, 383, 220, 297,
	294, 414, 246, 238, 234, 219, 271, 303, 342, 401,
	336, 802, 291, 750, 0, 392, 315, 0, 0, 0,
	730, 785, 737, 775, 725, 762, 685, 749, 797, 712,
	758, 798, 277, 218, 186, 327, 393, 250, 0, 81,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 708, 755, 792,
	709, 757, 230, 275, 237, 229, 411, 803, 784, 0,
	0, 202, 794, 732, 760, 809, 670, 752, 0, 673,
	676, 805, 788, 704, 240, 0, 0, 0, 0, 0,
	0, 0, 729, 738, 772, 723, 0, 0, 0, 0,
	0, 0, 0, 0, 702, 0, 748, 0, 0, 0,
	681, 674, 0, 0, 0, 0, 727, 0, 0, 0,
	684, 0, 703, 773, 0, 668, 258, 678, 316, 0,
	777, 787, 724, 443, 791, 722, 721, 767, 682, 783,
	715, 286, 680, 283, 182, 198, 0, 713, 326, 366,
	372, 782, 699, 707, 221, 705, 370, 340, 428, 205,
	248, 363, 345, 368, 747, 765, 369, 292, 416, 358,
	426, 444, 445, 228, 320, 434, 405, 440, 456, 199,
	225, 334, 398, 431, 389, 313, 412, 413, 282, 388,
	256, 185, 290, 450, 197, 378, 213, 190, 400, 424,
	210, 381, 0, 0, 458, 192, 422, 397, 310, 279,
	280, 191, 0, 362, 233, 254, 223, 329, 419, 420,
	222, 459, 201, 439, 194, 987, 438, 322, 415, 423,
	311, 302, 193, 421, 309, 301, 285, 244, 265, 356,
	295, 357, 266, 318, 317, 319, 0, 188, 0, 394,
	432, 460, 206, 207, 208, 694, 243, 247, 253, 255,
	261, 262, 269, 288, 333, 355, 353, 359, 778, 410,
	427, 435, 442, 448, 449, 451, 452, 453, 454, 455,
	321, 268, 390, 284, 293, 770, 808, 339, 371, 211,
	430, 391, 689, 693, 687, 688, 741, 742, 690, 799,
	800, 801, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 774, 683, 0, 691, 692, 0, 780, 789, 790,
	746, 181, 195, 289, 804, 360, 251, 457, 437, 433,
	669, 686, 227, 697, 0, 0, 710, 718, 719, 731,
	733, 734, 735, 736, 745, 753, 754, 756, 764, 766,
	769, 771, 776, 786, 807, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 272, 273, 276, 281,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 379, 380,
	384, 385, 386, 387, 395, 399, 417, 418, 429, 441,
	446, 260, 425, 447, 0, 298, 744, 751, 300, 245,
	263, 274, 759, 436, 396, 200, 367, 252, 189, 217,
	203, 224, 239, 242, 278, 308, 314, 343, 347, 257,
	236, 215, 364, 212, 382, 402, 403, 404, 406, 312,
	231, 346, 740, 768, 296, 408, 409, 270, 793, 779,
	407, 0, 726, 796, 696, 714, 806, 717, 720, 761,
	675, 739, 330, 711, 0, 700, 671, 706, 672, 698,
	728, 235, 695, 781, 743, 795, 287, 232, 677, 701,
	344, 716, 187, 763, 383, 220, 297, 294, 414, 246,
	238, 234, 219, 271, 303, 342, 401, 336, 802, 291,
	750, 0, 392, 315, 0, 0, 0, 730, 785, 737,
	775, 725, 762, 685, 749, 797, 712, 758, 798, 277,
	218, 186, 327, 393, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 708, 755, 792, 709, 757, 230,
	275, 237, 229, 411, 803, 784, 0, 0, 202, 794,
	732, 760, 809, 670, 752, 0, 673, 676, 805, 788,
	704, 240, 0, 0, 0, 0, 0, 0, 0, 729,
	738, 772, 723, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 748, 0, 0, 0, 681, 674, 0,
	0, 0, 0, 727, 0, 0, 0, 684, 0, 703,
	773, 0, 668, 258, 678, 316, 0, 777, 787, 724,
	443, 791, 722, 721, 767, 682, 783, 715, 286, 680,
	283, 182, 198, 0, 713, 326, 366, 372, 782, 699,
	707, 221, 705, 370, 340, 428, 205, 248, 363, 345,
	368, 747, 765, 369, 292, 416, 358, 426, 444, 445,
	228, 320, 434, 405, 440, 456, 199, 225, 334, 398,
	431, 389, 313, 412, 413, 282, 388, 256, 185, 290,
	450, 197, 378, 213, 190, 400, 424, 210, 381, 0,
	0, 458, 192, 422, 397, 310, 279, 280, 191, 0,
	362, 233, 254, 223, 329, 419, 420, 222, 459, 201,
	439, 194, 987, 438, 322, 415, 423, 311, 302, 193,
	421, 309, 301, 285, 244, 265, 356, 295, 357, 266,
	318, 317, 319, 0, 188, 0, 394, 432, 460, 206,
	207, 208, 694, 243, 247, 253, 255, 261, 262, 269,
	288, 333, 355, 353, 359, 778, 410, 427, 435, 442,
	448, 449, 451, 452, 453, 454, 455, 321, 268, 390,
	284, 293, 770, 808, 339, 371, 211, 430, 391, 689,
	693, 687, 688, 741, 742, 690, 799, 800, 801, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 0, 774, 683,
	0, 691, 692, 0, 780, 789, 790, 746, 181, 195,
	289, 804, 360, 251, 457, 437, 433, 669, 686, 227,
	697, 0, 0, 710, 718, 719, 731, 733, 734, 735,
	736, 745, 753, 754, 756, 764, 766, 769, 771, 776,
	786, 807, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 272, 273, 276, 281, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 379, 380, 384, 385, 386,
	387, 395, 399, 417, 418, 429, 441, 446, 260, 425,
	447, 0, 298, 744, 751, 300, 245, 263, 274, 759,
	436, 396, 200, 367, 252, 189, 217, 203, 224, 239,
	242, 278, 308, 314, 343, 347, 257, 236, 215, 364,
	212, 382, 402, 403, 404, 406, 312, 231, 346, 740,
	768, 296, 408, 409, 270, 793, 779, 407, 0, 726,
	796, 696, 714, 806, 717, 720, 761, 675, 739, 330,
	711, 0, 700, 671, 706, 672, 698, 728, 235, 695,
	781, 743, 795, 287, 232, 677, 701, 344, 716, 187,
	763, 383, 220, 297, 294, 414, 246, 238, 234, 219,
	271, 303, 342, 401, 336, 802, 291, 750, 0, 392,
	315, 0, 0, 0, 730, 785, 737, 775, 725, 762,
	685, 749, 797, 712, 758, 798, 277, 218, 186, 327,
	393, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 708, 755, 792, 709, 757, 230, 275, 237, 229,
	411, 803, 784, 0, 0, 810, 794, 732, 760, 809,
	670, 752, 0, 673, 676, 805, 788, 704, 240, 0,
	0, 0, 0, 0, 0, 0, 729, 738, 772, 723,
	0, 0, 0, 0, 0, 0, 0, 0, 702, 0,
	748, 0, 0, 0, 681, 674, 0, 0, 0, 0,
	727, 0, 0, 0, 684, 0, 703, 773, 0, 668,
	258, 678, 316, 0, 777, 787, 724, 443, 791, 722,
	721, 767, 682, 783, 715, 286, 680, 283, 182, 198,
	0, 713, 326, 366, 372, 782, 699, 707, 221, 705,
	370, 340, 428, 205, 248, 363, 345, 368, 747, 765,
	369, 292, 416, 358, 426, 444, 445, 228, 320, 434,
	405, 440, 456, 199, 225, 334, 398, 431, 389, 313,
	412, 413, 282, 388, 256, 185, 290, 450, 197, 378,
	213, 190, 400, 424, 210, 381, 0, 0, 458, 192,
	422, 397, 310, 279, 280, 191, 0, 362, 233, 254,
	223, 329, 419, 420, 222, 459, 201, 439, 194, 679,
	438, 322, 415, 423, 311, 302, 193, 421, 309, 301,
	285, 244, 265, 356, 295, 357, 266, 318, 317, 319,
	0, 188, 0, 394, 432, 460, 206, 207, 208, 694,
	243, 247, 253, 255, 261, 262, 269, 288, 333, 355,
	353, 359, 778, 410, 427, 435, 442, 448, 449, 451,
	452, 453, 454, 455, 667, 661, 660, 284, 293, 770,
	808, 339, 371, 211, 430, 391, 689, 693, 687, 688,
	741, 742, 690, 799, 800, 801, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 774, 683, 0, 691, 692,
	0, 780, 789, 790, 746, 181, 195, 289, 804, 360,
	251, 457, 437, 433, 669, 686, 227, 697, 0, 0,
	710, 718, 719, 731, 733, 734, 735, 736, 745, 753,
	754, 756, 764, 766, 769, 771, 776, 786, 807, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	272, 273, 276, 281, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 348,
	349, 350, 351, 352, 354, 361, 365, 373, 374, 375,
	376, 377, 379, 380, 384, 385, 386, 387, 395, 399,
	417, 418, 429, 441, 446, 260, 425, 447, 0, 298,
	744, 751, 300, 245, 263, 274, 759, 436, 396, 200,
	367, 252, 189, 217, 203, 224, 239, 242, 278, 308,
	314, 343, 347, 257, 236, 215, 364, 212, 382, 402,
	403, 404, 406, 312, 231, 346, 740, 768, 296, 408,
	409, 270, 793, 779, 407, 0, 726, 796, 696, 714,
	806, 717, 720, 761, 675, 739, 330, 711, 0, 700,
	671, 706, 672, 698, 728, 235, 695, 781, 743, 795,
	287, 232, 677, 701, 344, 716, 187, 763, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 802, 291, 750, 0, 392, 315, 0, 0,
	0, 730, 785, 737, 775, 725, 762, 685, 749, 797,
	712, 758, 798, 277, 218, 186, 327, 393, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 708, 755,
	792, 709, 757, 230, 275, 237, 229, 411, 803, 784,
	0, 0, 810, 794, 732, 760, 809, 670, 752, 0,
	673, 676, 805, 788, 704, 240, 0, 0, 0, 0,
	0, 0, 0, 729, 738, 772, 723, 0, 0, 0,
	0, 0, 0, 0, 0, 702, 0, 748, 0, 0,
	0, 681, 674, 0, 0, 0, 0, 727, 0, 0,
	0, 684, 0, 703, 773, 0, 668, 258, 678, 316,
	0, 777, 787, 724, 443, 791, 722, 721, 767, 682,
	783, 715, 286, 680, 283, 182, 198, 0, 713, 326,
	366, 372, 782, 699, 707, 221, 705, 370, 340, 428,
	205, 248, 363, 345, 368, 747, 765, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	1163, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 679, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 694, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 778,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 667, 661, 660, 284, 293, 770, 808, 339, 371,
	211, 430, 391, 689, 693, 687, 688, 741, 742, 690,
	799, 800, 801, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 774, 683, 0, 691, 692, 0, 780, 789,
	790, 746, 181, 195, 289, 804, 360, 251, 457, 437,
	433, 669, 686, 227, 697, 0, 0, 710, 718, 719,
	731, 733, 734, 735, 736, 745, 753, 754, 756, 764,
	766, 769, 771, 776, 786, 807, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 744, 751, 300,
	245, 263, 274, 759, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 740, 768, 296, 408, 409, 270, 793,
	779, 407, 0, 726, 796, 696, 714, 806, 717, 720,
	761, 675, 739, 330, 711, 0, 700, 671, 706, 672,
	698, 728, 235, 695, 781, 743, 795, 287, 232, 677,
	701, 344, 716, 187, 763, 383, 220, 297, 294, 414,
	246, 238, 234, 219, 271, 303, 342, 401, 336, 802,
	291, 750, 0, 392, 315, 0, 0, 0, 730, 785,
	737, 775, 725, 762, 685, 749, 797, 712, 758, 798,
	277, 218, 186, 327, 393, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 708, 755, 792, 709, 757,
	230, 275, 237, 229, 411, 803, 784, 0, 0, 810,
	794, 732, 760, 809, 670, 752, 0, 673, 676, 805,
	788, 704, 240, 0, 0, 0, 0, 0, 0, 0,
	729, 738, 772, 723, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 0, 748, 0, 0, 0, 681, 674,
	0, 0, 0, 0, 727, 0, 0, 0, 684, 0,
	703, 773, 0, 668, 258, 678, 316, 0, 777, 787,
	724, 443, 791, 722, 721, 767, 682, 783, 715, 286,
	680, 283, 182, 198, 0, 713, 326, 366, 372, 782,
	699, 707, 221, 705, 370, 340, 428, 205, 248, 363,
	345, 368, 747, 765, 369, 292, 416, 358, 426, 444,
	445, 228, 320, 434, 405, 440, 456, 199, 225, 334,
	398, 431, 389, 313, 412, 413, 282, 388, 256, 185,
	290, 450, 197, 378, 213, 190, 400, 658, 210, 381,
	0, 0, 458, 192, 422, 397, 310, 279, 280, 191,
	0, 362, 233, 254, 223, 329, 419, 420, 222, 459,
	201, 439, 194, 679, 438, 322, 415, 423, 311, 302,
	193, 421, 309, 301, 285, 244, 265, 356, 295, 357,
	266, 318, 317, 319, 0, 188, 0, 394, 432, 460,
	206, 207, 208, 694, 243, 247, 253, 255, 261, 262,
	269, 288, 333, 355, 353, 359, 778, 410, 427, 435,
	442, 448, 449, 451, 452, 453, 454, 455, 667, 661,
	660, 284, 293, 770, 808, 339, 371, 211, 430, 391,
	689, 693, 687, 688, 741, 742, 690, 799, 800, 801,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 0, 774,
	683, 0, 691, 692, 0, 780, 789, 790, 746, 181,
	195, 289, 804, 360, 251, 457, 437, 433, 669, 686,
	227, 697, 0, 0, 710, 718, 719, 731, 733, 734,
	735, 736, 745, 753, 754, 756, 764, 766, 769, 771,
	776, 786, 807, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 272, 273, 276, 281, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 379, 380, 384, 385,
	386, 387, 395, 399, 417, 418, 429, 441, 446, 260,
	425, 447, 0, 298, 744, 751, 300, 245, 263, 274,
	759, 436, 396, 200, 367, 252, 189, 217, 203, 224,
	239, 242, 278, 308, 314, 343, 347, 257, 236, 215,
	364, 212, 382, 402, 403, 404, 406, 312, 231, 346,
	740, 768, 296, 408, 409, 270, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 1466, 0, 546, 0, 0, 0, 235, 545, 0,
	0, 0, 287, 232, 0, 1467, 344, 0, 187, 0,
	383, 220, 297, 294, 414, 246, 238, 234, 219, 271,
	303, 342, 401, 336, 590, 291, 0, 0, 392, 315,
	0, 0, 0, 0, 0, 581, 582, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 218, 186, 327, 393,
	250, 0, 81, 0, 0, 178, 179, 180, 568, 567,
	557, 570, 571, 572, 573, 0, 0, 209, 569, 216,
	602, 574, 575, 576, 0, 230, 275, 237, 229, 411,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	543, 561, 0, 589, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 558, 559, 647, 0, 0, 0, 606,
	0, 560, 0, 0, 552, 553, 555, 554, 556, 562,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 316, 0, 605, 0, 0, 443, 0, 0, 603,
	0, 0, 0, 0, 286, 0, 283, 182, 198, 0,
	0, 326, 366, 372, 0, 0, 0, 221, 0, 370,
	340, 428, 205, 248, 363, 345, 368, 0, 0, 369,
	292, 416, 358, 426, 444, 445, 228, 320, 434, 405,
	440, 456, 199, 225, 334, 398, 431, 389, 313, 412,
	413, 282, 388, 256, 185, 290, 450, 197, 378, 213,
	190, 400, 424, 210, 381, 0, 0, 458, 192, 422,
	397, 310, 279, 280, 191, 0, 362, 233, 254, 223,
	329, 419, 420, 222, 459, 201, 439, 194, 0, 438,
	322, 415, 423, 311, 302, 193, 421, 309, 301, 285,
	244, 265, 356, 295, 357, 266, 318, 317, 319, 0,
	188, 0, 394, 432, 460, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 288, 333, 355, 353,
	359, 0, 410, 427, 435, 442, 448, 449, 451, 452,
	453, 454, 455, 321, 268, 390, 284, 293, 0, 0,
	339, 371, 211, 430, 391, 592, 604, 598, 599, 596,
	597, 591, 595, 594, 593, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 607, 583, 584, 585, 586, 588,
	0, 600, 601, 587, 181, 195, 289, 0, 360, 251,
	457, 437, 433, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 272,
	273, 276, 281, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 379, 380, 384, 385, 386, 387, 395, 399, 417,
	418, 429, 441, 446, 260, 425, 447, 0, 298, 0,
	0, 300, 245, 263, 274, 0, 436, 396, 200, 367,
	252, 189, 217, 203, 224, 239, 242, 278, 308, 314,
	343, 347, 257, 236, 215, 364, 212, 382, 402, 403,
	404, 406, 312, 231, 346, 407, 0, 296, 408, 409,
	270, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 546, 0, 0, 0, 235, 545, 0, 0,
	0, 287, 232, 0, 0, 344, 0, 187, 0, 383,
	220, 297, 294, 414, 246, 238, 234, 219, 271, 303,
	342, 401, 336, 590, 291, 0, 0, 392, 315, 0,
	0, 0, 0, 0, 581, 582, 0, 0, 0, 0,
	0, 0, 1584, 0, 277, 218, 186, 327, 393, 250,
	0, 81, 0, 0, 178, 179, 180, 568, 567, 557,
	570, 571, 572, 573, 0, 0, 209, 569, 216, 602,
	574, 575, 576, 1585, 230, 275, 237, 229, 411, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 543,
	561, 0, 589, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 559, 0, 0, 0, 0, 606, 0,
	560, 0, 0, 552, 553, 555, 554, 556, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	316, 0, 605, 0, 0, 443, 0, 0, 603, 0,
	0, 0, 0, 286, 0, 283, 182, 198, 0, 0,
	326, 366, 372, 0, 0, 0, 221, 0, 370, 340,
	428, 205, 248, 363, 345, 368, 0, 0, 369, 292,
	416, 358, 426, 444, 445, 228, 320, 434, 405, 440,
	456, 199, 225, 334, 398, 431, 389, 313, 412, 413,
	282, 388, 256, 185, 290, 450, 197, 378, 213, 190,
	400, 424, 210, 381, 0, 0, 458, 192, 422, 397,
	310, 279, 280, 191, 0, 362, 233, 254, 223, 329,
	419, 420, 222, 459, 201, 439, 194, 0, 438, 322,
	415, 423, 311, 302, 193, 421, 309, 301, 285, 244,
	265, 356, 295, 357, 266, 318, 317, 319, 0, 188,
	0, 394, 432, 460, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 288, 333, 355, 353, 359,
	0, 410, 427, 435, 442, 448, 449, 451, 452, 453,
	454, 455, 321, 268, 390, 284, 293, 0, 0, 339,
	371, 211, 430, 391, 592, 604, 598, 599, 596, 597,
	591, 595, 594, 593, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 607, 583, 584, 585, 586, 588, 0,
	600, 601, 587, 181, 195, 289, 0, 360, 251, 457,
	437, 433, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 272, 273,
	276, 281, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	379, 380, 384, 385, 386, 387, 395, 399, 417, 418,
	429, 441, 446, 260, 425, 447, 0, 298, 0, 0,
	300, 245, 263, 274, 0, 436, 396, 200, 367, 252,
	189, 217, 203, 224, 239, 242, 278, 308, 314, 343,
	347, 257, 236, 215, 364, 212, 382, 402, 403, 404,
	406, 312, 231, 346, 72, 407, 296, 408, 409, 270,
	0, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 546, 0, 0, 0, 235, 545, 0, 0,
	0, 287, 232, 0, 0, 344, 0, 187, 0, 383,
	220, 297, 294, 414, 246, 238, 234, 219, 271, 303,
	342, 401, 336, 590, 291, 0, 0, 392, 315, 0,
	0, 0, 0, 0, 581, 582, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 218, 186, 327, 393, 250,
	0, 81, 0, 0, 178, 179, 180, 568, 567, 557,
	570, 571, 572, 573, 0, 0, 209, 569, 216, 602,
	574, 575, 576, 0, 230, 275, 237, 229, 411, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 543,
	561, 0, 589, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 559, 0, 0, 0, 0, 606, 0,
	560, 0, 0, 552, 553, 555, 554, 556, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	316, 0, 605, 0, 0, 443, 0, 0, 603, 0,
	0, 0, 0, 286, 0, 283, 182, 198, 0, 0,
	326, 366, 372, 0, 0, 0, 221, 0, 370, 340,
	428, 205, 248, 363, 345, 368, 0, 0, 369, 292,
	416, 358, 426, 444, 445, 228, 320, 434, 405, 440,
	456, 199, 225, 334, 398, 431, 389, 313, 412, 413,
	282, 388, 256, 185, 290, 450, 197, 378, 213, 190,
	400, 424, 210, 381, 0, 0, 458, 192, 422, 397,
	310, 279, 280, 191, 0, 362, 233, 254, 223, 329,
	419, 420, 222, 459, 201, 439, 194, 0, 438, 322,
	415, 423, 311, 302, 193, 421, 309, 301, 285, 244,
	265, 356, 295, 357, 266, 318, 317, 319, 0, 188,
	0, 394, 432, 460, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 288, 333, 355, 353, 359,
	0, 410, 427, 435, 442, 448, 449, 451, 452, 453,
	454, 455, 321, 268, 390, 284, 293, 0, 0, 339,
	371, 211, 430, 391, 592, 604, 598, 599, 596, 597,
	591, 595, 594, 593, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 607, 583, 584, 585, 586, 588, 0,
	600, 601, 587, 181, 195, 289, 80, 360, 251, 457,
	437, 433, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 272, 273,
	276, 281, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	379, 380, 384, 385, 386, 387, 395, 399, 417, 418,
	429, 441, 446, 260, 425, 447, 0, 298, 0, 0,
	300, 245, 263, 274, 0, 436, 396, 200, 367, 252,
	189, 217, 203, 224, 239, 242, 278, 308, 314, 343,
	347, 257, 236, 215, 364, 212, 382, 402, 403, 404,
	406, 312, 231, 346, 407, 0, 296, 408, 409, 270,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 546, 0, 0, 0, 235, 545, 0, 0, 0,
	287, 232, 0, 0, 344, 0, 187, 0, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 590, 291, 0, 0, 392, 315, 0, 0,
	0, 0, 0, 581, 582, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 218, 186, 327, 393, 250, 0,
	81, 0, 1131, 178, 179, 180, 568, 567, 557, 570,
	571, 572, 573, 0, 0, 209, 569, 216, 602, 574,
	575, 576, 0, 230, 275, 237, 229, 411, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 543, 561,
	0, 589, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 558, 559, 0, 0, 0, 0, 606, 0, 560,
	0, 0, 552, 553, 555, 554, 556, 562, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 316,
	0, 605, 0, 0, 443, 0, 0, 603, 0, 0,
	0, 0, 286, 0, 283, 182, 198, 0, 0, 326,
	366, 372, 0, 0, 0, 221, 0, 370, 340, 428,
	205, 248, 363, 345, 368, 0, 0, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	424, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 0, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 0,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 321, 268, 390, 284, 293, 0, 0, 339, 371,
	211, 430, 391, 592, 604, 598, 599, 596, 597, 591,
	595, 594, 593, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 607, 583, 584, 585, 586, 588, 0, 600,
	601, 587, 181, 195, 289, 0, 360, 251, 457, 437,
	433, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 0, 0, 300,
	245, 263, 274, 0, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 407, 0, 296, 408, 409, 270, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	546, 0, 0, 0, 235, 545, 0, 0, 0, 287,
	232, 0, 0, 344, 0, 187, 0, 383, 220, 297,
	294, 414, 246, 238, 234, 219, 271, 303, 342, 401,
	336, 590, 291, 0, 0, 392, 315, 0, 0, 0,
	0, 0, 581, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 218, 186, 327, 393, 250, 0, 81,
	0, 0, 178, 179, 180, 568, 567, 557, 570, 571,
	572, 573, 0, 0, 209, 569, 216, 602, 574, 575,
	576, 0, 230, 275, 237, 229, 411, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 543, 561, 0,
	589, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	558, 559, 647, 0, 0, 0, 606, 0, 560, 0,
	0, 552, 553, 555, 554, 556, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 316, 0,
	605, 0, 0, 443, 0, 0, 603, 0, 0, 0,
	0, 286, 0, 283, 182, 198, 0, 0, 326, 366,
	372, 0, 0, 0, 221, 0, 370, 340, 428, 205,
	248, 363, 345, 368, 0, 0, 369, 292, 416, 358,
	426, 444, 445, 228, 320, 434, 405, 440, 456, 199,
	225, 334, 398, 431, 389, 313, 412, 413, 282, 388,
	256, 185, 290, 450, 197, 378, 213, 190, 400, 424,
	210, 381, 0, 0, 458, 192, 422, 397, 310, 279,
	280, 191, 0, 362, 233, 254, 223, 329, 419, 420,
	222, 459, 201, 439, 194, 0, 438, 322, 415, 423,
	311, 302, 193, 421, 309, 301, 285, 244, 265, 356,
	295, 357, 266, 318, 317, 319, 0, 188, 0, 394,
	432, 460, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 288, 333, 355, 353, 359, 0, 410,
	427, 435, 442, 448, 449, 451, 452, 453, 454, 455,
	321, 268, 390, 284, 293, 0, 0, 339, 371, 211,
	430, 391, 592, 604, 598, 599, 596, 597, 591, 595,
	594, 593, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 607, 583, 584, 585, 586, 588, 0, 600, 601,
	587, 181, 195, 289, 0, 360, 251, 457, 437, 433,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 272, 273, 276, 281,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 379, 380,
	384, 385, 386, 387, 395, 399, 417, 418, 429, 441,
	446, 260, 425, 447, 0, 298, 0, 0, 300, 245,
	263, 274, 0, 436, 396, 200, 367, 252, 189, 217,
	203, 224, 239, 242, 278, 308, 314, 343, 347, 257,
	236, 215, 364, 212, 382, 402, 403, 404, 406, 312,
	231, 346, 407, 0, 296, 408, 409, 270, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 546,
	0, 0, 0, 235, 545, 0, 0, 0, 287, 232,
	0, 0, 344, 0, 187, 0, 383, 220, 297, 294,
	414, 246, 238, 234, 219, 271, 303, 342, 401, 336,
	590, 291, 0, 0, 392, 315, 0, 0, 0, 0,
	0, 581, 582, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 218, 186, 327, 393, 250, 0, 81, 0,
	0, 178, 179, 180, 568, 1481, 557, 570, 571, 572,
	573, 0, 0, 209, 569, 216, 602, 574, 575, 576,
	0, 230, 275, 237, 229, 411, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 543, 561, 0, 589,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 558,
	559, 647, 0, 0, 0, 606, 0, 560, 0, 0,
	552, 553, 555, 554, 556, 562, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 316, 0, 605,
	0, 0, 443, 0, 0, 603, 0, 0, 0, 0,
	286, 0, 283, 182, 198, 0, 0, 326, 366, 372,
	0, 0, 0, 221, 0, 370, 340, 428, 205, 248,
	363, 345, 368, 0, 0, 369, 292, 416, 358, 426,
	444, 445, 228, 320, 434, 405, 440, 456, 199, 225,
	334, 398, 431, 389, 313, 412, 413, 282, 388, 256,
	185, 290, 450, 197, 378, 213, 190, 400, 424, 210,
	381, 0, 0, 458, 192, 422, 397, 310, 279, 280,
	191, 0, 362, 233, 254, 223, 329, 419, 420, 222,
	459, 201, 439, 194, 0, 438, 322, 415, 423, 311,
	302, 193, 421, 309, 301, 285, 244, 265, 356, 295,
	357, 266, 318, 317, 319, 0, 188, 0, 394, 432,
	460, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 288, 333, 355, 353, 359, 0, 410, 427,
	435, 442, 448, 449, 451, 452, 453, 454, 455, 321,
	268, 390, 284, 293, 0, 0, 339, 371, 211, 430,
	391, 592, 604, 598, 599, 596, 597, 591, 595, 594,
	593, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 0,
	607, 583, 584, 585, 586, 588, 0, 600, 601, 587,
	181, 195, 289, 0, 360, 251, 457, 437, 433, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 272, 273, 276, 281, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 348, 349, 350, 351, 352, 354,
	361, 365, 373, 374, 375, 376, 377, 379, 380, 384,
	385, 386, 387, 395, 399, 417, 418, 429, 441, 446,
	260, 425, 447, 0, 298, 0, 0, 300, 245, 263,
	274, 0, 436, 396, 200, 367, 252, 189, 217, 203,
	224, 239, 242, 278, 308, 314, 343, 347, 257, 236,
	215, 364, 212, 382, 402, 403, 404, 406, 312, 231,
	346, 407, 0, 296, 408, 409, 270, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 546, 0,
	0, 0, 235, 545, 0, 0, 0, 287, 232, 0,
	0, 344, 0, 187, 0, 383, 220, 297, 294, 414,
	246, 238, 234, 219, 271, 303, 342, 401, 336, 590,
	291, 0, 0, 392, 315, 0, 0, 0, 0, 0,
	581, 582, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 218, 186, 327, 393, 250, 0, 81, 0, 0,
	178, 179, 180, 568, 1478, 557, 570, 571, 572, 573,
	0, 0, 209, 569, 216, 602, 574, 575, 576, 0,
	230, 275, 237, 229, 411, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 543, 561, 0, 589, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 558, 559,
	647, 0, 0, 0, 606, 0, 560, 0, 0, 552,
	553, 555, 554, 556, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 316, 0, 605, 0,
	0, 443, 0, 0, 603, 0, 0, 0, 0, 286,
	0, 283, 182, 198, 0, 0, 326, 366, 372, 0,
	0, 0, 221, 0, 370, 340, 428, 205, 248, 363,
	345, 368, 0, 0, 369, 292, 416, 358, 426, 444,
	445, 228, 320, 434, 405, 440, 456, 199, 225, 334,
	398, 431, 389, 313, 412, 413, 282, 388, 256, 185,
	290, 450, 197, 378, 213, 190, 400, 424, 210, 381,
	0, 0, 458, 192, 422, 397, 310, 279, 280, 191,
	0, 362, 233, 254, 223, 329, 419, 420, 222, 459,
	201, 439, 194, 0, 438, 322, 415, 423, 311, 302,
	193, 421, 309, 301, 285, 244, 265, 356, 295, 357,
	266, 318, 317, 319, 0, 188, 0, 394, 432, 460,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 288, 333, 355, 353, 359, 0, 410, 427, 435,
	442, 448, 449, 451, 452, 453, 454, 455, 321, 268,
	390, 284, 293, 0, 0, 339, 371, 211, 430, 391,
	592, 604, 598, 599, 596, 597, 591, 595, 594, 593,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 0, 607,
	583, 584, 585, 586, 588, 0, 600, 601, 587, 181,
	195, 289, 0, 360, 251, 457, 437, 433, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 272, 273, 276, 281, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 379, 380, 384, 385,
	386, 387, 395, 399, 417, 418, 429, 441, 446, 260,
	425, 447, 0, 298, 0, 0, 300, 245, 263, 274,
	0, 436, 396, 200, 367, 252, 189, 217, 203, 224,
	239, 242, 278, 308, 314, 343, 347, 257, 236, 215,
	364, 212, 382, 402, 403, 404, 406, 312, 231, 346,
	407, 0, 296, 408, 409, 270, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 546, 0, 0,
	0, 235, 545, 0, 0, 0, 287, 232, 0, 0,
	344, 0, 187, 0, 383, 220, 297, 294, 414, 246,
	238, 234, 219, 271, 303, 342, 401, 336, 590, 291,
	0, 0, 392, 315, 0, 0, 0, 0, 0, 581,
	582, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	218, 186, 327, 393, 250, 0, 81, 0, 0, 178,
	179, 180, 568, 567, 557, 570, 571, 572, 573, 0,
	0, 209, 569, 216, 602, 574, 575, 576, 0, 230,
	275, 237, 229, 411, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 543, 561, 0, 589, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 558, 559, 0,
	0, 0, 0, 606, 0, 560, 0, 0, 552, 553,
	555, 554, 556, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 316, 0, 605, 0, 0,
	443, 0, 0, 603, 0, 0, 0, 0, 286, 0,
	283, 182, 198, 0, 0, 326, 366, 372, 0, 0,
	0, 221, 0, 370, 340, 428, 205, 248, 363, 345,
	368, 0, 0, 369, 292, 416, 358, 426, 444, 445,
	228, 320, 434, 405, 440, 456, 199, 225, 334, 398,
	431, 389, 313, 412, 413, 282, 388, 256, 185, 290,
	450, 197, 378, 213, 190, 400, 424, 210, 381, 0,
	0, 458, 192, 422, 397, 310, 279, 280, 191, 0,
	362, 233, 254, 223, 329, 419, 420, 222, 459, 201,
	439, 194, 0, 438, 322, 415, 423, 311, 302, 193,
	421, 309, 301, 285, 244, 265, 356, 295, 357, 266,
	318, 317, 319, 0, 188, 0, 394, 432, 460, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	288, 333, 355, 353, 359, 0, 410, 427, 435, 442,
	448, 449, 451, 452, 453, 454, 455, 321, 268, 390,
	284, 293, 0, 0, 339, 371, 211, 430, 391, 592,
	604, 598, 599, 596, 597, 591, 595, 594, 593, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 0, 607, 583,
	584, 585, 586, 588, 0, 600, 601, 587, 181, 195,
	289, 0, 360, 251, 457, 437, 433, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 272, 273, 276, 281, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 379, 380, 384, 385, 386,
	387, 395, 399, 417, 418, 429, 441, 446, 260, 425,
	447, 0, 298, 0, 0, 300, 245, 263, 274, 0,
	436, 396, 200, 367, 252, 189, 217, 203, 224, 239,
	242, 278, 308, 314, 343, 347, 257, 236, 215, 364,
	212, 382, 402, 403, 404, 406, 312, 231, 346, 407,
	0, 296, 408, 409, 270, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 287, 232, 0, 0, 344,
	0, 187, 0, 383, 220, 297, 294, 414, 246, 238,
	234, 219, 271, 303, 342, 401, 336, 590, 291, 0,
	0, 392, 315, 0, 0, 0, 0, 0, 581, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 218,
	186, 327, 393, 250, 0, 81, 0, 0, 178, 179,
	180, 568, 567, 557, 570, 571, 572, 573, 0, 0,
	209, 569, 216, 602, 574, 575, 576, 0, 230, 275,
	237, 229, 411, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 561, 0, 589, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 558, 559, 0, 0,
	0, 0, 606, 0, 560, 0, 0, 552, 553, 555,
	554, 556, 562, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 316, 0, 605, 0, 0, 443,
	0, 0, 603, 0, 0, 0, 0, 286, 0, 283,
	182, 198, 0, 0, 326, 366, 372, 0, 0, 0,
	221, 0, 370, 340, 428, 205, 248, 363, 345, 368,
	2379, 0, 369, 292, 416, 358, 426, 444, 445, 228,
	320, 434, 405, 440, 456, 199, 225, 334, 398, 431,
	389, 313, 412, 413, 282, 388, 256, 185, 290, 450,
	197, 378, 213, 190, 400, 424, 210, 381, 0, 0,
	458, 192, 422, 397, 310, 279, 280, 191, 0, 362,
	233, 254, 223, 329, 419, 420, 222, 459, 201, 439,
	194, 0, 438, 322, 415, 423, 311, 302, 193, 421,
	309, 301, 285, 244, 265, 356, 295, 357, 266, 318,
	317, 319, 0, 188, 0, 394, 432, 460, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 288,
	333, 355, 353, 359, 0, 410, 427, 435, 442, 448,
	449, 451, 452, 453, 454, 455, 321, 268, 390, 284,
	293, 0, 0, 339, 371, 211, 430, 391, 592, 604,
	598, 599, 596, 597, 591, 595, 594, 593, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 607, 583, 584,
	585, 586, 588, 0, 600, 601, 587, 181, 195, 289,
	0, 360, 251, 457, 437, 433, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 272, 273, 276, 281, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 379, 380, 384, 385, 386, 387,
	395, 399, 417, 418, 429, 441, 446, 260, 425, 447,
	0, 298, 0, 0, 300, 245, 263, 274, 0, 436,
	396, 200, 367, 252, 189, 217, 203, 224, 239, 242,
	278, 308, 314, 343, 347, 257, 236, 215, 364, 212,
	382, 402, 403, 404, 406, 312, 231, 346, 407, 0,
	296, 408, 409, 270, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 287, 232, 0, 0, 344, 0,
	187, 0, 383, 220, 297, 294, 414, 246, 238, 234,
	219, 271, 303, 342, 401, 336, 590, 291, 0, 0,
	392, 315, 0, 0, 0, 0, 0, 581, 582, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 218, 186,
	327, 393, 250, 0, 81, 0, 1131, 178, 179, 180,
	568, 567, 557, 570, 571, 572, 573, 0, 0, 209,
	569, 216, 602, 574, 575, 576, 0, 230, 275, 237,
	229, 411, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 561, 0, 589, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 558, 559, 0, 0, 0,
	0, 606, 0, 560, 0, 0, 552, 553, 555, 554,
	556, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 316, 0, 605, 0, 0, 443, 0,
	0, 603, 0, 0, 0, 0, 286, 0, 283, 182,
	198, 0, 0, 326, 366, 372, 0, 0, 0, 221,
	0, 370, 340, 428, 205, 248, 363, 345, 368, 0,
	0, 369, 292, 416, 358, 426, 444, 445, 228, 320,
	434, 405, 440, 456, 199, 225, 334, 398, 431, 389,
	313, 412, 413, 282, 388, 256, 185, 290, 450, 197,
	378, 213, 190, 400, 424, 210, 381, 0, 0, 458,
	192, 422, 397, 310, 279, 280, 191, 0, 362, 233,
	254, 223, 329, 419, 420, 222, 459, 201, 439, 194,
	0, 438, 322, 415, 423, 311, 302, 193, 421, 309,
	301, 285, 244, 265, 356, 295, 357, 266, 318, 317,
	319, 0, 188, 0, 394, 432, 460, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 288, 333,
	355, 353, 359, 0, 410, 427, 435, 442, 448, 449,
	451, 452, 453, 454, 455, 321, 268, 390, 284, 293,
	0, 0, 339, 371, 211, 430, 391, 592, 604, 598,
	599, 596, 597, 591, 595, 594, 593, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 0, 607, 583, 584, 585,
	586, 588, 0, 600, 601, 587, 181, 195, 289, 0,
	360, 251, 457, 437, 433, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 272, 273, 276, 281, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 379, 380, 384, 385, 386, 387, 395,
	399, 417, 418, 429, 441, 446, 260, 425, 447, 0,
	298, 0, 0, 300, 245, 263, 274, 0, 436, 396,
	200, 367, 252, 189, 217, 203, 224, 239, 242, 278,
	308, 314, 343, 347, 257, 236, 215, 364, 212, 382,
	402, 403, 404, 406, 312, 231, 346, 407, 0, 296,
	408, 409, 270, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 287, 232, 0, 0, 344, 0, 187,
	0, 383, 220, 297, 294, 414, 246, 238, 234, 219,
	271, 303, 342, 401, 336, 590, 291, 0, 0, 392,
	315, 0, 0, 0, 0, 0, 581, 582, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 218, 186, 327,
	393, 250, 0, 81, 0, 0, 178, 179, 180, 568,
	567, 557, 570, 571, 572, 573, 0, 0, 209, 569,
	216, 602, 574, 575, 576, 0, 230, 275, 237, 229,
	411, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 561, 0, 589, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 558, 559, 0, 0, 0, 0,
	606, 0, 560, 0, 0, 552, 553, 555, 554, 556,
	562, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 316, 0, 605, 0, 0, 443, 0, 0,
	603, 0, 0, 0, 0, 286, 0, 283, 182, 198,
	0, 0, 326, 366, 372, 0, 0, 0, 221, 0,
	370, 340, 428, 205, 248, 363, 345, 368, 0, 0,
	369, 292, 416, 358, 426, 444, 445, 228, 320, 434,
	405, 440, 456, 199, 225, 334, 398, 431, 389, 313,
	412, 413, 282, 388, 256, 185, 290, 450, 197, 378,
	213, 190, 400, 424, 210, 381, 0, 0, 458, 192,
	422, 397, 310, 279, 280, 191, 0, 362, 233, 254,
	223, 329, 419, 420, 222, 459, 201, 439, 194, 0,
	438, 322, 415, 423, 311, 302, 193, 421, 309, 301,
	285, 244, 265, 356, 295, 357, 266, 318, 317, 319,
	0, 188, 0, 394, 432, 460, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 288, 333, 355,
	353, 359, 0, 410, 427, 435, 442, 448, 449, 451,
	452, 453, 454, 455, 321, 268, 390, 284, 293, 0,
	0, 339, 371, 211, 430, 391, 592, 604, 598, 599,
	596, 597, 591, 595, 594, 593, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 607, 583, 584, 585, 586,
	588, 0, 600, 601, 587, 181, 195, 289, 0, 360,
	251, 457, 437, 433, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	272, 273, 276, 281, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 348,
	349, 350, 351, 352, 354, 361, 365, 373, 374, 375,
	376, 377, 379, 380, 384, 385, 386, 387, 395, 399,
	417, 418, 429, 441, 446, 260, 425, 447, 0, 298,
	0, 0, 300, 245, 263, 274, 0, 436, 396, 200,
	367, 252, 189, 217, 203, 224, 239, 242, 278, 308,
	314, 343, 347, 257, 236, 215, 364, 212, 382, 402,
	403, 404, 406, 312, 231, 346, 407, 0, 296, 408,
	409, 270, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 287, 232, 0, 0, 344, 0, 187, 0,
	383, 220, 297, 294, 414, 246, 238, 234, 219, 271,
	303, 342, 401, 336, 0, 291, 0, 0, 392, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 218, 186, 327, 393,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 275, 237, 229, 411,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1030,
	1029, 1039, 1040, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1031, 0, 0, 1041, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 316, 0, 0, 0, 0, 443, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 182, 198, 0,
	0, 326, 366, 372, 0, 0, 0, 221, 0, 370,
	340, 428, 205, 248, 363, 345, 368, 0, 0, 369,
	292, 416, 358, 426, 444, 445, 228, 320, 434, 405,
	440, 456, 199, 225, 334, 398, 431, 389, 313, 412,
	413, 282, 388, 256, 185, 290, 450, 197, 378, 213,
	190, 400, 424, 210, 381, 0, 0, 458, 192, 422,
	397, 310, 279, 280, 191, 0, 362, 233, 254, 223,
	329, 419, 420, 222, 459, 201, 439, 194, 0, 438,
	322, 415, 423, 311, 302, 193, 421, 309, 301, 285,
	244, 265, 356, 295, 357, 266, 318, 317, 319, 0,
	188, 0, 394, 432, 460, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 288, 333, 355, 353,
	359, 0, 410, 427, 435, 442, 448, 449, 451, 452,
	453, 454, 455, 321, 268, 390, 284, 293, 0, 0,
	339, 371, 211, 430, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 289, 0, 360, 251,
	457, 437, 433, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 272,
	273, 276, 281, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 379, 380, 384, 385, 386, 387, 395, 399, 417,
	418, 429, 441, 446, 260, 425, 447, 0, 298, 0,
	0, 300, 245, 263, 274, 0, 436, 396, 200, 367,
	252, 189, 217, 203, 224, 239, 242, 278, 308, 314,
	343, 347, 257, 236, 215, 364, 212, 382, 402, 403,
	404, 406, 312, 231, 346, 407, 0, 296, 408, 409,
	270, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 287, 232, 0, 0, 344, 0, 187, 0, 383,
	220, 297, 294, 414, 246, 238, 234, 219, 271, 303,
	342, 401, 336, 0, 291, 0, 0, 392, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 218, 186, 327, 393, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 275, 237, 229, 411, 0,
	0, 0, 0, 202, 0, 856, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	316, 0, 0, 0, 855, 443, 0, 0, 0, 0,
	0, 852, 853, 286, 818, 283, 182, 198, 846, 850,
	326, 366, 372, 0, 0, 0, 221, 0, 370, 340,
	428, 205, 248, 363, 345, 368, 0, 0, 369, 292,
	416, 358, 426, 444, 445, 228, 320, 434, 405, 440,
	456, 199, 225, 334, 398, 431, 389, 313, 412, 413,
	282, 388, 256, 185, 290, 450, 197, 378, 213, 190,
	400, 424, 210, 381, 0, 0, 458, 192, 422, 397,
	310, 279, 280, 191, 0, 362, 233, 254, 223, 329,
	419, 420, 222, 459, 201, 439, 194, 0, 438, 322,
	415, 423, 311, 302, 193, 421, 309, 301, 285, 244,
	265, 356, 295, 357, 266, 318, 317, 319, 0, 188,
	0, 394, 432, 460, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 288, 333, 355, 353, 359,
	0, 410, 427, 435, 442, 448, 449, 451, 452, 453,
	454, 455, 321, 268, 390, 284, 293, 0, 0, 339,
	371, 211, 430, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 289, 0, 360, 251, 457,
	437, 433, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 272, 273,
	276, 281, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	379, 380, 384, 385, 386, 387, 395, 399, 417, 418,
	429, 441, 446, 260, 425, 447, 0, 298, 0, 0,
	300, 245, 263, 274, 0, 436, 396, 200, 367, 252,
	189, 217, 203, 224, 239, 242, 278, 308, 314, 343,
	347, 257, 236, 215, 364, 212, 382, 402, 403, 404,
	406, 312, 231, 346, 407, 0, 296, 408, 409, 270,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	1151, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	287, 232, 0, 0, 344, 0, 187, 0, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 0, 291, 0, 0, 392, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 218, 186, 327, 393, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 1153, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 275, 237, 229, 411, 0, 0,
	0, 0, 202, 0, 0, 1019, 1020, 1018, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 1021, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 316,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 182, 198, 0, 0, 326,
	366, 372, 0, 0, 0, 221, 0, 370, 340, 428,
	205, 248, 363, 345, 368, 0, 0, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	424, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 0, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 0,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 321, 268, 390, 284, 293, 0, 0, 339, 371,
	211, 430, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 289, 0, 360, 251, 457, 437,
	433, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 0, 0, 300,
	245, 263, 274, 0, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 72, 407, 296, 408, 409, 270, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	287, 232, 0, 0, 344, 0, 187, 0, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 0, 291, 0, 0, 392, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 218, 186, 327, 393, 250, 0,
	81, 0, 1131, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 275, 237, 229, 411, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 316,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 182, 198, 0, 0, 326,
	366, 372, 0, 0, 0, 221, 0, 370, 340, 428,
	205, 248, 363, 345, 368, 0, 0, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	424, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 0, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 0,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 321, 268, 390, 284, 293, 0, 0, 339, 371,
	211, 430, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 289, 80, 360, 251, 457, 437,
	433, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 0, 0, 300,
	245, 263, 274, 0, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 72, 407, 296, 408, 409, 270, 0,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	287, 232, 0, 0, 344, 0, 187, 0, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 0, 291, 0, 0, 392, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 218, 186, 327, 393, 250, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 275, 237, 229, 411, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 316,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 182, 198, 0, 0, 326,
	366, 372, 0, 0, 0, 221, 0, 370, 340, 428,
	205, 248, 363, 345, 368, 0, 0, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	424, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 0, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 0,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 321, 268, 390, 284, 293, 0, 0, 339, 371,
	211, 430, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 289, 80, 360, 251, 457, 437,
	433, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 0, 0, 300,
	245, 263, 274, 0, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 407, 0, 296, 408, 409, 270, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 1532,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 287,
	232, 0, 0, 344, 0, 187, 0, 383, 220, 297,
	294, 414, 246, 238, 234, 219, 271, 303, 342, 401,
	336, 0, 291, 0, 0, 392, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 218, 186, 327, 393, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 1324, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 275, 237, 229, 411, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 316, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 182, 198, 0, 0, 326, 366,
	372, 0, 0, 0, 221, 0, 370, 340, 428, 205,
	248, 363, 345, 368, 0, 1530, 369, 292, 416, 358,
	426, 444, 445, 228, 320, 434, 405, 440, 456, 199,
	225, 334, 398, 431, 389, 313, 412, 413, 282, 388,
	256, 185, 290, 450, 197, 378, 213, 190, 400, 424,
	210, 381, 0, 0, 458, 192, 422, 397, 310, 279,
	280, 191, 0, 362, 233, 254, 223, 329, 419, 420,
	222, 459, 201, 439, 194, 0, 438, 322, 415, 423,
	311, 302, 193, 421, 309, 301, 285, 244, 265, 356,
	295, 357, 266, 318, 317, 319, 0, 188, 0, 394,
	432, 460, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 288, 333, 355, 353, 359, 0, 410,
	427, 435, 442, 448, 449, 451, 452, 453, 454, 455,
	321, 268, 390, 284, 293, 0, 0, 339, 371, 211,
	430, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 289, 0, 360, 251, 457, 437, 433,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 272, 273, 276, 281,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 379, 380,
	384, 385, 386, 387, 395, 399, 417, 418, 429, 441,
	446, 260, 425, 447, 0, 298, 0, 0, 300, 245,
	263, 274, 0, 436, 396, 200, 367, 252, 189, 217,
	203, 224, 239, 242, 278, 308, 314, 343, 347, 257,
	236, 215, 364, 212, 382, 402, 403, 404, 406, 312,
	231, 346, 407, 0, 296, 408, 409, 270, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 287, 232,
	0, 0, 344, 0, 187, 0, 383, 220, 297, 294,
	414, 246, 238, 234, 219, 271, 303, 342, 401, 336,
	0, 291, 0, 0, 392, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 218, 186, 327, 393, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 275, 237, 229, 411, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 316, 0, 0,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	286, 818, 283, 182, 198, 816, 0, 326, 366, 372,
	0, 0, 0, 221, 0, 370, 340, 428, 205, 248,
	363, 345, 368, 0, 0, 369, 292, 416, 358, 426,
	444, 445, 228, 320, 434, 405, 440, 456, 199, 225,
	334, 398, 431, 389, 313, 412, 413, 282, 388, 256,
	185, 290, 450, 197, 378, 213, 190, 400, 424, 210,
	381, 0, 0, 458, 192, 422, 397, 310, 279, 280,
	191, 0, 362, 233, 254, 223, 329, 419, 420, 222,
	459, 201, 439, 194, 0, 438, 322, 415, 423, 311,
	302, 193, 421, 309, 301, 285, 244, 265, 356, 295,
	357, 266, 318, 317, 319, 0, 188, 0, 394, 432,
	460, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 288, 333, 355, 353, 359, 0, 410, 427,
	435, 442, 448, 449, 451, 452, 453, 454, 455, 321,
	268, 390, 284, 293, 0, 0, 339, 371, 211, 430,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 289, 0, 360, 251, 457, 437, 433, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 272, 273, 276, 281, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 348, 349, 350, 351, 352, 354,
	361, 365, 373, 374, 375, 376, 377, 379, 380, 384,
	385, 386, 387, 395, 399, 417, 418, 429, 441, 446,
	260, 425, 447, 0, 298, 0, 0, 300, 245, 263,
	274, 0, 436, 396, 200, 367, 252, 189, 217, 203,
	224, 239, 242, 278, 308, 314, 343, 347, 257, 236,
	215, 364, 212, 382, 402, 403, 404, 406, 312, 231,
	346, 407, 0, 296, 408, 409, 270, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 1532, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 287, 232, 0,
	0, 344, 0, 187, 0, 383, 220, 297, 294, 414,
	246, 238, 234, 219, 271, 303, 342, 401, 336, 0,
	291, 0, 0, 392, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 218, 186, 327, 393, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 1324, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 275, 237, 229, 411, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 316, 0, 0, 0,
	0, 443, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 283, 182, 198, 0, 0, 326, 366, 372, 0,
	0, 0, 221, 0, 370, 340, 428, 205, 248, 363,
	345, 368, 0, 0, 369, 292, 416, 358, 426, 444,
	445, 228, 320, 434, 405, 440, 456, 199, 225, 334,
	398, 431, 389, 313, 412, 413, 282, 388, 256, 185,
	290, 450, 197, 378, 213, 190, 400, 424, 210, 381,
	0, 0, 458, 192, 422, 397, 310, 279, 280, 191,
	0, 362, 233, 254, 223, 329, 419, 420, 222, 459,
	201, 439, 194, 0, 438, 322, 415, 423, 311, 302,
	193, 421, 309, 301, 285, 244, 265, 356, 295, 357,
	266, 318, 317, 319, 0, 188, 0, 394, 432, 460,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 288, 333, 355, 353, 359, 0, 410, 427, 435,
	442, 448, 449, 451, 452, 453, 454, 455, 321, 268,
	390, 284, 293, 0, 0, 339, 371, 211, 430, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 289, 0, 360, 251, 457, 437, 433, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 272, 273, 276, 281, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 379, 380, 384, 385,
	386, 387, 395, 399, 417, 418, 429, 441, 446, 260,
	425, 447, 0, 298, 0, 0, 300, 245, 263, 274,
	0, 436, 396, 200, 367, 252, 189, 217, 203, 224,
	239, 242, 278, 308, 314, 343, 347, 257, 236, 215,
	364, 212, 382, 402, 403, 404, 406, 312, 231, 346,
	407, 0, 296, 408, 409, 270, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 287, 232, 0, 0,
	344, 0, 187, 0, 383, 220, 297, 294, 414, 246,
	238, 234, 219, 271, 303, 342, 401, 336, 0, 291,
	0, 0, 392, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	218, 186, 327, 393, 250, 0, 0, 0, 1131, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	275, 237, 229, 411, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 316, 0, 0, 0, 0,
	443, 0, 0, 0, 2243, 0, 0, 0, 286, 0,
	283, 182, 198, 0, 0, 326, 366, 372, 0, 0,
	0, 221, 0, 370, 340, 428, 205, 248, 363, 345,
	368, 0, 0, 369, 292, 416, 358, 426, 444, 445,
	228, 320, 434, 405, 440, 456, 199, 225, 334, 398,
	431, 389, 313, 412, 413, 282, 388, 256, 185, 290,
	450, 197, 378, 213, 190, 400, 424, 210, 381, 0,
	0, 458, 192, 422, 397, 310, 279, 280, 191, 0,
	362, 233, 254, 223, 329, 419, 420, 222, 459, 201,
	439, 194, 0, 438, 322, 415, 423, 311, 302, 193,
	421, 309, 301, 285, 244, 265, 356, 295, 357, 266,
	318, 317, 319, 0, 188, 0, 394, 432, 460, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	288, 333, 355, 353, 359, 0, 410, 427, 435, 442,
	448, 449, 451, 452, 453, 454, 455, 321, 268, 390,
	284, 293, 0, 0, 339, 371, 211, 430, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	289, 0, 360, 251, 457, 437, 433, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 272, 273, 276, 281, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 379, 380, 384, 385, 386,
	387, 395, 399, 417, 418, 429, 441, 446, 260, 425,
	447, 0, 298, 0, 0, 300, 245, 263, 274, 0,
	436, 396, 200, 367, 252, 189, 217, 203, 224, 239,
	242, 278, 308, 314, 343, 347, 257, 236, 215, 364,
	212, 382, 402, 403, 404, 406, 312, 231, 346, 407,
	0, 296, 408, 409, 270, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 287, 232, 0, 0, 344,
	0, 187, 0, 383, 220, 297, 294, 414, 246, 238,
	234, 219, 271, 303, 342, 401, 336, 0, 291, 0,
	0, 392, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 218,
	186, 327, 393, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 1784, 0, 0, 1785, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 275,
	237, 229, 411, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 316, 0, 0, 0, 0, 443,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 283,
	182, 198, 0, 0, 326, 366, 372, 0, 0, 0,
	221, 0, 370, 340, 428, 205, 248, 363, 345, 368,
	0, 0, 369, 292, 416, 358, 426, 444, 445, 228,
	320, 434, 405, 440, 456, 199, 225, 334, 398, 431,
	389, 313, 412, 413, 282, 388, 256, 185, 290, 450,
	197, 378, 213, 190, 400, 424, 210, 381, 0, 0,
	458, 192, 422, 397, 310, 279, 280, 191, 0, 362,
	233, 254, 223, 329, 419, 420, 222, 459, 201, 439,
	194, 0, 438, 322, 415, 423, 311, 302, 193, 421,
	309, 301, 285, 244, 265, 356, 295, 357, 266, 318,
	317, 319, 0, 188, 0, 394, 432, 460, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 288,
	333, 355, 353, 359, 0, 410, 427, 435, 442, 448,
	449, 451, 452, 453, 454, 455, 321, 268, 390, 284,
	293, 0, 0, 339, 371, 211, 430, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 289,
	0, 360, 251, 457, 437, 433, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 272, 273, 276, 281, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 379, 380, 384, 385, 386, 387,
	395, 399, 417, 418, 429, 441, 446, 260, 425, 447,
	0, 298, 0, 0, 300, 245, 263, 274, 0, 436,
	396, 200, 367, 252, 189, 217, 203, 224, 239, 242,
	278, 308, 314, 343, 347, 257, 236, 215, 364, 212,
	382, 402, 403, 404, 406, 312, 231, 346, 407, 0,
	296, 408, 409, 270, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	1174, 0, 0, 0, 287, 232, 0, 0, 344, 0,
	187, 0, 383, 220, 297, 294, 414, 246, 238, 234,
	219, 271, 303, 342, 401, 336, 0, 291, 0, 0,
	392, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 218, 186,
	327, 393, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 1173, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 275, 237,
	229, 411, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 316, 0, 0, 0, 0, 443, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 182,
	198, 0, 0, 326, 366, 372, 0, 0, 0, 221,
	0, 370, 340, 428, 205, 248, 363, 345, 368, 0,
	0, 369, 292, 416, 358, 426, 444, 445, 228, 320,
	434, 405, 440, 456, 199, 225, 334, 398, 431, 389,
	313, 412, 413, 282, 388, 256, 185, 290, 450, 197,
	378, 213, 190, 400, 424, 210, 381, 0, 0, 458,
	192, 422, 397, 310, 279, 280, 191, 0, 362, 233,
	254, 223, 329, 419, 420, 222, 459, 201, 439, 194,
	0, 438, 322, 415, 423, 311, 302, 193, 421, 309,
	301, 285, 244, 265, 356, 295, 357, 266, 318, 317,
	319, 0, 188, 0, 394, 432, 460, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 288, 333,
	355, 353, 359, 0, 410, 427, 435, 442, 448, 449,
	451, 452, 453, 454, 455, 321, 268, 390, 284, 293,
	0, 0, 339, 371, 211, 430, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 289, 0,
	360, 251, 457, 437, 433, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 272, 273, 276, 281, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 379, 380, 384, 385, 386, 387, 395,
	399, 417, 418, 429, 441, 446, 260, 425, 447, 0,
	298, 0, 0, 300, 245, 263, 274, 0, 436, 396,
	200, 367, 252, 189, 217, 203, 224, 239, 242, 278,
	308, 314, 343, 347, 257, 236, 215, 364, 212, 382,
	402, 403, 404, 406, 312, 231, 346, 407, 0, 296,
	408, 409, 270, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 287, 232, 0, 0, 344, 0, 187,
	0, 383, 220, 297, 294, 414, 246, 238, 234, 219,
	271, 303, 342, 401, 336, 0, 291, 0, 0, 392,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 218, 186, 327,
	393, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 275, 237, 229,
	411, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 316, 0, 0, 0, 0, 443, 0, 0,
	0, 2352, 0, 0, 0, 286, 0, 283, 182, 198,
	0, 0, 326, 366, 372, 0, 0, 0, 221, 0,
	370, 340, 428, 205, 248, 363, 345, 368, 0, 0,
	369, 292, 416, 358, 426, 444, 445, 228, 320, 434,
	405, 440, 456, 199, 225, 334, 398, 431, 389, 313,
	412, 413, 282, 388, 256, 185, 290, 450, 197, 378,
	213, 190, 400, 424, 210, 381, 0, 0, 458, 192,
	422, 397, 310, 279, 280, 191, 0, 362, 233, 254,
	223, 329, 419, 420, 222, 459, 201, 439, 194, 0,
	438, 322, 415, 423, 311, 302, 193, 421, 309, 301,
	285, 244, 265, 356, 295, 357, 266, 318, 317, 319,
	0, 188, 0, 394, 432, 460, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 288, 333, 355,
	353, 359, 0, 410, 427, 435, 442, 448, 449, 451,
	452, 453, 454, 455, 321, 268, 390, 284, 293, 0,
	0, 339, 371, 211, 430, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 289, 0, 360,
	251, 457, 437, 433, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	272, 273, 276, 281, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 348,
	349, 350, 351, 352, 354, 361, 365, 373, 374, 375,
	376, 377, 379, 380, 384, 385, 386, 387, 395, 399,
	417, 418, 429, 441, 446, 260, 425, 447, 0, 298,
	0, 0, 300, 245, 263, 274, 0, 436, 396, 200,
	367, 252, 189, 217, 203, 224, 239, 242, 278, 308,
	314, 343, 347, 257, 236, 215, 364, 212, 382, 402,
	403, 404, 406, 312, 231, 346, 407, 0, 296, 408,
	409, 270, 0, 0, 0, 0, 0, 0, 330, 0,
	0, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 287, 232, 0, 0, 344, 0, 187, 0,
	383, 220, 297, 294, 414, 246, 238, 234, 219, 271,
	303, 342, 401, 336, 0, 291, 0, 0, 392, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 218, 186, 327, 393,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 275, 237, 229, 411,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 316, 0, 0, 0, 0, 443, 0, 0, 0,
	2243, 0, 0, 0, 286, 0, 283, 182, 198, 0,
	0, 326, 366, 372, 0, 0, 0, 221, 0, 370,
	340, 428, 205, 248, 363, 345, 368, 0, 0, 369,
	292, 416, 358, 426, 444, 445, 228, 320, 434, 405,
	440, 456, 199, 225, 334, 398, 431, 389, 313, 412,
	413, 282, 388, 256, 185, 290, 450, 197, 378, 213,
	190, 400, 424, 210, 381, 0, 0, 458, 192, 422,
	397, 310, 279, 280, 191, 0, 362, 233, 254, 223,
	329, 419, 420, 222, 459, 201, 439, 194, 0, 438,
	322, 415, 423, 311, 302, 193, 421, 309, 301, 285,
	244, 265, 356, 295, 357, 266, 318, 317, 319, 0,
	188, 0, 394, 432, 460, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 288, 333, 355, 353,
	359, 0, 410, 427, 435, 442, 448, 449, 451, 452,
	453, 454, 455, 321, 268, 390, 284, 293, 0, 0,
	339, 371, 211, 430, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 289, 0, 360, 251,
	457, 437, 433, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 272,
	273, 276, 281, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 379, 380, 384, 385, 386, 387, 395, 399, 417,
	418, 429, 441, 446, 260, 425, 447, 0, 298, 0,
	0, 300, 245, 263, 274, 0, 436, 396, 200, 367,
	252, 189, 217, 203, 224, 239, 242, 278, 308, 314,
	343, 347, 257, 236, 215, 364, 212, 382, 402, 403,
	404, 406, 312, 231, 346, 407, 0, 296, 408, 409,
	270, 0, 0, 0, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 287, 232, 0, 0, 344, 0, 187, 0, 383,
	220, 297, 294, 414, 246, 238, 234, 219, 271, 303,
	342, 401, 336, 0, 291, 0, 0, 392, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 218, 186, 327, 393, 250,
	0, 81, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 275, 237, 229, 411, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	316, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 283, 182, 198, 0, 0,
	326, 366, 372, 0, 0, 0, 221, 0, 370, 340,
	428, 205, 248, 363, 345, 368, 0, 0, 369, 292,
	416, 358, 426, 444, 445, 228, 320, 434, 405, 440,
	456, 199, 225, 334, 398, 431, 389, 313, 412, 413,
	282, 388, 256, 185, 290, 450, 197, 378, 213, 190,
	400, 424, 210, 381, 0, 0, 458, 192, 422, 397,
	310, 279, 280, 191, 0, 362, 233, 254, 223, 329,
	419, 420, 222, 459, 201, 439, 194, 0, 438, 322,
	415, 423, 311, 302, 193, 421, 309, 301, 285, 244,
	265, 356, 295, 357, 266, 318, 317, 319, 0, 188,
	0, 394, 432, 460, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 288, 333, 355, 353, 359,
	0, 410, 427, 435, 442, 448, 449, 451, 452, 453,
	454, 455, 321, 268, 390, 284, 293, 0, 0, 339,
	371, 211, 430, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 289, 0, 360, 251, 457,
	437, 433, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 272, 273,
	276, 281, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	379, 380, 384, 385, 386, 387, 395, 399, 417, 418,
	429, 441, 446, 260, 425, 447, 0, 298, 0, 0,
	300, 245, 263, 274, 0, 436, 396, 200, 367, 252,
	189, 217, 203, 224, 239, 242, 278, 308, 314, 343,
	347, 257, 236, 215, 364, 212, 382, 402, 403, 404,
	406, 312, 231, 346, 407, 0, 296, 408, 409, 270,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	287, 232, 0, 0, 344, 0, 187, 0, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 0, 291, 0, 0, 392, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 218, 186, 327, 393, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 1324, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 275, 237, 229, 411, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 316,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 182, 198, 0, 0, 326,
	366, 372, 0, 0, 0, 221, 0, 370, 340, 428,
	205, 248, 363, 345, 368, 0, 0, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	424, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 0, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 0,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 321, 268, 390, 284, 293, 0, 0, 339, 371,
	211, 430, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 289, 0, 360, 251, 457, 437,
	433, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 0, 0, 300,
	245, 263, 274, 0, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 0, 407, 296, 408, 409, 270, 1573,
	0, 0, 0, 0, 0, 0, 330, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	287, 232, 0, 0, 344, 0, 187, 0, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 0, 291, 0, 0, 392, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 218, 186, 327, 393, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 275, 237, 229, 411, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 316,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 182, 198, 0, 0, 326,
	366, 372, 0, 0, 0, 221, 0, 370, 340, 428,
	205, 248, 363, 345, 368, 0, 0, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	424, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 0, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 0,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 321, 268, 390, 284, 293, 0, 0, 339, 371,
	211, 430, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 289, 0, 360, 251, 457, 437,
	433, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 0, 0, 300,
	245, 263, 274, 0, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 407, 0, 296, 408, 409, 270, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 287,
	232, 0, 0, 344, 0, 187, 0, 383, 220, 297,
	294, 414, 246, 238, 234, 219, 271, 303, 342, 401,
	336, 0, 291, 0, 0, 392, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 218, 186, 327, 393, 250, 0, 0,
	0, 0, 178, 179, 180, 0, 1153, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 275, 237, 229, 411, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 316, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 182, 198, 0, 0, 326, 366,
	372, 0, 0, 0, 221, 0, 370, 340, 428, 205,
	248, 363, 345, 368, 0, 0, 369, 292, 416, 358,
	426, 444, 445, 228, 320, 434, 405, 440, 456, 199,
	225, 334, 398, 431, 389, 313, 412, 413, 282, 388,
	256, 185, 290, 450, 197, 378, 213, 190, 400, 424,
	210, 381, 0, 0, 458, 192, 422, 397, 310, 279,
	280, 191, 0, 362, 233, 254, 223, 329, 419, 420,
	222, 459, 201, 439, 194, 0, 438, 322, 415, 423,
	311, 302, 193, 421, 309, 301, 285, 244, 265, 356,
	295, 357, 266, 318, 317, 319, 0, 188, 0, 394,
	432, 460, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 288, 333, 355, 353, 359, 0, 410,
	427, 435, 442, 448, 449, 451, 452, 453, 454, 455,
	321, 268, 390, 284, 293, 0, 0, 339, 371, 211,
	430, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 289, 0, 360, 251, 457, 437, 433,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 272, 273, 276, 281,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 379, 380,
	384, 385, 386, 387, 395, 399, 417, 418, 429, 441,
	446, 260, 425, 447, 0, 298, 0, 0, 300, 245,
	263, 274, 0, 436, 396, 200, 367, 252, 189, 217,
	203, 224, 239, 242, 278, 308, 314, 343, 347, 257,
	236, 215, 364, 212, 382, 402, 403, 404, 406, 312,
	231, 346, 407, 0, 296, 408, 409, 270, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 287, 232,
	0, 0, 344, 0, 187, 0, 383, 220, 297, 294,
	414, 246, 238, 234, 219, 271, 303, 342, 401, 336,
	0, 291, 0, 0, 392, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 218, 186, 327, 393, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 275, 237, 229, 411, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 316, 0, 0,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 182, 198, 0, 0, 326, 366, 372,
	0, 0, 0, 221, 0, 370, 340, 428, 205, 248,
	363, 345, 368, 0, 0, 369, 292, 416, 358, 426,
	444, 445, 228, 320, 434, 405, 440, 456, 199, 225,
	334, 398, 431, 389, 313, 412, 413, 282, 388, 256,
	185, 290, 450, 197, 378, 213, 190, 400, 424, 210,
	381, 0, 0, 458, 192, 422, 397, 310, 279, 280,
	191, 0, 362, 233, 254, 223, 329, 419, 420, 222,
	459, 201, 439, 194, 0, 438, 322, 415, 423, 311,
	302, 193, 421, 309, 301, 285, 244, 265, 356, 295,
	357, 266, 318, 317, 319, 0, 188, 0, 394, 432,
	460, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 288, 333, 355, 353, 359, 0, 410, 427,
	435, 442, 448, 449, 451, 452, 453, 454, 455, 321,
	268, 390, 284, 293, 0, 0, 339, 371, 211, 430,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 289, 1415, 360, 251, 457, 437, 433, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 272, 273, 276, 281, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 348, 349, 350, 351, 352, 354,
	361, 365, 373, 374, 375, 376, 377, 379, 380, 384,
	385, 386, 387, 395, 399, 417, 418, 429, 441, 446,
	260, 425, 447, 0, 298, 0, 0, 300, 245, 263,
	274, 0, 436, 396, 200, 367, 252, 189, 217, 203,
	224, 239, 242, 278, 308, 314, 343, 347, 257, 236,
	215, 364, 212, 382, 402, 403, 404, 406, 312, 231,
	346, 407, 0, 296, 408, 409, 270, 0, 0, 0,
	0, 0, 0, 330, 0, 1296, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 287, 232, 0,
	0, 344, 0, 187, 0, 383, 220, 297, 294, 414,
	246, 238, 234, 219, 271, 303, 342, 401, 336, 0,
	291, 0, 0, 392, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 218, 186, 327, 393, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 275, 237, 229, 411, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 316, 0, 0, 0,
	0, 443, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 283, 182, 198, 0, 0, 326, 366, 372, 0,
	0, 0, 221, 0, 370, 340, 428, 205, 248, 363,
	345, 368, 0, 0, 369, 292, 416, 358, 426, 444,
	445, 228, 320, 434, 405, 440, 456, 199, 225, 334,
	398, 431, 389, 313, 412, 413, 282, 388, 256, 185,
	290, 450, 197, 378, 213, 190, 400, 424, 210, 381,
	0, 0, 458, 192, 422, 397, 310, 279, 280, 191,
	0, 362, 233, 254, 223, 329, 419, 420, 222, 459,
	201, 439, 194, 0, 438, 322, 415, 423, 311, 302,
	193, 421, 309, 301, 285, 244, 265, 356, 295, 357,
	266, 318, 317, 319, 0, 188, 0, 394, 432, 460,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 288, 333, 355, 353, 359, 0, 410, 427, 435,
	442, 448, 449, 451, 452, 453, 454, 455, 321, 268,
	390, 284, 293, 0, 0, 339, 371, 211, 430, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 289, 0, 360, 251, 457, 437, 433, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 272, 273, 276, 281, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 379, 380, 384, 385,
	386, 387, 395, 399, 417, 418, 429, 441, 446, 260,
	425, 447, 0, 298, 0, 0, 300, 245, 263, 274,
	0, 436, 396, 200, 367, 252, 189, 217, 203, 224,
	239, 242, 278, 308, 314, 343, 347, 257, 236, 215,
	364, 212, 382, 402, 403, 404, 406, 312, 231, 346,
	407, 0, 296, 408, 409, 270, 0, 0, 0, 0,
	0, 0, 330, 0, 1294, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 287, 232, 0, 0,
	344, 0, 187, 0, 383, 220, 297, 294, 414, 246,
	238, 234, 219, 271, 303, 342, 401, 336, 0, 291,
	0, 0, 392, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	218, 186, 327, 393, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	275, 237, 229, 411, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 316, 0, 0, 0, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 182, 198, 0, 0, 326, 366, 372, 0, 0,
	0, 221, 0, 370, 340, 428, 205, 248, 363, 345,
	368, 0, 0, 369, 292, 416, 358, 426, 444, 445,
	228, 320, 434, 405, 440, 456, 199, 225, 334, 398,
	431, 389, 313, 412, 413, 282, 388, 256, 185, 290,
	450, 197, 378, 213, 190, 400, 424, 210, 381, 0,
	0, 458, 192, 422, 397, 310, 279, 280, 191, 0,
	362, 233, 254, 223, 329, 419, 420, 222, 459, 201,
	439, 194, 0, 438, 322, 415, 423, 311, 302, 193,
	421, 309, 301, 285, 244, 265, 356, 295, 357, 266,
	318, 317, 319, 0, 188, 0, 394, 432, 460, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	288, 333, 355, 353, 359, 0, 410, 427, 435, 442,
	448, 449, 451, 452, 453, 454, 455, 321, 268, 390,
	284, 293, 0, 0, 339, 371, 211, 430, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	289, 0, 360, 251, 457, 437, 433, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 272, 273, 276, 281, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 379, 380, 384, 385, 386,
	387, 395, 399, 417, 418, 429, 441, 446, 260, 425,
	447, 0, 298, 0, 0, 300, 245, 263, 274, 0,
	436, 396, 200, 367, 252, 189, 217, 203, 224, 239,
	242, 278, 308, 314, 343, 347, 257, 236, 215, 364,
	212, 382, 402, 403, 404, 406, 312, 231, 346, 407,
	0, 296, 408, 409, 270, 0, 0, 0, 0, 0,
	0, 330, 0, 1292, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 287, 232, 0, 0, 344,
	0, 187, 0, 383, 220, 297, 294, 414, 246, 238,
	234, 219, 271, 303, 342, 401, 336, 0, 291, 0,
	0, 392, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 218,
	186, 327, 393, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 275,
	237, 229, 411, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 316, 0, 0, 0, 0, 443,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 283,
	182, 198, 0, 0, 326, 366, 372, 0, 0, 0,
	221, 0, 370, 340, 428, 205, 248, 363, 345, 368,
	0, 0, 369, 292, 416, 358, 426, 444, 445, 228,
	320, 434, 405, 440, 456, 199, 225, 334, 398, 431,
	389, 313, 412, 413, 282, 388, 256, 185, 290, 450,
	197, 378, 213, 190, 400, 424, 210, 381, 0, 0,
	458, 192, 422, 397, 310, 279, 280, 191, 0, 362,
	233, 254, 223, 329, 419, 420, 222, 459, 201, 439,
	194, 0, 438, 322, 415, 423, 311, 302, 193, 421,
	309, 301, 285, 244, 265, 356, 295, 357, 266, 318,
	317, 319, 0, 188, 0, 394, 432, 460, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 288,
	333, 355, 353, 359, 0, 410, 427, 435, 442, 448,
	449, 451, 452, 453, 454, 455, 321, 268, 390, 284,
	293, 0, 0, 339, 371, 211, 430, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 289,
	0, 360, 251, 457, 437, 433, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 272, 273, 276, 281, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 379, 380, 384, 385, 386, 387,
	395, 399, 417, 418, 429, 441, 446, 260, 425, 447,
	0, 298, 0, 0, 300, 245, 263, 274, 0, 436,
	396, 200, 367, 252, 189, 217, 203, 224, 239, 242,
	278, 308, 314, 343, 347, 257, 236, 215, 364, 212,
	382, 402, 403, 404, 406, 312, 231, 346, 407, 0,
	296, 408, 409, 270, 0, 0, 0, 0, 0, 0,
	330, 0, 1290, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 287, 232, 0, 0, 344, 0,
	187, 0, 383, 220, 297, 294, 414, 246, 238, 234,
	219, 271, 303, 342, 401, 336, 0, 291, 0, 0,
	392, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 218, 186,
	327, 393, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 275, 237,
	229, 411, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 316, 0, 0, 0, 0, 443, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 182,
	198, 0, 0, 326, 366, 372, 0, 0, 0, 221,
	0, 370, 340, 428, 205, 248, 363, 345, 368, 0,
	0, 369, 292, 416, 358, 426, 444, 445, 228, 320,
	434, 405, 440, 456, 199, 225, 334, 398, 431, 389,
	313, 412, 413, 282, 388, 256, 185, 290, 450, 197,
	378, 213, 190, 400, 424, 210, 381, 0, 0, 458,
	192, 422, 397, 310, 279, 280, 191, 0, 362, 233,
	254, 223, 329, 419, 420, 222, 459, 201, 439, 194,
	0, 438, 322, 415, 423, 311, 302, 193, 421, 309,
	301, 285, 244, 265, 356, 295, 357, 266, 318, 317,
	319, 0, 188, 0, 394, 432, 460, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 288, 333,
	355, 353, 359, 0, 410, 427, 435, 442, 448, 449,
	451, 452, 453, 454, 455, 321, 268, 390, 284, 293,
	0, 0, 339, 371, 211, 430, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 289, 0,
	360, 251, 457, 437, 433, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 272, 273, 276, 281, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 379, 380, 384, 385, 386, 387, 395,
	399, 417, 418, 429, 441, 446, 260, 425, 447, 0,
	298, 0, 0, 300, 245, 263, 274, 0, 436, 396,
	200, 367, 252, 189, 217, 203, 224, 239, 242, 278,
	308, 314, 343, 347, 257, 236, 215, 364, 212, 382,
	402, 403, 404, 406, 312, 231, 346, 407, 0, 296,
	408, 409, 270, 0, 0, 0, 0, 0, 0, 330,
	0, 1288, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 287, 232, 0, 0, 344, 0, 187,
	0, 383, 220, 297, 294, 414, 246, 238, 234, 219,
	271, 303, 342, 401, 336, 0, 291, 0, 0, 392,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 218, 186, 327,
	393, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 275, 237, 229,
	411, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 316, 0, 0, 0, 0, 443, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 283, 182, 198,
	0, 0, 326, 366, 372, 0, 0, 0, 221, 0,
	370, 340, 428, 205, 248, 363, 345, 368, 0, 0,
	369, 292, 416, 358, 426, 444, 445, 228, 320, 434,
	405, 440, 456, 199, 225, 334, 398, 431, 389, 313,
	412, 413, 282, 388, 256, 185, 290, 450, 197, 378,
	213, 190, 400, 424, 210, 381, 0, 0, 458, 192,
	422, 397, 310, 279, 280, 191, 0, 362, 233, 254,
	223, 329, 419, 420, 222, 459, 201, 439, 194, 0,
	438, 322, 415, 423, 311, 302, 193, 421, 309, 301,
	285, 244, 265, 356, 295, 357, 266, 318, 317, 319,
	0, 188, 0, 394, 432, 460, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 288, 333, 355,
	353, 359, 0, 410, 427, 435, 442, 448, 449, 451,
	452, 453, 454, 455, 321, 268, 390, 284, 293, 0,
	0, 339, 371, 211, 430, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 289, 0, 360,
	251, 457, 437, 433, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	272, 273, 276, 281, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 348,
	349, 350, 351, 352, 354, 361, 365, 373, 374, 375,
	376, 377, 379, 380, 384, 385, 386, 387, 395, 399,
	417, 418, 429, 441, 446, 260, 425, 447, 0, 298,
	0, 0, 300, 245, 263, 274, 0, 436, 396, 200,
	367, 252, 189, 217, 203, 224, 239, 242, 278, 308,
	314, 343, 347, 257, 236, 215, 364, 212, 382, 402,
	403, 404, 406, 312, 231, 346, 407, 0, 296, 408,
	409, 270, 0, 0, 0, 0, 0, 0, 330, 0,
	1284, 0, 0, 0, 0, 0, 0, 235, 0, 0,
	0, 0, 287, 232, 0, 0, 344, 0, 187, 0,
	383, 220, 297, 294, 414, 246, 238, 234, 219, 271,
	303, 342, 401, 336, 0, 291, 0, 0, 392, 315,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 277, 218, 186, 327, 393,
	250, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 209, 0, 216,
	0, 0, 0, 0, 0, 230, 275, 237, 229, 411,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 258,
	0, 316, 0, 0, 0, 0, 443, 0, 0, 0,
	0, 0, 0, 0, 286, 0, 283, 182, 198, 0,
	0, 326, 366, 372, 0, 0, 0, 221, 0, 370,
	340, 428, 205, 248, 363, 345, 368, 0, 0, 369,
	292, 416, 358, 426, 444, 445, 228, 320, 434, 405,
	440, 456, 199, 225, 334, 398, 431, 389, 313, 412,
	413, 282, 388, 256, 185, 290, 450, 197, 378, 213,
	190, 400, 424, 210, 381, 0, 0, 458, 192, 422,
	397, 310, 279, 280, 191, 0, 362, 233, 254, 223,
	329, 419, 420, 222, 459, 201, 439, 194, 0, 438,
	322, 415, 423, 311, 302, 193, 421, 309, 301, 285,
	244, 265, 356, 295, 357, 266, 318, 317, 319, 0,
	188, 0, 394, 432, 460, 206, 207, 208, 0, 243,
	247, 253, 255, 261, 262, 269, 288, 333, 355, 353,
	359, 0, 410, 427, 435, 442, 448, 449, 451, 452,
	453, 454, 455, 321, 268, 390, 284, 293, 0, 0,
	339, 371, 211, 430, 391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 461, 462, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 289, 0, 360, 251,
	457, 437, 433, 0, 0, 227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 204, 214, 226, 241, 249, 259, 264, 267, 272,
	273, 276, 281, 299, 304, 305, 306, 307, 323, 324,
	325, 328, 331, 332, 335, 337, 338, 341, 348, 349,
	350, 351, 352, 354, 361, 365, 373, 374, 375, 376,
	377, 379, 380, 384, 385, 386, 387, 395, 399, 417,
	418, 429, 441, 446, 260, 425, 447, 0, 298, 0,
	0, 300, 245, 263, 274, 0, 436, 396, 200, 367,
	252, 189, 217, 203, 224, 239, 242, 278, 308, 314,
	343, 347, 257, 236, 215, 364, 212, 382, 402, 403,
	404, 406, 312, 231, 346, 407, 0, 296, 408, 409,
	270, 0, 0, 0, 0, 0, 0, 330, 0, 1282,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 287, 232, 0, 0, 344, 0, 187, 0, 383,
	220, 297, 294, 414, 246, 238, 234, 219, 271, 303,
	342, 401, 336, 0, 291, 0, 0, 392, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 277, 218, 186, 327, 393, 250,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 209, 0, 216, 0,
	0, 0, 0, 0, 230, 275, 237, 229, 411, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	316, 0, 0, 0, 0, 443, 0, 0, 0, 0,
	0, 0, 0, 286, 0, 283, 182, 198, 0, 0,
	326, 366, 372, 0, 0, 0, 221, 0, 370, 340,
	428, 205, 248, 363, 345, 368, 0, 0, 369, 292,
	416, 358, 426, 444, 445, 228, 320, 434, 405, 440,
	456, 199, 225, 334, 398, 431, 389, 313, 412, 413,
	282, 388, 256, 185, 290, 450, 197, 378, 213, 190,
	400, 424, 210, 381, 0, 0, 458, 192, 422, 397,
	310, 279, 280, 191, 0, 362, 233, 254, 223, 329,
	419, 420, 222, 459, 201, 439, 194, 0, 438, 322,
	415, 423, 311, 302, 193, 421, 309, 301, 285, 244,
	265, 356, 295, 357, 266, 318, 317, 319, 0, 188,
	0, 394, 432, 460, 206, 207, 208, 0, 243, 247,
	253, 255, 261, 262, 269, 288, 333, 355, 353, 359,
	0, 410, 427, 435, 442, 448, 449, 451, 452, 453,
	454, 455, 321, 268, 390, 284, 293, 0, 0, 339,
	371, 211, 430, 391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 461, 462, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 289, 0, 360, 251, 457,
	437, 433, 0, 0, 227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	204, 214, 226, 241, 249, 259, 264, 267, 272, 273,
	276, 281, 299, 304, 305, 306, 307, 323, 324, 325,
	328, 331, 332, 335, 337, 338, 341, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	379, 380, 384, 385, 386, 387, 395, 399, 417, 418,
	429, 441, 446, 260, 425, 447, 0, 298, 0, 0,
	300, 245, 263, 274, 0, 436, 396, 200, 367, 252,
	189, 217, 203, 224, 239, 242, 278, 308, 314, 343,
	347, 257, 236, 215, 364, 212, 382, 402, 403, 404,
	406, 312, 231, 346, 407, 0, 296, 408, 409, 270,
	0, 0, 0, 0, 0, 0, 330, 0, 1280, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	287, 232, 0, 0, 344, 0, 187, 0, 383, 220,
	297, 294, 414, 246, 238, 234, 219, 271, 303, 342,
	401, 336, 0, 291, 0, 0, 392, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 277, 218, 186, 327, 393, 250, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 209, 0, 216, 0, 0,
	0, 0, 0, 230, 275, 237, 229, 411, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 258, 0, 316,
	0, 0, 0, 0, 443, 0, 0, 0, 0, 0,
	0, 0, 286, 0, 283, 182, 198, 0, 0, 326,
	366, 372, 0, 0, 0, 221, 0, 370, 340, 428,
	205, 248, 363, 345, 368, 0, 0, 369, 292, 416,
	358, 426, 444, 445, 228, 320, 434, 405, 440, 456,
	199, 225, 334, 398, 431, 389, 313, 412, 413, 282,
	388, 256, 185, 290, 450, 197, 378, 213, 190, 400,
	424, 210, 381, 0, 0, 458, 192, 422, 397, 310,
	279, 280, 191, 0, 362, 233, 254, 223, 329, 419,
	420, 222, 459, 201, 439, 194, 0, 438, 322, 415,
	423, 311, 302, 193, 421, 309, 301, 285, 244, 265,
	356, 295, 357, 266, 318, 317, 319, 0, 188, 0,
	394, 432, 460, 206, 207, 208, 0, 243, 247, 253,
	255, 261, 262, 269, 288, 333, 355, 353, 359, 0,
	410, 427, 435, 442, 448, 449, 451, 452, 453, 454,
	455, 321, 268, 390, 284, 293, 0, 0, 339, 371,
	211, 430, 391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 461, 462, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 289, 0, 360, 251, 457, 437,
	433, 0, 0, 227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 204,
	214, 226, 241, 249, 259, 264, 267, 272, 273, 276,
	281, 299, 304, 305, 306, 307, 323, 324, 325, 328,
	331, 332, 335, 337, 338, 341, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 379,
	380, 384, 385, 386, 387, 395, 399, 417, 418, 429,
	441, 446, 260, 425, 447, 0, 298, 0, 0, 300,
	245, 263, 274, 0, 436, 396, 200, 367, 252, 189,
	217, 203, 224, 239, 242, 278, 308, 314, 343, 347,
	257, 236, 215, 364, 212, 382, 402, 403, 404, 406,
	312, 231, 346, 407, 0, 296, 408, 409, 270, 0,
	0, 0, 0, 0, 0, 330, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 287,
	232, 0, 0, 344, 0, 187, 0, 383, 220, 297,
	294, 414, 246, 238, 234, 219, 271, 303, 342, 401,
	336, 0, 291, 0, 0, 392, 315, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 277, 218, 186, 327, 393, 250, 0, 1255,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 209, 0, 216, 0, 0, 0,
	0, 0, 230, 275, 237, 229, 411, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 240, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 316, 0,
	0, 0, 0, 443, 0, 0, 0, 0, 0, 0,
	0, 286, 0, 283, 182, 198, 0, 0, 326, 366,
	372, 0, 0, 0, 221, 0, 370, 340, 428, 205,
	248, 363, 345, 368, 0, 0, 369, 292, 416, 358,
	426, 444, 445, 228, 320, 434, 405, 440, 456, 199,
	225, 334, 398, 431, 389, 313, 412, 413, 282, 388,
	256, 185, 290, 450, 197, 378, 213, 190, 400, 424,
	210, 381, 0, 0, 458, 192, 422, 397, 310, 279,
	280, 191, 0, 362, 233, 254, 223, 329, 419, 420,
	222, 459, 201, 439, 194, 0, 438, 322, 415, 423,
	311, 302, 193, 421, 309, 301, 285, 244, 265, 356,
	295, 357, 266, 318, 317, 319, 0, 188, 0, 394,
	432, 460, 206, 207, 208, 0, 243, 247, 253, 255,
	261, 262, 269, 288, 333, 355, 353, 359, 0, 410,
	427, 435, 442, 448, 449, 451, 452, 453, 454, 455,
	321, 268, 390, 284, 293, 0, 0, 339, 371, 211,
	430, 391, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 461, 462, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 289, 0, 360, 251, 457, 437, 433,
	0, 0, 227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 204, 214,
	226, 241, 249, 259, 264, 267, 272, 273, 276, 281,
	299, 304, 305, 306, 307, 323, 324, 325, 328, 331,
	332, 335, 337, 338, 341, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 379, 380,
	384, 385, 386, 387, 395, 399, 417, 418, 429, 441,
	446, 260, 425, 447, 0, 298, 0, 0, 300, 245,
	263, 274, 0, 436, 396, 200, 367, 252, 189, 217,
	203, 224, 239, 242, 278, 308, 314, 343, 347, 257,
	236, 215, 364, 212, 382, 402, 403, 404, 406, 312,
	231, 346, 407, 0, 296, 408, 409, 270, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 1158, 235, 0, 0, 0, 0, 287, 232,
	0, 0, 344, 0, 187, 0, 383, 220, 297, 294,
	414, 246, 238, 234, 219, 271, 303, 342, 401, 336,
	0, 291, 0, 0, 392, 315, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 277, 218, 186, 327, 393, 250, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 209, 0, 216, 0, 0, 0, 0,
	0, 230, 275, 237, 229, 411, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 0, 316, 0, 0,
	0, 0, 443, 0, 0, 0, 0, 0, 0, 0,
	286, 0, 283, 182, 198, 0, 0, 326, 366, 372,
	0, 0, 0, 221, 0, 370, 340, 428, 205, 248,
	363, 345, 368, 0, 0, 369, 292, 416, 358, 426,
	444, 445, 228, 320, 434, 405, 440, 456, 199, 225,
	334, 398, 431, 389, 313, 412, 413, 282, 388, 256,
	185, 290, 450, 197, 378, 213, 190, 400, 424, 210,
	381, 0, 0, 458, 192, 422, 397, 310, 279, 280,
	191, 0, 362, 233, 254, 223, 329, 419, 420, 222,
	459, 201, 439, 194, 0, 438, 322, 415, 423, 311,
	302, 193, 421, 309, 301, 285, 244, 265, 356, 295,
	357, 266, 318, 317, 319, 0, 188, 0, 394, 432,
	460, 206, 207, 208, 0, 243, 247, 253, 255, 261,
	262, 269, 288, 333, 355, 353, 359, 0, 410, 427,
	435, 442, 448, 449, 451, 452, 453, 454, 455, 321,
	268, 390, 284, 293, 0, 0, 339, 371, 211, 430,
	391, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 461, 462, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 289, 0, 360, 251, 457, 437, 433, 0,
	0, 227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 204, 214, 226,
	241, 249, 259, 264, 267, 272, 273, 276, 281, 299,
	304, 305, 306, 307, 323, 324, 325, 328, 331, 332,
	335, 337, 338, 341, 348, 349, 350, 351, 352, 354,
	361, 365, 373, 374, 375, 376, 377, 379, 380, 384,
	385, 386, 387, 395, 399, 417, 418, 429, 441, 446,
	260, 425, 447, 0, 298, 0, 0, 300, 245, 263,
	274, 0, 436, 396, 200, 367, 252, 189, 217, 203,
	224, 239, 242, 278, 308, 314, 343, 347, 257, 236,
	215, 364, 212, 382, 402, 403, 404, 406, 312, 231,
	346, 407, 0, 296, 408, 409, 270, 0, 0, 0,
	0, 0, 0, 330, 0, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 287, 232, 0,
	0, 344, 0, 187, 0, 383, 220, 297, 294, 414,
	246, 238, 234, 219, 271, 303, 342, 401, 336, 0,
	291, 0, 0, 392, 315, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	277, 218, 186, 327, 393, 250, 0, 0, 0, 0,
	178, 179, 180, 0, 995, 0, 0, 0, 0, 0,
	0, 0, 209, 0, 216, 0, 0, 0, 0, 0,
	230, 275, 237, 229, 411, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 240, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 316, 0, 0, 0,
	0, 443, 0, 0, 0, 0, 0, 0, 0, 286,
	0, 283, 182, 198, 0, 0, 326, 366, 372, 0,
	0, 0, 221, 0, 370, 340, 428, 205, 248, 363,
	345, 368, 0, 0, 369, 292, 416, 358, 426, 444,
	445, 228, 320, 434, 405, 440, 456, 199, 225, 334,
	398, 431, 389, 313, 412, 413, 282, 388, 256, 185,
	290, 450, 197, 378, 213, 190, 400, 424, 210, 381,
	0, 0, 458, 192, 422, 397, 310, 279, 280, 191,
	0, 362, 233, 254, 223, 329, 419, 420, 222, 459,
	201, 439, 194, 0, 438, 322, 415, 423, 311, 302,
	193, 421, 309, 301, 285, 244, 265, 356, 295, 357,
	266, 318, 317, 319, 0, 188, 0, 394, 432, 460,
	206, 207, 208, 0, 243, 247, 253, 255, 261, 262,
	269, 288, 333, 355, 353, 359, 0, 410, 427, 435,
	442, 448, 449, 451, 452, 453, 454, 455, 321, 268,
	390, 284, 293, 0, 0, 339, 371, 211, 430, 391,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	461, 462, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 289, 0, 360, 251, 457, 437, 433, 0, 0,
	227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 204, 214, 226, 241,
	249, 259, 264, 267, 272, 273, 276, 281, 299, 304,
	305, 306, 307, 323, 324, 325, 328, 331, 332, 335,
	337, 338, 341, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 379, 380, 384, 385,
	386, 387, 395, 399, 417, 418, 429, 441, 446, 260,
	425, 447, 0, 298, 0, 0, 300, 245, 263, 274,
	0, 436, 396, 200, 367, 252, 189, 217, 203, 224,
	239, 242, 278, 308, 314, 343, 347, 257, 236, 215,
	364, 212, 382, 402, 403, 404, 406, 312, 231, 346,
	407, 0, 296, 408, 409, 270, 0, 0, 0, 0,
	0, 0, 330, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 0, 0, 287, 232, 0, 0,
	344, 0, 187, 0, 383, 220, 297, 294, 414, 246,
	238, 234, 219, 271, 303, 342, 401, 336, 0, 291,
	0, 0, 392, 315, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 277,
	218, 186, 327, 393, 250, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 209, 0, 216, 0, 0, 0, 0, 0, 230,
	275, 237, 229, 411, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 316, 0, 0, 0, 0,
	443, 0, 0, 0, 0, 0, 0, 0, 286, 0,
	283, 182, 198, 0, 0, 326, 366, 372, 0, 0,
	0, 221, 0, 370, 340, 428, 205, 248, 363, 345,
	368, 0, 0, 369, 292, 416, 358, 426, 444, 445,
	228, 320, 434, 405, 440, 456, 199, 225, 334, 398,
	431, 389, 313, 412, 413, 282, 388, 256, 185, 290,
	450, 197, 378, 213, 190, 400, 424, 210, 381, 0,
	0, 458, 192, 422, 397, 310, 279, 280, 191, 0,
	362, 233, 254, 223, 329, 419, 420, 222, 459, 201,
	439, 194, 0, 438, 322, 415, 423, 311, 302, 193,
	421, 309, 301, 285, 244, 265, 356, 295, 357, 266,
	318, 317, 319, 0, 188, 0, 394, 432, 460, 206,
	207, 208, 0, 243, 247, 253, 255, 261, 262, 269,
	288, 333, 355, 353, 359, 0, 410, 427, 435, 442,
	448, 449, 451, 452, 453, 454, 455, 321, 268, 390,
	284, 293, 0, 0, 339, 371, 211, 430, 391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	289, 0, 360, 251, 457, 437, 433, 0, 0, 227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 629, 0,
	0, 0, 183, 184, 196, 204, 214, 226, 241, 249,
	259, 264, 267, 272, 273, 276, 281, 299, 304, 305,
	306, 307, 323, 324, 325, 328, 331, 332, 335, 337,
	338, 341, 348, 349, 350, 351, 352, 354, 361, 365,
	373, 374, 375, 376, 377, 379, 380, 384, 385, 386,
	387, 395, 399, 417, 418, 429, 441, 446, 260, 425,
	447, 0, 298, 0, 0, 300, 245, 263, 274, 0,
	436, 396, 200, 367, 252, 189, 217, 203, 224, 239,
	242, 278, 308, 314, 343, 347, 257, 236, 215, 364,
	212, 382, 402, 403, 404, 406, 312, 231, 346, 407,
	0, 296, 408, 409, 270, 0, 0, 0, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 287, 232, 0, 0, 344,
	0, 187, 0, 383, 220, 297, 294, 414, 246, 238,
	234, 219, 271, 303, 342, 401, 336, 0, 291, 0,
	0, 392, 315, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 277, 218,
	186, 327, 393, 250, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	209, 0, 216, 0, 0, 0, 0, 0, 230, 275,
	237, 229, 411, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	240, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	534, 0, 258, 0, 316, 0, 0, 0, 0, 443,
	0, 0, 0, 0, 0, 0, 0, 286, 0, 283,
	182, 198, 0, 0, 326, 366, 372, 0, 0, 0,
	221, 0, 370, 340, 428, 205, 248, 363, 345, 368,
	0, 0, 369, 292, 416, 358, 426, 444, 445, 228,
	320, 434, 405, 440, 456, 199, 225, 334, 398, 431,
	389, 313, 412, 413, 282, 388, 256, 185, 290, 450,
	197, 378, 213, 190, 400, 424, 210, 381, 0, 0,
	458, 192, 422, 397, 310, 279, 280, 191, 0, 362,
	233, 254, 223, 329, 419, 420, 222, 459, 201, 439,
	194, 0, 438, 322, 415, 423, 311, 302, 193, 421,
	309, 301, 285, 244, 265, 356, 295, 357, 266, 318,
	317, 319, 0, 188, 0, 394, 432, 460, 206, 207,
	208, 0, 243, 247, 253, 255, 261, 262, 269, 288,
	333, 355, 353, 359, 0, 410, 427, 435, 442, 448,
	449, 451, 452, 453, 454, 455, 321, 268, 390, 284,
	293, 0, 0, 339, 371, 211, 430, 391, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 289,
	0, 360, 251, 457, 437, 433, 0, 0, 227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 204, 214, 226, 241, 249, 259,
	264, 267, 272, 273, 276, 281, 299, 304, 305, 306,
	307, 323, 324, 325, 328, 331, 332, 335, 337, 338,
	341, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 379, 380, 384, 385, 386, 387,
	395, 399, 417, 418, 429, 441, 446, 533, 425, 447,
	0, 298, 0, 0, 300, 245, 263, 274, 0, 436,
	396, 200, 367, 252, 189, 217, 203, 224, 239, 242,
	278, 308, 314, 343, 347, 257, 236, 215, 364, 212,
	382, 402, 403, 404, 406, 312, 231, 346, 407, 0,
	296, 408, 409, 270, 0, 0, 0, 0, 0, 0,
	330, 0, 0, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 0, 287, 232, 0, 0, 344, 0,
	187, 0, 383, 220, 297, 294, 414, 246, 238, 234,
	219, 271, 303, 342, 401, 336, 0, 291, 0, 0,
	392, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 277, 218, 186,
	327, 393, 250, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 209,
	0, 216, 0, 0, 0, 0, 0, 230, 275, 237,
	229, 411, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 240,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 316, 0, 0, 481, 0, 443, 0,
	0, 0, 0, 0, 0, 0, 286, 0, 283, 182,
	198, 0, 0, 326, 366, 372, 0, 0, 0, 221,
	0, 370, 340, 428, 205, 248, 363, 345, 368, 0,
	0, 369, 292, 416, 358, 426, 444, 445, 228, 320,
	434, 405, 440, 456, 199, 225, 334, 398, 431, 389,
	313, 412, 413, 282, 388, 256, 185, 290, 450, 197,
	378, 213, 190, 400, 424, 210, 381, 0, 0, 458,
	192, 422, 397, 310, 279, 280, 191, 0, 362, 233,
	254, 223, 329, 419, 420, 222, 459, 201, 439, 194,
	0, 438, 322, 415, 423, 311, 302, 193, 421, 309,
	301, 285, 244, 265, 356, 295, 357, 266, 318, 317,
	319, 0, 188, 0, 394, 432, 460, 206, 207, 208,
	0, 243, 247, 253, 255, 261, 262, 269, 288, 333,
	355, 353, 359, 0, 410, 427, 435, 442, 448, 449,
	451, 452, 453, 454, 455, 321, 268, 390, 284, 293,
	0, 0, 339, 371, 211, 430, 391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 461, 462, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 289, 0,
	360, 251, 457, 437, 433, 0, 0, 227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 204, 214, 226, 241, 249, 259, 264,
	267, 272, 273, 276, 281, 299, 304, 305, 306, 307,
	323, 324, 325, 328, 331, 332, 335, 337, 338, 341,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 379, 380, 384, 385, 386, 387, 395,
	399, 417, 418, 429, 441, 446, 260, 425, 447, 0,
	298, 0, 0, 300, 245, 263, 274, 0, 436, 396,
	200, 367, 252, 189, 217, 203, 224, 239, 242, 278,
	308, 314, 343, 347, 257, 236, 215, 364, 212, 382,
	402, 403, 404, 406, 312, 231, 346, 407, 0, 296,
	408, 409, 270, 0, 0, 0, 0, 0, 0, 330,
	0, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 0, 287, 232, 0, 0, 344, 0, 187,
	0, 383, 220, 297, 294, 414, 246, 238, 234, 219,
	271, 303, 342, 401, 336, 0, 291, 0, 0, 392,
	315, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 277, 218, 186, 327,
	393, 250, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 209, 0,
	216, 0, 0, 0, 0, 0, 230, 275, 237, 229,
	411, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 240, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 316, 0, 0, 0, 0, 443, 0, 0,
	0, 0, 0, 0, 0, 286, 0, 283, 182, 198,
	0, 0, 326, 366, 372, 0, 0, 0, 221, 0,
	370, 340, 428, 205, 248, 363, 345, 368, 0, 0,
	369, 292, 416, 358, 426, 444, 445, 228, 320, 434,
	405, 440, 456, 199, 225, 334, 398, 431, 389, 313,
	412, 413, 282, 388, 256, 185, 290, 450, 197, 378,
	213, 190, 400, 424, 210, 381, 0, 0, 458, 192,
	422, 397, 310, 279, 280, 191, 0, 362, 233, 254,
	223, 329, 419, 420, 222, 459, 201, 439, 194, 0,
	438, 322, 415, 423, 311, 302, 193, 421, 309, 301,
	285, 244, 265, 356, 295, 357, 266, 318, 317, 319,
	0, 188, 0, 394, 432, 460, 206, 207, 208, 0,
	243, 247, 253, 255, 261, 262, 269, 288, 333, 355,
	353, 359, 0, 410, 427, 435, 442, 448, 449, 451,
	452, 453, 454, 455, 321, 268, 390, 284, 293, 0,
	0, 339, 371, 211, 430, 391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 461, 462, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 289, 0, 360,
	251, 457, 437, 433, 0, 0, 227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 204, 214, 226, 241, 249, 259, 264, 267,
	272, 273, 276, 281, 299, 304, 305, 306, 307, 323,
	324, 325, 328, 331, 332, 335, 337, 338, 341, 348,
	349, 350, 351, 352, 354, 361, 365, 373, 374, 375,
	376, 377, 379, 380, 384, 385, 386, 387, 395, 399,
	417, 418, 429, 441, 446, 260, 425, 447, 0, 298,
	0, 0, 300, 245, 263, 274, 0, 436, 396, 200,
	367, 252, 189, 217, 203, 224, 239, 242, 278, 308,
	314, 343, 347, 257, 236, 215, 364, 212, 382, 402,
	403, 404, 406, 312, 231, 346, 0, 0, 296, 408,
	409, 270,
}

var yyPact = [...]int{
	3721, -1000, -340, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1709, 1750, -1000, -1000, -1000, -1000, 1888,
	-1000, 688, 1477, -1000, 1724, 4202, -1000, 31960, 481, -1000,
	31461, 471, 411, 31960, -1000, 170, -1000, 102, 31960, 156,
	30962, -1000, -1000, -258, 13993, 1665, 11, 7, 31960, -1000,
	1818, 1501, -1000, 307, -1000, -1000, -1000, -1000, -1000, -1000,
	30463, -1000, -1000, -1000, 1734, 1706, 1896, 596, 1672, -1000,
	1774, 1501, -1000, 13993, 1824, 1762, 12496, -1000, 12496, 379,
	-1000, -1000, 9994, -1000, -1000, 18985, 31960, 31960, 300, -1000,
	1724, -1000, -1000, 304, -1000, 314, 1417, -1000, 1415, -1000,
	647, 660, 303, 383, 378, 301, 299, 298, 297, 296,
	292, 291, 285, 319, -1000, 687, 687, -150, -152, 2312,
	371, 371, 371, 398, 1690, 1686, -1000, 656, -1000, 687,
	687, 295, 687, 687, 687, 687, 255, 253, 687, 687,
	687, 687, 687, 687, 687, 687, 687, 687, 687, 687,
	687, 687, 687, 254, 1724, 237, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31960,
	167, 31960, -1000, 548, 31960, 759, 759, 93, 759, 759,
	759, 759, 116, 476, 6, -1000, 113, 230, 101, 232,
	714, 218, 122, -1000, -1000, 227, 714, 1068, 614, 107,
	-1000, 759, 7966, 7966, 7966, -1000, 1700, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 396, -1000, -1000, -1000, -1000,
	31960, 29964, 266, 699, -1000, -1000, -1000, 128, -1000, -1000,
	1193, 949, -1000, 13993, 2742, 1428, 1428, -1000, -1000, 542,
	-1000, -1000, 15490, 15490, 15490, 15490, 15490, -1000, 15490, 15490,
	15490, 15490, 15490, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1428, 546, -1000,
	-1000, 1428, 1428, 1428, 1428, 1428, 1428, 1428, 1428, 13993,
	1428, 1428, 1428, 1428, 1428, 1428, 1428, 1428, 1428, 1428,
	1428, 1428, 1428, 1428, 1428, 1428, 1428, 1428, -1000, -1000,
	11498, -1000, 31960, -1000, 1428, 177, 1774, 1501, -1000, 1818,
	1784, 307, -1000, 1710, 1447, 1230, 977, 1501, 1371, 31960,
	-1000, 1448, -1000, -1000, -1000, 1620, 1017, 1065, -1000, -1000,
	-1000, -1000, 1007, 13993, -1000, -1000, 1871, -1000, 16987, 545,
	825, 1868, 29465, -1000, 379, 379, 1414, 9487, -13, -1000,
	-1000, -1000, 695, 20981, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1700,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1410, 31960, -1000, -1000, 2447, 1058, -1000, 1476, -1000,
	1405, -1000, 1457, 1504, 437, 1058, 422, 413, 409, -1000,
	-71, -1000, -1000, -1000, -1000, -1000, 687, 687, 318, 4202,
	4367, -1000, -1000, -1000, 28966, 1473, 1058, -1000, 1472, -1000,
	769, 435, 478, 478, 1058, -1000, -1000, 31960, 1058, 767,
	749, 31960, 31960, -1000, 28467, -1000, 27968, 27469, 958, 31960,
	26970, 26471, 25972, 25473, 24974, -1000, 1561, -1000, 1497, -1000,
	-1000, -1000, 31960, 31960, 31960, 277, -1000, -1000, 31960, 1058,
	-1000, -1000, 957, 953, 687, 687, 947, 1064, 1061, 1060,
	687, 687, 946, 1052, 22977, 235, 944, 943, 921, 998,
	1051, 174, 952, 951, 914, 31960, 1471, 31960, -1000, 219,
	712, 332, 693, 1724, 1661, 1412, 394, 436, 1058, 374,
	374, -1000, 8473, -1000, -1000, 1044, 13993, -1000, 740, 714,
	714, -1000, -1000, -1000, -1000, -1000, -1000, 759, 31960, 740,
	-1000, -1000, -1000, 714, 759, 31960, 759, 759, 759, 759,
	714, 714, 714, 759, 31960, 31960, 31960, 31960, 31960, 31960,
	31960, 31960, 31960, 7966, 7966, 7966, 614, 759, -266, -1000,
	1042, -1000, 1583, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 155, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -68, 1407, 24475, -1000, -268, -270, -275, -277, -1000,
	-1000, -1000, -280, -282, -1000, -1000, -1000, 13993, 13993, 13993,
	13993, 1009, 633, 15490, 935, 644, 15490, 15490, 15490, 15490,
	15490, 15490, 15490, 15490, 15490, 15490, 15490, 15490, 15490, 15490,
	15490, 807, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1058, -1000, 1340, 1340, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 15989, 10499, 8473, 12496, 12496, 13993, 13993,
	13494, 12995, 12496, 1699, 649, 949, 31960, -1000, 977, -1000,
	-1000, 14991, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 31960, 31960, 23, 12496, 12496, 12496,
	12496, 12496, 1384, 1234, 1401, -1000, 1377, -1000, -130, 18486,
	13993, 1041, -1000, -1000, -1000, 1774, -1000, 1774, 1384, 1689,
	1623, 12496, -1000, -1000, 1689, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1163, -1000, 31960, 1371, 1755, 31960, 1618,
	1038, 277, -1000, 13993, 13993, 1344, -1000, 883, 31960, -1000,
	-1000, 23976, -1000, -1000, 7459, -1000, 31960, 278, 31960, -1000,
	22478, 23477, 8980, -13, -1000, 8980, 1251, -1000, -11, -19,
	10998, 558, -1000, -1000, -1000, 2312, 16488, 1161, 1678, 44,
	-1000, -1000, -1000, 1457, -1000, 1457, 1457, 1457, 1457, 277,
	277, 277, 277, -1000, -1000, -1000, -1000, -1000, 1470, 1464,
	-1000, 1457, 1457, 1457, 1457, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1463, 1463, 1463, 1459, 1459, 359, -1000, 13993,
	203, 31960, 1733, 900, 219, 380, 1516, 1058, 1058, 1058,
	380, -1000, 1141, 1111, -1000, 1315, -1000, -1000, 1804, -1000,
	-1000, 452, 801, 781, 701, 31960, 196, 269, -1000, 352,
	-1000, 31960, 1058, 744, 478, 1058, -1000, 1058, -1000, -1000,
	-1000, -1000, 537, -1000, -1000, 1058, 1295, -1000, 1380, 822,
	777, 804, 747, 1295, -1000, -1000, -92, 1295, -1000, 1295,
	-1000, 1295, -1000, 1295, -1000, 1295, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 648, 31960, 196, 807, -1000, 390,
	-1000, -1000, 807, 807, -1000, -1000, -1000, -1000, 1029, 1019,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -318, 31960, -1000,
	214, 692, 260, 302, 261, 31960, 195, 1760, 215, 248,
	31960, 31960, 374, 1580, 31960, 1738, 31960, -1000, -1000, -1000,
	-1000, 949, 31960, -1000, -1000, 759, 759, -1000, -1000, 31960,
	759, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 759,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 31960, 31960, -1000,
	-1000, -1000, -1000, -1000, 145, -14, 251, -1000, -1000, -1000,
	-1000, -1000, 1771, -1000, 949, 633, 724, 728, -1000, -1000,
	855, -1000, -1000, 2471, -1000, -1000, -1000, -1000, 935, 15490,
	15490, 15490, 599, 2471, 2442, 1196, 1066, 568, 753, 753,
	563, 563, 563, 563, 563, 1035, 1035, -1000, -1000, -1000,
	-1000, 977, -1000, -1000, -1000, 977, 12496, 12496, 1280, -1000,
	1428, 533, -1000, 1375, 1375, 941, 1173, 677, 1862, 1375,
	645, 1858, 1375, 1375, 12496, -1000, -1000, 725, -1000, 13993,
	977, -1000, 1182, 1276, 1253, 1857, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1375, 977, 977,
	1375, 1375, 977, -1000, 31960, -1000, -254, -1000, -35, 507,
	1428, -1000, 22977, 977, 1193, -1000, -1000, -1000, -1000, -1000,
	20482, 1465, 1689, -1000, -1000, 1428, 1398, -1000, -1000, 277,
	27, 838, 949, 949, 13993, -1000, -1000, -1000, -1000, -1000,
	-1000, 531, 1848, 263, 1428, -1000, 1228, 1533, -1000, -1000,
	-1000, 1753, 17987, 31960, 1413, 1273, -1000, 521, -1000, 1251,
	-13, -27, -1000, -1000, -1000, -1000, 949, -1000, 1081, 283,
	305, -1000, 366, -1000, -1000, -1000, -1000, 913, 1751, 1674,
	36, -1000, -1000, -1000, 277, 277, -1000, -1000, 558, 558,
	558, 558, 1018, 1018, -1000, -1000, -1000, -1000, -1000, 896,
	-1000, -1000, -1000, 872, -1000, -1000, 1106, 1554, 203, -1000,
	-1000, 687, 1015, 1680, 31960, -1000, -1000, 1134, 214, 31960,
	733, 1577, -1000, 1516, 1516, 1516, 31960, -1000, -1000, -1000,
	-1000, 2967, 31960, 1388, -1000, 188, -1000, 1085, 31960, -1000,
	1386, 1462, 1058, 1058, -1000, -1000, 8473, -1000, 31960, 1428,
	-1000, -1000, -1000, -1000, 434, 1718, 1712, 196, 188, 558,
	1058, -1000, -1000, -1000, -1000, -1000, -322, 1383, 401, 206,
	217, 31960, 31960, 31960, 31960, 31960, 518, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 239, 385, -1000, 31960, 31960, 487,
	-1000, -1000, -1000, 714, -1000, -1000, 714, -1000, -1000, -1000,
	-1000, -1000, 1707, 31960, -20, -294, -1000, -291, -1000, -1000,
	-1000, -1000, 599, 2471, 1889, -1000, 15490, 15490, -1000, -1000,
	1375, 1375, 12496, 12496, 8473, -1000, -1000, 256, 807, 256,
	15490, 15490, -1000, 15490, 15490, -1000, -86, 1186, 707, -1000,
	13993, 1133, -1000, -1000, 15490, 15490, 13993, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 408, 407, 406, 31960,
	-1000, -1000, 1767, -1000, 1635, 1634, 1850, 1848, -1000, 22478,
	1689, -1000, -1000, 31960, -249, -1000, 1658, 1637, -1000, -1000,
	-1000, -1000, 6952, 1774, 13993, 1568, 31960, 1428, -1000, 17487,
	31960, 31960, 22478, 22478, 22478, 22478, 22478, -1000, 1611, 1608,
	-1000, 1598, 1596, 1607, 31960, -1000, 1369, 977, 1784, 17987,
	278, 1146, 22478, -1000, -1000, 22478, 31960, 6445, -1000, -1000,
	-25, -36, -1000, -1000, -1000, -1000, 1803, 2312, -1000, -1000,
	-1000, -1000, 815, 15490, 1890, -1000, 1014, -1000, -1000, 741,
	729, -1000, 31960, 1461, -1000, -1000, -1000, 558, 558, -1000,
	-1000, -1000, -1000, 1365, -1000, 1362, 1237, 1359, 96, -1000,
	1503, 1696, 687, 687, -1000, 868, -1000, 1058, -1000, -1000,
	384, -1000, 1736, 31960, 1557, 1548, 1547, -1000, 1801, 1217,
	31960, -1000, -1000, 31960, -1000, 1632, 203, 31960, -1000, -1000,
	-1000, -1000, 269, 31960, -1000, 1340, 188, -1000, -1000, -1000,
	-1000, -1000, -1000, 31960, 213, -1000, 1460, 954, -1000, 1508,
	-1000, -1000, -1000, -1000, 130, 258, -1000, 31960, 451, 1554,
	31960, -1000, -1000, -1000, 759, 759, -1000, -1000, 1691, -1000,
	1058, -1000, 15490, 2471, 2471, -1000, -1000, -1000, 977, -1000,
	977, 1457, 1457, -1000, 1457, 1459, -1000, 1457, 140, 1457,
	110, 977, 977, 2369, 2005, 1986, 1421, 1428, -80, -1000,
	949, 13993, 1466, 1373, 981, 1428, 1428, 1428, 1338, 31960,
	-1000, -1000, -1000, -1000, 1848, 1844, 1232, -1000, -1000, 27,
	293, -1000, 1653, 1637, -1000, 1795, 1654, 1790, -1000, -1000,
	-1000, 949, -1000, 1728, 1121, -1000, 670, 1176, -1000, -1000,
	11997, 1353, 1629, 504, 1338, 1210, 1533, 1512, 1544, 1559,
	-1000, -1000, -1000, -1000, 1604, -1000, 1529, -1000, -1000, 1448,
	-1000, -1000, 1234, 1848, 22478, 1180, 1180, -1000, 465, -1000,
	-1000, -1000, -1000, -331, -1000, -1000, 2471, 123, -1000, -1000,
	-1000, 1453, 15490, -1000, -1000, 277, 1012, 277, 849, -1000,
	847, -1000, -1000, -197, -1000, -1000, 1458, 1519, -1000, -1000,
	31960, -1000, -1000, 31960, 31960, 31960, 31960, -1000, -1000, 275,
	-1000, 1321, 1319, -1000, -153, -1000, -1000, 1448, -1000, -1000,
	-1000, 1079, -1000, -101, 1058, 31960, 31960, 31960, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2471, -1000, -1000, -1000,
	338, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15490,
	15490, 15490, 15490, 15490, 1774, 997, 949, 15490, 15490, -1000,
	19983, 21979, 21979, 19484, -1000, 1844, 1842, 1787, 1648, 1650,
	1650, 1653, -1000, 1782, 1781, -1000, 996, 1780, 988, 703,
	-1000, 31960, 13993, 1428, -1000, 284, 31960, 1428, 31960, -1000,
	1785, -1000, -1000, 13993, 1452, -1000, 13993, -1000, -1000, -1000,
	-1000, -1000, 1785, 1180, -1000, -1000, 578, 56, 246, -1000,
	-1000, -1000, -1000, 31960, 1270, 558, -1000, 558, 1075, 986,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1448, -1000,
	-1000, -1000, 1217, 267, 309, -1000, 269, -1000, -159, -163,
	1744, -1000, -1000, 8473, -1000, -1000, 1446, 1513, -1000, -1000,
	-1000, 1182, 1182, 1182, 1182, 212, 977, -1000, 1182, 1182,
	1268, -1000, -1000, -1000, 1268, 1268, 507, 1842, -1000, 13993,
	13993, 1645, 845, -1000, -1000, -1000, -1000, 975, 973, -1000,
	967, -1000, 1886, -1000, 949, -1000, 1428, -1000, 449, 1176,
	-1000, 1774, 949, 31960, 949, 1774, -1000, 1445, 1502, -325,
	13993, 1429, 1214, -1000, -1000, -1000, -1000, -1000, 1740, 1428,
	-1000, -1000, -1000, -1000, 307, 1199, -1000, 655, 31960, 31960,
	-1000, -1000, -1000, -1000, 977, 221, -119, -1000, -1000, -1000,
	21480, -1000, -1000, -1000, -1000, -1000, 949, 1193, -1000, 841,
	-1000, -1000, -1000, -1000, -1000, 31960, 1176, 31960, -1000, 1212,
	-1000, 13993, 1425, 646, -330, 846, 962, 31960, 1528, 972,
	307, 14492, -93, 8473, 5938, 1197, -1000, -1000, 1617, -90,
	-145, -1000, -1000, -1000, -1000, 1013, -1000, -1000, 876, 31960,
	839, 1271, 1779, -1000, -1000, 1195, 1518, -1000, 1856, -1000,
	-1000, -1000, 810, 840, -1000, -1000, -1000, -93, 1182, 977,
	-1000, -9, -1000, -1000, -1000, -1000, -1000, 1508, -1000, 1616,
	-1000, -325, 1190, -1000, -1000, 269, -328, -1000, -1000, 1876,
	499, 499, -1000, -1000, -1000, -1000, -1000, 348, -1000, -1000,
	-101, -104, -330, -325, 1091, 46, -1000, -1000, -1000, 340,
	915, -1000, 222, -1000, -138, 1271, -330, -1000, 1419, 1502,
	-1000, -1000, -1000, -1000, -151, -1000, 1271, 13993, 1235, -1000,
	-1000, 691, 31960, -336, 1088, -1000, 835, -336, -1000, -1000,
}

var yyPgo = [...]int{
	0, 9, 2190, 6, 1, 4, 2188, 55, 79, 150,
	15, 167, 82, 2185, 2179, 2178, 2176, 170, 169, 166,
	2175, 2174, 2173, 2172, 2171, 2170, 2168, 2164, 2163, 2162,
	164, 135, 149, 2161, 2160, 2158, 96, 143, 64, 66,
	159, 2139, 2138, 49, 2124, 2123, 2122, 155, 152, 627,
	2120, 151, 91, 2119, 2118, 2117, 2116, 2115, 2114, 2113,
	2111, 2109, 2103, 2102, 2101, 2100, 2099, 226, 2097, 2096,
	10, 2095, 58, 2094, 2093, 2092, 2091, 2089, 5, 2088,
	2083, 2082, 2080, 119, 2079, 2076, 2074, 160, 2073, 2072,
	72, 408, 88, 86, 2069, 2066, 93, 162, 2064, 94,
	124, 2060, 2059, 3, 85, 45, 2056, 74, 102, 2054,
	41, 2053, 2052, 87, 2049, 2048, 2047, 71, 2044, 2041,
	3642, 2028, 70, 114, 29, 31, 2023, 2022, 2021, 2020,
	62, 815, 2019, 2018, 40, 2017, 2016, 168, 2015, 118,
	24, 2014, 18, 23, 28, 2013, 112, 2011, 52, 60,
	2008, 117, 2007, 2005, 36, 25, 35, 2004, 30, 111,
	130, 22, 75, 113, 2003, 2002, 38, 42, 2001, 2000,
	1999, 1998, 1994, 1993, 47, 1992, 32, 1991, 193, 1988,
	17, 27, 57, 84, 80, 43, 16, 1987, 154, 1986,
	33, 137, 105, 131, 1984, 1982, 1981, 145, 186, 1980,
	1976, 50, 141, 121, 125, 1975, 191, 1974, 1973, 67,
	1397, 1765, 37, 138, 1972, 1971, 2425, 90, 115, 39,
	1969, 92, 1968, 1965, 1964, 158, 146, 73, 934, 77,
	1963, 1962, 1961, 1960, 1959, 1958, 1957, 100, 44, 34,
	171, 46, 1955, 1954, 1953, 104, 78, 1952, 134, 133,
	95, 136, 1950, 142, 128, 122, 1949, 83, 1948, 1945,
	1944, 1943, 65, 1942, 1940, 1939, 1937, 126, 120, 99,
	76, 1936, 63, 98, 132, 123, 11, 2, 20, 157,
	14, 1935, 8, 0, 1934, 12, 144, 194, 139, 1933,
	1932, 7, 1931, 13, 1930, 1927, 116, 1926, 1923, 1922,
	21, 26, 19, 1921, 1920, 3598, 2528, 109, 1918, 161,
}

//line sql.y:5747
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 303, 304, 304, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 283, 283, 283, 286, 286,
	28, 62, 30, 30, 29, 29, 32, 32, 31, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 15, 16, 11, 11, 17, 17,
	74, 74, 18, 19, 19, 19, 19, 307, 307, 115,
	115, 113, 113, 114, 114, 183, 183, 20, 21, 21,
	193, 193, 192, 192, 192, 194, 194, 194, 194, 228,
	228, 22, 22, 22, 22, 22, 88, 88, 285, 285,
	284, 282, 282, 281, 281, 280, 34, 35, 44, 44,
	44, 44, 45, 46, 287, 287, 258, 50, 50, 49,
	49, 49, 49, 51, 51, 48, 48, 47, 47, 260,
	260, 247, 247, 259, 259, 259, 259, 259, 259, 259,
	246, 246, 102, 102, 164, 164, 164, 164, 164, 164,
	164, 164, 299, 299, 165, 165, 165, 165, 165, 165,
	300, 300, 300, 300, 230, 230, 230, 230, 233, 233,
	231, 231, 231, 231, 231, 231, 231, 231, 231, 232,
	232, 232, 232, 232, 234, 234, 234, 234, 234, 235,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 236, 236, 236, 236, 236, 236,
	236, 236, 245, 245, 237, 237, 240, 240, 241, 241,
	241, 242, 242, 242, 243, 243, 238, 238, 238, 238,
	239, 239, 239, 248, 272, 272, 271, 271, 269, 269,
	269, 269, 257, 257, 266, 266, 266, 266, 266, 256,
	256, 252, 252, 252, 253, 253, 254, 254, 251, 251,
	255, 255, 268, 268, 267, 249, 249, 250, 250, 274,
	301, 301, 301, 301, 302, 302, 275, 292, 293, 291,
	291, 291, 291, 291, 72, 72, 72, 205, 205, 205,
	264, 264, 263, 263, 263, 265, 265, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 262, 262, 200, 200, 200, 290, 290,
	290, 290, 290, 290, 289, 289, 289, 261, 261, 261,
	288, 288, 52, 52, 149, 149, 41, 41, 41, 41,
	41, 41, 40, 40, 40, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 42, 42, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 76, 76, 76,
	76, 78, 78, 78, 277, 277, 1, 1, 5, 5,
	2, 2, 77, 77, 3, 3, 4, 4, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	244, 244, 244, 276, 276, 278, 278, 24, 33, 33,
	25, 25, 25, 25, 26, 26, 53, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 294, 294, 199, 199, 207,
	207, 198, 198, 221, 221, 221, 201, 201, 201, 202,
	202, 298, 298, 298, 55, 55, 57, 57, 58, 59,
	59, 223, 223, 224, 224, 60, 61, 73, 73, 73,
	73, 73, 73, 75, 75, 75, 14, 14, 14, 14,
	69, 69, 69, 13, 13, 56, 56, 63, 295, 295,
	296, 297, 297, 297, 297, 64, 66, 27, 27, 27,
	27, 27, 27, 95, 95, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 89, 89, 89,
	84, 84, 308, 67, 68, 68, 87, 87, 87, 81,
	81, 81, 86, 86, 86, 92, 92, 94, 94, 94,
	94, 94, 96, 96, 96, 96, 96, 96, 96, 91,
	91, 93, 93, 93, 93, 214, 214, 214, 213, 213,
	104, 104, 106, 105, 105, 107, 107, 108, 108, 108,
	147, 123, 123, 181, 181, 180, 180, 182, 182, 182,
	182, 184, 184, 109, 109, 109, 109, 110, 110, 111,
	111, 112, 112, 222, 222, 219, 219, 219, 218, 218,
	116, 116, 116, 118, 117, 117, 117, 117, 119, 119,
	121, 121, 120, 120, 122, 124, 124, 124, 124, 124,
	125, 125, 103, 103, 103, 103, 103, 103, 103, 103,
	196, 196, 127, 127, 126, 126, 126, 126, 126, 126,
	126, 126, 126, 126, 138, 138, 138, 138, 138, 138,
	128, 128, 128, 128, 128, 128, 128, 90, 90, 139,
	139, 139, 146, 140, 140, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	131, 131, 131, 131, 131, 131, 131, 131, 131, 131,
	135, 135, 135, 135, 133, 133, 133, 133, 133, 133,
	133, 133, 133, 133, 133, 133, 133, 133, 134, 134,
	134, 134, 134, 134, 134, 134, 134, 134, 134, 134,
	134, 134, 134, 134, 134, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 309, 309, 137, 136,
	136, 136, 136, 136, 136, 136, 85, 85, 85, 85,
	85, 227, 227, 227, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 152, 152, 82,
	82, 150, 150, 151, 153, 153, 148, 148, 148, 130,
	130, 130, 130, 130, 130, 130, 130, 132, 132, 132,
	154, 154, 155, 155, 156, 156, 158, 157, 157, 159,
	160, 160, 160, 161, 161, 162, 162, 162, 43, 43,
	43, 43, 43, 38, 38, 38, 38, 39, 39, 39,
	97, 97, 97, 97, 99, 99, 98, 98, 70, 70,
	71, 71, 71, 100, 100, 101, 101, 101, 101, 178,
	178, 163, 163, 163, 170, 170, 170, 166, 166, 168,
	168, 168, 169, 169, 169, 167, 175, 175, 177, 177,
	176, 176, 172, 172, 173, 173, 174, 174, 174, 171,
	171, 129, 129, 129, 129, 129, 179, 179, 179, 179,
	185, 185, 142, 142, 144, 144, 143, 145, 186, 186,
	190, 187, 187, 191, 191, 191, 191, 191, 188, 188,
	189, 189, 215, 215, 215, 195, 195, 206, 206, 203,
	203, 204, 204, 197, 197, 208, 208, 208, 65, 141,
	141, 273, 273, 270, 211, 211, 212, 212, 216, 216,
	220, 220, 217, 217, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 210, 305, 306, 225, 226, 226, 226,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 10, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 3, 4, 2,
	3, 2, 1, 1, 0, 2, 2, 3, 3, 2,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 1, 0, 1, 0, 2, 2, 2,
	0, 2, 2, 5, 0, 1, 1, 2, 1, 3,
	2, 3, 0, 1, 4, 3, 3, 4, 2, 0,
	2, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	0, 1, 1, 3, 3, 3, 1, 3, 1, 7,
	5, 6, 6, 7, 0, 1, 5, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 0, 1, 2,
	0, 1, 1, 3, 2, 1, 2, 3, 3, 4,
	4, 3, 3, 3, 3, 4, 4, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 1, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 5, 0, 10, 11,
	7, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	1, 1, 3, 4, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 8, 8, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 4, 2, 4,
	5, 4, 4, 4, 4, 4, 3, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 5, 6, 4, 4, 6, 6, 6, 8,
	8, 8, 8, 9, 8, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 2, 3, 3, 1, 2, 2,
	1, 2, 1, 2, 2, 1, 2, 0, 1, 0,
	2, 1, 2, 4, 0, 2, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 2,
	0, 3, 0, 2, 0, 1, 3, 1, 3, 2,
	0, 1, 1, 0, 1, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 2,
	4, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 2, 1, 2,
	3, 3, 0, 2, 1, 2, 3, 4, 3, 0,
	1, 2, 1, 5, 4, 4, 1, 3, 3, 5,
	0, 5, 1, 3, 1, 2, 3, 1, 1, 3,
	3, 1, 3, 3, 3, 3, 3, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	2, 0, 3, 0, 1, 0, 1, 1, 5, 0,
	1, 0, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -303, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -53, -54, -55, -57,
	-58, -59, -60, -61, -13, -56, -27, -28, -62, -63,
	-64, -65, -66, -8, -7, -12, 7, 8, -74, -29,
	30, -34, -44, 164, -45, -35, 165, -46, 167, 166,
	202, 168, 195, 72, 241, 242, 244, 245, 246, 247,
	-75, 200, 201, 170, 34, 43, 31, 32, 35, 173,
	-9, -30, 6, -305, 9, 365, 197, 196, 26, -11,
	378, 83, -304, 512, -178, -163, 20, 31, 27, -162,
	-158, -87, -163, 18, 16, 5, -67, -308, -67, -67,
	10, 11, -67, -258, -260, 83, 137, 83, -67, -50,
	-49, -48, -47, -51, 29, -41, -42, -279, -40, -37,
	169, 166, 210, 106, 107, 202, 203, 204, 168, 186,
	201, 205, 200, 219, -36, 78, 31, 378, 381, -265,
	165, 171, 172, 366, 109, 108, 73, 167, -262, 291,
	482, -51, 484, 98, 100, 483, 42, 176, 485, 486,
	487, 488, 185, 489, 490, 491, 492, 498, 499, 500,
	501, 110, 5, -67, -220, -216, -283, -210, 86, 87,
	88, 375, 188, 409, 410, 235, 78, 39, 291, 482,
	241, 255, 249, 276, 268, 376, 411, 238, 189, 223,
	479, 266, 115, 484, 412, 203, 296, 297, 298, 98,
	244, 333, 497, 240, 413, 495, 100, 483, 77, 49,
	42, 198, 264, 260, 485, 224, 414, 386, 217, 109,
	106, 504, 34, 258, 48, 28, 494, 108, 47, 486,
	128, 415, 487, 300, 281, 473, 46, 301, 204, 416,
	81, 380, 481, 302, 259, 303, 234, 493, 170, 417,
	465, 304, 305, 474, 418, 282, 286, 419, 325, 306,
	511, 50, 420, 421, 475, 107, 422, 76, 488, 253,
	254, 423, 232, 187, 327, 280, 185, 33, 307, 377,
	236, 56, 211, 328, 44, 284, 508, 43, 469, 424,
	472, 279, 275, 51, 425, 426, 427, 428, 489, 278,
	252, 274, 503, 229, 490, 60, 172, 288, 287, 289,
	218, 324, 271, 429, 430, 431, 192, 79, 432, 261,
	19, 433, 434, 308, 225, 435, 54, 436, 437, 331,
	201, 438, 52, 491, 37, 206, 505, 492, 439, 440,
	441, 442, 443, 310, 444, 309, 283, 285, 213, 311,
	379, 445, 257, 205, 496, 446, 193, 480, 207, 210,
	200, 332, 194, 447, 448, 449, 450, 451, 239, 452,
	453, 245, 498, 41, 454, 455, 456, 457, 233, 228,
	326, 335, 59, 80, 293, 458, 478, 251, 226, 459,
	242, 53, 499, 500, 501, 220, 502, 7, 509, 510,
	313, 110, 230, 231, 45, 272, 212, 460, 461, 262,
	263, 277, 250, 273, 243, 466, 214, 314, 202, 462,
	334, 227, 294, 383, 219, 315, 477, 382, 270, 267,
	221, 463, 316, 177, 215, 216, 464, 467, 317, 318,
	237, 319, 320, 321, 322, 323, 222, 381, 248, 265,
	295, 346, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 175,
	-67, 175, -120, -216, 175, -188, 297, -207, 299, 312,
	307, 317, 305, -199, 308, 310, 213, -298, 325, 175,
	314, 164, 155, 300, 309, 318, 319, 237, 320, 323,
	222, -294, -283, 487, 502, 115, 269, 304, 302, 326,
	469, 322, 321, -216, 243, -223, 248, -211, -283, -210,
	246, -120, -73, 465, 168, -225, -225, -89, 469, 471,
	-140, -103, -126, 121, -131, 29, 24, -130, -127, -148,
	-145, -146, 155, 156, 158, 157, 159, 91, 144, 145,
	152, 122, 160, -135, -133, -134, -136, 90, 89, 99,
	92, 93, 94, 95, 102, 103, 104, -211, -216, -143,
	-7, 66, 67, 366, 367, 368, 369, 374, 370, 124,
	55, 342, 336, 345, 344, 343, 340, 341, 338, 339,
	372, 373, 101, 180, 337, 174, 150, 365, -283, -210,
	-305, 42, 313, 313, -120, -67, -156, -87, -158, -9,
	-7, -305, 6, -67, -7, -8, -12, -30, -32, 405,
	-31, -216, -163, -178, 10, 139, 40, 48, -161, -162,
	-11, -7, -103, 17, 21, 22, -93, 146, -103, -216,
	-68, -93, -197, 179, -67, -67, -187, -228, 243, -191,
	326, 325, -212, -189, -211, -209, -188, 324, 169, 384,
	120, 23, 25, 123, 155, 17, 124, 35, 171, 269,
	186, 154, 182, 366, 164, 70, 385, 338, 339, 336,
	342, 368, 369, 337, 299, 29, 11, 387, 26, 196,
	22, 36, 148, 166, 127, 199, 24, 197, 101, 104,
	390, 20, 73, 191, 12, 184, 38, 14, 391, 392,
	15, 180, 179, 139, 176, 68, 9, 160, 27, 136,
	64, 393, 117, 394, 395, 396, 397, 66, 137, 18,
	506, 340, 341, 31, 470, 398, 374, 208, 150, 71,
	57, 471, 121, 399, 400, 102, 401, 105, 74, 476,
	118, 16, 69, 40, 402, 209, 403, 181, 507, 404,
	329, 405, 138, 167, 365, 67, 406, 174, 312, 6,
	371, 30, 195, 183, 112, 65, 407, 175, 126, 372,
	373, 178, 103, 5, 116, 32, 10, 72, 75, 343,
	344, 345, 55, 111, 378, 125, 13, 408, 330, 119,
	115, -259, 137, -246, -250, -211, 190, -275, 186, -120,
	-268, -267, -211, -88, -206, 176, 184, 183, 116, -287,
	118, 230, 337, 174, -47, -48, -188, 154, 207, 84,
	84, -250, -249, -248, -288, 209, 190, -274, -266, 182,
	191, -256, 183, 184, -251, 176, 117, -288, -251, 181,
	191, 209, 209, 110, 209, 110, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 206, -257, 129, -257, 382,
	382, -262, -288, -288, -288, 178, 33, 33, -208, -251,
	178, 23, -257, -257, -188, 154, -257, -257, -257, -257,
	217, 217, -257, -257, -257, -257, -257, -257, -257, -257,
	-257, -257, -257, -257, -257, -257, -257, 175, -287, -97,
	323, 237, 78, -49, 219, -33, -120, -206, 176, 177,
	-287, -120, 161, -120, -201, 137, 13, -201, -198, 313,
	311, 298, 303, -201, -201, -201, -201, 220, 296, -252,
	176, 33, 187, 313, 220, 296, 220, 221, 220, 221,
	306, 316, 220, -221, 12, 139, 337, 301, 305, 213,
	175, 214, 177, 315, -283, 472, 221, -221, 90, -202,
	137, 313, 216, -201, -226, -305, -212, 269, -226, -226,
	30, 178, -211, -69, -211, 90, -14, -10, -18, -17,
	-19, 129, -95, 313, -83, 155, 487, 473, 474, 475,
	472, 310, 480, 478, 476, 220, 477, 84, 120, 118,
	119, 136, -103, -128, 139, 121, 137, 138, 123, 141,
	140, 151, 144, 145, 146, 147, 148, 149, 150, 142,
	143, 154, 129, 130, 131, 132, 133, 134, 135, -196,
	-305, -146, 162, 163, -131, -131, -131, -131, -131, -131,
	-131, -131, -131, -131, -305, 161, -305, -305, -305, -305,
	-305, -305, -305, -305, -152, -103, -305, -309, -305, -309,
	-137, -305, -309, -137, -309, -137, -309, -309, -137, -309,
	-137, -309, -309, -137, -305, -305, -305, -305, -305, -305,
	-305, -305, -7, -8, -140, -225, -295, -296, -123, -120,
	-305, 237, -161, -11, -7, -156, -162, -158, -7, -67,
	-81, -94, 61, 62, -96, 22, 36, 65, 63, 21,
	-306, 85, -306, -178, -306, 84, -32, -181, 83, 59,
	41, 90, 90, 84, 19, -157, -159, -103, 12, -214,
	-213, 23, -211, 90, 161, 97, 12, -121, 27, -120,
	-197, -197, 84, 243, -191, -228, -193, -192, 327, 329,
	129, -215, -211, 90, 29, 85, 84, -120, -230, -233,
	-235, -234, -236, -231, -232, 266, 267, 155, 270, 272,
	273, 274, 275, 276, 277, 278, 279, 280, 281, 30,
	198, 262, 263, 264, 265, 282, 283, 284, 285, 286,
	287, 288, 289, 249, 268, 376, 250, 251, 252, 253,
	254, 255, 257, 258, 259, 260, 261, -286, -283, 83,
	85, 84, -237, 83, -97, 175, -283, 176, 176, 176,
	-67, 365, -257, -257, 206, -40, -37, -279, 16, -36,
	-37, 169, 106, 107, 166, 83, -246, 83, -255, -286,
	-283, 83, 117, 181, 116, -254, -251, -254, -255, -283,
	-148, -211, -216, -283, 117, 117, -184, -211, -184, -184,
	21, -184, 21, -184, 21, 92, -211, -184, 21, -184,
	21, -184, 21, -184, 21, -184, 21, 29, 76, 77,
	29, 79, 80, 81, -148, -148, -246, -188, -120, -283,
	92, 92, -257, -257, 92, 90, 90, 90, -257, -257,
	92, 90, -218, -216, 90, -289, 192, 234, 236, 92,
	92, 92, 92, 29, 90, -290, 29, 494, 493, 495,
	496, 497, 92, 29, 92, 29, 92, -211, 83, -120,
	-100, 224, 164, 166, 169, 74, 90, 238, 129, 42,
	84, 178, 175, -283, -203, 180, -203, -217, -216, -209,
	90, -103, -253, 12, 139, -221, -221, -201, -120, -253,
	-221, -201, -120, -201, -201, -201, -201, -221, -221, -221,
	-201, -216, -216, -120, -120, -120, -120, -120, -120, -120,
	-226, -226, -226, -202, -201, 472, 90, 74, -224, 246,
	280, 466, 467, 468, 84, 378, -113, -120, 472, 472,
	472, 472, 472, 472, -103, -103, -103, -103, -138, 102,
	121, 103, 104, -131, -139, -143, -146, 96, 139, 137,
	138, 123, -131, -131, -131, -131, -131, -131, -131, -131,
	-131, -131, -131, -131, -131, -131, -131, -227, -283, 90,
	155, -283, -130, -130, -211, -92, 22, 36, -91, -93,
	-212, -217, -209, -91, -91, -103, -103, -148, 90, -91,
	-148, 90, -91, -91, -86, 22, 36, -150, -151, 125,
	-148, -306, -131, -211, -211, -80, -79, 347, 348, 349,
	350, 352, 353, 354, 357, 358, 362, 363, 346, 364,
	351, 356, 359, 360, 361, 355, 265, -91, -92, -92,
	-91, -91, -178, -306, 84, -297, 329, 330, 470, -219,
	209, -218, 23, -141, -140, 90, -161, -161, 61, 62,
	57, -91, -96, -306, -31, 23, -180, -211, 60, 90,
	-238, -188, -103, -103, 84, -160, 25, 26, -120, -213,
	146, -217, -120, -183, 209, -120, -105, -107, -108, -109,
	-123, -147, -305, 12, -113, -114, -122, -216, -191, -193,
	84, 328, 330, 331, 74, 105, -103, -239, 154, -264,
	-263, -262, -246, -248, -249, -250, 85, -164, -102, 38,
	-242, 294, 293, -237, -237, -237, -237, -237, -238, -238,
	-238, -238, 83, 83, -237, -237, -237, -237, -240, 83,
	-240, -240, -241, 83, -241, -275, -103, -272, -271, -269,
	-270, 185, 98, 378, 75, -267, -160, 92, -100, -204,
	180, -273, -270, -283, -283, -283, -204, -283, 90, -283,
	90, 84, 17, -247, -246, -52, 234, -278, 209, -274,
	-268, -255, 117, -254, -255, -255, 161, -283, 84, 27,
	110, 110, 110, 110, 378, 166, 30, -246, -52, -227,
	178, -227, -227, 90, 90, -200, 502, -113, -99, 226,
	129, 215, 215, 175, 175, 228, -120, 239, 240, 238,
	21, 227, 229, 231, 217, -120, -120, -203, 74, -115,
	-120, 24, -216, -120, -201, -201, -120, -201, -201, -120,
	-211, -83, 329, 84, 378, 20, -84, 20, 102, 103,
	104, -139, -131, -131, -131, -90, 199, 120, -306, -306,
	-91, -91, 84, -305, 161, -306, -306, 84, 75, 23,
	12, 12, -306, 12, 12, -306, -306, -91, -153, -151,
	127, -103, -306, -306, 84, 84, 12, -306, -306, -306,
	-306, -306, -296, 469, 330, -124, 72, 179, 73, -305,
	-218, -306, -132, -211, 92, 95, -163, -104, -106, 12,
	-96, -146, 85, 84, -238, -167, -172, -198, -283, 90,
	155, -159, 161, -125, 13, -129, 30, 55, -10, -305,
	-305, 30, 84, -116, -118, -117, -119, 64, 68, 70,
	65, 66, 67, 71, -222, 23, -105, -8, -7, -305,
	-120, -113, -307, 12, 75, -307, 84, 161, -192, -194,
	332, 329, 335, -283, 90, -76, 209, 84, -262, -250,
	-302, 102, 121, 29, 74, 291, 98, -300, -301, 181,
	116, 117, 193, 23, 39, -243, 295, -238, -238, -239,
	-239, -239, -239, -245, 90, -245, 92, 92, 85, -43,
	-38, -39, 31, 78, -269, -257, 90, 37, -211, 85,
	-99, -120, 121, 74, -273, -273, -273, -216, 16, -180,
	84, 85, -149, 235, 85, -211, 85, 83, -255, -255,
	-212, -211, -305, 175, 29, 29, -52, -149, -239, -283,
	504, 503, 85, 177, 233, -101, 342, 90, 86, -120,
	-120, -120, -120, -120, 169, 166, 218, 178, -113, -120,
	84, -72, 194, 189, -221, -221, 31, -120, 329, 481,
	479, -90, 120, -131, -131, -306, -306, -93, -92, -212,
	-229, 155, 266, 198, 264, 260, 280, 271, 293, 262,
	294, -227, -229, -131, -131, -131, -131, 375, -156, 128,
	-103, 126, -131, -131, -103, 176, 176, 176, -184, -195,
	20, 12, 55, 55, -104, -125, -105, -96, -211, -170,
	465, -175, 44, -173, -174, 45, -171, 46, 54, 146,
	-161, -103, -185, 74, -186, -190, -148, -142, -144, -143,
	-305, -179, -306, -211, -184, -186, -107, -108, -108, -107,
	-108, 64, 64, 64, 69, 64, 69, 64, -117, -216,
	-306, -306, -8, -183, 75, -105, -105, -122, -216, 146,
	329, 333, 334, 17, -262, 102, -131, 10, 90, 117,
	117, -120, 83, -239, -239, 85, 84, 85, 84, 85,
	84, -205, 415, 121, -39, -38, -257, -257, 92, -283,
	177, 24, -120, 74, 74, 74, 17, -246, -148, 55,
	-272, -180, -276, -278, -120, -130, -149, -120, -98, 224,
	232, 83, 87, -285, 75, 215, 291, 215, -120, -72,
	-43, -120, -201, -201, 31, -283, -131, -306, -306, -237,
	-237, -237, -241, -237, 254, -237, 254, -306, -306, 20,
	20, 20, 20, -305, -82, 371, -103, 84, 84, -306,
	-305, -305, -305, -306, -120, -125, -154, 14, -167, 49,
	272, -177, -176, 53, 45, -174, 17, 47, 17, 28,
	-185, 84, 129, 84, -306, -306, 84, 55, 161, -306,
	-125, -111, -110, 74, 75, -112, 74, -110, 64, 64,
	-181, -306, -125, -105, -125, -125, 161, -1, -2, 506,
	507, 508, -134, 83, -131, -238, 90, -238, 92, 92,
	415, 29, 79, 80, 81, 29, 76, 77, -120, -120,
	-120, -120, -180, 211, 85, -306, 84, -244, 378, 381,
	-181, 85, -282, 378, -284, -283, -211, -211, -211, -238,
	-283, -131, -131, -131, -131, -131, -161, 90, -131, -131,
	-182, -306, -211, 181, -182, -182, -219, -154, -155, 15,
	17, -168, 51, -166, 50, -166, -176, 17, 17, 90,
	17, 90, 117, -190, -103, -144, 55, -10, -211, -142,
	-211, -156, -103, 83, -103, -156, -125, 511, 117, -77,
	83, 298, -180, 85, -239, -239, 85, 85, -181, 212,
	-301, -278, 382, 382, 23, -281, -280, -212, 83, 75,
	-306, -306, -306, -306, -85, 139, 378, -306, -306, -306,
	84, -306, -306, -306, -124, -155, -103, -140, -169, 52,
	74, 105, 90, 90, 90, 10, -142, 161, -161, -180,
	-161, 83, -5, 78, -3, 505, -103, 83, 85, -165,
	23, -305, -10, 84, 129, -180, -120, -306, 376, 71,
	379, -211, 181, 74, 105, -186, -211, 85, -103, 83,
	129, -78, 509, 92, 85, -180, -292, -293, 74, -302,
	-299, 102, 121, 98, -300, 111, 112, -10, -131, 208,
	-70, 378, -280, -261, -212, 90, 92, 85, 60, 377,
	380, 85, -180, 92, -277, 83, 17, 85, -293, 74,
	11, 10, 102, 90, -70, -306, -306, -71, 223, 469,
	-285, 60, -3, 85, -276, -1, -291, 194, 189, 192,
	30, -291, 186, -282, 378, -78, -3, 85, 511, 117,
	188, 29, 102, 225, 379, -277, -78, 83, -5, 380,
	-277, -103, 83, 85, -180, -4, 510, 85, 92, -4,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 622, 622, 622, 0,
	622, 0, 0, 622, -2, -2, 622, 1050, 0, 622,
	0, 0, -2, 555, 556, 0, 558, -2, 0, 0,
	567, 1496, 1496, 617, 0, 0, 0, 0, 0, 622,
	914, 45, 622, 0, 80, 81, 573, 574, 575, 60,
	0, 1494, 1, 3, 66, 70, 0, 0, 0, 53,
	923, 0, 73, 0, 0, 626, 0, 624, 0, 1033,
	622, 622, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 408, 369, 411, 367, 397,
	-2, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 372, 262, 262, 0, 0, -2,
	360, 360, 360, 0, 0, 0, 394, 1035, 315, 262,
	262, 0, 262, 262, 262, 262, 0, 0, 262, 262,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 262,
	262, 262, 262, 940, 143, 1051, 1048, 1049, 35, 36,
	37, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204,
	1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214,
	1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224,
	1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234,
	1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254,
	1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264,
	1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274,
	1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294,
	1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324,
	1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334,
	1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354,
	1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364,
	1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374,
	1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384,
	1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394,
	1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404,
	1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414,
	1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424,
	1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434,
	1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454,
	1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464,
	1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474,
	1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484,
	1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 0,
	1027, 0, 485, 712, 0, 546, 546, 0, 546, 546,
	546, 546, 0, 0, 0, 497, 0, 0, 0, 0,
	543, 0, 0, 516, 518, 0, 543, 0, 549, 0,
	530, 546, 1497, 1497, 1497, 1018, 0, 540, 538, 552,
	553, 535, 536, 554, 557, 0, 562, 565, 1044, 1045,
	0, 580, 44, 1275, 572, 585, 586, 0, 618, 619,
	40, 763, 722, 0, 728, 730, 0, 765, 766, 767,
	768, 769, 0, 0, 0, 0, 0, 790, 0, 0,
	0, 0, 0, 796, 797, 798, 799, 899, 900, 901,
	902, 903, 904, 905, 906, 732, 733, 896, 0, 1007,
	762, 0, 0, 0, 0, 0, 0, 0, 0, 887,
	0, 856, 856, 856, 856, 856, 856, 856, 856, 856,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 1496, 0, 595, 0, 0, 923, 0, 915, 914,
	58, 0, 622, -2, 0, 0, 0, 0, 42, 0,
	47, 673, 72, 71, 959, 0, 0, 0, 54, 924,
	62, 64, 925, 0, 627, 628, 0, 651, 655, 0,
	623, 0, 0, 1034, 1033, 1033, 97, 0, 1439, 1011,
	-2, -2, 0, 0, 1046, 1047, 1020, -2, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	-2, 0, 0, 153, 154, 0, 38, 288, 0, 149,
	0, 282, 234, 940, 0, 0, 0, 0, 0, 622,
	0, 1028, 134, 135, 141, 142, 262, 262, 0, 143,
	143, 376, 377, 378, 0, 0, -2, 286, 0, 361,
	0, 0, 276, 276, 280, 278, 279, 0, 0, 0,
	0, 0, 0, 388, 0, 389, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 469, 0, 263, 0, 406,
	407, 316, 0, 0, 0, 0, 386, 387, 0, 0,
	1036, 1037, 0, 0, 262, 262, 0, 0, 0, 0,
	262, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 133, 953,
	0, 0, 0, -2, 0, 477, 0, 0, 0, 1029,
	1029, 484, 0, 486, 487, 0, 0, 488, 0, 543,
	543, 541, 542, 490, 491, 492, 493, 546, 0, 0,
	271, 272, 273, 543, 546, 0, 546, 546, 546, 546,
	543, 543, 543, 546, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1497, 1497, 1497, 549, 546, 0, 526,
	0, 527, 528, 531, 532, 1498, 1499, 1065, 533, 534,
	1019, 563, 566, 583, 581, 582, 584, 576, 577, 578,
	579, 0, 597, 598, 603, 0, 0, 0, 0, 609,
	610, 611, 0, 0, 614, 615, 616, 0, 0, 0,
	0, 0, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 750, 751, 752, 753, 754, 755, 756, 729,
	0, 743, 0, 0, 785, 786, 787, 788, 789, 791,
	792, 793, 794, 0, 635, 0, 0, 0, 0, 0,
	0, 0, 0, 632, 0, 888, 0, 817, 0, 818,
	826, 0, 819, 827, 820, 828, 821, 822, 829, 823,
	830, 824, 825, 831, 0, 0, 0, 0, 635, 635,
	0, 0, 762, 0, 0, 41, 587, 588, 0, 695,
	1039, 0, 52, 61, 63, 923, 56, 923, 0, 637,
	0, 0, -2, -2, 638, 644, 645, 646, 647, 648,
	49, 1495, 50, 0, 69, 0, 43, 0, 0, 0,
	0, 246, 962, 0, 0, 916, 917, 920, 0, 652,
	656, 0, 658, 659, 0, 625, 0, 95, 0, 711,
	0, 0, 0, 1439, 1017, 0, 99, 100, 0, 0,
	0, 250, 1022, 1023, 1024, -2, 269, 0, -2, 241,
	185, 186, 187, 234, 189, 234, 234, 234, 234, 246,
	246, 246, 246, 217, 218, 219, 220, 221, 0, 0,
	204, 234, 234, 234, 234, 224, 225, 226, 227, 228,
	229, 230, 231, 190, 191, 192, 193, 194, 195, 196,
	197, 198, 236, 236, 236, 238, 238, 0, 39, 0,
	254, 0, 920, 0, 953, 1031, 1041, 0, 0, 0,
	1031, 117, 0, 0, 409, 370, 398, 410, 0, 373,
	374, -2, 0, 0, 360, 0, 362, 0, 270, 0,
	-2, 0, 280, 0, 276, 280, 277, 280, 268, 281,
	390, 896, 0, 391, 392, 0, 449, 681, 0, 0,
	0, 0, 0, 455, 456, 457, 0, 459, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 399, 400, 401,
	402, 403, 404, 405, 0, 0, 362, 0, 395, 0,
	317, 318, 0, 0, 321, 322, 323, 324, 0, 0,
	327, 328, 329, 698, 699, 330, 354, 355, 356, 331,
	332, 333, 334, 335, 336, 337, 348, 349, 350, 351,
	352, 353, 338, 339, 340, 341, 342, 345, 0, 127,
	944, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1029, 0, 0, 0, 0, 713, 1052, 1053,
	547, 548, 0, 274, 275, 546, 546, 494, 517, 0,
	546, 498, 519, 499, 501, 500, 502, 521, 522, 546,
	505, 544, 545, 506, 507, 508, 509, 510, 511, 512,
	513, 514, 515, 523, 524, 525, 550, 0, 0, 564,
	568, 569, 570, 571, 0, 0, 600, 91, 605, 606,
	607, 608, 620, 613, 764, 723, 724, 725, 727, 744,
	0, 746, 748, 734, 735, 759, 760, 761, 0, 0,
	0, 0, 757, 739, 0, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 784, 871, 872,
	873, 0, 782, 783, 795, 0, 0, 0, 636, 649,
	897, 0, -2, 0, 0, 0, 0, 767, 899, 0,
	767, 899, 0, 0, 0, 633, 634, 894, 891, 0,
	0, 857, 0, 0, 0, 0, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 0, 0, 0,
	0, 0, 0, 1006, 0, 590, 591, 593, 0, 715,
	0, 696, 0, 0, 1040, 596, 55, 57, 642, 643,
	0, 660, 639, 51, 46, 0, 0, 675, 960, 246,
	982, 0, 926, 927, 0, 919, 921, 922, 74, 657,
	653, 0, 720, 0, 0, 710, 0, 663, 665, 666,
	667, 693, 0, 0, 0, 0, 93, 712, 1012, 98,
	0, 0, 103, 104, 1013, 1014, 1015, 1016, 0, 427,
	-2, 312, 155, 157, 158, 159, 150, 294, 0, 0,
	244, 242, 243, 188, 246, 246, 211, 212, 250, 250,
	250, 250, 0, 0, 205, 206, 207, 208, 199, 0,
	200, 201, 202, 0, 203, 287, 0, 928, 255, 256,
	258, 262, 0, 0, 0, 283, 284, 0, 944, 0,
	0, 0, 1042, 1041, 1041, 1041, 0, 145, 146, 147,
	148, 143, 0, 0, 151, 364, 363, 0, 0, 285,
	0, 0, 280, 280, 265, 266, 0, 393, 0, 0,
	451, 452, 453, 454, 0, 0, 0, 362, 364, 250,
	0, 319, 320, 325, 326, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 423, 424, 425,
	426, 941, 942, 943, 0, 0, 478, 0, 0, 304,
	89, 1030, 483, 543, 504, 520, 543, 496, 503, 529,
	560, 604, 0, 0, 0, 0, 612, 0, 745, 747,
	749, 736, 757, 740, 0, 737, 0, 0, 731, 800,
	0, 0, 0, 635, 0, 804, 805, 0, 0, 0,
	0, 0, 864, 0, 0, 865, 0, 914, 0, 892,
	0, 0, 816, 858, 0, 0, 0, 859, 860, 861,
	862, 863, 589, 592, 594, 671, 0, 0, 0, 0,
	697, 1038, 0, 907, 0, 0, 660, 720, 661, 0,
	640, 48, 674, 0, 964, 963, 976, 989, 247, 248,
	249, 918, 0, 923, 0, 1000, 0, 0, 992, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 0,
	703, 0, 0, 0, 0, 694, 0, 0, 0, 0,
	-2, 0, 0, 87, 88, 0, 0, 0, 101, 102,
	0, 0, 108, 251, 252, 136, 0, 143, 314, 156,
	160, 165, 0, 0, 0, 169, 0, 171, 295, 0,
	181, 183, 0, 0, 163, 184, 245, 250, 250, 213,
	214, 215, 216, 0, 232, 0, 0, 0, 307, 113,
	932, 931, 262, 262, 257, 0, 260, 0, 1043, 235,
	0, 126, 0, 0, 0, 0, 0, 132, 0, 368,
	0, 379, 380, 0, 448, 0, 254, 0, 264, 267,
	897, 682, 0, 0, 381, 0, 364, 384, 385, 396,
	346, 347, 344, 0, 0, 954, 955, 0, 958, 118,
	416, 418, 417, 421, 0, 0, 414, 0, 304, 928,
	0, 482, 305, 306, 546, 546, 599, 92, 0, 602,
	0, 738, 0, 758, 741, 801, 802, 650, 0, 898,
	0, 234, 234, 877, 234, 238, 880, 234, 882, 234,
	885, 0, 0, 0, 0, 0, 0, 0, 889, 815,
	895, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1025, 1026, 908, 909, 720, 910, 662, 641, 676, 982,
	0, 975, 0, -2, 984, 0, 0, 0, 990, 654,
	75, 721, 78, 0, 1000, 1008, 0, 991, 1002, 1004,
	0, 0, 0, 996, 0, 720, 664, 689, 691, 0,
	686, 701, 702, 704, 0, 706, 0, 708, 709, 673,
	669, 670, 0, 720, 0, 720, 720, 94, 0, 714,
	105, 106, 107, 436, 313, 166, 167, 0, 170, 180,
	182, 0, 0, 209, 210, 246, 0, 246, 0, 239,
	0, 296, 308, 0, 929, 930, 0, 0, 259, 261,
	0, 1032, 128, 0, 0, 0, 0, 152, 365, 0,
	253, 0, 0, 473, 470, 382, 383, 673, 945, 946,
	947, 0, 957, 121, 0, 0, 0, 0, 479, 480,
	481, 90, 489, 495, 601, 621, 742, 803, 806, 874,
	246, 878, 879, 881, 883, 884, 886, 808, 807, 0,
	0, 0, 0, 0, 923, 0, 893, 0, 0, 834,
	0, 0, 0, 695, 59, 910, 912, 0, 969, 967,
	967, 977, 978, 0, 0, 985, 0, 0, 0, 0,
	79, 0, 0, 0, 1005, 0, 0, 0, 0, 96,
	914, 683, 690, 0, 0, 684, 0, 685, 705, 707,
	668, -2, 914, 720, 85, 86, 0, 0, 0, 437,
	440, 441, 168, 0, 0, 250, 233, 250, 0, 0,
	309, 933, 934, 935, 936, 937, 938, 939, 673, 129,
	130, 131, 371, 0, 0, 450, 0, 458, 0, 0,
	0, 956, 415, 0, 119, 120, 0, 0, 420, 875,
	876, 0, 0, 0, 0, 866, 0, 890, 0, 0,
	0, 717, 677, 678, 0, 0, 715, 912, 77, 0,
	0, 972, 0, 965, 968, 966, 979, 0, 0, 986,
	0, 988, 0, 1009, 1010, 1003, 0, 995, 998, 994,
	997, 923, 687, 0, 692, 923, 84, 0, 438, 444,
	0, 0, 0, 174, 222, 223, 237, 240, 0, 0,
	289, 474, 471, 472, 0, 122, 123, 0, 0, 0,
	809, 811, 810, 812, 0, 0, 0, 814, 832, 833,
	0, 716, 718, 719, 672, 76, 913, 911, 961, 0,
	970, 971, 980, 981, 987, 0, 993, 0, 82, 0,
	83, 0, 0, 0, 431, 0, 0, 0, 290, 294,
	0, 0, 948, 0, 0, 0, 422, 813, 0, 0,
	0, 679, 680, 973, 974, 1001, 999, 688, 0, 0,
	0, 434, 0, 445, 442, 0, 291, 292, 0, 161,
	175, 176, 0, 0, 179, 172, 173, 948, 0, 0,
	412, 950, 124, 125, 357, 358, 359, 118, 867, 0,
	870, 444, 0, 439, 430, 0, 436, 443, 293, 0,
	0, 0, 177, 178, 114, 475, 476, 0, 951, 952,
	121, 868, 431, 444, 0, 0, 297, 299, 300, 0,
	0, 298, 0, 419, 0, 434, 431, 435, 0, 438,
	301, 302, 303, 949, 0, 428, 434, 0, 0, 869,
	429, 0, 0, 446, 0, 432, 0, 446, 447, 433,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 122, 3, 3, 3, 149, 141, 3,
	83, 85, 146, 144, 84, 145, 161, 147, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 512,
	130, 129, 131, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 151, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 152,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 123, 124, 125,
	126, 127, 128, 132, 133, 134, 135, 136, 137, 138,
	139, 142, 143, 148, 150, 153, 154, 155, 156, 157,
	158, 159, 160, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:460
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:465
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:466
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:470
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:503
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:509
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:513
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:522
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:526
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:532
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:538
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:544
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:548
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:553
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:557
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:563
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:567
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:573
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:579
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:583
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:587
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:610
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:616
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:621
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:627
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:634
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:640
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:647
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:651
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:657
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:661
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:665
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:669
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:673
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:679
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:683
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:688
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:692
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:698
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:702
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:707
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:713
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:719
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:726
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:732
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:740
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:752
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:764
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:776
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:780
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:786
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:792
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName}}, Partitions: yyDollar[7].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:796
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:800
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:804
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:814
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:818
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:824
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:828
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:834
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:838
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:847
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:853
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:859
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:863
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:869
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:873
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:879
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:883
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:887
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:893
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:897
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:901
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:905
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:911
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:915
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:927
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:934
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:943
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:947
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:954
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:958
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:963
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:973
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:978
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:983
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:989
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:994
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1006
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1013
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1020
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1025
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1030
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1035
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1042
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1049
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1060
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1071
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1077
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1081
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1085
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1095
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1099
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1105
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1109
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1115
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1119
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1126
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1130
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1136
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1140
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1146
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1151
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1156
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1160
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1169
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1179
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1185
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1193
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1197
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1206
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1210
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1216
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1222
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1227
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1232
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1237
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1242
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1249
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1253
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1258
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1262
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1267
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1273
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1284
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1291
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1295
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1299
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1303
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1309
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1325
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1331
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1343
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1347
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1351
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1355
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1363
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1381
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1387
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1393
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1405
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1409
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1413
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1417
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 209:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1423
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 210:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1427
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1431
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1435
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1439
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1443
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1447
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1455
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1475
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1480
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1510
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1520
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1530
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1534
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1539
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 237:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1543
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1551
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1555
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1561
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1569
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1577
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1582
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1586
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.str = ""
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1595
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 250:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1608
		{
			yyVAL.str = ""
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1612
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1616
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 253:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1623
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1628
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1632
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1638
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1642
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1648
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1652
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1657
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1661
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1677
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1681
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1685
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1689
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1693
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1698
		{
			yyVAL.str = ""
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = yyDollar[2].str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1708
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1732
		{
			yyVAL.str = "key"
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1736
		{
			yyVAL.str = yyDollar[1].str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1742
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1746
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 280:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = ""
		}
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1761
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1765
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1771
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1777
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1781
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1787
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1791
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1797
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1803
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1807
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1811
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1815
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1820
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1824
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1830
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1836
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1842
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1848
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1852
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1856
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1860
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1864
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1869
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1882
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1886
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1890
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1899
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1905
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1909
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1913
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1919
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1929
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1933
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1937
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1941
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1945
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1949
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1953
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1957
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1961
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1965
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1969
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1973
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1977
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1981
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1985
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1989
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1993
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1997
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2001
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2005
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2009
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2013
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2017
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2021
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2025
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2029
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2033
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2037
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2046
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2077
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2088
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2092
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2097
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2101
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2106
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2110
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2114
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2118
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 371:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2126
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2132
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2136
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2140
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2146
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2150
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2154
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2158
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2162
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2166
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2170
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2174
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2178
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2182
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2186
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2190
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2194
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2198
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2202
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2206
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2210
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2214
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2218
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2222
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2226
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2230
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2236
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2240
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2246
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2250
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2254
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2258
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2262
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2266
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2270
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2274
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2278
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2284
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2290
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2297
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2304
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2310
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2314
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2321
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2328
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2340
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2350
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2354
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2358
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2371
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2381
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2385
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2396
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2403
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2410
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2417
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2424
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2429
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2441
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2454
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2465
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2469
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2478
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2489
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2493
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2502
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 438:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2507
		{
			yyVAL.str = ""
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2517
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2527
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2531
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2536
		{
			yyVAL.str = ""
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2540
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2545
		{
			yyVAL.str = ""
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2555
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2559
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2563
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2567
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2571
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2575
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2579
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2583
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2587
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2591
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2595
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2599
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2603
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2607
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2611
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2615
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2619
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2623
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2627
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2631
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2635
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2639
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2644
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2652
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2659
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 475:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2669
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2673
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2679
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2685
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2689
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 480:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2695
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2699
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2708
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2718
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2722
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2727
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2733
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2737
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2741
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2753
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2757
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2761
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2765
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2769
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2773
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2777
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2781
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2785
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2789
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2793
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2797
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2817
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2825
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2829
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2833
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2837
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2841
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2845
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2849
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2853
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2857
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2861
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2865
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2869
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2873
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2882
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2886
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2890
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2895
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2899
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2903
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2907
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2912
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2926
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2930
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2944
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 537:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2950
		{
			yyVAL.str = ""
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = "extended "
		}
	case 539:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2960
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2964
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2970
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2974
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 543:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2980
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2994
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2998
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3002
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3012
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3018
		{
			yyVAL.empty = struct{}{}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.empty = struct{}{}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3026
		{
			yyVAL.empty = struct{}{}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3032
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3036
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3046
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3052
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3058
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3062
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3067
		{
			yyVAL.empty = struct{}{}
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3069
		{
			yyVAL.empty = struct{}{}
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3072
		{
			yyVAL.empty = struct{}{}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.empty = struct{}{}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3079
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3090
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3094
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3098
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3102
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3106
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3110
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3116
		{
			yyVAL.str = yyDollar[1].str
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.str = yyDollar[1].str
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.str = yyDollar[1].str
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3130
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3134
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3142
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = ""
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3161
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3171
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3175
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3181
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3187
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3191
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3197
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3203
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3207
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3211
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3215
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3233
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3237
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3241
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3245
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3249
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3259
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3263
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3273
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3277
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3293
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3297
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3301
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3305
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3309
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3318
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3322
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3326
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3331
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3335
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3340
		{
			setAllowComments(yylex, true)
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3350
		{
			yyVAL.strs = nil
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3360
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3364
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3368
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3373
		{
			yyVAL.str = ""
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3377
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = SQLCacheStr
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3386
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3390
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3394
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3399
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3403
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3408
		{
			yyVAL.strs = nil
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3412
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3416
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3420
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3424
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3430
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3434
		{
			yyVAL.str = SQLCacheStr
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3438
		{
			yyVAL.str = DistinctStr
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3442
		{
			yyVAL.str = DistinctStr
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3446
		{
			yyVAL.str = StraightJoinHint
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3460
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3464
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3470
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3474
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3478
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3482
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3487
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3491
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3495
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3507
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3511
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3517
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3523
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3527
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3537
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3541
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3545
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3551
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3557
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3561
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3566
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3570
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3576
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3580
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3586
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3590
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3594
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3598
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3604
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3608
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3621
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3625
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3629
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3633
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3639
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 688:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3641
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3645
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3647
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3651
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3653
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3656
		{
			yyVAL.empty = struct{}{}
		}
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3658
		{
			yyVAL.empty = struct{}{}
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3661
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3665
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3676
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 700:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3682
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3686
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3690
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3696
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3702
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3706
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3710
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3714
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3720
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3724
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3734
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3738
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3744
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3754
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3763
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3767
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3771
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3775
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3780
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3784
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3790
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3794
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3798
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3802
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3806
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3810
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3818
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3824
		{
			yyVAL.str = ""
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3828
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3834
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3838
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3844
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3848
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3852
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3856
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3860
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3864
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3868
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3872
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3876
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3880
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3886
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3890
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3894
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3898
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3902
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3906
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3912
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3916
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3920
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3924
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3928
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3932
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3936
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3941
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3945
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3951
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3955
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3959
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3966
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3972
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3976
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3982
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3986
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3990
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3994
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3998
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4002
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4006
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4010
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4014
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4018
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4022
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4026
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4030
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4034
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4038
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4042
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4046
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4050
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4054
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4058
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4062
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4066
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4070
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4074
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4078
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4082
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4086
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4090
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4094
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4098
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4102
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4120
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4124
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4128
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4132
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4142
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4146
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4150
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4154
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4158
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4162
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4166
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4170
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4174
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4178
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4182
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4186
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4190
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4194
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4204
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4208
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4212
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4217
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4222
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4227
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4233
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4238
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4243
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4247
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4251
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4256
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4261
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4266
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4270
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4274
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4278
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4284
		{
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4286
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4290
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4294
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4298
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4302
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4306
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4310
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4314
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4318
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4322
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4326
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4332
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4336
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4340
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4344
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4348
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4352
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4356
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4360
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4364
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4374
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4384
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4388
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4392
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4400
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4414
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4418
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4422
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4426
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4430
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4450
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4454
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4458
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4462
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4466
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4470
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4476
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4480
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4484
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4488
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4492
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4496
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4500
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4505
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4509
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4514
		{
			yyVAL.str = string("")
		}
	case 890:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4518
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4524
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4528
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4534
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4539
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4543
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4549
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4553
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4557
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4563
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4567
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4571
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4575
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4579
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4583
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4587
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4592
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4598
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4607
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4611
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4621
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4626
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4630
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4639
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4645
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4651
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4655
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4661
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4666
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4670
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4674
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4683
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4689
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4693
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4697
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4702
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4706
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4710
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4714
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4718
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4725
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4729
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4733
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4737
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4743
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4747
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4751
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4756
		{
			yyVAL.str = ""
		}
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4760
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 942:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4764
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4768
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 944:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4773
		{
			yyVAL.str = ""
		}
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4777
		{
			yyVAL.str = yyDollar[3].str
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4783
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4787
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 948:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4792
		{
			yyVAL.str = ""
		}
	case 949:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4796
		{
			yyVAL.str = yyDollar[2].str
		}
	case 950:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4801
		{
			yyVAL.str = "cascaded"
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4805
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4809
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4814
		{
			yyVAL.str = ""
		}
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4818
		{
			yyVAL.str = yyDollar[3].str
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4824
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4828
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 957:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4832
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4836
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 959:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4842
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4846
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4852
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4856
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4860
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4865
		{
			yyVAL.str = ""
		}
	case 965:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4869
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4873
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = ""
		}
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4882
		{
			yyVAL.str = " header"
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4887
		{
			yyVAL.str = ""
		}
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4891
		{
			yyVAL.str = " manifest on"
		}
	case 971:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4895
		{
			yyVAL.str = " manifest off"
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = " overwrite on"
		}
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4908
		{
			yyVAL.str = " overwrite off"
		}
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4914
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 976:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = ""
		}
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 978:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4929
		{
			yyVAL.str = yyDollar[1].str
		}
	case 979:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4933
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 980:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4939
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4943
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 982:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4948
		{
			yyVAL.str = ""
		}
	case 983:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4952
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 984:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4958
		{
			yyVAL.str = yyDollar[1].str
		}
	case 985:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4962
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4968
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4972
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 988:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4976
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 989:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4981
		{
			yyVAL.str = ""
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4985
		{
			yyVAL.str = " optionally"
		}
	case 991:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4998
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5002
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5006
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5010
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5014
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5020
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5024
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5028
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 999:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5032
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1000:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5037
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5041
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5047
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5051
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5057
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5061
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5067
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5073
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5083
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5087
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5093
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5099
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5103
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1013:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5109
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5113
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5117
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5121
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5125
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5133
		{
			yyVAL.str = "charset"
		}
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5143
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5147
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5151
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5160
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5162
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5165
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5167
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5172
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5175
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5177
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5180
		{
			yyVAL.empty = struct{}{}
		}
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5182
		{
			yyVAL.empty = struct{}{}
		}
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5184
		{
			yyVAL.empty = struct{}{}
		}
	case 1038:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5188
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5193
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5197
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5202
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5204
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5208
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5214
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5218
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5225
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5231
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5235
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5241
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5245
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5252
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5717
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5726
		{
			decNesting(yylex)
		}
	case 1496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5731
		{
			skipToEnd(yylex)
		}
	case 1497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5736
		{
			skipToEnd(yylex)
		}
	case 1498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5740
		{
			skipToEnd(yylex)
		}
	case 1499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5744
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
