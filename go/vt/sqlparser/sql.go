// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	characteristic       Characteristic
	characteristics      []Characteristic
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DISTINCTROW = 57376
const VALUES = 57377
const LAST_INSERT_ID = 57378
const NEXT = 57379
const VALUE = 57380
const SHARE = 57381
const MODE = 57382
const SQL_NO_CACHE = 57383
const SQL_CACHE = 57384
const JOIN = 57385
const STRAIGHT_JOIN = 57386
const LEFT = 57387
const RIGHT = 57388
const INNER = 57389
const OUTER = 57390
const CROSS = 57391
const NATURAL = 57392
const USE = 57393
const FORCE = 57394
const ON = 57395
const USING = 57396
const ID = 57397
const AT_ID = 57398
const AT_AT_ID = 57399
const HEX = 57400
const STRING = 57401
const INTEGRAL = 57402
const FLOAT = 57403
const HEXNUM = 57404
const VALUE_ARG = 57405
const LIST_ARG = 57406
const COMMENT = 57407
const COMMENT_KEYWORD = 57408
const BIT_LITERAL = 57409
const NULL = 57410
const TRUE = 57411
const FALSE = 57412
const OFF = 57413
const OR = 57414
const AND = 57415
const NOT = 57416
const BETWEEN = 57417
const CASE = 57418
const WHEN = 57419
const THEN = 57420
const ELSE = 57421
const END = 57422
const LE = 57423
const GE = 57424
const NE = 57425
const NULL_SAFE_EQUAL = 57426
const IS = 57427
const LIKE = 57428
const REGEXP = 57429
const IN = 57430
const SHIFT_LEFT = 57431
const SHIFT_RIGHT = 57432
const DIV = 57433
const MOD = 57434
const UNARY = 57435
const COLLATE = 57436
const BINARY = 57437
const UNDERSCORE_BINARY = 57438
const UNDERSCORE_UTF8MB4 = 57439
const INTERVAL = 57440
const JSON_EXTRACT_OP = 57441
const JSON_UNQUOTE_EXTRACT_OP = 57442
const CREATE = 57443
const ALTER = 57444
const DROP = 57445
const RENAME = 57446
const ANALYZE = 57447
const ADD = 57448
const FLUSH = 57449
const SCHEMA = 57450
const TABLE = 57451
const INDEX = 57452
const VIEW = 57453
const TO = 57454
const IGNORE = 57455
const IF = 57456
const UNIQUE = 57457
const PRIMARY = 57458
const COLUMN = 57459
const SPATIAL = 57460
const FULLTEXT = 57461
const KEY_BLOCK_SIZE = 57462
const CHECK = 57463
const INDEXES = 57464
const ACTION = 57465
const CASCADE = 57466
const CONSTRAINT = 57467
const FOREIGN = 57468
const NO = 57469
const REFERENCES = 57470
const RESTRICT = 57471
const SHOW = 57472
const DESCRIBE = 57473
const EXPLAIN = 57474
const DATE = 57475
const ESCAPE = 57476
const REPAIR = 57477
const OPTIMIZE = 57478
const TRUNCATE = 57479
const MAXVALUE = 57480
const PARTITION = 57481
const REORGANIZE = 57482
const LESS = 57483
const THAN = 57484
const PROCEDURE = 57485
const TRIGGER = 57486
const VINDEX = 57487
const VINDEXES = 57488
const STATUS = 57489
const VARIABLES = 57490
const WARNINGS = 57491
const SEQUENCE = 57492
const BEGIN = 57493
const START = 57494
const TRANSACTION = 57495
const COMMIT = 57496
const ROLLBACK = 57497
const BIT = 57498
const TINYINT = 57499
const SMALLINT = 57500
const MEDIUMINT = 57501
const INT = 57502
const INTEGER = 57503
const BIGINT = 57504
const INTNUM = 57505
const REAL = 57506
const DOUBLE = 57507
const FLOAT_TYPE = 57508
const DECIMAL = 57509
const NUMERIC = 57510
const TIME = 57511
const TIMESTAMP = 57512
const DATETIME = 57513
const YEAR = 57514
const CHAR = 57515
const VARCHAR = 57516
const BOOL = 57517
const CHARACTER = 57518
const VARBINARY = 57519
const NCHAR = 57520
const TEXT = 57521
const TINYTEXT = 57522
const MEDIUMTEXT = 57523
const LONGTEXT = 57524
const BLOB = 57525
const TINYBLOB = 57526
const MEDIUMBLOB = 57527
const LONGBLOB = 57528
const JSON = 57529
const ENUM = 57530
const GEOMETRY = 57531
const POINT = 57532
const LINESTRING = 57533
const POLYGON = 57534
const GEOMETRYCOLLECTION = 57535
const MULTIPOINT = 57536
const MULTILINESTRING = 57537
const MULTIPOLYGON = 57538
const NULLX = 57539
const AUTO_INCREMENT = 57540
const APPROXNUM = 57541
const SIGNED = 57542
const UNSIGNED = 57543
const ZEROFILL = 57544
const COLLATION = 57545
const DATABASES = 57546
const TABLES = 57547
const VITESS_METADATA = 57548
const VSCHEMA = 57549
const FULL = 57550
const PROCESSLIST = 57551
const COLUMNS = 57552
const FIELDS = 57553
const ENGINES = 57554
const PLUGINS = 57555
const EXTENDED = 57556
const NAMES = 57557
const CHARSET = 57558
const GLOBAL = 57559
const SESSION = 57560
const ISOLATION = 57561
const LEVEL = 57562
const READ = 57563
const WRITE = 57564
const ONLY = 57565
const REPEATABLE = 57566
const COMMITTED = 57567
const UNCOMMITTED = 57568
const SERIALIZABLE = 57569
const CURRENT_TIMESTAMP = 57570
const DATABASE = 57571
const CURRENT_DATE = 57572
const CURRENT_TIME = 57573
const LOCALTIME = 57574
const LOCALTIMESTAMP = 57575
const UTC_DATE = 57576
const UTC_TIME = 57577
const UTC_TIMESTAMP = 57578
const REPLACE = 57579
const CONVERT = 57580
const CAST = 57581
const SUBSTR = 57582
const SUBSTRING = 57583
const GROUP_CONCAT = 57584
const SEPARATOR = 57585
const TIMESTAMPADD = 57586
const TIMESTAMPDIFF = 57587
const MATCH = 57588
const AGAINST = 57589
const BOOLEAN = 57590
const LANGUAGE = 57591
const WITH = 57592
const QUERY = 57593
const EXPANSION = 57594
const UNUSED = 57595
const ARRAY = 57596
const CUME_DIST = 57597
const DESCRIPTION = 57598
const DENSE_RANK = 57599
const EMPTY = 57600
const EXCEPT = 57601
const FIRST_VALUE = 57602
const GROUPING = 57603
const GROUPS = 57604
const JSON_TABLE = 57605
const LAG = 57606
const LAST_VALUE = 57607
const LATERAL = 57608
const LEAD = 57609
const MEMBER = 57610
const NTH_VALUE = 57611
const NTILE = 57612
const OF = 57613
const OVER = 57614
const PERCENT_RANK = 57615
const RANK = 57616
const RECURSIVE = 57617
const ROW_NUMBER = 57618
const SYSTEM = 57619
const WINDOW = 57620
const ACTIVE = 57621
const ADMIN = 57622
const BUCKETS = 57623
const CLONE = 57624
const COMPONENT = 57625
const DEFINITION = 57626
const ENFORCED = 57627
const EXCLUDE = 57628
const FOLLOWING = 57629
const GEOMCOLLECTION = 57630
const GET_MASTER_PUBLIC_KEY = 57631
const HISTOGRAM = 57632
const HISTORY = 57633
const INACTIVE = 57634
const INVISIBLE = 57635
const LOCKED = 57636
const MASTER_COMPRESSION_ALGORITHMS = 57637
const MASTER_PUBLIC_KEY_PATH = 57638
const MASTER_TLS_CIPHERSUITES = 57639
const MASTER_ZSTD_COMPRESSION_LEVEL = 57640
const NESTED = 57641
const NETWORK_NAMESPACE = 57642
const NOWAIT = 57643
const NULLS = 57644
const OJ = 57645
const OLD = 57646
const OPTIONAL = 57647
const ORDINALITY = 57648
const ORGANIZATION = 57649
const OTHERS = 57650
const PATH = 57651
const PERSIST = 57652
const PERSIST_ONLY = 57653
const PRECEDING = 57654
const PRIVILEGE_CHECKS_USER = 57655
const PROCESS = 57656
const RANDOM = 57657
const REFERENCE = 57658
const REQUIRE_ROW_FORMAT = 57659
const RESOURCE = 57660
const RESPECT = 57661
const RESTART = 57662
const RETAIN = 57663
const REUSE = 57664
const ROLE = 57665
const SECONDARY = 57666
const SECONDARY_ENGINE = 57667
const SECONDARY_LOAD = 57668
const SECONDARY_UNLOAD = 57669
const SKIP = 57670
const SRID = 57671
const THREAD_PRIORITY = 57672
const TIES = 57673
const UNBOUNDED = 57674
const VCPU = 57675
const VISIBLE = 57676

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 33,
	-2, 4,
	-1, 38,
	33, 299,
	127, 299,
	139, 299,
	164, 313,
	165, 313,
	-2, 301,
	-1, 328,
	115, 658,
	-2, 654,
	-1, 329,
	115, 659,
	-2, 655,
	-1, 398,
	85, 909,
	-2, 66,
	-1, 399,
	85, 826,
	-2, 67,
	-1, 404,
	85, 794,
	-2, 620,
	-1, 406,
	85, 857,
	-2, 622,
	-1, 707,
	1, 366,
	5, 366,
	12, 366,
	13, 366,
	14, 366,
	15, 366,
	17, 366,
	19, 366,
	30, 366,
	31, 366,
	43, 366,
	44, 366,
	45, 366,
	46, 366,
	47, 366,
	49, 366,
	50, 366,
	53, 366,
	54, 366,
	56, 366,
	57, 366,
	352, 366,
	-2, 384,
	-1, 710,
	54, 48,
	56, 48,
	-2, 52,
	-1, 865,
	115, 661,
	-2, 657,
	-1, 1096,
	5, 34,
	-2, 452,
	-1, 1127,
	5, 33,
	-2, 593,
	-1, 1375,
	5, 34,
	-2, 594,
	-1, 1428,
	5, 33,
	-2, 596,
	-1, 1508,
	5, 34,
	-2, 597,
}

const yyPrivate = 57344

const yyLast = 16226

var yyAct = [...]int{

	328, 1542, 1336, 1496, 1532, 1130, 662, 980, 1441, 333,
	1408, 1224, 1310, 1148, 1276, 346, 1009, 953, 359, 1277,
	1023, 1175, 951, 1131, 558, 1273, 58, 989, 307, 979,
	1283, 403, 1289, 81, 897, 1248, 1154, 271, 809, 291,
	271, 1395, 828, 890, 901, 1201, 1192, 1087, 723, 993,
	955, 867, 940, 976, 703, 919, 593, 599, 1019, 527,
	722, 614, 397, 661, 3, 392, 704, 605, 271, 81,
	331, 316, 528, 271, 933, 271, 389, 709, 712, 57,
	677, 547, 1535, 1519, 1530, 1506, 298, 1527, 1337, 1518,
	62, 1505, 1265, 1367, 532, 1305, 1306, 676, 1304, 1042,
	267, 263, 264, 265, 971, 972, 724, 304, 725, 320,
	83, 84, 85, 1041, 269, 970, 306, 64, 65, 66,
	67, 68, 587, 259, 303, 1183, 257, 1002, 261, 1226,
	569, 1398, 299, 300, 301, 302, 1010, 585, 305, 1358,
	1356, 297, 83, 84, 85, 391, 83, 84, 85, 798,
	529, 1228, 531, 1040, 1470, 627, 626, 636, 637, 629,
	630, 631, 632, 633, 634, 635, 628, 795, 371, 638,
	377, 378, 375, 376, 374, 373, 372, 1529, 564, 797,
	566, 586, 1227, 1163, 379, 380, 1162, 582, 1526, 1164,
	799, 583, 580, 581, 83, 84, 85, 575, 576, 400,
	1497, 1223, 934, 1037, 1034, 1035, 1546, 1033, 1489, 994,
	572, 1550, 563, 565, 548, 796, 1149, 1151, 534, 996,
	1450, 266, 260, 627, 626, 636, 637, 629, 630, 631,
	632, 633, 634, 635, 628, 1249, 261, 638, 1442, 1229,
	1044, 1047, 802, 786, 258, 1299, 1220, 275, 1298, 83,
	84, 85, 1222, 1444, 278, 1297, 996, 530, 271, 539,
	540, 900, 285, 271, 537, 549, 274, 262, 1054, 271,
	1478, 1053, 1378, 1105, 1251, 271, 556, 1039, 1088, 562,
	81, 1010, 1234, 322, 81, 1159, 81, 1102, 650, 651,
	1115, 977, 81, 1081, 839, 1150, 283, 718, 561, 1038,
	618, 1211, 290, 554, 571, 638, 1504, 544, 1253, 966,
	1257, 829, 1252, 996, 1250, 833, 573, 1544, 995, 1255,
	1545, 1443, 1543, 81, 1451, 1449, 1471, 628, 1254, 276,
	638, 1207, 1208, 1209, 836, 538, 613, 601, 1487, 1043,
	546, 1256, 1258, 83, 84, 85, 553, 550, 551, 552,
	1459, 1221, 555, 1219, 1045, 995, 287, 279, 1267, 288,
	289, 295, 1287, 612, 611, 280, 282, 292, 726, 277,
	294, 293, 541, 920, 542, 71, 602, 543, 650, 651,
	613, 560, 1003, 874, 823, 611, 1181, 271, 271, 271,
	589, 590, 650, 651, 788, 830, 81, 872, 873, 871,
	1210, 613, 81, 1492, 603, 1215, 1212, 1203, 1213, 1206,
	702, 1202, 995, 72, 533, 1204, 1205, 992, 990, 326,
	991, 920, 622, 1112, 625, 608, 1510, 988, 994, 1214,
	639, 640, 641, 642, 643, 644, 645, 1370, 623, 624,
	621, 627, 626, 636, 637, 629, 630, 631, 632, 633,
	634, 635, 628, 680, 682, 638, 686, 688, 721, 691,
	592, 999, 559, 256, 701, 711, 710, 1000, 824, 716,
	679, 681, 683, 685, 687, 689, 690, 627, 626, 636,
	637, 629, 630, 631, 632, 633, 634, 635, 628, 1101,
	1404, 638, 535, 536, 1242, 1403, 83, 84, 85, 627,
	626, 636, 637, 629, 630, 631, 632, 633, 634, 635,
	628, 1196, 1551, 638, 627, 626, 636, 637, 629, 630,
	631, 632, 633, 634, 635, 628, 400, 271, 638, 386,
	387, 784, 81, 1195, 787, 55, 789, 271, 271, 81,
	81, 81, 612, 611, 1184, 271, 1512, 870, 271, 1323,
	1488, 271, 807, 808, 1552, 271, 1422, 81, 592, 613,
	1401, 1193, 81, 81, 81, 271, 81, 81, 629, 630,
	631, 632, 633, 634, 635, 628, 81, 81, 638, 1078,
	1079, 1080, 813, 1064, 814, 1364, 811, 55, 83, 84,
	85, 23, 596, 600, 636, 637, 629, 630, 631, 632,
	633, 634, 635, 628, 734, 81, 638, 1447, 1528, 619,
	271, 1456, 612, 611, 790, 791, 81, 1514, 592, 1269,
	1447, 1500, 800, 526, 803, 391, 1447, 592, 806, 613,
	844, 842, 843, 631, 632, 633, 634, 635, 628, 891,
	868, 638, 819, 1455, 663, 857, 859, 860, 893, 1319,
	865, 858, 311, 674, 83, 84, 85, 863, 838, 59,
	81, 997, 627, 626, 636, 637, 629, 630, 631, 632,
	633, 634, 635, 628, 1286, 846, 638, 861, 1274, 910,
	913, 1286, 612, 611, 903, 921, 1100, 853, 1099, 1447,
	1479, 1447, 1446, 81, 81, 1373, 837, 1393, 1392, 613,
	1094, 271, 1380, 592, 329, 1377, 592, 612, 611, 271,
	271, 1329, 1328, 271, 271, 612, 611, 271, 271, 271,
	81, 894, 895, 1155, 613, 83, 84, 85, 905, 892,
	929, 930, 613, 81, 528, 961, 1155, 82, 1458, 963,
	917, 272, 1325, 1326, 272, 1325, 1324, 1094, 592, 864,
	811, 83, 84, 85, 937, 1166, 652, 653, 654, 655,
	656, 657, 658, 659, 1011, 1012, 1013, 937, 1369, 937,
	592, 1327, 272, 82, 903, 592, 25, 272, 935, 272,
	1286, 968, 967, 964, 960, 959, 713, 271, 81, 1167,
	81, 962, 1046, 984, 969, 567, 271, 271, 271, 271,
	271, 1237, 271, 271, 1025, 25, 271, 81, 627, 626,
	636, 637, 629, 630, 631, 632, 633, 634, 635, 628,
	733, 732, 638, 271, 714, 55, 936, 714, 271, 1125,
	271, 271, 1118, 25, 1126, 271, 1117, 1094, 713, 1021,
	1022, 840, 801, 719, 815, 313, 1094, 1520, 1410, 1004,
	400, 1225, 937, 1061, 55, 1385, 349, 348, 351, 352,
	353, 354, 1427, 981, 1028, 350, 355, 715, 831, 717,
	715, 865, 713, 1048, 1049, 1050, 1051, 1052, 1069, 1055,
	1056, 1024, 55, 1057, 1315, 942, 945, 946, 947, 943,
	868, 944, 948, 1170, 55, 854, 855, 1411, 1070, 1020,
	1059, 1071, 1290, 1291, 1027, 1060, 1015, 942, 945, 946,
	947, 943, 1065, 944, 948, 1014, 1537, 1290, 1291, 1533,
	1317, 1293, 1274, 1083, 1197, 834, 805, 906, 907, 1142,
	1140, 912, 915, 916, 1143, 1141, 852, 1296, 271, 271,
	271, 271, 271, 1295, 1139, 1138, 1132, 1524, 663, 1517,
	271, 908, 909, 271, 317, 318, 928, 271, 1233, 931,
	932, 271, 272, 1144, 1066, 946, 947, 272, 1522, 606,
	864, 1076, 1075, 272, 1111, 1188, 731, 557, 1165, 272,
	81, 1180, 607, 1156, 82, 604, 606, 1168, 82, 1171,
	82, 594, 1133, 1176, 1176, 1136, 82, 1127, 1157, 607,
	1158, 1145, 1494, 595, 1493, 1134, 1135, 1153, 1137, 1425,
	975, 1178, 1172, 1371, 1406, 1177, 905, 1030, 1160, 804,
	950, 1464, 1185, 1186, 314, 315, 1074, 82, 81, 81,
	308, 1463, 309, 59, 1073, 1413, 1155, 335, 584, 1106,
	866, 1173, 1174, 875, 876, 877, 878, 879, 880, 881,
	882, 883, 884, 885, 886, 887, 888, 889, 81, 1539,
	1538, 1539, 1194, 1187, 1103, 1189, 1190, 1191, 827, 609,
	1475, 1399, 835, 271, 61, 63, 56, 1, 1531, 574,
	1216, 577, 81, 1338, 1407, 1036, 1495, 588, 1440, 1309,
	987, 272, 272, 272, 978, 70, 525, 69, 925, 1486,
	82, 891, 1231, 1232, 822, 570, 82, 986, 985, 1448,
	981, 1397, 998, 1077, 1182, 1001, 1316, 1240, 1179, 1200,
	1491, 1067, 1068, 739, 600, 1005, 1006, 1007, 1008, 81,
	81, 1275, 1241, 737, 738, 1132, 1266, 1260, 736, 1247,
	741, 1016, 1017, 1018, 1259, 1278, 740, 865, 735, 284,
	1235, 395, 949, 81, 1069, 727, 1026, 610, 73, 1218,
	1092, 1093, 1217, 1032, 832, 281, 578, 1285, 81, 1294,
	81, 81, 579, 286, 1176, 1176, 646, 1308, 1072, 1109,
	1161, 1301, 401, 1300, 394, 1281, 841, 1095, 598, 1322,
	1462, 1412, 1280, 1303, 1110, 1313, 1314, 1307, 271, 1312,
	673, 918, 334, 856, 1113, 347, 344, 345, 847, 1124,
	620, 332, 1239, 324, 706, 699, 941, 939, 271, 938,
	390, 1292, 1288, 705, 81, 1236, 1339, 81, 81, 81,
	271, 272, 1366, 1469, 851, 81, 82, 27, 271, 1320,
	1321, 272, 272, 82, 82, 82, 1270, 60, 319, 272,
	20, 19, 272, 18, 21, 272, 1344, 1345, 17, 272,
	1347, 82, 16, 15, 358, 545, 82, 82, 82, 272,
	82, 82, 31, 1346, 1354, 1330, 22, 14, 13, 12,
	82, 82, 11, 10, 9, 8, 7, 6, 1331, 5,
	4, 310, 1084, 1085, 1086, 1333, 1132, 80, 981, 24,
	981, 1372, 2, 1332, 0, 1334, 0, 1343, 81, 82,
	1382, 0, 1381, 0, 272, 1168, 81, 0, 0, 0,
	82, 0, 0, 0, 360, 52, 0, 785, 0, 0,
	1391, 81, 0, 402, 792, 793, 794, 0, 81, 0,
	0, 1400, 0, 1402, 0, 0, 0, 0, 0, 0,
	0, 0, 812, 1415, 0, 0, 0, 816, 817, 818,
	0, 820, 821, 0, 82, 1239, 0, 0, 648, 1414,
	0, 825, 826, 0, 0, 0, 0, 52, 81, 81,
	0, 81, 0, 0, 0, 312, 81, 0, 81, 81,
	81, 271, 1278, 1426, 81, 1421, 1268, 82, 82, 0,
	0, 0, 0, 0, 0, 272, 1445, 924, 1439, 0,
	1433, 81, 271, 272, 272, 1452, 0, 272, 272, 0,
	0, 272, 272, 272, 82, 707, 0, 1434, 0, 1435,
	1437, 1438, 0, 0, 0, 0, 0, 82, 981, 1302,
	1428, 0, 1476, 1485, 0, 0, 1278, 0, 81, 1484,
	0, 0, 1460, 1483, 1453, 0, 1454, 0, 0, 81,
	81, 0, 0, 0, 0, 0, 0, 1499, 1409, 1498,
	0, 1502, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 1507, 0, 0, 0, 1132, 0, 0, 0, 1461,
	271, 272, 82, 1477, 82, 0, 0, 0, 81, 0,
	272, 272, 272, 272, 272, 0, 272, 272, 1243, 1244,
	272, 82, 1516, 0, 0, 0, 0, 0, 1521, 1523,
	0, 81, 1261, 1262, 0, 1263, 1264, 272, 0, 0,
	0, 0, 272, 0, 272, 272, 1536, 1271, 1272, 272,
	1363, 1547, 0, 0, 402, 0, 0, 0, 402, 0,
	402, 0, 0, 1368, 0, 0, 402, 0, 0, 0,
	0, 0, 1525, 663, 0, 0, 0, 1511, 0, 0,
	0, 1383, 0, 0, 1384, 0, 0, 1386, 0, 0,
	0, 0, 0, 1029, 0, 1031, 0, 616, 0, 1409,
	981, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	1318, 0, 1058, 0, 568, 0, 0, 0, 568, 0,
	568, 0, 0, 0, 0, 0, 568, 627, 626, 636,
	637, 629, 630, 631, 632, 633, 634, 635, 628, 0,
	0, 638, 1351, 1352, 0, 1353, 0, 52, 1355, 1361,
	1357, 0, 272, 272, 272, 272, 272, 0, 0, 0,
	0, 0, 647, 0, 272, 649, 0, 272, 0, 869,
	402, 272, 1349, 0, 0, 272, 728, 0, 627, 626,
	636, 637, 629, 630, 631, 632, 633, 634, 635, 628,
	0, 0, 638, 660, 82, 664, 665, 666, 667, 668,
	669, 670, 671, 672, 1394, 675, 678, 678, 678, 684,
	678, 678, 684, 678, 692, 693, 694, 695, 696, 697,
	698, 0, 708, 0, 591, 0, 627, 626, 636, 637,
	629, 630, 631, 632, 633, 634, 635, 628, 0, 0,
	638, 0, 82, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1089, 0, 707, 1501, 663, 0,
	707, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 627, 626, 636, 637, 629, 630,
	631, 632, 633, 634, 635, 628, 0, 272, 638, 0,
	0, 1416, 1417, 1418, 1419, 1420, 82, 0, 0, 1423,
	1424, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 402, 402, 402, 627, 626, 636, 637,
	629, 630, 631, 632, 633, 634, 635, 628, 0, 0,
	638, 402, 0, 0, 1199, 0, 402, 402, 402, 0,
	402, 402, 0, 82, 82, 0, 0, 0, 0, 0,
	402, 402, 626, 636, 637, 629, 630, 631, 632, 633,
	634, 635, 628, 1230, 0, 638, 568, 82, 0, 0,
	0, 0, 0, 568, 568, 568, 0, 0, 0, 848,
	0, 0, 82, 0, 82, 82, 0, 0, 0, 0,
	616, 568, 0, 402, 0, 0, 568, 568, 568, 0,
	568, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	568, 568, 272, 0, 0, 0, 0, 0, 0, 869,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 896, 0, 0, 0, 82, 0,
	0, 82, 82, 82, 272, 0, 0, 0, 0, 82,
	922, 0, 272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1540, 0, 0, 926, 927, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 707, 707, 707, 707, 707,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 664,
	707, 0, 0, 0, 0, 0, 0, 402, 707, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	845, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 952, 0, 82, 0, 708, 0, 0,
	0, 708, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 402, 0, 0, 0, 0, 0,
	756, 0, 0, 0, 0, 0, 0, 0, 0, 902,
	904, 402, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 82, 0, 82, 0, 0, 0, 0,
	82, 0, 82, 82, 82, 272, 0, 0, 82, 0,
	0, 0, 0, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 568, 0, 568, 82, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1405, 0, 0, 0,
	0, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	757, 0, 0, 82, 0, 0, 0, 0, 0, 1082,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 922, 82, 770, 773, 774, 775, 776, 777, 778,
	0, 779, 780, 781, 782, 783, 758, 759, 760, 761,
	742, 743, 771, 0, 745, 82, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 762, 763, 764, 765,
	766, 767, 768, 769, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1128, 1129,
	0, 0, 708, 708, 708, 708, 708, 0, 0, 0,
	0, 0, 0, 0, 0, 707, 0, 952, 0, 1152,
	0, 0, 0, 0, 0, 708, 0, 0, 0, 0,
	0, 0, 1198, 402, 0, 772, 0, 0, 0, 0,
	0, 1090, 0, 0, 0, 1091, 0, 0, 0, 0,
	0, 0, 0, 1096, 1097, 1098, 0, 0, 0, 0,
	1104, 0, 402, 1107, 1108, 0, 0, 0, 0, 1114,
	0, 597, 0, 1116, 0, 0, 1119, 1120, 1121, 1122,
	1123, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 568, 0, 0, 0, 0, 0, 1147,
	0, 0, 25, 26, 53, 28, 29, 0, 270, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 0,
	402, 44, 568, 0, 0, 0, 30, 49, 50, 0,
	922, 0, 0, 1282, 1284, 0, 323, 0, 0, 393,
	0, 0, 0, 0, 270, 0, 270, 39, 0, 0,
	0, 55, 0, 0, 0, 0, 0, 1284, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 402, 1311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1279, 0, 52, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 32, 33, 35, 34, 37, 0,
	51, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 1340, 1341, 1342, 0, 0, 0, 0, 0, 402,
	1245, 1246, 0, 38, 45, 46, 0, 0, 47, 48,
	36, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 40, 41, 0, 42, 43, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 922, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 402, 0, 0, 0, 0, 0, 0, 0,
	1396, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	1365, 0, 0, 0, 270, 402, 0, 0, 0, 0,
	270, 0, 402, 0, 0, 0, 270, 0, 0, 0,
	54, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1387, 1388, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1430, 1431, 0, 1432, 0, 0, 1348, 0,
	1396, 0, 1396, 1396, 1396, 568, 1350, 0, 1311, 0,
	0, 0, 0, 0, 0, 0, 0, 1359, 1360, 0,
	0, 0, 0, 0, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1374, 1375, 1376,
	0, 1379, 0, 0, 0, 0, 0, 0, 1279, 0,
	0, 1429, 0, 0, 0, 0, 0, 0, 1390, 0,
	0, 0, 1490, 0, 0, 0, 0, 0, 270, 270,
	270, 0, 0, 402, 402, 0, 0, 0, 0, 0,
	0, 1457, 0, 0, 0, 0, 0, 0, 0, 0,
	922, 0, 0, 1509, 0, 0, 0, 0, 0, 0,
	0, 0, 1279, 0, 52, 0, 0, 0, 0, 0,
	0, 0, 1515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1436, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1465, 1466, 1467, 1468, 0, 1472,
	0, 1473, 1474, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1480, 0, 1481, 1482, 0, 0, 0,
	0, 0, 0, 0, 1534, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 270,
	0, 0, 0, 0, 0, 0, 270, 1503, 0, 270,
	0, 0, 270, 0, 0, 1508, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 0, 0, 1513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 1548, 1549,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 323, 0, 0, 0, 0, 323, 323, 0,
	0, 323, 323, 323, 0, 0, 0, 923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 323, 323, 323,
	323, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	270, 957, 0, 0, 270, 270, 0, 0, 270, 965,
	810, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 270, 270,
	270, 270, 0, 270, 270, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 270,
	0, 1062, 1063, 0, 0, 0, 270, 0, 0, 0,
	0, 810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	323, 323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 323,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 923, 270,
	270, 270, 270, 270, 0, 0, 0, 0, 0, 0,
	0, 1146, 0, 0, 270, 0, 0, 0, 957, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 323, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 323, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 923, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 923, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 500, 0,
	457, 515, 430, 447, 523, 448, 451, 488, 415, 470,
	171, 445, 957, 434, 410, 441, 411, 432, 459, 115,
	463, 429, 502, 473, 514, 143, 435, 521, 145, 479,
	0, 217, 159, 270, 0, 461, 504, 468, 497, 456,
	489, 420, 478, 516, 446, 486, 517, 0, 0, 0,
	83, 84, 85, 0, 982, 983, 0, 0, 0, 0,
	0, 105, 0, 483, 511, 443, 485, 487, 409, 480,
	0, 413, 416, 522, 507, 438, 439, 1169, 0, 0,
	0, 0, 0, 0, 460, 469, 494, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 436, 923, 477, 0,
	0, 0, 417, 414, 0, 0, 458, 0, 0, 0,
	419, 270, 437, 495, 0, 407, 124, 499, 506, 455,
	273, 510, 453, 452, 513, 190, 0, 221, 127, 142,
	101, 139, 87, 97, 0, 126, 168, 197, 201, 503,
	433, 442, 109, 440, 199, 178, 237, 476, 180, 198,
	146, 227, 191, 236, 246, 247, 224, 244, 251, 214,
	90, 223, 235, 106, 209, 92, 233, 220, 157, 136,
	137, 91, 0, 195, 114, 122, 111, 170, 230, 231,
	110, 254, 98, 243, 94, 99, 242, 164, 226, 234,
	158, 151, 93, 232, 156, 150, 141, 118, 129, 188,
	148, 189, 130, 161, 160, 162, 0, 412, 0, 218,
	240, 255, 103, 428, 225, 249, 250, 0, 0, 104,
	123, 117, 187, 121, 163, 100, 132, 215, 140, 147,
	194, 253, 177, 200, 107, 239, 216, 424, 427, 422,
	423, 471, 472, 518, 519, 520, 496, 418, 0, 425,
	426, 0, 501, 508, 509, 475, 86, 95, 144, 252,
	192, 120, 241, 408, 421, 113, 431, 0, 0, 444,
	449, 450, 462, 464, 465, 466, 467, 474, 481, 482,
	484, 490, 491, 492, 493, 498, 505, 524, 88, 89,
	96, 102, 108, 112, 116, 119, 125, 128, 131, 133,
	134, 135, 138, 149, 152, 153, 154, 155, 165, 166,
	167, 169, 172, 173, 174, 175, 176, 179, 181, 182,
	183, 184, 185, 186, 193, 196, 202, 203, 204, 205,
	206, 207, 208, 210, 211, 212, 213, 219, 222, 228,
	229, 238, 245, 248, 512, 500, 0, 457, 515, 430,
	447, 523, 448, 451, 488, 415, 470, 171, 445, 0,
	434, 410, 441, 411, 432, 459, 115, 463, 429, 502,
	473, 514, 143, 435, 521, 145, 479, 0, 217, 159,
	0, 0, 461, 504, 468, 497, 456, 489, 420, 478,
	516, 446, 486, 517, 0, 0, 0, 83, 84, 85,
	0, 982, 983, 0, 0, 0, 0, 0, 105, 0,
	483, 511, 443, 485, 487, 409, 480, 0, 413, 416,
	522, 507, 438, 439, 0, 0, 0, 0, 0, 0,
	0, 460, 469, 494, 454, 0, 0, 0, 0, 0,
	0, 0, 0, 436, 0, 477, 0, 0, 0, 417,
	414, 0, 0, 458, 0, 0, 0, 419, 0, 437,
	495, 0, 407, 124, 499, 506, 455, 273, 510, 453,
	452, 513, 190, 0, 221, 127, 142, 101, 139, 87,
	97, 0, 126, 168, 197, 201, 503, 433, 442, 109,
	440, 199, 178, 237, 476, 180, 198, 146, 227, 191,
	236, 246, 247, 224, 244, 251, 214, 90, 223, 235,
	106, 209, 92, 233, 220, 157, 136, 137, 91, 0,
	195, 114, 122, 111, 170, 230, 231, 110, 254, 98,
	243, 94, 99, 242, 164, 226, 234, 158, 151, 93,
	232, 156, 150, 141, 118, 129, 188, 148, 189, 130,
	161, 160, 162, 0, 412, 0, 218, 240, 255, 103,
	428, 225, 249, 250, 0, 0, 104, 123, 117, 187,
	121, 163, 100, 132, 215, 140, 147, 194, 253, 177,
	200, 107, 239, 216, 424, 427, 422, 423, 471, 472,
	518, 519, 520, 496, 418, 0, 425, 426, 0, 501,
	508, 509, 475, 86, 95, 144, 252, 192, 120, 241,
	408, 421, 113, 431, 0, 0, 444, 449, 450, 462,
	464, 465, 466, 467, 474, 481, 482, 484, 490, 491,
	492, 493, 498, 505, 524, 88, 89, 96, 102, 108,
	112, 116, 119, 125, 128, 131, 133, 134, 135, 138,
	149, 152, 153, 154, 155, 165, 166, 167, 169, 172,
	173, 174, 175, 176, 179, 181, 182, 183, 184, 185,
	186, 193, 196, 202, 203, 204, 205, 206, 207, 208,
	210, 211, 212, 213, 219, 222, 228, 229, 238, 245,
	248, 512, 500, 0, 457, 515, 430, 447, 523, 448,
	451, 488, 415, 470, 171, 445, 0, 434, 410, 441,
	411, 432, 459, 115, 463, 429, 502, 473, 514, 143,
	435, 521, 145, 479, 0, 217, 159, 0, 0, 461,
	504, 468, 497, 456, 489, 420, 478, 516, 446, 486,
	517, 55, 0, 0, 83, 84, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 483, 511, 443,
	485, 487, 409, 480, 0, 413, 416, 522, 507, 438,
	439, 0, 0, 0, 0, 0, 0, 0, 460, 469,
	494, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	436, 0, 477, 0, 0, 0, 417, 414, 0, 0,
	458, 0, 0, 0, 419, 0, 437, 495, 0, 407,
	124, 499, 506, 455, 273, 510, 453, 452, 513, 190,
	0, 221, 127, 142, 101, 139, 87, 97, 0, 126,
	168, 197, 201, 503, 433, 442, 109, 440, 199, 178,
	237, 476, 180, 198, 146, 227, 191, 236, 246, 247,
	224, 244, 251, 214, 90, 223, 235, 106, 209, 92,
	233, 220, 157, 136, 137, 91, 0, 195, 114, 122,
	111, 170, 230, 231, 110, 254, 98, 243, 94, 99,
	242, 164, 226, 234, 158, 151, 93, 232, 156, 150,
	141, 118, 129, 188, 148, 189, 130, 161, 160, 162,
	0, 412, 0, 218, 240, 255, 103, 428, 225, 249,
	250, 0, 0, 104, 123, 117, 187, 121, 163, 100,
	132, 215, 140, 147, 194, 253, 177, 200, 107, 239,
	216, 424, 427, 422, 423, 471, 472, 518, 519, 520,
	496, 418, 0, 425, 426, 0, 501, 508, 509, 475,
	86, 95, 144, 252, 192, 120, 241, 408, 421, 113,
	431, 0, 0, 444, 449, 450, 462, 464, 465, 466,
	467, 474, 481, 482, 484, 490, 491, 492, 493, 498,
	505, 524, 88, 89, 96, 102, 108, 112, 116, 119,
	125, 128, 131, 133, 134, 135, 138, 149, 152, 153,
	154, 155, 165, 166, 167, 169, 172, 173, 174, 175,
	176, 179, 181, 182, 183, 184, 185, 186, 193, 196,
	202, 203, 204, 205, 206, 207, 208, 210, 211, 212,
	213, 219, 222, 228, 229, 238, 245, 248, 512, 500,
	0, 457, 515, 430, 447, 523, 448, 451, 488, 415,
	470, 171, 445, 0, 434, 410, 441, 411, 432, 459,
	115, 463, 429, 502, 473, 514, 143, 435, 521, 145,
	479, 0, 217, 159, 0, 0, 461, 504, 468, 497,
	456, 489, 420, 478, 516, 446, 486, 517, 0, 0,
	0, 83, 84, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 483, 511, 443, 485, 487, 409,
	480, 0, 413, 416, 522, 507, 438, 439, 0, 0,
	0, 0, 0, 0, 0, 460, 469, 494, 454, 0,
	0, 0, 0, 0, 0, 1238, 0, 436, 0, 477,
	0, 0, 0, 417, 414, 0, 0, 458, 0, 0,
	0, 419, 0, 437, 495, 0, 407, 124, 499, 506,
	455, 273, 510, 453, 452, 513, 190, 0, 221, 127,
	142, 101, 139, 87, 97, 0, 126, 168, 197, 201,
	503, 433, 442, 109, 440, 199, 178, 237, 476, 180,
	198, 146, 227, 191, 236, 246, 247, 224, 244, 251,
	214, 90, 223, 235, 106, 209, 92, 233, 220, 157,
	136, 137, 91, 0, 195, 114, 122, 111, 170, 230,
	231, 110, 254, 98, 243, 94, 99, 242, 164, 226,
	234, 158, 151, 93, 232, 156, 150, 141, 118, 129,
	188, 148, 189, 130, 161, 160, 162, 0, 412, 0,
	218, 240, 255, 103, 428, 225, 249, 250, 0, 0,
	104, 123, 117, 187, 121, 163, 100, 132, 215, 140,
	147, 194, 253, 177, 200, 107, 239, 216, 424, 427,
	422, 423, 471, 472, 518, 519, 520, 496, 418, 0,
	425, 426, 0, 501, 508, 509, 475, 86, 95, 144,
	252, 192, 120, 241, 408, 421, 113, 431, 0, 0,
	444, 449, 450, 462, 464, 465, 466, 467, 474, 481,
	482, 484, 490, 491, 492, 493, 498, 505, 524, 88,
	89, 96, 102, 108, 112, 116, 119, 125, 128, 131,
	133, 134, 135, 138, 149, 152, 153, 154, 155, 165,
	166, 167, 169, 172, 173, 174, 175, 176, 179, 181,
	182, 183, 184, 185, 186, 193, 196, 202, 203, 204,
	205, 206, 207, 208, 210, 211, 212, 213, 219, 222,
	228, 229, 238, 245, 248, 512, 500, 0, 457, 515,
	430, 447, 523, 448, 451, 488, 415, 470, 171, 445,
	0, 434, 410, 441, 411, 432, 459, 115, 463, 429,
	502, 473, 514, 143, 435, 521, 145, 479, 0, 217,
	159, 0, 0, 461, 504, 468, 497, 456, 489, 420,
	478, 516, 446, 486, 517, 0, 0, 0, 83, 84,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	0, 483, 511, 443, 485, 487, 409, 480, 0, 413,
	416, 522, 507, 438, 439, 0, 0, 0, 0, 0,
	0, 0, 460, 469, 494, 454, 0, 0, 0, 0,
	0, 0, 966, 0, 436, 0, 477, 0, 0, 0,
	417, 414, 0, 0, 458, 0, 0, 0, 419, 0,
	437, 495, 0, 407, 124, 499, 506, 455, 273, 510,
	453, 452, 513, 190, 0, 221, 127, 142, 101, 139,
	87, 97, 0, 126, 168, 197, 201, 503, 433, 442,
	109, 440, 199, 178, 237, 476, 180, 198, 146, 227,
	191, 236, 246, 247, 224, 244, 251, 214, 90, 223,
	235, 106, 209, 92, 233, 220, 157, 136, 137, 91,
	0, 195, 114, 122, 111, 170, 230, 231, 110, 254,
	98, 243, 94, 99, 242, 164, 226, 234, 158, 151,
	93, 232, 156, 150, 141, 118, 129, 188, 148, 189,
	130, 161, 160, 162, 0, 412, 0, 218, 240, 255,
	103, 428, 225, 249, 250, 0, 0, 104, 123, 117,
	187, 121, 163, 100, 132, 215, 140, 147, 194, 253,
	177, 200, 107, 239, 216, 424, 427, 422, 423, 471,
	472, 518, 519, 520, 496, 418, 0, 425, 426, 0,
	501, 508, 509, 475, 86, 95, 144, 252, 192, 120,
	241, 408, 421, 113, 431, 0, 0, 444, 449, 450,
	462, 464, 465, 466, 467, 474, 481, 482, 484, 490,
	491, 492, 493, 498, 505, 524, 88, 89, 96, 102,
	108, 112, 116, 119, 125, 128, 131, 133, 134, 135,
	138, 149, 152, 153, 154, 155, 165, 166, 167, 169,
	172, 173, 174, 175, 176, 179, 181, 182, 183, 184,
	185, 186, 193, 196, 202, 203, 204, 205, 206, 207,
	208, 210, 211, 212, 213, 219, 222, 228, 229, 238,
	245, 248, 512, 500, 0, 457, 515, 430, 447, 523,
	448, 451, 488, 415, 470, 171, 445, 0, 434, 410,
	441, 411, 432, 459, 115, 463, 429, 502, 473, 514,
	143, 435, 521, 145, 479, 0, 217, 159, 0, 0,
	461, 504, 468, 497, 456, 489, 420, 478, 516, 446,
	486, 517, 0, 0, 0, 83, 84, 85, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 0, 483, 511,
	443, 485, 487, 409, 480, 0, 413, 416, 522, 507,
	438, 439, 0, 0, 0, 0, 0, 0, 0, 460,
	469, 494, 454, 0, 0, 0, 0, 0, 0, 862,
	0, 436, 0, 477, 0, 0, 0, 417, 414, 0,
	0, 458, 0, 0, 0, 419, 0, 437, 495, 0,
	407, 124, 499, 506, 455, 273, 510, 453, 452, 513,
	190, 0, 221, 127, 142, 101, 139, 87, 97, 0,
	126, 168, 197, 201, 503, 433, 442, 109, 440, 199,
	178, 237, 476, 180, 198, 146, 227, 191, 236, 246,
	247, 224, 244, 251, 214, 90, 223, 235, 106, 209,
	92, 233, 220, 157, 136, 137, 91, 0, 195, 114,
	122, 111, 170, 230, 231, 110, 254, 98, 243, 94,
	99, 242, 164, 226, 234, 158, 151, 93, 232, 156,
	150, 141, 118, 129, 188, 148, 189, 130, 161, 160,
	162, 0, 412, 0, 218, 240, 255, 103, 428, 225,
	249, 250, 0, 0, 104, 123, 117, 187, 121, 163,
	100, 132, 215, 140, 147, 194, 253, 177, 200, 107,
	239, 216, 424, 427, 422, 423, 471, 472, 518, 519,
	520, 496, 418, 0, 425, 426, 0, 501, 508, 509,
	475, 86, 95, 144, 252, 192, 120, 241, 408, 421,
	113, 431, 0, 0, 444, 449, 450, 462, 464, 465,
	466, 467, 474, 481, 482, 484, 490, 491, 492, 493,
	498, 505, 524, 88, 89, 96, 102, 108, 112, 116,
	119, 125, 128, 131, 133, 134, 135, 138, 149, 152,
	153, 154, 155, 165, 166, 167, 169, 172, 173, 174,
	175, 176, 179, 181, 182, 183, 184, 185, 186, 193,
	196, 202, 203, 204, 205, 206, 207, 208, 210, 211,
	212, 213, 219, 222, 228, 229, 238, 245, 248, 512,
	500, 0, 457, 515, 430, 447, 523, 448, 451, 488,
	415, 470, 171, 445, 0, 434, 410, 441, 411, 432,
	459, 115, 463, 429, 502, 473, 514, 143, 435, 521,
	145, 479, 0, 217, 159, 0, 0, 461, 504, 468,
	497, 456, 489, 420, 478, 516, 446, 486, 517, 0,
	0, 0, 83, 84, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 483, 511, 443, 485, 487,
	409, 480, 0, 413, 416, 522, 507, 438, 439, 0,
	0, 0, 0, 0, 0, 0, 460, 469, 494, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 436, 0,
	477, 0, 0, 0, 417, 414, 0, 0, 458, 0,
	0, 0, 419, 0, 437, 495, 0, 407, 124, 499,
	506, 455, 273, 510, 453, 452, 513, 190, 0, 221,
	127, 142, 101, 139, 87, 97, 0, 126, 168, 197,
	201, 503, 433, 442, 109, 440, 199, 178, 237, 476,
	180, 198, 146, 227, 191, 236, 246, 247, 224, 244,
	251, 214, 90, 223, 235, 106, 209, 92, 233, 220,
	157, 136, 137, 91, 0, 195, 114, 122, 111, 170,
	230, 231, 110, 254, 98, 243, 94, 99, 242, 164,
	226, 234, 158, 151, 93, 232, 156, 150, 141, 118,
	129, 188, 148, 189, 130, 161, 160, 162, 0, 412,
	0, 218, 240, 255, 103, 428, 225, 249, 250, 0,
	0, 104, 123, 117, 187, 121, 163, 100, 132, 215,
	140, 147, 194, 253, 177, 200, 107, 239, 216, 424,
	427, 422, 423, 471, 472, 518, 519, 520, 496, 418,
	0, 425, 426, 0, 501, 508, 509, 475, 86, 95,
	144, 252, 192, 120, 241, 408, 421, 113, 431, 0,
	0, 444, 449, 450, 462, 464, 465, 466, 467, 474,
	481, 482, 484, 490, 491, 492, 493, 498, 505, 524,
	88, 89, 96, 102, 108, 112, 116, 119, 125, 128,
	131, 133, 134, 135, 138, 149, 152, 153, 154, 155,
	165, 166, 167, 169, 172, 173, 174, 175, 176, 179,
	181, 182, 183, 184, 185, 186, 193, 196, 202, 203,
	204, 205, 206, 207, 208, 210, 211, 212, 213, 219,
	222, 228, 229, 238, 245, 248, 512, 500, 0, 457,
	515, 430, 447, 523, 448, 451, 488, 415, 470, 171,
	445, 0, 434, 410, 441, 411, 432, 459, 115, 463,
	429, 502, 473, 514, 143, 435, 521, 145, 479, 0,
	217, 159, 0, 0, 461, 504, 468, 497, 456, 489,
	420, 478, 516, 446, 486, 517, 0, 0, 0, 83,
	84, 85, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 483, 511, 443, 485, 487, 409, 480, 0,
	413, 416, 522, 507, 438, 439, 0, 0, 0, 0,
	0, 0, 0, 460, 469, 494, 454, 0, 0, 0,
	0, 0, 0, 0, 0, 436, 0, 477, 0, 0,
	0, 417, 414, 0, 0, 458, 0, 0, 0, 419,
	0, 437, 495, 0, 407, 124, 499, 506, 455, 273,
	510, 453, 452, 513, 190, 0, 221, 127, 142, 101,
	139, 87, 97, 0, 126, 168, 197, 201, 503, 433,
	442, 109, 440, 199, 178, 237, 476, 180, 198, 146,
	227, 191, 236, 246, 247, 224, 244, 251, 214, 90,
	223, 235, 106, 209, 92, 233, 220, 157, 136, 137,
	91, 0, 195, 114, 122, 111, 170, 230, 231, 110,
	254, 98, 243, 94, 405, 242, 164, 226, 234, 158,
	151, 93, 232, 156, 150, 141, 118, 129, 188, 148,
	189, 130, 161, 160, 162, 0, 412, 0, 218, 240,
	255, 103, 428, 225, 249, 250, 0, 0, 104, 123,
	117, 187, 121, 406, 404, 132, 215, 140, 147, 194,
	253, 177, 200, 107, 239, 216, 424, 427, 422, 423,
	471, 472, 518, 519, 520, 496, 418, 0, 425, 426,
	0, 501, 508, 509, 475, 86, 95, 144, 252, 192,
	120, 241, 408, 421, 113, 431, 0, 0, 444, 449,
	450, 462, 464, 465, 466, 467, 474, 481, 482, 484,
	490, 491, 492, 493, 498, 505, 524, 88, 89, 96,
	102, 108, 112, 116, 119, 125, 128, 131, 133, 134,
	135, 138, 149, 152, 153, 154, 155, 165, 166, 167,
	169, 172, 173, 174, 175, 176, 179, 181, 182, 183,
	184, 185, 186, 193, 196, 202, 203, 204, 205, 206,
	207, 208, 210, 211, 212, 213, 219, 222, 228, 229,
	238, 245, 248, 512, 500, 0, 457, 515, 430, 447,
	523, 448, 451, 488, 415, 470, 171, 445, 0, 434,
	410, 441, 411, 432, 459, 115, 463, 429, 502, 473,
	514, 143, 435, 521, 145, 479, 0, 217, 159, 0,
	0, 461, 504, 468, 497, 456, 489, 420, 478, 516,
	446, 486, 517, 0, 0, 0, 83, 84, 85, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 0, 483,
	511, 443, 485, 487, 409, 480, 0, 413, 416, 522,
	507, 438, 439, 0, 0, 0, 0, 0, 0, 0,
	460, 469, 494, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 436, 0, 477, 0, 0, 0, 417, 414,
	0, 0, 458, 0, 0, 0, 419, 0, 437, 495,
	0, 407, 124, 499, 506, 455, 273, 510, 453, 452,
	513, 190, 0, 221, 127, 142, 101, 139, 87, 97,
	0, 126, 168, 197, 201, 503, 433, 442, 109, 440,
	199, 178, 237, 476, 180, 198, 146, 227, 191, 236,
	246, 247, 224, 244, 251, 214, 90, 223, 720, 106,
	209, 92, 233, 220, 157, 136, 137, 91, 0, 195,
	114, 122, 111, 170, 230, 231, 110, 254, 98, 243,
	94, 405, 242, 164, 226, 234, 158, 151, 93, 232,
	156, 150, 141, 118, 129, 188, 148, 189, 130, 161,
	160, 162, 0, 412, 0, 218, 240, 255, 103, 428,
	225, 249, 250, 0, 0, 104, 123, 117, 187, 121,
	406, 404, 132, 215, 140, 147, 194, 253, 177, 200,
	107, 239, 216, 424, 427, 422, 423, 471, 472, 518,
	519, 520, 496, 418, 0, 425, 426, 0, 501, 508,
	509, 475, 86, 95, 144, 252, 192, 120, 241, 408,
	421, 113, 431, 0, 0, 444, 449, 450, 462, 464,
	465, 466, 467, 474, 481, 482, 484, 490, 491, 492,
	493, 498, 505, 524, 88, 89, 96, 102, 108, 112,
	116, 119, 125, 128, 131, 133, 134, 135, 138, 149,
	152, 153, 154, 155, 165, 166, 167, 169, 172, 173,
	174, 175, 176, 179, 181, 182, 183, 184, 185, 186,
	193, 196, 202, 203, 204, 205, 206, 207, 208, 210,
	211, 212, 213, 219, 222, 228, 229, 238, 245, 248,
	512, 500, 0, 457, 515, 430, 447, 523, 448, 451,
	488, 415, 470, 171, 445, 0, 434, 410, 441, 411,
	432, 459, 115, 463, 429, 502, 473, 514, 143, 435,
	521, 145, 479, 0, 217, 159, 0, 0, 461, 504,
	468, 497, 456, 489, 420, 478, 516, 446, 486, 517,
	0, 0, 0, 83, 84, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 483, 511, 443, 485,
	487, 409, 480, 0, 413, 416, 522, 507, 438, 439,
	0, 0, 0, 0, 0, 0, 0, 460, 469, 494,
	454, 0, 0, 0, 0, 0, 0, 0, 0, 436,
	0, 477, 0, 0, 0, 417, 414, 0, 0, 458,
	0, 0, 0, 419, 0, 437, 495, 0, 407, 124,
	499, 506, 455, 273, 510, 453, 452, 513, 190, 0,
	221, 127, 142, 101, 139, 87, 97, 0, 126, 168,
	197, 201, 503, 433, 442, 109, 440, 199, 178, 237,
	476, 180, 198, 146, 227, 191, 236, 246, 247, 224,
	244, 251, 214, 90, 223, 396, 106, 209, 92, 233,
	220, 157, 136, 137, 91, 0, 195, 114, 122, 111,
	170, 230, 231, 110, 254, 98, 243, 94, 405, 242,
	164, 226, 234, 158, 151, 93, 232, 156, 150, 141,
	118, 129, 188, 148, 189, 130, 161, 160, 162, 0,
	412, 0, 218, 240, 255, 103, 428, 225, 249, 250,
	0, 0, 104, 123, 117, 187, 121, 406, 404, 399,
	398, 140, 147, 194, 253, 177, 200, 107, 239, 216,
	424, 427, 422, 423, 471, 472, 518, 519, 520, 496,
	418, 0, 425, 426, 0, 501, 508, 509, 475, 86,
	95, 144, 252, 192, 120, 241, 408, 421, 113, 431,
	0, 0, 444, 449, 450, 462, 464, 465, 466, 467,
	474, 481, 482, 484, 490, 491, 492, 493, 498, 505,
	524, 88, 89, 96, 102, 108, 112, 116, 119, 125,
	128, 131, 133, 134, 135, 138, 149, 152, 153, 154,
	155, 165, 166, 167, 169, 172, 173, 174, 175, 176,
	179, 181, 182, 183, 184, 185, 186, 193, 196, 202,
	203, 204, 205, 206, 207, 208, 210, 211, 212, 213,
	219, 222, 228, 229, 238, 245, 248, 171, 0, 0,
	898, 0, 330, 0, 0, 0, 115, 0, 327, 0,
	0, 0, 143, 899, 370, 145, 0, 0, 217, 159,
	0, 0, 0, 0, 361, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 83, 84, 85,
	349, 348, 351, 352, 353, 354, 0, 0, 105, 350,
	355, 356, 357, 0, 0, 0, 325, 342, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 321, 0, 0, 0, 384, 0, 341, 0, 0,
	336, 337, 338, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 383, 0, 0, 273, 0, 0,
	381, 0, 190, 0, 221, 127, 142, 101, 139, 87,
	97, 0, 126, 168, 197, 201, 0, 0, 0, 109,
	0, 199, 178, 237, 0, 180, 198, 146, 227, 191,
	236, 246, 247, 224, 244, 251, 214, 90, 223, 235,
	106, 209, 92, 233, 220, 157, 136, 137, 91, 0,
	195, 114, 122, 111, 170, 230, 231, 110, 254, 98,
	243, 94, 99, 242, 164, 226, 234, 158, 151, 93,
	232, 156, 150, 141, 118, 129, 188, 148, 189, 130,
	161, 160, 162, 0, 0, 0, 218, 240, 255, 103,
	0, 225, 249, 250, 0, 0, 104, 123, 117, 187,
	121, 163, 100, 132, 215, 140, 147, 194, 253, 177,
	200, 107, 239, 216, 371, 382, 377, 378, 375, 376,
	374, 373, 372, 385, 363, 364, 365, 366, 368, 0,
	379, 380, 367, 86, 95, 144, 252, 192, 120, 241,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 89, 96, 102, 108,
	112, 116, 119, 125, 128, 131, 133, 134, 135, 138,
	149, 152, 153, 154, 155, 165, 166, 167, 169, 172,
	173, 174, 175, 176, 179, 181, 182, 183, 184, 185,
	186, 193, 196, 202, 203, 204, 205, 206, 207, 208,
	210, 211, 212, 213, 219, 222, 228, 229, 238, 245,
	248, 171, 0, 0, 0, 0, 330, 0, 0, 0,
	115, 0, 327, 0, 0, 0, 143, 0, 370, 145,
	0, 0, 217, 159, 0, 0, 0, 0, 361, 362,
	0, 0, 0, 0, 0, 0, 973, 0, 55, 0,
	0, 83, 84, 85, 349, 348, 351, 352, 353, 354,
	0, 0, 105, 350, 355, 356, 357, 974, 0, 0,
	325, 342, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 0, 0, 0, 0, 384,
	0, 341, 0, 0, 336, 337, 338, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 383, 0,
	0, 273, 0, 0, 381, 0, 190, 0, 221, 127,
	142, 101, 139, 87, 97, 0, 126, 168, 197, 201,
	0, 0, 0, 109, 0, 199, 178, 237, 0, 180,
	198, 146, 227, 191, 236, 246, 247, 224, 244, 251,
	214, 90, 223, 235, 106, 209, 92, 233, 220, 157,
	136, 137, 91, 0, 195, 114, 122, 111, 170, 230,
	231, 110, 254, 98, 243, 94, 99, 242, 164, 226,
	234, 158, 151, 93, 232, 156, 150, 141, 118, 129,
	188, 148, 189, 130, 161, 160, 162, 0, 0, 0,
	218, 240, 255, 103, 0, 225, 249, 250, 0, 0,
	104, 123, 117, 187, 121, 163, 100, 132, 215, 140,
	147, 194, 253, 177, 200, 107, 239, 216, 371, 382,
	377, 378, 375, 376, 374, 373, 372, 385, 363, 364,
	365, 366, 368, 0, 379, 380, 367, 86, 95, 144,
	252, 192, 120, 241, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	89, 96, 102, 108, 112, 116, 119, 125, 128, 131,
	133, 134, 135, 138, 149, 152, 153, 154, 155, 165,
	166, 167, 169, 172, 173, 174, 175, 176, 179, 181,
	182, 183, 184, 185, 186, 193, 196, 202, 203, 204,
	205, 206, 207, 208, 210, 211, 212, 213, 219, 222,
	228, 229, 238, 245, 248, 171, 0, 0, 0, 0,
	330, 0, 0, 0, 115, 0, 327, 0, 0, 0,
	143, 0, 370, 145, 0, 0, 217, 159, 0, 0,
	0, 0, 361, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 592, 83, 84, 85, 349, 348,
	351, 352, 353, 354, 0, 0, 105, 350, 355, 356,
	357, 0, 0, 0, 325, 342, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 340, 0,
	0, 0, 0, 384, 0, 341, 0, 0, 336, 337,
	338, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 383, 0, 0, 273, 0, 0, 381, 0,
	190, 0, 221, 127, 142, 101, 139, 87, 97, 0,
	126, 168, 197, 201, 0, 0, 0, 109, 0, 199,
	178, 237, 0, 180, 198, 146, 227, 191, 236, 246,
	247, 224, 244, 251, 214, 90, 223, 235, 106, 209,
	92, 233, 220, 157, 136, 137, 91, 0, 195, 114,
	122, 111, 170, 230, 231, 110, 254, 98, 243, 94,
	99, 242, 164, 226, 234, 158, 151, 93, 232, 156,
	150, 141, 118, 129, 188, 148, 189, 130, 161, 160,
	162, 0, 0, 0, 218, 240, 255, 103, 0, 225,
	249, 250, 0, 0, 104, 123, 117, 187, 121, 163,
	100, 132, 215, 140, 147, 194, 253, 177, 200, 107,
	239, 216, 371, 382, 377, 378, 375, 376, 374, 373,
	372, 385, 363, 364, 365, 366, 368, 0, 379, 380,
	367, 86, 95, 144, 252, 192, 120, 241, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 89, 96, 102, 108, 112, 116,
	119, 125, 128, 131, 133, 134, 135, 138, 149, 152,
	153, 154, 155, 165, 166, 167, 169, 172, 173, 174,
	175, 176, 179, 181, 182, 183, 184, 185, 186, 193,
	196, 202, 203, 204, 205, 206, 207, 208, 210, 211,
	212, 213, 219, 222, 228, 229, 238, 245, 248, 171,
	0, 0, 0, 0, 330, 0, 0, 0, 115, 0,
	327, 0, 0, 0, 143, 0, 370, 145, 0, 0,
	217, 159, 0, 0, 0, 0, 361, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 83,
	84, 85, 349, 348, 351, 352, 353, 354, 0, 0,
	105, 350, 355, 356, 357, 0, 0, 0, 325, 342,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 321, 0, 0, 0, 384, 0, 341,
	0, 0, 336, 337, 338, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 383, 0, 0, 273,
	0, 0, 381, 0, 190, 0, 221, 127, 142, 101,
	139, 87, 97, 0, 126, 168, 197, 201, 0, 0,
	0, 109, 0, 199, 178, 237, 0, 180, 198, 146,
	227, 191, 236, 246, 247, 224, 244, 251, 214, 90,
	223, 235, 106, 209, 92, 233, 220, 157, 136, 137,
	91, 0, 195, 114, 122, 111, 170, 230, 231, 110,
	254, 98, 243, 94, 99, 242, 164, 226, 234, 158,
	151, 93, 232, 156, 150, 141, 118, 129, 188, 148,
	189, 130, 161, 160, 162, 0, 0, 0, 218, 240,
	255, 103, 0, 225, 249, 250, 0, 0, 104, 123,
	117, 187, 121, 163, 100, 132, 215, 140, 147, 194,
	253, 177, 200, 107, 239, 216, 371, 382, 377, 378,
	375, 376, 374, 373, 372, 385, 363, 364, 365, 366,
	368, 0, 379, 380, 367, 86, 95, 144, 252, 192,
	120, 241, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 89, 96,
	102, 108, 112, 116, 119, 125, 128, 131, 133, 134,
	135, 138, 149, 152, 153, 154, 155, 165, 166, 167,
	169, 172, 173, 174, 175, 176, 179, 181, 182, 183,
	184, 185, 186, 193, 196, 202, 203, 204, 205, 206,
	207, 208, 210, 211, 212, 213, 219, 222, 228, 229,
	238, 245, 248, 171, 0, 0, 0, 0, 330, 0,
	0, 0, 115, 0, 327, 0, 0, 0, 143, 0,
	370, 145, 0, 0, 217, 159, 0, 0, 0, 0,
	361, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 83, 84, 85, 349, 914, 351, 352,
	353, 354, 0, 0, 105, 350, 355, 356, 357, 0,
	0, 0, 325, 342, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 321, 0, 0,
	0, 384, 0, 341, 0, 0, 336, 337, 338, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	383, 0, 0, 273, 0, 0, 381, 0, 190, 0,
	221, 127, 142, 101, 139, 87, 97, 0, 126, 168,
	197, 201, 0, 0, 0, 109, 0, 199, 178, 237,
	0, 180, 198, 146, 227, 191, 236, 246, 247, 224,
	244, 251, 214, 90, 223, 235, 106, 209, 92, 233,
	220, 157, 136, 137, 91, 0, 195, 114, 122, 111,
	170, 230, 231, 110, 254, 98, 243, 94, 99, 242,
	164, 226, 234, 158, 151, 93, 232, 156, 150, 141,
	118, 129, 188, 148, 189, 130, 161, 160, 162, 0,
	0, 0, 218, 240, 255, 103, 0, 225, 249, 250,
	0, 0, 104, 123, 117, 187, 121, 163, 100, 132,
	215, 140, 147, 194, 253, 177, 200, 107, 239, 216,
	371, 382, 377, 378, 375, 376, 374, 373, 372, 385,
	363, 364, 365, 366, 368, 0, 379, 380, 367, 86,
	95, 144, 252, 192, 120, 241, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 89, 96, 102, 108, 112, 116, 119, 125,
	128, 131, 133, 134, 135, 138, 149, 152, 153, 154,
	155, 165, 166, 167, 169, 172, 173, 174, 175, 176,
	179, 181, 182, 183, 184, 185, 186, 193, 196, 202,
	203, 204, 205, 206, 207, 208, 210, 211, 212, 213,
	219, 222, 228, 229, 238, 245, 248, 171, 0, 0,
	0, 0, 330, 0, 0, 0, 115, 0, 327, 0,
	0, 0, 143, 0, 370, 145, 0, 0, 217, 159,
	0, 0, 0, 0, 361, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 83, 84, 85,
	349, 911, 351, 352, 353, 354, 0, 0, 105, 350,
	355, 356, 357, 0, 0, 0, 325, 342, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 321, 0, 0, 0, 384, 0, 341, 0, 0,
	336, 337, 338, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 383, 0, 0, 273, 0, 0,
	381, 0, 190, 0, 221, 127, 142, 101, 139, 87,
	97, 0, 126, 168, 197, 201, 0, 0, 0, 109,
	0, 199, 178, 237, 0, 180, 198, 146, 227, 191,
	236, 246, 247, 224, 244, 251, 214, 90, 223, 235,
	106, 209, 92, 233, 220, 157, 136, 137, 91, 0,
	195, 114, 122, 111, 170, 230, 231, 110, 254, 98,
	243, 94, 99, 242, 164, 226, 234, 158, 151, 93,
	232, 156, 150, 141, 118, 129, 188, 148, 189, 130,
	161, 160, 162, 0, 0, 0, 218, 240, 255, 103,
	0, 225, 249, 250, 0, 0, 104, 123, 117, 187,
	121, 163, 100, 132, 215, 140, 147, 194, 253, 177,
	200, 107, 239, 216, 371, 382, 377, 378, 375, 376,
	374, 373, 372, 385, 363, 364, 365, 366, 368, 0,
	379, 380, 367, 86, 95, 144, 252, 192, 120, 241,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 89, 96, 102, 108,
	112, 116, 119, 125, 128, 131, 133, 134, 135, 138,
	149, 152, 153, 154, 155, 165, 166, 167, 169, 172,
	173, 174, 175, 176, 179, 181, 182, 183, 184, 185,
	186, 193, 196, 202, 203, 204, 205, 206, 207, 208,
	210, 211, 212, 213, 219, 222, 228, 229, 238, 245,
	248, 25, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 330, 0,
	0, 0, 115, 0, 327, 0, 0, 0, 143, 0,
	370, 145, 0, 0, 217, 159, 0, 0, 0, 0,
	361, 362, 0, 0, 0, 0, 0, 0, 0, 0,
	55, 0, 0, 83, 84, 85, 349, 348, 351, 352,
	353, 354, 0, 0, 105, 350, 355, 356, 357, 0,
	0, 0, 325, 342, 0, 369, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 339, 340, 0, 0, 0,
	0, 384, 0, 341, 0, 0, 336, 337, 338, 343,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	383, 0, 0, 273, 0, 0, 381, 0, 190, 0,
	221, 127, 142, 101, 139, 87, 97, 0, 126, 168,
	197, 201, 0, 0, 0, 109, 0, 199, 178, 237,
	0, 180, 198, 146, 227, 191, 236, 246, 247, 224,
	244, 251, 214, 90, 223, 235, 106, 209, 92, 233,
	220, 157, 136, 137, 91, 0, 195, 114, 122, 111,
	170, 230, 231, 110, 254, 98, 243, 94, 99, 242,
	164, 226, 234, 158, 151, 93, 232, 156, 150, 141,
	118, 129, 188, 148, 189, 130, 161, 160, 162, 0,
	0, 0, 218, 240, 255, 103, 0, 225, 249, 250,
	0, 0, 104, 123, 117, 187, 121, 163, 100, 132,
	215, 140, 147, 194, 253, 177, 200, 107, 239, 216,
	371, 382, 377, 378, 375, 376, 374, 373, 372, 385,
	363, 364, 365, 366, 368, 0, 379, 380, 367, 86,
	95, 144, 252, 192, 120, 241, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 89, 96, 102, 108, 112, 116, 119, 125,
	128, 131, 133, 134, 135, 138, 149, 152, 153, 154,
	155, 165, 166, 167, 169, 172, 173, 174, 175, 176,
	179, 181, 182, 183, 184, 185, 186, 193, 196, 202,
	203, 204, 205, 206, 207, 208, 210, 211, 212, 213,
	219, 222, 228, 229, 238, 245, 248, 171, 0, 0,
	0, 0, 330, 0, 0, 0, 115, 0, 327, 0,
	0, 0, 143, 0, 370, 145, 0, 0, 217, 159,
	0, 0, 0, 0, 361, 362, 0, 0, 0, 0,
	0, 0, 0, 0, 55, 0, 0, 83, 84, 85,
	349, 348, 351, 352, 353, 354, 0, 0, 105, 350,
	355, 356, 357, 0, 0, 0, 325, 342, 0, 369,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 339,
	340, 0, 0, 0, 0, 384, 0, 341, 0, 0,
	336, 337, 338, 343, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 383, 0, 0, 273, 0, 0,
	381, 0, 190, 0, 221, 127, 142, 101, 139, 87,
	97, 0, 126, 168, 197, 201, 0, 0, 0, 109,
	0, 199, 178, 237, 0, 180, 198, 146, 227, 191,
	236, 246, 247, 224, 244, 251, 214, 90, 223, 235,
	106, 209, 92, 233, 220, 157, 136, 137, 91, 0,
	195, 114, 122, 111, 170, 230, 231, 110, 254, 98,
	243, 94, 99, 242, 164, 226, 234, 158, 151, 93,
	232, 156, 150, 141, 118, 129, 188, 148, 189, 130,
	161, 160, 162, 0, 0, 0, 218, 240, 255, 103,
	0, 225, 249, 250, 0, 0, 104, 123, 117, 187,
	121, 163, 100, 132, 215, 140, 147, 194, 253, 177,
	200, 107, 239, 216, 371, 382, 377, 378, 375, 376,
	374, 373, 372, 385, 363, 364, 365, 366, 368, 0,
	379, 380, 367, 86, 95, 144, 252, 192, 120, 241,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 89, 96, 102, 108,
	112, 116, 119, 125, 128, 131, 133, 134, 135, 138,
	149, 152, 153, 154, 155, 165, 166, 167, 169, 172,
	173, 174, 175, 176, 179, 181, 182, 183, 184, 185,
	186, 193, 196, 202, 203, 204, 205, 206, 207, 208,
	210, 211, 212, 213, 219, 222, 228, 229, 238, 245,
	248, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 143, 0, 370, 145,
	0, 0, 217, 159, 0, 0, 0, 0, 361, 362,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 83, 84, 85, 349, 348, 351, 352, 353, 354,
	0, 0, 105, 350, 355, 356, 357, 0, 0, 0,
	0, 342, 0, 369, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 339, 340, 0, 0, 0, 0, 384,
	0, 341, 0, 0, 336, 337, 338, 343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 383, 0,
	0, 273, 0, 0, 381, 0, 190, 0, 221, 127,
	142, 101, 139, 87, 97, 0, 126, 168, 197, 201,
	0, 0, 0, 109, 0, 199, 178, 237, 1541, 180,
	198, 146, 227, 191, 236, 246, 247, 224, 244, 251,
	214, 90, 223, 235, 106, 209, 92, 233, 220, 157,
	136, 137, 91, 0, 195, 114, 122, 111, 170, 230,
	231, 110, 254, 98, 243, 94, 99, 242, 164, 226,
	234, 158, 151, 93, 232, 156, 150, 141, 118, 129,
	188, 148, 189, 130, 161, 160, 162, 0, 0, 0,
	218, 240, 255, 103, 0, 225, 249, 250, 0, 0,
	104, 123, 117, 187, 121, 163, 100, 132, 215, 140,
	147, 194, 253, 177, 200, 107, 239, 216, 371, 382,
	377, 378, 375, 376, 374, 373, 372, 385, 363, 364,
	365, 366, 368, 0, 379, 380, 367, 86, 95, 144,
	252, 192, 120, 241, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	89, 96, 102, 108, 112, 116, 119, 125, 128, 131,
	133, 134, 135, 138, 149, 152, 153, 154, 155, 165,
	166, 167, 169, 172, 173, 174, 175, 176, 179, 181,
	182, 183, 184, 185, 186, 193, 196, 202, 203, 204,
	205, 206, 207, 208, 210, 211, 212, 213, 219, 222,
	228, 229, 238, 245, 248, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	143, 0, 370, 145, 0, 0, 217, 159, 0, 0,
	0, 0, 361, 362, 0, 0, 0, 0, 0, 0,
	0, 0, 55, 0, 592, 83, 84, 85, 349, 348,
	351, 352, 353, 354, 0, 0, 105, 350, 355, 356,
	357, 0, 0, 0, 0, 342, 0, 369, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 339, 340, 0,
	0, 0, 0, 384, 0, 341, 0, 0, 336, 337,
	338, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 383, 0, 0, 273, 0, 0, 381, 0,
	190, 0, 221, 127, 142, 101, 139, 87, 97, 0,
	126, 168, 197, 201, 0, 0, 0, 109, 0, 199,
	178, 237, 0, 180, 198, 146, 227, 191, 236, 246,
	247, 224, 244, 251, 214, 90, 223, 235, 106, 209,
	92, 233, 220, 157, 136, 137, 91, 0, 195, 114,
	122, 111, 170, 230, 231, 110, 254, 98, 243, 94,
	99, 242, 164, 226, 234, 158, 151, 93, 232, 156,
	150, 141, 118, 129, 188, 148, 189, 130, 161, 160,
	162, 0, 0, 0, 218, 240, 255, 103, 0, 225,
	249, 250, 0, 0, 104, 123, 117, 187, 121, 163,
	100, 132, 215, 140, 147, 194, 253, 177, 200, 107,
	239, 216, 371, 382, 377, 378, 375, 376, 374, 373,
	372, 385, 363, 364, 365, 366, 368, 0, 379, 380,
	367, 86, 95, 144, 252, 192, 120, 241, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 89, 96, 102, 108, 112, 116,
	119, 125, 128, 131, 133, 134, 135, 138, 149, 152,
	153, 154, 155, 165, 166, 167, 169, 172, 173, 174,
	175, 176, 179, 181, 182, 183, 184, 185, 186, 193,
	196, 202, 203, 204, 205, 206, 207, 208, 210, 211,
	212, 213, 219, 222, 228, 229, 238, 245, 248, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 143, 0, 370, 145, 0, 0,
	217, 159, 0, 0, 0, 0, 361, 362, 0, 0,
	0, 0, 0, 0, 0, 0, 55, 0, 0, 83,
	84, 85, 349, 348, 351, 352, 353, 354, 0, 0,
	105, 350, 355, 356, 357, 0, 0, 0, 0, 342,
	0, 369, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 339, 340, 0, 0, 0, 0, 384, 0, 341,
	0, 0, 336, 337, 338, 343, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 383, 0, 0, 273,
	0, 0, 381, 0, 190, 0, 221, 127, 142, 101,
	139, 87, 97, 0, 126, 168, 197, 201, 0, 0,
	0, 109, 0, 199, 178, 237, 0, 180, 198, 146,
	227, 191, 236, 246, 247, 224, 244, 251, 214, 90,
	223, 235, 106, 209, 92, 233, 220, 157, 136, 137,
	91, 0, 195, 114, 122, 111, 170, 230, 231, 110,
	254, 98, 243, 94, 99, 242, 164, 226, 234, 158,
	151, 93, 232, 156, 150, 141, 118, 129, 188, 148,
	189, 130, 161, 160, 162, 0, 0, 0, 218, 240,
	255, 103, 0, 225, 249, 250, 0, 0, 104, 123,
	117, 187, 121, 163, 100, 132, 215, 140, 147, 194,
	253, 177, 200, 107, 239, 216, 371, 382, 377, 378,
	375, 376, 374, 373, 372, 385, 363, 364, 365, 366,
	368, 0, 379, 380, 367, 86, 95, 144, 252, 192,
	120, 241, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 89, 96,
	102, 108, 112, 116, 119, 125, 128, 131, 133, 134,
	135, 138, 149, 152, 153, 154, 155, 165, 166, 167,
	169, 172, 173, 174, 175, 176, 179, 181, 182, 183,
	184, 185, 186, 193, 196, 202, 203, 204, 205, 206,
	207, 208, 210, 211, 212, 213, 219, 222, 228, 229,
	238, 245, 248, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 0, 0, 0, 0, 143, 0,
	0, 145, 0, 0, 217, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 84, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 627, 626, 636, 637, 629, 630, 631, 632, 633,
	634, 635, 628, 0, 0, 638, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 273, 0, 0, 0, 0, 190, 0,
	221, 127, 142, 101, 139, 87, 97, 0, 126, 168,
	197, 201, 0, 0, 0, 109, 0, 199, 178, 237,
	0, 180, 198, 146, 227, 191, 236, 246, 247, 224,
	244, 251, 214, 90, 223, 235, 106, 209, 92, 233,
	220, 157, 136, 137, 91, 0, 195, 114, 122, 111,
	170, 230, 231, 110, 254, 98, 243, 94, 99, 242,
	164, 226, 234, 158, 151, 93, 232, 156, 150, 141,
	118, 129, 188, 148, 189, 130, 161, 160, 162, 0,
	0, 0, 218, 240, 255, 103, 0, 225, 249, 250,
	0, 0, 104, 123, 117, 187, 121, 163, 100, 132,
	215, 140, 147, 194, 253, 177, 200, 107, 239, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	95, 144, 252, 192, 120, 241, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 89, 96, 102, 108, 112, 116, 119, 125,
	128, 131, 133, 134, 135, 138, 149, 152, 153, 154,
	155, 165, 166, 167, 169, 172, 173, 174, 175, 176,
	179, 181, 182, 183, 184, 185, 186, 193, 196, 202,
	203, 204, 205, 206, 207, 208, 210, 211, 212, 213,
	219, 222, 228, 229, 238, 245, 248, 171, 0, 0,
	0, 615, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 143, 0, 0, 145, 0, 0, 217, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 83, 84, 85,
	0, 617, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 0, 0, 612, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 273, 0, 0,
	0, 0, 190, 0, 221, 127, 142, 101, 139, 87,
	97, 0, 126, 168, 197, 201, 0, 0, 0, 109,
	0, 199, 178, 237, 0, 180, 198, 146, 227, 191,
	236, 246, 247, 224, 244, 251, 214, 90, 223, 235,
	106, 209, 92, 233, 220, 157, 136, 137, 91, 0,
	195, 114, 122, 111, 170, 230, 231, 110, 254, 98,
	243, 94, 99, 242, 164, 226, 234, 158, 151, 93,
	232, 156, 150, 141, 118, 129, 188, 148, 189, 130,
	161, 160, 162, 0, 0, 0, 218, 240, 255, 103,
	0, 225, 249, 250, 0, 0, 104, 123, 117, 187,
	121, 163, 100, 132, 215, 140, 147, 194, 253, 177,
	200, 107, 239, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 95, 144, 252, 192, 120, 241,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 89, 96, 102, 108,
	112, 116, 119, 125, 128, 131, 133, 134, 135, 138,
	149, 152, 153, 154, 155, 165, 166, 167, 169, 172,
	173, 174, 175, 176, 179, 181, 182, 183, 184, 185,
	186, 193, 196, 202, 203, 204, 205, 206, 207, 208,
	210, 211, 212, 213, 219, 222, 228, 229, 238, 245,
	248, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 143, 0, 0, 145,
	0, 0, 217, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 83, 84, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 77, 78,
	0, 74, 0, 0, 0, 79, 190, 0, 221, 127,
	142, 101, 139, 87, 97, 0, 126, 168, 197, 201,
	0, 0, 0, 109, 0, 199, 178, 237, 0, 180,
	198, 146, 227, 191, 236, 246, 247, 224, 244, 251,
	214, 90, 223, 235, 106, 209, 92, 233, 220, 157,
	136, 137, 91, 0, 195, 114, 122, 111, 170, 230,
	231, 110, 254, 98, 243, 94, 99, 242, 164, 226,
	234, 158, 151, 93, 232, 156, 150, 141, 118, 129,
	188, 148, 189, 130, 161, 160, 162, 0, 0, 0,
	218, 240, 255, 103, 0, 225, 249, 250, 0, 0,
	104, 123, 117, 187, 121, 163, 100, 132, 215, 140,
	147, 194, 253, 177, 200, 107, 239, 216, 0, 76,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 95, 144,
	252, 192, 120, 241, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	89, 96, 102, 108, 112, 116, 119, 125, 128, 131,
	133, 134, 135, 138, 149, 152, 153, 154, 155, 165,
	166, 167, 169, 172, 173, 174, 175, 176, 179, 181,
	182, 183, 184, 185, 186, 193, 196, 202, 203, 204,
	205, 206, 207, 208, 210, 211, 212, 213, 219, 222,
	228, 229, 238, 245, 248, 171, 0, 0, 0, 956,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	143, 0, 0, 145, 0, 0, 217, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 83, 84, 85, 0, 958,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 273, 0, 0, 0, 0,
	190, 0, 221, 127, 142, 101, 139, 87, 97, 0,
	126, 168, 197, 201, 0, 0, 0, 109, 0, 199,
	178, 237, 0, 180, 198, 146, 227, 191, 236, 246,
	247, 224, 244, 251, 214, 90, 223, 235, 106, 209,
	92, 233, 220, 157, 136, 137, 91, 0, 195, 114,
	122, 111, 170, 230, 231, 110, 254, 98, 243, 94,
	99, 242, 164, 226, 234, 158, 151, 93, 232, 156,
	150, 141, 118, 129, 188, 148, 189, 130, 161, 160,
	162, 0, 0, 0, 218, 240, 255, 103, 0, 225,
	249, 250, 0, 0, 104, 123, 117, 187, 121, 163,
	100, 132, 215, 140, 147, 194, 253, 177, 200, 107,
	239, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 95, 144, 252, 192, 120, 241, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 89, 96, 102, 108, 112, 116,
	119, 125, 128, 131, 133, 134, 135, 138, 149, 152,
	153, 154, 155, 165, 166, 167, 169, 172, 173, 174,
	175, 176, 179, 181, 182, 183, 184, 185, 186, 193,
	196, 202, 203, 204, 205, 206, 207, 208, 210, 211,
	212, 213, 219, 222, 228, 229, 238, 245, 248, 25,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 143, 0, 0, 145,
	0, 0, 217, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 83, 84, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 273, 0, 0, 0, 0, 190, 0, 221, 127,
	142, 101, 139, 87, 97, 0, 126, 168, 197, 201,
	0, 0, 0, 109, 0, 199, 178, 237, 0, 180,
	198, 146, 227, 191, 236, 246, 247, 224, 244, 251,
	214, 90, 223, 235, 106, 209, 92, 233, 220, 157,
	136, 137, 91, 0, 195, 114, 122, 111, 170, 230,
	231, 110, 254, 98, 243, 94, 99, 242, 164, 226,
	234, 158, 151, 93, 232, 156, 150, 141, 118, 129,
	188, 148, 189, 130, 161, 160, 162, 0, 0, 0,
	218, 240, 255, 103, 0, 225, 249, 250, 0, 0,
	104, 123, 117, 187, 121, 163, 100, 132, 215, 140,
	147, 194, 253, 177, 200, 107, 239, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 95, 144,
	252, 192, 120, 241, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	89, 96, 102, 108, 112, 116, 119, 125, 128, 131,
	133, 134, 135, 138, 149, 152, 153, 154, 155, 165,
	166, 167, 169, 172, 173, 174, 175, 176, 179, 181,
	182, 183, 184, 185, 186, 193, 196, 202, 203, 204,
	205, 206, 207, 208, 210, 211, 212, 213, 219, 222,
	228, 229, 238, 245, 248, 171, 0, 0, 0, 956,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	143, 0, 0, 145, 0, 0, 217, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 83, 84, 85, 0, 958,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 273, 0, 0, 0, 0,
	190, 0, 221, 127, 142, 101, 139, 87, 97, 0,
	126, 168, 197, 201, 0, 0, 0, 109, 0, 199,
	178, 237, 0, 954, 198, 146, 227, 191, 236, 246,
	247, 224, 244, 251, 214, 90, 223, 235, 106, 209,
	92, 233, 220, 157, 136, 137, 91, 0, 195, 114,
	122, 111, 170, 230, 231, 110, 254, 98, 243, 94,
	99, 242, 164, 226, 234, 158, 151, 93, 232, 156,
	150, 141, 118, 129, 188, 148, 189, 130, 161, 160,
	162, 0, 0, 0, 218, 240, 255, 103, 0, 225,
	249, 250, 0, 0, 104, 123, 117, 187, 121, 163,
	100, 132, 215, 140, 147, 194, 253, 177, 200, 107,
	239, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 95, 144, 252, 192, 120, 241, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 89, 96, 102, 108, 112, 116,
	119, 125, 128, 131, 133, 134, 135, 138, 149, 152,
	153, 154, 155, 165, 166, 167, 169, 172, 173, 174,
	175, 176, 179, 181, 182, 183, 184, 185, 186, 193,
	196, 202, 203, 204, 205, 206, 207, 208, 210, 211,
	212, 213, 219, 222, 228, 229, 238, 245, 248, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 143, 0, 0, 145, 0, 0,
	217, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 83,
	84, 85, 0, 0, 849, 0, 0, 850, 0, 0,
	105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 273,
	0, 0, 0, 0, 190, 0, 221, 127, 142, 101,
	139, 87, 97, 0, 126, 168, 197, 201, 0, 0,
	0, 109, 0, 199, 178, 237, 0, 180, 198, 146,
	227, 191, 236, 246, 247, 224, 244, 251, 214, 90,
	223, 235, 106, 209, 92, 233, 220, 157, 136, 137,
	91, 0, 195, 114, 122, 111, 170, 230, 231, 110,
	254, 98, 243, 94, 99, 242, 164, 226, 234, 158,
	151, 93, 232, 156, 150, 141, 118, 129, 188, 148,
	189, 130, 161, 160, 162, 0, 0, 0, 218, 240,
	255, 103, 0, 225, 249, 250, 0, 0, 104, 123,
	117, 187, 121, 163, 100, 132, 215, 140, 147, 194,
	253, 177, 200, 107, 239, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 95, 144, 252, 192,
	120, 241, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 89, 96,
	102, 108, 112, 116, 119, 125, 128, 131, 133, 134,
	135, 138, 149, 152, 153, 154, 155, 165, 166, 167,
	169, 172, 173, 174, 175, 176, 179, 181, 182, 183,
	184, 185, 186, 193, 196, 202, 203, 204, 205, 206,
	207, 208, 210, 211, 212, 213, 219, 222, 228, 229,
	238, 245, 248, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 115, 0, 730, 0, 0, 0, 143, 0,
	0, 145, 0, 0, 217, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 84, 85, 0, 729, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 273, 0, 0, 0, 0, 190, 0,
	221, 127, 142, 101, 139, 87, 97, 0, 126, 168,
	197, 201, 0, 0, 0, 109, 0, 199, 178, 237,
	0, 180, 198, 146, 227, 191, 236, 246, 247, 224,
	244, 251, 214, 90, 223, 235, 106, 209, 92, 233,
	220, 157, 136, 137, 91, 0, 195, 114, 122, 111,
	170, 230, 231, 110, 254, 98, 243, 94, 99, 242,
	164, 226, 234, 158, 151, 93, 232, 156, 150, 141,
	118, 129, 188, 148, 189, 130, 161, 160, 162, 0,
	0, 0, 218, 240, 255, 103, 0, 225, 249, 250,
	0, 0, 104, 123, 117, 187, 121, 163, 100, 132,
	215, 140, 147, 194, 253, 177, 200, 107, 239, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	95, 144, 252, 192, 120, 241, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 89, 96, 102, 108, 112, 116, 119, 125,
	128, 131, 133, 134, 135, 138, 149, 152, 153, 154,
	155, 165, 166, 167, 169, 172, 173, 174, 175, 176,
	179, 181, 182, 183, 184, 185, 186, 193, 196, 202,
	203, 204, 205, 206, 207, 208, 210, 211, 212, 213,
	219, 222, 228, 229, 238, 245, 248, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 143, 0, 0, 145, 0, 0, 217, 159,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 592, 83, 84, 85,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 273, 0, 0,
	0, 0, 190, 0, 221, 127, 142, 101, 139, 87,
	97, 0, 126, 168, 197, 201, 0, 0, 0, 109,
	0, 199, 178, 237, 0, 180, 198, 146, 227, 191,
	236, 246, 247, 224, 244, 251, 214, 90, 223, 235,
	106, 209, 92, 233, 220, 157, 136, 137, 91, 0,
	195, 114, 122, 111, 170, 230, 231, 110, 254, 98,
	243, 94, 99, 242, 164, 226, 234, 158, 151, 93,
	232, 156, 150, 141, 118, 129, 188, 148, 189, 130,
	161, 160, 162, 0, 0, 0, 218, 240, 255, 103,
	0, 225, 249, 250, 0, 0, 104, 123, 117, 187,
	121, 163, 100, 132, 215, 140, 147, 194, 253, 177,
	200, 107, 239, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 86, 95, 144, 252, 192, 120, 241,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 88, 89, 96, 102, 108,
	112, 116, 119, 125, 128, 131, 133, 134, 135, 138,
	149, 152, 153, 154, 155, 165, 166, 167, 169, 172,
	173, 174, 175, 176, 179, 181, 182, 183, 184, 185,
	186, 193, 196, 202, 203, 204, 205, 206, 207, 208,
	210, 211, 212, 213, 219, 222, 228, 229, 238, 245,
	248, 171, 0, 0, 0, 0, 0, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 143, 0, 0, 145,
	0, 0, 217, 159, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 83, 84, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 273, 0, 0, 0, 0, 190, 0, 221, 127,
	142, 101, 139, 87, 97, 0, 126, 168, 197, 201,
	0, 0, 0, 109, 0, 199, 178, 237, 0, 180,
	198, 146, 227, 191, 236, 246, 247, 224, 244, 251,
	214, 90, 223, 235, 106, 209, 92, 233, 220, 157,
	136, 137, 91, 0, 195, 114, 122, 111, 170, 230,
	231, 110, 254, 98, 243, 94, 99, 242, 164, 226,
	234, 158, 151, 93, 232, 156, 150, 141, 118, 129,
	188, 148, 189, 130, 161, 160, 162, 0, 0, 0,
	218, 240, 255, 103, 0, 225, 249, 250, 0, 0,
	104, 123, 117, 187, 121, 163, 100, 132, 215, 140,
	147, 194, 253, 177, 200, 107, 239, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 86, 95, 144,
	252, 192, 120, 241, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 88,
	89, 96, 102, 108, 112, 116, 119, 125, 128, 131,
	133, 134, 135, 138, 149, 152, 153, 154, 155, 165,
	166, 167, 169, 172, 173, 174, 175, 176, 179, 181,
	182, 183, 184, 185, 186, 193, 196, 202, 203, 204,
	205, 206, 207, 208, 210, 211, 212, 213, 219, 222,
	228, 229, 238, 245, 248, 171, 0, 0, 0, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	143, 0, 0, 145, 0, 0, 217, 159, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 83, 84, 85, 0, 958,
	0, 0, 0, 0, 0, 0, 105, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 0, 273, 0, 0, 0, 0,
	190, 0, 221, 127, 142, 101, 139, 87, 97, 0,
	126, 168, 197, 201, 0, 0, 0, 109, 0, 199,
	178, 237, 0, 180, 198, 146, 227, 191, 236, 246,
	247, 224, 244, 251, 214, 90, 223, 235, 106, 209,
	92, 233, 220, 157, 136, 137, 91, 0, 195, 114,
	122, 111, 170, 230, 231, 110, 254, 98, 243, 94,
	99, 242, 164, 226, 234, 158, 151, 93, 232, 156,
	150, 141, 118, 129, 188, 148, 189, 130, 161, 160,
	162, 0, 0, 0, 218, 240, 255, 103, 0, 225,
	249, 250, 0, 0, 104, 123, 117, 187, 121, 163,
	100, 132, 215, 140, 147, 194, 253, 177, 200, 107,
	239, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 86, 95, 144, 252, 192, 120, 241, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 88, 89, 96, 102, 108, 112, 116,
	119, 125, 128, 131, 133, 134, 135, 138, 149, 152,
	153, 154, 155, 165, 166, 167, 169, 172, 173, 174,
	175, 176, 179, 181, 182, 183, 184, 185, 186, 193,
	196, 202, 203, 204, 205, 206, 207, 208, 210, 211,
	212, 213, 219, 222, 228, 229, 238, 245, 248, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 143, 0, 0, 145, 0, 0,
	217, 159, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 83,
	84, 85, 0, 617, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 273,
	0, 0, 0, 0, 190, 0, 221, 127, 142, 101,
	139, 87, 97, 0, 126, 168, 197, 201, 0, 0,
	0, 109, 0, 199, 178, 237, 0, 180, 198, 146,
	227, 191, 236, 246, 247, 224, 244, 251, 214, 90,
	223, 235, 106, 209, 92, 233, 220, 157, 136, 137,
	91, 0, 195, 114, 122, 111, 170, 230, 231, 110,
	254, 98, 243, 94, 99, 242, 164, 226, 234, 158,
	151, 93, 232, 156, 150, 141, 118, 129, 188, 148,
	189, 130, 161, 160, 162, 0, 0, 0, 218, 240,
	255, 103, 0, 225, 249, 250, 0, 0, 104, 123,
	117, 187, 121, 163, 100, 132, 215, 140, 147, 194,
	253, 177, 200, 107, 239, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 86, 95, 144, 252, 192,
	120, 241, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 88, 89, 96,
	102, 108, 112, 116, 119, 125, 128, 131, 133, 134,
	135, 138, 149, 152, 153, 154, 155, 165, 166, 167,
	169, 172, 173, 174, 175, 176, 179, 181, 182, 183,
	184, 185, 186, 193, 196, 202, 203, 204, 205, 206,
	207, 208, 210, 211, 212, 213, 219, 222, 228, 229,
	238, 245, 248, 171, 0, 0, 0, 0, 0, 0,
	0, 700, 115, 0, 0, 0, 0, 0, 143, 0,
	0, 145, 0, 0, 217, 159, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 83, 84, 85, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	0, 0, 0, 273, 0, 0, 0, 0, 190, 0,
	221, 127, 142, 101, 139, 87, 97, 0, 126, 168,
	197, 201, 0, 0, 0, 109, 0, 199, 178, 237,
	0, 180, 198, 146, 227, 191, 236, 246, 247, 224,
	244, 251, 214, 90, 223, 235, 106, 209, 92, 233,
	220, 157, 136, 137, 91, 0, 195, 114, 122, 111,
	170, 230, 231, 110, 254, 98, 243, 94, 99, 242,
	164, 226, 234, 158, 151, 93, 232, 156, 150, 141,
	118, 129, 188, 148, 189, 130, 161, 160, 162, 0,
	0, 0, 218, 240, 255, 103, 0, 225, 249, 250,
	0, 0, 104, 123, 117, 187, 121, 163, 100, 132,
	215, 140, 147, 194, 253, 177, 200, 107, 239, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 86,
	95, 144, 252, 192, 120, 241, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 88, 89, 96, 102, 108, 112, 116, 119, 125,
	128, 131, 133, 134, 135, 138, 149, 152, 153, 154,
	155, 165, 166, 167, 169, 172, 173, 174, 175, 176,
	179, 181, 182, 183, 184, 185, 186, 193, 196, 202,
	203, 204, 205, 206, 207, 208, 210, 211, 212, 213,
	219, 222, 228, 229, 238, 245, 248, 388, 0, 0,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 143,
	0, 0, 145, 0, 0, 217, 159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 83, 84, 85, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 273, 0, 0, 0, 0, 190,
	0, 221, 127, 142, 101, 139, 87, 97, 0, 126,
	168, 197, 201, 0, 0, 0, 109, 0, 199, 178,
	237, 0, 180, 198, 146, 227, 191, 236, 246, 247,
	224, 244, 251, 214, 90, 223, 235, 106, 209, 92,
	233, 220, 157, 136, 137, 91, 0, 195, 114, 122,
	111, 170, 230, 231, 110, 254, 98, 243, 94, 99,
	242, 164, 226, 234, 158, 151, 93, 232, 156, 150,
	141, 118, 129, 188, 148, 189, 130, 161, 160, 162,
	0, 0, 0, 218, 240, 255, 103, 0, 225, 249,
	250, 0, 0, 104, 123, 117, 187, 121, 163, 100,
	132, 215, 140, 147, 194, 253, 177, 200, 107, 239,
	216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	86, 95, 144, 252, 192, 120, 241, 0, 0, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 88, 89, 96, 102, 108, 112, 116, 119,
	125, 128, 131, 133, 134, 135, 138, 149, 152, 153,
	154, 155, 165, 166, 167, 169, 172, 173, 174, 175,
	176, 179, 181, 182, 183, 184, 185, 186, 193, 196,
	202, 203, 204, 205, 206, 207, 208, 210, 211, 212,
	213, 219, 222, 228, 229, 238, 245, 248, 171, 0,
	0, 0, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 143, 0, 0, 145, 0, 0, 217,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 83, 84,
	85, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 268, 0, 273, 0,
	0, 0, 0, 190, 0, 221, 127, 142, 101, 139,
	87, 97, 0, 126, 168, 197, 201, 0, 0, 0,
	109, 0, 199, 178, 237, 0, 180, 198, 146, 227,
	191, 236, 246, 247, 224, 244, 251, 214, 90, 223,
	235, 106, 209, 92, 233, 220, 157, 136, 137, 91,
	0, 195, 114, 122, 111, 170, 230, 231, 110, 254,
	98, 243, 94, 99, 242, 164, 226, 234, 158, 151,
	93, 232, 156, 150, 141, 118, 129, 188, 148, 189,
	130, 161, 160, 162, 0, 0, 0, 218, 240, 255,
	103, 0, 225, 249, 250, 0, 0, 104, 123, 117,
	187, 121, 163, 100, 132, 215, 140, 147, 194, 253,
	177, 200, 107, 239, 216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 86, 95, 144, 252, 192, 120,
	241, 0, 0, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 88, 89, 96, 102,
	108, 112, 116, 119, 125, 128, 131, 133, 134, 135,
	138, 149, 152, 153, 154, 155, 165, 166, 167, 169,
	172, 173, 174, 175, 176, 179, 181, 182, 183, 184,
	185, 186, 193, 196, 202, 203, 204, 205, 206, 207,
	208, 210, 211, 212, 213, 219, 222, 228, 229, 238,
	245, 248, 171, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 0, 0, 0, 0, 0, 143, 0, 0,
	145, 0, 0, 217, 159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 83, 84, 85, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 273, 0, 0, 0, 0, 190, 0, 221,
	127, 142, 101, 139, 87, 97, 0, 126, 168, 197,
	201, 0, 0, 0, 109, 0, 199, 178, 237, 0,
	180, 198, 146, 227, 191, 236, 246, 247, 224, 244,
	251, 214, 90, 223, 235, 106, 209, 92, 233, 220,
	157, 136, 137, 91, 0, 195, 114, 122, 111, 170,
	230, 231, 110, 254, 98, 243, 94, 99, 242, 164,
	226, 234, 158, 151, 93, 232, 156, 150, 141, 118,
	129, 188, 148, 189, 130, 161, 160, 162, 0, 0,
	0, 218, 240, 255, 103, 0, 225, 249, 250, 0,
	0, 104, 123, 117, 187, 121, 163, 100, 132, 215,
	140, 147, 194, 253, 177, 200, 107, 239, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 86, 95,
	144, 252, 192, 120, 241, 0, 0, 113, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	88, 89, 96, 102, 108, 112, 116, 119, 125, 128,
	131, 133, 134, 135, 138, 149, 152, 153, 154, 155,
	165, 166, 167, 169, 172, 173, 174, 175, 176, 179,
	181, 182, 183, 184, 185, 186, 193, 196, 202, 203,
	204, 205, 206, 207, 208, 210, 211, 212, 213, 219,
	222, 228, 229, 238, 245, 248,
}
var yyPact = [...]int{

	2356, -1000, -273, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1018, 1069, -1000, -1000, -1000, -1000, -1000,
	-1000, 320, 11513, -2, 141, -25, 15540, 140, 136, 15874,
	-1000, -29, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -98,
	-115, -1000, 770, -1000, -1000, -1000, -1000, -1000, 1013, 1016,
	839, 1004, 913, -1000, 8161, 106, 106, 15206, 6825, -1000,
	-1000, 530, 15874, 130, 15874, -160, 87, 87, 87, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 138, 15874, 596, 596,
	254, -1000, 15874, 83, 596, 83, 83, 83, 15874, -1000,
	188, -1000, -1000, -1000, 15874, 596, 947, 369, 52, 4396,
	-1000, 177, -1000, 4396, 33, 4396, -35, 1026, -28, -41,
	-1000, 4396, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 501, 972, 9509, 9509,
	1018, -1000, 770, -1000, -1000, -1000, 948, -1000, -1000, 357,
	1058, -1000, 11179, 185, -1000, 9509, 345, 532, -1000, -1000,
	532, -1000, -1000, 172, -1000, -1000, 10511, 10511, 10511, 10511,
	10511, 10511, 10511, 10511, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 532, -1000,
	9175, 532, 532, 532, 532, 532, 532, 532, 532, 9509,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 14865, 13863, 15874, 816,
	813, -1000, -1000, 182, 787, 6478, -130, -1000, -1000, -1000,
	283, 13195, -1000, -1000, -1000, 946, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 764, 15874, -1000, 2030, -1000,
	596, 4396, 115, 596, 317, 596, 15874, 15874, 4396, 4396,
	4396, 5, 53, 23, 15874, 786, 113, 15874, 996, 873,
	15874, 596, 596, -1000, 5784, -1000, 4396, 369, -1000, 522,
	9509, 4396, 4396, 4396, 15874, 4396, 4396, -1000, -1000, -1000,
	373, -1000, -1000, -1000, -1000, 4396, 4396, -1000, 1057, 300,
	-1000, -1000, -1000, -1000, 9509, 222, -1000, 872, -1000, -1000,
	-1000, -1000, -1000, -1000, 1063, 239, 640, 179, 785, -1000,
	607, 1013, 501, 913, 12861, 892, -1000, -1000, -1000, 15874,
	-1000, 9509, 9509, 574, -1000, 14531, -1000, -1000, 5437, 244,
	10511, 480, 304, 10511, 10511, 10511, 10511, 10511, 10511, 10511,
	10511, 10511, 10511, 10511, 10511, 10511, 10511, 10511, 667, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 596, -1000, 770,
	795, 795, 195, 195, 195, 195, 195, 195, 195, 10845,
	7159, 501, 718, 288, 9175, 8161, 8161, 9509, 9509, 8829,
	8495, 8161, 965, 292, 288, 15874, -1000, -1000, 10177, -1000,
	-1000, -1000, -1000, -1000, 501, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 15874, 15874, 8161, 8161, 8161, 8161, 8161, 46,
	15874, -1000, 796, 842, -1000, -1000, -1000, 998, 12193, 12527,
	46, 730, 13863, 15874, -1000, -1000, 13863, 15874, 5090, 6131,
	-130, -1000, 738, -1000, -122, -135, 7493, 181, -1000, -1000,
	-1000, -1000, 4049, 285, 604, 390, -91, -1000, -1000, -1000,
	794, -1000, 794, 794, 794, 794, -57, -57, -57, -57,
	-1000, -1000, -1000, -1000, -1000, 860, 851, -1000, 794, 794,
	794, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 844,
	844, 844, 826, 826, 850, -1000, 15874, 4396, 994, 4396,
	-1000, 84, -1000, -1000, -1000, 15874, 15874, 15874, 15874, 15874,
	148, 15874, 15874, 782, -1000, 15874, 4396, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 288, -1000, -1000, -1000, -1000,
	-1000, -1000, 15874, -1000, -1000, -1000, -1000, 15874, 369, 15874,
	15874, 288, -1000, 521, 15874, -1000, 925, 9509, 9509, 5784,
	9509, -1000, -1000, -1000, 972, -1000, 965, 1015, -1000, 937,
	936, 8161, -1000, -1000, 244, 309, -1000, -1000, 508, -1000,
	-1000, -1000, -1000, 178, 532, -1000, 1710, -1000, -1000, -1000,
	-1000, 480, 10511, 10511, 10511, 127, 1710, 1668, 496, 1745,
	195, 531, 531, 220, 220, 220, 220, 220, 468, 468,
	-1000, -1000, -1000, 501, -1000, -1000, -1000, 501, 8161, 8161,
	781, -1000, -1000, 9509, -1000, 501, 691, 691, 632, 467,
	276, 1053, 691, 262, 1028, 691, 691, 8161, 340, -1000,
	9509, 501, -1000, 175, -1000, 403, 780, 776, 691, 501,
	501, 691, 691, 799, 532, -1000, 15874, 13863, 13863, 13863,
	13863, 13863, -1000, 902, 901, -1000, 887, 886, 920, 15874,
	-1000, 713, 12193, 165, 532, -1000, 14197, -1000, -1000, 1024,
	13863, 711, -1000, 711, -1000, 170, -1000, -1000, 738, -130,
	-55, -1000, -1000, -1000, -1000, 288, -1000, 693, 733, 3702,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 838, 596, -1000,
	984, 228, 191, 596, 983, -1000, -1000, -1000, 952, -1000,
	315, -94, -1000, -1000, 481, -57, -57, -1000, -1000, 181,
	945, 181, 181, 181, 499, 499, -1000, -1000, -1000, -1000,
	470, -1000, -1000, -1000, 448, -1000, 871, 15874, 4396, -1000,
	-1000, -1000, -1000, 273, 273, 224, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 45, 797, -1000,
	-1000, -1000, -1000, -33, -11, 110, -1000, 4396, -1000, 300,
	300, -1000, -1000, -1000, -1000, -1000, 918, 288, 288, 167,
	-1000, -1000, 15874, -1000, -1000, -1000, -1000, 790, -1000, -1000,
	-1000, 4743, 8161, -1000, 127, 1710, 418, -1000, 10511, 10511,
	-1000, -1000, 691, 691, 8161, 288, -1000, -1000, -1000, 124,
	667, 124, 10511, 10511, -1000, 10511, 10511, -1000, -172, 644,
	274, -1000, 9509, 537, -1000, 5784, -1000, 10511, 10511, -1000,
	-1000, -1000, -1000, -1000, 869, 15874, 532, -1000, 12193, 15874,
	724, -1000, 277, 842, 849, 868, 864, -1000, -1000, -1000,
	-1000, 900, -1000, 894, -1000, -1000, -1000, -1000, -1000, 128,
	121, 118, 15874, -1000, 1018, 9509, 711, -1000, -1000, 207,
	-1000, -1000, -140, -147, -1000, -1000, -1000, 4049, -1000, 4049,
	15874, 66, -1000, 596, 596, -1000, -1000, -1000, 829, 867,
	10511, -1000, -1000, -1000, 592, 181, 181, -1000, 438, -1000,
	-1000, -1000, 689, -1000, 686, 715, 655, 15874, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15874, -1000, -1000,
	-1000, -1000, -1000, 15874, -179, 596, 15874, 15874, 15874, 15874,
	-1000, 369, 369, -1000, 5784, -1000, 1024, 13863, -1000, -1000,
	501, -1000, 10511, 1710, 1710, -1000, -1000, -1000, 501, 794,
	794, -1000, 794, 826, -1000, 794, -38, 794, -39, 501,
	501, 1620, 1572, 1521, 566, 532, -167, -1000, 288, 9509,
	-1000, 712, 381, -1000, 986, 625, 639, -1000, -1000, 7827,
	501, 649, 157, 646, -1000, 1018, 15874, 9509, -1000, -1000,
	9509, 800, -1000, 9509, -1000, -1000, -1000, 532, 532, 532,
	646, 1013, 288, -1000, -1000, -1000, -1000, 3702, -1000, 641,
	-1000, 794, -1000, -1000, -1000, 15874, -84, 1062, 1710, -1000,
	-1000, -1000, -1000, -1000, -57, 498, -57, 432, -1000, 427,
	4396, -1000, -1000, -1000, -1000, 988, -1000, 5784, -1000, -1000,
	793, 843, -1000, -1000, -1000, -1000, 1022, 698, -1000, 1710,
	-1000, -1000, 88, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10511, 10511, 10511, 10511, 10511, 1013, 494, 288, 10511,
	10511, 981, -1000, 532, -1000, -1000, 827, 15874, 15874, -1000,
	15874, 1013, -1000, 288, 288, 15874, 288, 13529, 15874, 15874,
	11847, -1000, 184, 15874, -1000, 635, -1000, 192, -1000, -77,
	181, -1000, 181, 586, 554, -1000, 532, 682, -1000, 265,
	15874, 15874, 1017, 1005, -1000, -1000, 403, 403, 403, 403,
	59, 501, -1000, 403, 403, 1061, -1000, 532, -1000, 770,
	155, -1000, -1000, -1000, 633, 570, -1000, 570, 570, 165,
	184, -1000, 596, 253, 488, -1000, 63, 15874, 334, 976,
	-1000, 974, -1000, -1000, -1000, -1000, -1000, 44, 5784, 4049,
	564, -1000, -1000, 9509, 9509, -1000, -1000, -1000, -1000, 501,
	41, -183, -1000, -1000, -1000, 15874, 639, 501, 15874, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 363, -1000, -1000, 15874,
	-1000, -1000, 484, -1000, -1000, 561, -1000, 15874, -1000, -1000,
	797, 288, 628, -1000, 909, -177, -186, 618, -1000, -1000,
	-1000, 792, -1000, -1000, 44, 933, -179, -1000, 907, -1000,
	15874, -1000, 30, -1000, -180, 551, 18, -184, 866, 532,
	-187, 863, -1000, 1050, 9843, -1000, -1000, 1052, 176, 176,
	403, 501, -1000, -1000, -1000, 71, 483, -1000, -1000, -1000,
	-1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1302, 63, 591, 1299, 1291, 1290, 1289, 1287, 1286,
	1285, 1284, 1283, 1282, 1279, 1278, 1277, 1276, 1272, 1265,
	1263, 1262, 1258, 1254, 1253, 1251, 1250, 90, 1248, 1247,
	1237, 67, 1234, 71, 1233, 1232, 47, 261, 34, 44,
	283, 1225, 22, 54, 66, 1223, 32, 1222, 1221, 76,
	1220, 1219, 52, 1217, 1216, 77, 1215, 65, 1214, 13,
	36, 1213, 1211, 1210, 1209, 70, 419, 1208, 1207, 15,
	1206, 1205, 80, 1203, 51, 6, 14, 18, 19, 1202,
	1037, 9, 1201, 55, 1200, 1194, 1191, 1190, 26, 1188,
	57, 1186, 28, 56, 1185, 41, 74, 30, 25, 5,
	1184, 1182, 23, 62, 48, 60, 1180, 1178, 463, 1176,
	1173, 42, 1172, 1166, 1165, 24, 1164, 81, 414, 1163,
	1162, 1159, 1158, 31, 704, 1264, 130, 61, 1157, 1156,
	1155, 2331, 38, 50, 17, 1152, 86, 795, 43, 1151,
	1149, 35, 1148, 1146, 1140, 1138, 1134, 1133, 1123, 382,
	1120, 1118, 1116, 16, 53, 1115, 1114, 58, 20, 1112,
	1111, 1109, 46, 59, 1108, 1107, 49, 1105, 1104, 21,
	1099, 1097, 1096, 1095, 1094, 29, 7, 1090, 12, 1089,
	8, 1088, 27, 1086, 3, 1085, 10, 1084, 2, 0,
	1083, 11, 45, 1, 1078, 4, 1077, 1076, 1324, 1407,
	78, 1075, 97,
}
var yyR1 = [...]int{

	0, 196, 197, 197, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 189, 189, 189, 2, 2,
	2, 6, 3, 4, 4, 5, 5, 7, 7, 30,
	30, 8, 9, 9, 9, 9, 200, 200, 49, 49,
	50, 50, 96, 96, 10, 11, 11, 105, 105, 104,
	104, 104, 106, 106, 106, 106, 139, 139, 12, 12,
	12, 12, 12, 12, 12, 191, 191, 190, 188, 188,
	187, 187, 186, 18, 171, 173, 173, 172, 172, 172,
	172, 163, 142, 142, 142, 142, 145, 145, 143, 143,
	143, 143, 143, 143, 143, 143, 143, 144, 144, 144,
	144, 144, 146, 146, 146, 146, 146, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 148, 148, 148, 148, 148, 148, 148, 148,
	162, 162, 149, 149, 157, 157, 158, 158, 158, 155,
	155, 156, 156, 159, 159, 159, 151, 151, 152, 152,
	160, 160, 153, 153, 153, 154, 154, 154, 161, 161,
	161, 161, 161, 150, 150, 164, 164, 181, 181, 180,
	180, 180, 170, 170, 177, 177, 177, 177, 177, 167,
	167, 167, 168, 168, 166, 166, 169, 169, 179, 179,
	178, 165, 165, 182, 182, 182, 182, 194, 195, 193,
	193, 193, 193, 193, 174, 174, 174, 175, 175, 175,
	176, 176, 176, 13, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 13,
	192, 192, 192, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 185, 183, 183, 184, 184, 14,
	19, 19, 15, 15, 15, 15, 15, 16, 16, 20,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 21, 21, 21,
	21, 21, 21, 21, 21, 21, 21, 112, 112, 114,
	114, 110, 110, 113, 113, 111, 111, 111, 115, 115,
	115, 116, 116, 140, 140, 140, 22, 22, 24, 24,
	25, 26, 23, 23, 23, 23, 23, 23, 23, 17,
	201, 27, 28, 28, 29, 29, 29, 33, 33, 33,
	31, 31, 31, 32, 32, 38, 38, 37, 37, 39,
	39, 39, 39, 128, 128, 128, 127, 127, 41, 41,
	42, 42, 43, 43, 44, 44, 44, 44, 58, 58,
	95, 95, 97, 97, 45, 45, 45, 45, 46, 46,
	47, 47, 48, 48, 135, 135, 134, 134, 134, 133,
	133, 51, 51, 51, 53, 52, 52, 52, 52, 54,
	54, 56, 56, 55, 55, 57, 59, 59, 59, 59,
	59, 60, 60, 40, 40, 40, 40, 40, 40, 40,
	109, 109, 62, 62, 61, 61, 61, 61, 61, 61,
	61, 61, 61, 61, 73, 73, 73, 73, 73, 73,
	63, 63, 63, 63, 63, 63, 63, 36, 36, 74,
	74, 74, 80, 75, 75, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 70, 70, 70,
	70, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 69, 69, 69, 69, 69, 69,
	69, 69, 69, 69, 69, 69, 69, 69, 69, 69,
	202, 202, 72, 71, 71, 71, 71, 71, 71, 71,
	34, 34, 34, 34, 34, 138, 138, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	84, 84, 35, 35, 82, 82, 83, 85, 85, 81,
	81, 81, 65, 65, 65, 65, 65, 65, 65, 65,
	67, 67, 67, 86, 86, 87, 87, 88, 88, 89,
	89, 90, 91, 91, 91, 92, 92, 92, 92, 93,
	93, 93, 64, 64, 64, 64, 64, 64, 94, 94,
	94, 94, 98, 98, 76, 76, 78, 78, 77, 79,
	99, 99, 102, 100, 100, 100, 103, 103, 103, 103,
	101, 101, 101, 130, 130, 130, 107, 107, 117, 117,
	118, 118, 108, 108, 119, 119, 119, 119, 119, 119,
	119, 119, 119, 119, 120, 120, 120, 121, 121, 122,
	122, 122, 129, 129, 125, 125, 126, 126, 131, 131,
	132, 132, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	123, 123, 123, 123, 123, 123, 123, 123, 123, 123,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 124, 124, 124, 124, 124, 124, 124, 124, 124,
	124, 198, 199, 136, 137, 137, 137,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 4, 6,
	7, 5, 10, 1, 3, 1, 3, 7, 8, 1,
	1, 9, 8, 7, 6, 6, 1, 1, 1, 3,
	1, 3, 0, 4, 3, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 2,
	8, 4, 6, 5, 5, 0, 2, 1, 0, 2,
	1, 3, 3, 4, 4, 2, 4, 1, 3, 3,
	3, 8, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 1, 4, 4, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 0, 1, 2, 0, 2, 0, 3,
	0, 1, 0, 3, 3, 0, 2, 2, 0, 2,
	1, 2, 1, 0, 2, 5, 4, 1, 2, 2,
	3, 2, 0, 1, 2, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	2, 3, 1, 10, 11, 11, 12, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 6, 7, 7, 7, 7, 4, 5,
	4, 4, 7, 5, 5, 5, 12, 7, 5, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 5, 4, 4, 3, 2, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 4, 3,
	2, 7, 2, 3, 4, 3, 7, 5, 4, 2,
	4, 4, 3, 3, 5, 2, 3, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 2, 2, 2, 2, 2, 3, 3, 2,
	0, 2, 0, 2, 1, 2, 2, 0, 1, 1,
	0, 1, 1, 0, 1, 0, 1, 1, 3, 1,
	2, 3, 5, 0, 1, 2, 1, 1, 0, 2,
	1, 3, 1, 1, 1, 3, 1, 3, 3, 7,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 1, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 5,
	6, 4, 4, 6, 6, 6, 8, 8, 8, 8,
	9, 8, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 0,
	2, 4, 2, 1, 3, 5, 4, 6, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 2, 3, 3, 3, 3, 3,
	1, 2, 1, 1, 1, 1, 1, 1, 0, 2,
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 0,
	1, 1, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -196, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -16, -20, -21, -22, -24, -25,
	-26, -23, -17, -3, -4, 6, 7, -30, 9, 10,
	30, -18, 118, 119, 121, 120, 154, 122, 147, 51,
	168, 169, 171, 172, 25, 148, 149, 152, 153, 31,
	32, 124, -198, 8, 254, 55, -197, 352, -88, 15,
	-29, 5, -27, -201, -27, -27, -27, -27, -27, -171,
	-173, 55, 93, -122, 128, 75, 246, 125, 126, 132,
	-125, -189, -124, 58, 59, 60, 264, 140, 296, 297,
	168, 179, 173, 200, 192, 265, 298, 141, 190, 193,
	233, 138, 299, 220, 227, 69, 171, 242, 300, 150,
	188, 184, 301, 273, 182, 27, 302, 229, 205, 303,
	269, 231, 183, 228, 124, 304, 143, 136, 305, 206,
	210, 306, 234, 307, 308, 309, 177, 178, 310, 139,
	236, 204, 137, 33, 266, 36, 158, 237, 208, 311,
	203, 199, 312, 313, 314, 315, 202, 176, 198, 40,
	212, 211, 213, 232, 195, 316, 317, 318, 144, 319,
	185, 18, 320, 321, 322, 323, 324, 240, 153, 325,
	156, 326, 327, 328, 329, 330, 331, 230, 207, 209,
	133, 160, 268, 332, 238, 181, 333, 145, 157, 152,
	241, 146, 334, 335, 336, 337, 338, 339, 340, 172,
	341, 342, 343, 344, 167, 235, 244, 39, 217, 345,
	175, 135, 346, 169, 164, 222, 196, 159, 347, 348,
	186, 187, 201, 174, 197, 170, 161, 154, 349, 243,
	218, 270, 194, 191, 165, 350, 162, 163, 351, 223,
	224, 166, 267, 239, 189, 219, -108, 128, 246, 125,
	224, 130, 126, 126, 127, 128, 246, 125, 126, -55,
	-131, -189, -124, 128, 126, 111, 193, 233, 118, 221,
	229, -114, 230, 160, -140, 126, -110, 220, 223, 224,
	166, -189, 231, 235, 234, 225, -131, 170, -136, -136,
	-136, -136, -136, 222, 222, -136, -2, -92, 17, 16,
	-5, -3, -198, 6, 20, 21, -33, 41, 42, -28,
	-39, 102, -40, -131, -61, 77, -66, 29, -189, -124,
	23, -65, -62, -81, -79, -80, 111, 112, 113, 100,
	101, 108, 78, 114, -70, -68, -69, -71, 62, 61,
	70, 63, 64, 65, 66, 71, 72, 73, -125, -77,
	-198, 45, 46, 255, 256, 257, 258, 263, 259, 80,
	35, 245, 253, 252, 251, 249, 250, 247, 248, 261,
	262, 131, 246, 125, 106, 254, -108, -108, 11, -49,
	-50, -55, -57, -131, -100, -139, 170, -103, 235, 234,
	-126, -101, -125, -123, 233, 193, 232, 123, 271, 76,
	22, 24, 215, 79, 111, 16, 80, 110, 255, 118,
	49, 272, 247, 248, 245, 257, 258, 246, 221, 29,
	10, 274, 25, 148, 21, 34, 104, 120, 83, 84,
	151, 23, 149, 73, 277, 19, 52, 11, 13, 278,
	279, 14, 131, 130, 95, 127, 47, 8, 114, 26,
	92, 43, 280, 28, 281, 282, 283, 284, 45, 93,
	17, 249, 250, 31, 285, 263, 155, 106, 50, 37,
	77, 286, 287, 71, 288, 74, 53, 75, 15, 48,
	289, 290, 291, 292, 94, 121, 254, 46, 293, 125,
	6, 260, 30, 147, 44, 294, 126, 82, 261, 262,
	129, 72, 5, 132, 32, 9, 51, 54, 251, 252,
	253, 35, 81, 12, 295, -172, 93, -163, -189, -55,
	127, -55, 254, -118, 131, -118, -118, 126, -55, -189,
	-189, 118, 120, 123, 53, -19, -55, -117, 131, -189,
	-117, -117, -117, -55, 115, -55, -189, 30, -115, 93,
	12, 246, -189, 160, 126, 161, 128, -137, -198, -126,
	-167, 127, 33, 139, -137, 164, 165, -137, -113, -112,
	227, 228, 222, 226, 12, 165, 222, 163, -137, -136,
	-136, -199, 57, -93, 19, 31, -40, -131, -89, -90,
	-40, -88, -2, -27, 37, -31, 21, 34, 68, 11,
	-128, 76, 75, 92, -127, 22, -125, 62, 115, -40,
	-63, 95, 77, 93, 94, 79, 97, 96, 107, 100,
	101, 102, 103, 104, 105, 106, 98, 99, 110, 85,
	86, 87, 88, 89, 90, 91, -109, -198, -80, -198,
	116, 117, -66, -66, -66, -66, -66, -66, -66, -66,
	-198, -2, -75, -40, -198, -198, -198, -198, -198, -198,
	-198, -198, -198, -84, -40, -198, -202, -72, -198, -202,
	-72, -202, -72, -202, -198, -202, -72, -202, -72, -202,
	-202, -72, -198, -198, -198, -198, -198, -198, -198, -56,
	26, -55, -42, -43, -44, -45, -58, -80, -198, -55,
	-55, -49, -200, 56, 11, 54, -200, 56, 115, 56,
	170, -103, -105, -104, 236, 238, 85, -130, -125, 62,
	29, 30, 57, 56, -55, -142, -145, -147, -146, -148,
	-143, -144, 190, 191, 111, 194, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 30, 150, 186, 187,
	188, 189, 206, 207, 208, 209, 210, 211, 212, 213,
	173, 192, 265, 174, 175, 176, 177, 178, 179, 181,
	182, 183, 184, 185, -189, -137, 128, -189, 77, -189,
	-55, -55, -137, -137, -137, 162, 162, 126, 126, 167,
	-55, 56, 129, -49, 23, 53, -55, -189, -189, -132,
	-131, -123, -137, -115, 62, -40, -137, -137, -137, -55,
	-137, -137, -168, 11, 95, -137, -137, 11, -111, 11,
	95, -40, -116, 93, 53, 9, 95, 56, 18, 115,
	56, -91, 24, 25, -92, -199, -33, -67, -125, 63,
	66, -32, 44, -55, -40, -40, -73, 71, 77, 72,
	73, -127, 102, -132, -126, -123, -66, -74, -77, -80,
	67, 95, 93, 94, 79, -66, -66, -66, -66, -66,
	-66, -66, -66, -66, -66, -66, -66, -66, -66, -66,
	-138, -189, 62, -189, -65, -65, -125, -38, 21, 34,
	-37, -39, -199, 56, -199, -2, -37, -37, -40, -40,
	-81, 62, -37, -81, 62, -37, -37, -31, -82, -83,
	81, -81, -125, -131, -199, -66, -125, -125, -37, -38,
	-38, -37, -37, -96, 156, -55, 30, 56, -51, -53,
	-52, -54, 43, 47, 49, 44, 45, 46, 50, -135,
	22, -42, -198, -134, 156, -133, 22, -131, 62, -96,
	54, -42, -55, -42, -57, -131, 102, -103, -105, 56,
	237, 239, 240, 53, 74, -40, -154, 110, -174, -175,
	-176, -126, 62, 63, -163, -164, -165, -177, 142, -182,
	133, 135, 132, -166, 143, 127, 28, 57, -159, 71,
	77, -155, 218, -149, 55, -149, -149, -149, -149, -153,
	193, -153, -153, -153, 55, 55, -149, -149, -149, -157,
	55, -157, -157, -158, 55, -158, -129, 54, -55, -137,
	23, -137, -119, 123, 120, 121, -185, 119, 215, 193,
	69, 29, 15, 255, 156, 270, -189, 157, -55, -55,
	-55, -55, -55, 123, 120, -55, -55, -55, -137, -55,
	-55, -115, -131, -131, 62, -55, 39, -40, -40, -132,
	-90, -93, -107, 19, 11, 35, 35, -37, 71, 72,
	73, 115, -198, -74, -66, -66, -66, -36, 151, 76,
	-199, -199, -37, -37, 56, -40, -199, -199, -199, 56,
	54, 22, 11, 11, -199, 11, 11, -199, -199, -37,
	-85, -83, 83, -40, -199, 115, -199, 56, 56, -199,
	-199, -199, -199, -199, -64, 30, 35, -2, -198, -198,
	-99, -102, -81, -43, -44, -44, -43, -44, 43, 43,
	43, 48, 43, 48, 43, -52, -131, -199, -59, 51,
	130, 52, -198, -133, -60, 12, -42, -60, -60, 115,
	-104, -106, 241, 238, 244, -189, 62, 56, -176, 85,
	55, -189, 28, -166, -166, -169, -189, -169, 28, -151,
	29, 71, -156, 219, 63, -153, -153, -154, 30, -154,
	-154, -154, -162, 62, -162, 63, 63, 53, -125, -137,
	-136, -192, 138, 134, 142, 143, 136, 58, 59, 60,
	127, 28, 133, 135, 156, 132, -192, -120, -121, 129,
	22, 127, 28, 156, -191, 54, 162, 215, 162, 129,
	-137, -111, -111, 40, 115, -55, -41, 11, 102, -126,
	-38, -36, 76, -66, -66, -199, -199, -39, -141, 111,
	190, 150, 188, 184, 204, 195, 217, 186, 218, -138,
	-141, -66, -66, -66, -66, 264, -88, 84, -40, 82,
	-126, -66, -66, -98, 53, -99, -76, -78, -77, -198,
	-2, -94, -125, -97, -125, -60, 56, 85, -47, -46,
	53, 54, -48, 53, -46, 43, 43, 127, 127, 127,
	-97, -88, -40, -60, 238, 242, 243, -175, -176, -179,
	-178, -125, -182, -169, -169, 55, -152, 53, -66, 57,
	-154, -154, -189, 111, 57, 56, 57, 56, 57, 56,
	-55, -136, -136, -55, -136, -125, -188, 267, -190, -189,
	-125, -125, -125, -55, -115, -115, -60, -42, -199, -66,
	-199, -149, -149, -149, -158, -149, 178, -149, 178, -199,
	-199, 19, 19, 19, 19, -198, -35, 260, -40, 56,
	56, 27, -98, 56, -199, -199, -199, 56, 115, -199,
	56, -88, -102, -40, -40, 55, -40, -198, -198, -198,
	-199, -92, 57, 56, -149, -95, -125, -160, 215, 9,
	-153, 62, -153, 63, 63, -137, 26, -187, -186, -126,
	55, 54, -86, 13, -153, -189, -66, -66, -66, -66,
	-66, -92, 62, -66, -66, 28, -78, 35, -2, -198,
	-125, -125, -125, -92, -95, -95, -199, -95, -95, -134,
	-181, -180, 54, 137, 69, -178, 57, 56, -161, 133,
	28, 132, -69, -154, -154, 57, 57, -198, 56, 85,
	-95, -55, -87, 14, 16, -199, -199, -199, -199, -34,
	95, 267, -199, -199, -199, 9, -76, -2, 115, 57,
	-199, -199, -199, -59, -180, -189, -170, 85, 62, 145,
	-125, -150, 69, 28, 28, -183, -184, 156, -186, -176,
	57, -40, -75, -199, 265, 50, 268, -99, -199, -125,
	63, -55, 62, -199, 56, -125, -191, 40, 266, 269,
	55, -184, 35, -188, 40, -95, 158, 267, 57, 159,
	268, -194, -195, 53, -198, 269, -195, 53, 10, 9,
	-66, 155, -193, 146, 141, 144, 30, -193, -199, -199,
	140, 29, 71,
}
var yyDef = [...]int{

	24, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 577, 0, 330, 330, 330, 330, 330,
	330, 0, 649, 632, 0, 0, 0, 0, -2, 317,
	318, 0, 320, 321, 953, 953, 953, 953, 953, 0,
	0, 953, 0, 39, 40, 951, 1, 3, 585, 0,
	0, 334, 337, 332, 0, 632, 632, 0, 0, 68,
	69, 0, 0, 0, 940, 0, 630, 630, 630, 650,
	651, 654, 655, 25, 26, 27, 780, 781, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 792, 793,
	794, 795, 796, 797, 798, 799, 800, 801, 802, 803,
	804, 805, 806, 807, 808, 809, 810, 811, 812, 813,
	814, 815, 816, 817, 818, 819, 820, 821, 822, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 883,
	884, 885, 886, 887, 888, 889, 890, 891, 892, 893,
	894, 895, 896, 897, 898, 899, 900, 901, 902, 903,
	904, 905, 906, 907, 908, 909, 910, 911, 912, 913,
	914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
	924, 925, 926, 927, 928, 929, 930, 931, 932, 933,
	934, 935, 936, 937, 938, 939, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 0, 0, 0, 0,
	0, 633, 0, 628, 0, 628, 628, 628, 0, 268,
	403, 658, 659, 940, 0, 0, 0, 308, 0, 954,
	280, 0, 282, 954, 0, 954, 0, 289, 0, 0,
	295, 954, 300, 314, 315, 302, 316, 319, 322, 323,
	324, 325, 326, 953, 953, 329, 33, 589, 0, 0,
	577, 35, 0, 330, 335, 336, 340, 338, 339, 331,
	0, 349, 353, 0, 413, 0, 418, 420, -2, -2,
	0, 455, 456, 457, 458, 459, 0, 0, 0, 0,
	0, 0, 0, 0, 483, 484, 485, 486, 562, 563,
	564, 565, 566, 567, 568, 569, 422, 423, 559, 609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 550,
	0, 520, 520, 520, 520, 520, 520, 520, 520, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 48, 50, 403, 54, 0, 929, 613, -2, -2,
	0, 0, 656, 657, -2, 793, -2, 662, 663, 664,
	665, 666, 667, 668, 669, 670, 671, 672, 673, 674,
	675, 676, 677, 678, 679, 680, 681, 682, 683, 684,
	685, 686, 687, 688, 689, 690, 691, 692, 693, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 706, 707, 708, 709, 710, 711, 712, 713, 714,
	715, 716, 717, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 727, 728, 729, 730, 731, 732, 733, 734,
	735, 736, 737, 738, 739, 740, 741, 742, 743, 744,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 0, 0, 87, 0, 85,
	0, 954, 0, 0, 0, 0, 0, 0, 954, 954,
	954, 0, 0, 0, 0, 259, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 269, 954, 308, 272, 0,
	0, 954, 954, 954, 0, 954, 954, 279, 955, 956,
	0, 189, 190, 191, 283, 954, 954, 285, 0, 305,
	303, 304, 297, 298, 0, 311, 292, 293, 296, 327,
	328, 34, 952, 28, 0, 0, 586, 0, 578, 579,
	582, 585, 33, 337, 0, 343, 341, 342, 333, 0,
	350, 0, 0, 0, 354, 0, 356, 357, 0, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 440,
	441, 442, 443, 444, 445, 446, 419, 0, 433, 0,
	0, 0, 475, 476, 477, 478, 479, 480, 481, 0,
	345, 33, 0, 453, 0, 0, 0, 0, 0, 0,
	0, 0, 340, 0, 551, 0, 504, 512, 0, 505,
	513, 506, 514, 507, 0, 508, 515, 509, 516, 510,
	511, 517, 0, 0, 0, 345, 345, 0, 0, 52,
	0, 402, 0, 360, 362, 363, 364, -2, 0, 386,
	-2, 0, 0, 0, 46, 47, 0, 0, 0, 0,
	929, 614, 56, 57, 0, 0, 0, 165, 623, 624,
	625, 621, 214, 0, 0, 153, 149, 93, 94, 95,
	142, 97, 142, 142, 142, 142, 162, 162, 162, 162,
	125, 126, 127, 128, 129, 0, 0, 112, 142, 142,
	142, 116, 132, 133, 134, 135, 136, 137, 138, 139,
	98, 99, 100, 101, 102, 103, 104, 105, 106, 144,
	144, 144, 146, 146, 652, 71, 0, 954, 0, 954,
	83, 0, 228, 230, 231, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 629, 0, 954, 265, 266, 404,
	660, 661, 270, 271, 309, 310, 273, 274, 275, 276,
	277, 278, 0, 192, 193, 284, 288, 0, 308, 0,
	0, 290, 291, 0, 0, 590, 0, 0, 0, 0,
	0, 581, 583, 584, 589, 36, 340, 0, 570, 0,
	0, 0, 344, 31, 414, 415, 417, 434, 0, 436,
	438, 355, 351, 0, 560, -2, 424, 425, 449, 450,
	451, 0, 0, 0, 0, 447, 429, 0, 460, 461,
	462, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	474, 535, 536, 0, 472, 473, 482, 0, 0, 0,
	346, 347, 452, 0, 608, 33, 0, 0, 0, 0,
	457, 562, 0, 457, 562, 0, 0, 0, 557, 554,
	0, 0, 559, 0, 521, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 0, 391, 0, 0, 394, 0, 0, 0, 0,
	385, 0, 0, 406, 874, 387, 0, 389, 390, 411,
	0, 411, 49, 411, 51, 0, 405, 615, 55, 0,
	0, 60, 61, 616, 617, 618, 619, 0, 84, 215,
	217, 220, 221, 222, 88, 89, 90, 0, 0, 202,
	0, 0, 196, 196, 0, 194, 195, 86, 156, 154,
	0, 151, 150, 96, 0, 162, 162, 119, 120, 165,
	0, 165, 165, 165, 0, 0, 113, 114, 115, 107,
	0, 108, 109, 110, 0, 111, 0, 0, 954, 73,
	631, 74, 953, 0, 0, 644, 229, 634, 635, 636,
	637, 638, 639, 640, 641, 642, 643, 0, 75, 233,
	235, 234, 238, 0, 0, 0, 260, 954, 264, 305,
	305, 287, 306, 307, 312, 294, 0, 587, 588, 0,
	580, 29, 0, 626, 627, 571, 572, 358, 435, 437,
	439, 0, 345, 426, 447, 430, 0, 427, 0, 0,
	421, 487, 0, 0, 0, 454, -2, 491, 492, 0,
	0, 0, 0, 0, 528, 0, 0, 529, 0, 577,
	0, 555, 0, 0, 503, 0, 522, 0, 0, 523,
	524, 525, 526, 527, 602, 0, 0, -2, 0, 0,
	411, 610, 0, 361, 380, 382, 0, 377, 392, 393,
	395, 0, 397, 0, 399, 400, 365, 367, 368, 0,
	0, 0, 0, 388, 577, 0, 411, 44, 45, 0,
	58, 59, 0, 0, 65, 166, 167, 0, 218, 0,
	0, 0, 184, 196, 196, 187, 197, 188, 0, 158,
	0, 155, 92, 152, 0, 165, 165, 121, 0, 122,
	123, 124, 0, 140, 0, 0, 0, 0, 653, 72,
	223, 953, 240, 241, 242, 243, 244, 245, 246, 247,
	248, 249, 250, 251, 252, 253, 953, 0, 953, 645,
	646, 647, 648, 0, 78, 0, 0, 0, 0, 0,
	263, 308, 308, 591, 0, 30, 411, 0, 352, 561,
	0, 428, 0, 448, 431, 488, 489, 348, 0, 142,
	142, 540, 142, 146, 543, 142, 545, 142, 548, 0,
	0, 0, 0, 0, 0, 0, 552, 502, 558, 0,
	560, 0, 0, 37, 0, 602, 592, 604, 606, 0,
	33, 0, 598, 0, 372, 577, 0, 0, 374, 381,
	0, 0, 375, 0, 376, 396, 398, 0, 0, 0,
	0, 585, 412, 43, 62, 63, 64, 216, 219, 0,
	198, 142, 201, 185, 186, 0, 160, 0, 157, 143,
	117, 118, 163, 164, 162, 0, 162, 0, 147, 0,
	954, 224, 225, 226, 227, 0, 232, 0, 76, 77,
	0, 0, 237, 261, 281, 286, 573, 359, 490, 432,
	493, 537, 162, 541, 542, 544, 546, 547, 549, 495,
	494, 0, 0, 0, 0, 0, 585, 0, 556, 0,
	0, 0, 38, 0, 607, -2, 0, 0, 0, 53,
	0, 585, 611, 612, 378, 0, 383, 0, 0, 0,
	386, 42, 176, 0, 200, 0, 370, 168, 161, 0,
	165, 141, 165, 0, 0, 70, 0, 79, 80, 0,
	0, 0, 575, 0, 538, 539, 0, 0, 0, 0,
	530, 0, 553, 0, 0, 0, 605, 0, -2, 0,
	600, 599, 373, 41, 0, 0, 408, 0, 0, 406,
	175, 177, 0, 182, 0, 199, 0, 0, 173, 0,
	170, 172, 159, 130, 131, 145, 148, 0, 0, 0,
	0, 239, 32, 0, 0, 496, 498, 497, 499, 0,
	0, 0, 501, 518, 519, 0, 595, 33, 0, 379,
	407, 409, 410, 369, 178, 179, 0, 183, 181, 0,
	371, 91, 0, 169, 171, 0, 255, 0, 81, 82,
	75, 576, 574, 500, 0, 0, 0, 603, -2, 601,
	180, 0, 174, 254, 0, 0, 78, 531, 0, 534,
	0, 256, 0, 236, 532, 0, 0, 0, 203, 0,
	0, 204, 205, 0, 0, 533, 206, 0, 0, 0,
	0, 0, 207, 209, 210, 0, 0, 208, 257, 258,
	211, 212, 213,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 78, 3, 3, 3, 105, 97, 3,
	55, 57, 102, 100, 56, 101, 115, 103, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 352,
	86, 85, 87, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 107, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 96, 3, 108,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 76, 77, 79, 80, 81, 82, 83, 84, 88,
	89, 90, 91, 92, 93, 94, 95, 98, 99, 104,
	106, 109, 110, 111, 112, 113, 114, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:329
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:334
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:335
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:339
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 24:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:362
		{
			setParseTree(yylex, nil)
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:368
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:372
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:376
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 28:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:382
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 29:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:390
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 30:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:394
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 31:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:400
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 32:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:407
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 34:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:417
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:423
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 36:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:427
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 37:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:434
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:446
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:458
		{
			yyVAL.str = InsertStr
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.str = ReplaceStr
		}
	case 41:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:468
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 42:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:474
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:478
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:482
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:486
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:491
		{
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:492
		{
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:496
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:500
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:506
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:510
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 52:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:515
		{
			yyVAL.partitions = nil
		}
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:519
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:525
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 55:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:531
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Characteristics: yyDollar[5].characteristics}
		}
	case 56:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:535
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics}
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:541
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:545
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:551
		{
			yyVAL.characteristic = &IsolationLevel{Level: string(yyDollar[3].str)}
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:555
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadWrite}
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:559
		{
			yyVAL.characteristic = &AccessMode{Mode: TxReadOnly}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:565
		{
			yyVAL.str = RepeatableRead
		}
	case 63:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:569
		{
			yyVAL.str = ReadCommitted
		}
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:573
		{
			yyVAL.str = ReadUncommitted
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:577
		{
			yyVAL.str = Serializable
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.str = SessionStr
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:587
		{
			yyVAL.str = GlobalStr
		}
	case 68:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:593
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:598
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 70:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:604
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:609
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:613
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:617
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:621
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:626
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:630
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 78:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:641
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:646
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:652
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 81:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:657
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:663
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:669
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 84:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:676
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:683
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 86:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:687
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:693
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 88:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:698
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:702
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:706
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:712
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:723
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:734
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:761
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:769
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:773
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:815
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:869
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:873
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:877
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:881
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:889
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 131:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:934
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:939
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:944
		{
			yyVAL.sqlVal = nil
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:948
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 144:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:953
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:957
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:965
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:969
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 148:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:975
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 149:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:983
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:987
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 151:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:992
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1002
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1015
		{
			yyVAL.optVal = nil
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1019
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1024
		{
			yyVAL.optVal = nil
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1028
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1033
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1037
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1042
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1046
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1055
		{
			yyVAL.str = ""
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1059
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1063
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1068
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1072
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.colKeyOpt = colKey
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1089
		{
			yyVAL.sqlVal = nil
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1093
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1099
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1103
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1113
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1119
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].colIdent.String())}
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1123
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1128
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1134
		{
			yyVAL.str = ""
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1152
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1160
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1166
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1170
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1174
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1191
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1200
		{
			yyVAL.str = ""
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1204
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1210
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1220
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1226
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 203:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1237
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 204:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1241
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 205:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1245
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 206:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1249
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 207:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1255
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1271
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1279
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1283
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1288
		{
			yyVAL.str = ""
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1292
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1296
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1304
		{
			yyVAL.str = yyDollar[1].str
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1312
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1318
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1322
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1332
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 224:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1336
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 225:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1340
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 226:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1344
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 227:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1349
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1354
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 229:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1358
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1362
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1366
		{
			yyVAL.statement = &DBDDL{Action: AlterStr, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 232:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1370
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 233:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1382
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1392
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 235:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1396
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 236:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1400
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 237:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1413
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 238:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1423
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 239:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1427
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 254:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1456
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1462
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1466
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 257:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1472
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 258:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1476
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1482
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1488
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1492
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1500
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1508
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1513
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1521
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1525
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].colIdent.String())}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1540
		{
			yyVAL.statement = &OtherRead{}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1546
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1551
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Type: CharsetStr, ShowTablesOpt: showTablesOpt}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1561
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1566
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String())}
		}
	case 275:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1570
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1574
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1594
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1600
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1608
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1612
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1616
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 287:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1621
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1631
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1635
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1639
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1645
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1650
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1654
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1658
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1662
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1676
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].colIdent.String())}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1682
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1692
		{
			yyVAL.str = ""
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1696
		{
			yyVAL.str = "extended "
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1702
		{
			yyVAL.str = ""
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1706
		{
			yyVAL.str = "full "
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1712
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1716
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1722
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1726
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1730
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 308:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1736
		{
			yyVAL.showFilter = nil
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1740
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1744
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 311:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1750
		{
			yyVAL.showFilter = nil
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1754
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 313:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1760
		{
			yyVAL.str = ""
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1764
		{
			yyVAL.str = SessionStr
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1768
		{
			yyVAL.str = GlobalStr
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1778
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1784
		{
			yyVAL.statement = &Begin{}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1788
		{
			yyVAL.statement = &Begin{}
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1794
		{
			yyVAL.statement = &Commit{}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1800
		{
			yyVAL.statement = &Rollback{}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &OtherRead{}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &OtherRead{}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &OtherRead{}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 329:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1836
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1840
		{
			setAllowComments(yylex, true)
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1844
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1850
		{
			yyVAL.bytes2 = nil
		}
	case 333:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1854
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = UnionStr
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1864
		{
			yyVAL.str = UnionAllStr
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1868
		{
			yyVAL.str = UnionDistinctStr
		}
	case 337:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = ""
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = SQLCacheStr
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1886
		{
			yyVAL.str = ""
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = DistinctStr
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = DistinctStr
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1899
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = StraightJoinHint
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1908
		{
			yyVAL.selectExprs = nil
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1918
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1922
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1936
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1940
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1945
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1953
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1965
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1989
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1993
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2003
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2009
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2013
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2019
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2023
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2029
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2033
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2046
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 375:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2050
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 376:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2054
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2058
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2066
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2070
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2076
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2078
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.empty = struct{}{}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.empty = struct{}{}
		}
	case 386:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2086
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = JoinStr
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = JoinStr
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2115
		{
			yyVAL.str = JoinStr
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = StraightJoinStr
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = LeftJoinStr
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = LeftJoinStr
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = RightJoinStr
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.str = RightJoinStr
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = NaturalJoinStr
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2149
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2163
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2169
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2173
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2184
		{
			yyVAL.indexHints = nil
		}
	case 407:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2188
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2192
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2196
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2200
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2205
		{
			yyVAL.expr = nil
		}
	case 412:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2209
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2223
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2231
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2239
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 420:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2245
		{
			yyVAL.str = ""
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2249
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2259
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2265
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2269
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2273
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2277
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 428:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2281
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2285
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 430:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2289
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2293
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2297
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2301
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = IsNullStr
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = IsNotNullStr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.str = IsTrueStr
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			yyVAL.str = IsNotTrueStr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2323
		{
			yyVAL.str = IsFalseStr
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2327
		{
			yyVAL.str = IsNotFalseStr
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.str = EqualStr
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.str = LessThanStr
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = GreaterThanStr
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = LessEqualStr
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.str = GreaterEqualStr
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = NotEqualStr
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2362
		{
			yyVAL.expr = nil
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2366
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2372
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2376
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2386
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2392
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2396
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2406
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2410
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2414
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2418
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2422
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2426
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2430
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2434
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2438
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2442
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2454
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2466
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2470
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2490
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2502
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2524
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2542
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2546
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 489:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2550
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 490:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2554
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2564
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2568
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 493:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2572
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2576
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 495:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2580
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 496:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2584
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 497:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2588
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 498:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2592
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 499:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2596
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 500:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2600
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 501:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2604
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2608
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 503:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2612
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2622
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2626
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2630
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2640
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2645
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2656
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2661
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2665
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2669
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2674
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2679
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2684
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 519:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2692
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2702
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2712
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2716
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 525:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2720
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2724
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2728
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2732
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2736
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 530:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2742
		{
			yyVAL.str = ""
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = BooleanModeStr
		}
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2750
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 533:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = QueryExpansionStr
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2768
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2778
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2782
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2786
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2800
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2808
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2812
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2824
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = nil
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2838
		{
			yyVAL.str = string("")
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2848
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2852
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2858
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2863
		{
			yyVAL.expr = nil
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2867
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2877
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 561:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2881
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2887
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2891
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2895
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.expr = &NullVal{}
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2921
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2930
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2934
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2939
		{
			yyVAL.exprs = nil
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 575:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2948
		{
			yyVAL.expr = nil
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2957
		{
			yyVAL.orderBy = nil
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2967
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2971
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = AscScr
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = AscScr
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = DescScr
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2995
		{
			yyVAL.limit = nil
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2999
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3003
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3007
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3012
		{
			yyVAL.str = ""
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3016
		{
			yyVAL.str = ForUpdateStr
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3020
		{
			yyVAL.str = ShareModeStr
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3033
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3037
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 595:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3046
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3050
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 597:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3054
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3061
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3073
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 602:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3078
		{
			yyVAL.updateExprs = nil
		}
	case 603:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3082
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3088
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3092
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3098
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3102
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3114
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 610:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3128
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3134
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 614:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].str
			yyVAL.setExprs = SetExprs{yyDollar[2].setExpr}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3149
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3159
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3163
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3167
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3174
		{
			yyVAL.bytes = []byte("charset")
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3185
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3189
		{
			yyVAL.expr = &Default{}
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3198
		{
			yyVAL.byt = 0
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3200
		{
			yyVAL.byt = 1
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3203
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3205
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.str = ""
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3210
		{
			yyVAL.str = IgnoreStr
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3214
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.empty = struct{}{}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3218
		{
			yyVAL.empty = struct{}{}
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.empty = struct{}{}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3222
		{
			yyVAL.empty = struct{}{}
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3224
		{
			yyVAL.empty = struct{}{}
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3226
		{
			yyVAL.empty = struct{}{}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.empty = struct{}{}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3230
		{
			yyVAL.empty = struct{}{}
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.empty = struct{}{}
		}
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3235
		{
			yyVAL.empty = struct{}{}
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.empty = struct{}{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3239
		{
			yyVAL.empty = struct{}{}
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.empty = struct{}{}
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.empty = struct{}{}
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3248
		{
			yyVAL.empty = struct{}{}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.empty = struct{}{}
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3252
		{
			yyVAL.empty = struct{}{}
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3255
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3257
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3272
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3604
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3613
		{
			decNesting(yylex)
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3618
		{
			skipToEnd(yylex)
		}
	case 954:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3623
		{
			skipToEnd(yylex)
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3627
		{
			skipToEnd(yylex)
		}
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
