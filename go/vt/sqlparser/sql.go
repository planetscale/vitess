// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const SCHEMA = 57487
const TABLE = 57488
const INDEX = 57489
const VIEW = 57490
const TO = 57491
const IGNORE = 57492
const IF = 57493
const UNIQUE = 57494
const PRIMARY = 57495
const COLUMN = 57496
const SPATIAL = 57497
const FULLTEXT = 57498
const KEY_BLOCK_SIZE = 57499
const CHECK = 57500
const INDEXES = 57501
const ACTION = 57502
const CASCADE = 57503
const CONSTRAINT = 57504
const FOREIGN = 57505
const NO = 57506
const REFERENCES = 57507
const RESTRICT = 57508
const SHOW = 57509
const DESCRIBE = 57510
const EXPLAIN = 57511
const DATE = 57512
const ESCAPE = 57513
const REPAIR = 57514
const OPTIMIZE = 57515
const TRUNCATE = 57516
const COALESCE = 57517
const EXCHANGE = 57518
const REBUILD = 57519
const PARTITIONING = 57520
const REMOVE = 57521
const MAXVALUE = 57522
const PARTITION = 57523
const REORGANIZE = 57524
const LESS = 57525
const THAN = 57526
const PROCEDURE = 57527
const TRIGGER = 57528
const VINDEX = 57529
const VINDEXES = 57530
const DIRECTORY = 57531
const NAME = 57532
const UPGRADE = 57533
const STATUS = 57534
const VARIABLES = 57535
const WARNINGS = 57536
const CASCADED = 57537
const DEFINER = 57538
const OPTION = 57539
const SQL = 57540
const UNDEFINED = 57541
const SEQUENCE = 57542
const MERGE = 57543
const TEMPORARY = 57544
const TEMPTABLE = 57545
const INVOKER = 57546
const SECURITY = 57547
const FIRST = 57548
const AFTER = 57549
const LAST = 57550
const BEGIN = 57551
const START = 57552
const TRANSACTION = 57553
const COMMIT = 57554
const ROLLBACK = 57555
const SAVEPOINT = 57556
const RELEASE = 57557
const WORK = 57558
const BIT = 57559
const TINYINT = 57560
const SMALLINT = 57561
const MEDIUMINT = 57562
const INT = 57563
const INTEGER = 57564
const BIGINT = 57565
const INTNUM = 57566
const REAL = 57567
const DOUBLE = 57568
const FLOAT_TYPE = 57569
const DECIMAL = 57570
const NUMERIC = 57571
const TIME = 57572
const TIMESTAMP = 57573
const DATETIME = 57574
const YEAR = 57575
const CHAR = 57576
const VARCHAR = 57577
const BOOL = 57578
const CHARACTER = 57579
const VARBINARY = 57580
const NCHAR = 57581
const TEXT = 57582
const TINYTEXT = 57583
const MEDIUMTEXT = 57584
const LONGTEXT = 57585
const BLOB = 57586
const TINYBLOB = 57587
const MEDIUMBLOB = 57588
const LONGBLOB = 57589
const JSON = 57590
const ENUM = 57591
const GEOMETRY = 57592
const POINT = 57593
const LINESTRING = 57594
const POLYGON = 57595
const GEOMETRYCOLLECTION = 57596
const MULTIPOINT = 57597
const MULTILINESTRING = 57598
const MULTIPOLYGON = 57599
const NULLX = 57600
const AUTO_INCREMENT = 57601
const APPROXNUM = 57602
const SIGNED = 57603
const UNSIGNED = 57604
const ZEROFILL = 57605
const COLLATION = 57606
const DATABASES = 57607
const SCHEMAS = 57608
const TABLES = 57609
const VITESS_METADATA = 57610
const VSCHEMA = 57611
const FULL = 57612
const PROCESSLIST = 57613
const COLUMNS = 57614
const FIELDS = 57615
const ENGINES = 57616
const PLUGINS = 57617
const EXTENDED = 57618
const KEYSPACES = 57619
const VITESS_KEYSPACES = 57620
const VITESS_SHARDS = 57621
const VITESS_TABLETS = 57622
const VITESS_MIGRATIONS = 57623
const CODE = 57624
const PRIVILEGES = 57625
const FUNCTION = 57626
const OPEN = 57627
const TRIGGERS = 57628
const EVENT = 57629
const USER = 57630
const NAMES = 57631
const CHARSET = 57632
const GLOBAL = 57633
const SESSION = 57634
const ISOLATION = 57635
const LEVEL = 57636
const READ = 57637
const WRITE = 57638
const ONLY = 57639
const REPEATABLE = 57640
const COMMITTED = 57641
const UNCOMMITTED = 57642
const SERIALIZABLE = 57643
const CURRENT_TIMESTAMP = 57644
const DATABASE = 57645
const CURRENT_DATE = 57646
const CURRENT_TIME = 57647
const LOCALTIME = 57648
const LOCALTIMESTAMP = 57649
const CURRENT_USER = 57650
const UTC_DATE = 57651
const UTC_TIME = 57652
const UTC_TIMESTAMP = 57653
const REPLACE = 57654
const CONVERT = 57655
const CAST = 57656
const SUBSTR = 57657
const SUBSTRING = 57658
const GROUP_CONCAT = 57659
const SEPARATOR = 57660
const TIMESTAMPADD = 57661
const TIMESTAMPDIFF = 57662
const MATCH = 57663
const AGAINST = 57664
const BOOLEAN = 57665
const LANGUAGE = 57666
const WITH = 57667
const QUERY = 57668
const EXPANSION = 57669
const WITHOUT = 57670
const VALIDATION = 57671
const UNUSED = 57672
const ARRAY = 57673
const CUME_DIST = 57674
const DESCRIPTION = 57675
const DENSE_RANK = 57676
const EMPTY = 57677
const EXCEPT = 57678
const FIRST_VALUE = 57679
const GROUPING = 57680
const GROUPS = 57681
const JSON_TABLE = 57682
const LAG = 57683
const LAST_VALUE = 57684
const LATERAL = 57685
const LEAD = 57686
const MEMBER = 57687
const NTH_VALUE = 57688
const NTILE = 57689
const OF = 57690
const OVER = 57691
const PERCENT_RANK = 57692
const RANK = 57693
const RECURSIVE = 57694
const ROW_NUMBER = 57695
const SYSTEM = 57696
const WINDOW = 57697
const ACTIVE = 57698
const ADMIN = 57699
const BUCKETS = 57700
const CLONE = 57701
const COMPONENT = 57702
const DEFINITION = 57703
const ENFORCED = 57704
const EXCLUDE = 57705
const FOLLOWING = 57706
const GEOMCOLLECTION = 57707
const GET_MASTER_PUBLIC_KEY = 57708
const HISTOGRAM = 57709
const HISTORY = 57710
const INACTIVE = 57711
const INVISIBLE = 57712
const LOCKED = 57713
const MASTER_COMPRESSION_ALGORITHMS = 57714
const MASTER_PUBLIC_KEY_PATH = 57715
const MASTER_TLS_CIPHERSUITES = 57716
const MASTER_ZSTD_COMPRESSION_LEVEL = 57717
const NESTED = 57718
const NETWORK_NAMESPACE = 57719
const NOWAIT = 57720
const NULLS = 57721
const OJ = 57722
const OLD = 57723
const OPTIONAL = 57724
const ORDINALITY = 57725
const ORGANIZATION = 57726
const OTHERS = 57727
const PATH = 57728
const PERSIST = 57729
const PERSIST_ONLY = 57730
const PRECEDING = 57731
const PRIVILEGE_CHECKS_USER = 57732
const PROCESS = 57733
const RANDOM = 57734
const REFERENCE = 57735
const REQUIRE_ROW_FORMAT = 57736
const RESOURCE = 57737
const RESPECT = 57738
const RESTART = 57739
const RETAIN = 57740
const REUSE = 57741
const ROLE = 57742
const SECONDARY = 57743
const SECONDARY_ENGINE = 57744
const SECONDARY_LOAD = 57745
const SECONDARY_UNLOAD = 57746
const SKIP = 57747
const SRID = 57748
const THREAD_PRIORITY = 57749
const TIES = 57750
const UNBOUNDED = 57751
const VCPU = 57752
const VISIBLE = 57753
const FORMAT = 57754
const TREE = 57755
const VITESS = 57756
const TRADITIONAL = 57757
const LOCAL = 57758
const LOW_PRIORITY = 57759
const NO_WRITE_TO_BINLOG = 57760
const LOGS = 57761
const ERROR = 57762
const GENERAL = 57763
const HOSTS = 57764
const OPTIMIZER_COSTS = 57765
const USER_RESOURCES = 57766
const SLOW = 57767
const CHANNEL = 57768
const RELAY = 57769
const EXPORT = 57770
const AVG_ROW_LENGTH = 57771
const CONNECTION = 57772
const CHECKSUM = 57773
const DELAY_KEY_WRITE = 57774
const ENCRYPTION = 57775
const ENGINE = 57776
const INSERT_METHOD = 57777
const MAX_ROWS = 57778
const MIN_ROWS = 57779
const PACK_KEYS = 57780
const PASSWORD = 57781
const FIXED = 57782
const DYNAMIC = 57783
const COMPRESSED = 57784
const REDUNDANT = 57785
const COMPACT = 57786
const ROW_FORMAT = 57787
const STATS_AUTO_RECALC = 57788
const STATS_PERSISTENT = 57789
const STATS_SAMPLE_PAGES = 57790
const STORAGE = 57791
const MEMORY = 57792
const DISK = 57793

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	163, 928,
	-2, 90,
	-1, 44,
	1, 111,
	469, 111,
	-2, 117,
	-1, 45,
	143, 117,
	254, 117,
	307, 117,
	-2, 325,
	-1, 52,
	34, 467,
	164, 467,
	176, 467,
	209, 481,
	210, 481,
	-2, 469,
	-1, 57,
	166, 491,
	-2, 489,
	-1, 82,
	56, 558,
	-2, 566,
	-1, 107,
	1, 112,
	469, 112,
	-2, 117,
	-1, 117,
	169, 230,
	170, 230,
	-2, 319,
	-1, 136,
	143, 117,
	254, 117,
	307, 117,
	-2, 334,
	-1, 573,
	150, 949,
	-2, 945,
	-1, 574,
	150, 950,
	-2, 946,
	-1, 592,
	56, 559,
	-2, 571,
	-1, 593,
	56, 560,
	-2, 572,
	-1, 614,
	118, 1288,
	-2, 83,
	-1, 615,
	118, 1171,
	-2, 84,
	-1, 621,
	118, 1221,
	-2, 922,
	-1, 758,
	118, 1109,
	-2, 919,
	-1, 792,
	175, 37,
	180, 37,
	-2, 241,
	-1, 871,
	1, 372,
	469, 372,
	-2, 117,
	-1, 1109,
	1, 268,
	469, 268,
	-2, 117,
	-1, 1187,
	169, 230,
	170, 230,
	-2, 319,
	-1, 1196,
	175, 38,
	180, 38,
	-2, 242,
	-1, 1405,
	150, 952,
	-2, 948,
	-1, 1497,
	74, 65,
	82, 65,
	-2, 69,
	-1, 1518,
	1, 269,
	469, 269,
	-2, 117,
	-1, 1930,
	5, 815,
	18, 815,
	20, 815,
	32, 815,
	83, 815,
	-2, 598,
	-1, 2142,
	46, 890,
	-2, 884,
}

const yyPrivate = 57344

const yyLast = 27649

var yyAct = [...]int{
	573, 2227, 2216, 1982, 2171, 1731, 1843, 2193, 1812, 2155,
	2143, 516, 2071, 2093, 1910, 930, 1698, 1911, 1011, 1979,
	1442, 1515, 531, 1064, 1582, 1732, 1057, 1907, 1796, 1548,
	514, 545, 1816, 1553, 81, 3, 1797, 762, 1718, 1869,
	1494, 1922, 822, 1795, 1172, 145, 1212, 1632, 176, 1194,
	1399, 188, 1580, 479, 188, 1658, 79, 1789, 131, 495,
	1391, 188, 1555, 1094, 787, 1305, 1101, 1476, 1483, 188,
	585, 619, 1084, 1067, 1062, 1444, 594, 1087, 1050, 579,
	518, 1533, 1425, 507, 1368, 910, 947, 32, 769, 793,
	495, 1171, 1284, 495, 188, 495, 883, 1085, 774, 770,
	766, 1544, 800, 790, 1459, 616, 1201, 788, 789, 77,
	1499, 928, 1100, 1074, 1091, 1310, 877, 148, 108, 109,
	1169, 1186, 114, 115, 1098, 502, 1534, 864, 1024, 8,
	7, 175, 6, 1835, 1834, 1611, 1027, 76, 1271, 1857,
	2095, 1858, 1357, 177, 178, 179, 1439, 1440, 1356, 1402,
	1355, 1354, 1353, 1352, 505, 1345, 506, 763, 601, 605,
	2185, 1696, 110, 2139, 1956, 580, 2050, 116, 2117, 2116,
	2066, 188, 826, 2067, 2233, 825, 824, 2190, 2226, 454,
	2166, 188, 827, 876, 1648, 78, 188, 2219, 503, 838,
	839, 1983, 842, 843, 844, 845, 948, 1599, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 1428, 613, 82, 620, 948, 2189, 1886,
	2014, 804, 803, 779, 1697, 110, 781, 780, 1618, 1173,
	2165, 558, 1617, 564, 565, 562, 563, 782, 561, 560,
	559, 828, 829, 830, 1937, 1938, 1500, 835, 566, 567,
	1558, 84, 85, 86, 87, 88, 89, 1510, 1511, 34,
	1509, 958, 70, 38, 39, 1936, 1856, 105, 1441, 182,
	183, 169, 917, 1762, 919, 840, 1761, 1646, 1102, 1763,
	1103, 902, 958, 926, 483, 903, 841, 890, 891, 102,
	896, 577, 174, 110, 576, 588, 111, 783, 133, 888,
	177, 178, 179, 889, 890, 891, 1779, 153, 1527, 2168,
	1845, 916, 918, 2005, 2003, 493, 1344, 778, 497, 491,
	1346, 1347, 1348, 1261, 103, 1817, 1581, 1166, 1285, 1557,
	2218, 1839, 1614, 865, 69, 923, 946, 482, 143, 1840,
	907, 908, 909, 132, 105, 1293, 97, 1294, 1290, 1295,
	1847, 100, 954, 872, 99, 98, 905, 906, 1848, 1626,
	1287, 150, 925, 151, 847, 1262, 1289, 1263, 120, 121,
	142, 141, 168, 954, 846, 904, 2113, 105, 170, 2061,
	897, 2186, 1846, 811, 2129, 973, 972, 982, 983, 975,
	976, 977, 978, 979, 980, 981, 974, 483, 1583, 984,
	879, 103, 1291, 1477, 820, 819, 818, 1288, 483, 802,
	915, 817, 511, 914, 920, 809, 816, 815, 814, 813,
	137, 118, 144, 125, 117, 104, 138, 139, 808, 913,
	154, 784, 1180, 1955, 821, 1500, 1631, 802, 767, 2062,
	159, 126, 767, 796, 900, 2234, 765, 2205, 107, 802,
	482, 767, 1200, 1199, 188, 129, 127, 122, 123, 124,
	128, 482, 795, 878, 1170, 119, 1699, 1701, 607, 1616,
	483, 1849, 921, 1605, 130, 812, 1298, 934, 831, 837,
	495, 495, 495, 1805, 1613, 802, 2231, 1895, 953, 950,
	951, 952, 957, 959, 956, 922, 955, 1559, 495, 495,
	2164, 173, 104, 949, 1776, 1771, 1647, 810, 802, 953,
	950, 951, 952, 957, 959, 956, 1870, 955, 2169, 1894,
	1893, 777, 2156, 482, 949, 776, 802, 775, 1827, 875,
	773, 1634, 1634, 453, 940, 104, 1633, 1633, 180, 1601,
	1625, 2150, 146, 1624, 801, 1516, 1677, 2034, 1772, 1935,
	805, 795, 886, 1723, 892, 893, 894, 895, 984, 1872,
	806, 924, 1700, 1666, 1674, 1273, 1272, 1274, 1275, 1276,
	1774, 1591, 801, 1769, 899, 927, 1505, 188, 807, 795,
	798, 799, 71, 767, 801, 1770, 901, 792, 796, 1078,
	805, 795, 931, 932, 994, 1009, 140, 887, 2130, 869,
	806, 996, 997, 1054, 495, 1758, 791, 188, 134, 188,
	188, 135, 495, 881, 1455, 961, 1055, 1874, 495, 1878,
	801, 1873, 836, 1871, 871, 2121, 1340, 616, 1876, 943,
	941, 964, 942, 2229, 1012, 885, 2230, 1875, 2228, 974,
	964, 1375, 984, 801, 1777, 1775, 823, 911, 1920, 1083,
	1877, 1879, 1311, 92, 1051, 1373, 1374, 1372, 963, 961,
	1286, 801, 1104, 1600, 944, 962, 963, 961, 795, 798,
	799, 1068, 767, 1890, 870, 964, 792, 796, 1888, 866,
	1426, 867, 1684, 964, 868, 996, 997, 1026, 1029, 1031,
	1033, 1034, 1036, 1038, 1039, 1426, 1030, 1032, 93, 1035,
	1037, 1048, 1040, 996, 997, 1565, 1457, 177, 178, 179,
	1598, 1393, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 1596, 811, 1593, 1593, 1940, 164, 165,
	166, 167, 977, 978, 979, 980, 981, 974, 620, 1672,
	984, 1066, 177, 178, 179, 809, 1784, 1671, 884, 1597,
	1595, 1773, 982, 983, 975, 976, 977, 978, 979, 980,
	981, 974, 188, 912, 984, 2235, 1162, 1394, 1312, 1456,
	1071, 2220, 962, 963, 961, 172, 1174, 1175, 1176, 972,
	982, 983, 975, 976, 977, 978, 979, 980, 981, 974,
	964, 495, 984, 1196, 962, 963, 961, 2049, 1056, 2221,
	2048, 1205, 1785, 1460, 1461, 1209, 1961, 1793, 495, 495,
	2210, 495, 964, 495, 495, 1206, 495, 495, 495, 495,
	495, 495, 1363, 1365, 1366, 1178, 1179, 69, 1192, 1280,
	1792, 495, 1897, 2236, 1364, 188, 1245, 1278, 2211, 1371,
	1240, 1241, 1673, 1562, 1281, 1185, 1651, 1652, 1653, 1794,
	1204, 1258, 177, 178, 179, 1214, 1765, 1215, 1266, 1217,
	1219, 1099, 495, 1223, 1225, 1227, 1229, 1231, 1242, 1265,
	188, 772, 1268, 962, 963, 961, 1264, 1256, 188, 1250,
	1898, 2214, 188, 1248, 1249, 962, 963, 961, 1279, 1254,
	1255, 964, 962, 963, 961, 1247, 1277, 1161, 188, 1177,
	1168, 1202, 1202, 964, 1246, 188, 1203, 1182, 1183, 1181,
	964, 1221, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 495, 495, 495, 1195, 2213, 962, 963, 961, 2212,
	1842, 1267, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 2201, 2199, 964, 2084, 2046, 188, 177, 178,
	179, 611, 1575, 1307, 2022, 1943, 606, 1899, 1243, 973,
	972, 982, 983, 975, 976, 977, 978, 979, 980, 981,
	974, 1802, 1790, 984, 1313, 1314, 975, 976, 977, 978,
	979, 980, 981, 974, 1642, 1392, 984, 1609, 1318, 110,
	781, 780, 1299, 1315, 1395, 1325, 1304, 1608, 1308, 1369,
	1319, 1269, 1321, 1322, 1323, 1324, 1257, 1326, 495, 177,
	178, 179, 1253, 1573, 1317, 177, 178, 179, 1659, 1259,
	1252, 1341, 177, 178, 179, 1403, 78, 1396, 1397, 1414,
	1417, 1251, 1336, 1337, 1338, 1427, 1409, 1968, 2204, 1968,
	2162, 589, 495, 495, 608, 609, 1968, 2151, 1370, 2111,
	1968, 589, 2110, 188, 534, 533, 536, 537, 538, 539,
	1501, 1351, 1908, 535, 1501, 540, 495, 1968, 2119, 2064,
	589, 1919, 1449, 188, 1981, 1404, 495, 1593, 589, 1819,
	188, 1405, 188, 1012, 2032, 589, 1968, 1973, 1953, 1952,
	188, 188, 574, 1719, 1403, 1433, 1434, 495, 1949, 1950,
	495, 1949, 1948, 1804, 589, 1468, 589, 1500, 1836, 1165,
	1821, 495, 616, 1814, 1815, 616, 1480, 589, 960, 589,
	1406, 1594, 1502, 2051, 1495, 1450, 1502, 1165, 1164, 80,
	1504, 1110, 1109, 1752, 1500, 1462, 34, 1524, 1919, 2029,
	34, 1500, 960, 189, 1474, 1470, 189, 1469, 1520, 1479,
	1405, 496, 2120, 189, 1968, 1519, 1951, 1480, 1719, 1508,
	34, 189, 1480, 1410, 1411, 1726, 495, 1416, 1419, 1420,
	188, 2052, 2053, 2054, 495, 1523, 1593, 1689, 1571, 1572,
	1574, 1688, 496, 1236, 2100, 496, 189, 496, 1727, 1472,
	1550, 1468, 495, 1432, 1593, 1468, 1435, 1436, 495, 582,
	1480, 1576, 1205, 1503, 1205, 1498, 1535, 1536, 1537, 1556,
	1507, 69, 1592, 1458, 1437, 69, 1799, 1468, 1522, 1521,
	1349, 1506, 1297, 620, 1407, 1408, 620, 1919, 1096, 1579,
	786, 1237, 1238, 1239, 785, 69, 2154, 69, 2073, 1980,
	2040, 1167, 495, 1549, 1392, 1841, 1586, 1545, 1539, 1392,
	1392, 1589, 1538, 1590, 1283, 1197, 1193, 1163, 94, 1546,
	1547, 1563, 1551, 189, 174, 1560, 1568, 1569, 1570, 1451,
	1844, 1561, 1798, 189, 69, 2074, 1923, 1924, 189, 1602,
	1173, 2223, 2217, 1926, 188, 1584, 1585, 1908, 188, 188,
	188, 188, 188, 804, 803, 1603, 1551, 1810, 188, 188,
	188, 188, 589, 1202, 1604, 1635, 1809, 1588, 1808, 1606,
	1607, 188, 968, 1929, 971, 2055, 2017, 1799, 188, 1566,
	985, 986, 987, 988, 989, 990, 991, 1342, 969, 970,
	967, 973, 972, 982, 983, 975, 976, 977, 978, 979,
	980, 981, 974, 188, 495, 984, 1300, 1928, 973, 972,
	982, 983, 975, 976, 977, 978, 979, 980, 981, 974,
	2056, 2057, 984, 973, 972, 982, 983, 975, 976, 977,
	978, 979, 980, 981, 974, 1233, 2016, 984, 1745, 1367,
	1489, 1490, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383,
	1384, 1385, 1386, 1387, 1388, 1389, 1390, 1740, 1612, 1485,
	1488, 1489, 1490, 1486, 1369, 1487, 1491, 1743, 2207, 1739,
	1637, 1638, 1744, 1741, 1629, 1640, 2188, 1900, 1742, 1708,
	1234, 1235, 1641, 973, 972, 982, 983, 975, 976, 977,
	978, 979, 980, 981, 974, 1065, 1645, 984, 188, 2033,
	1971, 1429, 2144, 2146, 1717, 1528, 188, 1529, 1530, 1531,
	1532, 2147, 2173, 1370, 1716, 2209, 2192, 1654, 96, 2194,
	2172, 1706, 101, 1540, 1541, 1542, 1543, 2176, 2141, 1707,
	188, 1296, 575, 1803, 833, 1422, 832, 1705, 1992, 1798,
	1668, 188, 188, 188, 188, 188, 1667, 599, 595, 1712,
	1423, 1733, 1855, 188, 580, 933, 2098, 188, 1829, 1828,
	188, 188, 111, 596, 188, 188, 188, 1683, 181, 171,
	1721, 1728, 184, 1058, 1724, 1051, 1695, 1764, 1945, 1944,
	1587, 1703, 1806, 1211, 1210, 1059, 1069, 1070, 598, 1198,
	597, 1750, 2027, 1711, 1453, 1783, 1460, 1461, 1303, 2112,
	1753, 2068, 1720, 1493, 1755, 1650, 189, 1722, 583, 584,
	1663, 1664, 586, 1734, 1715, 1782, 1737, 1786, 1787, 1788,
	1746, 2200, 1714, 2198, 1767, 1751, 2197, 188, 1756, 2177,
	2175, 1681, 496, 496, 496, 1759, 2026, 1307, 495, 1735,
	1736, 1967, 1738, 1577, 495, 1768, 587, 495, 80, 1205,
	496, 496, 2025, 1818, 495, 1822, 1903, 1791, 1719, 1556,
	1801, 2225, 2224, 582, 1678, 1675, 1833, 1824, 1079, 1661,
	1072, 1780, 1781, 1662, 188, 2225, 2148, 1800, 1942, 1454,
	78, 83, 75, 1, 1669, 1670, 1832, 466, 1438, 1049,
	1676, 478, 188, 1679, 1680, 1185, 1831, 2215, 1823, 1270,
	1260, 1686, 1984, 1687, 2070, 1974, 1690, 1691, 1692, 1693,
	1694, 1554, 794, 136, 1517, 1830, 1518, 1404, 2158, 91,
	760, 90, 1704, 1405, 797, 898, 1578, 495, 2065, 189,
	1778, 1526, 1116, 1392, 1851, 1114, 1115, 1850, 1113, 1118,
	1117, 1112, 1866, 1485, 1488, 1489, 1490, 1486, 1343, 1487,
	1491, 1867, 492, 1923, 1924, 1868, 496, 1492, 1105, 189,
	1073, 189, 189, 495, 496, 1887, 834, 456, 1748, 1749,
	496, 1859, 1954, 1881, 188, 1339, 1865, 1610, 462, 992,
	1713, 1760, 1853, 617, 495, 1854, 599, 595, 610, 1914,
	495, 495, 1909, 1880, 2170, 2140, 2142, 2094, 1733, 1866,
	2145, 2138, 596, 2208, 2191, 1525, 1452, 1061, 2024, 1896,
	1902, 1682, 1021, 188, 1424, 1088, 517, 1448, 1362, 1912,
	532, 529, 530, 1463, 1725, 592, 593, 598, 966, 597,
	1918, 515, 509, 1080, 1484, 1482, 1481, 1917, 1301, 1927,
	1092, 1925, 1921, 1086, 1467, 1615, 1655, 1656, 1657, 1838,
	1931, 945, 1933, 1932, 1934, 1906, 591, 504, 95, 1421,
	2128, 1649, 1946, 1947, 1962, 2013, 188, 590, 60, 188,
	188, 188, 1939, 37, 499, 495, 2184, 936, 600, 31,
	30, 29, 28, 23, 22, 21, 1958, 20, 188, 1970,
	19, 25, 18, 1957, 17, 16, 106, 47, 44, 42,
	113, 1959, 1960, 112, 45, 1985, 495, 495, 495, 41,
	188, 1975, 1969, 873, 189, 1972, 27, 26, 15, 1993,
	1977, 14, 13, 1978, 12, 11, 1556, 10, 9, 5,
	4, 939, 24, 1010, 2, 0, 0, 1863, 1864, 0,
	0, 0, 0, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 603, 0, 0, 0, 0, 0, 0,
	496, 496, 0, 496, 2001, 496, 496, 0, 496, 496,
	496, 496, 496, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 496, 0, 0, 0, 189, 0, 0,
	0, 1733, 0, 0, 0, 0, 0, 2028, 1996, 0,
	0, 0, 2036, 1915, 0, 2037, 0, 0, 0, 0,
	1990, 1991, 0, 0, 496, 2042, 0, 0, 508, 0,
	0, 0, 189, 0, 1930, 2044, 0, 0, 495, 495,
	189, 2043, 0, 0, 189, 0, 2059, 0, 0, 0,
	2023, 495, 0, 2058, 495, 0, 0, 0, 0, 2069,
	189, 0, 0, 0, 0, 0, 0, 189, 0, 2072,
	2077, 0, 0, 0, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 496, 496, 496, 0, 0, 0, 495,
	495, 495, 188, 2075, 0, 0, 0, 2087, 2089, 2090,
	2045, 0, 2047, 495, 0, 495, 0, 0, 0, 189,
	0, 495, 2091, 0, 0, 2097, 0, 2099, 2103, 2106,
	0, 546, 33, 0, 0, 0, 0, 0, 0, 0,
	0, 1912, 0, 188, 0, 1912, 2101, 2108, 0, 2109,
	0, 0, 1861, 1862, 495, 188, 0, 0, 0, 1995,
	0, 2076, 2122, 1997, 2083, 33, 0, 1882, 1883, 2115,
	1884, 1885, 0, 0, 2006, 2007, 0, 0, 0, 0,
	496, 1891, 1892, 2118, 2092, 0, 0, 2105, 2137, 0,
	2021, 0, 0, 2107, 0, 2149, 0, 0, 0, 0,
	0, 495, 495, 0, 2011, 544, 0, 2030, 2031, 581,
	0, 2035, 1912, 2157, 496, 496, 2072, 2159, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 2152, 0, 0,
	0, 495, 2167, 2174, 2178, 495, 0, 0, 496, 0,
	1733, 0, 2180, 2183, 0, 189, 0, 0, 496, 2187,
	0, 0, 189, 0, 189, 2196, 187, 2195, 0, 490,
	0, 0, 189, 189, 1941, 0, 187, 0, 2063, 496,
	0, 2206, 496, 0, 187, 0, 0, 0, 1998, 1999,
	0, 2000, 0, 496, 2002, 0, 2004, 0, 0, 0,
	604, 604, 0, 0, 0, 0, 0, 0, 2222, 187,
	0, 0, 0, 0, 0, 0, 0, 2232, 0, 0,
	0, 0, 2088, 973, 972, 982, 983, 975, 976, 977,
	978, 979, 980, 981, 974, 0, 0, 984, 0, 0,
	0, 2010, 0, 0, 0, 0, 0, 0, 496, 0,
	0, 0, 189, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 0, 1994, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	496, 0, 2124, 2125, 2126, 2127, 187, 2131, 0, 2132,
	2133, 2134, 0, 2135, 2136, 0, 187, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 34, 35, 36, 70, 38, 39, 0,
	0, 0, 0, 0, 496, 0, 0, 0, 0, 0,
	0, 0, 2163, 74, 0, 0, 0, 0, 40, 66,
	67, 0, 64, 68, 0, 0, 0, 0, 0, 65,
	973, 972, 982, 983, 975, 976, 977, 978, 979, 980,
	981, 974, 0, 0, 984, 2009, 189, 0, 0, 0,
	189, 189, 189, 189, 189, 0, 0, 0, 53, 0,
	189, 189, 189, 189, 0, 2202, 2203, 0, 69, 0,
	0, 0, 0, 189, 965, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	0, 2078, 2079, 2080, 2081, 2082, 0, 0, 0, 2085,
	2086, 0, 0, 0, 0, 189, 496, 0, 0, 0,
	508, 0, 0, 0, 111, 0, 543, 0, 0, 1022,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	43, 46, 49, 48, 51, 0, 63, 0, 0, 0,
	1060, 1063, 0, 0, 973, 972, 982, 983, 975, 976,
	977, 978, 979, 980, 981, 974, 1766, 0, 984, 0,
	0, 52, 73, 72, 0, 494, 61, 62, 50, 150,
	0, 151, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 929, 929, 929, 0, 0, 618, 0, 189, 764,
	0, 771, 0, 54, 55, 0, 56, 57, 58, 59,
	0, 33, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 993, 995, 2181, 0, 0, 0,
	0, 0, 0, 189, 189, 189, 189, 189, 154, 187,
	0, 0, 0, 0, 0, 189, 0, 0, 159, 189,
	0, 0, 189, 189, 0, 1008, 189, 189, 189, 1013,
	1014, 1015, 1016, 1017, 1018, 1019, 1020, 0, 1023, 1025,
	1028, 1028, 1028, 1025, 1028, 1028, 1025, 1028, 1041, 1042,
	1043, 1044, 1045, 1046, 1047, 0, 0, 0, 0, 0,
	1053, 0, 0, 33, 2008, 0, 0, 0, 0, 0,
	0, 169, 0, 0, 0, 0, 71, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 189,
	1089, 0, 0, 0, 0, 0, 111, 0, 133, 0,
	496, 0, 0, 0, 0, 0, 496, 153, 0, 496,
	0, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	146, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 187, 0, 0, 0, 189, 0, 143, 0,
	0, 0, 0, 132, 0, 0, 0, 604, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 150, 187, 151, 187, 1095, 0, 0, 1188, 1189,
	142, 141, 168, 973, 972, 982, 983, 975, 976, 977,
	978, 979, 980, 981, 974, 0, 0, 984, 0, 496,
	973, 972, 982, 983, 975, 976, 977, 978, 979, 980,
	981, 974, 0, 0, 984, 0, 0, 0, 0, 1309,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	137, 1190, 144, 0, 1187, 496, 138, 139, 0, 0,
	154, 0, 0, 0, 1860, 0, 189, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 496, 0, 0, 0,
	0, 0, 496, 496, 973, 972, 982, 983, 975, 976,
	977, 978, 979, 980, 981, 974, 0, 0, 984, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 1358, 1359, 1360, 1361, 0, 0,
	147, 152, 149, 155, 156, 157, 158, 160, 161, 162,
	163, 0, 0, 0, 0, 0, 164, 165, 166, 167,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 189, 189, 189, 0, 0, 0, 496, 0, 1412,
	1413, 0, 146, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 618, 618, 618, 1208,
	0, 0, 0, 0, 0, 0, 0, 0, 496, 496,
	496, 0, 189, 0, 935, 937, 0, 508, 0, 0,
	0, 0, 0, 0, 1208, 1208, 0, 0, 0, 0,
	187, 0, 1660, 0, 0, 0, 140, 0, 0, 0,
	0, 0, 929, 929, 929, 0, 0, 0, 134, 0,
	0, 135, 973, 972, 982, 983, 975, 976, 977, 978,
	979, 980, 981, 974, 0, 187, 984, 0, 1514, 0,
	0, 0, 0, 187, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 0, 0, 1327, 1328, 187,
	187, 187, 187, 187, 187, 187, 0, 0, 0, 0,
	1076, 0, 0, 0, 1052, 0, 0, 1552, 618, 0,
	496, 496, 0, 0, 1106, 0, 0, 0, 0, 0,
	0, 0, 187, 496, 0, 0, 496, 0, 0, 0,
	0, 0, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 0, 0, 0, 0, 0, 164, 165,
	166, 167, 0, 0, 0, 186, 0, 0, 0, 0,
	0, 496, 496, 496, 189, 498, 0, 0, 0, 0,
	0, 0, 0, 578, 0, 496, 0, 496, 0, 0,
	0, 0, 0, 496, 604, 1306, 0, 0, 0, 604,
	604, 1496, 0, 604, 604, 604, 0, 0, 768, 1208,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 496, 189, 0, 604,
	604, 604, 604, 604, 0, 0, 0, 0, 1446, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 1306, 187, 0, 187, 0, 0,
	0, 0, 0, 496, 496, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 863, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 874, 169, 764, 0, 0,
	880, 0, 0, 496, 0, 0, 0, 496, 0, 0,
	1207, 0, 0, 0, 1213, 1213, 0, 1213, 0, 1213,
	1213, 111, 1222, 1213, 1213, 1213, 1213, 1213, 0, 0,
	0, 0, 153, 0, 0, 1207, 1207, 764, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1685, 0, 0, 0, 0, 0, 150, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1709, 1710, 1063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 618, 618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 0, 0, 187,
	0, 0, 0, 187, 187, 187, 187, 187, 0, 0,
	0, 0, 0, 187, 187, 187, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1398, 1665, 618, 0, 581, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	1207, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1430, 1431,
	0, 0, 0, 0, 0, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 882, 0,
	0, 0, 1464, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 1076, 0, 0, 618, 604, 604, 1729, 1730,
	0, 0, 1089, 1089, 1089, 1089, 1089, 0, 0, 0,
	0, 0, 0, 618, 0, 0, 618, 604, 1496, 0,
	0, 1089, 0, 0, 0, 1089, 0, 764, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 1446, 0, 0, 0, 0, 0, 0, 1889, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 604, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1208, 187, 187, 187, 187,
	187, 0, 771, 1904, 0, 0, 0, 0, 1747, 0,
	1567, 0, 187, 0, 0, 187, 187, 0, 0, 187,
	1757, 1306, 0, 0, 0, 0, 0, 0, 764, 0,
	0, 0, 0, 0, 771, 0, 1826, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1082, 0, 0, 1093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 177, 178, 179, 147, 152, 149,
	155, 156, 157, 158, 160, 161, 162, 163, 764, 0,
	0, 0, 187, 164, 165, 166, 167, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 471, 0, 0, 0, 0, 187,
	0, 0, 0, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 468, 0, 0, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1913,
	0, 33, 0, 0, 2015, 0, 0, 0, 0, 0,
	1644, 604, 465, 0, 0, 0, 0, 0, 0, 0,
	0, 477, 0, 0, 1089, 0, 0, 508, 0, 0,
	0, 0, 0, 0, 2038, 0, 1111, 2039, 0, 0,
	2041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 483, 0, 0, 0, 0, 0,
	0, 0, 1208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 455, 457, 458, 0, 474, 476, 484, 187, 0,
	0, 472, 473, 485, 459, 460, 489, 488, 475, 1244,
	464, 461, 463, 469, 0, 0, 0, 482, 467, 486,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2096,
	508, 0, 0, 0, 1292, 0, 1207, 0, 0, 0,
	0, 187, 1302, 0, 187, 187, 187, 0, 2012, 0,
	0, 0, 0, 1208, 0, 2018, 2019, 2020, 0, 0,
	0, 0, 1316, 187, 0, 0, 0, 0, 0, 1320,
	0, 0, 0, 0, 0, 0, 0, 0, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1093, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 487, 1813, 0, 0, 0, 1207, 0,
	1820, 0, 0, 1813, 0, 0, 0, 0, 618, 0,
	1825, 480, 0, 0, 0, 1208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 481, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1913, 0, 33, 0, 1913, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 0, 0,
	33, 0, 0, 0, 0, 0, 0, 1471, 0, 0,
	0, 169, 0, 0, 1475, 0, 1478, 0, 0, 0,
	0, 0, 1184, 0, 0, 1497, 0, 1446, 0, 1213,
	0, 0, 1913, 0, 0, 0, 111, 0, 133, 0,
	0, 0, 0, 0, 33, 2153, 0, 153, 0, 0,
	618, 0, 0, 1207, 0, 0, 1916, 1213, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	187, 0, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 151, 1564, 0, 0, 0, 1188, 1189,
	142, 141, 168, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 764, 0, 0, 1207, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1208, 0, 0, 0, 0, 0,
	137, 1190, 144, 0, 1187, 0, 138, 139, 0, 0,
	154, 0, 1986, 1987, 1988, 1133, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 1619, 1620, 1621, 1622, 1623, 0, 0, 0,
	0, 0, 1627, 1628, 1093, 1630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1636, 1207, 0, 0, 0,
	0, 0, 1639, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1643, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 0, 1121, 0,
	0, 0, 0, 0, 1813, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 0, 0,
	618, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1134, 0, 0, 0, 0, 140, 0, 0, 0,
	0, 0, 0, 0, 0, 1813, 1813, 1813, 134, 0,
	0, 135, 0, 0, 0, 0, 0, 0, 0, 2102,
	0, 2104, 0, 0, 0, 0, 0, 1813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1147, 1150,
	1151, 1152, 1153, 1154, 1155, 0, 1156, 1157, 1158, 1159,
	1160, 1135, 1136, 1137, 1138, 1119, 1120, 1148, 0, 1122,
	1813, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131,
	1132, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 618, 618, 0,
	0, 0, 147, 152, 149, 155, 156, 157, 158, 160,
	161, 162, 163, 0, 0, 0, 0, 0, 164, 165,
	166, 167, 0, 0, 0, 1207, 0, 2179, 0, 0,
	0, 1813, 0, 0, 1149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1901, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 1964, 1965, 1966, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1976, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1989, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 742, 729, 0,
	0, 678, 745, 649, 667, 754, 669, 672, 712, 629,
	691, 331, 664, 0, 653, 625, 660, 626, 651, 680,
	241, 684, 648, 731, 694, 744, 289, 0, 631, 654,
	345, 714, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 751, 293, 701, 0,
	391, 316, 0, 0, 0, 682, 734, 689, 725, 677,
	713, 638, 700, 746, 665, 709, 747, 279, 225, 195,
	328, 392, 255, 0, 0, 0, 177, 178, 179, 0,
	2160, 2161, 0, 0, 0, 0, 0, 217, 0, 223,
	706, 741, 662, 708, 237, 277, 243, 236, 407, 711,
	757, 624, 703, 0, 627, 630, 753, 737, 657, 658,
	0, 0, 0, 0, 0, 0, 0, 681, 690, 722,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	0, 699, 0, 0, 0, 634, 628, 2114, 0, 0,
	0, 679, 0, 0, 0, 637, 0, 656, 723, 2123,
	622, 263, 632, 317, 727, 736, 676, 438, 740, 674,
	673, 743, 718, 635, 733, 668, 288, 633, 285, 191,
	205, 0, 666, 327, 366, 372, 732, 652, 661, 228,
	659, 370, 341, 424, 213, 253, 363, 346, 368, 698,
	716, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 647, 728, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 720, 756, 340, 371, 219, 426,
	390, 642, 646, 640, 641, 692, 693, 643, 748, 749,
	750, 724, 636, 0, 644, 645, 0, 730, 738, 739,
	697, 190, 203, 291, 752, 360, 256, 450, 433, 429,
	623, 639, 234, 650, 0, 0, 663, 670, 671, 683,
	685, 686, 687, 688, 696, 704, 705, 707, 715, 717,
	719, 721, 726, 735, 755, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 695, 702, 301, 250,
	267, 276, 710, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 742, 729, 0, 0, 678, 745, 649, 667, 754,
	669, 672, 712, 629, 691, 331, 664, 0, 653, 625,
	660, 626, 651, 680, 241, 684, 648, 731, 694, 744,
	289, 0, 631, 654, 345, 714, 382, 227, 298, 296,
	410, 251, 244, 240, 226, 273, 304, 343, 400, 337,
	751, 293, 701, 0, 391, 316, 0, 0, 0, 682,
	734, 689, 725, 677, 713, 638, 700, 746, 665, 709,
	747, 279, 225, 195, 328, 392, 255, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 223, 706, 741, 662, 708, 237, 277,
	243, 236, 407, 711, 757, 624, 703, 0, 627, 630,
	753, 737, 657, 658, 0, 0, 0, 0, 0, 0,
	0, 681, 690, 722, 675, 0, 0, 0, 0, 0,
	0, 1905, 0, 655, 0, 699, 0, 0, 0, 634,
	628, 0, 0, 0, 0, 679, 0, 0, 0, 637,
	0, 656, 723, 0, 622, 263, 632, 317, 727, 736,
	676, 438, 740, 674, 673, 743, 718, 635, 733, 668,
	288, 633, 285, 191, 205, 0, 666, 327, 366, 372,
	732, 652, 661, 228, 659, 370, 341, 424, 213, 253,
	363, 346, 368, 698, 716, 369, 294, 412, 358, 422,
	439, 440, 235, 321, 430, 404, 436, 449, 206, 232,
	335, 397, 427, 388, 314, 408, 409, 284, 387, 261,
	194, 292, 198, 399, 420, 218, 380, 0, 0, 0,
	200, 418, 396, 311, 281, 282, 199, 0, 362, 239,
	259, 230, 330, 415, 416, 229, 451, 208, 435, 202,
	209, 434, 323, 411, 419, 312, 303, 201, 417, 310,
	302, 287, 249, 269, 356, 297, 357, 270, 319, 318,
	320, 0, 196, 0, 393, 428, 452, 215, 647, 728,
	406, 444, 448, 0, 359, 216, 260, 248, 355, 258,
	290, 443, 445, 446, 447, 214, 353, 266, 334, 423,
	252, 431, 322, 210, 272, 389, 286, 295, 720, 756,
	340, 371, 219, 426, 390, 642, 646, 640, 641, 692,
	693, 643, 748, 749, 750, 724, 636, 0, 644, 645,
	0, 730, 738, 739, 697, 190, 203, 291, 752, 360,
	256, 450, 433, 429, 623, 639, 234, 650, 0, 0,
	663, 670, 671, 683, 685, 686, 687, 688, 696, 704,
	705, 707, 715, 717, 719, 721, 726, 735, 755, 192,
	193, 204, 212, 221, 233, 246, 254, 264, 268, 271,
	274, 275, 278, 283, 300, 305, 306, 307, 308, 324,
	325, 326, 329, 332, 333, 336, 338, 339, 342, 348,
	349, 350, 351, 352, 354, 361, 365, 373, 374, 375,
	376, 377, 378, 379, 383, 384, 385, 386, 394, 398,
	413, 414, 425, 437, 441, 265, 421, 442, 0, 299,
	695, 702, 301, 250, 267, 276, 710, 432, 395, 207,
	367, 257, 197, 224, 211, 231, 245, 247, 280, 309,
	315, 344, 347, 262, 242, 222, 364, 220, 381, 401,
	402, 403, 405, 313, 238, 742, 729, 0, 0, 678,
	745, 649, 667, 754, 669, 672, 712, 629, 691, 331,
	664, 0, 653, 625, 660, 626, 651, 680, 241, 684,
	648, 731, 694, 744, 289, 0, 631, 654, 345, 714,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 751, 293, 701, 0, 391, 316,
	0, 0, 0, 682, 734, 689, 725, 677, 713, 638,
	700, 746, 665, 709, 747, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 706, 741,
	662, 708, 237, 277, 243, 236, 407, 711, 757, 624,
	703, 0, 627, 630, 753, 737, 657, 658, 0, 0,
	0, 0, 0, 0, 0, 681, 690, 722, 675, 0,
	0, 0, 0, 0, 0, 1758, 0, 655, 0, 699,
	0, 0, 0, 634, 628, 0, 0, 0, 0, 679,
	0, 0, 0, 637, 0, 656, 723, 0, 622, 263,
	632, 317, 727, 736, 676, 438, 740, 674, 673, 743,
	718, 635, 733, 668, 288, 633, 285, 191, 205, 0,
	666, 327, 366, 372, 732, 652, 661, 228, 659, 370,
	341, 424, 213, 253, 363, 346, 368, 698, 716, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 647, 728, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 720, 756, 340, 371, 219, 426, 390, 642,
	646, 640, 641, 692, 693, 643, 748, 749, 750, 724,
	636, 0, 644, 645, 0, 730, 738, 739, 697, 190,
	203, 291, 752, 360, 256, 450, 433, 429, 623, 639,
	234, 650, 0, 0, 663, 670, 671, 683, 685, 686,
	687, 688, 696, 704, 705, 707, 715, 717, 719, 721,
	726, 735, 755, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 695, 702, 301, 250, 267, 276,
	710, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 742,
	729, 0, 0, 678, 745, 649, 667, 754, 669, 672,
	712, 629, 691, 331, 664, 0, 653, 625, 660, 626,
	651, 680, 241, 684, 648, 731, 694, 744, 289, 0,
	631, 654, 345, 714, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 751, 293,
	701, 0, 391, 316, 0, 0, 0, 682, 734, 689,
	725, 677, 713, 638, 700, 746, 665, 709, 747, 279,
	225, 195, 328, 392, 255, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 223, 706, 741, 662, 708, 237, 277, 243, 236,
	407, 711, 757, 624, 703, 0, 627, 630, 753, 737,
	657, 658, 0, 0, 0, 0, 0, 0, 0, 681,
	690, 722, 675, 0, 0, 0, 0, 0, 0, 1473,
	0, 655, 0, 699, 0, 0, 0, 634, 628, 0,
	0, 0, 0, 679, 0, 0, 0, 637, 0, 656,
	723, 0, 622, 263, 632, 317, 727, 736, 676, 438,
	740, 674, 673, 743, 718, 635, 733, 668, 288, 633,
	285, 191, 205, 0, 666, 327, 366, 372, 732, 652,
	661, 228, 659, 370, 341, 424, 213, 253, 363, 346,
	368, 698, 716, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 420, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 209, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 647, 728, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	322, 210, 272, 389, 286, 295, 720, 756, 340, 371,
	219, 426, 390, 642, 646, 640, 641, 692, 693, 643,
	748, 749, 750, 724, 636, 0, 644, 645, 0, 730,
	738, 739, 697, 190, 203, 291, 752, 360, 256, 450,
	433, 429, 623, 639, 234, 650, 0, 0, 663, 670,
	671, 683, 685, 686, 687, 688, 696, 704, 705, 707,
	715, 717, 719, 721, 726, 735, 755, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 695, 702,
	301, 250, 267, 276, 710, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 742, 729, 0, 0, 678, 745, 649,
	667, 754, 669, 672, 712, 629, 691, 331, 664, 0,
	653, 625, 660, 626, 651, 680, 241, 684, 648, 731,
	694, 744, 289, 0, 631, 654, 345, 714, 382, 227,
	298, 296, 410, 251, 244, 240, 226, 273, 304, 343,
	400, 337, 751, 293, 701, 0, 391, 316, 0, 0,
	0, 682, 734, 689, 725, 677, 713, 638, 700, 746,
	665, 709, 747, 279, 225, 195, 328, 392, 255, 69,
	0, 0, 177, 178, 179, 0, 0, 0, 0, 0,
	0, 0, 0, 217, 0, 223, 706, 741, 662, 708,
	237, 277, 243, 236, 407, 711, 757, 624, 703, 0,
	627, 630, 753, 737, 657, 658, 0, 0, 0, 0,
	0, 0, 0, 681, 690, 722, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 655, 0, 699, 0, 0,
	0, 634, 628, 0, 0, 0, 0, 679, 0, 0,
	0, 637, 0, 656, 723, 0, 622, 263, 632, 317,
	727, 736, 676, 438, 740, 674, 673, 743, 718, 635,
	733, 668, 288, 633, 285, 191, 205, 0, 666, 327,
	366, 372, 732, 652, 661, 228, 659, 370, 341, 424,
	213, 253, 363, 346, 368, 698, 716, 369, 294, 412,
	358, 422, 439, 440, 235, 321, 430, 404, 436, 449,
	206, 232, 335, 397, 427, 388, 314, 408, 409, 284,
	387, 261, 194, 292, 198, 399, 420, 218, 380, 0,
	0, 0, 200, 418, 396, 311, 281, 282, 199, 0,
	362, 239, 259, 230, 330, 415, 416, 229, 451, 208,
	435, 202, 209, 434, 323, 411, 419, 312, 303, 201,
	417, 310, 302, 287, 249, 269, 356, 297, 357, 270,
	319, 318, 320, 0, 196, 0, 393, 428, 452, 215,
	647, 728, 406, 444, 448, 0, 359, 216, 260, 248,
	355, 258, 290, 443, 445, 446, 447, 214, 353, 266,
	334, 423, 252, 431, 322, 210, 272, 389, 286, 295,
	720, 756, 340, 371, 219, 426, 390, 642, 646, 640,
	641, 692, 693, 643, 748, 749, 750, 724, 636, 0,
	644, 645, 0, 730, 738, 739, 697, 190, 203, 291,
	752, 360, 256, 450, 433, 429, 623, 639, 234, 650,
	0, 0, 663, 670, 671, 683, 685, 686, 687, 688,
	696, 704, 705, 707, 715, 717, 719, 721, 726, 735,
	755, 192, 193, 204, 212, 221, 233, 246, 254, 264,
	268, 271, 274, 275, 278, 283, 300, 305, 306, 307,
	308, 324, 325, 326, 329, 332, 333, 336, 338, 339,
	342, 348, 349, 350, 351, 352, 354, 361, 365, 373,
	374, 375, 376, 377, 378, 379, 383, 384, 385, 386,
	394, 398, 413, 414, 425, 437, 441, 265, 421, 442,
	0, 299, 695, 702, 301, 250, 267, 276, 710, 432,
	395, 207, 367, 257, 197, 224, 211, 231, 245, 247,
	280, 309, 315, 344, 347, 262, 242, 222, 364, 220,
	381, 401, 402, 403, 405, 313, 238, 742, 729, 0,
	0, 678, 745, 649, 667, 754, 669, 672, 712, 629,
	691, 331, 664, 0, 653, 625, 660, 626, 651, 680,
	241, 684, 648, 731, 694, 744, 289, 0, 631, 654,
	345, 714, 382, 227, 298, 296, 410, 251, 244, 240,
	226, 273, 304, 343, 400, 337, 751, 293, 701, 0,
	391, 316, 0, 0, 0, 682, 734, 689, 725, 677,
	713, 638, 700, 746, 665, 709, 747, 279, 225, 195,
	328, 392, 255, 0, 0, 0, 177, 178, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 217, 0, 223,
	706, 741, 662, 708, 237, 277, 243, 236, 407, 711,
	757, 624, 703, 0, 627, 630, 753, 737, 657, 658,
	0, 0, 0, 0, 0, 0, 0, 681, 690, 722,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 655,
	0, 699, 0, 0, 0, 634, 628, 0, 0, 0,
	0, 679, 0, 0, 0, 637, 0, 656, 723, 0,
	622, 263, 632, 317, 727, 736, 676, 438, 740, 674,
	673, 743, 718, 635, 733, 668, 288, 633, 285, 191,
	205, 0, 666, 327, 366, 372, 732, 652, 661, 228,
	659, 370, 341, 424, 213, 253, 363, 346, 368, 698,
	716, 369, 294, 412, 358, 422, 439, 440, 235, 321,
	430, 404, 436, 449, 206, 232, 335, 397, 427, 388,
	314, 408, 409, 284, 387, 261, 194, 292, 198, 399,
	420, 218, 380, 0, 0, 0, 200, 418, 396, 311,
	281, 282, 199, 0, 362, 239, 259, 230, 330, 415,
	416, 229, 451, 208, 435, 202, 209, 434, 323, 411,
	419, 312, 303, 201, 417, 310, 302, 287, 249, 269,
	356, 297, 357, 270, 319, 318, 320, 0, 196, 0,
	393, 428, 452, 215, 647, 728, 406, 444, 448, 0,
	359, 216, 260, 248, 355, 258, 290, 443, 445, 446,
	447, 214, 353, 266, 334, 423, 252, 431, 322, 210,
	272, 389, 286, 295, 720, 756, 340, 371, 219, 426,
	390, 642, 646, 640, 641, 692, 693, 643, 748, 749,
	750, 724, 636, 0, 644, 645, 0, 730, 738, 739,
	697, 190, 203, 291, 752, 360, 256, 450, 433, 429,
	623, 639, 234, 650, 0, 0, 663, 670, 671, 683,
	685, 686, 687, 688, 696, 704, 705, 707, 715, 717,
	719, 721, 726, 735, 755, 192, 193, 204, 212, 221,
	233, 246, 254, 264, 268, 271, 274, 275, 278, 283,
	300, 305, 306, 307, 308, 324, 325, 326, 329, 332,
	333, 336, 338, 339, 342, 348, 349, 350, 351, 352,
	354, 361, 365, 373, 374, 375, 376, 377, 378, 379,
	383, 384, 385, 386, 394, 398, 413, 414, 425, 437,
	441, 265, 421, 442, 0, 299, 695, 702, 301, 250,
	267, 276, 710, 432, 395, 207, 367, 257, 197, 224,
	211, 231, 245, 247, 280, 309, 315, 344, 347, 262,
	242, 222, 364, 220, 381, 401, 402, 403, 405, 313,
	238, 742, 729, 0, 0, 678, 745, 649, 667, 754,
	669, 672, 712, 629, 691, 331, 664, 0, 653, 625,
	660, 626, 651, 680, 241, 684, 648, 731, 694, 744,
	289, 0, 631, 654, 345, 714, 382, 227, 298, 296,
	410, 251, 244, 240, 226, 273, 304, 343, 400, 337,
	751, 293, 701, 0, 391, 316, 0, 0, 0, 682,
	734, 689, 725, 677, 713, 638, 700, 746, 665, 709,
	747, 279, 225, 195, 328, 392, 255, 0, 0, 0,
	177, 178, 179, 0, 0, 0, 0, 0, 0, 0,
	0, 217, 0, 223, 706, 741, 662, 708, 237, 277,
	243, 236, 407, 711, 757, 624, 703, 0, 627, 630,
	753, 737, 657, 658, 0, 0, 0, 0, 0, 0,
	0, 681, 690, 722, 675, 0, 0, 0, 0, 0,
	0, 0, 0, 655, 0, 699, 0, 0, 0, 634,
	628, 0, 0, 0, 0, 679, 0, 0, 0, 637,
	0, 656, 723, 0, 622, 263, 632, 317, 727, 736,
	676, 438, 740, 674, 673, 743, 718, 635, 733, 668,
	288, 633, 285, 191, 205, 0, 666, 327, 366, 372,
	732, 652, 661, 228, 659, 370, 341, 424, 213, 253,
	363, 346, 368, 698, 716, 369, 294, 412, 358, 422,
	439, 440, 235, 321, 430, 404, 436, 449, 206, 232,
	335, 397, 427, 388, 314, 408, 409, 284, 387, 261,
	194, 292, 198, 399, 420, 218, 380, 0, 0, 0,
	200, 418, 396, 311, 281, 282, 199, 0, 362, 239,
	259, 230, 330, 415, 416, 229, 451, 208, 435, 202,
	759, 434, 323, 411, 419, 312, 303, 201, 417, 310,
	302, 287, 249, 269, 356, 297, 357, 270, 319, 318,
	320, 0, 196, 0, 393, 428, 452, 215, 647, 728,
	406, 444, 448, 0, 359, 216, 260, 248, 355, 258,
	290, 443, 445, 446, 447, 214, 353, 266, 334, 423,
	252, 431, 621, 758, 615, 614, 286, 295, 720, 756,
	340, 371, 219, 426, 390, 642, 646, 640, 641, 692,
	693, 643, 748, 749, 750, 724, 636, 0, 644, 645,
	0, 730, 738, 739, 697, 190, 203, 291, 752, 360,
	256, 450, 433, 429, 623, 639, 234, 650, 0, 0,
	663, 670, 671, 683, 685, 686, 687, 688, 696, 704,
	705, 707, 715, 717, 719, 721, 726, 735, 755, 192,
	193, 204, 212, 221, 233, 246, 254, 264, 268, 271,
	274, 275, 278, 283, 300, 305, 306, 307, 308, 324,
	325, 326, 329, 332, 333, 336, 338, 339, 342, 348,
	349, 350, 351, 352, 354, 361, 365, 373, 374, 375,
	376, 377, 378, 379, 383, 384, 385, 386, 394, 398,
	413, 414, 425, 437, 441, 265, 421, 442, 0, 299,
	695, 702, 301, 250, 267, 276, 710, 432, 395, 207,
	367, 257, 197, 224, 211, 231, 245, 247, 280, 309,
	315, 344, 347, 262, 242, 222, 364, 220, 381, 401,
	402, 403, 405, 313, 238, 742, 729, 0, 0, 678,
	745, 649, 667, 754, 669, 672, 712, 629, 691, 331,
	664, 0, 653, 625, 660, 626, 651, 680, 241, 684,
	648, 731, 694, 744, 289, 0, 631, 654, 345, 714,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 751, 293, 701, 0, 391, 316,
	0, 0, 0, 682, 734, 689, 725, 677, 713, 638,
	700, 746, 665, 709, 747, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 706, 741,
	662, 708, 237, 277, 243, 236, 407, 711, 757, 624,
	703, 0, 627, 630, 753, 737, 657, 658, 0, 0,
	0, 0, 0, 0, 0, 681, 690, 722, 675, 0,
	0, 0, 0, 0, 0, 0, 0, 655, 0, 699,
	0, 0, 0, 634, 628, 0, 0, 0, 0, 679,
	0, 0, 0, 637, 0, 656, 723, 0, 622, 263,
	632, 317, 727, 736, 676, 438, 740, 674, 673, 743,
	718, 635, 733, 668, 288, 633, 285, 191, 205, 0,
	666, 327, 366, 372, 732, 652, 661, 228, 659, 370,
	341, 424, 213, 253, 363, 346, 368, 698, 716, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 1097, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 759, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 647, 728, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 621, 758, 615, 614,
	286, 295, 720, 756, 340, 371, 219, 426, 390, 642,
	646, 640, 641, 692, 693, 643, 748, 749, 750, 724,
	636, 0, 644, 645, 0, 730, 738, 739, 697, 190,
	203, 291, 752, 360, 256, 450, 433, 429, 623, 639,
	234, 650, 0, 0, 663, 670, 671, 683, 685, 686,
	687, 688, 696, 704, 705, 707, 715, 717, 719, 721,
	726, 735, 755, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 695, 702, 301, 250, 267, 276,
	710, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 742,
	729, 0, 0, 678, 745, 649, 667, 754, 669, 672,
	712, 629, 691, 331, 664, 0, 653, 625, 660, 626,
	651, 680, 241, 684, 648, 731, 694, 744, 289, 0,
	631, 654, 345, 714, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 751, 293,
	701, 0, 391, 316, 0, 0, 0, 682, 734, 689,
	725, 677, 713, 638, 700, 746, 665, 709, 747, 279,
	225, 195, 328, 392, 255, 0, 0, 0, 177, 178,
	179, 0, 0, 0, 0, 0, 0, 0, 0, 217,
	0, 223, 706, 741, 662, 708, 237, 277, 243, 236,
	407, 711, 757, 624, 703, 0, 627, 630, 753, 737,
	657, 658, 0, 0, 0, 0, 0, 0, 0, 681,
	690, 722, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 655, 0, 699, 0, 0, 0, 634, 628, 0,
	0, 0, 0, 679, 0, 0, 0, 637, 0, 656,
	723, 0, 622, 263, 632, 317, 727, 736, 676, 438,
	740, 674, 673, 743, 718, 635, 733, 668, 288, 633,
	285, 191, 205, 0, 666, 327, 366, 372, 732, 652,
	661, 228, 659, 370, 341, 424, 213, 253, 363, 346,
	368, 698, 716, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 612, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 759, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 647, 728, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	621, 758, 615, 614, 286, 295, 720, 756, 340, 371,
	219, 426, 390, 642, 646, 640, 641, 692, 693, 643,
	748, 749, 750, 724, 636, 0, 644, 645, 0, 730,
	738, 739, 697, 190, 203, 291, 752, 360, 256, 450,
	433, 429, 623, 639, 234, 650, 0, 0, 663, 670,
	671, 683, 685, 686, 687, 688, 696, 704, 705, 707,
	715, 717, 719, 721, 726, 735, 755, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 695, 702,
	301, 250, 267, 276, 710, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 331, 0, 0, 1400, 0, 513, 0,
	0, 0, 241, 0, 512, 0, 0, 0, 289, 0,
	0, 1401, 345, 0, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 556, 293,
	0, 0, 391, 316, 0, 0, 0, 0, 0, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	225, 195, 328, 392, 255, 69, 0, 0, 177, 178,
	179, 534, 533, 536, 537, 538, 539, 0, 0, 217,
	535, 223, 540, 541, 542, 0, 237, 277, 243, 236,
	407, 0, 0, 0, 510, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 525, 602,
	0, 0, 0, 571, 0, 526, 0, 0, 519, 520,
	522, 521, 523, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 317, 570, 0, 0, 438,
	0, 0, 568, 0, 0, 0, 0, 0, 288, 0,
	285, 191, 205, 0, 0, 327, 366, 372, 0, 0,
	0, 228, 0, 370, 341, 424, 213, 253, 363, 346,
	368, 0, 0, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 420, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 209, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 0, 0, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	322, 210, 272, 389, 286, 295, 0, 0, 340, 371,
	219, 426, 390, 558, 569, 564, 565, 562, 563, 557,
	561, 560, 559, 572, 549, 550, 551, 552, 554, 0,
	566, 567, 553, 190, 203, 291, 0, 360, 256, 450,
	433, 429, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 0, 0,
	301, 250, 267, 276, 0, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 331, 0, 0, 0, 0, 513, 0,
	0, 0, 241, 0, 512, 0, 0, 0, 289, 0,
	0, 0, 345, 0, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 556, 293,
	0, 0, 391, 316, 0, 0, 0, 0, 0, 547,
	548, 0, 0, 0, 0, 0, 0, 1512, 0, 279,
	225, 195, 328, 392, 255, 69, 0, 0, 177, 178,
	179, 534, 533, 536, 537, 538, 539, 0, 0, 217,
	535, 223, 540, 541, 542, 1513, 237, 277, 243, 236,
	407, 0, 0, 0, 510, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 525, 0,
	0, 0, 0, 571, 0, 526, 0, 0, 519, 520,
	522, 521, 523, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 317, 570, 0, 0, 438,
	0, 0, 568, 0, 0, 0, 0, 0, 288, 0,
	285, 191, 205, 0, 0, 327, 366, 372, 0, 0,
	0, 228, 0, 370, 341, 424, 213, 253, 363, 346,
	368, 0, 0, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 420, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 209, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 0, 0, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	322, 210, 272, 389, 286, 295, 0, 0, 340, 371,
	219, 426, 390, 558, 569, 564, 565, 562, 563, 557,
	561, 560, 559, 572, 549, 550, 551, 552, 554, 0,
	566, 567, 553, 190, 203, 291, 0, 360, 256, 450,
	433, 429, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 0, 0,
	301, 250, 267, 276, 0, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 331, 0, 0, 0, 0, 513, 0,
	0, 0, 241, 0, 512, 0, 0, 0, 289, 0,
	0, 0, 345, 0, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 556, 293,
	0, 0, 391, 316, 0, 0, 0, 0, 0, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	225, 195, 328, 392, 255, 69, 0, 589, 177, 178,
	179, 534, 533, 536, 537, 538, 539, 0, 0, 217,
	535, 223, 540, 541, 542, 0, 237, 277, 243, 236,
	407, 0, 0, 0, 510, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 525, 0,
	0, 0, 0, 571, 0, 526, 0, 0, 519, 520,
	522, 521, 523, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 317, 570, 0, 0, 438,
	0, 0, 568, 0, 0, 0, 0, 0, 288, 0,
	285, 191, 205, 0, 0, 327, 366, 372, 0, 0,
	0, 228, 0, 370, 341, 424, 213, 253, 363, 346,
	368, 0, 0, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 420, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 209, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 0, 0, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	322, 210, 272, 389, 286, 295, 0, 0, 340, 371,
	219, 426, 390, 558, 569, 564, 565, 562, 563, 557,
	561, 560, 559, 572, 549, 550, 551, 552, 554, 0,
	566, 567, 553, 190, 203, 291, 0, 360, 256, 450,
	433, 429, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 0, 0,
	301, 250, 267, 276, 0, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 331, 0, 0, 0, 0, 513, 0,
	0, 0, 241, 0, 512, 0, 0, 0, 289, 0,
	0, 0, 345, 0, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 556, 293,
	0, 0, 391, 316, 0, 0, 0, 0, 0, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	225, 195, 328, 392, 255, 69, 0, 0, 177, 178,
	179, 534, 533, 536, 537, 538, 539, 0, 0, 217,
	535, 223, 540, 541, 542, 0, 237, 277, 243, 236,
	407, 0, 0, 0, 510, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 525, 602,
	0, 0, 0, 571, 0, 526, 0, 0, 519, 520,
	522, 521, 523, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 317, 570, 0, 0, 438,
	0, 0, 568, 0, 0, 0, 0, 0, 288, 0,
	285, 191, 205, 0, 0, 327, 366, 372, 0, 0,
	0, 228, 0, 370, 341, 424, 213, 253, 363, 346,
	368, 0, 0, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 420, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 209, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 0, 0, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	322, 210, 272, 389, 286, 295, 0, 0, 340, 371,
	219, 426, 390, 558, 569, 564, 565, 562, 563, 557,
	561, 560, 559, 572, 549, 550, 551, 552, 554, 0,
	566, 567, 553, 190, 203, 291, 0, 360, 256, 450,
	433, 429, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 0, 0,
	301, 250, 267, 276, 0, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 331, 0, 0, 0, 0, 513, 0,
	0, 0, 241, 0, 512, 0, 0, 0, 289, 0,
	0, 0, 345, 0, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 556, 293,
	0, 0, 391, 316, 0, 0, 0, 0, 0, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	225, 195, 328, 392, 255, 69, 0, 0, 177, 178,
	179, 534, 1418, 536, 537, 538, 539, 0, 0, 217,
	535, 223, 540, 541, 542, 0, 237, 277, 243, 236,
	407, 0, 0, 0, 510, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 525, 602,
	0, 0, 0, 571, 0, 526, 0, 0, 519, 520,
	522, 521, 523, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 317, 570, 0, 0, 438,
	0, 0, 568, 0, 0, 0, 0, 0, 288, 0,
	285, 191, 205, 0, 0, 327, 366, 372, 0, 0,
	0, 228, 0, 370, 341, 424, 213, 253, 363, 346,
	368, 0, 0, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 420, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 209, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 0, 0, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	322, 210, 272, 389, 286, 295, 0, 0, 340, 371,
	219, 426, 390, 558, 569, 564, 565, 562, 563, 557,
	561, 560, 559, 572, 549, 550, 551, 552, 554, 0,
	566, 567, 553, 190, 203, 291, 0, 360, 256, 450,
	433, 429, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 0, 0,
	301, 250, 267, 276, 0, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 331, 0, 0, 0, 0, 513, 0,
	0, 0, 241, 0, 512, 0, 0, 0, 289, 0,
	0, 0, 345, 0, 382, 227, 298, 296, 410, 251,
	244, 240, 226, 273, 304, 343, 400, 337, 556, 293,
	0, 0, 391, 316, 0, 0, 0, 0, 0, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	225, 195, 328, 392, 255, 69, 0, 0, 177, 178,
	179, 534, 1415, 536, 537, 538, 539, 0, 0, 217,
	535, 223, 540, 541, 542, 0, 237, 277, 243, 236,
	407, 0, 0, 0, 510, 527, 0, 555, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 525, 602,
	0, 0, 0, 571, 0, 526, 0, 0, 519, 520,
	522, 521, 523, 528, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 317, 570, 0, 0, 438,
	0, 0, 568, 0, 0, 0, 0, 0, 288, 0,
	285, 191, 205, 0, 0, 327, 366, 372, 0, 0,
	0, 228, 0, 370, 341, 424, 213, 253, 363, 346,
	368, 0, 0, 369, 294, 412, 358, 422, 439, 440,
	235, 321, 430, 404, 436, 449, 206, 232, 335, 397,
	427, 388, 314, 408, 409, 284, 387, 261, 194, 292,
	198, 399, 420, 218, 380, 0, 0, 0, 200, 418,
	396, 311, 281, 282, 199, 0, 362, 239, 259, 230,
	330, 415, 416, 229, 451, 208, 435, 202, 209, 434,
	323, 411, 419, 312, 303, 201, 417, 310, 302, 287,
	249, 269, 356, 297, 357, 270, 319, 318, 320, 0,
	196, 0, 393, 428, 452, 215, 0, 0, 406, 444,
	448, 0, 359, 216, 260, 248, 355, 258, 290, 443,
	445, 446, 447, 214, 353, 266, 334, 423, 252, 431,
	322, 210, 272, 389, 286, 295, 0, 0, 340, 371,
	219, 426, 390, 558, 569, 564, 565, 562, 563, 557,
	561, 560, 559, 572, 549, 550, 551, 552, 554, 0,
	566, 567, 553, 190, 203, 291, 0, 360, 256, 450,
	433, 429, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 204,
	212, 221, 233, 246, 254, 264, 268, 271, 274, 275,
	278, 283, 300, 305, 306, 307, 308, 324, 325, 326,
	329, 332, 333, 336, 338, 339, 342, 348, 349, 350,
	351, 352, 354, 361, 365, 373, 374, 375, 376, 377,
	378, 379, 383, 384, 385, 386, 394, 398, 413, 414,
	425, 437, 441, 265, 421, 442, 0, 299, 0, 0,
	301, 250, 267, 276, 0, 432, 395, 207, 367, 257,
	197, 224, 211, 231, 245, 247, 280, 309, 315, 344,
	347, 262, 242, 222, 364, 220, 381, 401, 402, 403,
	405, 313, 238, 582, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 0, 0, 0,
	0, 513, 0, 0, 0, 241, 0, 512, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 556, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 69, 0,
	0, 177, 178, 179, 534, 533, 536, 537, 538, 539,
	0, 0, 217, 535, 223, 540, 541, 542, 0, 237,
	277, 243, 236, 407, 0, 0, 0, 510, 527, 0,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 0, 0, 571, 0, 526, 0,
	0, 519, 520, 522, 521, 523, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 570,
	0, 0, 438, 0, 0, 568, 0, 0, 0, 0,
	0, 288, 0, 285, 191, 205, 0, 0, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 0, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 558, 569, 564, 565,
	562, 563, 557, 561, 560, 559, 572, 549, 550, 551,
	552, 554, 0, 566, 567, 553, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 331, 0, 0, 0,
	0, 513, 0, 0, 0, 241, 0, 512, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 556, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 69, 0,
	0, 177, 178, 179, 534, 533, 536, 537, 538, 539,
	0, 0, 217, 535, 223, 540, 541, 542, 0, 237,
	277, 243, 236, 407, 0, 0, 0, 510, 527, 0,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 0, 0, 571, 0, 526, 0,
	0, 519, 520, 522, 521, 523, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 570,
	0, 0, 438, 0, 0, 568, 0, 0, 0, 0,
	0, 288, 0, 285, 191, 205, 0, 0, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 0, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 558, 569, 564, 565,
	562, 563, 557, 561, 560, 559, 572, 549, 550, 551,
	552, 554, 0, 566, 567, 553, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 556, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 69, 0,
	0, 177, 178, 179, 534, 533, 536, 537, 538, 539,
	0, 0, 217, 535, 223, 540, 541, 542, 0, 237,
	277, 243, 236, 407, 0, 0, 0, 0, 527, 0,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 0, 0, 571, 0, 526, 0,
	0, 519, 520, 522, 521, 523, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 570,
	0, 0, 438, 0, 0, 568, 0, 0, 0, 0,
	0, 288, 0, 285, 191, 205, 0, 0, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 2182, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 558, 569, 564, 565,
	562, 563, 557, 561, 560, 559, 572, 549, 550, 551,
	552, 554, 0, 566, 567, 553, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 556, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 69, 0,
	589, 177, 178, 179, 534, 533, 536, 537, 538, 539,
	0, 0, 217, 535, 223, 540, 541, 542, 0, 237,
	277, 243, 236, 407, 0, 0, 0, 0, 527, 0,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 0, 0, 571, 0, 526, 0,
	0, 519, 520, 522, 521, 523, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 570,
	0, 0, 438, 0, 0, 568, 0, 0, 0, 0,
	0, 288, 0, 285, 191, 205, 0, 0, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 0, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 558, 569, 564, 565,
	562, 563, 557, 561, 560, 559, 572, 549, 550, 551,
	552, 554, 0, 566, 567, 553, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 556, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 547, 548, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 69, 0,
	0, 177, 178, 179, 534, 533, 536, 537, 538, 539,
	0, 0, 217, 535, 223, 540, 541, 542, 0, 237,
	277, 243, 236, 407, 0, 0, 0, 0, 527, 0,
	555, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	524, 525, 0, 0, 0, 0, 571, 0, 526, 0,
	0, 519, 520, 522, 521, 523, 528, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 570,
	0, 0, 438, 0, 0, 568, 0, 0, 0, 0,
	0, 288, 0, 285, 191, 205, 0, 0, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 0, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 558, 569, 564, 565,
	562, 563, 557, 561, 560, 559, 572, 549, 550, 551,
	552, 554, 0, 566, 567, 553, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 0, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 0, 0, 0, 0, 237,
	277, 243, 236, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 973, 972, 982, 983,
	975, 976, 977, 978, 979, 980, 981, 974, 0, 0,
	984, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 191, 205, 0, 0, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 0, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 331, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 802, 0, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 0, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 0, 0,
	0, 177, 178, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 0, 0, 0, 0, 237,
	277, 243, 236, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 0,
	0, 801, 438, 0, 0, 0, 0, 0, 0, 798,
	799, 288, 767, 285, 191, 205, 792, 796, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 0, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 331, 0, 0, 0,
	1075, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 289, 0, 0, 0, 345, 0, 382, 227, 298,
	296, 410, 251, 244, 240, 226, 273, 304, 343, 400,
	337, 0, 293, 0, 0, 391, 316, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 225, 195, 328, 392, 255, 0, 0,
	0, 177, 178, 179, 0, 1077, 0, 0, 0, 0,
	0, 0, 217, 0, 223, 0, 0, 0, 0, 237,
	277, 243, 236, 407, 962, 963, 961, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 964, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 0, 317, 0,
	0, 0, 438, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 0, 285, 191, 205, 0, 0, 327, 366,
	372, 0, 0, 0, 228, 0, 370, 341, 424, 213,
	253, 363, 346, 368, 0, 0, 369, 294, 412, 358,
	422, 439, 440, 235, 321, 430, 404, 436, 449, 206,
	232, 335, 397, 427, 388, 314, 408, 409, 284, 387,
	261, 194, 292, 198, 399, 420, 218, 380, 0, 0,
	0, 200, 418, 396, 311, 281, 282, 199, 0, 362,
	239, 259, 230, 330, 415, 416, 229, 451, 208, 435,
	202, 209, 434, 323, 411, 419, 312, 303, 201, 417,
	310, 302, 287, 249, 269, 356, 297, 357, 270, 319,
	318, 320, 0, 196, 0, 393, 428, 452, 215, 0,
	0, 406, 444, 448, 0, 359, 216, 260, 248, 355,
	258, 290, 443, 445, 446, 447, 214, 353, 266, 334,
	423, 252, 431, 322, 210, 272, 389, 286, 295, 0,
	0, 340, 371, 219, 426, 390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 203, 291, 0,
	360, 256, 450, 433, 429, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 204, 212, 221, 233, 246, 254, 264, 268,
	271, 274, 275, 278, 283, 300, 305, 306, 307, 308,
	324, 325, 326, 329, 332, 333, 336, 338, 339, 342,
	348, 349, 350, 351, 352, 354, 361, 365, 373, 374,
	375, 376, 377, 378, 379, 383, 384, 385, 386, 394,
	398, 413, 414, 425, 437, 441, 265, 421, 442, 0,
	299, 0, 0, 301, 250, 267, 276, 0, 432, 395,
	207, 367, 257, 197, 224, 211, 231, 245, 247, 280,
	309, 315, 344, 347, 262, 242, 222, 364, 220, 381,
	401, 402, 403, 405, 313, 238, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 69, 0, 589, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 1445, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 1447, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 1443, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 761, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 767, 285, 191, 205, 765,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 1445, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 1447, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 34,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 69, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 1465, 0, 0, 1466, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 1108, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 1107, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 589, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 69, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 1447, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 1077, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 1350, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1232, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1230, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1228, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1226, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1224, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1220, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1218, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 1216, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 0, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 331, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 289, 0, 0,
	0, 345, 0, 382, 227, 298, 296, 410, 251, 244,
	240, 226, 273, 304, 343, 400, 337, 0, 293, 0,
	0, 391, 316, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 225,
	195, 328, 392, 255, 1191, 0, 0, 177, 178, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 217, 0,
	223, 0, 0, 0, 0, 237, 277, 243, 236, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 317, 0, 0, 0, 438, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 0, 285,
	191, 205, 0, 0, 327, 366, 372, 0, 0, 0,
	228, 0, 370, 341, 424, 213, 253, 363, 346, 368,
	0, 0, 369, 294, 412, 358, 422, 439, 440, 235,
	321, 430, 404, 436, 449, 206, 232, 335, 397, 427,
	388, 314, 408, 409, 284, 387, 261, 194, 292, 198,
	399, 420, 218, 380, 0, 0, 0, 200, 418, 396,
	311, 281, 282, 199, 0, 362, 239, 259, 230, 330,
	415, 416, 229, 451, 208, 435, 202, 209, 434, 323,
	411, 419, 312, 303, 201, 417, 310, 302, 287, 249,
	269, 356, 297, 357, 270, 319, 318, 320, 0, 196,
	0, 393, 428, 452, 215, 0, 0, 406, 444, 448,
	0, 359, 216, 260, 248, 355, 258, 290, 443, 445,
	446, 447, 214, 353, 266, 334, 423, 252, 431, 322,
	210, 272, 389, 286, 295, 0, 0, 340, 371, 219,
	426, 390, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 203, 291, 0, 360, 256, 450, 433,
	429, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 204, 212,
	221, 233, 246, 254, 264, 268, 271, 274, 275, 278,
	283, 300, 305, 306, 307, 308, 324, 325, 326, 329,
	332, 333, 336, 338, 339, 342, 348, 349, 350, 351,
	352, 354, 361, 365, 373, 374, 375, 376, 377, 378,
	379, 383, 384, 385, 386, 394, 398, 413, 414, 425,
	437, 441, 265, 421, 442, 0, 299, 0, 0, 301,
	250, 267, 276, 0, 432, 395, 207, 367, 257, 197,
	224, 211, 231, 245, 247, 280, 309, 315, 344, 347,
	262, 242, 222, 364, 220, 381, 401, 402, 403, 405,
	313, 238, 1090, 0, 0, 0, 0, 0, 0, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 0, 0, 0, 0, 1081, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 938, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 501, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 500,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 185, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238, 331,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 289, 0, 0, 0, 345, 0,
	382, 227, 298, 296, 410, 251, 244, 240, 226, 273,
	304, 343, 400, 337, 0, 293, 0, 0, 391, 316,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 225, 195, 328, 392,
	255, 0, 0, 0, 177, 178, 179, 0, 0, 0,
	0, 0, 0, 0, 0, 217, 0, 223, 0, 0,
	0, 0, 237, 277, 243, 236, 407, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 263,
	0, 317, 0, 0, 0, 438, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 0, 285, 191, 205, 0,
	0, 327, 366, 372, 0, 0, 0, 228, 0, 370,
	341, 424, 213, 253, 363, 346, 368, 0, 0, 369,
	294, 412, 358, 422, 439, 440, 235, 321, 430, 404,
	436, 449, 206, 232, 335, 397, 427, 388, 314, 408,
	409, 284, 387, 261, 194, 292, 198, 399, 420, 218,
	380, 0, 0, 0, 200, 418, 396, 311, 281, 282,
	199, 0, 362, 239, 259, 230, 330, 415, 416, 229,
	451, 208, 435, 202, 209, 434, 323, 411, 419, 312,
	303, 201, 417, 310, 302, 287, 249, 269, 356, 297,
	357, 270, 319, 318, 320, 0, 196, 0, 393, 428,
	452, 215, 0, 0, 406, 444, 448, 0, 359, 216,
	260, 248, 355, 258, 290, 443, 445, 446, 447, 214,
	353, 266, 334, 423, 252, 431, 322, 210, 272, 389,
	286, 295, 0, 0, 340, 371, 219, 426, 390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	203, 291, 0, 360, 256, 450, 433, 429, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 204, 212, 221, 233, 246,
	254, 264, 268, 271, 274, 275, 278, 283, 300, 305,
	306, 307, 308, 324, 325, 326, 329, 332, 333, 336,
	338, 339, 342, 348, 349, 350, 351, 352, 354, 361,
	365, 373, 374, 375, 376, 377, 378, 379, 383, 384,
	385, 386, 394, 398, 413, 414, 425, 437, 441, 265,
	421, 442, 0, 299, 0, 0, 301, 250, 267, 276,
	0, 432, 395, 207, 367, 257, 197, 224, 211, 231,
	245, 247, 280, 309, 315, 344, 347, 262, 242, 222,
	364, 220, 381, 401, 402, 403, 405, 313, 238,
}

var yyPact = [...]int{
	2317, -1000, -332, 1615, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1572, 1154, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 572, 1177, 182, 1472, 266, 215, 938, 375, 105,
	26730, 370, 3590, 27180, -1000, 91, -1000, 82, 27180, 87,
	26280, -1000, -1000, -279, 12297, 1431, 10, 7, 27180, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1193, 1527, 1534,
	1569, 1021, 1705, -1000, 10484, 10484, 301, 301, 301, 8684,
	-1000, -1000, 16360, 27180, 27180, 1187, 367, 938, 363, 361,
	357, -1000, -106, -1000, -1000, -1000, -1000, 1472, -1000, -1000,
	154, -1000, 235, 1152, -1000, 1148, -1000, 408, 380, 230,
	309, 277, 221, 220, 219, 218, 213, 208, 207, 206,
	239, -1000, 528, 528, -171, -174, 3231, 291, 291, 291,
	312, 1442, 1440, -1000, 456, -1000, 528, 528, 143, 528,
	528, 528, 528, 168, 158, 528, 528, 528, 528, 528,
	528, 528, 528, 528, 528, 528, 528, 528, 528, 528,
	27180, -1000, 120, 526, 556, 1472, 145, -1000, -1000, -1000,
	27180, 366, 938, 295, -1000, 27180, -1000, 463, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27180, 622, 622, 15, 622, 622, 622,
	622, 81, 410, -3, -1000, 76, 147, 131, 133, 635,
	109, 59, -1000, -1000, 125, 635, 78, -1000, 622, 6828,
	6828, 6828, -1000, 1464, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 311, -1000, -1000, -1000, -1000, 27180, 25830, 253,
	546, -1000, -1000, -1000, 52, -1000, -1000, 1060, 785, -1000,
	12297, 1202, 1156, 1156, -1000, -1000, 450, -1000, -1000, 13647,
	13647, 13647, 13647, 13647, 13647, 13647, 13647, 13647, 13647, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1156, 445, -1000, 11847, 1156, 1156, 1156,
	1156, 1156, 1156, 1156, 1156, 12297, 1156, 1156, 1156, 1156,
	1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156, 1156,
	1156, 1156, 1156, -1000, -1000, -1000, 27180, -1000, 1156, 1572,
	-1000, 1154, -1000, -1000, -1000, 1493, 12297, 12297, 1572, -1000,
	1379, 10484, -1000, -1000, 1466, -1000, -1000, -1000, -1000, -1000,
	676, 1598, -1000, 14997, 439, 1596, 25380, -1000, 19073, 24930,
	1146, 8220, -32, -1000, -1000, -1000, 544, 18173, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1464,
	1049, 27180, -1000, -1000, 4264, 938, -1000, 1176, -1000, 1045,
	-1000, 1160, 120, 296, 1206, 938, 938, 938, 296, -1000,
	-1000, -1000, 528, 528, 237, 266, 4126, -1000, -1000, -1000,
	24473, 1175, 938, -1000, 1174, -1000, 1500, 283, 479, 479,
	938, -1000, -1000, 27180, 938, 1495, 1494, 27180, 27180, -1000,
	24023, -1000, 23573, 23123, 822, 27180, 22673, 22223, 21773, 21323,
	20873, -1000, 1345, -1000, 1153, -1000, -1000, -1000, 27180, 27180,
	27180, 30, -1000, -1000, 27180, 938, -1000, -1000, 815, 806,
	528, 528, 790, 943, 932, 924, 528, 528, 788, 918,
	931, 142, 787, 780, 769, 842, 913, 108, 807, 799,
	755, 27180, 1173, -1000, 113, 542, 156, 203, 185, 27180,
	129, 1472, 1430, 1140, 310, 295, 1273, 27180, 1514, 295,
	-1000, 7292, -1000, -1000, 910, 12297, -1000, 640, 635, 635,
	-1000, -1000, -1000, -1000, -1000, -1000, 622, 27180, 640, -1000,
	-1000, -1000, 635, 622, 27180, 622, 622, 622, 622, 635,
	622, 27180, 27180, 27180, 27180, 27180, 27180, 27180, 27180, 27180,
	6828, 6828, 6828, 500, 622, -1000, 1254, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 85, -1000, -1000, -1000, -1000, -1000,
	1615, -1000, -1000, -1000, -110, 1138, 20423, -1000, -283, -284,
	-285, -286, -1000, -1000, -1000, -288, -294, -1000, -1000, -1000,
	12297, 12297, 12297, 12297, 724, 515, 13647, 746, 529, 13647,
	13647, 13647, 13647, 13647, 13647, 13647, 13647, 13647, 13647, 13647,
	13647, 13647, 13647, 13647, 623, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 938, -1000, 1597, 967, 967, 415, 415,
	415, 415, 415, 415, 415, 415, 415, 14097, 9134, 7292,
	1021, 1036, 1572, 10484, 10484, 12297, 12297, 11384, 10934, 10484,
	1453, 581, 785, 27180, -1000, 958, -1000, -1000, 13197, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 27180, 27180, 10484, 10484, 10484, 10484, 10484, -1000, 1132,
	-1000, -166, 15910, 12297, 1534, 1021, 1466, 1507, 1609, 486,
	687, 1131, -1000, 778, 1534, 17723, 1135, -1000, 1466, -1000,
	-1000, -1000, 27180, -1000, -1000, 19973, -1000, -1000, 6364, 27180,
	205, 27180, -1000, 1118, 1336, -1000, -1000, -1000, 1520, 17273,
	27180, 1052, 1048, -1000, -1000, 426, 7756, -32, -1000, 7756,
	1077, -1000, -51, -56, 9584, 402, -1000, -1000, -1000, 3231,
	14547, 1054, -1000, 29, -1000, -1000, -1000, 1160, -1000, 1160,
	1160, 1160, 1160, 30, 30, 30, 30, -1000, -1000, -1000,
	-1000, -1000, 1171, 1167, -1000, 1160, 1160, 1160, 1160, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1166, 1166, 1166, 1162,
	1162, 276, -1000, 12297, 155, 27180, 1511, 754, 113, 27180,
	595, 1246, -1000, 27180, 1206, 1206, 1206, 938, 925, 864,
	-1000, 1119, -1000, -1000, 1566, -1000, -1000, 497, 639, 618,
	420, 27180, 103, 200, -1000, 263, -1000, 27180, 1165, 1491,
	479, 938, -1000, 938, -1000, -1000, -1000, -1000, 421, -1000,
	-1000, 938, 1112, -1000, 1094, 644, 617, 643, 604, 1112,
	-1000, -1000, -145, 1112, -1000, 1112, -1000, 1112, -1000, 1112,
	-1000, 1112, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	508, 27180, 103, 623, -1000, 307, -1000, -1000, 623, 623,
	-1000, -1000, -1000, -1000, 909, 899, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -331, 27180, 319, 110, 144, 27180, 27180, 27180,
	27180, 27180, 385, -1000, -1000, -1000, 153, 27180, 27180, 27180,
	27180, 354, -1000, -1000, 938, -1000, -1000, -1000, -1000, 785,
	27180, -1000, -1000, 622, 622, -1000, -1000, 27180, 622, -1000,
	-1000, -1000, -1000, -1000, -1000, 622, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	896, -1000, 27180, 27180, -1000, -1000, -1000, -1000, -1000, 73,
	-35, 164, -1000, -1000, -1000, -1000, 1525, -1000, 785, 515,
	550, 506, -1000, -1000, 748, -1000, -1000, 2631, -1000, -1000,
	-1000, -1000, 746, 13647, 13647, 13647, 830, 2631, 2853, 621,
	649, 415, 597, 597, 499, 499, 499, 499, 499, 843,
	843, -1000, -1000, -1000, -1000, 958, -1000, -1000, -1000, 958,
	10484, 10484, 1109, 1156, 413, -1000, 1193, -1000, -1000, 1534,
	1023, 1023, 665, 819, 552, 1593, 1023, 534, 1592, 1023,
	1023, 10484, -1000, -1000, 566, -1000, 12297, 958, -1000, 1219,
	1099, 1095, 1023, 958, 958, 1023, 1023, 27180, -1000, -272,
	-1000, -89, 395, 1156, -1000, 19523, -1000, -1000, 958, 1060,
	1493, -1000, -1000, 1422, -1000, 1361, 12297, 12297, 12297, -1000,
	-1000, -1000, 1493, 1542, -1000, 1400, 1390, 1585, 10484, 19073,
	1466, -1000, -1000, -1000, 403, 1585, 1134, 1156, -1000, 27180,
	19073, 19073, 19073, 19073, 19073, -1000, 1346, 1334, -1000, 1350,
	1344, 1315, 27180, -1000, 1034, 1021, 17273, 205, 1059, 19073,
	27180, -1000, -1000, 19073, 27180, 5900, -1000, 1077, -32, -39,
	-1000, -1000, -1000, -1000, 785, -1000, 768, -1000, 2414, -1000,
	267, -1000, -1000, -1000, -1000, 475, 26, -1000, -1000, 30,
	30, -1000, -1000, 402, 658, 402, 402, 402, 884, 884,
	-1000, -1000, -1000, -1000, -1000, 741, -1000, -1000, -1000, 718,
	-1000, -1000, 766, 1240, 155, -1000, -1000, 528, 883, 1435,
	-1000, -1000, 1020, 318, -1000, 1498, 27180, -1000, 1235, 1233,
	1224, -1000, -1000, -1000, -1000, -1000, 2636, 27180, 1031, -1000,
	101, 27180, 996, 27180, -1000, 1027, 27180, -1000, 938, -1000,
	-1000, 7292, -1000, 27180, 1156, -1000, -1000, -1000, -1000, 365,
	1469, 1468, 103, 101, 402, 938, -1000, -1000, -1000, -1000,
	-1000, -334, 1025, 27180, 118, -1000, 1164, 845, -1000, 1196,
	-1000, -1000, -1000, -1000, 106, 146, 151, 305, -1000, 353,
	1240, 27180, -1000, -1000, -1000, -1000, 635, -1000, -1000, 635,
	-1000, -1000, -1000, -1000, -1000, -1000, 1460, -46, -306, -1000,
	-302, -1000, -1000, -1000, -1000, 830, 2631, 2695, -1000, 13647,
	13647, -1000, -1000, 1023, 1023, 10484, 7292, 1572, 1493, -1000,
	-1000, 372, 623, 372, 13647, 13647, -1000, 13647, 13647, -1000,
	-120, 1113, 561, -1000, 12297, 558, -1000, -1000, 13647, 13647,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 356,
	355, 323, 27180, -1000, -1000, -1000, 792, 869, 1358, 785,
	785, -1000, -1000, 27180, -1000, -1000, -1000, -1000, 1582, 12297,
	-1000, 1075, -1000, 5436, 1534, 1214, 27180, 1156, 1615, 15460,
	27180, 1145, -1000, 530, 1336, 1203, 1210, 1620, -1000, -1000,
	-1000, -1000, 1284, -1000, 1250, -1000, -1000, -1000, -1000, -1000,
	1021, 1585, 19073, 1080, -1000, 1080, -1000, 399, -1000, -1000,
	-1000, -47, -72, -1000, -1000, -1000, 3231, -1000, -1000, -1000,
	629, 13647, 1608, -1000, 867, 1490, -1000, 1489, -1000, -1000,
	402, 402, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1019,
	-1000, 1016, 1074, 1006, 54, -1000, 1139, 1447, 528, 528,
	-1000, 717, -1000, 938, -1000, 27180, -1000, -1000, 27180, 27180,
	27180, 1564, 1072, -1000, 27180, -1000, -1000, 27180, -1000, -1000,
	1386, 155, 1004, -1000, -1000, -1000, 200, 27180, -1000, 967,
	101, -1000, -1000, -1000, -1000, -1000, -1000, 1158, -1000, -1000,
	-1000, 991, -1000, -151, 938, 27180, 27180, 27180, -1000, 27180,
	-1000, -1000, -1000, 622, 622, -1000, 1446, -1000, 938, -1000,
	13647, 2631, 2631, -1000, -1000, 958, -1000, 1534, -1000, 958,
	1160, 1160, -1000, 1160, 1162, -1000, 1160, 75, 1160, 74,
	958, 958, 2614, 2355, 2231, 2104, 1156, -115, -1000, 785,
	12297, 1294, 1234, 1156, 1156, 1156, 995, 866, 30, -1000,
	-1000, -1000, 1577, 1559, 785, -1000, -1000, -1000, 1504, 989,
	1057, -1000, -1000, 10034, 1002, 1385, 397, 995, 1572, 27180,
	12297, -1000, -1000, 12297, 1159, -1000, 12297, -1000, -1000, -1000,
	1572, 1572, 1080, -1000, -1000, 470, -1000, -1000, -1000, -1000,
	-1000, 2631, -88, -1000, -1000, -1000, -1000, -1000, 30, 858,
	30, 711, -1000, 708, -1000, -1000, -213, -1000, -1000, 1093,
	1285, -1000, -1000, 1158, -1000, -1000, -1000, 27180, 27180, -1000,
	-1000, 179, -1000, 257, 987, -1000, -172, -1000, -1000, 1518,
	27180, -1000, -1000, 7292, -1000, -1000, 1157, 1201, -1000, -1000,
	-1000, -1000, -1000, -1000, 2631, -1000, 1493, -1000, -1000, 216,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13647, 13647,
	13647, 13647, 13647, 1534, 857, 785, 13647, 13647, 18623, 27180,
	27180, 16810, 30, -2, -1000, 12297, 12297, 1467, -1000, 1156,
	-1000, 1130, 27180, 1156, 27180, -1000, 1534, -1000, 785, 785,
	27180, 785, 1534, -1000, -1000, 402, -1000, 402, 969, 966,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1516, 1072,
	-1000, 175, 27180, -1000, 200, -1000, -177, -178, 1154, 985,
	1070, -1000, 507, 27180, 27180, -1000, -1000, -1000, 1219, 1219,
	1219, 1219, 256, 958, -1000, 1219, 1219, 968, -1000, 968,
	968, 395, -266, -1000, 1425, 1398, 785, 1060, 1606, -1000,
	1156, 1615, 391, 1057, -1000, -1000, 964, -1000, -1000, -1000,
	-1000, -1000, 1154, 1156, 1155, -1000, -1000, -1000, 180, -1000,
	7292, 4972, 957, -1000, -1000, -1000, -1000, -1000, 958, 160,
	-163, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -2, 261,
	-1000, 1408, 1398, -1000, 1553, 1421, 1552, -1000, 27180, 1057,
	27180, -1000, 180, 12747, 27180, -1000, -52, -1000, -1000, -1000,
	-1000, -1000, 1196, -1000, 1357, -123, -167, 1406, 1410, 1410,
	1408, -1000, 1549, 1546, -1000, 855, 1544, 854, 1056, -1000,
	-1000, 1219, 958, 955, 272, -1000, -1000, -151, -1000, 1349,
	-1000, 1404, 737, -1000, -1000, -1000, -1000, 841, 837, -1000,
	793, -1000, -1000, -1000, 1209, 116, -1000, -155, -1000, 698,
	-1000, -1000, -1000, -1000, -1000, 1208, -1000, 1591, -1000, -165,
	-1000, -1000, -1000, 1605, 455, 455, -170, -1000, -1000, -1000,
	268, 735, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1874, 1873, 34, 87, 79, 1872, 1871, 1870, 1869,
	132, 130, 129, 1868, 1867, 1865, 1864, 1862, 1861, 1858,
	1857, 1856, 1853, 1849, 1844, 58, 121, 28, 36, 123,
	1843, 1840, 43, 1839, 1838, 1837, 119, 118, 448, 1836,
	117, 1835, 1834, 1832, 1831, 1830, 1827, 1825, 1824, 1823,
	1822, 1821, 1820, 1819, 215, 1818, 1817, 9, 1816, 47,
	1814, 1813, 1808, 1807, 1805, 86, 1801, 1800, 1799, 109,
	1798, 1797, 55, 149, 50, 73, 1796, 1791, 76, 775,
	1789, 92, 127, 1785, 1893, 1784, 40, 72, 97, 1783,
	41, 1782, 1781, 114, 1780, 1778, 1776, 68, 1775, 1774,
	3054, 1773, 63, 77, 16, 38, 1772, 1771, 1768, 1764,
	30, 412, 1763, 1762, 22, 1761, 1760, 136, 1758, 84,
	18, 1757, 14, 31, 17, 1756, 80, 1755, 11, 52,
	32, 1754, 82, 1752, 1751, 1750, 1748, 23, 1747, 74,
	104, 70, 1746, 1745, 7, 13, 1744, 1743, 1741, 1740,
	1737, 1736, 10, 1735, 4, 1734, 26, 1729, 8, 19,
	67, 46, 27, 5, 1728, 126, 1723, 25, 124, 66,
	112, 1721, 1720, 1719, 956, 85, 140, 1718, 1717, 96,
	1715, 116, 120, 1712, 1458, 1707, 1706, 71, 1092, 2446,
	15, 113, 1700, 1698, 2125, 65, 75, 20, 1697, 1692,
	1688, 125, 111, 60, 861, 39, 1681, 1680, 1679, 1678,
	1676, 1675, 1672, 327, 81, 21, 101, 29, 1671, 1670,
	1668, 57, 37, 1666, 108, 107, 64, 102, 1665, 115,
	106, 49, 1664, 42, 1661, 1660, 1659, 1658, 45, 1656,
	1654, 1653, 1652, 99, 88, 62, 44, 1651, 33, 91,
	89, 100, 1645, 24, 122, 12, 1644, 3, 0, 1642,
	6, 131, 1462, 103, 1640, 1639, 1, 1637, 2, 1631,
	1629, 78, 1628, 1627, 1623, 1622, 2051, 213, 110, 1621,
	128,
}

//line sql.y:5137
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 274, 275, 275, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 258, 258, 258, 261, 261, 21,
	50, 3, 3, 3, 3, 2, 2, 8, 9, 4,
	5, 5, 10, 10, 61, 61, 11, 12, 12, 12,
	12, 278, 278, 95, 95, 93, 93, 94, 94, 160,
	160, 13, 14, 14, 170, 170, 169, 169, 169, 171,
	171, 171, 171, 204, 204, 15, 15, 15, 15, 15,
	70, 70, 260, 260, 259, 257, 257, 256, 256, 255,
	23, 24, 33, 33, 33, 33, 34, 35, 262, 262,
	234, 39, 39, 38, 38, 38, 38, 40, 40, 37,
	37, 36, 36, 236, 236, 223, 223, 235, 235, 235,
	235, 235, 235, 235, 222, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 143, 143, 206, 206, 206, 206,
	209, 209, 207, 207, 207, 207, 207, 207, 207, 207,
	207, 208, 208, 208, 208, 208, 210, 210, 210, 210,
	210, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 211, 211, 211, 211, 211, 212, 212, 212, 212,
	212, 212, 212, 212, 221, 221, 213, 213, 216, 216,
	217, 217, 217, 218, 218, 219, 219, 214, 214, 214,
	214, 215, 215, 215, 224, 248, 248, 247, 247, 245,
	245, 245, 245, 233, 233, 242, 242, 242, 242, 242,
	232, 232, 228, 228, 228, 229, 229, 230, 230, 227,
	227, 231, 231, 244, 244, 243, 225, 225, 226, 226,
	250, 250, 250, 250, 251, 267, 268, 266, 266, 266,
	266, 266, 59, 59, 59, 183, 183, 183, 240, 240,
	239, 239, 239, 241, 241, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 238, 238, 238, 238, 238, 238,
	238, 238, 238, 238, 178, 178, 178, 265, 265, 265,
	265, 265, 265, 264, 264, 264, 237, 237, 237, 263,
	263, 129, 129, 130, 130, 30, 30, 30, 30, 30,
	30, 29, 29, 29, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 31, 31, 26, 26,
	26, 26, 26, 26, 26, 26, 26, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 254, 254, 254, 254, 254, 254,
	254, 254, 254, 254, 220, 220, 220, 252, 252, 253,
	253, 17, 22, 22, 18, 18, 18, 18, 19, 19,
	41, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 269, 269, 177, 177, 185,
	185, 176, 176, 175, 175, 175, 179, 179, 179, 180,
	180, 273, 273, 273, 43, 43, 45, 45, 46, 47,
	47, 199, 199, 200, 200, 48, 49, 60, 60, 60,
	60, 60, 60, 62, 62, 62, 7, 7, 7, 7,
	56, 56, 56, 6, 6, 44, 44, 51, 270, 270,
	271, 272, 272, 272, 272, 52, 20, 20, 20, 20,
	20, 20, 77, 77, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 71, 71, 71, 66,
	66, 279, 54, 55, 55, 69, 69, 69, 63, 63,
	63, 68, 68, 68, 74, 74, 76, 76, 76, 76,
	76, 78, 78, 78, 78, 78, 78, 78, 73, 73,
	75, 75, 75, 75, 192, 192, 192, 191, 191, 85,
	85, 86, 86, 87, 87, 88, 88, 88, 127, 103,
	103, 159, 159, 158, 158, 161, 161, 89, 89, 89,
	89, 90, 90, 91, 91, 92, 92, 198, 198, 197,
	197, 197, 196, 196, 96, 96, 96, 98, 97, 97,
	97, 97, 99, 99, 101, 101, 100, 100, 102, 104,
	104, 104, 104, 104, 105, 105, 84, 84, 84, 84,
	84, 84, 84, 84, 173, 173, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 118, 118,
	118, 118, 118, 118, 108, 108, 108, 108, 108, 108,
	108, 72, 72, 119, 119, 119, 126, 120, 120, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	111, 111, 111, 115, 115, 115, 115, 113, 113, 113,
	113, 113, 113, 113, 113, 113, 113, 113, 113, 113,
	113, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 114, 280, 280, 117,
	116, 116, 116, 116, 116, 116, 116, 67, 67, 67,
	67, 67, 203, 203, 203, 205, 205, 205, 205, 205,
	205, 205, 205, 205, 205, 205, 205, 205, 133, 133,
	64, 64, 131, 131, 132, 134, 134, 128, 128, 128,
	110, 110, 110, 110, 110, 110, 110, 110, 112, 112,
	112, 135, 135, 136, 136, 137, 137, 138, 138, 139,
	140, 140, 140, 141, 141, 141, 141, 32, 32, 32,
	32, 32, 27, 27, 27, 27, 28, 28, 28, 79,
	79, 79, 79, 81, 81, 80, 80, 57, 57, 58,
	58, 58, 82, 82, 83, 83, 83, 83, 156, 156,
	156, 142, 142, 142, 142, 148, 148, 148, 144, 144,
	146, 146, 146, 147, 147, 147, 145, 153, 153, 155,
	155, 154, 154, 150, 150, 151, 151, 152, 152, 152,
	149, 149, 109, 109, 109, 109, 109, 157, 157, 157,
	157, 162, 162, 122, 122, 124, 124, 123, 125, 163,
	163, 167, 164, 164, 168, 168, 168, 168, 168, 165,
	165, 166, 166, 193, 193, 193, 172, 172, 184, 184,
	181, 181, 182, 182, 174, 174, 186, 186, 186, 53,
	121, 121, 249, 249, 246, 189, 189, 190, 190, 194,
	194, 195, 195, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 276, 277, 201, 202, 202, 202,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 1, 0, 1, 2,
	3, 5, 6, 6, 7, 4, 6, 5, 7, 8,
	1, 3, 7, 8, 1, 1, 9, 9, 8, 7,
	7, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 6, 11, 2,
	0, 2, 0, 2, 1, 0, 2, 1, 3, 3,
	5, 3, 6, 7, 7, 7, 5, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 3, 0, 2, 3, 3, 4,
	2, 3, 3, 2, 3, 2, 3, 1, 1, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 2, 2, 2,
	2, 4, 4, 2, 2, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 0, 3, 0, 5,
	0, 3, 5, 0, 1, 0, 1, 0, 2, 2,
	2, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 3, 0, 1, 3, 3, 3, 4, 2,
	0, 2, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	10, 11, 11, 12, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 4, 5, 0, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 2, 0, 1, 5, 1, 3,
	7, 1, 3, 3, 1, 2, 2, 2, 5, 5,
	5, 6, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 10, 3, 6, 7, 5, 5, 5, 12, 7,
	5, 9, 5, 3, 7, 4, 4, 4, 4, 3,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 0, 2, 2, 1, 3, 8,
	8, 3, 3, 5, 6, 6, 5, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 2, 4, 5, 4, 4, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 3, 3, 6, 4,
	7, 6, 1, 3, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 1, 1, 0, 1, 1, 0,
	3, 0, 2, 0, 2, 1, 2, 2, 0, 1,
	1, 0, 1, 1, 0, 1, 0, 1, 2, 3,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 8, 8, 0, 2, 3,
	4, 4, 4, 4, 4, 4, 4, 0, 3, 4,
	7, 3, 1, 1, 1, 2, 3, 3, 1, 2,
	2, 1, 2, 1, 2, 2, 1, 2, 0, 1,
	0, 2, 1, 2, 4, 0, 2, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 0, 2, 0, 3, 1, 3, 2,
	0, 1, 1, 0, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 0, 2,
	4, 0, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 1, 1,
	3, 3, 1, 3, 3, 3, 3, 3, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 2, 0, 3, 0, 1, 0, 1, 1, 5,
	0, 1, 0, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -274, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -4, -276, 6, 7, 8, -61, 10, 11,
	31, -23, -33, 153, -34, -24, 154, -35, 156, 155,
	191, 157, 184, 71, 226, 227, 229, 230, 231, 232,
	-62, 189, 190, 159, 35, 42, 32, 33, 36, 81,
	9, 329, 186, 185, 26, -275, 469, -69, 5, -137,
	16, -3, -54, -279, -54, -54, -54, -54, -54, -54,
	-234, -236, 81, 126, 81, -70, -184, 164, 173, 172,
	169, -262, 107, 219, 320, 162, -39, -38, -37, -36,
	-40, 30, -30, -31, -254, -29, -26, 158, 155, 199,
	102, 103, 191, 192, 193, 157, 175, 190, 194, 189,
	208, -25, 77, 32, 342, 345, -241, 154, 160, 161,
	330, 105, 104, 72, 156, -238, 276, 446, -40, 448,
	95, 97, 447, 41, 164, 449, 450, 451, 452, 174,
	453, 454, 455, 456, 462, 463, 464, 465, 106, 5,
	163, -262, -79, 286, 77, -261, -258, 84, 85, 86,
	163, -184, 164, 165, -262, 163, -100, -194, -258, -188,
	339, 177, 373, 374, 224, 77, 276, 446, 226, 240,
	234, 261, 253, 340, 375, 178, 212, 443, 251, 254,
	307, 448, 376, 192, 299, 281, 289, 95, 229, 316,
	461, 377, 459, 97, 447, 76, 48, 41, 187, 249,
	245, 449, 213, 378, 350, 206, 105, 102, 468, 243,
	47, 28, 458, 104, 46, 450, 379, 451, 291, 266,
	437, 45, 304, 193, 380, 80, 344, 445, 293, 244,
	290, 223, 457, 159, 381, 429, 301, 438, 382, 267,
	271, 383, 308, 49, 384, 385, 439, 103, 386, 75,
	452, 238, 239, 387, 221, 176, 310, 265, 174, 34,
	294, 341, 225, 55, 200, 311, 43, 269, 42, 433,
	388, 436, 264, 260, 50, 389, 390, 391, 392, 453,
	263, 237, 259, 467, 218, 454, 59, 161, 273, 272,
	274, 207, 306, 256, 393, 394, 395, 181, 78, 396,
	246, 19, 397, 398, 302, 214, 399, 53, 400, 401,
	314, 190, 402, 51, 455, 38, 195, 456, 403, 404,
	405, 406, 407, 300, 408, 292, 268, 270, 202, 288,
	343, 409, 242, 194, 460, 410, 182, 444, 196, 199,
	189, 315, 183, 411, 412, 413, 414, 415, 416, 417,
	230, 462, 40, 418, 419, 420, 421, 222, 217, 309,
	318, 58, 79, 278, 422, 442, 236, 215, 423, 227,
	52, 463, 464, 465, 209, 466, 284, 106, 219, 220,
	44, 257, 201, 424, 425, 247, 248, 262, 235, 258,
	228, 430, 203, 303, 191, 426, 317, 216, 279, 347,
	208, 305, 441, 346, 255, 252, 210, 427, 165, 204,
	205, 428, 431, 295, 285, 296, 297, 298, 286, 211,
	345, 250, 280, 163, -165, 281, -185, 282, 283, 294,
	295, 301, -177, 302, 300, 202, -273, 308, 163, 303,
	153, 144, 291, 292, 285, 298, 286, 211, -269, -258,
	451, 466, 307, 254, 287, 293, 309, 433, 297, 296,
	-194, 228, -199, 233, -189, -258, -188, 231, -100, -60,
	429, 157, -201, -201, -71, 433, 435, -120, -84, -106,
	110, -111, 30, 24, -110, -107, -128, -125, -126, 144,
	145, 147, 146, 148, 133, 134, 141, 111, 149, -115,
	-113, -114, -116, 88, 87, 96, 89, 90, 91, 92,
	98, 99, 100, -189, -194, -123, -276, 65, 66, 330,
	331, 332, 333, 338, 334, 113, 54, 325, 319, 328,
	327, 326, 323, 324, 321, 322, 336, 337, 168, 320,
	162, 139, 329, -258, -188, 41, 284, 284, -100, -5,
	-4, -276, 6, 21, 22, -141, 18, 17, -277, 83,
	-63, -76, 60, 61, -78, 22, 37, 64, 62, 21,
	-55, -75, 135, -84, -194, -75, -174, 167, -174, -174,
	-164, -204, 228, -168, 309, 308, -190, -166, -189, -187,
	-165, 306, 158, 348, 109, 23, 25, 112, 144, 17,
	113, 36, 160, 175, 143, 171, 330, 153, 69, 349,
	321, 322, 319, 325, 332, 333, 320, 282, 30, 11,
	351, 26, 185, 22, 37, 137, 155, 116, 117, 188,
	24, 186, 100, 354, 20, 72, 180, 12, 173, 14,
	355, 356, 15, 168, 167, 128, 164, 67, 9, 149,
	27, 125, 63, 357, 29, 358, 359, 360, 361, 65,
	126, 18, 323, 324, 32, 434, 362, 338, 197, 139,
	70, 56, 435, 110, 363, 364, 98, 365, 101, 73,
	440, 107, 16, 68, 39, 366, 198, 367, 170, 368,
	312, 369, 127, 156, 329, 66, 370, 162, 283, 6,
	335, 31, 184, 172, 64, 371, 163, 115, 336, 337,
	166, 99, 5, 169, 33, 10, 71, 74, 326, 327,
	328, 54, 342, 114, 13, 372, 313, 108, 307, 254,
	-235, 126, -222, -226, -189, 179, -251, 175, -100, -244,
	-243, -189, -79, 163, -258, 164, 164, 164, -54, 329,
	-36, -37, -165, 143, 196, 82, 82, -226, -225, -224,
	-263, 198, 179, -250, -242, 171, 180, -232, 172, 173,
	-227, 164, 29, -263, -227, 170, 180, 198, 198, 106,
	198, 106, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 195, -233, 118, -233, 346, 346, -238, -263, -263,
	-263, 166, 34, 34, -186, -227, 166, 23, -233, -233,
	-165, 143, -233, -233, -233, -233, 206, 206, -233, -233,
	-233, -233, -233, -233, -233, -233, -233, -233, -233, -233,
	-233, -233, -233, -100, -82, 213, 153, 155, 158, 73,
	118, -38, 208, -22, -100, 163, -258, -181, 168, -54,
	-100, 150, -100, -179, 126, 13, -179, -176, 284, 288,
	289, 290, -179, -179, -179, -179, 209, 299, -228, 164,
	34, 176, 284, 209, 299, 209, 210, 209, 210, 209,
	-175, 12, 128, 320, 304, 301, 202, 163, 203, 165,
	305, -258, 436, 210, -175, 284, 205, -179, -202, -276,
	-190, -202, -202, 31, 166, -189, -56, -189, 88, -7,
	-3, -11, -10, -12, 118, -77, 284, -65, 144, 451,
	437, 438, 439, 436, 300, 444, 442, 440, 209, 441,
	82, 109, 107, 108, 125, -84, -108, 128, 110, 126,
	127, 112, 130, 129, 140, 133, 134, 135, 136, 137,
	138, 139, 131, 132, 143, 118, 119, 120, 121, 122,
	123, 124, -173, -276, -126, -276, 151, 152, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -276, 150,
	-2, -120, -4, -276, -276, -276, -276, -276, -276, -276,
	-276, -133, -84, -276, -280, -276, -280, -117, -276, -280,
	-117, -280, -117, -280, -280, -117, -280, -117, -280, -280,
	-117, -276, -276, -276, -276, -276, -276, -276, -201, -270,
	-271, -103, -100, -276, -137, -3, -54, -156, 20, 32,
	-84, -138, -139, -84, -137, 56, -73, -75, -78, 60,
	61, 94, 12, -192, -191, 23, -189, 88, 150, 12,
	-101, 27, -100, -86, -87, -88, -89, -103, -127, -276,
	12, -93, -94, -100, -102, -194, 82, 228, -168, -204,
	-170, -169, 310, 312, 118, -193, -189, 88, 30, 83,
	82, -100, -206, -209, -211, -210, -212, -207, -208, 251,
	252, 144, 255, 257, 258, 259, 260, 261, 262, 263,
	264, 265, 266, 31, 187, 247, 248, 249, 250, 267,
	268, 269, 270, 271, 272, 273, 274, 234, 253, 340,
	235, 236, 237, 238, 239, 240, 242, 243, 244, 245,
	246, -261, -258, 81, 83, 82, -213, 81, -82, -182,
	168, -249, -246, 74, -258, -258, -258, -182, -233, -233,
	195, -29, -26, -254, 16, -25, -26, 158, 102, 103,
	155, 81, -222, 81, -231, -261, -258, 81, 29, 170,
	169, -230, -227, -230, -231, -258, -128, -189, -194, -258,
	29, 29, -161, -189, -161, -161, 21, -161, 21, -161,
	21, 89, -189, -161, 21, -161, 21, -161, 21, -161,
	21, -161, 21, 30, 75, 76, 30, 78, 79, 80,
	-128, -128, -222, -165, -100, -258, 89, 89, -233, -233,
	89, 88, 88, 88, -233, -233, 89, 88, -258, 88,
	-264, 181, 223, 225, 89, 89, 89, 89, 30, 88,
	-265, 30, 458, 457, 459, 460, 461, 89, 30, 89,
	30, 89, -189, 81, -81, 215, 118, 204, 204, 163,
	163, 217, -100, 216, 218, 220, 41, 82, 166, -181,
	73, -95, -100, 24, -181, -195, -194, -187, 88, -84,
	-229, 12, 128, -175, -175, -179, -100, -229, -175, -179,
	-100, -179, -179, -179, -179, -175, -179, -194, -194, -100,
	-100, -100, -100, -100, -100, -100, -202, -202, -202, -180,
	126, -179, 73, -200, 231, 265, 430, 431, 432, 82,
	342, -93, 436, 436, 436, 436, 436, 436, -84, -84,
	-84, -84, -118, 98, 110, 99, 100, -111, -119, -123,
	-126, 93, 128, 126, 127, 112, -111, -111, -111, -111,
	-111, -111, -111, -111, -111, -111, -111, -111, -111, -111,
	-111, -203, -258, 88, 144, -258, -110, -110, -189, -74,
	22, 37, -73, -190, -195, -187, -69, -277, -277, -137,
	-73, -73, -84, -84, -128, 88, -73, -128, 88, -73,
	-73, -68, 22, 37, -131, -132, 114, -128, -277, -111,
	-189, -189, -73, -74, -74, -73, -73, 82, -272, 312,
	313, 434, -197, 198, -196, 23, -194, 88, -121, -120,
	-141, -277, -142, 27, 10, 128, 82, 19, 82, -140,
	25, 26, -141, -112, -189, 89, 92, -85, 82, 12,
	-78, -100, -191, 135, -195, -100, -160, 198, -100, 31,
	82, -96, -98, -97, -99, 63, 67, 69, 64, 65,
	66, 70, -198, 23, -86, -3, -276, -100, -93, -278,
	82, 12, 74, -278, 82, 150, -168, -170, 82, 311,
	313, 314, 73, 101, -84, -215, 143, -240, -239, -238,
	-222, -224, -225, -226, 83, -143, -218, 279, -213, -213,
	-213, -213, -213, -214, -165, -214, -214, -214, 81, 81,
	-213, -213, -213, -213, -216, 81, -216, -216, -217, 81,
	-217, -251, -84, -248, -247, -245, -246, 174, 95, 342,
	-243, -140, 89, -81, -100, 110, 73, -189, -249, -249,
	-249, -258, -258, 88, -258, 88, 82, 17, -223, -222,
	-129, 223, -253, 198, -250, -244, 81, 29, -230, -231,
	-231, 150, -258, 82, 27, 106, 106, 106, 106, 342,
	155, 31, -222, -129, -203, 166, -203, -203, 88, 88,
	-178, 466, -93, 165, 222, -83, 325, 88, 84, -100,
	-100, -100, -100, -100, 158, 155, 206, -100, -100, -93,
	-100, 82, -59, 183, 178, -258, -100, -179, -179, -100,
	-179, -179, 88, -100, -189, -65, 312, 342, 20, -66,
	20, 98, 99, 100, -119, -111, -111, -111, -72, 188,
	109, -277, -277, -73, -73, -276, 150, -5, -141, -277,
	-277, 82, 74, 23, 12, 12, -277, 12, 12, -277,
	-277, -73, -134, -132, 116, -84, -277, -277, 82, 82,
	-277, -277, -277, -277, -277, -271, 433, 313, -104, 71,
	167, 72, -276, -196, -277, -156, 39, 47, 58, -84,
	-84, -139, -156, -172, 20, 12, 54, 54, -105, 13,
	-75, -86, -78, 150, -105, -109, 31, 54, -3, -276,
	-276, -163, -167, -128, -87, -88, -88, -87, -88, 63,
	63, 63, 68, 63, 68, 63, -97, -194, -277, -277,
	-3, -160, 74, -86, -100, -86, -102, -194, 135, -169,
	-171, 315, 312, 318, -258, 88, 82, -238, -226, 98,
	110, 30, 73, 276, 95, 170, 29, 169, -219, 280,
	-214, -214, -215, -258, 88, 144, -215, -215, -215, -221,
	88, -221, 89, 89, 83, -32, -27, -28, 32, 77,
	-245, -233, 88, 38, 83, 165, 24, -100, 73, 73,
	73, 16, -158, -189, 82, 83, -130, 224, -128, 83,
	-189, 83, -158, -231, -190, -189, -276, 163, 30, 30,
	-129, -130, -215, -258, 468, 467, 83, -100, -80, 213,
	221, 81, 85, -260, 74, 204, 276, 204, 207, 166,
	-59, -32, -100, -175, -175, 32, 312, 445, 443, -72,
	109, -111, -111, -277, -277, -74, -190, -137, -156, -205,
	144, 251, 187, 249, 245, 265, 256, 278, 247, 279,
	-203, -205, -111, -111, -111, -111, 339, -137, 117, -84,
	115, -111, -111, 164, 164, 164, -161, 40, 88, 88,
	59, -100, -135, 14, -84, 135, -141, -162, 73, -163,
	-122, -124, -123, -276, -157, -277, -189, -161, -105, 82,
	118, -91, -90, 73, 74, -92, 73, -90, 63, 63,
	-277, -105, -86, -105, -105, 150, 312, 316, 317, -238,
	98, -111, 10, 88, 29, 29, -215, -215, 83, 82,
	83, 82, 83, 82, -183, 379, 110, -28, -27, -233,
	-233, 89, -258, -100, -100, -100, -100, 17, 82, -222,
	-128, 54, -248, 83, -252, -253, -100, -110, -130, -159,
	81, 83, -257, 342, -259, -258, -189, -189, -189, -100,
	-179, -179, 32, -258, -111, -277, -141, -277, -213, -213,
	-213, -217, -213, 239, -213, 239, -277, -277, 20, 20,
	20, 20, -276, -64, 335, -84, 82, 82, -276, -276,
	-276, -277, 88, -214, -136, 15, 17, 28, -162, 82,
	-277, -277, 82, 54, 150, -277, -137, -167, -84, -84,
	81, -84, -137, -105, -114, -214, 88, -214, 89, 89,
	379, 30, 78, 79, 80, 30, 75, 76, -159, -158,
	-189, 200, 182, -277, 82, -220, 342, 345, 23, -158,
	-256, -255, -190, 81, 74, -156, -214, -258, -111, -111,
	-111, -111, -111, -141, 88, -111, -111, -158, -277, -158,
	-158, -197, -214, -145, -150, -176, -84, -120, 29, -124,
	54, -3, -189, -122, -189, -141, -158, -141, -215, -215,
	83, 83, 23, 201, -100, -253, 346, 346, -3, 83,
	82, 118, -158, -100, -277, -277, -277, -277, -67, 128,
	342, -277, -277, -277, -277, -277, -277, -104, -148, 429,
	-153, 43, -151, -152, 44, -149, 45, 53, 10, -122,
	150, 83, -3, -276, 81, -57, 342, -255, -237, -190,
	88, 89, 83, -277, 340, 70, 343, -145, 48, 257,
	-155, -154, 52, 44, -152, 17, 46, 17, -163, -189,
	-57, -111, 197, -158, -58, 212, 433, -260, 59, 341,
	344, -146, 50, -144, 49, -144, -154, 17, 17, 88,
	17, 88, -277, -277, 83, 175, -257, 59, -147, 51,
	73, 101, 88, 88, 88, -267, -268, 73, 214, 342,
	73, 101, -268, 73, 11, 10, 343, -266, 183, 178,
	181, 31, -266, 344, 177, 30, 98,
}

var yyDef = [...]int{
	33, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 815, 0, 551, 551, 551, 551, 551, 551,
	551, 0, 0, -2, -2, -2, 839, 37, 0, 928,
	0, 0, -2, 485, 486, 0, 488, -2, 0, 0,
	497, 1354, 1354, 546, 0, 0, 0, 0, 0, 1352,
	54, 55, 503, 504, 505, 1, 3, 0, 555, 823,
	0, 0, -2, 553, 0, 0, 934, 934, 934, 0,
	85, 86, 0, 0, 0, 839, 0, 0, 0, 0,
	0, 551, 0, 929, 108, 109, 89, -2, 113, 114,
	0, 118, 367, 328, 370, 326, 356, -2, 319, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 223, 223, 0, 0, -2, 319, 319, 319,
	0, 0, 0, 353, 936, 273, 223, 223, 0, 223,
	223, 223, 223, 0, 0, 223, 223, 223, 223, 223,
	223, 223, 223, 223, 223, 223, 223, 223, 223, 223,
	0, 107, 852, 0, 0, 117, 38, 34, 35, 36,
	0, 0, 0, 930, 551, 0, 419, 636, 949, 950,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118,
	1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128,
	1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138,
	1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148,
	1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158,
	1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168,
	1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178,
	1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188,
	1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
	1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
	1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
	1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
	1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
	1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258,
	1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268,
	1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278,
	1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288,
	1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298,
	1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308,
	1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318,
	1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328,
	1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338,
	1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348,
	1349, 1350, 1351, 0, 476, 476, 0, 476, 476, 476,
	476, 0, 0, 0, 431, 0, 0, 0, 0, 473,
	0, 0, 450, 452, 0, 473, 0, 460, 476, 1355,
	1355, 1355, 919, 0, 470, 468, 482, 483, 465, 466,
	484, 487, 0, 492, 495, 945, 946, 0, 510, 0,
	1164, 502, 515, 516, 0, 547, 548, 39, 687, 646,
	0, 652, 654, 0, 689, 690, 691, 692, 693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 719,
	720, 721, 722, 800, 801, 802, 803, 804, 805, 806,
	807, 656, 657, 797, 0, 908, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 788, 0, 757, 757, 757,
	757, 757, 757, 757, 757, 757, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 1354, 0, 525, 0, 815,
	50, 0, 551, 556, 557, 858, 0, 0, 815, 1353,
	0, 0, -2, -2, 567, 573, 574, 575, 576, 577,
	552, 0, 580, 584, 0, 0, 0, 935, 0, 0,
	71, 0, 1319, 912, -2, -2, 0, 0, 947, 948,
	921, -2, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, -2, 1108,
	0, 0, 127, 128, 0, 37, 249, 0, 123, 0,
	243, 196, 852, 932, 942, 0, 0, 0, 932, 91,
	115, 116, 223, 223, 0, 117, 117, 335, 336, 337,
	0, 0, -2, 247, 0, 320, 0, 0, 237, 237,
	241, 239, 240, 0, 0, 0, 0, 0, 0, 347,
	0, 348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 403, 0, 224, 0, 365, 366, 274, 0, 0,
	0, 0, 345, 346, 0, 0, 937, 938, 0, 0,
	223, 223, 0, 0, 0, 0, 223, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 843, 0, 0, 0, 0, 0,
	0, -2, 0, 411, 0, 930, 0, 0, 0, 930,
	418, 0, 420, 421, 0, 0, 422, 0, 473, 473,
	471, 472, 424, 425, 426, 427, 476, 0, 0, 232,
	233, 234, 473, 476, 0, 476, 476, 476, 476, 473,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1355, 1355, 1355, 479, 476, 457, 458, 461, 462, 1356,
	1357, 463, 464, 920, 493, 496, 513, 511, 512, 514,
	506, 507, 508, 509, 0, 526, 527, 532, 0, 0,
	0, 0, 538, 539, 540, 0, 0, 543, 544, 545,
	0, 0, 0, 0, 0, 650, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 674, 675, 676, 677, 678,
	679, 680, 653, 0, 667, 0, 0, 0, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 0, 564, 0,
	0, 0, 815, 0, 0, 0, 0, 0, 0, 0,
	561, 0, 789, 0, 740, 0, 741, 749, 0, 742,
	750, 743, 751, 744, 745, 752, 746, 753, 747, 748,
	754, 0, 0, 0, 564, 564, 0, 0, 40, 517,
	518, 0, 619, 940, 823, 0, 566, 861, 0, 0,
	824, 816, 817, 820, 823, 0, 589, 578, 568, 571,
	572, 554, 0, 581, 585, 0, 587, 588, 0, 0,
	69, 0, 635, 0, 591, 593, 594, 595, 617, 0,
	0, 0, 0, 65, 67, 636, 0, 1319, 918, 0,
	73, 74, 0, 0, 0, 211, 923, 924, 925, -2,
	230, 0, 135, 203, 147, 148, 149, 196, 151, 196,
	196, 196, 196, 207, 207, 207, 207, 179, 180, 181,
	182, 183, 0, 0, 166, 196, 196, 196, 196, 186,
	187, 188, 189, 190, 191, 192, 193, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 198, 198, 198, 200,
	200, 0, 38, 0, 215, 0, 820, 0, 843, 0,
	0, 0, 943, 0, 942, 942, 942, 0, 0, 0,
	368, 329, 357, 369, 0, 332, 333, -2, 0, 0,
	319, 0, 321, 0, 231, 0, -2, 0, 0, 0,
	237, 241, 238, 241, 229, 242, 349, 797, 0, 350,
	351, 0, 383, 605, 0, 0, 0, 0, 0, 389,
	390, 391, 0, 393, 394, 395, 396, 397, 398, 399,
	400, 401, 402, 358, 359, 360, 361, 362, 363, 364,
	0, 0, 321, 0, 354, 0, 275, 276, 0, 0,
	279, 280, 281, 282, 0, 0, 285, 286, 287, 288,
	289, 313, 314, 315, 290, 291, 292, 293, 294, 295,
	296, 307, 308, 309, 310, 311, 312, 297, 298, 299,
	300, 301, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 840, 841, 842, 0, 0, 0, 0,
	0, 262, 63, 931, 0, 637, 951, 952, 477, 478,
	0, 235, 236, 476, 476, 428, 451, 0, 476, 432,
	453, 433, 435, 434, 436, 476, 439, 474, 475, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 449, 455,
	0, 456, 0, 0, 494, 498, 499, 500, 501, 0,
	0, 529, 534, 535, 536, 537, 549, 542, 688, 647,
	648, 649, 651, 668, 0, 670, 672, 658, 659, 683,
	684, 685, 0, 0, 0, 0, 681, 663, 0, 694,
	695, 696, 697, 698, 699, 700, 701, 702, 703, 704,
	705, 708, 772, 773, 774, 0, 706, 707, 718, 0,
	0, 0, 565, 798, 0, -2, 0, 686, 907, 823,
	0, 0, 0, 0, 691, 800, 0, 691, 800, 0,
	0, 0, 562, 563, 795, 792, 0, 0, 758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 520, 521,
	523, 0, 639, 0, 620, 0, 622, 623, 0, 941,
	858, 51, 41, 0, 859, 0, 0, 0, 0, 819,
	821, 822, 858, 0, 808, 0, 0, 644, 0, 0,
	569, 47, 586, 582, 0, 644, 0, 0, 634, 0,
	0, 0, 0, 0, 0, 624, 0, 0, 627, 0,
	0, 0, 0, 618, 0, 0, 0, -2, 0, 0,
	0, 61, 62, 0, 0, 0, 913, 72, 0, 0,
	77, 78, 914, 915, 916, 917, 0, 110, -2, 270,
	129, 131, 132, 133, 124, 134, 205, 204, 150, 207,
	207, 173, 174, 211, 0, 211, 211, 211, 0, 0,
	167, 168, 169, 170, 161, 0, 162, 163, 164, 0,
	165, 248, 0, 827, 216, 217, 219, 223, 0, 0,
	244, 245, 0, 0, 100, 0, 0, 944, 0, 0,
	0, 106, 119, 120, 121, 122, 117, 0, 0, 125,
	323, 0, 0, 0, 246, 0, 0, 225, 241, 226,
	227, 0, 352, 0, 0, 385, 386, 387, 388, 0,
	0, 0, 321, 323, 211, 0, 277, 278, 283, 284,
	302, 0, 0, 0, 0, 853, 854, 0, 857, 92,
	375, 377, 376, 380, 0, 0, 0, 0, 412, 262,
	827, 0, 416, 263, 264, 417, 473, 438, 454, 473,
	430, 437, 480, 459, 490, 533, 0, 0, 0, 541,
	0, 669, 671, 673, 660, 681, 664, 0, 661, 0,
	0, 655, 723, 0, 0, 564, 0, 815, 858, 727,
	728, 0, 0, 0, 0, 0, 765, 0, 0, 766,
	0, 815, 0, 793, 0, 0, 739, 759, 0, 0,
	760, 761, 762, 763, 764, 519, 522, 524, 599, 0,
	0, 0, 0, 621, 939, 43, 0, 0, 0, 825,
	826, 818, 42, 0, 926, 927, 809, 810, 811, 0,
	579, 590, 570, 0, 823, 901, 0, 0, 893, 0,
	0, 644, 909, 0, 592, 613, 615, 0, 610, 625,
	626, 628, 0, 630, 0, 632, 633, 596, 597, 598,
	0, 644, 0, 644, 66, 644, 68, 0, 638, 75,
	76, 0, 0, 82, 212, 213, 117, 272, 130, 136,
	0, 0, 0, 140, 0, 0, 143, 145, 146, 206,
	211, 211, 175, 208, 209, 210, 176, 177, 178, 0,
	194, 0, 0, 0, 265, 87, 831, 830, 223, 223,
	218, 0, 221, 0, 197, 0, 933, 102, 0, 0,
	0, 0, 327, 603, 0, 338, 339, 0, 322, 382,
	0, 215, 0, 228, 798, 606, 0, 0, 340, 0,
	323, 343, 344, 355, 305, 306, 303, 601, 844, 845,
	846, 0, 856, 95, 0, 0, 0, 0, 373, 0,
	414, 415, 64, 476, 476, 528, 0, 531, 0, 662,
	0, 682, 665, 724, 725, 0, 799, 823, 45, 0,
	196, 196, 778, 196, 200, 781, 196, 783, 196, 786,
	0, 0, 0, 0, 0, 0, 0, 790, 738, 796,
	0, 0, 0, 0, 0, 0, 0, 0, 207, 863,
	860, 44, 813, 0, 645, 583, 48, 52, 0, 901,
	892, 903, 905, 0, 0, 0, 897, 0, 815, 0,
	0, 607, 614, 0, 0, 608, 0, 609, 629, 631,
	-2, 815, 644, 59, 60, 0, 79, 80, 81, 271,
	137, 138, 0, 141, 142, 144, 171, 172, 207, 0,
	207, 0, 201, 0, 254, 266, 0, 828, 829, 0,
	0, 220, 222, 601, 103, 104, 105, 0, 0, 126,
	324, 0, 214, 0, 0, 407, 404, 341, 342, 0,
	0, 855, 374, 0, 93, 94, 0, 0, 379, 413,
	423, 429, 530, 550, 666, 726, 858, 729, 775, 207,
	779, 780, 782, 784, 785, 787, 731, 730, 0, 0,
	0, 0, 0, 823, 0, 794, 0, 0, 0, 0,
	0, 619, 207, 883, 49, 0, 0, 0, 53, 0,
	906, 0, 0, 0, 0, 70, 823, 910, 911, 611,
	0, 616, 823, 58, 139, 211, 195, 211, 0, 0,
	267, 832, 833, 834, 835, 836, 837, 838, 0, 330,
	604, 0, 0, 384, 0, 392, 0, 0, 0, 0,
	96, 97, 0, 0, 0, 46, 776, 777, 0, 0,
	0, 0, 767, 0, 791, 0, 0, 0, 641, 0,
	0, 639, 865, 864, 877, 890, 814, 812, 0, 904,
	0, 896, 899, 895, 898, 56, 0, 57, 184, 185,
	199, 202, 0, 0, 0, 408, 405, 406, 847, 602,
	0, 0, 0, 381, 732, 734, 733, 735, 0, 0,
	0, 737, 755, 756, 640, 642, 643, 600, 883, 0,
	876, 0, -2, 885, 0, 0, 0, 891, 0, 894,
	0, 612, 847, 0, 0, 371, 849, 98, 99, 316,
	317, 318, 92, 736, 0, 0, 0, 870, 868, 868,
	878, 879, 0, 0, 886, 0, 0, 0, 902, 900,
	88, 0, 0, 0, 0, 850, 851, 95, 768, 0,
	771, 873, 0, 866, 869, 867, 880, 0, 0, 887,
	0, 889, 409, 410, 250, 0, 378, 769, 862, 0,
	871, 872, 881, 882, 888, 251, 252, 0, 848, 0,
	874, 875, 253, 0, 0, 0, 0, 255, 257, 258,
	0, 0, 256, 770, 259, 260, 261,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 469,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:413
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:418
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:423
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 33:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:455
		{
			setParseTree(yylex, nil)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:469
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:474
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:478
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 39:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:484
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 40:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:490
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:496
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:505
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:509
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:513
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:536
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:544
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:550
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:556
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:564
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:570
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:574
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:581
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:593
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:605
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:609
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:615
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:621
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:625
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:629
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:633
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:638
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:639
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:643
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:647
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:653
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:657
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:663
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:667
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 69:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:672
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:676
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:682
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:688
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:692
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:698
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:702
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:708
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:712
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:716
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:722
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:726
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:730
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:734
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:740
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:744
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:750
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:756
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:763
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:772
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].booleanUnion(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:776
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:783
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:787
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:792
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:796
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:802
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:807
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:812
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:818
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:823
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 100:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:835
		{
			yyLOCAL = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:842
		{
			yyLOCAL = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:849
		{
			yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].str)}, Options: yyDollar[4].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:854
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Fulltext: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:859
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Spatial: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:864
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Unique: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:871
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:878
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:889
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:895
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:899
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:905
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:909
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:917
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:922
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:926
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:932
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:936
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:942
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:946
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:953
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:957
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:963
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:967
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:973
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:978
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 130:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:987
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:996
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1006
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1016
		{
			yyLOCAL = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1020
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = false
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1025
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1030
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1035
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1040
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1045
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1050
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1055
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1060
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1065
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1094
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1144
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1150
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1156
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1168
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1186
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1190
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1243
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1253
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1288
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1293
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1297
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1302
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1306
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1314
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1318
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1324
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1332
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1336
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1345
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1350
		{
			yyVAL.str = ""
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1367
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1371
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1375
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1382
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1387
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1391
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1397
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1401
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1407
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1411
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1416
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1420
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1426
		{
			yyVAL.str = ""
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1430
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1436
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1440
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1444
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1448
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1452
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1457
		{
			yyVAL.str = ""
		}
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1461
		{
			yyVAL.str = yyDollar[2].str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1467
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1486
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1491
		{
			yyVAL.str = "key"
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1495
		{
			yyVAL.str = yyDollar[1].str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1510
		{
			yyVAL.str = ""
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1520
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1530
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1536
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1540
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1546
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1550
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1556
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1560
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1564
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnUpdate: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1568
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1574
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1580
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1586
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1592
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1596
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1600
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1604
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1608
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1613
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1626
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1630
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1634
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1639
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1643
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1649
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1653
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1657
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1663
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1681
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1705
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1709
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = ""
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1794
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = ""
		}
	case 321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1840
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1845
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1849
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1854
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1858
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1862
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1866
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1870
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1874
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1880
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1888
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1894
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1898
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1902
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1906
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1910
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1914
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1918
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1922
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1926
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1930
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1934
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1938
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1942
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1946
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1950
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1954
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1958
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1962
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1966
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1970
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1974
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1978
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1984
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1988
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1994
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1998
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2002
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2006
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2010
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2014
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2018
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2022
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2026
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2032
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2038
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2045
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2052
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2058
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columnsUnion(), Select: yyDollar[9].selStmtUnion(), CheckOption: yyDollar[10].str}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2062
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2069
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2076
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2088
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2098
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2102
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2106
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParamsUnion(),
				},
				VindexCols: yyDollar[9].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2119
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2129
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2133
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2146
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2150
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2154
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2158
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2162
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2166
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2170
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2174
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2178
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2182
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2186
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2190
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2194
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2198
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2202
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2206
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2210
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2214
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2218
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2222
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2226
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2230
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2235
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2239
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2243
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2250
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2254
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2260
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2264
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2270
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2276
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2280
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 414:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2286
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2290
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2299
		{
			yyLOCAL = &DropView{FromTables: yyDollar[4].tableNamesUnion(), IfExists: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2303
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2309
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2313
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2318
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2324
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2328
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2332
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2336
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2340
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2344
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2348
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2352
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2356
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2360
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2364
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2368
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2372
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2376
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2380
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2384
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2388
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2392
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2396
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2400
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2404
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2408
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2412
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2416
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2420
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2424
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2428
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2432
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2436
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2440
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2444
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2448
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2452
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2456
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2460
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2465
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].str}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2469
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2473
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2477
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2481
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2486
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2500
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2504
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2508
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2518
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2524
		{
			yyVAL.str = ""
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2528
		{
			yyVAL.str = "extended "
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2534
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2538
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2544
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2548
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2554
		{
			yyVAL.str = ""
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2558
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2562
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2572
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2576
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2582
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2586
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2592
		{
			yyVAL.empty = struct{}{}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2596
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2606
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2610
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2616
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2620
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2626
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2632
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2636
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2641
		{
			yyVAL.empty = struct{}{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2643
		{
			yyVAL.empty = struct{}{}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2646
		{
			yyVAL.empty = struct{}{}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2648
		{
			yyVAL.empty = struct{}{}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2653
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2659
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2664
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2668
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2672
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2676
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2680
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2684
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = yyDollar[1].str
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.str = yyDollar[1].str
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.str = yyDollar[1].str
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2704
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2708
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2712
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2716
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2721
		{
			yyVAL.str = ""
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2735
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2739
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2745
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2749
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2755
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2761
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2765
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2771
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2777
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2781
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2785
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2789
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2795
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2801
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2805
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2809
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2813
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2817
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2821
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2831
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2837
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2841
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2853
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2857
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2861
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2865
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2873
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2877
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2886
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2890
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2894
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2899
		{
			yyVAL.str = ""
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2908
		{
			setAllowComments(yylex, true)
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2912
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2918
		{
			yyVAL.strs = nil
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2922
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2928
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2932
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2936
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = ""
		}
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2949
		{
			yyVAL.str = SQLCacheStr
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2954
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2958
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2962
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:2967
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:2971
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2976
		{
			yyVAL.strs = nil
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2980
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2988
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2992
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.str = SQLCacheStr
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3006
		{
			yyVAL.str = DistinctStr
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3010
		{
			yyVAL.str = DistinctStr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3014
		{
			yyVAL.str = StraightJoinHint
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3018
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3022
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3028
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3032
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3038
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3042
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3046
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3050
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3055
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3063
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3075
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3079
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3085
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3089
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3099
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3103
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3107
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3113
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3119
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3123
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3128
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3132
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3138
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3142
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3148
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3152
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3165
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3169
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3173
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3177
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3183
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3185
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3195
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3197
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3200
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3205
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3213
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3226
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3230
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3234
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3240
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3246
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3250
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3254
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3258
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3264
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3268
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3278
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3292
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3298
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3303
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3307
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3311
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3315
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3319
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3324
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3328
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3334
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3338
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3342
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3346
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3350
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3354
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3358
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3362
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3368
		{
			yyVAL.str = ""
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3372
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3378
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3382
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3388
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3392
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3396
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3400
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3404
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3408
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3412
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3416
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3420
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3424
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3430
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3434
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3438
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3442
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3446
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3450
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3456
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3460
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3464
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3468
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3472
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3476
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3480
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3489
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3495
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3499
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3503
		{
			yyLOCAL = ListArg(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3509
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3515
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3519
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3525
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3529
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3533
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3537
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3541
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3545
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3549
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3553
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3557
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3561
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3565
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3569
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3573
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3577
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3581
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3585
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3589
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3593
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3597
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3601
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3605
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3609
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3613
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3617
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3621
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3625
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3629
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3633
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3637
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3641
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3659
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3663
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3667
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3671
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3681
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3685
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3689
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3693
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3697
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3701
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3705
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3709
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3713
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3717
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3721
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3725
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3729
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3733
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3743
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3747
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3751
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3756
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3761
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3766
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3772
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3777
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3782
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3786
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3790
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3795
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3800
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3805
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3813
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3823
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3833
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3837
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3841
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3845
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3849
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3853
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3857
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3863
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3867
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3871
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3875
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3879
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3889
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3899
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3903
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3907
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3911
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3915
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3919
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3925
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3929
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3933
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3937
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3941
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3945
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3949
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3954
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3958
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3963
		{
			yyVAL.str = string("")
		}
	case 791:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3967
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:3973
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3977
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 794:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:3983
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3988
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3992
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:3998
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4002
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4006
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4012
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4016
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4020
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4024
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4028
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4032
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4036
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4040
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4046
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4055
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4059
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4068
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4077
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4086
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4092
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4096
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4102
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4107
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4111
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4115
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4120
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4124
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4128
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4132
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4137
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4141
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4145
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4149
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4153
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4160
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4164
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4168
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4172
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4178
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4182
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4186
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4203
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = yyDollar[3].str
		}
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4218
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4231
		{
			yyVAL.str = yyDollar[2].str
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = "cascaded"
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4253
		{
			yyVAL.str = yyDollar[3].str
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 855:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4263
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4267
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4271
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 858:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4276
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4280
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4284
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4289
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4293
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4297
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4301
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4306
		{
			yyVAL.str = ""
		}
	case 866:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4310
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4314
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = ""
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = " header"
		}
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = " manifest on"
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4336
		{
			yyVAL.str = " manifest off"
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = " overwrite on"
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4349
		{
			yyVAL.str = " overwrite off"
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4355
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = ""
		}
	case 878:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			yyVAL.str = yyDollar[1].str
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4374
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 883:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = ""
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 885:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4399
		{
			yyVAL.str = yyDollar[1].str
		}
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4403
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4409
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4413
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 889:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 890:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4422
		{
			yyVAL.str = ""
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4426
		{
			yyVAL.str = " optionally"
		}
	case 892:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4439
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4443
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4447
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4451
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4455
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4461
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4465
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4469
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 900:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4473
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4478
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4482
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4488
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4492
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 905:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4498
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4502
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4508
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4514
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4524
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4528
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4534
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4540
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4544
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4550
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4554
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4558
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4562
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4566
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = "charset"
		}
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4584
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4588
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4592
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4601
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4603
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4606
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4608
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4611
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4613
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4616
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4618
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4621
		{
			yyVAL.empty = struct{}{}
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4623
		{
			yyVAL.empty = struct{}{}
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4625
		{
			yyVAL.empty = struct{}{}
		}
	case 939:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4629
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4638
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4645
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4649
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4655
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4659
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4666
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4672
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4676
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 952:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4683
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5107
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5116
		{
			decNesting(yylex)
		}
	case 1354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5121
		{
			skipToEnd(yylex)
		}
	case 1355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5126
		{
			skipToEnd(yylex)
		}
	case 1356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5130
		{
			skipToEnd(yylex)
		}
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5134
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
