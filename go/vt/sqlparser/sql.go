// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const LEX_ERROR = 57348
const UNION = 57349
const SELECT = 57350
const STREAM = 57351
const VSTREAM = 57352
const INSERT = 57353
const UPDATE = 57354
const DELETE = 57355
const FROM = 57356
const WHERE = 57357
const GROUP = 57358
const HAVING = 57359
const ORDER = 57360
const BY = 57361
const LIMIT = 57362
const OFFSET = 57363
const FOR = 57364
const ALL = 57365
const DISTINCT = 57366
const AS = 57367
const EXISTS = 57368
const ASC = 57369
const DESC = 57370
const INTO = 57371
const DUPLICATE = 57372
const DEFAULT = 57373
const SET = 57374
const LOCK = 57375
const UNLOCK = 57376
const KEYS = 57377
const DO = 57378
const CALL = 57379
const DISTINCTROW = 57380
const PARSER = 57381
const GENERATED = 57382
const ALWAYS = 57383
const OUTFILE = 57384
const S3 = 57385
const DATA = 57386
const LOAD = 57387
const LINES = 57388
const TERMINATED = 57389
const ESCAPED = 57390
const ENCLOSED = 57391
const DUMPFILE = 57392
const CSV = 57393
const HEADER = 57394
const MANIFEST = 57395
const OVERWRITE = 57396
const STARTING = 57397
const OPTIONALLY = 57398
const VALUES = 57399
const LAST_INSERT_ID = 57400
const NEXT = 57401
const VALUE = 57402
const SHARE = 57403
const MODE = 57404
const SQL_NO_CACHE = 57405
const SQL_CACHE = 57406
const SQL_CALC_FOUND_ROWS = 57407
const JOIN = 57408
const STRAIGHT_JOIN = 57409
const LEFT = 57410
const RIGHT = 57411
const INNER = 57412
const OUTER = 57413
const CROSS = 57414
const NATURAL = 57415
const USE = 57416
const FORCE = 57417
const ON = 57418
const USING = 57419
const INPLACE = 57420
const COPY = 57421
const INSTANT = 57422
const ALGORITHM = 57423
const NONE = 57424
const SHARED = 57425
const EXCLUSIVE = 57426
const SUBQUERY_AS_EXPR = 57427
const ID = 57428
const AT_ID = 57429
const AT_AT_ID = 57430
const HEX = 57431
const STRING = 57432
const NCHAR_STRING = 57433
const INTEGRAL = 57434
const FLOAT = 57435
const DECIMAL = 57436
const HEXNUM = 57437
const VALUE_ARG = 57438
const LIST_ARG = 57439
const COMMENT = 57440
const COMMENT_KEYWORD = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const JSON_PRETTY = 57444
const JSON_STORAGE_SIZE = 57445
const JSON_STORAGE_FREE = 57446
const JSON_CONTAINS = 57447
const JSON_CONTAINS_PATH = 57448
const JSON_EXTRACT = 57449
const JSON_KEYS = 57450
const JSON_OVERLAPS = 57451
const JSON_SEARCH = 57452
const JSON_VALUE = 57453
const EXTRACT = 57454
const NULL = 57455
const TRUE = 57456
const FALSE = 57457
const OFF = 57458
const DISCARD = 57459
const IMPORT = 57460
const ENABLE = 57461
const DISABLE = 57462
const TABLESPACE = 57463
const VIRTUAL = 57464
const STORED = 57465
const BOTH = 57466
const LEADING = 57467
const TRAILING = 57468
const EMPTY_FROM_CLAUSE = 57469
const LOWER_THAN_CHARSET = 57470
const CHARSET = 57471
const UNIQUE = 57472
const KEY = 57473
const EXPRESSION_PREC_SETTER = 57474
const OR = 57475
const XOR = 57476
const AND = 57477
const NOT = 57478
const BETWEEN = 57479
const CASE = 57480
const WHEN = 57481
const THEN = 57482
const ELSE = 57483
const END = 57484
const LE = 57485
const GE = 57486
const NE = 57487
const NULL_SAFE_EQUAL = 57488
const IS = 57489
const LIKE = 57490
const REGEXP = 57491
const RLIKE = 57492
const IN = 57493
const SHIFT_LEFT = 57494
const SHIFT_RIGHT = 57495
const DIV = 57496
const MOD = 57497
const UNARY = 57498
const COLLATE = 57499
const BINARY = 57500
const UNDERSCORE_ARMSCII8 = 57501
const UNDERSCORE_ASCII = 57502
const UNDERSCORE_BIG5 = 57503
const UNDERSCORE_BINARY = 57504
const UNDERSCORE_CP1250 = 57505
const UNDERSCORE_CP1251 = 57506
const UNDERSCORE_CP1256 = 57507
const UNDERSCORE_CP1257 = 57508
const UNDERSCORE_CP850 = 57509
const UNDERSCORE_CP852 = 57510
const UNDERSCORE_CP866 = 57511
const UNDERSCORE_CP932 = 57512
const UNDERSCORE_DEC8 = 57513
const UNDERSCORE_EUCJPMS = 57514
const UNDERSCORE_EUCKR = 57515
const UNDERSCORE_GB18030 = 57516
const UNDERSCORE_GB2312 = 57517
const UNDERSCORE_GBK = 57518
const UNDERSCORE_GEOSTD8 = 57519
const UNDERSCORE_GREEK = 57520
const UNDERSCORE_HEBREW = 57521
const UNDERSCORE_HP8 = 57522
const UNDERSCORE_KEYBCS2 = 57523
const UNDERSCORE_KOI8R = 57524
const UNDERSCORE_KOI8U = 57525
const UNDERSCORE_LATIN1 = 57526
const UNDERSCORE_LATIN2 = 57527
const UNDERSCORE_LATIN5 = 57528
const UNDERSCORE_LATIN7 = 57529
const UNDERSCORE_MACCE = 57530
const UNDERSCORE_MACROMAN = 57531
const UNDERSCORE_SJIS = 57532
const UNDERSCORE_SWE7 = 57533
const UNDERSCORE_TIS620 = 57534
const UNDERSCORE_UCS2 = 57535
const UNDERSCORE_UJIS = 57536
const UNDERSCORE_UTF16 = 57537
const UNDERSCORE_UTF16LE = 57538
const UNDERSCORE_UTF32 = 57539
const UNDERSCORE_UTF8 = 57540
const UNDERSCORE_UTF8MB4 = 57541
const UNDERSCORE_UTF8MB3 = 57542
const INTERVAL = 57543
const WINDOW_EXPR = 57544
const JSON_EXTRACT_OP = 57545
const JSON_UNQUOTE_EXTRACT_OP = 57546
const CREATE = 57547
const ALTER = 57548
const DROP = 57549
const RENAME = 57550
const ANALYZE = 57551
const ADD = 57552
const FLUSH = 57553
const CHANGE = 57554
const MODIFY = 57555
const DEALLOCATE = 57556
const REVERT = 57557
const SCHEMA = 57558
const TABLE = 57559
const INDEX = 57560
const VIEW = 57561
const TO = 57562
const IGNORE = 57563
const IF = 57564
const PRIMARY = 57565
const COLUMN = 57566
const SPATIAL = 57567
const FULLTEXT = 57568
const KEY_BLOCK_SIZE = 57569
const CHECK = 57570
const INDEXES = 57571
const ACTION = 57572
const CASCADE = 57573
const CONSTRAINT = 57574
const FOREIGN = 57575
const NO = 57576
const REFERENCES = 57577
const RESTRICT = 57578
const SHOW = 57579
const DESCRIBE = 57580
const EXPLAIN = 57581
const DATE = 57582
const ESCAPE = 57583
const REPAIR = 57584
const OPTIMIZE = 57585
const TRUNCATE = 57586
const COALESCE = 57587
const EXCHANGE = 57588
const REBUILD = 57589
const PARTITIONING = 57590
const REMOVE = 57591
const PREPARE = 57592
const EXECUTE = 57593
const MAXVALUE = 57594
const PARTITION = 57595
const REORGANIZE = 57596
const LESS = 57597
const THAN = 57598
const PROCEDURE = 57599
const TRIGGER = 57600
const VINDEX = 57601
const VINDEXES = 57602
const DIRECTORY = 57603
const NAME = 57604
const UPGRADE = 57605
const STATUS = 57606
const VARIABLES = 57607
const WARNINGS = 57608
const CASCADED = 57609
const DEFINER = 57610
const OPTION = 57611
const SQL = 57612
const UNDEFINED = 57613
const SEQUENCE = 57614
const MERGE = 57615
const TEMPORARY = 57616
const TEMPTABLE = 57617
const INVOKER = 57618
const SECURITY = 57619
const FIRST = 57620
const AFTER = 57621
const LAST = 57622
const VITESS_MIGRATION = 57623
const CANCEL = 57624
const RETRY = 57625
const COMPLETE = 57626
const CLEANUP = 57627
const THROTTLE = 57628
const UNTHROTTLE = 57629
const EXPIRE = 57630
const RATIO = 57631
const BEGIN = 57632
const START = 57633
const TRANSACTION = 57634
const COMMIT = 57635
const ROLLBACK = 57636
const SAVEPOINT = 57637
const RELEASE = 57638
const WORK = 57639
const BIT = 57640
const TINYINT = 57641
const SMALLINT = 57642
const MEDIUMINT = 57643
const INT = 57644
const INTEGER = 57645
const BIGINT = 57646
const INTNUM = 57647
const REAL = 57648
const DOUBLE = 57649
const FLOAT_TYPE = 57650
const DECIMAL_TYPE = 57651
const NUMERIC = 57652
const TIME = 57653
const TIMESTAMP = 57654
const DATETIME = 57655
const YEAR = 57656
const CHAR = 57657
const VARCHAR = 57658
const BOOL = 57659
const CHARACTER = 57660
const VARBINARY = 57661
const NCHAR = 57662
const TEXT = 57663
const TINYTEXT = 57664
const MEDIUMTEXT = 57665
const LONGTEXT = 57666
const BLOB = 57667
const TINYBLOB = 57668
const MEDIUMBLOB = 57669
const LONGBLOB = 57670
const JSON = 57671
const JSON_SCHEMA_VALID = 57672
const JSON_SCHEMA_VALIDATION_REPORT = 57673
const ENUM = 57674
const GEOMETRY = 57675
const POINT = 57676
const LINESTRING = 57677
const POLYGON = 57678
const GEOMETRYCOLLECTION = 57679
const MULTIPOINT = 57680
const MULTILINESTRING = 57681
const MULTIPOLYGON = 57682
const ASCII = 57683
const UNICODE = 57684
const NULLX = 57685
const AUTO_INCREMENT = 57686
const APPROXNUM = 57687
const SIGNED = 57688
const UNSIGNED = 57689
const ZEROFILL = 57690
const CODE = 57691
const COLLATION = 57692
const COLUMNS = 57693
const DATABASES = 57694
const ENGINES = 57695
const EVENT = 57696
const EXTENDED = 57697
const FIELDS = 57698
const FULL = 57699
const FUNCTION = 57700
const GTID_EXECUTED = 57701
const KEYSPACES = 57702
const OPEN = 57703
const PLUGINS = 57704
const PRIVILEGES = 57705
const PROCESSLIST = 57706
const SCHEMAS = 57707
const TABLES = 57708
const TRIGGERS = 57709
const USER = 57710
const VGTID_EXECUTED = 57711
const VITESS_KEYSPACES = 57712
const VITESS_METADATA = 57713
const VITESS_MIGRATIONS = 57714
const VITESS_REPLICATION_STATUS = 57715
const VITESS_SHARDS = 57716
const VITESS_TABLETS = 57717
const VSCHEMA = 57718
const VITESS_THROTTLED_APPS = 57719
const NAMES = 57720
const GLOBAL = 57721
const SESSION = 57722
const ISOLATION = 57723
const LEVEL = 57724
const READ = 57725
const WRITE = 57726
const ONLY = 57727
const REPEATABLE = 57728
const COMMITTED = 57729
const UNCOMMITTED = 57730
const SERIALIZABLE = 57731
const CURRENT_TIMESTAMP = 57732
const DATABASE = 57733
const CURRENT_DATE = 57734
const NOW = 57735
const CURRENT_TIME = 57736
const LOCALTIME = 57737
const LOCALTIMESTAMP = 57738
const CURRENT_USER = 57739
const UTC_DATE = 57740
const UTC_TIME = 57741
const UTC_TIMESTAMP = 57742
const DAY = 57743
const DAY_HOUR = 57744
const DAY_MICROSECOND = 57745
const DAY_MINUTE = 57746
const DAY_SECOND = 57747
const HOUR = 57748
const HOUR_MICROSECOND = 57749
const HOUR_MINUTE = 57750
const HOUR_SECOND = 57751
const MICROSECOND = 57752
const MINUTE = 57753
const MINUTE_MICROSECOND = 57754
const MINUTE_SECOND = 57755
const MONTH = 57756
const QUARTER = 57757
const SECOND = 57758
const SECOND_MICROSECOND = 57759
const YEAR_MONTH = 57760
const WEEK = 57761
const REPLACE = 57762
const CONVERT = 57763
const CAST = 57764
const SUBSTR = 57765
const SUBSTRING = 57766
const GROUP_CONCAT = 57767
const SEPARATOR = 57768
const TIMESTAMPADD = 57769
const TIMESTAMPDIFF = 57770
const WEIGHT_STRING = 57771
const LTRIM = 57772
const RTRIM = 57773
const TRIM = 57774
const JSON_ARRAY = 57775
const JSON_OBJECT = 57776
const JSON_QUOTE = 57777
const JSON_DEPTH = 57778
const JSON_TYPE = 57779
const JSON_LENGTH = 57780
const JSON_VALID = 57781
const JSON_ARRAY_APPEND = 57782
const JSON_ARRAY_INSERT = 57783
const JSON_INSERT = 57784
const JSON_MERGE = 57785
const JSON_MERGE_PATCH = 57786
const JSON_MERGE_PRESERVE = 57787
const JSON_REMOVE = 57788
const JSON_REPLACE = 57789
const JSON_SET = 57790
const JSON_UNQUOTE = 57791
const REGEXP_INSTR = 57792
const REGEXP_LIKE = 57793
const REGEXP_REPLACE = 57794
const REGEXP_SUBSTR = 57795
const ExtractValue = 57796
const UpdateXML = 57797
const MATCH = 57798
const AGAINST = 57799
const BOOLEAN = 57800
const LANGUAGE = 57801
const WITH = 57802
const QUERY = 57803
const EXPANSION = 57804
const WITHOUT = 57805
const VALIDATION = 57806
const UNUSED = 57807
const ARRAY = 57808
const BYTE = 57809
const CUME_DIST = 57810
const DESCRIPTION = 57811
const DENSE_RANK = 57812
const EMPTY = 57813
const EXCEPT = 57814
const FIRST_VALUE = 57815
const GROUPING = 57816
const GROUPS = 57817
const JSON_TABLE = 57818
const LAG = 57819
const LAST_VALUE = 57820
const LATERAL = 57821
const LEAD = 57822
const NTH_VALUE = 57823
const NTILE = 57824
const OF = 57825
const OVER = 57826
const PERCENT_RANK = 57827
const RANK = 57828
const RECURSIVE = 57829
const ROW_NUMBER = 57830
const SYSTEM = 57831
const WINDOW = 57832
const ACTIVE = 57833
const ADMIN = 57834
const AUTOEXTEND_SIZE = 57835
const BUCKETS = 57836
const CLONE = 57837
const COLUMN_FORMAT = 57838
const COMPONENT = 57839
const DEFINITION = 57840
const ENFORCED = 57841
const ENGINE_ATTRIBUTE = 57842
const EXCLUDE = 57843
const FOLLOWING = 57844
const GEOMCOLLECTION = 57845
const GET_MASTER_PUBLIC_KEY = 57846
const HISTOGRAM = 57847
const HISTORY = 57848
const INACTIVE = 57849
const INVISIBLE = 57850
const LOCKED = 57851
const MASTER_COMPRESSION_ALGORITHMS = 57852
const MASTER_PUBLIC_KEY_PATH = 57853
const MASTER_TLS_CIPHERSUITES = 57854
const MASTER_ZSTD_COMPRESSION_LEVEL = 57855
const NESTED = 57856
const NETWORK_NAMESPACE = 57857
const NOWAIT = 57858
const NULLS = 57859
const OJ = 57860
const OLD = 57861
const OPTIONAL = 57862
const ORDINALITY = 57863
const ORGANIZATION = 57864
const OTHERS = 57865
const PARTIAL = 57866
const PATH = 57867
const PERSIST = 57868
const PERSIST_ONLY = 57869
const PRECEDING = 57870
const PRIVILEGE_CHECKS_USER = 57871
const PROCESS = 57872
const RANDOM = 57873
const REFERENCE = 57874
const REQUIRE_ROW_FORMAT = 57875
const RESOURCE = 57876
const RESPECT = 57877
const RESTART = 57878
const RETAIN = 57879
const REUSE = 57880
const ROLE = 57881
const SECONDARY = 57882
const SECONDARY_ENGINE = 57883
const SECONDARY_ENGINE_ATTRIBUTE = 57884
const SECONDARY_LOAD = 57885
const SECONDARY_UNLOAD = 57886
const SIMPLE = 57887
const SKIP = 57888
const SRID = 57889
const THREAD_PRIORITY = 57890
const TIES = 57891
const UNBOUNDED = 57892
const VCPU = 57893
const VISIBLE = 57894
const RETURNING = 57895
const FORMAT = 57896
const TREE = 57897
const VITESS = 57898
const TRADITIONAL = 57899
const LOCAL = 57900
const LOW_PRIORITY = 57901
const NO_WRITE_TO_BINLOG = 57902
const LOGS = 57903
const ERROR = 57904
const GENERAL = 57905
const HOSTS = 57906
const OPTIMIZER_COSTS = 57907
const USER_RESOURCES = 57908
const SLOW = 57909
const CHANNEL = 57910
const RELAY = 57911
const EXPORT = 57912
const CURRENT = 57913
const ROW = 57914
const ROWS = 57915
const AVG_ROW_LENGTH = 57916
const CONNECTION = 57917
const CHECKSUM = 57918
const DELAY_KEY_WRITE = 57919
const ENCRYPTION = 57920
const ENGINE = 57921
const INSERT_METHOD = 57922
const MAX_ROWS = 57923
const MIN_ROWS = 57924
const PACK_KEYS = 57925
const PASSWORD = 57926
const FIXED = 57927
const DYNAMIC = 57928
const COMPRESSED = 57929
const REDUNDANT = 57930
const COMPACT = 57931
const ROW_FORMAT = 57932
const STATS_AUTO_RECALC = 57933
const STATS_PERSISTENT = 57934
const STATS_SAMPLE_PAGES = 57935
const STORAGE = 57936
const MEMORY = 57937
const DISK = 57938
const PARTITIONS = 57939
const LINEAR = 57940
const RANGE = 57941
const LIST = 57942
const SUBPARTITION = 57943
const SUBPARTITIONS = 57944
const HASH = 57945

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	12, 47,
	13, 47,
	-2, 37,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 47,
	1, 145,
	621, 145,
	-2, 153,
	-1, 48,
	132, 153,
	173, 153,
	335, 153,
	-2, 498,
	-1, 55,
	35, 740,
	235, 740,
	246, 740,
	281, 754,
	282, 754,
	-2, 742,
	-1, 60,
	237, 765,
	-2, 763,
	-1, 114,
	234, 1373,
	-2, 119,
	-1, 116,
	1, 146,
	621, 146,
	-2, 153,
	-1, 127,
	133, 384,
	240, 384,
	-2, 487,
	-1, 146,
	132, 153,
	173, 153,
	335, 153,
	-2, 507,
	-1, 725,
	218, 1394,
	-2, 1390,
	-1, 726,
	218, 1395,
	-2, 1391,
	-1, 802,
	59, 833,
	-2, 848,
	-1, 839,
	148, 1811,
	-2, 112,
	-1, 840,
	148, 1648,
	-2, 113,
	-1, 846,
	148, 1732,
	-2, 1367,
	-1, 996,
	148, 1574,
	-2, 1364,
	-1, 1037,
	245, 41,
	250, 41,
	-2, 395,
	-1, 1122,
	1, 555,
	621, 555,
	-2, 153,
	-1, 1372,
	59, 834,
	-2, 853,
	-1, 1373,
	59, 835,
	-2, 854,
	-1, 1426,
	132, 153,
	173, 153,
	335, 153,
	-2, 434,
	-1, 1505,
	133, 384,
	240, 384,
	-2, 487,
	-1, 1514,
	245, 42,
	250, 42,
	-2, 396,
	-1, 1830,
	218, 1399,
	-2, 1393,
	-1, 1921,
	132, 153,
	173, 153,
	335, 153,
	-2, 435,
	-1, 1928,
	25, 174,
	-2, 176,
	-1, 2192,
	87, 39,
	-2, 889,
	-1, 2248,
	77, 94,
	87, 94,
	-2, 909,
	-1, 2316,
	596, 667,
	-2, 641,
	-1, 2473,
	49, 1334,
	-2, 1328,
	-1, 2714,
	87, 39,
	-2, 890,
	-1, 2752,
	7, 53,
	18, 53,
	20, 53,
	88, 53,
	-2, 882,
	-1, 3071,
	596, 667,
	-2, 655,
	-1, 3161,
	22, 1734,
	32, 1734,
	174, 1734,
	257, 1734,
	315, 1734,
	316, 1734,
	317, 1734,
	318, 1734,
	319, 1734,
	320, 1734,
	321, 1734,
	323, 1734,
	324, 1734,
	325, 1734,
	326, 1734,
	327, 1734,
	328, 1734,
	329, 1734,
	330, 1734,
	331, 1734,
	332, 1734,
	333, 1734,
	334, 1734,
	336, 1734,
	338, 1734,
	339, 1734,
	340, 1734,
	341, 1734,
	342, 1734,
	343, 1734,
	344, 1734,
	345, 1734,
	346, 1734,
	349, 1734,
	350, 1734,
	351, 1734,
	352, 1734,
	353, 1734,
	354, 1734,
	355, 1734,
	356, 1734,
	357, 1734,
	475, 1734,
	-2, 599,
}

const yyPrivate = 57344

const yyLast = 45414

var yyAct = [...]int{
	725, 2856, 2857, 3233, 2855, 3202, 3052, 3245, 1918, 3139,
	637, 3203, 3159, 1429, 2828, 3104, 2689, 2621, 3127, 728,
	2527, 2534, 2415, 3036, 734, 1872, 1186, 1852, 2987, 2132,
	2575, 727, 2486, 2584, 2589, 2586, 3034, 2585, 702, 37,
	2152, 2815, 2583, 2588, 2587, 2489, 2884, 795, 2604, 2434,
	3024, 186, 2542, 1854, 186, 703, 584, 186, 3, 2180,
	1988, 2490, 600, 817, 186, 2603, 1350, 620, 2723, 2487,
	2889, 624, 186, 1387, 2377, 2413, 2717, 700, 2220, 701,
	646, 2414, 2606, 1876, 1892, 2743, 1069, 186, 2484, 2243,
	2474, 2207, 617, 2709, 2642, 616, 1951, 1134, 1483, 2281,
	2626, 2313, 1976, 2019, 1956, 2360, 999, 2282, 618, 600,
	2283, 1907, 600, 186, 600, 818, 799, 36, 803, 1897,
	38, 2232, 1896, 2213, 2199, 844, 2182, 1374, 1790, 155,
	797, 1530, 1791, 1824, 612, 841, 820, 1732, 2352, 1975,
	2036, 1722, 1884, 1958, 1817, 141, 1997, 2275, 1027, 1396,
	2250, 1680, 1163, 95, 1418, 91, 1899, 1354, 1032, 629,
	1270, 1743, 1699, 1205, 1631, 1627, 1519, 1006, 96, 1512,
	1003, 1035, 1973, 1038, 1611, 1033, 1007, 1417, 1034, 1947,
	1401, 1877, 1415, 1045, 1237, 809, 1787, 159, 119, 117,
	1184, 1179, 1478, 98, 118, 124, 1636, 804, 125, 1118,
	805, 807, 1504, 97, 1844, 831, 607, 76, 3061, 85,
	1273, 2306, 89, 3234, 1277, 1990, 1991, 1992, 1990, 2816,
	2572, 2336, 2335, 2034, 2304, 1596, 3089, 2808, 2594, 8,
	1071, 188, 189, 190, 3186, 120, 7, 556, 87, 2771,
	825, 90, 830, 1088, 1089, 1090, 811, 1093, 1094, 1095,
	1096, 126, 3090, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1000, 6, 608, 2368, 587, 87, 1074, 587, 1206, 2369,
	796, 1827, 102, 806, 77, 798, 2592, 740, 741, 742,
	845, 838, 3084, 740, 741, 742, 812, 1206, 3085, 87,
	1048, 2860, 1024, 2860, 120, 1023, 1022, 819, 2598, 1849,
	1850, 1021, 1049, 1702, 1687, 1686, 573, 2594, 1025, 1075,
	1078, 1079, 1685, 104, 105, 1684, 108, 1683, 1682, 114,
	2591, 1669, 183, 1674, 1082, 551, 188, 189, 190, 2178,
	3140, 1091, 610, 2470, 611, 3180, 2678, 2023, 2326, 2209,
	2438, 1011, 3190, 3188, 3256, 791, 792, 793, 794, 87,
	1381, 802, 1016, 3201, 572, 3224, 2694, 2021, 2329, 2693,
	3037, 2153, 120, 1692, 3206, 2592, 570, 182, 3189, 3187,
	2643, 2983, 2982, 3085, 2821, 1216, 2859, 2822, 2859, 833,
	834, 2022, 78, 1073, 1072, 80, 3253, 2598, 78, 3169,
	78, 121, 3137, 143, 1216, 78, 3237, 3080, 3215, 704,
	2829, 3128, 2016, 3167, 164, 704, 567, 1967, 3136, 2595,
	2376, 3066, 3173, 3174, 2223, 582, 3164, 3079, 2660, 1493,
	2544, 2545, 1238, 2179, 2078, 2344, 1121, 3168, 2259, 2343,
	578, 2258, 1961, 2523, 2260, 154, 1419, 2902, 1420, 2224,
	2367, 142, 2075, 587, 2992, 1239, 1240, 1241, 1242, 1243,
	1244, 1245, 1247, 1246, 1248, 1249, 2524, 2525, 1913, 1914,
	87, 1912, 161, 1182, 162, 1153, 87, 588, 87, 789,
	588, 788, 2307, 87, 1212, 1851, 3053, 1204, 1154, 2271,
	130, 131, 153, 152, 181, 1880, 1141, 1158, 1159, 2076,
	2720, 1142, 2651, 1212, 598, 1147, 1931, 1930, 2595, 557,
	1015, 559, 574, 1017, 590, 587, 589, 563, 1673, 561,
	565, 575, 566, 587, 560, 1170, 571, 1172, 2623, 562,
	576, 577, 580, 594, 593, 581, 579, 2543, 569, 591,
	2403, 3207, 1141, 2216, 2217, 2649, 1117, 1142, 602, 2546,
	596, 186, 2627, 186, 2353, 1140, 186, 1139, 1358, 1675,
	1676, 1677, 3208, 1617, 1092, 1169, 1171, 1020, 2339, 1127,
	1128, 2314, 1998, 1155, 1174, 2616, 3013, 1586, 3014, 1181,
	2037, 1612, 2042, 2617, 1960, 600, 600, 600, 1020, 1116,
	1148, 3236, 1160, 147, 128, 150, 135, 127, 1176, 148,
	149, 1130, 1161, 600, 600, 165, 1162, 2054, 1123, 2055,
	1020, 2056, 1012, 2624, 171, 136, 1156, 1157, 2355, 1014,
	1013, 1587, 2810, 1588, 2967, 1018, 2806, 2809, 2057, 139,
	137, 132, 133, 134, 138, 1098, 3181, 2043, 1097, 2625,
	2039, 129, 1058, 37, 2048, 2045, 2047, 2046, 2049, 2050,
	140, 2041, 2001, 1120, 1361, 1137, 588, 1143, 1144, 1145,
	1146, 1056, 1167, 1198, 2437, 1028, 1168, 1252, 1018, 1029,
	587, 2864, 1893, 1029, 1067, 1066, 1173, 1065, 1064, 1878,
	1879, 1183, 1211, 1208, 1209, 1210, 1215, 1217, 1214, 1063,
	1213, 1062, 1061, 2040, 3060, 1060, 1055, 2305, 2404, 1166,
	1207, 1211, 1208, 1209, 1210, 1215, 1217, 1214, 1497, 1213,
	1068, 2546, 1880, 3257, 3213, 1040, 1252, 592, 588, 1207,
	1004, 1628, 1004, 1518, 2076, 3249, 588, 1041, 1974, 1004,
	1177, 156, 2359, 1002, 1255, 1256, 1257, 1258, 585, 2805,
	1026, 737, 1019, 2020, 1263, 1077, 832, 2565, 1119, 2183,
	2185, 1040, 2372, 586, 2356, 1076, 2027, 2026, 1624, 3142,
	2341, 1192, 1085, 1019, 2308, 3142, 2338, 1047, 1491, 1618,
	1490, 1489, 2993, 1619, 1620, 1348, 1188, 1189, 737, 2324,
	3141, 1151, 2596, 2597, 1625, 1019, 3141, 2721, 1059, 186,
	1487, 1259, 555, 600, 600, 2600, 1598, 1597, 1599, 1600,
	1601, 2090, 737, 550, 3049, 2273, 1343, 1057, 151, 186,
	2769, 2770, 2351, 1328, 2758, 2350, 2018, 1964, 1253, 1254,
	2739, 81, 3172, 2255, 1047, 1175, 2219, 2163, 600, 3078,
	1517, 1843, 186, 2378, 1201, 1364, 1047, 600, 1405, 1368,
	1322, 1199, 2328, 600, 1132, 799, 1365, 144, 2214, 2858,
	145, 2858, 1919, 1252, 1349, 1249, 1275, 1965, 1276, 1362,
	116, 86, 2522, 841, 1279, 1963, 3171, 86, 1046, 86,
	814, 2596, 2597, 588, 86, 1164, 1200, 1084, 1136, 1637,
	157, 1180, 3074, 1070, 2600, 2362, 2327, 169, 77, 2077,
	2361, 2801, 2733, 2362, 1744, 2038, 1878, 1879, 2361, 1966,
	1621, 1616, 1421, 1126, 111, 1202, 2396, 2297, 1138, 1962,
	1047, 1220, 1221, 2184, 1129, 1366, 2380, 3216, 1349, 95,
	1329, 1330, 1331, 1332, 1333, 1046, 1047, 2898, 1221, 177,
	1367, 1040, 1043, 1044, 96, 1004, 2776, 1046, 2015, 1037,
	1041, 3247, 1050, 1040, 3248, 1355, 3246, 1052, 1744, 2775,
	2104, 1053, 1051, 1244, 1245, 1247, 1246, 1248, 1249, 98,
	1036, 158, 163, 160, 166, 167, 168, 170, 172, 173,
	174, 175, 1054, 1222, 112, 2005, 1527, 176, 178, 179,
	180, 1150, 2390, 2389, 2388, 2382, 1047, 2386, 1526, 2381,
	1516, 2379, 1152, 2013, 1352, 1058, 2384, 3209, 1056, 186,
	3106, 2759, 796, 1479, 1222, 2383, 1363, 2010, 2017, 1383,
	1386, 1046, 1406, 1488, 798, 1704, 1050, 1040, 845, 1135,
	1165, 1052, 2385, 2387, 1638, 1053, 1051, 1046, 1416, 1705,
	1250, 1251, 1703, 1040, 1043, 1044, 600, 1004, 1514, 1411,
	1412, 1037, 1041, 3107, 2014, 1122, 1523, 1613, 1222, 1614,
	1525, 3251, 1615, 1528, 1529, 600, 600, 2975, 600, 3258,
	600, 600, 2974, 600, 600, 600, 600, 600, 600, 1242,
	1243, 1244, 1245, 1247, 1246, 1248, 1249, 1560, 1561, 1606,
	600, 2010, 186, 1566, 1369, 2965, 3042, 1046, 1381, 1083,
	2082, 2083, 2084, 1080, 1226, 1227, 1228, 1229, 1230, 1231,
	1232, 1224, 186, 2848, 2835, 1219, 2836, 1220, 1221, 2847,
	2783, 1494, 1495, 1496, 2398, 600, 1222, 186, 2012, 2782,
	1524, 1694, 1696, 1697, 740, 741, 742, 2772, 1626, 3043,
	1222, 600, 3211, 186, 2657, 2573, 1219, 836, 1220, 1221,
	2561, 2279, 1510, 1605, 3259, 1695, 1381, 1559, 1604, 186,
	1562, 2278, 1564, 1748, 1970, 1581, 186, 1749, 1607, 188,
	189, 190, 1222, 2766, 1591, 186, 186, 186, 186, 186,
	186, 186, 186, 186, 600, 600, 600, 1503, 1571, 1572,
	1219, 1590, 1220, 1221, 1577, 1578, 1563, 1532, 1222, 1533,
	1589, 1535, 1537, 1579, 1573, 1541, 1543, 1545, 1547, 1549,
	1381, 1570, 188, 189, 190, 186, 2262, 3210, 3069, 1593,
	1486, 1521, 1603, 3220, 1381, 1522, 1240, 1241, 1242, 1243,
	1244, 1245, 1247, 1246, 1248, 1249, 1501, 1520, 1520, 1499,
	1513, 1569, 1568, 1500, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1247, 1246, 1248, 1249, 1641, 3057, 1539, 1219, 3068,
	1220, 1221, 1645, 600, 1647, 1648, 1649, 1650, 1633, 1390,
	1222, 1654, 1219, 3046, 1220, 1221, 1735, 1567, 3045, 3044,
	2100, 3218, 1381, 1592, 2970, 1668, 1726, 1730, 1729, 1729,
	2955, 600, 600, 2954, 2897, 1727, 1727, 2895, 1222, 1700,
	2844, 2780, 1639, 1640, 1219, 1629, 1220, 1221, 2765, 1492,
	2628, 1222, 2530, 2564, 2563, 2288, 1644, 1222, 2276, 1391,
	120, 1023, 1022, 1651, 1652, 1653, 1345, 1021, 1222, 1820,
	1219, 1698, 1220, 1221, 1885, 1886, 2032, 2031, 1707, 600,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 2099, 1745, 1708, 1643, 2531, 1875, 1828,
	1857, 1238, 1670, 2371, 1222, 1634, 1602, 186, 1594, 1788,
	1584, 1580, 600, 1576, 1664, 1665, 1666, 1575, 1667, 1574,
	1392, 3151, 1381, 2533, 1239, 1240, 1241, 1242, 1243, 1244,
	1245, 1247, 1246, 1248, 1249, 1178, 186, 2528, 1381, 600,
	3149, 1381, 1219, 1701, 1220, 1221, 92, 2620, 1818, 186,
	1191, 3147, 1381, 600, 2544, 2545, 3000, 93, 186, 2999,
	186, 2529, 186, 186, 600, 2205, 3235, 600, 1846, 1706,
	1219, 2959, 1220, 1221, 1788, 3197, 1381, 2095, 600, 1862,
	2958, 1863, 1828, 1219, 2827, 1220, 1221, 2094, 1928, 1219,
	841, 1220, 1221, 841, 2535, 1238, 1222, 2089, 1830, 2221,
	1219, 2315, 1220, 1221, 2732, 188, 189, 190, 1832, 1833,
	2221, 1819, 1381, 2293, 95, 1821, 1927, 1222, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1247, 1246, 1248, 1249, 96,
	2205, 3134, 735, 600, 95, 1218, 1219, 1829, 1220, 1221,
	1977, 1978, 1979, 2205, 3114, 1981, 1983, 1985, 2734, 96,
	94, 1895, 1868, 87, 1222, 188, 189, 190, 1222, 1986,
	600, 2543, 188, 189, 190, 3102, 600, 1523, 2205, 3110,
	1523, 2229, 1523, 2546, 1937, 1938, 1939, 1940, 2009, 3022,
	1381, 1830, 2732, 1932, 1923, 1933, 1934, 1935, 1936, 811,
	3097, 1381, 1731, 1222, 1856, 2205, 3062, 3073, 1736, 1737,
	2133, 1943, 1944, 1945, 1946, 2205, 1922, 2819, 3059, 1381,
	1999, 1222, 2229, 600, 1905, 188, 189, 190, 600, 1984,
	1890, 1870, 600, 600, 1953, 188, 189, 190, 1219, 1982,
	1220, 1221, 2113, 1888, 1959, 2698, 1926, 3020, 1381, 2485,
	1380, 2753, 1910, 2674, 726, 845, 1909, 2228, 845, 1219,
	2732, 1220, 1221, 1925, 2552, 1831, 1924, 101, 1834, 1835,
	186, 2674, 1381, 2978, 1381, 1222, 1996, 186, 100, 2458,
	99, 1222, 2205, 2966, 186, 186, 1969, 2963, 186, 1773,
	186, 2517, 2532, 2819, 1381, 1911, 1219, 186, 1220, 1221,
	1219, 2076, 1220, 1221, 186, 187, 2205, 2817, 187, 1954,
	2091, 187, 2229, 1867, 1949, 1950, 601, 2126, 187, 1968,
	2110, 1972, 2010, 1381, 2109, 1980, 187, 2737, 1381, 2024,
	1218, 1381, 186, 600, 2010, 1219, 1993, 1220, 1221, 2201,
	1048, 187, 1883, 2003, 1954, 2006, 2004, 2002, 1381, 2007,
	1385, 2008, 1049, 1219, 94, 1220, 1221, 1222, 3017, 1381,
	2126, 1381, 1520, 601, 3003, 1381, 601, 187, 601, 2028,
	2025, 1222, 1847, 2029, 2030, 1222, 1765, 1754, 1755, 1756,
	1757, 1767, 1758, 1759, 1760, 1772, 1768, 1761, 1762, 1769,
	1770, 1771, 1763, 1764, 1766, 2554, 2553, 2067, 2068, 1222,
	2550, 2551, 2070, 1238, 1678, 1222, 1234, 1219, 1235, 1220,
	1221, 2071, 2091, 1219, 1623, 1220, 1221, 1222, 100, 1700,
	1413, 2035, 1236, 1250, 1251, 1233, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1247, 1246, 1248, 1249, 1238, 1031, 1222,
	2706, 1381, 1030, 1222, 2536, 2550, 2549, 3177, 2540, 2229,
	1381, 2060, 1222, 2576, 2703, 1381, 2539, 2086, 2708, 2088,
	1239, 1240, 1241, 1242, 1243, 1244, 1245, 1247, 1246, 1248,
	1249, 1222, 2091, 1381, 2087, 1222, 2076, 2337, 1482, 2318,
	1222, 2622, 2701, 1381, 2311, 2312, 1222, 2091, 2704, 1219,
	2541, 1220, 1221, 2251, 2251, 2537, 2121, 1394, 1222, 2285,
	2538, 2802, 2074, 1219, 1222, 1220, 1221, 1219, 186, 1220,
	1221, 1222, 801, 92, 2011, 1222, 186, 2205, 2204, 1222,
	94, 600, 2676, 1701, 93, 1222, 2085, 600, 1482, 1481,
	2175, 1219, 3117, 1220, 1221, 2655, 1381, 1219, 600, 1220,
	1221, 2189, 2989, 1729, 1427, 1426, 2193, 1388, 2956, 1219,
	1727, 1220, 1221, 1121, 2158, 1381, 2252, 2252, 2141, 1381,
	2909, 2800, 186, 1393, 2103, 186, 2254, 2076, 3230, 2187,
	1381, 1219, 2010, 1220, 1221, 1219, 2797, 1220, 1221, 1381,
	2261, 2672, 2778, 2666, 1219, 2665, 1220, 1221, 2280, 1484,
	87, 37, 1952, 1222, 2663, 2618, 2578, 2990, 2662, 1222,
	2245, 2119, 2174, 1219, 1222, 1220, 1221, 1219, 2173, 1220,
	1221, 2225, 1219, 1222, 1220, 1221, 2574, 2319, 1219, 2206,
	1220, 1221, 1948, 1942, 1941, 1222, 1609, 1515, 600, 1830,
	1219, 1222, 1220, 1221, 186, 1511, 1219, 1480, 1220, 1221,
	113, 186, 1967, 1219, 2284, 1220, 1221, 1219, 1860, 1220,
	1221, 1219, 3228, 1220, 1221, 600, 2202, 1219, 1222, 1220,
	1221, 3204, 600, 2215, 1355, 2177, 1523, 1523, 1829, 1222,
	3083, 600, 3008, 101, 2744, 2745, 2172, 2272, 2274, 2244,
	2310, 2101, 2171, 2198, 100, 2750, 99, 2170, 2333, 2747,
	2570, 2203, 2285, 2218, 2569, 94, 2169, 2334, 2568, 2485,
	186, 186, 186, 186, 186, 2298, 2061, 2287, 2156, 1671,
	2507, 2265, 2290, 2291, 2150, 2508, 2249, 2253, 2505, 2784,
	1959, 186, 186, 2506, 2749, 1219, 2256, 1220, 1221, 2263,
	1555, 1219, 3183, 1220, 1221, 2504, 1219, 186, 1220, 1221,
	2503, 2149, 2266, 3135, 2879, 1219, 2878, 1220, 1221, 2788,
	2277, 1874, 2148, 1389, 1381, 1866, 600, 1219, 2332, 1220,
	1221, 2286, 2738, 1219, 1551, 1220, 1221, 2160, 2161, 1222,
	2785, 2786, 2787, 2295, 2294, 3041, 2463, 2299, 2300, 2301,
	2462, 1556, 1557, 1558, 2888, 2728, 2890, 2331, 1222, 2472,
	1219, 1622, 1220, 1221, 2877, 787, 2789, 2790, 2791, 1503,
	2725, 1219, 2548, 1220, 1221, 187, 2269, 187, 2724, 2395,
	187, 1552, 1553, 1554, 600, 2289, 1729, 1820, 1729, 1820,
	1087, 1729, 1086, 1727, 600, 1727, 1729, 92, 1727, 2391,
	1222, 2330, 2636, 1727, 815, 2320, 2321, 2284, 93, 601,
	601, 601, 816, 2365, 1190, 2373, 2509, 600, 2238, 2239,
	2446, 2354, 2147, 92, 1222, 2325, 2439, 601, 601, 2374,
	94, 121, 186, 2416, 93, 2416, 600, 2441, 2416, 2418,
	1740, 2146, 2357, 2416, 2428, 2429, 2430, 2431, 2421, 2363,
	600, 2730, 2364, 2422, 1741, 1885, 1886, 600, 600, 2375,
	186, 186, 186, 186, 186, 94, 1818, 2392, 1818, 2475,
	2477, 1219, 186, 1220, 1221, 3243, 2446, 186, 2478, 186,
	2566, 186, 2064, 2145, 186, 186, 186, 101, 3156, 2409,
	1219, 2497, 1220, 1221, 3058, 803, 1222, 2985, 100, 2547,
	99, 2423, 2424, 2425, 2426, 2427, 2516, 2144, 2465, 94,
	2491, 2242, 1222, 1871, 2482, 1368, 823, 824, 2053, 2461,
	2562, 2466, 2052, 2051, 2710, 2488, 2445, 2460, 101, 186,
	2488, 2440, 1219, 2442, 1220, 1221, 2080, 99, 2453, 100,
	1222, 99, 600, 3029, 1222, 3028, 3011, 2896, 2457, 1222,
	600, 2894, 2893, 2464, 2886, 186, 1219, 2798, 1220, 1221,
	2467, 2093, 2729, 2727, 2479, 2480, 1222, 2579, 1994, 186,
	2518, 1498, 822, 2519, 804, 2602, 100, 805, 2885, 2143,
	2499, 2500, 2498, 2502, 2718, 2501, 1222, 186, 2221, 2496,
	186, 95, 2510, 101, 2514, 2142, 2520, 2454, 2455, 2456,
	2637, 2559, 2560, 1222, 100, 2868, 96, 3232, 3231, 3232,
	2201, 1633, 1222, 187, 2556, 2405, 2581, 601, 601, 1222,
	2111, 2558, 3231, 2557, 2526, 1382, 1384, 2136, 1219, 3047,
	1220, 1221, 2135, 187, 2610, 1858, 2609, 1407, 1398, 2764,
	1222, 106, 107, 813, 1219, 103, 1220, 1221, 2580, 2134,
	1222, 1959, 601, 2601, 88, 1, 187, 2768, 3166, 568,
	1848, 601, 2613, 600, 1353, 583, 3205, 601, 3162, 2131,
	3163, 2671, 1219, 1595, 1220, 1221, 1219, 1585, 1220, 1221,
	2830, 1219, 1789, 1220, 1221, 2629, 2130, 2986, 2632, 600,
	186, 2634, 2635, 2631, 2582, 2129, 2000, 2639, 1219, 2796,
	1220, 1221, 2127, 1957, 1039, 2692, 1356, 2644, 2645, 2647,
	2646, 2640, 2696, 2648, 146, 2650, 2653, 2652, 1219, 1920,
	1220, 1221, 1921, 2123, 2234, 2237, 2238, 2239, 2235, 3130,
	2236, 2240, 110, 2122, 997, 1219, 109, 1220, 1221, 1042,
	1149, 1995, 2820, 2270, 1219, 1929, 1220, 1221, 186, 1433,
	1431, 1219, 1432, 1220, 1221, 1430, 1435, 1434, 2112, 2677,
	553, 1672, 597, 2241, 184, 1422, 2767, 1399, 2690, 1081,
	603, 558, 1219, 2716, 1220, 1221, 2555, 186, 790, 2711,
	2712, 2033, 1219, 564, 1220, 1221, 1264, 2459, 2257, 842,
	835, 2719, 1859, 2191, 2726, 2493, 186, 2722, 2471, 186,
	186, 186, 2473, 2208, 2476, 2731, 2741, 1379, 1375, 600,
	600, 2469, 3040, 2887, 3115, 2751, 2267, 2748, 1395, 1005,
	2697, 2102, 1376, 187, 1742, 1900, 2863, 2756, 2757, 1693,
	622, 2754, 621, 619, 2803, 2804, 2194, 2755, 2610, 2222,
	2609, 2762, 1225, 2763, 729, 2181, 1408, 1864, 1865, 1378,
	2233, 1377, 2231, 600, 600, 600, 600, 2773, 2774, 2230,
	601, 2824, 2825, 2779, 2062, 2781, 2234, 2237, 2238, 2239,
	2235, 1906, 2236, 2240, 2746, 2742, 2744, 2745, 3158, 601,
	601, 1902, 601, 1898, 601, 601, 2200, 601, 601, 601,
	601, 601, 601, 630, 623, 615, 692, 691, 2761, 2608,
	3143, 2340, 2619, 2342, 601, 2268, 187, 1379, 1375, 2807,
	2615, 1203, 1371, 2811, 2812, 2813, 609, 1010, 2826, 1739,
	2991, 3064, 1376, 2079, 2659, 1370, 187, 1729, 1752, 1729,
	1753, 3071, 2590, 2814, 1727, 2571, 1727, 2316, 1987, 601,
	63, 187, 41, 3035, 186, 3103, 690, 1372, 1373, 1378,
	687, 1377, 2865, 2843, 2866, 601, 2867, 187, 2435, 2839,
	2436, 3086, 3087, 686, 2837, 3088, 1780, 604, 600, 3179,
	600, 2882, 1194, 187, 2416, 829, 2416, 32, 2851, 31,
	187, 30, 29, 2861, 28, 23, 2852, 22, 21, 187,
	187, 187, 187, 187, 187, 187, 187, 187, 601, 601,
	601, 20, 19, 25, 18, 37, 2911, 17, 1729, 16,
	2593, 3200, 3242, 115, 2905, 1727, 50, 47, 45, 2907,
	2491, 2892, 2891, 2883, 2491, 2903, 2901, 123, 122, 187,
	48, 600, 2899, 44, 2488, 1124, 42, 27, 26, 15,
	14, 13, 12, 11, 186, 10, 9, 600, 5, 4,
	35, 34, 33, 1197, 24, 2, 2964, 2303, 1989, 0,
	600, 0, 2915, 2912, 2913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 2988, 3005, 3006, 2962,
	0, 0, 2968, 2961, 0, 1746, 2960, 2976, 2981, 1747,
	2980, 0, 0, 0, 0, 601, 601, 600, 0, 0,
	0, 600, 600, 3009, 0, 1729, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 2971, 2972, 2973, 0, 0,
	0, 182, 0, 0, 0, 0, 0, 1815, 0, 0,
	600, 3010, 0, 0, 0, 3012, 0, 0, 0, 3015,
	0, 0, 0, 601, 0, 121, 0, 0, 0, 0,
	3033, 3030, 3031, 0, 0, 3051, 0, 0, 164, 0,
	1382, 1845, 3032, 0, 0, 0, 0, 0, 3048, 0,
	0, 187, 0, 3039, 0, 0, 601, 600, 2491, 0,
	3054, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3050, 186, 0, 1869, 0, 0, 0, 0, 0,
	187, 2264, 3056, 601, 0, 0, 0, 0, 0, 0,
	600, 186, 0, 187, 0, 0, 161, 601, 162, 0,
	0, 0, 187, 0, 187, 0, 187, 187, 601, 0,
	0, 601, 0, 0, 0, 3075, 0, 0, 181, 0,
	3070, 0, 601, 3063, 37, 3067, 0, 1125, 0, 1131,
	0, 0, 1133, 0, 0, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 3072, 0, 0, 0, 0, 0,
	600, 0, 0, 3092, 0, 0, 3093, 0, 0, 0,
	0, 0, 0, 0, 827, 0, 0, 0, 0, 0,
	3101, 0, 0, 0, 600, 600, 1971, 601, 3091, 0,
	3108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3118, 0, 0, 0, 0, 37, 600, 3145,
	2988, 3131, 3129, 0, 601, 3121, 3126, 3123, 3144, 3122,
	601, 3138, 186, 600, 3120, 3125, 3124, 3116, 3113, 2488,
	0, 0, 0, 0, 0, 0, 3154, 0, 0, 165,
	0, 0, 613, 0, 0, 3175, 3165, 3170, 171, 3157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3185, 3145, 3182, 0, 0, 0, 600, 601, 0, 0,
	3144, 0, 601, 0, 821, 0, 601, 601, 0, 0,
	0, 3194, 0, 0, 3199, 0, 0, 0, 600, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 600, 3214, 600, 0,
	0, 0, 0, 3212, 187, 0, 0, 0, 3225, 3229,
	3223, 187, 3222, 0, 3227, 0, 0, 0, 187, 187,
	0, 0, 187, 3226, 187, 1729, 3238, 3145, 0, 1450,
	0, 187, 1727, 3244, 0, 0, 3144, 0, 187, 3252,
	3250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 0, 3262, 3263, 3006, 3261, 187, 601, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3260,
	0, 1729, 0, 0, 0, 0, 0, 0, 1727, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2092, 0, 0, 0, 2096, 2097, 2098, 0,
	0, 0, 0, 0, 0, 0, 2106, 0, 0, 2107,
	2108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 78, 39, 40, 80, 2114, 2115, 2116, 2117,
	2118, 1438, 2120, 0, 0, 0, 0, 0, 2124, 0,
	2125, 0, 84, 0, 2128, 0, 43, 69, 70, 0,
	67, 71, 2137, 2138, 2139, 2140, 0, 0, 0, 68,
	0, 0, 0, 0, 157, 2151, 0, 2154, 2155, 0,
	0, 169, 0, 0, 2157, 2159, 0, 0, 0, 0,
	0, 0, 2164, 2165, 2166, 2167, 2168, 0, 56, 0,
	0, 0, 0, 0, 0, 1869, 0, 2176, 0, 0,
	87, 0, 187, 0, 0, 0, 0, 2188, 0, 0,
	187, 0, 0, 177, 1451, 601, 0, 0, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 1428, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 158, 163, 160, 166, 167,
	168, 170, 172, 173, 174, 175, 187, 0, 0, 187,
	0, 176, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 1464, 1467, 1468, 1469, 1470, 1471, 1472, 0,
	1473, 1474, 1475, 1476, 1477, 1452, 1453, 1454, 1455, 1436,
	1437, 1465, 0, 1439, 0, 1440, 1441, 1442, 1443, 1444,
	1445, 1446, 1447, 1448, 0, 0, 1449, 1456, 1457, 1458,
	1459, 1460, 1461, 1462, 1463, 0, 0, 0, 1565, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 187, 0,
	0, 0, 0, 0, 0, 187, 46, 49, 52, 51,
	54, 0, 66, 0, 0, 75, 72, 0, 0, 601,
	0, 0, 0, 1610, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 0, 55, 83,
	82, 0, 0, 64, 65, 53, 0, 0, 0, 0,
	0, 73, 74, 0, 0, 1642, 0, 0, 0, 0,
	0, 0, 1646, 0, 187, 187, 187, 187, 187, 0,
	0, 0, 0, 1657, 1658, 1659, 1660, 1661, 1662, 1663,
	0, 0, 0, 0, 0, 187, 187, 0, 0, 0,
	0, 57, 58, 0, 59, 60, 61, 62, 0, 0,
	0, 187, 1466, 0, 0, 0, 0, 0, 0, 1223,
	0, 1681, 0, 0, 0, 0, 0, 0, 0, 0,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2402, 0, 0, 0, 1271, 0, 0,
	0, 0, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2417, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 164,
	0, 2443, 2444, 0, 0, 0, 0, 0, 601, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 0, 0, 0, 187, 0, 0, 0,
	601, 613, 0, 0, 0, 0, 0, 161, 0, 162,
	0, 0, 0, 0, 601, 0, 0, 2494, 0, 0,
	0, 601, 601, 0, 187, 187, 187, 187, 187, 181,
	0, 86, 0, 0, 2512, 2513, 187, 0, 0, 0,
	0, 187, 0, 187, 0, 187, 0, 0, 187, 187,
	187, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1887, 0, 0, 0, 0,
	0, 0, 0, 0, 1891, 0, 1894, 1397, 0, 1681,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 601, 0, 0, 0, 0, 187,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 0, 0, 0, 0,
	165, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 187, 0, 0, 187, 0, 0, 0, 0, 0,
	0, 2638, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2654, 2656, 2658, 0, 0, 0, 0,
	0, 0, 2664, 0, 0, 0, 0, 2668, 2669, 2670,
	0, 0, 0, 0, 2673, 0, 0, 0, 0, 0,
	2675, 0, 0, 2679, 2680, 2681, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 0, 0, 0, 0, 601, 0, 0,
	0, 2695, 0, 0, 0, 0, 2699, 0, 2700, 2702,
	0, 2705, 2707, 0, 0, 0, 0, 0, 2713, 0,
	0, 0, 0, 601, 187, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 2735, 2736, 0, 1681, 2740, 0, 0,
	0, 0, 0, 2044, 0, 0, 0, 0, 0, 0,
	2058, 2059, 0, 0, 2063, 2752, 0, 0, 0, 0,
	0, 0, 187, 2066, 0, 0, 0, 0, 0, 0,
	2069, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 0, 0, 0, 0, 0, 0, 2072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 0, 187, 187, 187, 0, 0, 0, 0,
	0, 0, 0, 601, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2818, 0, 0, 0, 0, 0,
	0, 1635, 0, 0, 0, 0, 0, 0, 0, 736,
	79, 0, 0, 0, 0, 157, 0, 601, 601, 601,
	601, 0, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2840, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2849, 0,
	0, 0, 2850, 0, 177, 0, 0, 0, 2854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2862, 0, 0, 1688, 1689, 1690, 1691, 800, 2869, 79,
	0, 0, 0, 0, 0, 0, 158, 163, 160, 166,
	167, 168, 170, 172, 173, 174, 175, 800, 187, 0,
	0, 0, 176, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 1009, 0, 0, 1733, 1734, 0, 0,
	0, 0, 601, 1738, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1774, 1775,
	1776, 1777, 1778, 1779, 1781, 1785, 1786, 613, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803,
	1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813,
	1814, 2248, 1816, 0, 1822, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 601, 0, 0, 0, 1837,
	1838, 1839, 1840, 1841, 1842, 2977, 0, 0, 187, 0,
	0, 601, 0, 0, 2984, 0, 613, 0, 0, 0,
	0, 0, 613, 0, 601, 0, 0, 0, 0, 0,
	0, 0, 2994, 2995, 2996, 0, 2997, 2998, 0, 0,
	0, 0, 3001, 0, 3002, 0, 3004, 3007, 0, 0,
	2296, 0, 0, 0, 0, 0, 0, 0, 1881, 1882,
	0, 0, 3016, 3018, 3019, 3021, 3023, 3025, 0, 0,
	0, 601, 0, 0, 0, 601, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1917, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 601, 3055, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2345, 2346, 2347, 2348,
	2349, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1681, 2358, 0,
	0, 0, 0, 0, 0, 1955, 0, 0, 0, 0,
	0, 601, 0, 2366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3077, 0, 601, 187, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3082, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3098, 0, 0, 0, 0,
	0, 3099, 3100, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3111, 601, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 601,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3146, 3148, 3150, 0, 0,
	0, 0, 601, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 601, 0, 0,
	3178, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3184,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3196,
	601, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 601, 0, 0, 2567, 0, 0, 0, 0,
	0, 0, 3217, 3219, 3221, 0, 0, 0, 0, 0,
	601, 0, 601, 0, 1185, 1185, 1185, 0, 0, 0,
	3198, 2605, 0, 0, 0, 0, 0, 0, 0, 2105,
	1450, 0, 0, 3241, 79, 2614, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3254, 3255, 0, 2630, 0, 0, 2633, 0, 0, 0,
	0, 800, 1260, 1261, 1262, 1271, 1265, 0, 1266, 1267,
	1268, 1269, 0, 1272, 1274, 1274, 0, 1274, 1278, 1278,
	1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289,
	1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319,
	1320, 0, 0, 1321, 0, 1323, 1324, 1325, 1326, 1327,
	0, 0, 0, 0, 0, 1278, 1278, 1278, 1278, 1278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1334,
	1335, 1336, 1337, 1338, 1339, 182, 2715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2309, 1351, 1397, 0,
	0, 0, 1438, 0, 0, 0, 0, 0, 0, 121,
	0, 143, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1357, 0, 0, 154, 0, 0, 800, 0, 0, 142,
	800, 0, 0, 0, 0, 0, 800, 0, 0, 0,
	0, 0, 0, 2777, 0, 0, 0, 0, 0, 0,
	161, 0, 162, 0, 0, 1451, 0, 0, 0, 0,
	0, 0, 2792, 0, 0, 2793, 2794, 2795, 1506, 1507,
	153, 152, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 693, 1464, 1467, 1468, 1469, 1470, 1471, 1472,
	0, 1473, 1474, 1475, 1476, 1477, 1452, 1453, 1454, 1455,
	1436, 1437, 1465, 0, 1439, 0, 1440, 1441, 1442, 1443,
	1444, 1445, 1446, 1447, 1448, 0, 0, 1449, 1456, 1457,
	1458, 1459, 1460, 1461, 1462, 1463, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2370, 0, 0, 0,
	0, 147, 1508, 150, 599, 1505, 0, 148, 149, 182,
	0, 0, 0, 165, 2393, 2394, 0, 0, 0, 2397,
	1502, 0, 171, 0, 2399, 2400, 2401, 0, 0, 0,
	0, 0, 0, 121, 0, 143, 2406, 2407, 2408, 0,
	0, 1792, 2410, 0, 2411, 2412, 164, 0, 0, 2419,
	2420, 843, 0, 0, 1001, 0, 1008, 1792, 1792, 1792,
	1792, 1792, 613, 613, 613, 613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 154, 0, 0,
	0, 0, 0, 142, 2447, 2448, 2449, 2450, 2451, 2452,
	738, 739, 0, 0, 0, 0, 1728, 0, 0, 0,
	0, 0, 0, 1466, 161, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1506, 1507, 153, 152, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2483, 0, 0, 156,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2515, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 0, 0, 151, 0, 0, 0,
	0, 0, 2577, 0, 0, 147, 1508, 150, 0, 1505,
	0, 148, 149, 1185, 1185, 1185, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 0, 0, 0, 144, 0, 0, 145, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2661, 0, 0, 0, 3076, 0, 0,
	2667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 158,
	163, 160, 166, 167, 168, 170, 172, 173, 174, 175,
	0, 0, 0, 0, 0, 176, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1901, 0, 0, 0, 0, 0, 0, 0, 144,
	0, 0, 145, 0, 0, 0, 0, 0, 0, 2799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2917, 2919, 2918, 2928, 2929, 2930, 2931, 2932, 2933, 2934,
	652, 0, 157, 0, 0, 0, 0, 0, 0, 169,
	0, 0, 2823, 0, 0, 0, 0, 843, 843, 843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1009, 0, 0, 1193, 1195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	2841, 0, 2842, 0, 0, 1009, 0, 2845, 2846, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2853, 0, 158, 163, 160, 166, 167, 168, 170,
	172, 173, 174, 175, 0, 0, 0, 0, 0, 176,
	178, 179, 180, 2870, 0, 0, 2871, 0, 2872, 2873,
	0, 2874, 0, 2875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2900, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2908,
	0, 0, 2910, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2914, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2957, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1359, 1360, 0, 0, 0,
	0, 0, 2923, 2924, 0, 0, 0, 0, 0, 0,
	0, 0, 2081, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 843,
	0, 0, 0, 0, 0, 1423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3038, 613, 705, 0, 647, 709, 649, 706, 707, 0,
	645, 648, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 650,
	651, 2916, 2920, 2921, 2922, 2925, 2926, 2927, 2935, 2937,
	675, 2936, 2938, 2939, 2940, 2943, 2944, 2945, 2946, 2941,
	2942, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	710, 0, 711, 0, 613, 715, 0, 0, 2162, 717,
	716, 0, 718, 689, 688, 0, 0, 712, 713, 0,
	714, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2186, 0, 0, 0, 0, 3081, 0,
	0, 0, 0, 0, 0, 0, 613, 0, 0, 0,
	0, 800, 3094, 0, 0, 3095, 0, 3096, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2226, 2227, 0, 0, 0, 0, 0, 0,
	0, 2246, 0, 2247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1001, 0,
	613, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1346, 0, 0, 0, 0, 0, 1531, 1531, 0,
	1531, 0, 1531, 1531, 0, 1540, 1531, 1531, 1531, 1531,
	1531, 0, 0, 0, 0, 0, 0, 0, 1346, 0,
	0, 1346, 1001, 1346, 0, 0, 0, 0, 0, 0,
	0, 0, 3176, 0, 0, 0, 0, 0, 0, 0,
	694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1608, 0, 0,
	0, 0, 3191, 0, 3192, 0, 3193, 0, 0, 0,
	0, 2323, 0, 1630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 185, 0, 0, 554, 0, 0, 595, 0, 0,
	0, 0, 0, 0, 554, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 843, 843, 843, 0,
	0, 0, 0, 0, 0, 0, 0, 810, 0, 0,
	0, 0, 0, 3239, 0, 3240, 0, 0, 0, 0,
	0, 0, 0, 828, 0, 828, 0, 0, 0, 0,
	0, 0, 0, 554, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2432, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 1750, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1901, 0, 0, 0, 843, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2492, 0, 79, 0, 0, 1901,
	1901, 1901, 1901, 1901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1861, 0, 2246, 0, 0, 0,
	1901, 0, 0, 1901, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1403, 0, 0, 843, 0,
	0, 0, 0, 0, 0, 0, 843, 0, 0, 843,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1001, 87, 0, 0, 0, 0, 2599, 730, 738, 739,
	740, 741, 742, 731, 733, 0, 2607, 0, 732, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 743, 744, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1008, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2641, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2611, 2612,
	0, 0, 1001, 0, 0, 0, 0, 0, 1008, 0,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 0, 0, 0, 1001, 0, 0, 0, 0,
	1723, 0, 0, 0, 1723, 1723, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 730, 738, 739, 740, 741, 742, 731,
	733, 0, 0, 0, 732, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 735, 743, 744,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1901, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2760, 554, 0, 554, 0, 0, 554, 0, 0, 0,
	0, 0, 0, 0, 2611, 2612, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2073, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 705, 0, 0, 709, 0, 706, 707, 0,
	0, 0, 708, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2876,
	0, 2880, 2881, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 843, 0, 0, 0,
	0, 0, 0, 0, 2492, 0, 79, 0, 2492, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 2195,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2210, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 810,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2969, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2292, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 0,
	0, 0, 0, 0, 2317, 0, 0, 0, 0, 0,
	0, 0, 0, 2322, 0, 0, 0, 0, 0, 0,
	0, 0, 2492, 0, 0, 0, 0, 0, 0, 1346,
	0, 0, 0, 0, 0, 0, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1334, 1335,
	1336, 1337, 1338, 1339, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1723, 554,
	0, 0, 0, 0, 0, 79, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1346, 0, 1346, 0, 0, 1346,
	0, 0, 0, 0, 1346, 0, 0, 0, 0, 1347,
	0, 0, 0, 0, 0, 0, 2433, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 843, 0, 0, 0,
	0, 0, 0, 3112, 0, 0, 1347, 0, 79, 1347,
	0, 1347, 554, 0, 0, 0, 0, 0, 0, 1531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 2468, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	0, 0, 843, 0, 0, 0, 1346, 0, 0, 2495,
	1531, 1346, 0, 1632, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 1655, 1656, 554, 554, 554,
	554, 554, 554, 554, 0, 0, 3195, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2190,
	0, 0, 738, 739, 0, 0, 0, 0, 1728, 0,
	0, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 1001, 0, 0, 1346, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 828, 0, 0, 0, 0, 0, 828, 828, 0,
	0, 0, 0, 1347, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 0, 0, 0, 0,
	0, 0, 828, 1632, 828, 828, 828, 828, 828, 0,
	0, 0, 0, 0, 0, 2691, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1582, 0, 0,
	0, 2468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 810, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 1632, 0, 554, 0,
	554, 0, 554, 1908, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2831, 2832, 2833, 2834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 1346, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	0, 0, 0, 0, 554, 554, 0, 0, 554, 0,
	2065, 0, 0, 0, 0, 1346, 0, 554, 0, 0,
	2904, 0, 2906, 0, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2979,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 843, 0, 0, 0, 0, 0, 0, 0,
	828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3026,
	0, 0, 0, 3026, 3026, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 828, 828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1632, 0, 0, 0, 554, 0,
	0, 0, 0, 0, 0, 0, 1582, 0, 0, 1873,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3105, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1346, 0, 3109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 554, 0, 843, 843, 0, 0,
	0, 2302, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3152, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1347, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 554, 554, 554, 554, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3105, 0,
	0, 554, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	1873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 828, 0, 0, 0, 0, 0, 2691, 0,
	3160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1347, 0, 1347, 0, 0, 1347, 0, 0,
	0, 0, 1347, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 554, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1347, 0, 0, 0, 0, 1347,
	554, 554, 554, 554, 554, 0, 0, 0, 0, 0,
	0, 0, 2511, 0, 0, 0, 0, 554, 0, 1582,
	0, 554, 0, 0, 554, 2521, 1632, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 554, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 554,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	554, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 554, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 554, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 554, 0, 0, 554,
	554, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 1347, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1347, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1582, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1582, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 554, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1347, 0,
	0, 365, 0, 0, 979, 964, 471, 0, 907, 982,
	876, 895, 992, 898, 901, 943, 855, 921, 383, 892,
	848, 880, 850, 887, 851, 878, 909, 253, 875, 966,
	925, 981, 338, 250, 857, 881, 397, 897, 197, 945,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 988, 342, 931, 0, 455, 368,
	0, 0, 1582, 911, 970, 919, 957, 906, 944, 865,
	930, 983, 893, 940, 984, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	3132, 0, 3133, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 889, 937, 978, 890, 939, 248, 297, 255,
	247, 475, 989, 969, 854, 918, 977, 0, 0, 216,
	980, 913, 0, 942, 0, 995, 849, 933, 0, 852,
	856, 991, 973, 884, 258, 0, 0, 0, 0, 0,
	0, 0, 910, 920, 954, 958, 904, 0, 0, 0,
	0, 0, 0, 0, 882, 0, 929, 0, 0, 0,
	861, 853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 908, 0, 0, 0, 0, 864,
	0, 883, 955, 0, 847, 280, 858, 369, 240, 0,
	962, 972, 905, 512, 976, 903, 902, 949, 862, 968,
	896, 337, 860, 306, 192, 212, 0, 894, 379, 422,
	432, 967, 879, 888, 238, 886, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 928, 947, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 1187, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 874, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 963,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 952, 994, 392,
	431, 227, 496, 454, 869, 873, 867, 934, 868, 923,
	924, 870, 985, 986, 987, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 956, 863, 0, 871, 872, 0,
	965, 974, 975, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	927, 191, 208, 340, 990, 415, 271, 527, 506, 501,
	198, 210, 866, 245, 877, 885, 0, 891, 899, 900,
	912, 914, 915, 916, 917, 935, 936, 938, 946, 948,
	951, 953, 960, 971, 993, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 926, 932, 351, 264, 285, 296, 941,
	505, 460, 214, 427, 273, 236, 959, 961, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 922, 950, 347, 472, 473, 292, 365, 0,
	0, 979, 964, 471, 0, 907, 982, 876, 895, 992,
	898, 901, 943, 855, 921, 383, 892, 848, 880, 850,
	887, 851, 878, 909, 253, 875, 966, 925, 981, 338,
	250, 857, 881, 397, 897, 197, 945, 445, 237, 348,
	345, 478, 265, 256, 252, 235, 293, 355, 395, 465,
	389, 988, 342, 931, 0, 455, 368, 0, 0, 0,
	911, 970, 919, 957, 906, 944, 865, 930, 983, 893,
	940, 984, 299, 234, 301, 196, 380, 456, 269, 0,
	0, 0, 0, 188, 189, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 225, 0, 232, 323,
	332, 331, 312, 313, 315, 317, 322, 329, 335, 889,
	937, 978, 890, 939, 248, 297, 255, 247, 475, 989,
	969, 854, 918, 977, 0, 0, 216, 980, 913, 0,
	942, 0, 995, 849, 933, 0, 852, 856, 991, 973,
	884, 258, 0, 0, 0, 0, 0, 0, 0, 910,
	920, 954, 958, 904, 0, 0, 0, 0, 0, 2522,
	0, 882, 0, 929, 0, 0, 0, 861, 853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 908, 0, 0, 0, 0, 864, 0, 883, 955,
	0, 847, 280, 858, 369, 240, 0, 962, 972, 905,
	512, 976, 903, 902, 949, 862, 968, 896, 337, 860,
	306, 192, 212, 0, 894, 379, 422, 432, 967, 879,
	888, 238, 886, 430, 393, 494, 220, 267, 419, 399,
	428, 406, 270, 928, 947, 429, 343, 480, 413, 491,
	513, 514, 246, 373, 503, 469, 509, 526, 213, 243,
	387, 462, 497, 452, 366, 476, 477, 305, 451, 278,
	195, 341, 519, 211, 438, 229, 218, 482, 500, 272,
	417, 203, 464, 489, 226, 442, 0, 0, 528, 205,
	487, 461, 362, 302, 303, 204, 0, 418, 251, 276,
	241, 382, 484, 485, 239, 529, 215, 508, 207, 1187,
	507, 375, 479, 488, 363, 353, 206, 486, 361, 352,
	308, 327, 328, 263, 287, 411, 346, 412, 288, 371,
	370, 372, 199, 498, 0, 200, 0, 457, 499, 530,
	221, 222, 224, 874, 262, 266, 274, 277, 283, 284,
	291, 339, 386, 410, 408, 414, 963, 474, 492, 504,
	511, 517, 518, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 952, 994, 392, 431, 227, 496,
	454, 869, 873, 867, 934, 868, 923, 924, 870, 985,
	986, 987, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 956, 863, 0, 871, 872, 0, 965, 974, 975,
	549, 354, 444, 493, 309, 321, 324, 314, 333, 0,
	334, 310, 311, 316, 318, 319, 320, 325, 326, 330,
	336, 423, 424, 425, 426, 275, 502, 927, 191, 208,
	340, 990, 415, 271, 527, 506, 501, 198, 210, 866,
	245, 877, 885, 0, 891, 899, 900, 912, 914, 915,
	916, 917, 935, 936, 938, 946, 948, 951, 953, 960,
	971, 993, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 376, 377, 378, 381, 384,
	385, 388, 390, 391, 394, 398, 402, 403, 404, 405,
	407, 409, 416, 421, 433, 434, 435, 436, 437, 440,
	441, 446, 447, 448, 449, 450, 458, 459, 463, 481,
	483, 495, 510, 515, 439, 282, 490, 516, 0, 349,
	926, 932, 351, 264, 285, 296, 941, 505, 460, 214,
	427, 273, 236, 959, 961, 202, 233, 217, 242, 257,
	260, 300, 360, 367, 396, 401, 279, 254, 231, 420,
	228, 443, 466, 467, 468, 470, 364, 249, 400, 922,
	950, 347, 472, 473, 292, 365, 0, 0, 979, 964,
	471, 0, 907, 982, 876, 895, 992, 898, 901, 943,
	855, 921, 383, 892, 848, 880, 850, 887, 851, 878,
	909, 253, 875, 966, 925, 981, 338, 250, 857, 881,
	397, 897, 197, 945, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 988, 342,
	931, 0, 455, 368, 0, 0, 0, 911, 970, 919,
	957, 906, 944, 865, 930, 983, 893, 940, 984, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 889, 937, 978, 890,
	939, 248, 297, 255, 247, 475, 989, 969, 854, 918,
	977, 0, 0, 216, 980, 913, 0, 942, 0, 995,
	849, 933, 0, 852, 856, 991, 973, 884, 258, 0,
	0, 0, 0, 0, 0, 0, 910, 920, 954, 958,
	904, 0, 0, 0, 0, 0, 2481, 0, 882, 0,
	929, 0, 0, 0, 861, 853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 908, 0,
	0, 0, 0, 864, 0, 883, 955, 0, 847, 280,
	858, 369, 240, 0, 962, 972, 905, 512, 976, 903,
	902, 949, 862, 968, 896, 337, 860, 306, 192, 212,
	0, 894, 379, 422, 432, 967, 879, 888, 238, 886,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	928, 947, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 1187, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	874, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 963, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 952, 994, 392, 431, 227, 496, 454, 869, 873,
	867, 934, 868, 923, 924, 870, 985, 986, 987, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 956, 863,
	0, 871, 872, 0, 965, 974, 975, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 927, 191, 208, 340, 990, 415,
	271, 527, 506, 501, 198, 210, 866, 245, 877, 885,
	0, 891, 899, 900, 912, 914, 915, 916, 917, 935,
	936, 938, 946, 948, 951, 953, 960, 971, 993, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 926, 932, 351,
	264, 285, 296, 941, 505, 460, 214, 427, 273, 236,
	959, 961, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 922, 950, 347, 472,
	473, 292, 365, 0, 0, 979, 964, 471, 0, 907,
	982, 876, 895, 992, 898, 901, 943, 855, 921, 383,
	892, 848, 880, 850, 887, 851, 878, 909, 253, 875,
	966, 925, 981, 338, 250, 857, 881, 397, 897, 197,
	945, 445, 237, 348, 345, 478, 265, 256, 252, 235,
	293, 355, 395, 465, 389, 988, 342, 931, 0, 455,
	368, 0, 0, 0, 911, 970, 919, 957, 906, 944,
	865, 930, 983, 893, 940, 984, 299, 234, 301, 196,
	380, 456, 269, 0, 0, 0, 0, 188, 189, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	225, 0, 232, 323, 332, 331, 312, 313, 315, 317,
	322, 329, 335, 889, 937, 978, 890, 939, 248, 297,
	255, 247, 475, 989, 969, 854, 918, 977, 0, 0,
	216, 980, 913, 0, 942, 0, 995, 849, 933, 0,
	852, 856, 991, 973, 884, 258, 0, 0, 0, 0,
	0, 0, 0, 910, 920, 954, 958, 904, 0, 0,
	0, 0, 0, 1889, 0, 882, 0, 929, 0, 0,
	0, 861, 853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 908, 0, 0, 0, 0,
	864, 0, 883, 955, 0, 847, 280, 858, 369, 240,
	0, 962, 972, 905, 512, 976, 903, 902, 949, 862,
	968, 896, 337, 860, 306, 192, 212, 0, 894, 379,
	422, 432, 967, 879, 888, 238, 886, 430, 393, 494,
	220, 267, 419, 399, 428, 406, 270, 928, 947, 429,
	343, 480, 413, 491, 513, 514, 246, 373, 503, 469,
	509, 526, 213, 243, 387, 462, 497, 452, 366, 476,
	477, 305, 451, 278, 195, 341, 519, 211, 438, 229,
	218, 482, 500, 272, 417, 203, 464, 489, 226, 442,
	0, 0, 528, 205, 487, 461, 362, 302, 303, 204,
	0, 418, 251, 276, 241, 382, 484, 485, 239, 529,
	215, 508, 207, 1187, 507, 375, 479, 488, 363, 353,
	206, 486, 361, 352, 308, 327, 328, 263, 287, 411,
	346, 412, 288, 371, 370, 372, 199, 498, 0, 200,
	0, 457, 499, 530, 221, 222, 224, 874, 262, 266,
	274, 277, 283, 284, 291, 339, 386, 410, 408, 414,
	963, 474, 492, 504, 511, 517, 518, 520, 521, 522,
	523, 525, 524, 374, 290, 453, 307, 344, 952, 994,
	392, 431, 227, 496, 454, 869, 873, 867, 934, 868,
	923, 924, 870, 985, 986, 987, 531, 532, 533, 534,
	535, 536, 537, 538, 539, 540, 541, 542, 543, 544,
	545, 546, 547, 548, 0, 956, 863, 0, 871, 872,
	0, 965, 974, 975, 549, 354, 444, 493, 309, 321,
	324, 314, 333, 0, 334, 310, 311, 316, 318, 319,
	320, 325, 326, 330, 336, 423, 424, 425, 426, 275,
	502, 927, 191, 208, 340, 990, 415, 271, 527, 506,
	501, 198, 210, 866, 245, 877, 885, 0, 891, 899,
	900, 912, 914, 915, 916, 917, 935, 936, 938, 946,
	948, 951, 953, 960, 971, 993, 193, 194, 201, 209,
	219, 223, 230, 244, 259, 261, 268, 281, 286, 289,
	294, 295, 298, 304, 350, 356, 357, 358, 359, 376,
	377, 378, 381, 384, 385, 388, 390, 391, 394, 398,
	402, 403, 404, 405, 407, 409, 416, 421, 433, 434,
	435, 436, 437, 440, 441, 446, 447, 448, 449, 450,
	458, 459, 463, 481, 483, 495, 510, 515, 439, 282,
	490, 516, 0, 349, 926, 932, 351, 264, 285, 296,
	941, 505, 460, 214, 427, 273, 236, 959, 961, 202,
	233, 217, 242, 257, 260, 300, 360, 367, 396, 401,
	279, 254, 231, 420, 228, 443, 466, 467, 468, 470,
	364, 249, 400, 922, 950, 347, 472, 473, 292, 365,
	0, 0, 979, 964, 471, 0, 907, 982, 876, 895,
	992, 898, 901, 943, 855, 921, 383, 892, 848, 880,
	850, 887, 851, 878, 909, 253, 875, 966, 925, 981,
	338, 250, 857, 881, 397, 897, 197, 945, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 988, 342, 931, 0, 455, 368, 0, 0,
	0, 911, 970, 919, 957, 906, 944, 865, 930, 983,
	893, 940, 984, 299, 234, 301, 196, 380, 456, 269,
	0, 87, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	889, 937, 978, 890, 939, 248, 297, 255, 247, 475,
	989, 969, 854, 918, 977, 0, 0, 216, 980, 913,
	0, 942, 0, 995, 849, 933, 0, 852, 856, 991,
	973, 884, 258, 0, 0, 0, 0, 0, 0, 0,
	910, 920, 954, 958, 904, 0, 0, 0, 0, 0,
	0, 0, 882, 0, 929, 0, 0, 0, 861, 853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 908, 0, 0, 0, 0, 864, 0, 883,
	955, 0, 847, 280, 858, 369, 240, 0, 962, 972,
	905, 512, 976, 903, 902, 949, 862, 968, 896, 337,
	860, 306, 192, 212, 0, 894, 379, 422, 432, 967,
	879, 888, 238, 886, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 928, 947, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	1187, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 874, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 963, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 952, 994, 392, 431, 227,
	496, 454, 869, 873, 867, 934, 868, 923, 924, 870,
	985, 986, 987, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 956, 863, 0, 871, 872, 0, 965, 974,
	975, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 927, 191,
	208, 340, 990, 415, 271, 527, 506, 501, 198, 210,
	866, 245, 877, 885, 0, 891, 899, 900, 912, 914,
	915, 916, 917, 935, 936, 938, 946, 948, 951, 953,
	960, 971, 993, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 926, 932, 351, 264, 285, 296, 941, 505, 460,
	214, 427, 273, 236, 959, 961, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	922, 950, 347, 472, 473, 292, 365, 0, 0, 979,
	964, 471, 0, 907, 982, 876, 895, 992, 898, 901,
	943, 855, 921, 383, 892, 848, 880, 850, 887, 851,
	878, 909, 253, 875, 966, 925, 981, 338, 250, 857,
	881, 397, 897, 197, 945, 445, 237, 348, 345, 478,
	265, 256, 252, 235, 293, 355, 395, 465, 389, 988,
	342, 931, 0, 455, 368, 0, 0, 0, 911, 970,
	919, 957, 906, 944, 865, 930, 983, 893, 940, 984,
	299, 234, 301, 196, 380, 456, 269, 0, 0, 0,
	0, 188, 189, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 225, 0, 232, 323, 332, 331,
	312, 313, 315, 317, 322, 329, 335, 889, 937, 978,
	890, 939, 248, 297, 255, 247, 475, 989, 969, 854,
	918, 977, 0, 0, 216, 980, 913, 0, 942, 0,
	995, 849, 933, 0, 852, 856, 991, 973, 884, 258,
	0, 0, 0, 0, 0, 0, 0, 910, 920, 954,
	958, 904, 0, 0, 0, 0, 0, 0, 0, 882,
	0, 929, 0, 0, 0, 861, 853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 908,
	0, 0, 0, 0, 864, 0, 883, 955, 0, 847,
	280, 858, 369, 240, 0, 962, 972, 905, 512, 976,
	903, 902, 949, 862, 968, 896, 337, 860, 306, 192,
	212, 0, 894, 379, 422, 432, 967, 879, 888, 238,
	886, 430, 393, 494, 220, 267, 419, 399, 428, 406,
	270, 928, 947, 429, 343, 480, 413, 491, 513, 514,
	246, 373, 503, 469, 509, 526, 213, 243, 387, 462,
	497, 452, 366, 476, 477, 305, 451, 278, 195, 341,
	519, 211, 438, 229, 218, 482, 500, 272, 417, 203,
	464, 489, 226, 442, 0, 0, 528, 205, 487, 461,
	362, 302, 303, 204, 0, 418, 251, 276, 241, 382,
	484, 485, 239, 529, 215, 508, 207, 1187, 507, 375,
	479, 488, 363, 353, 206, 486, 361, 352, 308, 327,
	328, 263, 287, 411, 346, 412, 288, 371, 370, 372,
	199, 498, 0, 200, 0, 457, 499, 530, 221, 222,
	224, 874, 262, 266, 274, 277, 283, 284, 291, 339,
	386, 410, 408, 414, 963, 474, 492, 504, 511, 517,
	518, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 952, 994, 392, 431, 227, 496, 454, 869,
	873, 867, 934, 868, 923, 924, 870, 985, 986, 987,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 956,
	863, 0, 871, 872, 0, 965, 974, 975, 549, 354,
	444, 493, 309, 321, 324, 314, 333, 0, 334, 310,
	311, 316, 318, 319, 320, 325, 326, 330, 336, 423,
	424, 425, 426, 275, 502, 927, 191, 208, 340, 990,
	415, 271, 527, 506, 501, 198, 210, 866, 245, 877,
	885, 0, 891, 899, 900, 912, 914, 915, 916, 917,
	935, 936, 938, 946, 948, 951, 953, 960, 971, 993,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 376, 377, 378, 381, 384, 385, 388,
	390, 391, 394, 398, 402, 403, 404, 405, 407, 409,
	416, 421, 433, 434, 435, 436, 437, 440, 441, 446,
	447, 448, 449, 450, 458, 459, 463, 481, 483, 495,
	510, 515, 439, 282, 490, 516, 0, 349, 926, 932,
	351, 264, 285, 296, 941, 505, 460, 214, 427, 273,
	236, 959, 961, 202, 233, 217, 242, 257, 260, 300,
	360, 367, 396, 401, 279, 254, 231, 420, 228, 443,
	466, 467, 468, 470, 364, 249, 400, 922, 950, 347,
	472, 473, 292, 365, 0, 0, 979, 964, 471, 0,
	907, 982, 876, 895, 992, 898, 901, 943, 855, 921,
	383, 892, 848, 880, 850, 887, 851, 878, 909, 253,
	875, 966, 925, 981, 338, 250, 857, 881, 397, 897,
	197, 945, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 988, 342, 931, 0,
	455, 368, 0, 0, 0, 911, 970, 919, 957, 906,
	944, 865, 930, 983, 893, 940, 984, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 889, 937, 978, 890, 939, 248,
	297, 255, 247, 475, 989, 969, 854, 918, 977, 0,
	0, 996, 980, 913, 0, 942, 0, 995, 849, 933,
	0, 852, 856, 991, 973, 884, 258, 0, 0, 0,
	0, 0, 0, 0, 910, 920, 954, 958, 904, 0,
	0, 0, 0, 0, 0, 0, 882, 0, 929, 0,
	0, 0, 861, 853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 908, 0, 0, 0,
	0, 864, 0, 883, 955, 0, 847, 280, 858, 369,
	240, 0, 962, 972, 905, 512, 976, 903, 902, 949,
	862, 968, 896, 337, 860, 306, 192, 212, 0, 894,
	379, 422, 432, 967, 879, 888, 238, 886, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 928, 947,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 859, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 874, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 963, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 846, 840, 839, 307, 344, 952,
	994, 392, 431, 227, 496, 454, 869, 873, 867, 934,
	868, 923, 924, 870, 985, 986, 987, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 956, 863, 0, 871,
	872, 0, 965, 974, 975, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 927, 191, 208, 340, 990, 415, 271, 527,
	506, 501, 198, 210, 866, 245, 877, 885, 0, 891,
	899, 900, 912, 914, 915, 916, 917, 935, 936, 938,
	946, 948, 951, 953, 960, 971, 993, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 926, 932, 351, 264, 285,
	296, 941, 505, 460, 214, 427, 273, 236, 959, 961,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 922, 950, 347, 472, 473, 292,
	365, 0, 0, 979, 964, 471, 0, 907, 982, 876,
	895, 992, 898, 901, 943, 855, 921, 383, 892, 848,
	880, 850, 887, 851, 878, 909, 253, 875, 966, 925,
	981, 338, 250, 857, 881, 397, 897, 197, 945, 445,
	237, 348, 345, 478, 265, 256, 252, 235, 293, 355,
	395, 465, 389, 988, 342, 931, 0, 455, 368, 0,
	0, 0, 911, 970, 919, 957, 906, 944, 865, 930,
	983, 893, 940, 984, 299, 234, 301, 196, 380, 456,
	269, 0, 0, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 889, 937, 978, 890, 939, 248, 297, 255, 247,
	475, 989, 969, 854, 918, 977, 0, 0, 996, 980,
	913, 0, 942, 0, 995, 849, 933, 0, 852, 856,
	991, 973, 884, 258, 0, 0, 0, 0, 0, 0,
	0, 910, 920, 954, 958, 904, 0, 0, 0, 0,
	0, 0, 0, 882, 0, 929, 0, 0, 0, 861,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 908, 0, 0, 0, 0, 864, 0,
	883, 955, 0, 847, 280, 858, 369, 240, 0, 962,
	972, 905, 512, 976, 903, 902, 949, 862, 968, 896,
	337, 860, 306, 192, 212, 0, 894, 379, 422, 432,
	967, 879, 888, 238, 886, 430, 393, 494, 220, 267,
	419, 399, 428, 406, 270, 928, 947, 429, 343, 480,
	413, 491, 513, 514, 246, 373, 503, 469, 509, 526,
	213, 243, 387, 462, 497, 452, 366, 476, 477, 305,
	451, 278, 195, 341, 519, 211, 438, 229, 218, 482,
	500, 272, 417, 203, 464, 1414, 226, 442, 0, 0,
	528, 205, 487, 461, 362, 302, 303, 204, 0, 418,
	251, 276, 241, 382, 484, 485, 239, 529, 215, 508,
	207, 859, 507, 375, 479, 488, 363, 353, 206, 486,
	361, 352, 308, 327, 328, 263, 287, 411, 346, 412,
	288, 371, 370, 372, 199, 498, 0, 200, 0, 457,
	499, 530, 221, 222, 224, 874, 262, 266, 274, 277,
	283, 284, 291, 339, 386, 410, 408, 414, 963, 474,
	492, 504, 511, 517, 518, 520, 521, 522, 523, 525,
	524, 846, 840, 839, 307, 344, 952, 994, 392, 431,
	227, 496, 454, 869, 873, 867, 934, 868, 923, 924,
	870, 985, 986, 987, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 956, 863, 0, 871, 872, 0, 965,
	974, 975, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 502, 927,
	191, 208, 340, 990, 415, 271, 527, 506, 501, 198,
	210, 866, 245, 877, 885, 0, 891, 899, 900, 912,
	914, 915, 916, 917, 935, 936, 938, 946, 948, 951,
	953, 960, 971, 993, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 376, 377, 378,
	381, 384, 385, 388, 390, 391, 394, 398, 402, 403,
	404, 405, 407, 409, 416, 421, 433, 434, 435, 436,
	437, 440, 441, 446, 447, 448, 449, 450, 458, 459,
	463, 481, 483, 495, 510, 515, 439, 282, 490, 516,
	0, 349, 926, 932, 351, 264, 285, 296, 941, 505,
	460, 214, 427, 273, 236, 959, 961, 202, 233, 217,
	242, 257, 260, 300, 360, 367, 396, 401, 279, 254,
	231, 420, 228, 443, 466, 467, 468, 470, 364, 249,
	400, 922, 950, 347, 472, 473, 292, 365, 0, 0,
	979, 964, 471, 0, 907, 982, 876, 895, 992, 898,
	901, 943, 855, 921, 383, 892, 848, 880, 850, 887,
	851, 878, 909, 253, 875, 966, 925, 981, 338, 250,
	857, 881, 397, 897, 197, 945, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	988, 342, 931, 0, 455, 368, 0, 0, 0, 911,
	970, 919, 957, 906, 944, 865, 930, 983, 893, 940,
	984, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 889, 937,
	978, 890, 939, 248, 297, 255, 247, 475, 989, 969,
	854, 918, 977, 0, 0, 996, 980, 913, 0, 942,
	0, 995, 849, 933, 0, 852, 856, 991, 973, 884,
	258, 0, 0, 0, 0, 0, 0, 0, 910, 920,
	954, 958, 904, 0, 0, 0, 0, 0, 0, 0,
	882, 0, 929, 0, 0, 0, 861, 853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	908, 0, 0, 0, 0, 864, 0, 883, 955, 0,
	847, 280, 858, 369, 240, 0, 962, 972, 905, 512,
	976, 903, 902, 949, 862, 968, 896, 337, 860, 306,
	192, 212, 0, 894, 379, 422, 432, 967, 879, 888,
	238, 886, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 928, 947, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 837, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 859, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 874, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 963, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 846, 840,
	839, 307, 344, 952, 994, 392, 431, 227, 496, 454,
	869, 873, 867, 934, 868, 923, 924, 870, 985, 986,
	987, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	956, 863, 0, 871, 872, 0, 965, 974, 975, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 927, 191, 208, 340,
	990, 415, 271, 527, 506, 501, 198, 210, 866, 245,
	877, 885, 0, 891, 899, 900, 912, 914, 915, 916,
	917, 935, 936, 938, 946, 948, 951, 953, 960, 971,
	993, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 926,
	932, 351, 264, 285, 296, 941, 505, 460, 214, 427,
	273, 236, 959, 961, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 922, 950,
	347, 472, 473, 292, 365, 0, 0, 0, 0, 471,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 0, 0, 1825, 0, 631, 0, 0, 0,
	253, 636, 0, 0, 0, 338, 250, 0, 1826, 397,
	0, 197, 0, 445, 237, 348, 345, 478, 265, 256,
	252, 235, 293, 355, 395, 465, 389, 643, 342, 0,
	0, 455, 368, 0, 0, 0, 0, 0, 638, 639,
	0, 0, 0, 0, 0, 0, 0, 0, 299, 234,
	301, 196, 380, 456, 269, 0, 87, 0, 0, 188,
	189, 190, 730, 738, 739, 740, 741, 742, 731, 733,
	0, 0, 225, 732, 232, 654, 656, 655, 665, 666,
	667, 668, 669, 670, 671, 652, 735, 743, 744, 0,
	248, 297, 255, 247, 475, 0, 0, 0, 0, 0,
	0, 0, 216, 0, 0, 0, 0, 0, 0, 0,
	614, 628, 0, 642, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 625, 626, 826, 0, 0, 0, 698,
	0, 627, 0, 0, 635, 745, 746, 747, 748, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 704, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 0,
	369, 240, 0, 697, 0, 0, 512, 0, 0, 695,
	0, 0, 0, 0, 337, 0, 306, 192, 212, 0,
	0, 379, 422, 432, 0, 0, 0, 238, 0, 430,
	393, 494, 220, 267, 419, 399, 428, 406, 270, 0,
	0, 429, 343, 480, 413, 491, 513, 514, 246, 373,
	503, 469, 509, 526, 213, 243, 387, 462, 497, 452,
	366, 476, 477, 305, 451, 278, 195, 341, 519, 211,
	438, 229, 218, 482, 500, 272, 417, 203, 464, 489,
	226, 442, 0, 0, 528, 205, 487, 461, 362, 302,
	303, 204, 0, 418, 251, 276, 241, 382, 484, 485,
	239, 529, 215, 508, 207, 0, 507, 375, 479, 488,
	363, 353, 206, 486, 361, 352, 308, 660, 661, 263,
	287, 411, 346, 412, 288, 371, 370, 372, 199, 498,
	0, 200, 0, 457, 499, 530, 221, 222, 224, 0,
	262, 266, 274, 277, 283, 284, 291, 339, 386, 410,
	408, 414, 0, 474, 492, 504, 511, 517, 518, 520,
	521, 522, 523, 525, 524, 374, 290, 453, 307, 344,
	0, 0, 392, 431, 227, 496, 454, 705, 696, 647,
	709, 649, 706, 707, 644, 645, 648, 708, 531, 532,
	533, 534, 535, 536, 537, 538, 539, 540, 541, 542,
	543, 544, 545, 546, 547, 548, 0, 699, 634, 633,
	0, 640, 641, 0, 650, 651, 653, 657, 658, 659,
	662, 663, 664, 672, 674, 675, 673, 676, 677, 678,
	681, 682, 683, 684, 679, 680, 685, 719, 720, 721,
	722, 723, 724, 632, 191, 208, 340, 0, 415, 271,
	527, 506, 501, 198, 210, 710, 245, 711, 0, 0,
	715, 0, 0, 0, 717, 716, 0, 718, 689, 688,
	0, 0, 712, 713, 0, 714, 0, 0, 193, 194,
	201, 209, 219, 223, 230, 244, 259, 261, 268, 281,
	286, 289, 294, 295, 298, 304, 350, 356, 357, 358,
	359, 376, 377, 378, 381, 384, 385, 388, 390, 391,
	394, 398, 402, 403, 404, 405, 407, 409, 416, 421,
	433, 434, 435, 436, 437, 440, 441, 446, 447, 448,
	449, 450, 458, 459, 463, 481, 483, 495, 510, 515,
	439, 282, 490, 516, 0, 349, 0, 0, 351, 264,
	285, 296, 0, 505, 460, 214, 427, 273, 236, 737,
	0, 202, 233, 217, 242, 257, 260, 300, 360, 367,
	396, 401, 279, 254, 231, 420, 228, 443, 466, 467,
	468, 470, 364, 249, 400, 0, 365, 347, 472, 473,
	292, 471, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 631, 0,
	0, 0, 253, 636, 0, 0, 0, 338, 250, 0,
	0, 397, 0, 197, 0, 445, 237, 348, 345, 478,
	265, 256, 252, 235, 293, 355, 395, 465, 389, 643,
	342, 0, 0, 455, 368, 0, 0, 0, 0, 0,
	638, 639, 0, 0, 0, 0, 0, 0, 0, 0,
	299, 234, 301, 196, 380, 456, 269, 0, 87, 0,
	0, 188, 189, 190, 730, 738, 739, 740, 741, 742,
	731, 733, 0, 0, 225, 732, 232, 654, 656, 655,
	665, 666, 667, 668, 669, 670, 671, 652, 735, 743,
	744, 0, 248, 297, 255, 247, 475, 0, 0, 1782,
	1783, 1784, 0, 0, 216, 0, 0, 0, 0, 0,
	0, 0, 614, 628, 0, 642, 0, 0, 0, 258,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 625, 626, 0, 0, 0,
	0, 698, 0, 627, 0, 0, 635, 745, 746, 747,
	748, 749, 750, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 764, 765, 766, 767,
	768, 769, 770, 771, 772, 773, 774, 775, 776, 777,
	778, 779, 780, 781, 782, 783, 784, 785, 786, 704,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 0, 369, 240, 0, 697, 0, 0, 512, 0,
	0, 695, 0, 0, 0, 0, 337, 0, 306, 192,
	212, 0, 0, 379, 422, 432, 0, 0, 0, 238,
	0, 430, 393, 494, 220, 267, 419, 399, 428, 406,
	270, 0, 0, 429, 343, 480, 413, 491, 513, 514,
	246, 373, 503, 469, 509, 526, 213, 243, 387, 462,
	497, 452, 366, 476, 477, 305, 451, 278, 195, 341,
	519, 211, 438, 229, 218, 482, 500, 272, 417, 203,
	464, 489, 226, 442, 0, 0, 528, 205, 487, 461,
	362, 302, 303, 204, 0, 418, 251, 276, 241, 382,
	484, 485, 239, 529, 215, 508, 207, 0, 507, 375,
	479, 488, 363, 353, 206, 486, 361, 352, 308, 660,
	661, 263, 287, 411, 346, 412, 288, 371, 370, 372,
	199, 498, 0, 200, 0, 457, 499, 530, 221, 222,
	224, 0, 262, 266, 274, 277, 283, 284, 291, 339,
	386, 410, 408, 414, 0, 474, 492, 504, 511, 517,
	518, 520, 521, 522, 523, 525, 524, 374, 290, 453,
	307, 344, 0, 0, 392, 431, 227, 496, 454, 705,
	696, 647, 709, 649, 706, 707, 644, 645, 648, 708,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 0, 699,
	634, 633, 0, 640, 641, 0, 650, 651, 653, 657,
	658, 659, 662, 663, 664, 672, 674, 675, 673, 676,
	677, 678, 681, 682, 683, 684, 679, 680, 685, 719,
	720, 721, 722, 723, 724, 632, 191, 208, 340, 0,
	415, 271, 527, 506, 501, 198, 210, 710, 245, 711,
	0, 0, 715, 0, 0, 0, 717, 716, 0, 718,
	689, 688, 0, 0, 712, 713, 0, 714, 0, 0,
	193, 194, 201, 209, 219, 223, 230, 244, 259, 261,
	268, 281, 286, 289, 294, 295, 298, 304, 350, 356,
	357, 358, 359, 376, 377, 378, 381, 384, 385, 388,
	390, 391, 394, 398, 402, 403, 404, 405, 407, 409,
	416, 421, 433, 434, 435, 436, 437, 440, 441, 446,
	447, 448, 449, 450, 458, 459, 463, 481, 483, 495,
	510, 515, 439, 282, 490, 516, 0, 349, 0, 0,
	351, 264, 285, 296, 0, 505, 460, 214, 427, 273,
	236, 737, 0, 202, 233, 217, 242, 257, 260, 300,
	360, 367, 396, 401, 279, 254, 231, 420, 228, 443,
	466, 467, 468, 470, 364, 249, 400, 0, 365, 347,
	472, 473, 292, 471, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 0, 0, 0, 0,
	631, 0, 0, 0, 253, 636, 0, 0, 0, 338,
	250, 0, 0, 397, 0, 197, 0, 445, 237, 348,
	345, 478, 265, 256, 252, 235, 293, 355, 395, 465,
	389, 643, 342, 0, 0, 455, 368, 0, 0, 0,
	0, 0, 638, 639, 0, 0, 0, 0, 0, 0,
	1915, 0, 299, 234, 301, 196, 380, 456, 269, 0,
	87, 0, 0, 188, 189, 190, 730, 738, 739, 740,
	741, 742, 731, 733, 0, 0, 225, 732, 232, 654,
	656, 655, 665, 666, 667, 668, 669, 670, 671, 652,
	735, 743, 744, 1916, 248, 297, 255, 247, 475, 0,
	0, 0, 0, 0, 0, 0, 216, 0, 0, 0,
	0, 0, 0, 0, 614, 628, 0, 642, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 625, 626, 0,
	0, 0, 0, 698, 0, 627, 0, 0, 635, 745,
	746, 747, 748, 749, 750, 751, 752, 753, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 764, 765,
	766, 767, 768, 769, 770, 771, 772, 773, 774, 775,
	776, 777, 778, 779, 780, 781, 782, 783, 784, 785,
	786, 704, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 0, 369, 240, 0, 697, 0, 0,
	512, 0, 0, 695, 0, 0, 0, 0, 337, 0,
	306, 192, 212, 0, 0, 379, 422, 432, 0, 0,
	0, 238, 0, 430, 393, 494, 220, 267, 419, 399,
	428, 406, 270, 0, 0, 429, 343, 480, 413, 491,
	513, 514, 246, 373, 503, 469, 509, 526, 213, 243,
	387, 462, 497, 452, 366, 476, 477, 305, 451, 278,
	195, 341, 519, 211, 438, 229, 218, 482, 500, 272,
	417, 203, 464, 489, 226, 442, 0, 0, 528, 205,
	487, 461, 362, 302, 303, 204, 0, 418, 251, 276,
	241, 382, 484, 485, 239, 529, 215, 508, 207, 0,
	507, 375, 479, 488, 363, 353, 206, 486, 361, 352,
	308, 660, 661, 263, 287, 411, 346, 412, 288, 371,
	370, 372, 199, 498, 0, 200, 0, 457, 499, 530,
	221, 222, 224, 0, 262, 266, 274, 277, 283, 284,
	291, 339, 386, 410, 408, 414, 0, 474, 492, 504,
	511, 517, 518, 520, 521, 522, 523, 525, 524, 374,
	290, 453, 307, 344, 0, 0, 392, 431, 227, 496,
	454, 705, 696, 647, 709, 649, 706, 707, 644, 645,
	648, 708, 531, 532, 533, 534, 535, 536, 537, 538,
	539, 540, 541, 542, 543, 544, 545, 546, 547, 548,
	0, 699, 634, 633, 0, 640, 641, 0, 650, 651,
	653, 657, 658, 659, 662, 663, 664, 672, 674, 675,
	673, 676, 677, 678, 681, 682, 683, 684, 679, 680,
	685, 719, 720, 721, 722, 723, 724, 632, 191, 208,
	340, 0, 415, 271, 527, 506, 501, 198, 210, 710,
	245, 711, 0, 0, 715, 0, 0, 0, 717, 716,
	0, 718, 689, 688, 0, 0, 712, 713, 0, 714,
	0, 0, 193, 194, 201, 209, 219, 223, 230, 244,
	259, 261, 268, 281, 286, 289, 294, 295, 298, 304,
	350, 356, 357, 358, 359, 376, 377, 378, 381, 384,
	385, 388, 390, 391, 394, 398, 402, 403, 404, 405,
	407, 409, 416, 421, 433, 434, 435, 436, 437, 440,
	441, 446, 447, 448, 449, 450, 458, 459, 463, 481,
	483, 495, 510, 515, 439, 282, 490, 516, 0, 349,
	0, 0, 351, 264, 285, 296, 0, 505, 460, 214,
	427, 273, 236, 737, 0, 202, 233, 217, 242, 257,
	260, 300, 360, 367, 396, 401, 279, 254, 231, 420,
	228, 443, 466, 467, 468, 470, 364, 249, 400, 0,
	0, 347, 472, 473, 292, 365, 0, 0, 0, 78,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 631, 0, 0,
	0, 253, 636, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 643, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 638,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 87, 0, 0,
	188, 189, 190, 730, 738, 739, 740, 741, 742, 731,
	733, 0, 0, 225, 732, 232, 654, 656, 655, 665,
	666, 667, 668, 669, 670, 671, 652, 735, 743, 744,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 614, 628, 0, 642, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	698, 0, 627, 0, 0, 635, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 697, 0, 0, 512, 0, 0,
	695, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 660, 661,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 705, 696,
	647, 709, 649, 706, 707, 644, 645, 648, 708, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 699, 634,
	633, 0, 640, 641, 0, 650, 651, 653, 657, 658,
	659, 662, 663, 664, 672, 674, 675, 673, 676, 677,
	678, 681, 682, 683, 684, 679, 680, 685, 719, 720,
	721, 722, 723, 724, 632, 191, 208, 340, 86, 415,
	271, 527, 506, 501, 198, 210, 710, 245, 711, 0,
	0, 715, 0, 0, 0, 717, 716, 0, 718, 689,
	688, 0, 0, 712, 713, 0, 714, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	737, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 631,
	0, 0, 0, 253, 636, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	643, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 638, 639, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 87,
	0, 0, 188, 189, 190, 730, 738, 739, 740, 741,
	742, 731, 733, 0, 0, 225, 732, 232, 654, 656,
	655, 665, 666, 667, 668, 669, 670, 671, 652, 735,
	743, 744, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 614, 628, 0, 642, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 625, 626, 0, 0,
	0, 0, 698, 0, 627, 0, 0, 635, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	704, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 697, 0, 0, 512,
	0, 0, 695, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 3119, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	660, 661, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	705, 696, 647, 709, 649, 706, 707, 644, 645, 648,
	708, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	699, 634, 633, 0, 640, 641, 0, 650, 651, 653,
	657, 658, 659, 662, 663, 664, 672, 674, 675, 673,
	676, 677, 678, 681, 682, 683, 684, 679, 680, 685,
	719, 720, 721, 722, 723, 724, 632, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 710, 245,
	711, 0, 0, 715, 0, 0, 0, 717, 716, 0,
	718, 689, 688, 0, 0, 712, 713, 0, 714, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 737, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 631, 0, 0, 0, 253, 636, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 643, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 638, 639, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 87, 0, 1381, 188, 189, 190, 730, 738, 739,
	740, 741, 742, 731, 733, 0, 0, 225, 732, 232,
	654, 656, 655, 665, 666, 667, 668, 669, 670, 671,
	652, 735, 743, 744, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 614, 628, 0, 642, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 625, 626,
	0, 0, 0, 0, 698, 0, 627, 0, 0, 635,
	745, 746, 747, 748, 749, 750, 751, 752, 753, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
	765, 766, 767, 768, 769, 770, 771, 772, 773, 774,
	775, 776, 777, 778, 779, 780, 781, 782, 783, 784,
	785, 786, 704, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 697, 0,
	0, 512, 0, 0, 695, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 660, 661, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 705, 696, 647, 709, 649, 706, 707, 644,
	645, 648, 708, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 699, 634, 633, 0, 640, 641, 0, 650,
	651, 653, 657, 658, 659, 662, 663, 664, 672, 674,
	675, 673, 676, 677, 678, 681, 682, 683, 684, 679,
	680, 685, 719, 720, 721, 722, 723, 724, 632, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	710, 245, 711, 0, 0, 715, 0, 0, 0, 717,
	716, 0, 718, 689, 688, 0, 0, 712, 713, 0,
	714, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 737, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 631, 0, 0, 0, 253, 636, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 643, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 638, 639, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 87, 0, 0, 188, 189, 190, 730,
	738, 739, 740, 741, 742, 731, 733, 0, 0, 225,
	732, 232, 654, 656, 655, 665, 666, 667, 668, 669,
	670, 671, 652, 735, 743, 744, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 614, 628, 0,
	642, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	625, 626, 826, 0, 0, 0, 698, 0, 627, 0,
	0, 635, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 764, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 775, 776, 777, 778, 779, 780, 781, 782,
	783, 784, 785, 786, 704, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	697, 0, 0, 512, 0, 0, 695, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 660, 661, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 705, 696, 647, 709, 649, 706,
	707, 644, 645, 648, 708, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 699, 634, 633, 0, 640, 641,
	0, 650, 651, 653, 657, 658, 659, 662, 663, 664,
	672, 674, 675, 673, 676, 677, 678, 681, 682, 683,
	684, 679, 680, 685, 719, 720, 721, 722, 723, 724,
	632, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 710, 245, 711, 0, 0, 715, 0, 0,
	0, 717, 716, 0, 718, 689, 688, 0, 0, 712,
	713, 0, 714, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 737, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 631, 0, 0, 0, 253,
	636, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 643, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 638, 639, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 87, 0, 0, 188, 189,
	190, 730, 738, 739, 740, 741, 742, 731, 733, 0,
	0, 225, 732, 232, 654, 656, 655, 665, 666, 667,
	668, 669, 670, 671, 652, 735, 743, 744, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 614,
	628, 0, 642, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 625, 626, 0, 0, 0, 0, 698, 0,
	627, 0, 0, 635, 745, 746, 747, 748, 749, 750,
	751, 752, 753, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 704, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 697, 0, 0, 512, 0, 0, 695, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 660, 661, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 705, 696, 647, 709,
	649, 706, 707, 644, 645, 648, 708, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 699, 634, 633, 0,
	640, 641, 0, 650, 651, 653, 657, 658, 659, 662,
	663, 664, 672, 674, 675, 673, 676, 677, 678, 681,
	682, 683, 684, 679, 680, 685, 719, 720, 721, 722,
	723, 724, 632, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 710, 245, 711, 0, 0, 715,
	0, 0, 0, 717, 716, 0, 718, 689, 688, 0,
	0, 712, 713, 0, 714, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 737, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 631, 0, 0,
	0, 253, 636, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 643, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 638,
	639, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 87, 0, 0,
	188, 189, 190, 730, 738, 739, 740, 741, 742, 731,
	733, 0, 0, 225, 732, 232, 654, 656, 655, 665,
	666, 667, 668, 669, 670, 671, 652, 735, 743, 744,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 628, 0, 642, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 626, 0, 0, 0, 0,
	698, 0, 627, 0, 0, 635, 745, 746, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 764, 765, 766, 767, 768,
	769, 770, 771, 772, 773, 774, 775, 776, 777, 778,
	779, 780, 781, 782, 783, 784, 785, 786, 704, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 697, 0, 0, 512, 0, 0,
	695, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 660, 661,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 705, 696,
	647, 709, 649, 706, 707, 644, 645, 648, 708, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 699, 634,
	633, 0, 640, 641, 0, 650, 651, 653, 657, 658,
	659, 662, 663, 664, 672, 674, 675, 673, 676, 677,
	678, 681, 682, 683, 684, 679, 680, 685, 719, 720,
	721, 722, 723, 724, 632, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 710, 245, 711, 0,
	0, 715, 0, 0, 0, 717, 716, 0, 718, 689,
	688, 0, 0, 712, 713, 0, 714, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	737, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 738, 739, 0, 0,
	0, 0, 1728, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 764, 765, 766,
	767, 768, 769, 770, 771, 772, 773, 774, 775, 776,
	777, 778, 779, 780, 781, 782, 783, 784, 785, 786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 1047,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	1046, 512, 0, 0, 0, 0, 0, 1043, 1044, 337,
	1004, 306, 192, 212, 1037, 1041, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 1400, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 1402, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 1219, 0, 1220, 1221, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 1342, 1345, 0, 0, 0, 0, 1341, 1344, 0,
	0, 225, 1340, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 0, 347, 472, 473, 292,
	365, 0, 0, 0, 78, 471, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 383, 0, 0,
	0, 0, 0, 0, 0, 0, 253, 0, 0, 0,
	0, 338, 250, 0, 0, 397, 0, 197, 0, 445,
	237, 348, 345, 478, 265, 256, 252, 235, 293, 355,
	395, 465, 389, 0, 342, 0, 0, 455, 368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 299, 234, 301, 196, 380, 456,
	269, 0, 87, 0, 0, 188, 189, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 225, 0,
	232, 323, 332, 331, 312, 313, 315, 317, 322, 329,
	335, 0, 0, 0, 0, 0, 248, 297, 255, 247,
	475, 0, 0, 0, 0, 0, 0, 0, 216, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 258, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 369, 240, 0, 0,
	0, 0, 512, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 306, 192, 212, 0, 0, 379, 422, 432,
	0, 0, 0, 238, 0, 430, 393, 494, 220, 267,
	419, 399, 428, 406, 270, 0, 0, 429, 343, 480,
	413, 491, 513, 514, 246, 373, 503, 469, 509, 526,
	213, 243, 387, 462, 497, 452, 366, 476, 477, 305,
	451, 278, 195, 341, 519, 211, 438, 229, 218, 482,
	500, 272, 417, 203, 464, 489, 226, 442, 0, 0,
	528, 205, 487, 461, 362, 302, 303, 204, 0, 418,
	251, 276, 241, 382, 484, 485, 239, 529, 215, 508,
	207, 0, 507, 375, 479, 488, 363, 353, 206, 486,
	361, 352, 308, 327, 328, 263, 287, 411, 346, 412,
	288, 371, 370, 372, 199, 498, 0, 200, 0, 457,
	499, 530, 221, 222, 224, 0, 262, 266, 274, 277,
	283, 284, 291, 339, 386, 410, 408, 414, 0, 474,
	492, 504, 511, 517, 518, 520, 521, 522, 523, 525,
	524, 374, 290, 453, 307, 344, 0, 0, 392, 431,
	227, 496, 454, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 532, 533, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 546,
	547, 548, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 549, 354, 444, 493, 309, 321, 324, 314,
	333, 0, 334, 310, 311, 316, 318, 319, 320, 325,
	326, 330, 336, 423, 424, 425, 426, 275, 502, 0,
	191, 208, 340, 86, 415, 271, 527, 506, 501, 198,
	210, 0, 245, 0, 0, 0, 0, 0, 0, 1903,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 194, 201, 209, 219, 223,
	230, 244, 259, 261, 268, 281, 286, 289, 294, 295,
	298, 304, 350, 356, 357, 358, 359, 376, 377, 378,
	381, 384, 385, 388, 390, 391, 394, 398, 402, 403,
	404, 405, 407, 409, 416, 421, 433, 434, 435, 436,
	437, 440, 441, 446, 447, 448, 449, 450, 458, 459,
	463, 481, 483, 495, 510, 515, 439, 282, 490, 516,
	0, 349, 0, 0, 351, 264, 285, 296, 0, 505,
	460, 214, 427, 273, 236, 0, 0, 202, 233, 217,
	242, 257, 260, 300, 360, 367, 396, 401, 279, 254,
	231, 420, 228, 443, 466, 467, 468, 470, 364, 249,
	400, 0, 0, 347, 472, 473, 292, 365, 0, 0,
	0, 78, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 87,
	0, 1381, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	86, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	1855, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 1853, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 998, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 337, 1004, 306, 192, 212, 1002, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 1855, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1583, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 1381,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 512, 0, 0,
	0, 3027, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 0, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 87,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 1903, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	2211, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2212, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 2196, 0, 0, 0, 2197, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 1425, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 1424, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 0, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 3153, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 1583, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 3027, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 87, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 1904, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 0, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 1679, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 1550, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 1548, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 0, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 1546, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 1544, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	1542, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 1538, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 1536, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 0, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 1534, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 1509, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 0,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 1409, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 376, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 1196, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 189, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 0, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 808, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 189, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 606,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 605, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 365,
	347, 472, 473, 292, 471, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 253, 0, 0, 0, 0,
	338, 250, 0, 0, 397, 0, 197, 0, 445, 237,
	348, 345, 478, 265, 256, 252, 235, 293, 355, 395,
	465, 389, 0, 342, 0, 0, 455, 368, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 299, 234, 301, 196, 380, 456, 269,
	0, 0, 0, 0, 188, 189, 190, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 225, 0, 232,
	323, 332, 331, 312, 313, 315, 317, 322, 329, 335,
	0, 0, 0, 0, 0, 248, 297, 255, 247, 475,
	0, 0, 0, 0, 0, 0, 0, 216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 258, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 369, 240, 0, 0, 552,
	0, 512, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 306, 192, 212, 0, 0, 379, 422, 432, 0,
	0, 0, 238, 0, 430, 393, 494, 220, 267, 419,
	399, 428, 406, 270, 0, 0, 429, 343, 480, 413,
	491, 513, 514, 246, 373, 503, 469, 509, 526, 213,
	243, 387, 462, 497, 452, 366, 476, 477, 305, 451,
	278, 195, 341, 519, 211, 438, 229, 218, 482, 500,
	272, 417, 203, 464, 489, 226, 442, 0, 0, 528,
	205, 487, 461, 362, 302, 303, 204, 0, 418, 251,
	276, 241, 382, 484, 485, 239, 529, 215, 508, 207,
	0, 507, 375, 479, 488, 363, 353, 206, 486, 361,
	352, 308, 327, 328, 263, 287, 411, 346, 412, 288,
	371, 370, 372, 199, 498, 0, 200, 0, 457, 499,
	530, 221, 222, 224, 0, 262, 266, 274, 277, 283,
	284, 291, 339, 386, 410, 408, 414, 0, 474, 492,
	504, 511, 517, 518, 520, 521, 522, 523, 525, 524,
	374, 290, 453, 307, 344, 0, 0, 392, 431, 227,
	496, 454, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 533, 534, 535, 536, 537,
	538, 539, 540, 541, 542, 543, 544, 545, 546, 547,
	548, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 549, 354, 444, 493, 309, 321, 324, 314, 333,
	0, 334, 310, 311, 316, 318, 319, 320, 325, 326,
	330, 336, 423, 424, 425, 426, 275, 502, 0, 191,
	208, 340, 0, 415, 271, 527, 506, 501, 198, 210,
	0, 245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 194, 201, 209, 219, 223, 230,
	244, 259, 261, 268, 281, 286, 289, 294, 295, 298,
	304, 350, 356, 357, 358, 359, 376, 377, 378, 381,
	384, 385, 388, 390, 391, 394, 398, 402, 403, 404,
	405, 407, 409, 416, 421, 433, 434, 435, 436, 437,
	440, 441, 446, 447, 448, 449, 450, 458, 459, 463,
	481, 483, 495, 510, 515, 439, 282, 490, 516, 0,
	349, 0, 0, 351, 264, 285, 296, 0, 505, 460,
	214, 427, 273, 236, 0, 0, 202, 233, 217, 242,
	257, 260, 300, 360, 367, 396, 401, 279, 254, 231,
	420, 228, 443, 466, 467, 468, 470, 364, 249, 400,
	0, 365, 347, 472, 473, 292, 471, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 383, 0,
	0, 0, 0, 0, 0, 0, 0, 253, 0, 0,
	0, 0, 338, 250, 0, 0, 397, 0, 197, 0,
	445, 237, 348, 345, 478, 265, 256, 252, 235, 293,
	355, 395, 465, 389, 0, 342, 0, 0, 455, 368,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 299, 234, 301, 196, 380,
	456, 269, 0, 0, 0, 0, 188, 189, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 225,
	0, 232, 323, 332, 331, 312, 313, 315, 317, 322,
	329, 335, 0, 0, 0, 0, 0, 248, 297, 255,
	247, 475, 0, 0, 0, 0, 0, 0, 0, 216,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 258, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 0, 369, 240, 0,
	0, 0, 0, 512, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 306, 192, 212, 0, 0, 379, 422,
	432, 0, 0, 0, 238, 0, 430, 393, 494, 220,
	267, 419, 399, 428, 406, 270, 0, 0, 429, 343,
	480, 413, 491, 513, 514, 246, 373, 503, 469, 509,
	526, 213, 243, 387, 462, 497, 452, 366, 476, 477,
	305, 451, 278, 195, 341, 519, 211, 438, 229, 218,
	482, 500, 272, 417, 203, 464, 489, 226, 442, 0,
	0, 528, 205, 487, 461, 362, 302, 303, 204, 0,
	418, 251, 276, 241, 382, 484, 485, 239, 529, 215,
	508, 207, 0, 507, 375, 479, 488, 363, 353, 206,
	486, 361, 352, 308, 327, 328, 263, 287, 411, 346,
	412, 288, 371, 370, 372, 199, 498, 0, 200, 0,
	457, 499, 530, 221, 222, 224, 0, 262, 266, 274,
	277, 283, 284, 291, 339, 386, 410, 408, 414, 0,
	474, 492, 504, 511, 517, 518, 520, 521, 522, 523,
	525, 524, 374, 290, 453, 307, 344, 0, 0, 392,
	431, 227, 496, 454, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 531, 532, 533, 534, 535,
	536, 537, 538, 539, 540, 541, 542, 543, 544, 545,
	546, 547, 548, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 549, 354, 444, 493, 309, 321, 324,
	314, 333, 0, 334, 310, 311, 316, 318, 319, 320,
	325, 326, 330, 336, 423, 424, 425, 426, 275, 502,
	0, 191, 208, 340, 0, 415, 271, 527, 506, 501,
	198, 210, 0, 245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 194, 201, 209, 219,
	223, 230, 244, 259, 261, 268, 281, 286, 289, 294,
	295, 298, 304, 350, 356, 357, 358, 359, 3161, 377,
	378, 381, 384, 385, 388, 390, 391, 394, 398, 402,
	403, 404, 405, 407, 409, 416, 421, 433, 434, 435,
	436, 437, 440, 441, 446, 447, 448, 449, 450, 458,
	459, 463, 481, 483, 495, 510, 515, 439, 282, 490,
	516, 0, 349, 0, 0, 351, 264, 285, 296, 0,
	505, 460, 214, 427, 273, 236, 0, 0, 202, 233,
	217, 242, 257, 260, 300, 360, 367, 396, 401, 279,
	254, 231, 420, 228, 443, 466, 467, 468, 470, 364,
	249, 400, 0, 365, 347, 472, 473, 292, 471, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 0, 0, 253,
	0, 0, 0, 0, 338, 250, 0, 0, 397, 0,
	197, 0, 445, 237, 348, 345, 478, 265, 256, 252,
	235, 293, 355, 395, 465, 389, 0, 342, 0, 0,
	455, 368, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 234, 301,
	196, 380, 456, 269, 0, 0, 0, 0, 188, 189,
	190, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 225, 0, 232, 323, 332, 331, 312, 313, 315,
	317, 322, 329, 335, 0, 0, 0, 0, 0, 248,
	297, 255, 247, 475, 0, 0, 0, 0, 0, 0,
	0, 216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 258, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 369,
	240, 0, 0, 0, 0, 512, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 306, 192, 212, 0, 0,
	379, 422, 432, 0, 0, 0, 238, 0, 430, 393,
	494, 220, 267, 419, 399, 428, 406, 270, 0, 0,
	429, 343, 480, 413, 491, 513, 514, 246, 373, 503,
	469, 509, 526, 213, 243, 387, 462, 497, 452, 366,
	476, 477, 305, 451, 278, 195, 341, 519, 211, 438,
	229, 218, 482, 500, 272, 417, 203, 464, 489, 226,
	442, 0, 0, 528, 205, 487, 461, 362, 302, 303,
	204, 0, 418, 251, 276, 241, 382, 484, 485, 239,
	529, 215, 508, 207, 0, 507, 375, 479, 488, 363,
	353, 206, 486, 361, 352, 308, 327, 328, 263, 287,
	411, 346, 412, 288, 371, 370, 372, 199, 498, 0,
	200, 0, 457, 499, 530, 221, 222, 224, 0, 262,
	266, 274, 277, 283, 284, 291, 339, 386, 410, 408,
	414, 0, 474, 492, 504, 511, 517, 518, 520, 521,
	522, 523, 525, 524, 374, 290, 453, 307, 344, 0,
	0, 392, 431, 227, 496, 454, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 532, 533,
	534, 535, 536, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 546, 547, 548, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 549, 354, 444, 493, 309,
	321, 324, 314, 333, 0, 334, 310, 311, 316, 318,
	319, 320, 325, 326, 330, 336, 423, 424, 425, 426,
	275, 502, 0, 191, 208, 340, 0, 415, 271, 527,
	506, 501, 198, 210, 0, 245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 194, 201,
	209, 219, 223, 230, 244, 259, 261, 268, 281, 286,
	289, 294, 295, 298, 304, 350, 356, 357, 358, 359,
	376, 377, 378, 381, 384, 385, 388, 390, 391, 394,
	398, 402, 403, 404, 405, 407, 409, 416, 421, 433,
	434, 435, 436, 437, 440, 441, 446, 447, 448, 449,
	450, 458, 459, 463, 481, 483, 495, 510, 515, 439,
	282, 490, 516, 0, 349, 0, 0, 351, 264, 285,
	296, 0, 505, 460, 214, 427, 273, 236, 0, 0,
	202, 233, 217, 242, 257, 260, 300, 360, 367, 396,
	401, 279, 254, 231, 420, 228, 443, 466, 467, 468,
	470, 364, 249, 400, 0, 365, 347, 472, 473, 292,
	471, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 0, 0, 0, 0, 338, 250, 0, 0,
	397, 0, 197, 0, 445, 237, 348, 345, 478, 265,
	256, 252, 235, 293, 355, 395, 465, 389, 0, 342,
	0, 0, 455, 368, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	234, 301, 196, 380, 456, 269, 0, 0, 0, 0,
	188, 2714, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 232, 323, 332, 331, 312,
	313, 315, 317, 322, 329, 335, 0, 0, 0, 0,
	0, 248, 297, 255, 247, 475, 0, 0, 0, 0,
	0, 0, 0, 216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 258, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	0, 369, 240, 0, 0, 0, 0, 512, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 306, 192, 212,
	0, 0, 379, 422, 432, 0, 0, 0, 238, 0,
	430, 393, 494, 220, 267, 419, 399, 428, 406, 270,
	0, 0, 429, 343, 480, 413, 491, 513, 514, 246,
	373, 503, 469, 509, 526, 213, 243, 387, 462, 497,
	452, 366, 476, 477, 305, 451, 278, 195, 341, 519,
	211, 438, 229, 218, 482, 500, 272, 417, 203, 464,
	489, 226, 442, 0, 0, 528, 205, 487, 461, 362,
	302, 303, 204, 0, 418, 251, 276, 241, 382, 484,
	485, 239, 529, 215, 508, 207, 0, 507, 375, 479,
	488, 363, 353, 206, 486, 361, 352, 308, 327, 328,
	263, 287, 411, 346, 412, 288, 371, 370, 372, 199,
	498, 0, 200, 0, 457, 499, 530, 221, 222, 224,
	0, 262, 266, 274, 277, 283, 284, 291, 339, 386,
	410, 408, 414, 0, 474, 492, 504, 511, 517, 518,
	520, 521, 522, 523, 525, 524, 374, 290, 453, 307,
	344, 0, 0, 392, 431, 227, 496, 454, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 549, 354, 444,
	493, 309, 321, 324, 314, 333, 0, 334, 310, 311,
	316, 318, 319, 320, 325, 326, 330, 336, 423, 424,
	425, 426, 275, 502, 0, 191, 208, 340, 0, 415,
	271, 527, 506, 501, 198, 210, 0, 245, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 193,
	194, 201, 209, 219, 223, 230, 244, 259, 261, 268,
	281, 286, 289, 294, 295, 298, 304, 350, 356, 357,
	358, 359, 376, 377, 378, 381, 384, 385, 388, 390,
	391, 394, 398, 402, 403, 404, 405, 407, 409, 416,
	421, 433, 434, 435, 436, 437, 440, 441, 446, 447,
	448, 449, 450, 458, 459, 463, 481, 483, 495, 510,
	515, 439, 282, 490, 516, 0, 349, 0, 0, 351,
	264, 285, 296, 0, 505, 460, 214, 427, 273, 236,
	0, 0, 202, 233, 217, 242, 257, 260, 300, 360,
	367, 396, 401, 279, 254, 231, 420, 228, 443, 466,
	467, 468, 470, 364, 249, 400, 0, 365, 347, 472,
	473, 292, 471, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 0, 0, 0, 0, 0,
	0, 0, 0, 253, 0, 0, 0, 0, 338, 250,
	0, 0, 397, 0, 197, 0, 445, 237, 348, 345,
	478, 265, 256, 252, 235, 293, 355, 395, 465, 389,
	0, 342, 0, 0, 455, 368, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 234, 301, 196, 380, 456, 269, 0, 0,
	0, 0, 188, 2192, 190, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 225, 0, 232, 323, 332,
	331, 312, 313, 315, 317, 322, 329, 335, 0, 0,
	0, 0, 0, 248, 297, 255, 247, 475, 0, 0,
	0, 0, 0, 0, 0, 216, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 0, 369, 240, 0, 0, 0, 0, 512,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 306,
	192, 212, 0, 0, 379, 422, 432, 0, 0, 0,
	238, 0, 430, 393, 494, 220, 267, 419, 399, 428,
	406, 270, 0, 0, 429, 343, 480, 413, 491, 513,
	514, 246, 373, 503, 469, 509, 526, 213, 243, 387,
	462, 497, 452, 366, 476, 477, 305, 451, 278, 195,
	341, 519, 211, 438, 229, 218, 482, 500, 272, 417,
	203, 464, 489, 226, 442, 0, 0, 528, 205, 487,
	461, 362, 302, 303, 204, 0, 418, 251, 276, 241,
	382, 484, 485, 239, 529, 215, 508, 207, 0, 507,
	375, 479, 488, 363, 353, 206, 486, 361, 352, 308,
	327, 328, 263, 287, 411, 346, 412, 288, 371, 370,
	372, 199, 498, 0, 200, 0, 457, 499, 530, 221,
	222, 224, 0, 262, 266, 274, 277, 283, 284, 291,
	339, 386, 410, 408, 414, 0, 474, 492, 504, 511,
	517, 518, 520, 521, 522, 523, 525, 524, 374, 290,
	453, 307, 344, 0, 0, 392, 431, 227, 496, 454,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 548, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 549,
	354, 444, 493, 309, 321, 324, 314, 333, 0, 334,
	310, 311, 316, 318, 319, 320, 325, 326, 330, 336,
	423, 424, 425, 426, 275, 502, 0, 191, 208, 340,
	0, 415, 271, 527, 506, 501, 198, 210, 0, 245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 201, 209, 219, 223, 230, 244, 259,
	261, 268, 281, 286, 289, 294, 295, 298, 304, 350,
	356, 357, 358, 359, 376, 377, 378, 381, 384, 385,
	388, 390, 391, 394, 398, 402, 403, 404, 405, 407,
	409, 416, 421, 433, 434, 435, 436, 437, 440, 441,
	446, 447, 448, 449, 450, 458, 459, 463, 481, 483,
	495, 510, 515, 439, 282, 490, 516, 0, 349, 0,
	0, 351, 264, 285, 296, 0, 505, 460, 214, 427,
	273, 236, 0, 0, 202, 233, 217, 242, 257, 260,
	300, 360, 367, 396, 401, 279, 254, 231, 420, 228,
	443, 466, 467, 468, 470, 364, 249, 400, 0, 0,
	347, 472, 473, 292,
}

var yyPact = [...]int{
	3354, -1000, -409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2171, 2250, -1000, -1000,
	-1000, -1000, 2399, -1000, 818, 1894, -1000, 2170, 370, -1000,
	43569, 569, -1000, 42345, 558, 142, 43569, -1000, 241, -1000,
	190, 43569, 236, 41733, -1000, -1000, -233, 19079, 2091, 98,
	96, 43569, -1000, -1000, -1000, -1000, 2356, 1844, -1000, 397,
	-1000, -1000, -1000, -1000, -1000, -1000, 41121, -1000, -1000, -1000,
	2206, 2145, 2401, 711, 2132, -1000, 2287, 1844, -1000, 19079,
	2323, 2263, 18467, -1000, 18467, 508, -1000, -1000, 14173, -1000,
	-1000, 24597, 43569, 31329, 377, -1000, 2170, -1000, -1000, -1000,
	145, -1000, 399, 1695, -1000, 1691, -1000, 690, 702, 426,
	537, 518, 425, 422, 421, 419, 408, 407, 405, 404,
	445, -1000, 735, 735, -87, -88, 3705, 510, 474, 474,
	852, 525, 2127, 2125, -1000, -1000, 735, 735, 735, 391,
	735, 735, 735, 735, 360, 357, 735, 735, 735, 735,
	735, 735, 735, 735, 735, 735, 735, 735, 735, 735,
	735, 735, 735, 355, 2170, 328, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	43569, 334, 43569, -1000, 626, 43569, 863, 863, 174, 863,
	863, 863, 863, 224, 746, 92, -1000, 207, 335, 216,
	325, 861, 291, 247, -1000, -1000, 316, 861, 1292, -1000,
	725, 196, -1000, 863, 11705, 11705, 11705, -1000, 2152, -1000,
	-1000, -1000, -1000, -1000, -1000, 1310, -1000, 524, -1000, -1000,
	-1000, -1000, 43569, 40509, 384, 757, -1000, -1000, -1000, 104,
	-1000, -1000, 1398, 1779, 19079, 946, -1000, 1606, 680, -1000,
	-1000, -1000, -1000, -1000, 598, 19691, 19691, 19691, 19691, -1000,
	-1000, 1417, 1417, 1417, 1417, 19691, 1417, -1000, 1417, 1417,
	1417, 1417, 19079, 1417, 1417, 1417, -1000, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417,
	1417, -1000, -1000, 1417, 622, 1417, 1417, 1417, 1417, 1417,
	-1000, -1000, -1000, -1000, 19691, 1417, 1417, 1417, 1417, 1417,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1417,
	1417, 1417, 1417, 1417, 1417, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 22139, -1000, 16631, 1417, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 43569, -1000,
	1417, 260, 43569, 43569, 387, 2287, 1844, -1000, 2356, 2291,
	397, -1000, 2654, 2006, 1831, 1300, 1844, 1603, 43569, -1000,
	1801, -1000, -1000, -1000, 2032, 1216, 1277, -1000, -1000, -1000,
	-1000, 1816, 19079, -1000, -1000, 2394, -1000, 21527, 620, 911,
	2393, 39897, -1000, 508, 508, 1673, 13556, 48, -1000, -1000,
	-1000, 754, 28881, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2152,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1797, 43569, -1000,
	-1000, 3197, 1423, -1000, 1891, -1000, 1781, -1000, 1843, 19079,
	1812, 556, 1423, 536, 535, 533, -1000, -8, -1000, -1000,
	-1000, -1000, -1000, -1000, 735, 735, 735, -1000, 443, 2322,
	370, 5152, -1000, -1000, -1000, 39285, 1889, 1423, -1000, 1881,
	-1000, 856, 590, 633, 633, 1423, -1000, -1000, 43569, 1423,
	854, 842, 1423, 1423, 43569, 43569, -1000, 38673, -1000, 38061,
	37449, 1152, 43569, 36837, 36225, 35613, 35001, 34389, -1000, 2073,
	-1000, 2039, -1000, -1000, -1000, 43569, 1423, 1423, 43569, 43569,
	43569, 43569, 1423, -1000, -1000, 383, -1000, -1000, 1137, 1136,
	1106, 735, 735, 1099, 1276, 1274, 1270, 735, 735, 1098,
	1268, 30105, 1267, 326, 1095, 1086, 1069, 1178, 1265, 194,
	1263, 1117, 1048, 1063, 43569, 1880, 43569, -1000, 296, 825,
	470, 752, 2170, 2087, 1667, 521, 550, 1423, 482, 482,
	43569, -1000, 12322, -1000, -1000, 1262, 19079, -1000, 865, 861,
	861, -1000, -1000, -1000, -1000, -1000, -1000, 863, 43569, 865,
	-1000, -1000, -1000, 861, 863, 43569, 863, 863, 863, 863,
	861, 861, 861, 863, 43569, 43569, 43569, 43569, 43569, 43569,
	43569, 43569, 43569, 11705, 11705, 11705, 725, 863, -247, -1000,
	1259, -1000, 1973, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 206, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -13, 1657, 33777, -1000, -250, -251, -253, -256,
	-1000, -1000, -1000, -263, -264, -1000, -1000, -1000, 19079, 19079,
	19079, 19079, -127, -1000, 1005, 19691, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 213, 873, 19691, 19691, 19691, 19691, 19691,
	19691, 19691, 19691, 19691, 19691, 19691, 19691, 19691, 19691, 19691,
	-1000, -1000, 27045, 5147, 5147, 680, 680, 680, 680, -1000,
	18467, 19079, 19079, 680, -1000, 1423, 18467, 18467, 19079, 2186,
	750, 1779, 43569, -1000, 1300, -1000, -1000, -1000, 1058, -1000,
	43569, 43569, 1298, 19079, 19079, 19079, 19079, 19079, 19079, 15402,
	19079, 19079, 19079, 19079, 19079, 19079, 19079, 19079, 19079, 19079,
	19079, 19079, 19079, 19079, 19079, 19079, 19079, 19079, 19079, 19079,
	19079, 19079, 19079, 19079, 19079, 19079, 1300, 19079, 1366, 19079,
	19079, 14790, 12322, 18467, 18467, 18467, 18467, 18467, 33165, -1000,
	-1000, -1000, -1000, -1000, 19079, 19079, 19079, 19079, 19079, 19079,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 613, 1600, 1374,
	1583, 19079, -1000, 1625, -1000, -91, 23985, 19079, 1257, 2391,
	1911, 43569, -1000, -1000, -1000, 2287, -1000, 2287, 1600, 2554,
	2036, 18467, -1000, -1000, 2554, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1471, -1000, 43569, 1603, 2258, 43569, 2029,
	1255, 538, -1000, 19079, 19079, 1595, -1000, 1297, 43569, -1000,
	-127, -1000, 32553, -1000, -1000, 11088, -1000, 43569, 402, 43569,
	-1000, 26433, 31941, 12939, 48, -1000, 12939, 1548, -1000, 72,
	67, 16014, 679, -1000, -1000, -1000, 3705, 20915, 1378, 679,
	143, -1000, -1000, -1000, 1843, -1000, 1843, 1843, 1843, 1843,
	538, 538, 538, 538, -1000, -1000, -1000, -1000, -1000, 1878,
	1877, -1000, 1843, 1843, 1843, 1843, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1876, 1876, 1876, 1846, 1846, 475, -1000,
	19079, 340, 31329, 2198, 1059, 1000, 296, 489, 1905, 1423,
	1423, 1423, 489, -1000, 1486, 1476, 1416, -1000, -400, 1589,
	-1000, -1000, 2319, -1000, -1000, 792, 874, 871, 776, 43569,
	277, 382, -1000, 477, -1000, 31329, 1423, 841, 633, 1423,
	-1000, 1423, -1000, -1000, -1000, -1000, -1000, 1423, -1000, -1000,
	1587, -1000, 1825, 994, 869, 920, 814, 1587, -1000, -1000,
	-65, 1587, -1000, 1587, -1000, 1587, -1000, 1587, -1000, 1587,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 784,
	227, -178, 43569, 277, 520, -1000, 519, 27045, -1000, -1000,
	-1000, 27045, 27045, -1000, -1000, -1000, -1000, 1234, 1233, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -388, 43569,
	-1000, 293, 747, 364, 417, 348, 43569, 345, 2270, 2269,
	2265, 319, 350, 43569, 43569, 482, 1970, 43569, 2226, 43569,
	-1000, -1000, -1000, -1000, -1000, 1779, 43569, -1000, -1000, 863,
	863, -1000, -1000, 43569, 863, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 863, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 43569, 43569, -1000, -1000, -1000, -1000, -1000, 123, 52,
	412, -1000, -1000, -1000, -1000, -1000, 2284, -1000, 1779, 773,
	789, -1000, 1417, -1000, -1000, 974, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 213, 19691, 19691, 19691, 1308, 543, 1640,
	1074, 1055, 906, 906, 788, 788, 685, 685, 685, 685,
	685, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1223,
	-1000, 1725, -1000, 2306, 1350, 1300, 1725, 1725, 1256, 18467,
	-1000, -1000, 804, -1000, 19079, 1300, -1000, -1000, 1300, 1300,
	1577, 1573, 2376, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1557, 1000, 1000, 1000, 1000, 1000,
	19079, 1822, -1000, -1000, -1000, 2416, 2406, 1300, 1398, 1300,
	1570, -1000, 2385, 1000, 2378, 2369, 2352, 1463, 2332, 2315,
	2310, 1000, 1000, 1000, 1811, 2278, 2262, 2190, 2166, 2124,
	2105, 2005, 1994, 1967, 1000, -130, 1000, 1300, -1000, -1000,
	-1000, -1000, 1961, 1807, 1300, 18467, 18467, 1563, 1417, 609,
	-1000, 1725, 1300, 1300, 1725, 1725, -1000, 1949, 1940, 1935,
	1929, 1861, 1855, 12322, 1300, -1000, 1583, 43569, -1000, -236,
	-1000, 32, 675, 1417, -1000, 30105, 1300, -1000, 7289, -1000,
	44793, -1000, -1000, -1000, -1000, -1000, 28269, 1665, 2554, -1000,
	-1000, 1417, 1770, -1000, -1000, 538, 128, 27657, 674, 674,
	185, 1779, 1779, 19079, -1000, -1000, -1000, -1000, -1000, -1000,
	608, 2343, 392, 1417, -1000, 1565, 2428, -1000, -1000, -1000,
	2256, 22756, -1000, 1417, 43569, 1820, 1819, -1000, 605, -1000,
	1548, 48, 38, -1000, -1000, -1000, -1000, 1779, -1000, 1113,
	403, 2894, -1000, 484, -1000, -1000, -1000, -1000, 2106, 124,
	-1000, -1000, -1000, 321, 538, -1000, -1000, -1000, -1000, -1000,
	-1000, 1215, 1215, -1000, -1000, -1000, -1000, -1000, 1056, -1000,
	-1000, -1000, 1046, -1000, -1000, 1840, 1951, 340, -1000, -1000,
	735, 1212, -1000, -1000, 2116, 735, 735, 43569, -1000, -1000,
	1375, 2198, 293, 43569, 767, 1969, -1000, 1905, 1905, 1905,
	43569, -1000, -1000, -1000, -1000, -1000, -1000, -390, 77, 396,
	-1000, -1000, -1000, 4928, 43569, 1737, -1000, 275, -1000, 1363,
	-1000, 43569, -1000, 1731, 1871, 1423, 1423, -1000, -1000, -1000,
	43569, 1417, -1000, -1000, -1000, -1000, 545, 2164, 317, -1000,
	-1000, -148, -1000, -1000, 277, 275, 43569, 1423, 679, -1000,
	-1000, -1000, -1000, -1000, -391, 1729, 530, 274, 346, 43569,
	43569, 43569, 43569, 43569, 588, -1000, -1000, -1000, -1000, 249,
	-1000, -1000, 249, -1000, -1000, -1000, -1000, 339, 517, -1000,
	43569, 43569, 645, -1000, -1000, -1000, 861, -1000, -1000, 861,
	-1000, -1000, -1000, -1000, -1000, 2150, 43569, 50, -314, -1000,
	-306, 19079, -1000, -1000, -1000, -1000, 1214, 494, 1640, 19691,
	19691, 18467, -54, 659, 659, 27045, -1000, -1000, -1000, 19079,
	19079, 1740, 759, -1000, 19079, 969, -1000, -1000, -1000, 19079,
	19079, 19079, 1300, 366, -1000, -1000, -1000, -1000, -1000, 2371,
	-1000, 19079, 19079, 19079, -1000, -1000, 19079, 19079, -1000, 19079,
	19079, 20303, 1300, 20303, 19079, 19079, 20303, -1000, -1000, -1000,
	-1000, 20303, 19079, 19079, 19079, 19079, 19079, 19079, 19079, 19079,
	19079, -1000, -1000, 31329, 112, -130, 1366, 112, 1366, -1000,
	1725, 1725, 18467, 12322, -1000, -1000, -1000, -1000, -1000, 19079,
	19079, 19079, 19079, 19079, 19079, -1000, -1000, -1000, -1000, -1000,
	-1000, 675, -1000, 633, 633, 633, 43569, -1000, -1000, -1000,
	-1000, -1000, -1000, 1532, 2275, -1000, 2063, 2059, 2366, 2343,
	-1000, 26433, 2554, -1000, -1000, 43569, -228, -1000, 2083, 2192,
	674, 674, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10471,
	2287, 19079, 1963, 43569, 189, -1000, 23373, 43569, 43569, 26433,
	26433, 26433, 26433, 26433, -1000, 2014, 2009, -1000, 1992, 1984,
	2120, 43569, -1000, 1702, 1300, 2291, 22756, 19079, 25209, 1554,
	26433, -1000, -1000, 26433, 43569, 9854, -1000, -1000, 43, 62,
	-1000, -1000, -1000, -1000, 3705, -1000, -1000, 1271, 2244, 2101,
	-1000, -1000, -1000, -1000, -1000, 1698, -1000, 1653, 1517, 1648,
	227, -1000, 1758, 2144, 735, 735, -1000, 1045, -1000, 1423,
	1211, 1210, -1000, -1000, -1000, 511, -1000, 2224, 43569, 1962,
	1958, 1954, -1000, -398, 1040, 1870, 1712, 19079, 1850, 2318,
	1468, 43569, -1000, -1000, 43569, -1000, 273, -1000, 340, 43569,
	-1000, -1000, -1000, 382, 43569, -1000, 6591, -1000, -1000, -1000,
	275, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 43569, 290,
	-1000, 1849, 1307, -1000, -1000, 1744, -1000, -1000, -1000, -1000,
	252, 363, 246, 1207, 246, -1000, 43569, 637, 1951, 43569,
	-1000, -1000, -1000, 863, 863, -1000, -1000, 2139, -1000, 1423,
	1000, 19691, 19691, -1000, 680, -1000, 1417, -103, 1843, 1843,
	-1000, 1843, 1846, -1000, 1843, 225, 1843, 182, 1843, -1000,
	-1000, -103, 1300, 1788, 1112, -15, -1000, 1779, 19079, 1851,
	1847, 1000, -1000, 1839, 1837, 19079, 1000, 1000, 1000, -1000,
	1779, 1463, 1834, 1524, -1000, -1000, -1000, -1000, 1506, 1000,
	1775, -224, 1300, 1613, 1613, 1613, 1613, 1613, 1583, 1583,
	1583, 1583, 43569, -1000, -130, -1000, -1000, -165, -168, -1000,
	1300, -130, 1498, -1000, -1000, 1300, -1000, 1735, 1707, 1741,
	1693, 1000, 1711, -1000, 2272, 2272, 2272, 1575, 44181, 43569,
	-1000, -1000, -1000, -1000, 2343, 2338, 1475, -1000, -1000, 128,
	449, -1000, 2093, 2192, -1000, 2314, 2076, 2313, -1000, -1000,
	-1000, -1000, -1000, 1779, -1000, 2191, 1513, -1000, 744, 1411,
	-1000, -1000, 17855, 1580, 2045, 602, 1575, 1445, 2428, 1938,
	1953, 2570, -1000, -1000, -1000, -1000, 1998, -1000, 1959, -1000,
	-1000, 1801, -1000, -1000, 1374, 1504, 402, 26433, 1434, 1434,
	-1000, 596, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 885,
	6435, 2397, -1000, 1205, -1000, 1070, 208, 1032, -1000, -1000,
	735, 735, -1000, 815, 802, -1000, 43569, 1836, -1000, 538,
	1198, 538, 1024, -1000, 1015, -1000, -1000, -1000, -1000, 2028,
	2058, -1000, -1000, -1000, -1000, 43569, -1000, -1000, 43569, 43569,
	43569, 1830, 2308, -1000, 19079, 1815, 743, 1753, 43569, 43569,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 467, 735, -369, 349, 344, 735, 735, 735, -399,
	-1000, -1000, 1559, 1546, -1000, -93, -1000, 19079, -1000, -1000,
	-1000, 1029, 1029, -1000, 1801, -1000, -1000, -1000, 1346, -1000,
	-1000, -67, 43569, 43569, 43569, 43569, -1000, 1009, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	680, 19691, 1300, -1000, -1000, 538, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1300, -1000, 19079, -1000, 19079, -1000, 2287,
	1197, 1779, 19079, 19079, -1000, 1014, 1008, 1000, -1000, -1000,
	-1000, 1300, 20303, -1000, 20303, -1000, 19079, 272, 659, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1300,
	401, -1000, -1000, -1000, -1000, 2361, -1000, 1300, 19079, -1000,
	-1000, 19079, -1000, 19079, 19079, -1000, 19079, -1000, 19079, 1417,
	2068, 1417, 1417, 25209, -1000, -1000, 2338, 2331, 2305, 2071,
	2074, 2074, 2093, -1000, 2303, 2302, -1000, 1194, 2298, 1191,
	793, -1000, 43569, 19079, 189, -1000, 390, 43569, 189, 43569,
	-1000, 2328, -1000, -1000, 19079, 1814, -1000, 19079, -1000, -1000,
	-1000, -1000, -1000, 5147, 2343, 1434, -1000, -1000, 697, -1000,
	19079, -1000, -1000, -1000, 5545, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1190, 1187, -1000, -1000, 1802, 19079, -1000,
	-1000, -1000, 1342, 1333, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1801, -1000, -1000, -1000, -1000, 382, -397, 1539,
	43569, 990, -1000, 1535, 1468, 351, 189, 1181, 735, 735,
	735, 967, 962, 30105, 1526, -1000, 43569, 459, -1000, 382,
	-1000, -99, -100, 1000, -1000, -1000, 2242, -1000, -1000, 12322,
	-1000, -1000, 1796, 1860, -1000, -1000, -1000, 295, -1000, -1000,
	-1000, 1000, 1000, 1300, -1000, 1000, 1000, 1321, 1318, -1000,
	-1000, 1524, -1000, 1617, -1000, 272, 1300, 1936, -1000, -1000,
	5147, -1000, -1000, 2328, 2297, 112, -1000, -1000, 281, 112,
	1779, 1611, 1000, 1500, 1442, 1000, 25821, -1000, 2296, 2294,
	30717, 30717, 675, 2331, -137, 19079, 19079, 2061, 1010, -1000,
	-1000, -1000, -1000, 1176, 1175, -1000, 1170, -1000, 2387, -1000,
	1779, -1000, 189, -1000, 586, 1411, -1000, 2287, 1779, 43569,
	1779, 118, 2328, -1000, 1000, -1000, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417, 1417,
	1417, 1417, 1417, 1417, -1000, -1000, 43569, 1158, -1000, -1000,
	2239, 1470, 74, -1000, 1458, -1000, -1000, 152, -1000, 19079,
	-1000, 30105, 1156, 1115, -1000, -1000, -1000, -1000, -399, -1000,
	-1000, -1000, -1000, -1000, -1000, 397, 1460, -1000, 734, 43569,
	43569, 1300, 354, -71, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19079, -1000, 1300, 1934, -1000, -196, -1000,
	-364, 19079, -130, -1000, -1000, -130, -1000, 19079, -1000, -1000,
	19079, -1000, 19079, -1000, 1453, -1000, -1000, -1000, -1000, -1000,
	1453, 1453, -1000, -137, -1000, 1428, -1000, 43569, 1779, 1398,
	-1000, 924, -1000, -1000, -1000, -1000, -1000, 43569, 1411, 43569,
	-1000, 1431, 1300, 1417, 2287, -1000, 1406, -1000, 397, -1000,
	1786, 1712, -1000, -1000, -1000, 17243, -1000, -1000, -1000, -1000,
	-1000, 184, -66, 12322, 9237, 1393, -1000, -1000, 2021, -58,
	-77, 1463, -1000, -281, -1000, -1000, -1000, -1000, 198, -1000,
	-1000, 1398, -1000, -1000, 1314, 1303, 1284, 29493, -1000, -1000,
	-1000, -1000, -137, -1000, -1000, 2233, -1000, -1000, 1367, -1000,
	-1000, 25209, 42957, -1000, -47, 297, -66, 19079, 1701, 1300,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 61, -1000,
	-1000, -1000, -1000, -1000, 1744, -1000, 2010, -1000, 1300, -1000,
	192, -355, -166, -167, -1000, -1000, -1000, 19079, -1000, 19079,
	-1000, 19079, -1000, -1000, -1000, 43569, 1417, -1000, 1338, -1000,
	4778, -179, 1925, -1000, 0, -1000, -1000, -1000, 881, 1114,
	-1000, -1000, -1000, -1000, -1000, -1000, 1044, 43569, -1000, 469,
	-1000, -1000, -67, -69, -1000, 778, -1000, -1000, -1000, -1000,
	-1000, 1184, 1126, 1000, -1000, 43569, -1000, 42957, -173, 679,
	5147, -1000, 1916, 1832, 2365, -1000, -1000, -1000, -1000, -1000,
	-1000, -406, 1328, 305, -1000, -72, 192, -1000, 19079, -1000,
	19079, -1000, 1300, -1000, -1000, 2219, 118, -1000, 2367, -1000,
	2379, 693, 693, -1000, 956, -406, -1000, -83, -1000, 1000,
	1000, -1000, -188, -1000, -1000, -1000, -1000, -1000, 466, 1028,
	-1000, -1000, -1000, -1000, -1000, -1000, 5147, -1000, -1000, -1000,
	270, 270, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2828, 2827, 30, 3, 44, 43, 2825, 38, 117,
	207, 58, 209, 120, 2824, 2823, 2822, 2821, 2820, 2819,
	2818, 271, 236, 229, 2816, 2815, 2813, 2812, 2811, 2810,
	2809, 2808, 2807, 2806, 283, 185, 201, 2805, 2803, 2800,
	145, 202, 107, 110, 198, 2798, 2797, 99, 2788, 2787,
	2786, 194, 189, 188, 860, 2783, 187, 146, 60, 2782,
	2781, 2780, 2779, 2777, 2774, 2773, 2772, 2771, 2758, 2757,
	2755, 2754, 2752, 2751, 2749, 2747, 282, 2745, 2742, 18,
	2739, 105, 2737, 2736, 2735, 2733, 9, 2732, 2731, 16,
	40, 2730, 2728, 49, 2726, 2724, 2722, 2720, 2716, 15,
	2715, 23, 2713, 36, 2712, 2710, 148, 2708, 2707, 2705,
	41, 2703, 2702, 2701, 2700, 2698, 2695, 2694, 163, 2693,
	2691, 2690, 2689, 203, 2687, 2686, 281, 133, 137, 2682,
	2681, 127, 199, 2680, 140, 2675, 2673, 2672, 174, 2671,
	3064, 2670, 2669, 82, 79, 2668, 92, 2667, 2666, 10,
	108, 77, 19, 31, 22, 2665, 2664, 80, 95, 2663,
	144, 124, 89, 2656, 122, 119, 2653, 2651, 12, 6,
	2648, 1, 4, 2, 85, 2645, 2644, 151, 2641, 2634,
	2629, 121, 2622, 2620, 2476, 2616, 111, 156, 126, 93,
	2615, 59, 78, 2614, 2612, 2609, 2606, 2603, 67, 2602,
	2600, 2599, 162, 66, 186, 2596, 45, 55, 61, 159,
	2595, 71, 101, 2594, 161, 160, 2591, 2590, 76, 46,
	47, 2588, 130, 149, 142, 63, 115, 155, 2586, 2584,
	70, 91, 2583, 2582, 2581, 2574, 184, 2573, 2572, 90,
	2568, 68, 2567, 204, 2565, 25, 2563, 73, 50, 2562,
	84, 131, 88, 32, 2560, 181, 2559, 69, 182, 154,
	177, 2558, 2557, 2556, 205, 349, 2553, 2551, 97, 191,
	165, 172, 103, 2546, 351, 2541, 2539, 125, 1594, 5092,
	2538, 26, 180, 2537, 2535, 6190, 164, 53, 27, 2534,
	152, 2533, 2532, 2531, 206, 190, 141, 1028, 74, 2529,
	2528, 94, 13, 2527, 2526, 2525, 2522, 2520, 2519, 98,
	42, 37, 35, 214, 83, 8, 123, 179, 96, 2515,
	2513, 2512, 147, 106, 2511, 178, 175, 158, 183, 2510,
	196, 166, 169, 2509, 86, 34, 2506, 2504, 2502, 2499,
	129, 2492, 2489, 2484, 2474, 176, 167, 143, 102, 2473,
	104, 139, 173, 170, 65, 2469, 48, 2466, 2464, 33,
	195, 28, 2457, 14, 81, 75, 29, 132, 128, 2452,
	0, 2450, 17, 192, 362, 171, 2447, 2443, 7, 5,
	11, 2440, 2438, 2436, 2435, 2434, 157, 2430, 2429, 2428,
	2427, 21, 52, 20, 24, 138, 100, 2425, 2424, 4209,
	1590, 150, 2415, 210,
}

//line sql.y:7557
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	jsonPathParam     JSONPathParam
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jsonPathParamsUnion() []JSONPathParam {
	v, _ := st.union.([]JSONPathParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 397, 398, 398, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 370, 370,
	370, 373, 373, 32, 71, 34, 34, 33, 33, 36,
	36, 35, 8, 8, 8, 9, 9, 9, 9, 9,
	9, 9, 9, 10, 10, 10, 10, 10, 11, 11,
	11, 11, 13, 13, 13, 13, 13, 19, 20, 12,
	12, 21, 21, 104, 104, 22, 23, 23, 23, 23,
	401, 401, 179, 179, 177, 177, 178, 178, 250, 250,
	24, 25, 25, 260, 260, 259, 259, 259, 261, 261,
	261, 261, 297, 297, 26, 26, 26, 26, 26, 124,
	124, 372, 372, 371, 363, 363, 362, 362, 361, 369,
	369, 368, 368, 367, 38, 39, 48, 48, 48, 48,
	49, 50, 374, 374, 336, 55, 55, 54, 54, 54,
	54, 54, 54, 56, 56, 52, 52, 51, 51, 53,
	53, 338, 338, 324, 324, 337, 337, 337, 337, 337,
	337, 337, 323, 323, 135, 135, 228, 228, 228, 228,
	228, 228, 228, 228, 228, 228, 228, 228, 228, 228,
	228, 228, 228, 390, 390, 390, 389, 389, 229, 229,
	229, 229, 229, 229, 229, 229, 145, 145, 157, 157,
	157, 157, 157, 143, 143, 144, 142, 142, 142, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 156, 156, 152, 152, 152, 153, 153,
	153, 154, 154, 391, 391, 391, 391, 302, 302, 302,
	302, 305, 305, 303, 303, 303, 303, 303, 303, 303,
	303, 303, 304, 304, 304, 304, 304, 306, 306, 306,
	306, 306, 307, 307, 307, 307, 307, 307, 307, 307,
	307, 307, 307, 307, 307, 307, 307, 307, 308, 308,
	308, 308, 308, 308, 308, 308, 322, 322, 309, 309,
	317, 317, 318, 318, 318, 319, 319, 319, 320, 320,
	314, 314, 314, 314, 314, 314, 314, 314, 314, 316,
	316, 315, 315, 315, 325, 350, 350, 349, 349, 347,
	347, 347, 347, 347, 347, 347, 347, 334, 334, 344,
	344, 344, 344, 344, 333, 333, 329, 329, 329, 330,
	330, 331, 331, 328, 328, 332, 332, 346, 346, 345,
	345, 326, 326, 327, 327, 352, 392, 392, 392, 392,
	392, 393, 393, 353, 381, 383, 383, 383, 382, 382,
	379, 380, 378, 378, 378, 378, 378, 81, 81, 81,
	272, 272, 273, 273, 342, 342, 341, 341, 341, 343,
	343, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 340, 340, 340, 340, 340, 340, 340, 340,
	340, 340, 267, 267, 267, 377, 377, 377, 377, 377,
	377, 376, 376, 376, 339, 339, 339, 375, 375, 57,
	57, 212, 212, 395, 395, 396, 396, 396, 45, 45,
	45, 45, 45, 45, 44, 44, 44, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 46, 46,
	41, 41, 41, 41, 41, 41, 41, 41, 41, 41,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 106, 106, 107, 107, 107, 107,
	109, 109, 109, 355, 355, 58, 58, 3, 3, 167,
	169, 170, 170, 168, 168, 168, 168, 168, 168, 60,
	60, 59, 59, 172, 171, 173, 173, 173, 1, 1,
	2, 2, 4, 4, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 360, 360, 360, 360,
	360, 360, 360, 360, 360, 360, 321, 321, 321, 354,
	354, 356, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 112, 111, 111, 110, 113, 113, 113, 113,
	113, 113, 113, 113, 358, 358, 358, 61, 61, 359,
	310, 311, 312, 5, 6, 335, 357, 120, 120, 28,
	37, 37, 29, 29, 29, 29, 30, 30, 62, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 384, 384,
	266, 266, 275, 275, 265, 265, 290, 290, 290, 268,
	268, 268, 269, 269, 388, 388, 388, 64, 64, 64,
	66, 66, 67, 68, 68, 292, 292, 293, 293, 69,
	70, 82, 82, 82, 82, 82, 82, 105, 105, 105,
	15, 15, 15, 15, 78, 78, 78, 14, 14, 65,
	65, 72, 385, 385, 386, 387, 387, 387, 387, 73,
	75, 31, 31, 31, 31, 31, 31, 130, 130, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	118, 125, 125, 125, 119, 119, 402, 76, 77, 77,
	123, 123, 123, 116, 116, 116, 122, 122, 122, 16,
	16, 17, 249, 249, 18, 18, 127, 127, 129, 129,
	129, 129, 129, 131, 131, 131, 131, 131, 131, 131,
	126, 126, 128, 128, 128, 128, 283, 283, 283, 282,
	282, 161, 161, 163, 162, 162, 164, 164, 165, 165,
	165, 165, 210, 187, 187, 247, 247, 245, 245, 246,
	246, 248, 248, 248, 248, 251, 251, 166, 166, 166,
	166, 174, 174, 175, 175, 176, 176, 291, 291, 288,
	288, 288, 287, 287, 180, 180, 180, 182, 181, 181,
	181, 181, 183, 183, 185, 185, 184, 184, 186, 191,
	191, 190, 190, 188, 188, 188, 188, 189, 189, 189,
	189, 192, 192, 140, 140, 140, 140, 140, 140, 140,
	155, 155, 155, 155, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 236, 236, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 149, 83, 83, 83, 84, 84, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 86, 141,
	141, 88, 88, 87, 87, 205, 205, 280, 280, 89,
	90, 90, 93, 93, 92, 91, 91, 97, 97, 94,
	94, 96, 96, 95, 98, 98, 99, 100, 100, 263,
	263, 193, 193, 201, 201, 201, 201, 194, 194, 194,
	194, 194, 194, 194, 202, 202, 202, 209, 203, 203,
	199, 199, 199, 199, 197, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	198, 198, 198, 198, 198, 198, 198, 198, 198, 198,
	160, 160, 160, 160, 217, 217, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 148, 148, 299, 299, 366, 366, 365, 365, 364,
	364, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 403, 403, 313, 313, 313, 313, 200, 200,
	200, 200, 200, 121, 121, 121, 121, 121, 296, 296,
	296, 300, 300, 300, 298, 298, 298, 298, 298, 298,
	298, 298, 298, 298, 298, 298, 298, 298, 298, 301,
	301, 215, 215, 117, 117, 213, 213, 214, 216, 216,
	211, 211, 211, 196, 196, 196, 218, 218, 219, 219,
	101, 102, 102, 103, 103, 220, 220, 222, 221, 221,
	223, 224, 224, 224, 225, 225, 226, 226, 226, 47,
	47, 47, 47, 47, 42, 42, 42, 42, 43, 43,
	43, 43, 132, 132, 132, 132, 134, 134, 133, 133,
	79, 79, 80, 80, 80, 138, 138, 139, 139, 139,
	136, 136, 137, 137, 243, 243, 227, 227, 227, 234,
	234, 234, 230, 230, 232, 232, 232, 233, 233, 233,
	231, 240, 240, 242, 242, 241, 241, 237, 237, 238,
	238, 239, 239, 239, 235, 235, 195, 195, 195, 195,
	195, 244, 244, 244, 244, 252, 252, 206, 206, 208,
	208, 207, 207, 159, 253, 253, 257, 254, 254, 258,
	258, 258, 258, 258, 255, 255, 256, 256, 284, 284,
	284, 262, 262, 274, 274, 270, 270, 271, 271, 264,
	264, 276, 276, 276, 74, 204, 204, 351, 351, 348,
	279, 279, 281, 281, 285, 285, 289, 289, 286, 286,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 278, 278,
	278, 278, 278, 278, 278, 278, 278, 278, 399, 400,
	294, 295, 295, 295,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 2, 3, 2, 3, 0, 1, 3,
	1, 4, 3, 3, 4, 3, 2, 3, 4, 3,
	4, 2, 7, 1, 3, 3, 3, 3, 1, 2,
	1, 1, 3, 2, 3, 3, 2, 5, 7, 10,
	9, 7, 8, 1, 1, 10, 11, 9, 8, 8,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 12, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 0,
	1, 1, 3, 3, 6, 4, 7, 8, 8, 8,
	6, 3, 1, 1, 5, 0, 1, 1, 1, 1,
	2, 2, 2, 0, 1, 4, 4, 4, 4, 4,
	4, 2, 4, 1, 3, 1, 1, 3, 4, 3,
	3, 3, 5, 10, 0, 2, 0, 2, 3, 5,
	3, 4, 2, 3, 2, 3, 3, 3, 3, 2,
	2, 4, 4, 1, 1, 1, 1, 1, 0, 2,
	2, 3, 3, 2, 2, 2, 1, 1, 2, 2,
	2, 2, 2, 1, 1, 1, 1, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 1, 1, 1, 5, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 3,
	0, 5, 0, 3, 5, 0, 1, 1, 0, 1,
	0, 3, 3, 2, 2, 2, 1, 2, 2, 0,
	1, 0, 2, 2, 5, 0, 1, 1, 2, 1,
	3, 2, 1, 1, 3, 3, 3, 0, 1, 4,
	3, 3, 4, 2, 0, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 1, 0, 1, 1, 3, 3,
	4, 3, 1, 3, 1, 7, 6, 7, 7, 8,
	8, 0, 1, 5, 2, 1, 1, 1, 0, 1,
	3, 3, 1, 1, 2, 2, 2, 0, 1, 1,
	1, 2, 0, 1, 0, 1, 1, 3, 2, 1,
	2, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	4, 4, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 5, 0, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 0,
	1, 0, 2, 0, 2, 0, 2, 2, 0, 1,
	5, 1, 3, 7, 1, 3, 3, 1, 2, 2,
	2, 5, 5, 5, 6, 8, 5, 5, 4, 4,
	4, 6, 5, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 3, 3, 1, 3, 5, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	3, 4, 4, 2, 11, 3, 6, 8, 6, 6,
	6, 13, 8, 6, 10, 5, 5, 5, 5, 5,
	7, 7, 5, 5, 0, 6, 5, 6, 4, 5,
	0, 8, 9, 0, 3, 0, 1, 0, 3, 8,
	4, 1, 3, 3, 6, 7, 7, 8, 4, 0,
	1, 0, 1, 3, 3, 1, 1, 2, 1, 1,
	0, 2, 0, 2, 5, 3, 7, 4, 4, 4,
	4, 3, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 0, 2, 2, 1,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 3, 3, 0, 2, 2, 2,
	2, 2, 2, 2, 4, 4, 3, 0, 1, 4,
	3, 4, 4, 3, 3, 3, 2, 1, 3, 3,
	3, 5, 7, 7, 6, 5, 3, 2, 3, 3,
	3, 7, 3, 3, 3, 3, 4, 7, 5, 2,
	4, 4, 4, 4, 4, 5, 5, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 2, 4,
	2, 4, 5, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 5, 2, 3, 3, 3, 3, 1, 1,
	0, 1, 0, 1, 1, 1, 0, 2, 2, 0,
	2, 2, 0, 2, 0, 1, 1, 2, 1, 3,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 1, 3, 2, 1, 2, 1, 2, 2,
	4, 3, 3, 6, 4, 7, 6, 1, 3, 2,
	2, 2, 2, 1, 1, 1, 3, 2, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 0, 2,
	1, 2, 2, 0, 1, 1, 0, 1, 1, 5,
	5, 4, 0, 2, 4, 4, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 1, 2, 1, 3, 1, 1, 1, 4,
	3, 1, 3, 3, 7, 0, 3, 1, 3, 1,
	3, 1, 1, 3, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	1, 1, 2, 6, 5, 6, 6, 0, 2, 3,
	3, 0, 2, 3, 3, 3, 2, 3, 1, 6,
	3, 4, 3, 1, 3, 4, 5, 6, 3, 4,
	5, 6, 3, 4, 1, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 1,
	1, 1, 1, 1, 3, 1, 1, 2, 2, 2,
	2, 1, 1, 2, 9, 7, 7, 6, 2, 2,
	1, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 5, 4, 4, 4, 4, 4, 7, 4,
	6, 6, 6, 4, 4, 4, 7, 8, 6, 5,
	6, 8, 11, 7, 8, 8, 9, 4, 4, 4,
	4, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 4, 4, 6, 5, 9, 6, 9, 1, 1,
	1, 1, 1, 1, 0, 2, 6, 8, 10, 12,
	14, 6, 8, 8, 10, 12, 14, 6, 8, 10,
	12, 6, 8, 0, 2, 0, 2, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 2, 3, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 0, 5, 5, 2, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 2, 1, 1, 0,
	1, 0, 1, 0, 2, 1, 2, 4, 0, 2,
	1, 3, 5, 1, 2, 2, 0, 3, 0, 2,
	2, 1, 3, 0, 1, 0, 1, 3, 1, 3,
	2, 0, 1, 1, 0, 1, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 0, 3, 3, 3, 0, 3, 1, 1,
	0, 4, 0, 1, 1, 0, 3, 1, 3, 2,
	1, 1, 0, 1, 2, 4, 9, 3, 5, 0,
	3, 3, 0, 1, 0, 2, 2, 0, 2, 2,
	2, 0, 2, 1, 2, 3, 3, 0, 2, 1,
	2, 3, 4, 3, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 4, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -397, -7, -11, -19, -20, -21, -22, -23, -24,
	-25, -26, -27, -28, -29, -30, -62, -63, -64, -66,
	-67, -68, -69, -70, -14, -65, -31, -32, -71, -72,
	-73, -74, -75, -16, -17, -18, -9, -8, -13, 9,
	10, -104, -33, 32, -38, -48, 222, -49, -39, 223,
	-50, 225, 224, 261, 226, 254, 74, 307, 308, 310,
	311, 312, 313, -105, 259, 260, 228, 36, 45, 33,
	34, 37, 232, 267, 268, 231, -10, -34, 8, -399,
	11, 437, 256, 255, 28, -12, 477, 86, -398, 621,
	-243, -227, 22, 33, 29, -226, -222, -123, -227, 20,
	18, 7, -76, -402, -76, -76, 12, 13, -76, -336,
	-338, 86, 156, 86, -76, -55, -54, -52, -51, -53,
	-56, 31, -45, -46, -360, -44, -41, 227, 224, 271,
	120, 121, 261, 262, 263, 226, 245, 260, 264, 259,
	280, -40, 81, 33, 477, 480, -343, 223, 229, 230,
	225, 438, 123, 122, 75, -340, 361, 510, 591, -56,
	593, 102, 104, 592, 44, 235, 594, 595, 596, 517,
	597, 244, 598, 599, 600, 601, 607, 559, 608, 609,
	610, 124, 7, -76, -289, -285, -370, -278, 89, 90,
	91, 474, 247, 508, 509, 296, 81, 41, 483, 358,
	361, 510, 591, 307, 321, 315, 342, 334, 475, 511,
	484, 299, 248, 284, 585, 332, 132, 593, 302, 512,
	262, 366, 367, 513, 368, 102, 310, 404, 606, 301,
	514, 604, 104, 592, 79, 51, 588, 44, 257, 330,
	231, 326, 594, 285, 515, 486, 278, 123, 120, 613,
	36, 324, 50, 30, 603, 122, 49, 595, 147, 516,
	596, 517, 370, 349, 579, 48, 371, 263, 518, 84,
	268, 479, 305, 587, 372, 471, 325, 373, 295, 602,
	228, 519, 571, 374, 375, 580, 520, 350, 354, 521,
	396, 376, 620, 52, 522, 523, 581, 121, 524, 78,
	597, 80, 319, 320, 525, 293, 246, 398, 346, 450,
	457, 458, 108, 109, 453, 110, 459, 111, 460, 461,
	462, 451, 112, 105, 452, 463, 464, 347, 348, 113,
	465, 107, 106, 454, 456, 114, 466, 244, 35, 377,
	476, 297, 58, 272, 399, 46, 352, 617, 45, 575,
	526, 578, 345, 341, 447, 53, 527, 528, 529, 530,
	598, 344, 318, 340, 612, 4, 290, 599, 62, 230,
	356, 355, 357, 279, 395, 337, 531, 532, 533, 251,
	82, 534, 327, 21, 535, 536, 378, 286, 537, 56,
	538, 539, 402, 260, 540, 54, 600, 39, 541, 265,
	614, 601, 542, 543, 544, 545, 267, 546, 380, 547,
	379, 351, 353, 274, 381, 478, 548, 306, 323, 264,
	605, 549, 252, 467, 468, 469, 470, 586, 266, 271,
	259, 403, 253, 550, 551, 552, 553, 554, 300, 570,
	555, 556, 311, 607, 448, 43, 557, 558, 559, 560,
	561, 294, 289, 397, 406, 61, 83, 363, 562, 563,
	584, 317, 287, 564, 308, 55, 608, 609, 610, 281,
	611, 9, 618, 619, 383, 124, 291, 292, 47, 338,
	273, 565, 303, 566, 328, 329, 343, 316, 339, 309,
	572, 275, 384, 449, 261, 567, 405, 288, 359, 364,
	304, 482, 472, 280, 385, 583, 481, 336, 333, 282,
	568, 386, 236, 276, 277, 569, 573, 387, 388, 298,
	389, 390, 391, 392, 394, 393, 283, 480, 314, 331,
	365, 418, 419, 420, 421, 422, 423, 424, 425, 426,
	427, 428, 429, 430, 431, 432, 433, 434, 435, 446,
	234, -76, 234, -184, -285, 234, -255, 367, -275, 369,
	382, 377, 387, 375, -266, 378, 380, 274, -388, 396,
	234, 384, 222, 174, 370, 379, 388, 389, 298, 394,
	390, 393, 283, -384, -370, 596, 611, 132, 335, 374,
	372, 397, 575, 392, 391, -285, 309, -292, 314, -279,
	-370, -278, 312, -184, -82, 571, 226, -294, -294, -125,
	575, 577, -203, -140, 140, -155, -158, -146, -150, -197,
	-198, -199, -200, -156, -211, 163, 164, 171, 141, -209,
	-159, 26, 473, 439, 438, 174, 31, -149, 68, 69,
	441, 442, 143, 57, 414, 415, -157, 409, 416, 411,
	444, 445, 115, 446, 105, 107, 106, 447, 448, 449,
	347, 348, 450, 451, 452, 108, 109, 110, 111, 112,
	113, 114, 453, 456, 454, 455, 457, 458, 459, 464,
	465, 460, 461, 462, 463, 466, -85, -97, 499, 498,
	-98, -147, -148, -279, -285, 239, 408, 233, 169, 437,
	-151, -144, -8, -207, 217, 407, 412, 413, 417, 410,
	485, 487, 502, 503, 505, 490, 495, 494, 497, 467,
	468, 469, 470, 471, 472, -370, -278, -153, -152, -193,
	92, 98, 103, 99, -394, 116, -399, 589, 93, 94,
	95, 96, 97, 117, 118, 175, 176, 177, 178, 179,
	180, 181, 182, 183, 184, 185, 186, 187, 188, 189,
	190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 44, 383, 383,
	-184, -76, -76, -76, -76, -220, -123, -222, -10, -8,
	-399, 8, -76, -8, -9, -13, -34, -36, 504, -35,
	-285, -227, -243, 12, 159, 42, 50, -225, -226, -12,
	-8, -140, 19, 23, 24, -128, 165, -140, -285, -77,
	-128, -264, 238, -76, -76, -254, -297, 309, -258, 397,
	396, -281, -256, -279, -277, -255, 395, 227, 23, 139,
	25, 27, 142, 174, 127, 19, 143, 37, 229, 335,
	245, 173, 241, 438, 222, 72, 485, 409, 411, 407,
	414, 440, 441, 408, 369, 31, 13, 487, 28, 255,
	24, 38, 167, 224, 146, 488, 258, 26, 256, 115,
	118, 490, 22, 75, 250, 14, 243, 40, 16, 491,
	492, 17, 239, 238, 159, 235, 70, 11, 217, 29,
	155, 66, 493, 134, 494, 495, 496, 497, 128, 68,
	156, 20, 615, 412, 413, 33, 576, 473, 269, 169,
	73, 59, 577, 140, 410, 498, 499, 116, 500, 119,
	76, 582, 136, 18, 71, 42, 501, 270, 502, 240,
	616, 503, 400, 504, 157, 225, 437, 69, 158, 589,
	505, 590, 233, 382, 8, 443, 32, 254, 242, 126,
	67, 506, 234, 145, 444, 445, 237, 129, 117, 7,
	133, 34, 12, 74, 77, 415, 416, 417, 57, 125,
	477, 144, 15, 507, 401, 138, 132, -337, 156, -323,
	-327, -279, 249, -353, 245, -184, -346, -345, -279, -399,
	-124, -274, 235, 243, 242, 133, -374, 136, 291, 408,
	233, -51, -52, -53, -255, 173, 595, -106, 266, 270,
	87, 87, -327, -326, -325, -375, 270, 249, -352, -344,
	241, 250, -333, 242, 243, -328, 235, 134, -375, -328,
	240, 250, 245, 249, 270, 270, 124, 270, 124, 270,
	270, 270, 270, 270, 270, 270, 270, 270, 265, -334,
	148, -334, 481, 481, -340, -375, 245, 235, -375, -375,
	241, -276, -328, 237, 25, 237, 35, 35, -334, -334,
	-334, -255, 173, -334, -334, -334, -334, 278, 278, -334,
	-334, -334, -334, -334, -334, -334, -334, -334, -334, -334,
	-334, -334, -334, -334, -334, -334, 234, -374, -132, 393,
	298, 81, -54, 280, -37, -184, -274, 235, 236, -374,
	267, -184, 218, -184, -268, 156, 15, -268, -265, 383,
	381, 368, 373, -268, -268, -268, -268, 281, 366, -329,
	235, 35, 246, 383, 281, 366, 281, 282, 281, 282,
	376, 386, 281, -290, 14, 159, 408, 371, 375, 274,
	234, 275, 236, 385, -370, 578, 282, -290, 93, -269,
	156, 383, 277, -268, -295, -399, -281, 335, -295, -295,
	32, 90, 237, -279, -78, -279, 93, -15, -11, -22,
	-21, -23, 148, -130, 383, -118, 174, 596, 579, 580,
	581, 578, 380, 586, 584, 582, 281, 583, 87, 136,
	138, 139, 4, -140, 155, -194, 148, 149, 150, 151,
	152, 153, 154, 159, 140, 142, 156, -236, 137, 160,
	161, 162, 163, 164, 165, 166, 168, 167, 169, 170,
	157, 158, 173, 220, 221, -150, -150, -150, -150, -209,
	-399, -399, -399, -150, -263, -399, -399, -399, -399, -399,
	-215, -140, -399, -403, -399, -403, -403, -313, -399, -313,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, -399, -399, -399, -399, -399, -399, -399, -399,
	-399, -399, 218, -399, -399, -399, -399, -399, -150, -313,
	-313, -313, -313, -313, -399, -399, -399, -399, -399, -399,
	103, 98, 92, -211, 99, 93, -279, -285, -8, -9,
	-203, -399, -294, -385, -386, -187, -184, -399, 298, -279,
	-279, 267, -225, -12, -8, -220, -226, -222, -8, -76,
	-116, -129, 63, 64, -131, 24, 38, 67, 65, 23,
	-400, 88, -400, -243, -400, 87, -36, -247, 86, 61,
	43, 93, 93, 87, 21, -221, -223, -140, 14, -283,
	4, -282, 25, -279, 93, 218, 101, 14, -185, 29,
	-184, -264, -264, 87, 309, -258, -297, -260, -259, 398,
	400, 148, -284, -279, 93, 31, 88, 87, -184, -302,
	-305, -307, -306, -308, -303, -304, 332, 333, 174, 336,
	338, 339, 340, 341, 342, 343, 344, 345, 346, 349,
	32, 257, 328, 329, 330, 331, 350, 351, 352, 353,
	354, 355, 356, 357, 315, 334, 475, 316, 317, 318,
	319, 320, 321, 323, 324, 325, 326, 327, -373, -370,
	86, 88, 87, -309, 86, -140, -132, 234, -370, 235,
	235, 235, -76, 437, -334, -334, -334, 265, 19, -44,
	-41, -360, 18, -40, -41, 227, 120, 121, 224, 86,
	-323, 86, -332, -373, -370, 86, 134, 240, 133, -331,
	-328, -331, -332, -370, -211, -370, 134, 134, -370, -370,
	-251, -279, -251, -251, 23, -251, 23, -251, 23, 95,
	-279, -251, 23, -251, 23, -251, 23, -251, 23, -251,
	23, 31, 78, 79, 80, 31, 82, 83, 84, -211,
	-370, -370, -211, -323, -211, -184, -370, -255, 95, 95,
	95, -334, -334, 95, 93, 93, 93, -334, -334, 95,
	93, -287, -285, 93, 93, -376, 251, 295, 297, 95,
	95, 95, 95, 31, 93, -377, 31, 603, 602, 604,
	605, 606, 93, 95, 31, 95, 31, 95, -279, 86,
	-184, -138, 285, 222, 224, 227, 76, 93, 299, 303,
	304, 148, 44, 87, 237, 234, -370, -270, 239, -270,
	-279, -286, -285, -277, 93, -140, -330, 14, 159, -290,
	-290, -268, -184, -330, -290, -268, -184, -268, -268, -268,
	-268, -290, -290, -290, -268, -285, -285, -184, -184, -184,
	-184, -184, -184, -184, -295, -295, -295, -269, -268, 578,
	93, 76, -293, 312, 346, 572, 573, 574, 87, 477,
	-177, -184, 578, 578, 578, 578, 578, 578, -140, -140,
	-140, -140, 500, -201, 116, 140, 117, 118, -158, -202,
	-207, -209, 100, 159, 142, 156, -236, -146, -150, -146,
	-146, -146, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -296, -279, 93, 174, -154, -153, 99, -394,
	-154, -126, -128, -140, -140, -370, -126, -126, -140, -122,
	24, 38, -213, -214, 144, -211, -400, -400, 95, 99,
	-279, -279, -115, -114, 419, 420, 421, 422, 424, 425,
	426, 429, 430, 434, 435, 418, 436, 423, 428, 431,
	432, 433, 427, 331, -140, -140, -140, -140, -140, -140,
	-83, -140, 127, 128, 129, -140, -140, -204, -203, -369,
	-368, -367, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -400, -140, -160, -144, 95,
	-370, 99, -140, -140, -127, 24, 38, -126, -281, -286,
	-277, -126, -127, -127, -126, -126, -279, -140, -140, -140,
	-140, -140, -140, 218, -243, -400, -203, 87, -387, 400,
	401, 576, -288, 270, -287, 25, -204, 93, 14, -249,
	77, -279, -225, -225, 63, 64, 59, -126, -131, -400,
	-35, 25, -245, -279, 62, 93, -314, -255, 358, 359,
	174, -140, -140, 87, -224, 27, 28, -184, -282, 165,
	-286, -184, -250, 270, -184, -162, -164, -165, -166, -187,
	-210, -399, -167, 493, 14, -177, -178, -186, -285, -258,
	-260, 87, 399, 401, 402, 76, 119, -140, -315, 173,
	-342, -341, -340, -323, -325, -326, -327, 88, -315, -319,
	364, 363, -309, -309, -309, -309, -309, -314, -314, -314,
	-314, 86, 86, -309, -309, -309, -309, -317, 86, -317,
	-317, -318, 86, -318, -353, -140, -350, -349, -347, -348,
	244, 102, 569, 525, 477, 517, 559, 77, -345, -224,
	95, -400, -138, -271, 239, -351, -348, -370, -370, -370,
	-271, -370, 93, -370, 93, -370, 93, -107, -58, -1,
	615, 616, 617, 87, 19, -324, -323, -57, 295, -356,
	-357, 270, -352, -346, -332, 134, -331, -332, -332, -370,
	87, 29, 124, 124, 124, 124, 477, 224, 32, -272,
	516, 140, 569, 525, -323, -57, 237, 237, -296, -296,
	-296, 93, 93, -267, 611, -177, -134, 287, 148, 276,
	276, 234, 234, 289, -184, 300, 302, 301, 299, 303,
	304, 23, 23, 23, 288, 290, 292, 278, -184, -184,
	-270, 76, -179, -184, 26, -285, -184, -268, -268, -184,
	-268, -268, -184, -279, -118, 400, 87, 477, 22, -119,
	22, -399, 116, 117, 118, -202, -146, -150, -146, 139,
	258, 87, -400, 25, 87, 77, -400, -400, -400, 87,
	14, -126, -216, -214, 146, -140, -400, -400, -400, 87,
	87, 14, -300, 25, -400, -400, -400, -400, -400, -215,
	-400, 14, 87, 87, -400, -400, 87, 87, -400, 87,
	87, 87, -366, 87, 87, 87, 87, -400, -400, -400,
	-400, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, -400, -90, 501, -400, -400, 87, -400, 87, -400,
	-126, -126, -399, 218, -400, -400, -400, -400, -400, 87,
	87, 87, 87, 87, 87, -281, -400, -386, 575, 401,
	-191, -190, -188, 74, 238, 75, -399, -287, -400, -154,
	90, -246, 90, -245, -196, -279, 95, 99, -227, -161,
	-163, 14, -131, -209, 88, 87, -314, -231, -237, -265,
	-279, 93, 174, -316, 174, -316, 358, 359, -223, 218,
	-192, 15, -195, 32, 57, -11, -399, -399, 32, 87,
	-180, -182, -181, -183, 66, 70, 72, 67, 68, 69,
	73, -291, 25, -162, -9, -8, -399, -399, -184, -177,
	-401, 14, 77, -401, 87, 218, -259, -261, 403, 400,
	406, -370, 93, -106, 87, -340, -327, -228, -135, 40,
	-320, 365, -314, 484, -314, -322, 93, -322, 95, 95,
	88, -47, -42, -43, 33, 81, -347, -334, 93, 39,
	-334, -334, -279, 88, -224, -134, -184, 140, 76, -351,
	-351, -351, -285, -2, 614, 620, 134, 86, 368, 18,
	-245, 87, 88, -212, 296, 88, -108, -279, 88, 86,
	-332, -332, -279, -399, 234, 31, 31, 569, 525, 516,
	-57, -212, -211, -370, -315, 613, 612, 88, 236, 294,
	-139, 414, -136, 93, 89, -184, -184, -184, -184, -184,
	227, 224, -395, 305, -395, 279, 237, -177, -184, 87,
	-81, 253, 248, -290, -290, 33, -184, 400, 587, 585,
	-140, 139, 258, -158, -150, -128, 474, -298, 174, 332,
	257, 330, 326, 346, 337, 363, 328, 364, 325, 324,
	323, -298, -296, -140, -140, -220, 147, -140, 145, -140,
	-140, -140, -400, 174, 332, 14, -140, -140, -140, -367,
	-140, -140, -140, -365, -364, -154, -211, -400, -365, -140,
	-140, -364, -364, -368, -368, -368, -368, -368, -203, -203,
	-203, -203, -399, -279, -93, -92, -91, 552, 238, -90,
	-160, -93, -160, -400, -400, -127, -281, -140, -140, -140,
	-140, -140, -140, -188, -328, -328, -328, -251, 87, -262,
	22, 14, 57, 57, -161, -192, -162, -131, -279, -234,
	571, -240, 46, -238, -239, 47, -235, 48, 56, -316,
	-316, 165, -225, -140, -252, 76, -253, -257, -211, -206,
	-208, -207, -399, -244, -400, -279, -251, -253, -164, -165,
	-165, -164, -165, 66, 66, 66, 71, 66, 71, 66,
	-181, -285, -400, -400, -9, -140, -288, 77, -162, -162,
	-186, -285, 165, 400, 404, 405, -340, -393, 116, 140,
	31, 76, 361, 102, -391, 173, 513, 564, 569, 525,
	517, 559, -392, 240, 133, 134, 252, 25, 41, 88,
	87, 88, 87, 88, 87, -273, -272, -43, -42, -334,
	-334, 95, -370, 93, 93, 236, 26, -184, 76, 76,
	76, -109, 618, 95, 86, -3, 81, -140, 86, 19,
	-323, -211, -358, -310, -359, -311, -312, -5, -6, -335,
	-112, 57, 102, -61, 44, 235, 598, 599, 124, -399,
	611, -350, -245, -354, -356, -184, -143, -399, -142, -144,
	-151, 163, 164, -212, -184, -133, 285, 293, 86, -137,
	90, -372, 77, 276, 361, 276, -396, 306, 93, -396,
	-184, -81, -47, -184, -268, -268, 33, -370, -400, -158,
	-150, -399, -301, 483, -309, -309, -309, -318, -309, 320,
	-309, 320, -309, -301, -400, 87, -400, 22, -400, -117,
	443, -140, 87, 87, -400, 86, 86, -140, -400, -400,
	-400, -366, 87, -400, 87, -400, 87, -299, 570, -400,
	-400, -400, -400, -400, -400, -400, -400, -400, -400, -89,
	-280, -279, -90, 534, 534, -400, -90, -217, 87, -400,
	-400, 87, -400, 87, 87, -400, 87, -400, 87, -189,
	22, -189, -189, -400, 90, -184, -192, -218, 16, -231,
	51, 338, -242, -241, 55, 47, -239, 19, 49, 19,
	30, -252, 87, 148, 87, -400, -400, 87, 57, 218,
	-400, -192, -175, -174, 76, 77, -176, 76, -174, 66,
	66, -247, -400, 87, -250, -162, -192, -192, 218, 116,
	-399, -145, -157, -143, 12, 93, 93, -370, -390, 602,
	603, 31, 95, -334, -334, 134, 134, -184, 86, -314,
	93, -314, 95, 95, 31, 82, 83, 84, 31, 78,
	79, 80, -184, -184, -184, -184, -355, 86, 19, -140,
	86, 148, 88, -245, -245, 272, 159, -334, 596, 278,
	278, -334, -334, -334, -111, -110, 618, 88, -400, 87,
	-321, 477, 480, -140, -152, -152, -247, 88, -363, 477,
	-371, -279, -279, -279, -279, 95, 97, -146, -400, -314,
	-400, -140, -140, -225, 93, -140, -140, 95, 95, -400,
	-400, -365, -364, -140, -400, -172, -171, -173, 579, 116,
	31, -298, -400, -205, 270, -96, -95, -94, 14, -400,
	-140, -140, -140, -140, -140, -140, -399, 66, 18, 16,
	-399, -399, -288, -218, -219, 17, 19, -232, 53, -230,
	52, -230, -241, 19, 19, 93, 19, 93, 134, -257,
	-140, -208, 57, -11, -279, -206, -279, -220, -140, 86,
	-140, -154, -192, -192, -140, -198, 446, 105, 107, 106,
	447, 448, 449, 347, 348, 450, 451, 452, 108, 109,
	110, 111, 112, 113, 114, 453, 456, 454, 457, 458,
	459, 464, 465, 460, 461, 462, 463, 466, 467, 468,
	469, 470, 471, 472, 93, 93, 86, -140, 88, 88,
	-247, -354, -58, 88, -245, 95, 88, 273, -207, -399,
	93, -334, -334, -334, 95, 95, -287, -400, 87, -279,
	-392, -356, 481, 481, -400, 25, -362, -361, -281, 86,
	77, -121, 159, 477, -400, -400, -400, -400, -400, 88,
	88, -400, -400, 87, -400, -171, -173, -400, 76, -154,
	-220, 19, -93, 295, 297, -93, -400, 87, -400, -400,
	87, -400, 87, -400, -248, -400, -279, 240, 19, 19,
	-248, -248, -191, -219, -103, -102, -101, 507, -140, -203,
	-233, 54, 76, 119, 93, 93, 93, 12, -206, 218,
	-225, -245, -169, 368, -220, -400, -245, 88, 25, 88,
	620, 134, 88, -207, -120, -399, 269, -287, 93, 93,
	-110, -113, -11, 87, 148, -245, -184, -400, 475, 73,
	478, -140, -400, 76, 488, 579, -88, -87, -84, 590,
	616, -203, -90, -90, -140, -140, -140, 87, -400, -400,
	-400, -103, 87, -100, -99, -279, 76, 119, -253, -279,
	88, -400, -399, -225, 88, -229, -11, 86, -3, 269,
	-310, -359, -311, -312, -5, -6, -335, -79, 477, -361,
	-339, -281, 93, 95, 88, 62, 476, 479, -366, -86,
	142, 588, 567, -141, -152, -149, -400, 87, -400, 87,
	-400, 87, -279, 240, -101, 87, 25, -288, -170, -168,
	-279, 531, -382, -381, 473, -393, -389, 116, 140, 102,
	-391, 569, 525, 125, 126, -79, -140, 86, -400, -80,
	284, 575, -372, 62, -400, -86, 589, 545, 519, 545,
	519, -140, -140, -140, -99, -399, -400, 87, 22, -302,
	-60, 542, -379, -380, 76, -383, 374, 541, 562, 116,
	93, 88, -245, 245, -363, 477, 139, -400, 87, -400,
	87, -400, -89, -168, 538, -315, -154, -380, 76, -379,
	76, 13, 12, -4, 619, 88, 286, 478, -86, -140,
	-140, -400, -59, 26, -169, -378, 253, 248, 251, 32,
	-378, 95, -4, 479, -400, -400, 542, 247, 31, 116,
	-154, -172, -171, -171,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 34, 35, 36, 68, 70, 71, 826,
	826, 826, 0, 826, 0, 0, 826, -2, -2, 826,
	1396, 0, 826, 0, 0, -2, 758, 760, 0, 762,
	-2, 0, 0, 771, 1910, 1910, 821, 0, 0, 0,
	0, 0, 826, 826, 826, 826, 1255, 48, 826, 0,
	83, 84, 777, 778, 779, 63, 0, 1908, 1, 3,
	69, 73, 0, 0, 0, 56, 1264, 0, 76, 0,
	0, 830, 0, 828, 0, 1379, 826, 826, 0, 114,
	115, 0, 0, 0, -2, 118, -2, 147, 148, 149,
	0, 154, 574, 501, 553, 499, 538, -2, 487, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 377, 377, 0, 0, -2, 487, 487, 487,
	1381, 0, 0, 0, 535, 439, 377, 377, 377, 0,
	377, 377, 377, 377, 0, 0, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 1282, 153, 1397, 1394, 1395, 38, 39,
	40, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557,
	1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567,
	1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577,
	1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587,
	1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597,
	1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607,
	1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617,
	1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627,
	1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637,
	1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647,
	1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657,
	1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687,
	1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697,
	1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707,
	1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717,
	1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
	1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767,
	1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777,
	1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787,
	1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797,
	1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807,
	1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817,
	1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827,
	1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837,
	1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
	1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887,
	1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897,
	1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907,
	0, 1373, 0, 687, 926, 0, 749, 749, 0, 749,
	749, 749, 749, 0, 0, 0, 699, 0, 0, 0,
	0, 746, 0, 0, 718, 720, 0, 746, 0, 728,
	752, 0, 733, 749, 1911, 1911, 1911, 1364, 0, 743,
	741, 755, 756, 738, 739, 757, 761, 0, 766, 769,
	1390, 1391, 0, 784, 47, 1640, 776, 789, 790, 0,
	822, 823, 43, 1068, 0, 948, 953, 964, 979, 980,
	981, 982, 983, 985, 986, 0, 0, 0, 0, 991,
	992, 0, 0, 0, 0, 0, 1049, 1000, 0, 0,
	0, 0, 1231, 0, 1192, 1192, 1085, 1192, 1194, 1194,
	0, 0, 0, 1907, 1681, 1689, 1690, 1712, 1802, 1851,
	1685, 1686, 1667, 1679, 1682, 1670, 1671, 1673, 1675, 1680,
	1687, 1693, 1672, 1692, 1691, 0, 1668, 1669, 1674, 1684,
	1688, 1676, 1677, 1678, 1683, 1694, 0, 0, 0, 0,
	0, 1138, 1139, 1240, 0, 0, 0, 0, 0, 0,
	273, 274, 1067, 1353, 0, 1194, 1194, 1194, 1194, 1194,
	1009, 1010, 1011, 1012, 1013, 1037, 1038, 1044, 1045, 1781,
	1782, 1783, 1784, 1633, 1860, -2, -2, 219, 220, 221,
	222, 223, 224, 225, 0, 215, 0, 0, 278, 279,
	275, 276, 277, 1051, 1052, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 249, 250, 251, 252, 253, 254, 255,
	256, 257, 258, 259, 260, 261, 262, 263, 264, 265,
	266, 267, 268, 269, 270, 271, 272, 1910, 0, 799,
	0, 0, 0, 0, 0, 1264, 0, 1256, 1255, 61,
	0, 826, -2, 0, 0, 0, 0, 45, 0, 50,
	885, 75, 74, 1304, 0, 0, 0, 57, 1265, 65,
	67, 1266, 0, 831, 832, 0, 862, 866, 0, 827,
	0, 0, 1380, 1379, 1379, 100, 0, 1847, 1357, -2,
	-2, 0, 0, 1392, 1393, 1366, -2, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522,
	1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532,
	1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542,
	1543, 1544, 1545, 1546, 1547, 1548, -2, 0, 0, 165,
	166, 0, 41, 404, 0, 161, 0, 397, 338, 0,
	1282, 0, 0, 0, 0, 0, 826, 0, 1374, 142,
	143, 150, 151, 152, 377, 377, 377, 550, 0, 0,
	153, 153, 508, 509, 510, 0, 0, -2, 402, 0,
	488, 0, 0, 391, 391, 395, 393, 394, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 0, 528, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 635, 0,
	378, 0, 548, 549, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 1383, 0, 525, 526, 0, 0,
	0, 377, 377, 0, 0, 0, 0, 377, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 141, 1295, 0,
	0, 0, -2, 0, 679, 0, 0, 0, 1375, 1375,
	0, 686, 0, 688, 689, 0, 0, 690, 0, 746,
	746, 744, 745, 692, 693, 694, 695, 749, 0, 0,
	386, 387, 388, 746, 749, 0, 749, 749, 749, 749,
	746, 746, 746, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1911, 1911, 1911, 752, 749, 0, 729,
	0, 730, 731, 734, 735, 1912, 1913, 1412, 736, 737,
	1365, 759, 767, 770, 787, 785, 786, 788, 780, 781,
	782, 783, 0, 801, 802, 807, 0, 0, 0, 0,
	813, 814, 815, 0, 0, 818, 819, 820, 0, 0,
	0, 0, 0, 946, 0, 0, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	965, 966, 0, 0, 0, 987, 988, 989, 990, 993,
	0, 0, 0, 998, 999, 0, 0, 0, 0, 836,
	0, 1232, 0, 1083, 0, 1084, 1086, 1087, 0, 1088,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1385, 129, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 846, 0, 0, 846, 846, 0, 0, 0, 208,
	209, 210, 211, 212, 0, 0, 0, 0, 0, 0,
	226, 227, 228, 229, 230, 280, 1240, 0, 1067, 0,
	0, 0, 44, 791, 792, 0, 909, 1385, 0, 0,
	842, 0, 55, 64, 66, 1264, 59, 1264, 0, 848,
	0, 0, -2, -2, 849, 855, 856, 857, 858, 859,
	52, 1909, 53, 0, 72, 0, 46, 0, 0, 0,
	0, 350, 1307, 0, 0, 1257, 1258, 1261, 0, 863,
	1723, 867, 0, 869, 870, 0, 829, 0, 98, 0,
	925, 0, 0, 0, 1847, 1363, 0, 102, 103, 0,
	0, 0, 361, 1368, 1369, 1370, -2, 384, 0, 361,
	345, 288, 289, 290, 338, 292, 338, 338, 338, 338,
	350, 350, 350, 350, 321, 322, 323, 324, 325, 0,
	0, 307, 338, 338, 338, 338, 328, 329, 330, 331,
	332, 333, 334, 335, 293, 294, 295, 296, 297, 298,
	299, 300, 301, 340, 340, 340, 342, 342, 0, 42,
	0, 365, 0, 1261, 0, 0, 1295, 1377, 1387, 0,
	0, 0, 1377, 120, 0, 0, 0, 551, 585, 502,
	539, 552, 0, 505, 506, -2, 0, 0, 487, 0,
	489, 0, 385, 0, -2, 0, 395, 0, 391, 395,
	392, 395, 383, 396, 529, 530, 531, 0, 533, 534,
	615, 895, 0, 0, 0, 0, 0, 621, 622, 623,
	0, 625, 626, 627, 628, 629, 630, 631, 632, 633,
	634, 540, 541, 542, 543, 544, 545, 546, 547, 0,
	0, 0, 0, 489, 0, 536, 0, 0, 441, 442,
	443, 0, 0, 446, 447, 448, 449, 0, 0, 452,
	453, 454, 912, 913, 455, 456, 481, 482, 483, 457,
	458, 459, 460, 461, 462, 463, 475, 476, 477, 478,
	479, 480, 464, 465, 466, 467, 468, 469, 472, 0,
	135, 1286, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1375, 0, 0, 0, 0,
	845, 927, 1398, 1399, 750, 751, 0, 389, 390, 749,
	749, 696, 719, 0, 749, 700, 721, 701, 703, 702,
	704, 723, 724, 749, 707, 747, 748, 708, 709, 710,
	711, 712, 713, 714, 715, 716, 717, 725, 726, 727,
	753, 0, 0, 768, 772, 773, 774, 775, 0, 0,
	804, 94, 809, 810, 811, 812, 824, 817, 1069, 943,
	944, 945, 0, 947, 950, 0, 1053, 1055, 952, 954,
	1064, 1065, 1066, 0, 0, 0, 0, 0, 958, 962,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 984, 1208, 1209, 1210, 1001, 281, 282, 0,
	1002, 0, 860, 0, 0, 0, 0, 0, 0, 0,
	837, 838, 1238, 1235, 0, 0, 1193, 1195, 0, 0,
	0, 0, 0, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1211, 0, 0, 0, 0, 0,
	1231, 0, 1004, 1005, 1006, 0, 0, 0, 1386, 0,
	130, 131, 0, 0, 0, 0, 0, 1165, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1140, 1141,
	1142, 1143, 0, 0, 0, 0, 0, 847, 1241, 0,
	-2, 0, 0, 0, 0, 0, 1003, 0, 0, 0,
	0, 0, 0, 0, 0, 1351, 0, 0, 794, 795,
	797, 0, 929, 0, 910, 0, 0, 800, 0, 841,
	0, 844, 58, 60, 853, 854, 0, 871, 850, 54,
	49, 0, 0, 887, 1305, 350, 1327, 0, 359, 359,
	356, 1267, 1268, 0, 1260, 1262, 1263, 77, 868, 864,
	0, 941, 0, 0, 924, 0, 874, 876, 877, 878,
	907, 0, 881, 0, 0, 0, 0, 96, 926, 1358,
	101, 0, 0, 106, 107, 1359, 1360, 1361, 1362, 0,
	574, -2, 436, 167, 169, 170, 171, 162, -2, 348,
	346, 347, 291, 350, 350, 315, 316, 317, 318, 319,
	320, 0, 0, 308, 309, 310, 311, 302, 0, 303,
	304, 305, 0, 306, 403, 0, 1269, 366, 367, 369,
	377, 0, 372, 373, 0, 377, 377, 0, 398, 399,
	0, 1261, 1286, 0, 0, 0, 1388, 1387, 1387, 1387,
	0, 155, 156, 157, 158, 159, 160, 610, 0, 0,
	586, 608, 609, 153, 0, 0, 163, 491, 490, 0,
	642, 0, 401, 0, 0, 395, 395, 380, 381, 532,
	0, 0, 617, 618, 619, 620, 0, 0, 0, 518,
	430, 0, 519, 520, 489, 491, 0, 0, 361, 444,
	445, 450, 451, 470, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 565, 566, 567, 568, 493,
	572, 569, 493, 573, 1283, 1284, 1285, 0, 0, 680,
	0, 0, 427, 92, 1376, 685, 746, 706, 722, 746,
	698, 705, 732, 764, 808, 0, 0, 0, 0, 816,
	0, 0, 951, 1054, 1056, 955, 0, 959, 963, 0,
	0, 0, 0, 0, 0, 0, 1050, 1074, 1075, 0,
	0, 1255, 0, 1236, 0, 0, 1082, 1196, 1197, 0,
	0, 0, 0, 0, 1093, 1094, 1095, 1096, 1097, 0,
	1099, 0, 0, 0, 1103, 1104, 0, 0, 1105, 0,
	0, 0, 0, 0, 0, 0, 0, 1117, 1118, 1119,
	1120, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1131, 1132, 0, 1032, 0, 0, 1032, 0, 1070,
	0, 0, 846, 0, 1198, 1199, 1200, 1201, 1202, 0,
	0, 0, 0, 0, 0, 1241, 1352, 793, 796, 798,
	883, 930, 931, 0, 0, 0, 0, 911, 1384, 839,
	840, 843, -2, 0, 0, 1243, 0, 0, 871, 941,
	872, 0, 851, 51, 886, 0, 1309, 1308, 1321, 1334,
	359, 359, 353, 354, 360, 355, 357, 358, 1259, 0,
	1264, 0, 1345, 0, 0, 1337, 0, 0, 0, 0,
	0, 0, 0, 0, 914, 0, 0, 917, 0, 0,
	0, 0, 908, 0, 0, 0, 0, 0, -2, 0,
	0, 90, 91, 0, 0, 0, 104, 105, 0, 0,
	111, 362, 363, 144, 153, 438, 168, 411, 0, 0,
	287, 349, 312, 313, 314, 0, 336, 0, 0, 0,
	432, 116, 1273, 1272, 377, 377, 368, 0, 371, 0,
	0, 0, 1389, 339, 400, 0, 134, 0, 0, 0,
	0, 0, 140, 580, 0, 0, 587, 0, 0, 0,
	500, 0, 511, 512, 0, 614, -2, 676, 365, 0,
	379, 382, 896, 0, 0, 513, 0, 516, 517, 431,
	491, 522, 523, 537, 524, 473, 474, 471, 0, 0,
	1296, 1297, 1302, 1300, 1301, 121, 558, 560, 559, 563,
	0, 0, 495, 0, 495, 556, 0, 427, 1269, 0,
	684, 428, 429, 749, 749, 803, 95, 0, 806, 0,
	0, 0, 0, 956, 960, 861, 0, 1229, 338, 338,
	1216, 338, 342, 1219, 338, 1221, 338, 1224, 338, 1227,
	1228, 1229, 0, 0, 0, 1233, 1081, 1239, 0, 0,
	0, 0, 1092, 0, 0, 0, 0, 0, 0, 132,
	133, 1165, 0, 0, 1167, 1169, 1170, 1109, 1166, 0,
	0, 1163, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1027, 1031, 0, 1033, 1034, 0, 0, 1134,
	0, 0, 1144, 1071, 1072, 0, 1242, 0, 0, 0,
	0, 0, 0, 932, 937, 937, 937, 0, 0, 0,
	1371, 1372, 1244, 1245, 941, 1246, 873, 852, 888, 1327,
	0, 1320, 0, -2, 1329, 0, 0, 0, 1335, 351,
	352, 865, 78, 942, 81, 0, 1345, 1354, 0, 1336,
	1347, 1349, 0, 0, 0, 1341, 0, 941, 875, 903,
	905, 0, 900, 915, 916, 918, 0, 920, 0, 922,
	923, 885, 880, 882, 0, 0, 98, 0, 941, 941,
	97, 0, 928, 108, 109, 110, 437, 172, 177, 0,
	0, 0, 182, 0, 184, 0, 0, 0, 189, 190,
	377, 377, 412, 0, 284, 286, 0, 0, 175, 350,
	0, 350, 0, 343, 0, 413, 433, 1270, 1271, 0,
	0, 370, 374, 375, 376, 0, 1378, 136, 0, 0,
	0, 583, 0, 611, 0, 0, 0, 0, 0, 0,
	164, 492, 643, 644, 645, 646, 647, 648, 649, 650,
	651, 0, 377, 0, 0, 0, 377, 377, 377, 0,
	668, 364, 0, 0, 639, 636, 514, 0, 213, 214,
	216, 0, 0, 521, 885, 1287, 1288, 1289, 0, 1299,
	1303, 124, 0, 0, 0, 0, 570, 0, 494, 571,
	681, 682, 683, 93, 691, 697, 805, 825, 949, 957,
	961, 0, 0, 1230, 1214, 350, 1217, 1218, 1220, 1222,
	1223, 1225, 1226, 0, 997, 0, 1077, 0, 1079, 1264,
	0, 1237, 0, 0, 1091, 0, 0, 0, 1100, 1101,
	1102, 0, 0, 1108, 0, 1110, 0, 0, 0, 1121,
	1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 0,
	1025, 1028, 1133, 1035, 1036, 1041, 1136, 0, 0, 1073,
	1146, 0, 1151, 0, 0, 1157, 0, 1161, 0, 0,
	0, 0, 0, 909, -2, 62, 1246, 1248, 0, 1314,
	1312, 1312, 1322, 1323, 0, 0, 1330, 0, 0, 0,
	0, 82, 0, 0, 0, 1350, 0, 0, 0, 0,
	99, 1255, 897, 904, 0, 0, 898, 0, 899, 919,
	921, 879, -2, 0, 941, 941, 88, 89, 0, 178,
	0, 180, 206, 207, 0, 183, 185, 186, 187, 193,
	194, 195, 188, 0, 0, 283, 285, 0, 0, 326,
	337, 327, 0, 0, 1274, 1275, 1276, 1277, 1278, 1279,
	1280, 1281, 885, 137, 138, 139, 575, 0, 585, 0,
	0, 0, 578, 0, 503, 0, 0, 0, 377, 377,
	377, 0, 0, 0, 0, 653, 0, 0, 616, 0,
	624, 0, 0, 0, 217, 218, 0, 1298, 557, 0,
	122, 123, 0, 0, 562, 496, 497, 1203, 995, 1215,
	996, 0, 0, 0, 1234, 0, 0, 0, 0, 1098,
	1106, 0, 1168, 0, 1113, 0, 0, 0, 605, 606,
	0, 1164, 1030, 1255, 0, 1032, 1042, 1043, 0, 1032,
	1145, 0, 0, 0, 0, 0, 0, 938, 0, 0,
	0, 0, 929, 1248, 1253, 0, 0, 1317, 0, 1310,
	1313, 1311, 1324, 0, 0, 1331, 0, 1333, 0, 1355,
	1356, 1348, 0, 1340, 1343, 1339, 1342, 1264, 901, 0,
	906, 0, 1255, 87, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 192, 0, 0, 341, 344,
	0, 0, 0, 576, 0, 588, 579, 0, 666, 0,
	670, 0, 0, 0, 673, 674, 675, 652, 0, 656,
	405, 640, 637, 638, 515, 0, 125, 126, 0, 0,
	0, 0, 0, 0, 1076, 1078, 1080, 1089, 1090, 1212,
	1213, 1107, 1111, 0, 1114, 0, 0, 1115, 0, 607,
	1021, 0, 0, 1039, 1040, 0, 1147, 0, 1152, 1153,
	0, 1158, 0, 1162, 0, 934, 891, 892, 939, 940,
	0, 0, 884, 1253, 80, 1254, 1251, 0, 1249, 1247,
	1306, 0, 1315, 1316, 1325, 1326, 1332, 0, 1338, 0,
	85, 0, 0, 0, 1264, 179, 0, 198, 0, 584,
	0, 587, 577, 664, 665, 0, 677, 669, 671, 672,
	654, -2, 1290, 0, 0, 0, 564, 994, 0, 0,
	0, 1165, 1116, 0, 603, 604, 1029, 1022, 0, 1007,
	1008, 1026, 1135, 1137, 0, 0, 0, 0, 933, 935,
	936, 79, 0, 1250, 1047, 0, 1318, 1319, 1346, 1344,
	902, 909, 0, 86, 418, 411, 1290, 0, 0, 0,
	657, 658, 659, 660, 661, 662, 663, 554, 1292, 127,
	128, 484, 485, 486, 121, 1204, 0, 1207, 0, 1023,
	0, 0, 0, 0, 1019, 1020, 1148, 0, 1154, 0,
	1159, 0, 893, 894, 1252, 0, 0, 589, 0, 591,
	0, -2, 406, 419, 0, 173, 199, 200, 0, 0,
	203, 204, 205, 196, 197, 117, 0, 0, 678, 0,
	1293, 1294, 124, 1205, 1112, 0, 1014, 1015, 1016, 1017,
	1018, 0, 0, 0, 1048, 1027, 590, 0, 0, 361,
	0, 600, 407, 408, 0, 414, 415, 416, 417, 201,
	202, 612, 0, 0, 561, 0, 0, 1149, 0, 1155,
	0, 1160, 0, 592, 593, 601, 0, 409, 0, 410,
	0, 0, 0, 581, 0, 612, 1291, 0, 1024, 0,
	0, 1046, 0, 602, 598, 420, 422, 423, 0, 0,
	421, 613, 582, 1206, 1150, 1156, 0, 424, 425, 426,
	594, 595, 596, 597,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 141, 3, 3, 3, 168, 160, 3,
	86, 88, 165, 163, 87, 164, 218, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 621,
	149, 148, 150, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 170, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 137, 3, 171,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 138, 139, 140, 142, 143, 144, 145, 146,
	147, 151, 152, 153, 154, 155, 156, 157, 158, 159,
	161, 162, 167, 169, 172, 173, 174, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:574
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:579
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:580
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:584
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:620
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 41:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:639
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:643
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 43:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:649
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:655
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:661
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:665
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:670
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:674
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:684
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:690
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:704
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:727
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:744
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:751
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:757
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:764
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 62:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:768
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:774
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:778
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:782
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:790
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:796
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:800
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:805
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:809
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:824
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:830
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:836
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:843
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:849
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:857
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:861
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:869
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:881
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:893
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:897
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:903
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:909
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:913
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:917
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:921
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:926
		{
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:927
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:931
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:935
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:941
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:951
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:955
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:960
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:964
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:970
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs).Parsed(), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:976
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:980
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:986
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:990
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:996
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1000
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1004
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1010
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1014
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1018
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1022
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1028
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1032
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1038
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1044
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1051
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1060
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1064
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1071
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1075
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1080
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1090
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1095
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1100
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1106
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1111
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1117
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 129:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1122
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1126
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1132
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 134:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1148
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1155
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1162
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1167
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1172
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1177
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1184
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1191
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1202
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1209
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1213
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1219
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1223
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1227
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1231
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1235
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1239
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1245
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1249
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1255
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1259
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1265
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1269
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1275
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1279
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1285
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1289
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1295
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1299
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1305
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1310
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1315
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1319
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1324
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1328
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1332
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1343
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1352
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1361
		{
			yyVAL.str = ""
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = ""
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1374
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1378
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1384
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1390
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1395
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1400
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1405
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1410
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1420
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1424
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1433
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1438
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1444
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1450
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1454
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1460
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1464
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1468
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1474
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1478
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1483
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1487
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1492
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1498
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1504
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1509
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1520
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1528
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1535
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1539
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1543
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1547
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1551
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1562
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1569
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1573
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1579
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1583
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1587
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1591
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1595
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1599
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1603
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1608
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1612
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1616
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1620
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1624
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1631
		{
			yyVAL.str = Armscii8Str
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1635
		{
			yyVAL.str = ASCIIStr
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = Big5Str
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = UBinaryStr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = Cp1250Str
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1651
		{
			yyVAL.str = Cp1251Str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1655
		{
			yyVAL.str = Cp1256Str
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = Cp1257Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = Cp850Str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = Cp852Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.str = Cp866Str
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1675
		{
			yyVAL.str = Cp932Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1679
		{
			yyVAL.str = Dec8Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1683
		{
			yyVAL.str = EucjpmsStr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1687
		{
			yyVAL.str = EuckrStr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = Gb18030Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = Gb2312Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = GbkStr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1703
		{
			yyVAL.str = Geostd8Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1707
		{
			yyVAL.str = GreekStr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1711
		{
			yyVAL.str = HebrewStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.str = Hp8Str
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1719
		{
			yyVAL.str = Keybcs2Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1723
		{
			yyVAL.str = Koi8rStr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1727
		{
			yyVAL.str = Koi8uStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.str = Latin1Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1735
		{
			yyVAL.str = Latin2Str
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1739
		{
			yyVAL.str = Latin5Str
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1743
		{
			yyVAL.str = Latin7Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1747
		{
			yyVAL.str = MacceStr
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1751
		{
			yyVAL.str = MacromanStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = SjisStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = Swe7Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = Tis620Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1767
		{
			yyVAL.str = Ucs2Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1771
		{
			yyVAL.str = UjisStr
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1775
		{
			yyVAL.str = Utf16Str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1779
		{
			yyVAL.str = Utf16leStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1783
		{
			yyVAL.str = Utf32Str
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1787
		{
			yyVAL.str = Utf8Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = Utf8mb4Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = Utf8Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1805
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1809
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1813
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1819
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1823
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1827
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1833
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1837
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1844
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1848
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1852
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1856
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1862
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1873
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1878
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1908
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1922
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1980
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2039
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2069
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2079
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2093
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2098
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2102
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2110
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2114
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2120
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2128
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2132
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2136
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2141
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2145
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2150
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].colIdent.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2158
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2162
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2166
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2171
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2181
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2186
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2192
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2196
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2201
		{
			yyVAL.str = ""
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2205
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2209
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2216
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2221
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2225
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2231
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2235
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2241
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2245
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2250
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2254
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2258
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2262
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2266
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2270
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = ""
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2286
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2290
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2294
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2298
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2302
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2307
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.str = yyDollar[2].str
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2317
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2321
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2332
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2336
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2341
		{
			yyVAL.str = "key"
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = yyDollar[1].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2364
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2370
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2380
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2384
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2390
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2394
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2400
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2404
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2410
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2416
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2420
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2424
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2428
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2432
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2437
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2441
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2447
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2453
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2459
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2463
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2467
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2472
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2476
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2482
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2488
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2494
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2498
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2502
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2506
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2510
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = ""
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2533
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2538
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2542
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2547
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2551
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2557
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2561
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2571
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2575
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2581
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2585
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2589
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2593
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2597
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2601
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2605
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2609
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2613
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2617
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2621
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2625
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2669
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 487:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2746
		{
			yyVAL.str = ""
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2752
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2756
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2761
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2765
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2770
		{
			yyVAL.str = ""
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2774
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2779
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2783
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2787
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2792
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2796
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2800
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2804
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2808
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 503:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2812
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2818
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2832
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2836
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2840
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2844
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2848
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2852
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2856
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2860
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2864
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2868
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2873
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2878
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].colIdent, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2882
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2886
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].colIdent, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2890
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2894
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2898
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2902
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2906
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2910
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2914
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2918
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2922
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2926
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2960
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3012
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3019
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3033
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3039
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3049
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3056
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3063
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3075
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3089
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3093
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3106
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3116
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3120
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3131
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3138
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3152
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3159
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3165
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3174
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3182
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3189
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3196
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3200
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3209
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3217
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3226
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3233
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3245
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3254
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3265
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3269
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3283
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3287
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3293
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3299
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3305
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 593:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3315
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].colIdent}}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3319
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3325
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3331
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3337
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3343
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3361
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3367
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3373
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3379
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3383
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3387
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3393
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3397
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3402
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3406
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3411
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3415
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3421
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3425
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3429
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3433
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3437
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3441
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3445
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3449
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3453
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3457
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3461
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3465
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3469
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3473
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3477
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3481
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3485
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3489
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3493
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3497
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3501
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3505
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3510
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3514
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3518
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3525
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3529
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 641:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3535
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3540
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3544
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3549
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3554
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3559
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3564
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3569
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3575
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3581
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3586
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3592
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3598
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3608
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].colIdent, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3613
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3617
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3622
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3627
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3632
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3637
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3643
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3649
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3656
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3663
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3670
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3678
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3682
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3688
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3694
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3700
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3706
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3712
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3718
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3724
		{
			yyVAL.str = yyDollar[3].tableIdent.String()
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3730
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3736
		{
			yyVAL.str = ""
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3740
		{
			yyVAL.str = ""
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3746
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3752
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3756
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 682:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3762
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3766
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3775
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3779
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3785
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3789
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3794
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3800
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3804
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3808
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3812
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3816
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3820
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3828
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3832
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3836
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3848
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3852
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3856
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3860
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3864
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3868
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3872
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3876
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3880
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3884
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3888
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3892
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3896
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3900
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3904
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3908
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3912
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3916
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3920
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3924
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3928
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3932
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3936
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3940
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3944
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3949
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3953
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3957
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3961
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3966
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3970
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3974
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3978
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3997
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4001
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4005
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4011
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4021
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4025
		{
			yyVAL.str = "extended "
		}
	case 742:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4031
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4035
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4041
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4045
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4051
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4055
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4059
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4069
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4073
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4079
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4083
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4089
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4093
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4097
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4103
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4107
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4111
		{
			yyLOCAL = &Use{DBName: NewTableIdent(yyDollar[2].tableIdent.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4117
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4121
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4127
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4133
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4137
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4142
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4147
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4149
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4154
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4160
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4165
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4169
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4173
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4177
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4181
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4185
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4191
		{
			yyVAL.str = yyDollar[1].str
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.str = yyDollar[1].str
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.str = yyDollar[1].str
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4205
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4209
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4213
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4217
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4222
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4226
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4236
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4240
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4246
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4250
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4262
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4266
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4272
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4278
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4282
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4286
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4290
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4296
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4302
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4308
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4312
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4316
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4320
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4324
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4328
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4334
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4338
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4344
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4348
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4352
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 812:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4368
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4372
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4376
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4388
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4393
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4397
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4401
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4406
		{
			yyVAL.str = ""
		}
	case 825:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4415
		{
			setAllowComments(yylex, true)
		}
	case 827:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4419
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4425
		{
			yyVAL.strs = nil
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4429
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4435
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4439
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4443
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = SQLCacheStr
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4461
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4465
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4469
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4475
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4479
		{
			yyLOCAL = &PrepareStmt{
				Name:     yyDollar[3].colIdent,
				Comments: Comments(yyDollar[2].strs).Parsed(),
				Statement: &ColName{
					Name: NewColIdentWithAt(string(yyDollar[5].str), SingleAt),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4491
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].colIdent, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4496
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4500
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4506
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4510
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4519
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4524
		{
			yyVAL.strs = nil
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4528
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4532
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4536
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4540
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4546
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4550
		{
			yyVAL.str = SQLCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4554
		{
			yyVAL.str = DistinctStr
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4558
		{
			yyVAL.str = DistinctStr
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			yyVAL.str = StraightJoinHint
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 860:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4576
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4580
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4586
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4590
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4594
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4598
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4603
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4607
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 868:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4618
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4623
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4627
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4633
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4639
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4643
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4653
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4657
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4661
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4665
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4671
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4677
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4681
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4686
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4690
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4696
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4700
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4706
		{
			yyLOCAL = Columns{NewColIdentWithAt(string(yyDollar[1].str), SingleAt)}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4710
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdentWithAt(string(yyDollar[3].str), SingleAt))
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4716
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4720
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4724
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4728
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4734
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4738
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4751
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4755
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4759
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4763
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4769
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 902:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4771
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 903:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4775
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4777
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4781
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4783
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4786
		{
			yyVAL.empty = struct{}{}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4788
		{
			yyVAL.empty = struct{}{}
		}
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4791
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4795
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4799
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4806
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4812
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4816
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4820
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4826
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4832
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4836
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4840
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4844
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4850
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4854
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4864
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4868
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4874
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4878
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 928:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4884
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4889
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4893
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:4899
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4903
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 933:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4909
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4913
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4917
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:4921
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4926
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4930
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4934
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:4938
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4948
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4955
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4959
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4963
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4967
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4971
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4975
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4979
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4985
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4989
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4993
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4997
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5003
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5007
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5011
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5015
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5019
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5023
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5027
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5031
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5035
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5039
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5043
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5049
		{
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5052
		{
		}
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5058
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5062
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5066
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5070
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5074
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5106
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5124
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5128
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5132
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5136
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5140
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5144
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5148
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5152
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5156
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5160
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5164
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5168
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5172
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5176
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5180
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5184
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5192
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5196
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5204
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5208
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5214
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5220
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5224
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5228
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5234
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5238
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5245
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5249
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5253
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5257
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5261
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5267
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5271
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5275
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5279
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5283
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5289
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5293
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5302
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5308
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5312
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5317
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5321
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5326
		{
		}
	case 1028:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5329
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1029:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5335
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].colIdent, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5341
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5345
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5350
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5357
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5363
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5367
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5373
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5377
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5383
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5387
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5399
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5405
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5409
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5415
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].colIdent, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5421
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5425
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1049:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5431
		{
			yyVAL.str = ""
		}
	case 1050:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5435
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 1051:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5441
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5445
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5452
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5456
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5460
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5464
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5470
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5474
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5478
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5482
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5486
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5490
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5494
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5500
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5504
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5508
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5515
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5521
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5525
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5535
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5539
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1072:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5543
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5547
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5557
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5561
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5565
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5569
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5573
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5577
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5581
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5585
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5589
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5593
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5604
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5608
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5614
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5618
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5623
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5627
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5631
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5635
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5639
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5643
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5647
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5651
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5655
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5659
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5663
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5667
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5671
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5675
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5679
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5683
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5687
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5691
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5695
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprUnion(), PathList: yyDollar[6].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5699
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5703
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5707
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[4].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5711
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5715
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5719
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprUnion(), PathList: yyDollar[10].jsonPathParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5723
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5727
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5731
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5735
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam, ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5739
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5743
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5755
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5759
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5763
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5767
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5771
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5775
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5779
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5783
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5787
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5791
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5795
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5799
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5803
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5807
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5811
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5815
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5819
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5827
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5831
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5836
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5840
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5857
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5861
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5865
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5869
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5873
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5903
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5907
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5911
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5915
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5931
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:5935
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5940
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5944
		{
			yyLOCAL = yyDollar[2].jsonPathParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []JSONPathParam
//line sql.y:5950
		{
			yyLOCAL = []JSONPathParam{yyDollar[1].jsonPathParam}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5954
		{
			yySLICE := (*[]JSONPathParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonPathParam)
		}
	case 1169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5960
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].exprUnion())
		}
	case 1170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5964
		{
			yyVAL.jsonPathParam = JSONPathParam(yyDollar[1].colNameUnion())
		}
	case 1171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5970
		{
		}
	case 1172:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5972
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5976
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5980
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5984
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5988
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5992
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:5996
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6000
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6004
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6008
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6012
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6018
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6022
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6026
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6030
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6034
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6038
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6042
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6046
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6050
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6060
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6068
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6072
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6083
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6087
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6091
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6095
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6099
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6105
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6109
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6113
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6117
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6121
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6127
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 1209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6131
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6135
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1211:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6145
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6149
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6155
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6159
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6163
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6167
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6171
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6177
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6181
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6185
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6189
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6193
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6197
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6201
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6205
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6209
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6213
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6219
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6223
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6228
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6232
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6237
		{
			yyVAL.str = string("")
		}
	case 1234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6241
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6247
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6251
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6257
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6262
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6266
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6272
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6276
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6280
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6286
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6295
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6299
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6305
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6309
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6314
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6318
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6324
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6330
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6334
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1253:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6339
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6343
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1255:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6348
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6352
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6358
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6364
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6368
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6374
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6379
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6383
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6387
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6392
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6396
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6402
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6406
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6410
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6419
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6423
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6427
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6431
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6438
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6442
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6446
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6450
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6456
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6460
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6464
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6468
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6473
		{
			yyVAL.str = ""
		}
	case 1283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6477
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6481
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6485
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1286:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6490
		{
			yyVAL.str = ""
		}
	case 1287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6494
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1288:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6500
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6504
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1290:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6509
		{
			yyVAL.str = ""
		}
	case 1291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6513
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6518
		{
			yyVAL.str = "cascaded"
		}
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6522
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6526
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1295:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6531
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6535
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6541
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6547
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6553
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6562
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6566
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1302:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6571
		{
			yyVAL.str = ""
		}
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6575
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6581
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6585
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6591
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6595
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6599
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6604
		{
			yyVAL.str = ""
		}
	case 1310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6608
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1311:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6612
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6617
		{
			yyVAL.str = ""
		}
	case 1313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6621
		{
			yyVAL.str = " header"
		}
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6626
		{
			yyVAL.str = ""
		}
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6630
		{
			yyVAL.str = " manifest on"
		}
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6634
		{
			yyVAL.str = " manifest off"
		}
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6639
		{
			yyVAL.str = ""
		}
	case 1318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6643
		{
			yyVAL.str = " overwrite on"
		}
	case 1319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6647
		{
			yyVAL.str = " overwrite off"
		}
	case 1320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6653
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6658
		{
			yyVAL.str = ""
		}
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6662
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6668
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6672
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6678
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6682
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6687
		{
			yyVAL.str = ""
		}
	case 1328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6691
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6697
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6701
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6707
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1332:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6711
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6715
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1334:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6720
		{
			yyVAL.str = ""
		}
	case 1335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6724
		{
			yyVAL.str = " optionally"
		}
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6737
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6741
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6745
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6749
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:6753
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6759
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:6763
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6767
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:6771
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6776
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6780
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:6786
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6790
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6796
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6800
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6806
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:6810
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6815
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:6825
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6829
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:6835
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:6841
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6845
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6851
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6855
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6859
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6863
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:6867
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6875
		{
			yyVAL.str = "charset"
		}
	case 1368:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6885
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6889
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6893
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6902
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6904
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6907
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:6909
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6912
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:6914
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6917
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:6919
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6922
		{
			yyVAL.empty = struct{}{}
		}
	case 1382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6924
		{
			yyVAL.empty = struct{}{}
		}
	case 1383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6926
		{
			yyVAL.empty = struct{}{}
		}
	case 1384:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:6930
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1385:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6935
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6939
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6944
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1388:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:6946
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1389:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:6950
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6956
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6960
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6967
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6973
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6977
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6983
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6987
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6994
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7527
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7536
		{
			decNesting(yylex)
		}
	case 1910:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7541
		{
			skipToEnd(yylex)
		}
	case 1911:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7546
		{
			skipToEnd(yylex)
		}
	case 1912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7550
		{
			skipToEnd(yylex)
		}
	case 1913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7554
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
