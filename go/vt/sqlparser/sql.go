// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DISTINCTROW = 57376
const VALUES = 57377
const LAST_INSERT_ID = 57378
const NEXT = 57379
const VALUE = 57380
const SHARE = 57381
const MODE = 57382
const SQL_NO_CACHE = 57383
const SQL_CACHE = 57384
const JOIN = 57385
const STRAIGHT_JOIN = 57386
const LEFT = 57387
const RIGHT = 57388
const INNER = 57389
const OUTER = 57390
const CROSS = 57391
const NATURAL = 57392
const USE = 57393
const FORCE = 57394
const ON = 57395
const USING = 57396
const ID = 57397
const HEX = 57398
const STRING = 57399
const INTEGRAL = 57400
const FLOAT = 57401
const HEXNUM = 57402
const VALUE_ARG = 57403
const LIST_ARG = 57404
const COMMENT = 57405
const COMMENT_KEYWORD = 57406
const BIT_LITERAL = 57407
const NULL = 57408
const TRUE = 57409
const FALSE = 57410
const OFF = 57411
const OR = 57412
const AND = 57413
const NOT = 57414
const BETWEEN = 57415
const CASE = 57416
const WHEN = 57417
const THEN = 57418
const ELSE = 57419
const END = 57420
const LE = 57421
const GE = 57422
const NE = 57423
const NULL_SAFE_EQUAL = 57424
const IS = 57425
const LIKE = 57426
const REGEXP = 57427
const IN = 57428
const SHIFT_LEFT = 57429
const SHIFT_RIGHT = 57430
const DIV = 57431
const MOD = 57432
const UNARY = 57433
const COLLATE = 57434
const BINARY = 57435
const UNDERSCORE_BINARY = 57436
const UNDERSCORE_UTF8MB4 = 57437
const INTERVAL = 57438
const JSON_EXTRACT_OP = 57439
const JSON_UNQUOTE_EXTRACT_OP = 57440
const CREATE = 57441
const ALTER = 57442
const DROP = 57443
const RENAME = 57444
const ANALYZE = 57445
const ADD = 57446
const FLUSH = 57447
const SCHEMA = 57448
const TABLE = 57449
const INDEX = 57450
const VIEW = 57451
const TO = 57452
const IGNORE = 57453
const IF = 57454
const UNIQUE = 57455
const PRIMARY = 57456
const COLUMN = 57457
const SPATIAL = 57458
const FULLTEXT = 57459
const KEY_BLOCK_SIZE = 57460
const CHECK = 57461
const ACTION = 57462
const CASCADE = 57463
const CONSTRAINT = 57464
const FOREIGN = 57465
const NO = 57466
const REFERENCES = 57467
const RESTRICT = 57468
const SHOW = 57469
const DESCRIBE = 57470
const EXPLAIN = 57471
const DATE = 57472
const ESCAPE = 57473
const REPAIR = 57474
const OPTIMIZE = 57475
const TRUNCATE = 57476
const MAXVALUE = 57477
const PARTITION = 57478
const REORGANIZE = 57479
const LESS = 57480
const THAN = 57481
const PROCEDURE = 57482
const TRIGGER = 57483
const VINDEX = 57484
const VINDEXES = 57485
const STATUS = 57486
const VARIABLES = 57487
const WARNINGS = 57488
const SEQUENCE = 57489
const BEGIN = 57490
const START = 57491
const TRANSACTION = 57492
const COMMIT = 57493
const ROLLBACK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const TIME = 57508
const TIMESTAMP = 57509
const DATETIME = 57510
const YEAR = 57511
const CHAR = 57512
const VARCHAR = 57513
const BOOL = 57514
const CHARACTER = 57515
const VARBINARY = 57516
const NCHAR = 57517
const TEXT = 57518
const TINYTEXT = 57519
const MEDIUMTEXT = 57520
const LONGTEXT = 57521
const BLOB = 57522
const TINYBLOB = 57523
const MEDIUMBLOB = 57524
const LONGBLOB = 57525
const JSON = 57526
const ENUM = 57527
const GEOMETRY = 57528
const POINT = 57529
const LINESTRING = 57530
const POLYGON = 57531
const GEOMETRYCOLLECTION = 57532
const MULTIPOINT = 57533
const MULTILINESTRING = 57534
const MULTIPOLYGON = 57535
const NULLX = 57536
const AUTO_INCREMENT = 57537
const APPROXNUM = 57538
const SIGNED = 57539
const UNSIGNED = 57540
const ZEROFILL = 57541
const COLLATION = 57542
const DATABASES = 57543
const TABLES = 57544
const VITESS_METADATA = 57545
const VSCHEMA = 57546
const FULL = 57547
const PROCESSLIST = 57548
const COLUMNS = 57549
const FIELDS = 57550
const ENGINES = 57551
const PLUGINS = 57552
const NAMES = 57553
const CHARSET = 57554
const GLOBAL = 57555
const SESSION = 57556
const ISOLATION = 57557
const LEVEL = 57558
const READ = 57559
const WRITE = 57560
const ONLY = 57561
const REPEATABLE = 57562
const COMMITTED = 57563
const UNCOMMITTED = 57564
const SERIALIZABLE = 57565
const CURRENT_TIMESTAMP = 57566
const DATABASE = 57567
const CURRENT_DATE = 57568
const CURRENT_TIME = 57569
const LOCALTIME = 57570
const LOCALTIMESTAMP = 57571
const UTC_DATE = 57572
const UTC_TIME = 57573
const UTC_TIMESTAMP = 57574
const REPLACE = 57575
const CONVERT = 57576
const CAST = 57577
const SUBSTR = 57578
const SUBSTRING = 57579
const GROUP_CONCAT = 57580
const SEPARATOR = 57581
const TIMESTAMPADD = 57582
const TIMESTAMPDIFF = 57583
const MATCH = 57584
const AGAINST = 57585
const BOOLEAN = 57586
const LANGUAGE = 57587
const WITH = 57588
const QUERY = 57589
const EXPANSION = 57590
const UNUSED = 57591
const ARRAY = 57592
const CUME_DIST = 57593
const DESCRIPTION = 57594
const DENSE_RANK = 57595
const EMPTY = 57596
const EXCEPT = 57597
const FIRST_VALUE = 57598
const GROUPING = 57599
const GROUPS = 57600
const JSON_TABLE = 57601
const LAG = 57602
const LAST_VALUE = 57603
const LATERAL = 57604
const LEAD = 57605
const MEMBER = 57606
const NTH_VALUE = 57607
const NTILE = 57608
const OF = 57609
const OVER = 57610
const PERCENT_RANK = 57611
const RANK = 57612
const RECURSIVE = 57613
const ROW_NUMBER = 57614
const SYSTEM = 57615
const WINDOW = 57616
const ACTIVE = 57617
const ADMIN = 57618
const BUCKETS = 57619
const CLONE = 57620
const COMPONENT = 57621
const DEFINITION = 57622
const ENFORCED = 57623
const EXCLUDE = 57624
const FOLLOWING = 57625
const GEOMCOLLECTION = 57626
const GET_MASTER_PUBLIC_KEY = 57627
const HISTOGRAM = 57628
const HISTORY = 57629
const INACTIVE = 57630
const INVISIBLE = 57631
const LOCKED = 57632
const MASTER_COMPRESSION_ALGORITHMS = 57633
const MASTER_PUBLIC_KEY_PATH = 57634
const MASTER_TLS_CIPHERSUITES = 57635
const MASTER_ZSTD_COMPRESSION_LEVEL = 57636
const NESTED = 57637
const NETWORK_NAMESPACE = 57638
const NOWAIT = 57639
const NULLS = 57640
const OJ = 57641
const OLD = 57642
const OPTIONAL = 57643
const ORDINALITY = 57644
const ORGANIZATION = 57645
const OTHERS = 57646
const PATH = 57647
const PERSIST = 57648
const PERSIST_ONLY = 57649
const PRECEDING = 57650
const PRIVILEGE_CHECKS_USER = 57651
const PROCESS = 57652
const RANDOM = 57653
const REFERENCE = 57654
const REQUIRE_ROW_FORMAT = 57655
const RESOURCE = 57656
const RESPECT = 57657
const RESTART = 57658
const RETAIN = 57659
const REUSE = 57660
const ROLE = 57661
const SECONDARY = 57662
const SECONDARY_ENGINE = 57663
const SECONDARY_LOAD = 57664
const SECONDARY_UNLOAD = 57665
const SKIP = 57666
const SRID = 57667
const THREAD_PRIORITY = 57668
const TIES = 57669
const UNBOUNDED = 57670
const VCPU = 57671
const VISIBLE = 57672

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DISTINCTROW",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 29,
	-2, 4,
	-1, 37,
	161, 300,
	162, 300,
	-2, 288,
	-1, 320,
	113, 641,
	-2, 637,
	-1, 321,
	113, 642,
	-2, 638,
	-1, 389,
	83, 890,
	-2, 63,
	-1, 390,
	83, 808,
	-2, 64,
	-1, 395,
	83, 777,
	-2, 603,
	-1, 397,
	83, 838,
	-2, 605,
	-1, 691,
	1, 353,
	5, 353,
	12, 353,
	13, 353,
	14, 353,
	15, 353,
	17, 353,
	19, 353,
	30, 353,
	31, 353,
	43, 353,
	44, 353,
	45, 353,
	46, 353,
	47, 353,
	49, 353,
	50, 353,
	53, 353,
	54, 353,
	56, 353,
	57, 353,
	348, 353,
	-2, 371,
	-1, 694,
	54, 44,
	56, 44,
	-2, 48,
	-1, 842,
	113, 644,
	-2, 640,
	-1, 1071,
	5, 30,
	-2, 438,
	-1, 1101,
	5, 29,
	-2, 577,
	-1, 1346,
	5, 30,
	-2, 578,
	-1, 1399,
	5, 29,
	-2, 580,
	-1, 1477,
	5, 30,
	-2, 581,
}

const yyPrivate = 57344

const yyLast = 16558

var yyAct = [...]int{

	321, 1511, 1501, 1465, 900, 1308, 1196, 325, 1104, 1411,
	647, 955, 984, 1122, 1366, 1248, 338, 1379, 1249, 299,
	1282, 57, 1105, 926, 928, 351, 1245, 547, 998, 1035,
	1149, 290, 81, 954, 964, 1220, 264, 1261, 1255, 264,
	791, 867, 1128, 805, 1063, 877, 1175, 707, 930, 394,
	895, 844, 1166, 951, 578, 646, 3, 874, 968, 584,
	915, 352, 51, 706, 388, 994, 908, 264, 81, 518,
	323, 688, 264, 383, 264, 599, 291, 292, 293, 294,
	308, 590, 297, 380, 385, 696, 661, 56, 61, 1504,
	1017, 1488, 1499, 662, 1475, 1496, 1309, 1487, 1474, 536,
	1237, 1338, 523, 1276, 1016, 551, 708, 298, 709, 312,
	945, 687, 296, 51, 63, 64, 65, 66, 67, 572,
	363, 304, 369, 370, 367, 368, 366, 365, 364, 259,
	255, 256, 257, 1021, 1221, 1137, 371, 372, 1136, 946,
	947, 1138, 1015, 1440, 612, 611, 621, 622, 614, 615,
	616, 617, 618, 619, 620, 613, 1277, 1278, 623, 567,
	295, 1157, 977, 568, 565, 566, 1198, 251, 1369, 253,
	985, 553, 1223, 555, 1329, 1327, 1386, 289, 571, 570,
	780, 560, 561, 779, 1498, 1200, 777, 1495, 1466, 1195,
	909, 1458, 1012, 1009, 1010, 969, 1008, 1519, 537, 525,
	1412, 1123, 1125, 1515, 552, 554, 1225, 253, 1229, 1201,
	1224, 784, 1222, 1414, 770, 1420, 1192, 1227, 778, 1199,
	781, 1271, 1194, 971, 1270, 971, 1226, 1269, 1019, 1022,
	521, 528, 533, 266, 254, 1029, 635, 636, 1028, 1228,
	1230, 1080, 1447, 1349, 1207, 1077, 1133, 1090, 258, 1057,
	971, 816, 264, 1150, 702, 264, 603, 543, 813, 1294,
	613, 264, 252, 623, 952, 1014, 623, 264, 941, 806,
	81, 1037, 81, 810, 81, 81, 851, 81, 1124, 81,
	519, 1413, 596, 598, 1239, 81, 1456, 1013, 1429, 550,
	849, 850, 848, 1259, 70, 530, 519, 531, 598, 556,
	532, 557, 558, 576, 559, 896, 562, 978, 985, 1473,
	1295, 1513, 573, 1441, 1514, 81, 1512, 1421, 1419, 1193,
	970, 1191, 970, 710, 586, 772, 1018, 574, 575, 517,
	71, 548, 896, 548, 1087, 548, 548, 974, 548, 1155,
	548, 1020, 1520, 975, 635, 636, 548, 970, 635, 636,
	1036, 807, 967, 965, 1075, 966, 1074, 539, 540, 541,
	587, 963, 969, 1054, 1055, 1056, 51, 54, 597, 596,
	524, 1183, 593, 597, 596, 1241, 1461, 847, 264, 264,
	264, 632, 1521, 1479, 634, 598, 1375, 81, 1374, 1170,
	598, 327, 1076, 81, 588, 868, 1169, 869, 1481, 318,
	1158, 1181, 686, 614, 615, 616, 617, 618, 619, 620,
	613, 1457, 645, 623, 649, 650, 651, 652, 653, 654,
	655, 656, 657, 1393, 660, 663, 663, 663, 669, 663,
	663, 669, 663, 677, 678, 679, 680, 681, 682, 1139,
	692, 1140, 549, 597, 596, 1372, 1204, 526, 527, 1167,
	1454, 664, 666, 668, 670, 672, 674, 675, 665, 667,
	598, 671, 673, 695, 676, 819, 820, 700, 1182, 1040,
	250, 704, 22, 1187, 1184, 1177, 1185, 1180, 1311, 1176,
	597, 596, 1178, 1179, 612, 611, 621, 622, 614, 615,
	616, 617, 618, 619, 620, 613, 1186, 598, 623, 611,
	621, 622, 614, 615, 616, 617, 618, 619, 620, 613,
	391, 1150, 623, 1145, 597, 596, 1417, 1497, 264, 834,
	836, 837, 870, 81, 790, 835, 1483, 577, 264, 264,
	81, 598, 303, 789, 264, 377, 378, 264, 1064, 773,
	264, 1417, 1469, 577, 264, 771, 81, 81, 768, 815,
	769, 81, 81, 81, 264, 81, 81, 776, 1417, 577,
	1426, 81, 81, 1417, 1448, 1417, 1416, 350, 1364, 1363,
	1351, 577, 1425, 794, 795, 1348, 577, 1291, 796, 797,
	798, 545, 800, 801, 548, 1301, 1300, 814, 802, 803,
	81, 548, 822, 793, 538, 264, 1297, 1298, 972, 79,
	1258, 81, 1297, 1296, 597, 596, 821, 548, 548, 1069,
	577, 879, 548, 548, 548, 1344, 548, 548, 912, 577,
	785, 598, 548, 548, 1428, 616, 617, 618, 619, 620,
	613, 1129, 845, 623, 54, 393, 1210, 341, 340, 343,
	344, 345, 346, 24, 840, 81, 342, 347, 879, 577,
	58, 878, 880, 842, 917, 920, 921, 922, 918, 24,
	919, 923, 886, 889, 1262, 1263, 1129, 1099, 897, 823,
	717, 716, 1100, 698, 1246, 912, 838, 1258, 81, 81,
	698, 1069, 935, 912, 697, 264, 911, 24, 1398, 1299,
	1141, 1069, 54, 264, 264, 944, 51, 264, 264, 1093,
	1092, 264, 264, 264, 81, 881, 871, 872, 54, 1197,
	1258, 649, 912, 1069, 633, 697, 699, 81, 701, 703,
	936, 817, 783, 699, 938, 697, 1489, 314, 637, 638,
	639, 640, 641, 642, 643, 644, 54, 305, 905, 893,
	1381, 979, 1356, 999, 986, 987, 988, 1287, 1262, 1263,
	1506, 1144, 793, 995, 927, 990, 989, 1382, 692, 1002,
	1502, 934, 692, 1289, 1265, 1246, 1171, 811, 942, 943,
	691, 264, 81, 787, 81, 939, 829, 1268, 264, 264,
	264, 264, 264, 1267, 264, 264, 54, 959, 264, 81,
	1113, 917, 920, 921, 922, 918, 1000, 919, 923, 1004,
	1118, 1006, 921, 922, 1116, 264, 1114, 264, 264, 1117,
	1112, 1115, 264, 309, 310, 1493, 1033, 1486, 1206, 1042,
	1491, 1052, 1051, 591, 1162, 715, 579, 591, 546, 391,
	996, 997, 1154, 548, 1377, 548, 592, 393, 580, 393,
	592, 393, 393, 589, 393, 1463, 393, 1462, 1396, 1152,
	548, 1146, 393, 1342, 1005, 786, 925, 1045, 306, 307,
	300, 1050, 1434, 301, 58, 1433, 842, 1384, 876, 1049,
	1129, 569, 1508, 1507, 845, 1066, 1047, 1046, 1081, 1067,
	1078, 804, 601, 594, 1508, 1444, 1071, 1072, 1073, 1370,
	812, 60, 62, 1079, 55, 1, 1082, 1083, 1500, 1310,
	1059, 1378, 1089, 1058, 1011, 1464, 1091, 1410, 1281, 1094,
	1095, 1096, 1097, 264, 264, 264, 264, 264, 962, 1106,
	953, 69, 516, 68, 1455, 264, 961, 960, 264, 1418,
	1368, 1121, 264, 973, 1156, 976, 264, 1288, 1153, 1460,
	723, 721, 722, 720, 725, 1086, 724, 719, 277, 386,
	924, 711, 1001, 595, 393, 81, 72, 1190, 1189, 1130,
	712, 1007, 809, 563, 1101, 564, 1142, 279, 631, 1048,
	1102, 1103, 1135, 392, 692, 692, 692, 692, 692, 1131,
	1127, 1132, 1253, 881, 1119, 1108, 1109, 818, 1111, 927,
	583, 1126, 1134, 1159, 1160, 1432, 1383, 692, 846, 1151,
	1085, 658, 894, 81, 81, 843, 326, 833, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 865, 866, 339, 1107, 1147, 1148, 1110, 581, 585,
	336, 1173, 337, 81, 980, 981, 982, 983, 1161, 1174,
	1163, 1164, 1165, 1168, 824, 604, 841, 1098, 605, 264,
	991, 992, 993, 324, 316, 690, 1188, 683, 81, 916,
	1202, 914, 913, 901, 381, 548, 1264, 1260, 689, 1209,
	1337, 1439, 828, 1218, 26, 59, 311, 19, 1203, 18,
	648, 17, 20, 16, 691, 15, 14, 534, 691, 659,
	393, 30, 691, 21, 548, 13, 12, 393, 11, 10,
	9, 8, 7, 81, 81, 1214, 1238, 1106, 1247, 6,
	5, 4, 1232, 393, 393, 1219, 1213, 1231, 393, 393,
	393, 302, 393, 393, 23, 2, 1250, 81, 393, 393,
	0, 1045, 0, 0, 0, 0, 0, 0, 0, 0,
	842, 0, 81, 0, 81, 81, 391, 1257, 1266, 0,
	1273, 0, 0, 0, 0, 1280, 0, 825, 1252, 956,
	0, 0, 1251, 0, 51, 1272, 0, 0, 601, 0,
	0, 393, 264, 1275, 0, 1279, 0, 0, 1285, 1286,
	1284, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	264, 0, 0, 0, 0, 0, 81, 0, 0, 81,
	81, 81, 264, 0, 0, 0, 0, 1303, 81, 0,
	0, 264, 873, 1292, 1293, 0, 0, 0, 1319, 0,
	1304, 0, 1306, 0, 0, 1321, 0, 0, 898, 0,
	0, 0, 0, 1316, 1318, 0, 1330, 1331, 0, 0,
	846, 0, 0, 0, 0, 902, 903, 0, 0, 1060,
	1061, 1062, 1317, 0, 1325, 0, 1345, 1346, 1347, 841,
	1350, 0, 0, 0, 0, 0, 1106, 0, 0, 0,
	0, 393, 692, 0, 1343, 0, 0, 1361, 0, 1352,
	81, 1353, 0, 0, 393, 0, 0, 0, 81, 0,
	0, 1142, 0, 1362, 0, 0, 0, 808, 0, 1336,
	0, 0, 0, 81, 691, 691, 691, 691, 691, 1371,
	81, 1373, 0, 0, 0, 0, 0, 0, 0, 691,
	0, 0, 0, 0, 831, 832, 0, 691, 0, 0,
	1376, 1358, 1359, 1360, 0, 0, 1385, 0, 0, 393,
	0, 393, 1392, 0, 0, 0, 0, 0, 0, 81,
	81, 0, 81, 0, 0, 0, 393, 81, 0, 81,
	81, 81, 264, 1397, 548, 81, 0, 0, 582, 0,
	1250, 1405, 1404, 1406, 1407, 1408, 0, 648, 0, 0,
	884, 885, 81, 264, 393, 1415, 1409, 1422, 0, 0,
	0, 0, 1435, 1436, 1437, 1438, 1430, 956, 0, 1442,
	1443, 0, 0, 1399, 262, 0, 1251, 288, 0, 1400,
	0, 1449, 1450, 1451, 1445, 0, 0, 0, 81, 0,
	1453, 0, 693, 1452, 1250, 1423, 0, 1424, 0, 81,
	81, 0, 315, 0, 0, 384, 0, 0, 950, 1427,
	262, 1468, 262, 0, 1472, 1471, 1467, 0, 81, 0,
	0, 1477, 1106, 1476, 0, 0, 1446, 0, 261, 264,
	1251, 0, 51, 0, 1216, 1217, 0, 81, 0, 1482,
	0, 0, 0, 0, 0, 0, 1485, 1233, 1234, 898,
	1235, 1236, 0, 0, 0, 0, 0, 1490, 0, 382,
	81, 1492, 1243, 1244, 520, 0, 522, 0, 0, 0,
	1212, 0, 0, 1505, 1494, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 1517, 1518, 0, 0, 0, 882,
	883, 0, 393, 888, 891, 892, 0, 0, 0, 1322,
	1323, 0, 1324, 1242, 0, 1326, 0, 1328, 0, 0,
	0, 0, 1043, 1044, 0, 585, 0, 0, 904, 0,
	906, 907, 0, 0, 1290, 0, 0, 0, 0, 0,
	1503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1172, 393, 0, 621, 622, 614, 615, 616, 617, 618,
	619, 620, 613, 0, 956, 623, 956, 0, 0, 0,
	0, 1365, 0, 274, 0, 0, 0, 0, 0, 0,
	393, 577, 691, 0, 0, 0, 0, 1070, 0, 0,
	0, 0, 0, 0, 0, 1320, 0, 0, 284, 0,
	262, 0, 0, 262, 1088, 393, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 262, 0, 0, 612, 611,
	621, 622, 614, 615, 616, 617, 618, 619, 620, 613,
	1212, 0, 623, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 898, 0, 267,
	1254, 1256, 0, 0, 529, 0, 270, 535, 0, 0,
	0, 0, 0, 542, 278, 273, 0, 0, 0, 544,
	0, 0, 0, 0, 1256, 0, 0, 1053, 0, 0,
	24, 25, 52, 27, 28, 0, 0, 0, 0, 393,
	0, 393, 1283, 0, 0, 0, 0, 276, 0, 43,
	0, 0, 956, 283, 29, 48, 49, 0, 0, 0,
	0, 0, 1387, 1388, 1389, 1390, 1391, 0, 0, 0,
	1394, 1395, 0, 0, 1068, 38, 262, 262, 262, 54,
	268, 0, 1380, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1084, 1307, 0, 1205, 1312, 1313, 1314, 0,
	0, 0, 0, 0, 0, 393, 0, 280, 271, 0,
	281, 282, 287, 0, 0, 0, 272, 275, 0, 269,
	286, 285, 0, 0, 0, 0, 0, 0, 0, 0,
	685, 0, 694, 0, 0, 0, 0, 0, 0, 0,
	31, 32, 34, 33, 36, 1240, 50, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 898, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 37, 44,
	45, 0, 0, 46, 47, 35, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 1367, 0, 1274, 0, 39,
	40, 0, 41, 42, 0, 0, 0, 0, 0, 0,
	393, 1380, 956, 0, 0, 0, 0, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 262, 0, 0,
	0, 0, 262, 1509, 0, 262, 0, 0, 262, 0,
	0, 0, 792, 0, 0, 0, 1401, 1402, 0, 1403,
	0, 0, 262, 0, 1367, 0, 1367, 1367, 1367, 0,
	0, 0, 1283, 0, 0, 0, 0, 0, 0, 0,
	718, 0, 0, 0, 53, 0, 0, 0, 0, 1367,
	774, 775, 0, 0, 0, 0, 782, 0, 0, 382,
	0, 1341, 788, 262, 0, 0, 0, 0, 0, 1339,
	0, 0, 792, 0, 0, 0, 799, 0, 0, 648,
	0, 0, 0, 0, 0, 1459, 0, 1354, 0, 0,
	1355, 0, 0, 1357, 0, 0, 393, 393, 0, 612,
	611, 621, 622, 614, 615, 616, 617, 618, 619, 620,
	613, 0, 898, 623, 315, 1478, 0, 830, 0, 315,
	315, 0, 0, 315, 315, 315, 0, 0, 0, 899,
	0, 0, 0, 1335, 1484, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 315,
	315, 315, 1334, 262, 0, 0, 0, 1367, 0, 0,
	0, 262, 932, 0, 0, 262, 262, 0, 0, 262,
	940, 792, 607, 0, 610, 0, 0, 0, 0, 0,
	624, 625, 626, 627, 628, 629, 630, 0, 608, 609,
	606, 612, 611, 621, 622, 614, 615, 616, 617, 618,
	619, 620, 613, 0, 0, 623, 0, 910, 612, 611,
	621, 622, 614, 615, 616, 617, 618, 619, 620, 613,
	937, 0, 623, 0, 0, 0, 0, 612, 611, 621,
	622, 614, 615, 616, 617, 618, 619, 620, 613, 262,
	0, 623, 0, 0, 0, 0, 262, 262, 262, 262,
	262, 0, 262, 262, 0, 0, 262, 0, 0, 0,
	0, 1470, 648, 0, 0, 0, 0, 0, 0, 740,
	0, 0, 0, 262, 1340, 1038, 1039, 0, 0, 0,
	262, 0, 0, 0, 0, 792, 0, 0, 1333, 0,
	0, 0, 0, 1003, 0, 0, 0, 315, 0, 0,
	1023, 1024, 1025, 1026, 1027, 0, 1030, 1031, 0, 0,
	1032, 0, 612, 611, 621, 622, 614, 615, 616, 617,
	618, 619, 620, 613, 0, 0, 623, 1034, 0, 0,
	0, 0, 0, 0, 1041, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 315, 0, 0, 0, 728, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 315, 612, 611, 621, 622, 614, 615, 616,
	617, 618, 619, 620, 613, 1332, 0, 623, 0, 0,
	899, 262, 262, 262, 262, 262, 741, 0, 0, 0,
	0, 0, 0, 1120, 0, 0, 262, 0, 0, 0,
	932, 0, 0, 0, 262, 0, 0, 0, 0, 754,
	757, 758, 759, 760, 761, 762, 0, 763, 764, 765,
	766, 767, 742, 743, 744, 745, 726, 727, 755, 0,
	729, 0, 730, 731, 732, 733, 734, 735, 736, 737,
	738, 739, 746, 747, 748, 749, 750, 751, 752, 753,
	612, 611, 621, 622, 614, 615, 616, 617, 618, 619,
	620, 613, 1215, 0, 623, 612, 611, 621, 622, 614,
	615, 616, 617, 618, 619, 620, 613, 0, 0, 623,
	0, 1065, 612, 611, 621, 622, 614, 615, 616, 617,
	618, 619, 620, 613, 0, 0, 623, 0, 0, 0,
	756, 612, 611, 621, 622, 614, 615, 616, 617, 618,
	619, 620, 613, 0, 0, 623, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 315, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 315, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 792,
	0, 0, 0, 0, 0, 0, 0, 0, 899, 0,
	0, 1208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1302, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1315, 0, 0, 899, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1431, 0, 0, 0, 0,
	0, 0, 0, 899, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 503,
	491, 0, 448, 506, 421, 438, 514, 439, 442, 479,
	406, 461, 165, 436, 0, 425, 401, 432, 402, 423,
	450, 111, 454, 420, 493, 464, 505, 137, 426, 512,
	139, 470, 0, 211, 153, 0, 0, 452, 495, 459,
	488, 447, 480, 411, 469, 507, 437, 477, 508, 0,
	0, 1480, 80, 0, 957, 958, 0, 0, 0, 0,
	0, 101, 0, 474, 502, 434, 476, 478, 400, 471,
	0, 404, 407, 513, 498, 429, 430, 1143, 0, 0,
	0, 0, 0, 0, 451, 460, 485, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 468, 0,
	0, 0, 408, 405, 0, 0, 449, 0, 0, 0,
	410, 0, 428, 486, 0, 398, 119, 490, 497, 446,
	265, 501, 444, 443, 504, 184, 0, 215, 122, 136,
	97, 83, 93, 0, 121, 162, 191, 195, 494, 424,
	433, 105, 431, 193, 172, 231, 467, 174, 192, 140,
	221, 185, 230, 240, 241, 218, 238, 245, 208, 86,
	217, 229, 102, 203, 88, 227, 214, 151, 131, 132,
	87, 0, 189, 110, 117, 107, 164, 224, 225, 106,
	248, 94, 237, 90, 95, 236, 158, 220, 228, 152,
	145, 89, 226, 150, 144, 135, 114, 124, 182, 142,
	183, 125, 155, 154, 156, 0, 403, 0, 212, 234,
	249, 99, 419, 219, 243, 244, 0, 0, 100, 118,
	113, 181, 157, 96, 127, 209, 134, 141, 188, 247,
	171, 194, 103, 233, 210, 415, 418, 413, 414, 462,
	463, 509, 510, 511, 487, 409, 0, 416, 417, 0,
	492, 499, 500, 466, 82, 91, 138, 246, 186, 116,
	235, 399, 412, 109, 422, 0, 0, 435, 440, 441,
	453, 455, 456, 457, 458, 465, 472, 473, 475, 481,
	482, 483, 484, 489, 496, 515, 84, 85, 92, 98,
	104, 108, 112, 115, 120, 123, 126, 128, 129, 130,
	133, 143, 146, 147, 148, 149, 159, 160, 161, 163,
	166, 167, 168, 169, 170, 173, 175, 176, 177, 178,
	179, 180, 187, 190, 196, 197, 198, 199, 200, 201,
	202, 204, 205, 206, 207, 213, 216, 222, 223, 232,
	239, 242, 503, 491, 0, 448, 506, 421, 438, 514,
	439, 442, 479, 406, 461, 165, 436, 0, 425, 401,
	432, 402, 423, 450, 111, 454, 420, 493, 464, 505,
	137, 426, 512, 139, 470, 0, 211, 153, 0, 0,
	452, 495, 459, 488, 447, 480, 411, 469, 507, 437,
	477, 508, 0, 0, 0, 80, 0, 957, 958, 0,
	0, 0, 0, 0, 101, 0, 474, 502, 434, 476,
	478, 400, 471, 0, 404, 407, 513, 498, 429, 430,
	0, 0, 0, 0, 0, 0, 0, 451, 460, 485,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 468, 0, 0, 0, 408, 405, 0, 0, 449,
	0, 0, 0, 410, 0, 428, 486, 0, 398, 119,
	490, 497, 446, 265, 501, 444, 443, 504, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 494, 424, 433, 105, 431, 193, 172, 231, 467,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 229, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 95, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 403,
	0, 212, 234, 249, 99, 419, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 157, 96, 127, 209, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 415, 418,
	413, 414, 462, 463, 509, 510, 511, 487, 409, 0,
	416, 417, 0, 492, 499, 500, 466, 82, 91, 138,
	246, 186, 116, 235, 399, 412, 109, 422, 0, 0,
	435, 440, 441, 453, 455, 456, 457, 458, 465, 472,
	473, 475, 481, 482, 483, 484, 489, 496, 515, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 503, 491, 0, 448, 506,
	421, 438, 514, 439, 442, 479, 406, 461, 165, 436,
	0, 425, 401, 432, 402, 423, 450, 111, 454, 420,
	493, 464, 505, 137, 426, 512, 139, 470, 0, 211,
	153, 0, 0, 452, 495, 459, 488, 447, 480, 411,
	469, 507, 437, 477, 508, 54, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 474,
	502, 434, 476, 478, 400, 471, 0, 404, 407, 513,
	498, 429, 430, 0, 0, 0, 0, 0, 0, 0,
	451, 460, 485, 445, 0, 0, 0, 0, 0, 0,
	0, 0, 427, 0, 468, 0, 0, 0, 408, 405,
	0, 0, 449, 0, 0, 0, 410, 0, 428, 486,
	0, 398, 119, 490, 497, 446, 265, 501, 444, 443,
	504, 184, 0, 215, 122, 136, 97, 83, 93, 0,
	121, 162, 191, 195, 494, 424, 433, 105, 431, 193,
	172, 231, 467, 174, 192, 140, 221, 185, 230, 240,
	241, 218, 238, 245, 208, 86, 217, 229, 102, 203,
	88, 227, 214, 151, 131, 132, 87, 0, 189, 110,
	117, 107, 164, 224, 225, 106, 248, 94, 237, 90,
	95, 236, 158, 220, 228, 152, 145, 89, 226, 150,
	144, 135, 114, 124, 182, 142, 183, 125, 155, 154,
	156, 0, 403, 0, 212, 234, 249, 99, 419, 219,
	243, 244, 0, 0, 100, 118, 113, 181, 157, 96,
	127, 209, 134, 141, 188, 247, 171, 194, 103, 233,
	210, 415, 418, 413, 414, 462, 463, 509, 510, 511,
	487, 409, 0, 416, 417, 0, 492, 499, 500, 466,
	82, 91, 138, 246, 186, 116, 235, 399, 412, 109,
	422, 0, 0, 435, 440, 441, 453, 455, 456, 457,
	458, 465, 472, 473, 475, 481, 482, 483, 484, 489,
	496, 515, 84, 85, 92, 98, 104, 108, 112, 115,
	120, 123, 126, 128, 129, 130, 133, 143, 146, 147,
	148, 149, 159, 160, 161, 163, 166, 167, 168, 169,
	170, 173, 175, 176, 177, 178, 179, 180, 187, 190,
	196, 197, 198, 199, 200, 201, 202, 204, 205, 206,
	207, 213, 216, 222, 223, 232, 239, 242, 503, 491,
	0, 448, 506, 421, 438, 514, 439, 442, 479, 406,
	461, 165, 436, 0, 425, 401, 432, 402, 423, 450,
	111, 454, 420, 493, 464, 505, 137, 426, 512, 139,
	470, 0, 211, 153, 0, 0, 452, 495, 459, 488,
	447, 480, 411, 469, 507, 437, 477, 508, 0, 0,
	0, 80, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 474, 502, 434, 476, 478, 400, 471, 0,
	404, 407, 513, 498, 429, 430, 0, 0, 0, 0,
	0, 0, 0, 451, 460, 485, 445, 0, 0, 0,
	0, 0, 0, 1211, 0, 427, 0, 468, 0, 0,
	0, 408, 405, 0, 0, 449, 0, 0, 0, 410,
	0, 428, 486, 0, 398, 119, 490, 497, 446, 265,
	501, 444, 443, 504, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 494, 424, 433,
	105, 431, 193, 172, 231, 467, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 403, 0, 212, 234, 249,
	99, 419, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 415, 418, 413, 414, 462, 463,
	509, 510, 511, 487, 409, 0, 416, 417, 0, 492,
	499, 500, 466, 82, 91, 138, 246, 186, 116, 235,
	399, 412, 109, 422, 0, 0, 435, 440, 441, 453,
	455, 456, 457, 458, 465, 472, 473, 475, 481, 482,
	483, 484, 489, 496, 515, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 503, 491, 0, 448, 506, 421, 438, 514, 439,
	442, 479, 406, 461, 165, 436, 0, 425, 401, 432,
	402, 423, 450, 111, 454, 420, 493, 464, 505, 137,
	426, 512, 139, 470, 0, 211, 153, 0, 0, 452,
	495, 459, 488, 447, 480, 411, 469, 507, 437, 477,
	508, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 474, 502, 434, 476, 478,
	400, 471, 0, 404, 407, 513, 498, 429, 430, 0,
	0, 0, 0, 0, 0, 0, 451, 460, 485, 445,
	0, 0, 0, 0, 0, 0, 941, 0, 427, 0,
	468, 0, 0, 0, 408, 405, 0, 0, 449, 0,
	0, 0, 410, 0, 428, 486, 0, 398, 119, 490,
	497, 446, 265, 501, 444, 443, 504, 184, 0, 215,
	122, 136, 97, 83, 93, 0, 121, 162, 191, 195,
	494, 424, 433, 105, 431, 193, 172, 231, 467, 174,
	192, 140, 221, 185, 230, 240, 241, 218, 238, 245,
	208, 86, 217, 229, 102, 203, 88, 227, 214, 151,
	131, 132, 87, 0, 189, 110, 117, 107, 164, 224,
	225, 106, 248, 94, 237, 90, 95, 236, 158, 220,
	228, 152, 145, 89, 226, 150, 144, 135, 114, 124,
	182, 142, 183, 125, 155, 154, 156, 0, 403, 0,
	212, 234, 249, 99, 419, 219, 243, 244, 0, 0,
	100, 118, 113, 181, 157, 96, 127, 209, 134, 141,
	188, 247, 171, 194, 103, 233, 210, 415, 418, 413,
	414, 462, 463, 509, 510, 511, 487, 409, 0, 416,
	417, 0, 492, 499, 500, 466, 82, 91, 138, 246,
	186, 116, 235, 399, 412, 109, 422, 0, 0, 435,
	440, 441, 453, 455, 456, 457, 458, 465, 472, 473,
	475, 481, 482, 483, 484, 489, 496, 515, 84, 85,
	92, 98, 104, 108, 112, 115, 120, 123, 126, 128,
	129, 130, 133, 143, 146, 147, 148, 149, 159, 160,
	161, 163, 166, 167, 168, 169, 170, 173, 175, 176,
	177, 178, 179, 180, 187, 190, 196, 197, 198, 199,
	200, 201, 202, 204, 205, 206, 207, 213, 216, 222,
	223, 232, 239, 242, 503, 491, 0, 448, 506, 421,
	438, 514, 439, 442, 479, 406, 461, 165, 436, 0,
	425, 401, 432, 402, 423, 450, 111, 454, 420, 493,
	464, 505, 137, 426, 512, 139, 470, 0, 211, 153,
	0, 0, 452, 495, 459, 488, 447, 480, 411, 469,
	507, 437, 477, 508, 0, 0, 0, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 474, 502,
	434, 476, 478, 400, 471, 0, 404, 407, 513, 498,
	429, 430, 0, 0, 0, 0, 0, 0, 0, 451,
	460, 485, 445, 0, 0, 0, 0, 0, 0, 839,
	0, 427, 0, 468, 0, 0, 0, 408, 405, 0,
	0, 449, 0, 0, 0, 410, 0, 428, 486, 0,
	398, 119, 490, 497, 446, 265, 501, 444, 443, 504,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 494, 424, 433, 105, 431, 193, 172,
	231, 467, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 403, 0, 212, 234, 249, 99, 419, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	415, 418, 413, 414, 462, 463, 509, 510, 511, 487,
	409, 0, 416, 417, 0, 492, 499, 500, 466, 82,
	91, 138, 246, 186, 116, 235, 399, 412, 109, 422,
	0, 0, 435, 440, 441, 453, 455, 456, 457, 458,
	465, 472, 473, 475, 481, 482, 483, 484, 489, 496,
	515, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 503, 491, 0,
	448, 506, 421, 438, 514, 439, 442, 479, 406, 461,
	165, 436, 0, 425, 401, 432, 402, 423, 450, 111,
	454, 420, 493, 464, 505, 137, 426, 512, 139, 470,
	0, 211, 153, 0, 0, 452, 495, 459, 488, 447,
	480, 411, 469, 507, 437, 477, 508, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	0, 474, 502, 434, 476, 478, 400, 471, 0, 404,
	407, 513, 498, 429, 430, 0, 0, 0, 0, 0,
	0, 0, 451, 460, 485, 445, 0, 0, 0, 0,
	0, 0, 0, 0, 427, 0, 468, 0, 0, 0,
	408, 405, 0, 0, 449, 0, 0, 0, 410, 0,
	428, 486, 0, 398, 119, 490, 497, 446, 265, 501,
	444, 443, 504, 184, 0, 215, 122, 136, 97, 83,
	93, 0, 121, 162, 191, 195, 494, 424, 433, 105,
	431, 193, 172, 231, 467, 174, 192, 140, 221, 185,
	230, 240, 241, 218, 238, 245, 208, 86, 217, 229,
	102, 203, 88, 227, 214, 151, 131, 132, 87, 0,
	189, 110, 117, 107, 164, 224, 225, 106, 248, 94,
	237, 90, 95, 236, 158, 220, 228, 152, 145, 89,
	226, 150, 144, 135, 114, 124, 182, 142, 183, 125,
	155, 154, 156, 0, 403, 0, 212, 234, 249, 99,
	419, 219, 243, 244, 0, 0, 100, 118, 113, 181,
	157, 96, 127, 209, 134, 141, 188, 247, 171, 194,
	103, 233, 210, 415, 418, 413, 414, 462, 463, 509,
	510, 511, 487, 409, 0, 416, 417, 0, 492, 499,
	500, 466, 82, 91, 138, 246, 186, 116, 235, 399,
	412, 109, 422, 0, 0, 435, 440, 441, 453, 455,
	456, 457, 458, 465, 472, 473, 475, 481, 482, 483,
	484, 489, 496, 515, 84, 85, 92, 98, 104, 108,
	112, 115, 120, 123, 126, 128, 129, 130, 133, 143,
	146, 147, 148, 149, 159, 160, 161, 163, 166, 167,
	168, 169, 170, 173, 175, 176, 177, 178, 179, 180,
	187, 190, 196, 197, 198, 199, 200, 201, 202, 204,
	205, 206, 207, 213, 216, 222, 223, 232, 239, 242,
	503, 491, 0, 448, 506, 421, 438, 514, 439, 442,
	479, 406, 461, 165, 436, 0, 425, 401, 432, 402,
	423, 450, 111, 454, 420, 493, 464, 505, 137, 426,
	512, 139, 470, 0, 211, 153, 0, 0, 452, 495,
	459, 488, 447, 480, 411, 469, 507, 437, 477, 508,
	0, 0, 0, 320, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 0, 474, 502, 434, 476, 478, 400,
	471, 0, 404, 407, 513, 498, 429, 430, 0, 0,
	0, 0, 0, 0, 0, 451, 460, 485, 445, 0,
	0, 0, 0, 0, 0, 0, 0, 427, 0, 468,
	0, 0, 0, 408, 405, 0, 0, 449, 0, 0,
	0, 410, 0, 428, 486, 0, 398, 119, 490, 497,
	446, 265, 501, 444, 443, 504, 184, 0, 215, 122,
	136, 97, 83, 93, 0, 121, 162, 191, 195, 494,
	424, 433, 105, 431, 193, 172, 231, 467, 174, 192,
	140, 221, 185, 230, 240, 241, 218, 238, 245, 208,
	86, 217, 229, 102, 203, 88, 227, 214, 151, 131,
	132, 87, 0, 189, 110, 117, 107, 164, 224, 225,
	106, 248, 94, 237, 90, 95, 236, 158, 220, 228,
	152, 145, 89, 226, 150, 144, 135, 114, 124, 182,
	142, 183, 125, 155, 154, 156, 0, 403, 0, 212,
	234, 249, 99, 419, 219, 243, 244, 0, 0, 100,
	118, 113, 181, 157, 96, 127, 209, 134, 141, 188,
	247, 171, 194, 103, 233, 210, 415, 418, 413, 414,
	462, 463, 509, 510, 511, 487, 409, 0, 416, 417,
	0, 492, 499, 500, 466, 82, 91, 138, 246, 186,
	116, 235, 399, 412, 109, 422, 0, 0, 435, 440,
	441, 453, 455, 456, 457, 458, 465, 472, 473, 475,
	481, 482, 483, 484, 489, 496, 515, 84, 85, 92,
	98, 104, 108, 112, 115, 120, 123, 126, 128, 129,
	130, 133, 143, 146, 147, 148, 149, 159, 160, 161,
	163, 166, 167, 168, 169, 170, 173, 175, 176, 177,
	178, 179, 180, 187, 190, 196, 197, 198, 199, 200,
	201, 202, 204, 205, 206, 207, 213, 216, 222, 223,
	232, 239, 242, 503, 491, 0, 448, 506, 421, 438,
	514, 439, 442, 479, 406, 461, 165, 436, 0, 425,
	401, 432, 402, 423, 450, 111, 454, 420, 493, 464,
	505, 137, 426, 512, 139, 470, 0, 211, 153, 0,
	0, 452, 495, 459, 488, 447, 480, 411, 469, 507,
	437, 477, 508, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 0, 474, 502, 434,
	476, 478, 400, 471, 0, 404, 407, 513, 498, 429,
	430, 0, 0, 0, 0, 0, 0, 0, 451, 460,
	485, 445, 0, 0, 0, 0, 0, 0, 0, 0,
	427, 0, 468, 0, 0, 0, 408, 405, 0, 0,
	449, 0, 0, 0, 410, 0, 428, 486, 0, 398,
	119, 490, 497, 446, 265, 501, 444, 443, 504, 184,
	0, 215, 122, 136, 97, 83, 93, 0, 121, 162,
	191, 195, 494, 424, 433, 105, 431, 193, 172, 231,
	467, 174, 192, 140, 221, 185, 230, 240, 241, 218,
	238, 245, 208, 86, 217, 229, 102, 203, 88, 227,
	214, 151, 131, 132, 87, 0, 189, 110, 117, 107,
	164, 224, 225, 106, 248, 94, 237, 90, 396, 236,
	158, 220, 228, 152, 145, 89, 226, 150, 144, 135,
	114, 124, 182, 142, 183, 125, 155, 154, 156, 0,
	403, 0, 212, 234, 249, 99, 419, 219, 243, 244,
	0, 0, 100, 118, 113, 181, 397, 395, 127, 209,
	134, 141, 188, 247, 171, 194, 103, 233, 210, 415,
	418, 413, 414, 462, 463, 509, 510, 511, 487, 409,
	0, 416, 417, 0, 492, 499, 500, 466, 82, 91,
	138, 246, 186, 116, 235, 399, 412, 109, 422, 0,
	0, 435, 440, 441, 453, 455, 456, 457, 458, 465,
	472, 473, 475, 481, 482, 483, 484, 489, 496, 515,
	84, 85, 92, 98, 104, 108, 112, 115, 120, 123,
	126, 128, 129, 130, 133, 143, 146, 147, 148, 149,
	159, 160, 161, 163, 166, 167, 168, 169, 170, 173,
	175, 176, 177, 178, 179, 180, 187, 190, 196, 197,
	198, 199, 200, 201, 202, 204, 205, 206, 207, 213,
	216, 222, 223, 232, 239, 242, 503, 491, 0, 448,
	506, 421, 438, 514, 439, 442, 479, 406, 461, 165,
	436, 0, 425, 401, 432, 402, 423, 450, 111, 454,
	420, 493, 464, 505, 137, 426, 512, 139, 470, 0,
	211, 153, 0, 0, 452, 495, 459, 488, 447, 480,
	411, 469, 507, 437, 477, 508, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 0,
	474, 502, 434, 476, 478, 400, 471, 0, 404, 407,
	513, 498, 429, 430, 0, 0, 0, 0, 0, 0,
	0, 451, 460, 485, 445, 0, 0, 0, 0, 0,
	0, 0, 0, 427, 0, 468, 0, 0, 0, 408,
	405, 0, 0, 449, 0, 0, 0, 410, 0, 428,
	486, 0, 398, 119, 490, 497, 446, 265, 501, 444,
	443, 504, 184, 0, 215, 122, 136, 97, 83, 93,
	0, 121, 162, 191, 195, 494, 424, 433, 105, 431,
	193, 172, 231, 467, 174, 192, 140, 221, 185, 230,
	240, 241, 218, 238, 245, 208, 86, 217, 229, 102,
	203, 88, 227, 214, 151, 131, 132, 87, 0, 189,
	110, 117, 107, 164, 224, 225, 106, 248, 94, 237,
	90, 95, 236, 158, 220, 228, 152, 145, 89, 226,
	150, 144, 135, 114, 124, 182, 142, 183, 125, 155,
	154, 156, 0, 403, 0, 212, 234, 249, 99, 419,
	219, 243, 244, 0, 0, 100, 118, 113, 181, 157,
	96, 127, 209, 134, 141, 188, 247, 171, 194, 103,
	233, 210, 415, 418, 413, 414, 462, 463, 509, 510,
	511, 487, 409, 0, 416, 417, 0, 492, 499, 500,
	466, 82, 91, 138, 246, 186, 116, 235, 399, 412,
	109, 422, 0, 0, 435, 440, 441, 453, 455, 456,
	457, 458, 465, 472, 473, 475, 481, 482, 483, 484,
	489, 496, 515, 84, 85, 92, 98, 104, 108, 112,
	115, 120, 123, 126, 128, 129, 130, 133, 143, 146,
	147, 148, 149, 159, 160, 161, 163, 166, 167, 168,
	169, 170, 173, 175, 176, 177, 178, 179, 180, 187,
	190, 196, 197, 198, 199, 200, 201, 202, 204, 205,
	206, 207, 213, 216, 222, 223, 232, 239, 242, 503,
	491, 0, 448, 506, 421, 438, 514, 439, 442, 479,
	406, 461, 165, 436, 0, 425, 401, 432, 402, 423,
	450, 111, 454, 420, 493, 464, 505, 137, 426, 512,
	139, 470, 0, 211, 153, 0, 0, 452, 495, 459,
	488, 447, 480, 411, 469, 507, 437, 477, 508, 0,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 101, 0, 474, 502, 434, 476, 478, 400, 471,
	0, 404, 407, 513, 498, 429, 430, 0, 0, 0,
	0, 0, 0, 0, 451, 460, 485, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 427, 0, 468, 0,
	0, 0, 408, 405, 0, 0, 449, 0, 0, 0,
	410, 0, 428, 486, 0, 398, 119, 490, 497, 446,
	265, 501, 444, 443, 504, 184, 0, 215, 122, 136,
	97, 83, 93, 0, 121, 162, 191, 195, 494, 424,
	433, 105, 431, 193, 172, 231, 467, 174, 192, 140,
	221, 185, 230, 240, 241, 218, 238, 245, 208, 86,
	217, 705, 102, 203, 88, 227, 214, 151, 131, 132,
	87, 0, 189, 110, 117, 107, 164, 224, 225, 106,
	248, 94, 237, 90, 396, 236, 158, 220, 228, 152,
	145, 89, 226, 150, 144, 135, 114, 124, 182, 142,
	183, 125, 155, 154, 156, 0, 403, 0, 212, 234,
	249, 99, 419, 219, 243, 244, 0, 0, 100, 118,
	113, 181, 397, 395, 127, 209, 134, 141, 188, 247,
	171, 194, 103, 233, 210, 415, 418, 413, 414, 462,
	463, 509, 510, 511, 487, 409, 0, 416, 417, 0,
	492, 499, 500, 466, 82, 91, 138, 246, 186, 116,
	235, 399, 412, 109, 422, 0, 0, 435, 440, 441,
	453, 455, 456, 457, 458, 465, 472, 473, 475, 481,
	482, 483, 484, 489, 496, 515, 84, 85, 92, 98,
	104, 108, 112, 115, 120, 123, 126, 128, 129, 130,
	133, 143, 146, 147, 148, 149, 159, 160, 161, 163,
	166, 167, 168, 169, 170, 173, 175, 176, 177, 178,
	179, 180, 187, 190, 196, 197, 198, 199, 200, 201,
	202, 204, 205, 206, 207, 213, 216, 222, 223, 232,
	239, 242, 503, 491, 0, 448, 506, 421, 438, 514,
	439, 442, 479, 406, 461, 165, 436, 0, 425, 401,
	432, 402, 423, 450, 111, 454, 420, 493, 464, 505,
	137, 426, 512, 139, 470, 0, 211, 153, 0, 0,
	452, 495, 459, 488, 447, 480, 411, 469, 507, 437,
	477, 508, 0, 0, 0, 80, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 0, 474, 502, 434, 476,
	478, 400, 471, 0, 404, 407, 513, 498, 429, 430,
	0, 0, 0, 0, 0, 0, 0, 451, 460, 485,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 427,
	0, 468, 0, 0, 0, 408, 405, 0, 0, 449,
	0, 0, 0, 410, 0, 428, 486, 0, 398, 119,
	490, 497, 446, 265, 501, 444, 443, 504, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 494, 424, 433, 105, 431, 193, 172, 231, 467,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 387, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 396, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 403,
	0, 212, 234, 249, 99, 419, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 397, 395, 390, 389, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 415, 418,
	413, 414, 462, 463, 509, 510, 511, 487, 409, 0,
	416, 417, 0, 492, 499, 500, 466, 82, 91, 138,
	246, 186, 116, 235, 399, 412, 109, 422, 0, 0,
	435, 440, 441, 453, 455, 456, 457, 458, 465, 472,
	473, 475, 481, 482, 483, 484, 489, 496, 515, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 165, 0, 0, 0, 0,
	322, 0, 0, 0, 111, 0, 319, 0, 0, 0,
	137, 0, 362, 139, 0, 0, 211, 153, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 0, 0,
	948, 0, 54, 0, 0, 320, 341, 340, 343, 344,
	345, 346, 0, 0, 101, 342, 347, 348, 349, 949,
	0, 0, 317, 334, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 0, 0, 0,
	0, 375, 0, 333, 0, 0, 328, 329, 330, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 265, 0, 0, 373, 0, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 0, 0, 0, 105, 0, 193, 172, 231, 0,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 229, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 95, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 0,
	0, 212, 234, 249, 99, 0, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 157, 96, 127, 209, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 363, 374,
	369, 370, 367, 368, 366, 365, 364, 376, 355, 356,
	357, 358, 360, 0, 371, 372, 359, 82, 91, 138,
	246, 186, 116, 235, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 165, 0, 0, 875, 0,
	322, 0, 0, 0, 111, 0, 319, 0, 0, 0,
	137, 0, 362, 139, 0, 0, 211, 153, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 320, 341, 340, 343, 344,
	345, 346, 0, 0, 101, 342, 347, 348, 349, 0,
	0, 0, 317, 334, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 313, 0, 0,
	0, 375, 0, 333, 0, 0, 328, 329, 330, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 265, 0, 0, 373, 0, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 0, 0, 0, 105, 0, 193, 172, 231, 0,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 229, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 95, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 0,
	0, 212, 234, 249, 99, 0, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 157, 96, 127, 209, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 363, 374,
	369, 370, 367, 368, 366, 365, 364, 376, 355, 356,
	357, 358, 360, 0, 371, 372, 359, 82, 91, 138,
	246, 186, 116, 235, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 165, 0, 0, 0, 0,
	322, 0, 0, 0, 111, 0, 319, 0, 0, 0,
	137, 0, 362, 139, 0, 0, 211, 153, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 577, 320, 341, 340, 343, 344,
	345, 346, 0, 0, 101, 342, 347, 348, 349, 0,
	0, 0, 317, 334, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 0, 0, 0,
	0, 375, 0, 333, 0, 0, 328, 329, 330, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 265, 0, 0, 373, 0, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 0, 0, 0, 105, 0, 193, 172, 231, 0,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 229, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 95, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 0,
	0, 212, 234, 249, 99, 0, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 157, 96, 127, 209, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 363, 374,
	369, 370, 367, 368, 366, 365, 364, 376, 355, 356,
	357, 358, 360, 0, 371, 372, 359, 82, 91, 138,
	246, 186, 116, 235, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 165, 0, 0, 0, 0,
	322, 0, 0, 0, 111, 0, 319, 0, 0, 0,
	137, 0, 362, 139, 0, 0, 211, 153, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 320, 341, 340, 343, 344,
	345, 346, 0, 0, 101, 342, 347, 348, 349, 0,
	0, 0, 317, 334, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 313, 0, 0,
	0, 375, 0, 333, 0, 0, 328, 329, 330, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 265, 0, 0, 373, 0, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 0, 0, 0, 105, 0, 193, 172, 231, 0,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 229, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 95, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 0,
	0, 212, 234, 249, 99, 0, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 157, 96, 127, 209, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 363, 374,
	369, 370, 367, 368, 366, 365, 364, 376, 355, 356,
	357, 358, 360, 0, 371, 372, 359, 82, 91, 138,
	246, 186, 116, 235, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 165, 0, 0, 0, 0,
	322, 0, 0, 0, 111, 0, 319, 0, 0, 0,
	137, 0, 362, 139, 0, 0, 211, 153, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 320, 341, 890, 343, 344,
	345, 346, 0, 0, 101, 342, 347, 348, 349, 0,
	0, 0, 317, 334, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 313, 0, 0,
	0, 375, 0, 333, 0, 0, 328, 329, 330, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 265, 0, 0, 373, 0, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 0, 0, 0, 105, 0, 193, 172, 231, 0,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 229, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 95, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 0,
	0, 212, 234, 249, 99, 0, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 157, 96, 127, 209, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 363, 374,
	369, 370, 367, 368, 366, 365, 364, 376, 355, 356,
	357, 358, 360, 0, 371, 372, 359, 82, 91, 138,
	246, 186, 116, 235, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 165, 0, 0, 0, 0,
	322, 0, 0, 0, 111, 0, 319, 0, 0, 0,
	137, 0, 362, 139, 0, 0, 211, 153, 0, 0,
	0, 0, 353, 354, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 0, 320, 341, 887, 343, 344,
	345, 346, 0, 0, 101, 342, 347, 348, 349, 0,
	0, 0, 317, 334, 0, 361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 332, 313, 0, 0,
	0, 375, 0, 333, 0, 0, 328, 329, 330, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 119,
	0, 0, 0, 265, 0, 0, 373, 0, 184, 0,
	215, 122, 136, 97, 83, 93, 0, 121, 162, 191,
	195, 0, 0, 0, 105, 0, 193, 172, 231, 0,
	174, 192, 140, 221, 185, 230, 240, 241, 218, 238,
	245, 208, 86, 217, 229, 102, 203, 88, 227, 214,
	151, 131, 132, 87, 0, 189, 110, 117, 107, 164,
	224, 225, 106, 248, 94, 237, 90, 95, 236, 158,
	220, 228, 152, 145, 89, 226, 150, 144, 135, 114,
	124, 182, 142, 183, 125, 155, 154, 156, 0, 0,
	0, 212, 234, 249, 99, 0, 219, 243, 244, 0,
	0, 100, 118, 113, 181, 157, 96, 127, 209, 134,
	141, 188, 247, 171, 194, 103, 233, 210, 363, 374,
	369, 370, 367, 368, 366, 365, 364, 376, 355, 356,
	357, 358, 360, 0, 371, 372, 359, 82, 91, 138,
	246, 186, 116, 235, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 84,
	85, 92, 98, 104, 108, 112, 115, 120, 123, 126,
	128, 129, 130, 133, 143, 146, 147, 148, 149, 159,
	160, 161, 163, 166, 167, 168, 169, 170, 173, 175,
	176, 177, 178, 179, 180, 187, 190, 196, 197, 198,
	199, 200, 201, 202, 204, 205, 206, 207, 213, 216,
	222, 223, 232, 239, 242, 24, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 322, 0, 0, 0, 111, 0, 319, 0,
	0, 0, 137, 0, 362, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 320, 341, 340,
	343, 344, 345, 346, 0, 0, 101, 342, 347, 348,
	349, 0, 0, 0, 317, 334, 0, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 0,
	0, 0, 0, 375, 0, 333, 0, 0, 328, 329,
	330, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 373, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	363, 374, 369, 370, 367, 368, 366, 365, 364, 376,
	355, 356, 357, 358, 360, 0, 371, 372, 359, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 0, 322, 0, 0, 0, 111, 0, 319, 0,
	0, 0, 137, 0, 362, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 320, 341, 340,
	343, 344, 345, 346, 0, 0, 101, 342, 347, 348,
	349, 0, 0, 0, 317, 334, 0, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 0,
	0, 0, 0, 375, 0, 333, 0, 0, 328, 329,
	330, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 373, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	363, 374, 369, 370, 367, 368, 366, 365, 364, 376,
	355, 356, 357, 358, 360, 0, 371, 372, 359, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 137, 0, 362, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 320, 341, 340,
	343, 344, 345, 346, 0, 0, 101, 342, 347, 348,
	349, 0, 0, 0, 0, 334, 0, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 0,
	0, 0, 0, 375, 0, 333, 0, 0, 328, 329,
	330, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 373, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 1510, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	363, 374, 369, 370, 367, 368, 366, 365, 364, 376,
	355, 356, 357, 358, 360, 0, 371, 372, 359, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 137, 0, 362, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 577, 320, 341, 340,
	343, 344, 345, 346, 0, 0, 101, 342, 347, 348,
	349, 0, 0, 0, 0, 334, 0, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 0,
	0, 0, 0, 375, 0, 333, 0, 0, 328, 329,
	330, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 373, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	363, 374, 369, 370, 367, 368, 366, 365, 364, 376,
	355, 356, 357, 358, 360, 0, 371, 372, 359, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 137, 0, 362, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 353, 354, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 320, 341, 340,
	343, 344, 345, 346, 0, 0, 101, 342, 347, 348,
	349, 0, 0, 0, 0, 334, 0, 361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 332, 0,
	0, 0, 0, 375, 0, 333, 0, 0, 328, 329,
	330, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 373, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	363, 374, 369, 370, 367, 368, 366, 365, 364, 376,
	355, 356, 357, 358, 360, 0, 371, 372, 359, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 137, 0, 0, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 612, 611, 621, 622, 614, 615, 616,
	617, 618, 619, 620, 613, 0, 0, 623, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 0, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 600, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 137, 0, 0, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 602,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 597, 596, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 0, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 0, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 137, 0, 0, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 76, 77, 0, 73, 0, 0, 0, 78,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 165, 0, 0,
	0, 931, 0, 0, 0, 0, 111, 0, 0, 0,
	0, 0, 137, 0, 0, 139, 0, 0, 211, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 0, 933,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 0, 0, 0, 265, 0, 0, 0, 0,
	184, 0, 215, 122, 136, 97, 83, 93, 0, 121,
	162, 191, 195, 0, 0, 0, 105, 0, 193, 172,
	231, 0, 174, 192, 140, 221, 185, 230, 240, 241,
	218, 238, 245, 208, 86, 217, 229, 102, 203, 88,
	227, 214, 151, 131, 132, 87, 0, 189, 110, 117,
	107, 164, 224, 225, 106, 248, 94, 237, 90, 95,
	236, 158, 220, 228, 152, 145, 89, 226, 150, 144,
	135, 114, 124, 182, 142, 183, 125, 155, 154, 156,
	0, 0, 0, 212, 234, 249, 99, 0, 219, 243,
	244, 0, 0, 100, 118, 113, 181, 157, 96, 127,
	209, 134, 141, 188, 247, 171, 194, 103, 233, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	91, 138, 246, 186, 116, 235, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 84, 85, 92, 98, 104, 108, 112, 115, 120,
	123, 126, 128, 129, 130, 133, 143, 146, 147, 148,
	149, 159, 160, 161, 163, 166, 167, 168, 169, 170,
	173, 175, 176, 177, 178, 179, 180, 187, 190, 196,
	197, 198, 199, 200, 201, 202, 204, 205, 206, 207,
	213, 216, 222, 223, 232, 239, 242, 24, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 165,
	0, 0, 0, 0, 0, 0, 0, 0, 111, 0,
	0, 0, 0, 0, 137, 0, 0, 139, 0, 0,
	211, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 80,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 0, 0, 265, 0, 0,
	0, 0, 184, 0, 215, 122, 136, 97, 83, 93,
	0, 121, 162, 191, 195, 0, 0, 0, 105, 0,
	193, 172, 231, 0, 174, 192, 140, 221, 185, 230,
	240, 241, 218, 238, 245, 208, 86, 217, 229, 102,
	203, 88, 227, 214, 151, 131, 132, 87, 0, 189,
	110, 117, 107, 164, 224, 225, 106, 248, 94, 237,
	90, 95, 236, 158, 220, 228, 152, 145, 89, 226,
	150, 144, 135, 114, 124, 182, 142, 183, 125, 155,
	154, 156, 0, 0, 0, 212, 234, 249, 99, 0,
	219, 243, 244, 0, 0, 100, 118, 113, 181, 157,
	96, 127, 209, 134, 141, 188, 247, 171, 194, 103,
	233, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 82, 91, 138, 246, 186, 116, 235, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 84, 85, 92, 98, 104, 108, 112,
	115, 120, 123, 126, 128, 129, 130, 133, 143, 146,
	147, 148, 149, 159, 160, 161, 163, 166, 167, 168,
	169, 170, 173, 175, 176, 177, 178, 179, 180, 187,
	190, 196, 197, 198, 199, 200, 201, 202, 204, 205,
	206, 207, 213, 216, 222, 223, 232, 239, 242, 24,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 165, 0, 0, 0, 931, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 933, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 929, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 0, 826, 0, 0, 827, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 714, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 713, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 933, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	111, 0, 0, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 80, 0, 602, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 165, 0, 0, 0, 0, 0, 0, 0, 684,
	111, 0, 0, 0, 0, 0, 137, 0, 0, 139,
	0, 0, 211, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 119, 0, 0, 0, 265,
	0, 0, 0, 0, 184, 0, 215, 122, 136, 97,
	83, 93, 0, 121, 162, 191, 195, 0, 0, 0,
	105, 0, 193, 172, 231, 0, 174, 192, 140, 221,
	185, 230, 240, 241, 218, 238, 245, 208, 86, 217,
	229, 102, 203, 88, 227, 214, 151, 131, 132, 87,
	0, 189, 110, 117, 107, 164, 224, 225, 106, 248,
	94, 237, 90, 95, 236, 158, 220, 228, 152, 145,
	89, 226, 150, 144, 135, 114, 124, 182, 142, 183,
	125, 155, 154, 156, 0, 0, 0, 212, 234, 249,
	99, 0, 219, 243, 244, 0, 0, 100, 118, 113,
	181, 157, 96, 127, 209, 134, 141, 188, 247, 171,
	194, 103, 233, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 91, 138, 246, 186, 116, 235,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 84, 85, 92, 98, 104,
	108, 112, 115, 120, 123, 126, 128, 129, 130, 133,
	143, 146, 147, 148, 149, 159, 160, 161, 163, 166,
	167, 168, 169, 170, 173, 175, 176, 177, 178, 179,
	180, 187, 190, 196, 197, 198, 199, 200, 201, 202,
	204, 205, 206, 207, 213, 216, 222, 223, 232, 239,
	242, 379, 0, 0, 0, 0, 0, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 137, 0, 0, 139, 0, 0, 211,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 265, 0, 0, 0,
	0, 184, 0, 215, 122, 136, 97, 83, 93, 0,
	121, 162, 191, 195, 0, 0, 0, 105, 0, 193,
	172, 231, 0, 174, 192, 140, 221, 185, 230, 240,
	241, 218, 238, 245, 208, 86, 217, 229, 102, 203,
	88, 227, 214, 151, 131, 132, 87, 0, 189, 110,
	117, 107, 164, 224, 225, 106, 248, 94, 237, 90,
	95, 236, 158, 220, 228, 152, 145, 89, 226, 150,
	144, 135, 114, 124, 182, 142, 183, 125, 155, 154,
	156, 0, 0, 0, 212, 234, 249, 99, 0, 219,
	243, 244, 0, 0, 100, 118, 113, 181, 157, 96,
	127, 209, 134, 141, 188, 247, 171, 194, 103, 233,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 91, 138, 246, 186, 116, 235, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 85, 92, 98, 104, 108, 112, 115,
	120, 123, 126, 128, 129, 130, 133, 143, 146, 147,
	148, 149, 159, 160, 161, 163, 166, 167, 168, 169,
	170, 173, 175, 176, 177, 178, 179, 180, 187, 190,
	196, 197, 198, 199, 200, 201, 202, 204, 205, 206,
	207, 213, 216, 222, 223, 232, 239, 242, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 137, 0, 0, 139, 0, 0, 211,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 260, 0, 265, 0, 0, 0,
	0, 184, 0, 215, 122, 136, 97, 83, 93, 0,
	121, 162, 191, 195, 0, 0, 0, 105, 0, 193,
	172, 231, 0, 174, 192, 140, 221, 185, 230, 240,
	241, 218, 238, 245, 208, 86, 217, 229, 102, 203,
	88, 227, 214, 151, 131, 132, 87, 0, 189, 110,
	117, 107, 164, 224, 225, 106, 248, 94, 237, 90,
	95, 236, 158, 220, 228, 152, 145, 89, 226, 150,
	144, 135, 114, 124, 182, 142, 183, 125, 155, 154,
	156, 0, 0, 0, 212, 234, 249, 99, 0, 219,
	243, 244, 0, 0, 100, 118, 113, 181, 157, 96,
	127, 209, 134, 141, 188, 247, 171, 194, 103, 233,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 91, 138, 246, 186, 116, 235, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 85, 92, 98, 104, 108, 112, 115,
	120, 123, 126, 128, 129, 130, 133, 143, 146, 147,
	148, 149, 159, 160, 161, 163, 166, 167, 168, 169,
	170, 173, 175, 176, 177, 178, 179, 180, 187, 190,
	196, 197, 198, 199, 200, 201, 202, 204, 205, 206,
	207, 213, 216, 222, 223, 232, 239, 242, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 137, 0, 0, 139, 0, 0, 211,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 265, 0, 0, 0,
	0, 184, 0, 215, 122, 136, 97, 83, 93, 0,
	121, 162, 191, 195, 0, 0, 0, 105, 0, 193,
	172, 231, 0, 174, 192, 140, 221, 185, 230, 240,
	241, 218, 238, 245, 208, 86, 217, 229, 102, 203,
	88, 227, 214, 151, 131, 132, 87, 0, 189, 110,
	117, 107, 164, 224, 225, 106, 248, 94, 237, 90,
	95, 236, 158, 220, 228, 152, 145, 89, 226, 150,
	144, 135, 114, 124, 182, 142, 183, 125, 155, 154,
	156, 0, 0, 0, 212, 234, 249, 99, 0, 219,
	243, 244, 0, 0, 100, 118, 113, 181, 157, 96,
	127, 209, 134, 141, 188, 247, 171, 194, 103, 233,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 91, 138, 246, 186, 116, 235, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 85, 92, 98, 104, 108, 112, 115,
	120, 123, 126, 128, 129, 130, 133, 143, 146, 147,
	148, 149, 159, 160, 161, 163, 166, 167, 168, 169,
	170, 173, 175, 176, 177, 178, 179, 180, 187, 190,
	196, 197, 198, 199, 200, 201, 202, 204, 205, 206,
	207, 213, 216, 222, 223, 232, 239, 242, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 137, 0, 0, 139, 0, 0, 211,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 265, 0, 0, 0,
	0, 184, 0, 215, 122, 136, 97, 83, 93, 0,
	121, 162, 191, 195, 0, 0, 0, 105, 0, 193,
	172, 231, 0, 174, 192, 140, 221, 185, 230, 240,
	241, 218, 238, 245, 208, 86, 217, 229, 102, 203,
	88, 227, 214, 151, 131, 132, 87, 0, 189, 110,
	117, 107, 164, 224, 225, 106, 248, 94, 237, 90,
	95, 236, 158, 220, 228, 152, 145, 89, 226, 150,
	144, 135, 114, 124, 182, 142, 183, 125, 155, 154,
	156, 0, 0, 0, 212, 234, 249, 99, 0, 219,
	243, 244, 0, 0, 100, 118, 113, 181, 157, 96,
	127, 209, 134, 141, 188, 247, 171, 194, 103, 233,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 91, 138, 246, 186, 116, 235, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 85, 92, 98, 104, 108, 112, 115,
	120, 123, 126, 128, 129, 130, 133, 143, 146, 147,
	148, 149, 159, 160, 161, 163, 166, 167, 168, 169,
	170, 173, 175, 176, 177, 178, 179, 180, 187, 190,
	196, 197, 198, 199, 200, 201, 202, 204, 205, 206,
	207, 213, 216, 222, 223, 232, 239, 242, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 111, 0, 0,
	0, 0, 0, 137, 0, 0, 139, 0, 0, 211,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 265, 0, 0, 0,
	0, 184, 0, 215, 122, 136, 97, 83, 93, 0,
	121, 162, 191, 195, 0, 0, 0, 105, 0, 193,
	172, 231, 0, 174, 192, 140, 221, 185, 230, 240,
	241, 218, 238, 245, 208, 86, 217, 229, 102, 203,
	88, 227, 214, 151, 131, 132, 87, 0, 189, 110,
	117, 107, 164, 224, 225, 106, 248, 94, 237, 90,
	95, 236, 158, 220, 228, 152, 145, 89, 226, 150,
	144, 135, 114, 124, 182, 142, 183, 125, 155, 154,
	156, 0, 0, 0, 212, 234, 249, 99, 0, 219,
	243, 244, 0, 0, 100, 118, 113, 181, 157, 96,
	127, 209, 134, 141, 188, 247, 171, 194, 103, 233,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 91, 138, 246, 186, 116, 235, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 84, 85, 92, 98, 104, 108, 112, 115,
	120, 123, 126, 128, 129, 130, 133, 143, 146, 147,
	148, 149, 159, 160, 161, 163, 166, 167, 168, 169,
	170, 173, 175, 176, 177, 178, 179, 180, 187, 190,
	196, 197, 198, 199, 200, 201, 202, 204, 205, 206,
	207, 213, 216, 222, 223, 232, 239, 242,
}
var yyPact = [...]int{

	1694, -1000, -261, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 849, 886, -1000, -1000, -1000, -1000, -1000, -1000,
	239, 11229, 41, 110, 6, 15220, 109, 1560, 15880, -1000,
	10, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -59, -107,
	-1000, 681, -1000, -1000, -1000, -1000, -1000, 843, 847, 731,
	838, 772, -1000, 7917, 79, 79, 14890, 6597, -1000, -1000,
	238, 15880, 105, 15880, -148, 70, 70, 70, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	107, 15880, 179, -1000, 15880, 69, 536, 69, 69, 69,
	15880, -1000, 144, -1000, -1000, -1000, 15880, 523, 798, 3510,
	47, 3510, -1000, 3510, 3510, -1000, 3510, 20, 3510, -60,
	859, 17, -41, -1000, 3510, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 486, 807,
	9249, 9249, 849, -1000, 681, -1000, -1000, -1000, 806, -1000,
	-1000, 306, 872, -1000, 10899, 143, -1000, 9249, 1997, 579,
	-1000, -1000, 579, -1000, -1000, 122, -1000, -1000, 10239, 10239,
	10239, 10239, 10239, 10239, 10239, 10239, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	579, -1000, 8919, 579, 579, 579, 579, 579, 579, 579,
	579, 9249, 579, 579, 579, 579, 579, 579, 579, 579,
	579, 579, 579, 579, 579, 579, 579, 14553, 13563, 15880,
	669, 662, -1000, -1000, 141, 663, 6254, -126, -1000, -1000,
	-1000, 240, 13233, -1000, -1000, -1000, 795, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 614, 15880, -1000, 2139,
	-1000, 490, 3510, 88, 487, 250, 481, 15880, 15880, 3510,
	27, 59, 56, 15880, 666, 84, 15880, 832, 720, 15880,
	475, 466, -1000, 5911, -1000, 3510, 3510, -1000, -1000, -1000,
	3510, 3510, 3510, 15880, 3510, 3510, -1000, -1000, -1000, -1000,
	3510, 3510, -1000, 870, 258, -1000, -1000, -1000, -1000, 9249,
	182, -1000, 714, -1000, -1000, -1000, -1000, -1000, -1000, 881,
	165, 531, 138, 665, -1000, 441, 843, 486, 772, 12903,
	732, -1000, -1000, -1000, 15880, -1000, 9249, 9249, 450, -1000,
	14223, -1000, -1000, 4539, 193, 10239, 312, 199, 10239, 10239,
	10239, 10239, 10239, 10239, 10239, 10239, 10239, 10239, 10239, 10239,
	10239, 10239, 10239, 337, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 464, -1000, 681, 578, 578, 158, 158, 158,
	158, 158, 158, 158, 10569, 7257, 486, 592, 407, 8919,
	7917, 7917, 9249, 9249, 8577, 8247, 7917, 802, 226, 407,
	16210, -1000, -1000, 9909, -1000, -1000, -1000, -1000, -1000, 486,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15550, 15550, 7917,
	7917, 7917, 7917, 37, 15880, -1000, 656, 748, -1000, -1000,
	-1000, 834, 12243, 12573, 37, 628, 13563, 15880, -1000, -1000,
	13563, 15880, 4196, 5568, 663, -126, 639, -1000, -123, -96,
	6927, 156, -1000, -1000, -1000, -1000, 3167, 222, 541, 268,
	-53, -1000, -1000, -1000, 686, -1000, 686, 686, 686, 686,
	-20, -20, -20, -20, -1000, -1000, -1000, -1000, -1000, 701,
	700, -1000, 686, 686, 686, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 698, 698, 698, 688, 688, 705, -1000,
	15880, 3510, 831, 3510, -1000, 75, -1000, 15880, 15880, 15880,
	15880, 15880, 117, 15880, 15880, 659, -1000, 15880, 3510, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 15880, 259, 15880, 15880, 407, -1000,
	409, 15880, -1000, 780, 9249, 9249, 5225, 9249, -1000, -1000,
	-1000, 807, -1000, 802, 850, -1000, 787, 786, 7917, -1000,
	-1000, 193, 208, -1000, -1000, 294, -1000, -1000, -1000, -1000,
	136, 579, -1000, 2271, -1000, -1000, -1000, -1000, 312, 10239,
	10239, 10239, 390, 2271, 2307, 1477, 404, 158, 525, 525,
	155, 155, 155, 155, 155, 305, 305, -1000, -1000, -1000,
	486, -1000, -1000, -1000, 486, 7917, 657, -1000, -1000, 9249,
	-1000, 486, 553, 553, 300, 370, 234, 869, 553, 230,
	867, 553, 553, 7917, 253, -1000, 9249, 486, -1000, 134,
	-1000, 1544, 644, 643, 553, 486, 553, 553, 637, 579,
	-1000, 16210, 13563, 13563, 13563, 13563, 13563, -1000, 767, 747,
	-1000, 763, 761, 757, 15880, -1000, 562, 12243, 150, 579,
	-1000, 13893, -1000, -1000, 858, 13563, 619, -1000, 619, -1000,
	133, -1000, -1000, 639, -126, -99, -1000, -1000, -1000, -1000,
	407, -1000, 381, 634, 2824, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 696, 455, -1000, 823, 197, 195, 453, 821,
	-1000, -1000, -1000, 803, -1000, 270, -55, -1000, -1000, 339,
	-20, -20, -1000, -1000, 156, 794, 156, 156, 156, 389,
	389, -1000, -1000, -1000, -1000, 335, -1000, -1000, -1000, 328,
	-1000, 713, 15550, 3510, -1000, -1000, -1000, -1000, 343, 343,
	194, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 36, 655, -1000, -1000, -1000, -1000, 7, 26,
	82, -1000, 3510, -1000, 258, -1000, 386, 9249, -1000, -1000,
	-1000, -1000, 778, 407, 407, 131, -1000, -1000, 15880, -1000,
	-1000, -1000, -1000, 625, -1000, -1000, -1000, 3853, 7917, -1000,
	390, 2271, 2288, -1000, 10239, 10239, -1000, -1000, 553, 7917,
	407, -1000, -1000, -1000, 25, 337, 25, 10239, 10239, -1000,
	10239, 10239, -1000, -160, 635, 202, -1000, 9249, 295, -1000,
	5225, -1000, 10239, 10239, -1000, -1000, -1000, -1000, 712, 16210,
	579, -1000, 11901, 15550, 654, -1000, 210, 748, 695, 711,
	611, -1000, -1000, -1000, -1000, 740, -1000, 734, -1000, -1000,
	-1000, -1000, -1000, 102, 99, 96, 15550, -1000, 849, 9249,
	619, -1000, -1000, 168, -1000, -1000, -131, -82, -1000, -1000,
	-1000, 3167, -1000, 3167, 15550, 55, -1000, 453, 453, -1000,
	-1000, -1000, 692, 710, 10239, -1000, -1000, -1000, 520, 156,
	156, -1000, 201, -1000, -1000, -1000, 546, -1000, 540, 633,
	529, 15880, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 15880,
	-1000, -1000, -1000, -1000, -1000, 15550, -167, 420, 15550, 15550,
	15550, 15880, -1000, 259, -1000, 407, -1000, 4882, -1000, 858,
	13563, -1000, -1000, 486, -1000, 10239, 2271, 2271, -1000, -1000,
	486, 686, 686, -1000, 686, 688, -1000, 686, 0, 686,
	-1, 486, 486, 2256, 2169, 2033, 2014, 579, -155, -1000,
	407, 9249, -1000, 2118, 1905, -1000, 826, 621, 559, -1000,
	-1000, 7587, 486, 519, 130, 514, -1000, 849, 16210, 9249,
	-1000, -1000, 9249, 687, -1000, 9249, -1000, -1000, -1000, 579,
	579, 579, 514, 843, 407, -1000, -1000, -1000, -1000, 2824,
	-1000, 512, -1000, 686, -1000, -1000, -1000, 15550, -44, 880,
	2271, -1000, -1000, -1000, -1000, -1000, -20, 385, -20, 327,
	-1000, 325, 3510, -1000, -1000, -1000, -1000, 808, -1000, 4882,
	-1000, -1000, 685, 703, -1000, -1000, -1000, 854, 627, -1000,
	2271, -1000, -1000, 118, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 10239, 10239, 10239, 10239, 10239, 486, 363, 407,
	10239, 10239, 820, -1000, 579, -1000, -1000, 653, 15550, 15550,
	-1000, 15550, 843, -1000, 407, 407, 15550, 407, 15550, 15550,
	15550, 11559, -1000, 146, 15550, -1000, 509, -1000, 187, -1000,
	-121, 156, -1000, 156, 515, 503, -1000, 579, 568, -1000,
	205, 15550, 15880, 851, 846, -1000, -1000, 1544, 1544, 1544,
	1544, 50, -1000, -1000, 1544, 1544, 876, -1000, 579, -1000,
	681, 129, -1000, -1000, -1000, 507, 502, 502, 502, 150,
	146, -1000, 392, 203, 351, -1000, 49, 15550, 309, 819,
	-1000, 817, -1000, -1000, -1000, -1000, -1000, 35, 4882, 3167,
	485, -1000, -1000, 9249, 9249, -1000, -1000, -1000, -1000, 486,
	48, -170, -1000, -1000, 16210, 559, 486, 15550, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 322, -1000, -1000, 15880, -1000,
	-1000, 338, -1000, -1000, 470, -1000, 15550, -1000, -1000, 655,
	407, 555, -1000, 777, -165, -174, 544, -1000, -1000, -1000,
	671, -1000, -1000, 35, 785, -167, -1000, 775, -1000, 15550,
	-1000, 32, -1000, -168, 460, 28, -172, 707, 579, -176,
	697, -1000, 863, 9579, -1000, -1000, 875, 173, 173, 1544,
	486, -1000, -1000, -1000, 60, 313, -1000, -1000, -1000, -1000,
	-1000, -1000,
}
var yyPgo = [...]int{

	0, 1125, 55, 472, 1124, 1121, 1111, 1110, 1109, 1102,
	1101, 1100, 1099, 1098, 1096, 1095, 1093, 1091, 1087, 1086,
	1085, 1083, 1082, 1081, 1079, 1077, 88, 1076, 1075, 1074,
	81, 1072, 80, 1071, 1070, 44, 868, 57, 45, 727,
	1069, 23, 111, 71, 1068, 37, 1067, 1066, 83, 1064,
	1062, 60, 1061, 1059, 1422, 1057, 73, 1055, 13, 42,
	1054, 1053, 1048, 1047, 70, 399, 1044, 1032, 16, 1030,
	1023, 93, 1007, 51, 10, 15, 25, 18, 1006, 391,
	7, 1002, 50, 1001, 1000, 996, 995, 21, 990, 59,
	987, 19, 54, 982, 14, 66, 38, 26, 8, 84,
	63, 973, 22, 64, 47, 972, 969, 470, 968, 967,
	43, 965, 963, 29, 962, 99, 370, 961, 958, 957,
	956, 49, 0, 567, 442, 75, 953, 952, 951, 1368,
	40, 48, 24, 950, 31, 27, 41, 949, 948, 35,
	947, 946, 944, 943, 942, 941, 940, 307, 939, 938,
	937, 12, 53, 935, 934, 65, 28, 933, 930, 929,
	52, 69, 927, 926, 58, 30, 924, 923, 922, 921,
	920, 33, 11, 918, 20, 908, 9, 907, 34, 905,
	3, 904, 17, 901, 5, 899, 6, 46, 1, 898,
	2, 895, 894, 61, 4, 85, 892, 86,
}
var yyR1 = [...]int{

	0, 191, 192, 192, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 6, 3, 4,
	4, 5, 5, 7, 7, 29, 29, 8, 9, 9,
	9, 9, 195, 195, 48, 48, 49, 49, 95, 95,
	10, 10, 10, 10, 100, 100, 104, 104, 104, 105,
	105, 105, 105, 137, 137, 11, 11, 11, 11, 11,
	11, 11, 186, 186, 185, 184, 184, 183, 183, 182,
	17, 167, 169, 169, 168, 168, 168, 168, 161, 140,
	140, 140, 140, 143, 143, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 142, 142, 142, 142, 142, 144,
	144, 144, 144, 144, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 146,
	146, 146, 146, 146, 146, 146, 146, 160, 160, 147,
	147, 155, 155, 156, 156, 156, 153, 153, 154, 154,
	157, 157, 157, 149, 149, 150, 150, 158, 158, 151,
	151, 151, 152, 152, 152, 159, 159, 159, 159, 159,
	148, 148, 162, 162, 177, 177, 176, 176, 176, 166,
	166, 173, 173, 173, 173, 173, 164, 164, 165, 165,
	175, 175, 174, 163, 163, 178, 178, 178, 178, 189,
	190, 188, 188, 188, 188, 188, 170, 170, 170, 171,
	171, 171, 172, 172, 172, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 181, 179, 179, 180, 180, 13, 18, 18,
	14, 14, 14, 14, 14, 15, 15, 19, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 111, 111, 109, 109,
	112, 112, 110, 110, 110, 113, 113, 113, 114, 114,
	138, 138, 138, 21, 21, 23, 23, 24, 25, 22,
	22, 22, 22, 22, 22, 22, 16, 196, 26, 27,
	27, 28, 28, 28, 32, 32, 32, 30, 30, 30,
	31, 31, 37, 37, 36, 36, 38, 38, 38, 38,
	126, 126, 126, 125, 125, 40, 40, 41, 41, 42,
	42, 43, 43, 43, 43, 57, 57, 94, 94, 96,
	96, 44, 44, 44, 44, 45, 45, 46, 46, 47,
	47, 133, 133, 132, 132, 132, 131, 131, 50, 50,
	50, 52, 51, 51, 51, 51, 53, 53, 55, 55,
	54, 54, 56, 58, 58, 58, 58, 59, 59, 39,
	39, 39, 39, 39, 39, 39, 108, 108, 61, 61,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	72, 72, 72, 72, 72, 72, 62, 62, 62, 62,
	62, 62, 62, 35, 35, 73, 73, 73, 79, 74,
	74, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 69, 69, 69, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 67, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 197, 197, 71, 70, 70,
	70, 70, 70, 70, 33, 33, 33, 33, 33, 136,
	136, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 139, 83, 83, 34, 34, 81, 81,
	82, 84, 84, 80, 80, 80, 64, 64, 64, 64,
	64, 64, 64, 64, 66, 66, 66, 85, 85, 86,
	86, 87, 87, 88, 88, 89, 90, 90, 90, 91,
	91, 91, 91, 92, 92, 92, 63, 63, 63, 63,
	63, 63, 93, 93, 93, 93, 97, 97, 75, 75,
	77, 77, 76, 78, 98, 98, 102, 99, 99, 103,
	103, 103, 103, 101, 101, 101, 128, 128, 128, 106,
	106, 115, 115, 116, 116, 107, 107, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 117, 118, 118, 118,
	119, 119, 120, 120, 120, 127, 127, 123, 123, 124,
	124, 129, 129, 130, 130, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 193, 194, 134, 135, 135, 135,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 6, 7, 5, 10, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 8, 4, 6,
	5, 5, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 2, 4, 1, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 4, 1, 2, 2, 3, 2, 0,
	1, 2, 3, 3, 2, 2, 1, 1, 0, 1,
	1, 3, 2, 3, 1, 10, 11, 11, 12, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 6, 7, 7, 7, 7,
	4, 5, 7, 5, 5, 5, 12, 7, 5, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 5, 4, 4, 3, 2, 3, 4, 4,
	3, 4, 4, 4, 4, 4, 4, 3, 2, 3,
	3, 2, 3, 4, 3, 7, 5, 4, 2, 4,
	4, 3, 3, 5, 2, 3, 1, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 2,
	2, 2, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 1, 3, 3, 7, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 5, 5, 0, 2, 1,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 6, 4, 4, 6, 6,
	6, 8, 8, 8, 8, 9, 7, 5, 4, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 8, 8, 0, 2, 3, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 0, 2, 4, 2, 1, 3, 5,
	4, 6, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 0, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -191, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -19, -20, -21, -23, -24, -25,
	-22, -16, -3, -4, 6, 7, -29, 9, 10, 30,
	-17, 116, 117, 119, 118, 151, 120, 144, 51, 165,
	166, 168, 169, 25, 145, 146, 149, 150, 31, 32,
	122, -193, 8, 250, 55, -192, 348, -87, 15, -28,
	5, -26, -196, -26, -26, -26, -26, -26, -167, -169,
	55, 91, -120, 126, 73, 242, 123, 124, 130, -123,
	58, -122, 260, 137, 292, 293, 165, 176, 170, 197,
	189, 261, 294, 138, 187, 190, 229, 136, 295, 217,
	224, 67, 168, 238, 296, 147, 185, 181, 297, 269,
	179, 27, 298, 226, 202, 299, 265, 180, 225, 122,
	300, 140, 134, 301, 203, 207, 302, 230, 303, 304,
	305, 174, 175, 306, 232, 201, 135, 33, 262, 36,
	155, 233, 205, 307, 200, 196, 308, 309, 310, 311,
	199, 173, 195, 40, 209, 208, 210, 228, 192, 312,
	313, 314, 141, 315, 182, 18, 316, 317, 318, 319,
	320, 236, 150, 321, 153, 322, 323, 324, 325, 326,
	327, 227, 204, 206, 131, 157, 264, 328, 234, 178,
	329, 142, 154, 149, 237, 143, 330, 331, 332, 333,
	334, 335, 336, 169, 337, 338, 339, 340, 164, 231,
	240, 39, 214, 341, 172, 133, 342, 166, 161, 219,
	193, 156, 343, 344, 183, 184, 198, 171, 194, 167,
	158, 151, 345, 239, 215, 266, 191, 188, 162, 346,
	159, 160, 347, 220, 221, 163, 263, 235, 186, 216,
	-107, 126, 221, 128, 124, 124, 125, 126, 242, 123,
	124, -54, -129, 58, -122, 126, 124, 109, 190, 229,
	116, 218, 226, 125, 33, 227, 157, -138, 124, -109,
	217, 220, 221, 163, 58, 231, 230, 222, -129, 167,
	-134, -134, -134, -134, -134, 219, 219, -134, -2, -91,
	17, 16, -5, -3, -193, 6, 20, 21, -32, 41,
	42, -27, -38, 100, -39, -129, -60, 75, -65, 29,
	58, -122, 23, -64, -61, -80, -78, -79, 109, 110,
	111, 98, 99, 106, 76, 112, -69, -67, -68, -70,
	60, 59, 68, 61, 62, 63, 64, 69, 70, 71,
	-123, -76, -193, 45, 46, 251, 252, 253, 254, 259,
	255, 78, 35, 241, 249, 248, 247, 245, 246, 243,
	244, 257, 258, 129, 242, 104, 250, -107, -107, 11,
	-48, -49, -54, -56, -129, -99, -137, 167, -103, 231,
	230, -124, -101, -123, -121, 229, 190, 228, 121, 267,
	74, 22, 24, 212, 77, 109, 16, 78, 108, 251,
	116, 49, 268, 243, 244, 241, 253, 254, 242, 218,
	29, 10, 270, 25, 145, 21, 34, 102, 118, 81,
	82, 148, 23, 146, 71, 273, 19, 52, 11, 13,
	274, 275, 14, 129, 128, 93, 125, 47, 8, 112,
	26, 90, 43, 276, 28, 277, 278, 279, 280, 45,
	91, 17, 245, 246, 31, 281, 259, 152, 104, 50,
	37, 75, 282, 283, 69, 284, 72, 53, 73, 15,
	48, 285, 286, 287, 288, 92, 119, 250, 46, 289,
	123, 6, 256, 30, 144, 44, 290, 124, 80, 257,
	258, 127, 70, 5, 130, 32, 9, 51, 54, 247,
	248, 249, 35, 79, 12, 291, -168, 91, -161, 58,
	-54, 125, -54, 250, -116, 129, -116, -116, 124, -54,
	116, 118, 121, 53, -18, -54, -115, 129, 58, -115,
	-115, -115, -54, 113, -54, 58, 30, -135, -193, -124,
	242, 58, 157, 124, 158, 126, -135, -135, -135, -135,
	161, 162, -135, -112, -111, 224, 225, 219, 223, 12,
	162, 219, 160, -135, -134, -134, -194, 57, -92, 19,
	31, -39, -129, -88, -89, -39, -87, -2, -26, 37,
	-30, 21, 34, 66, 11, -126, 74, 73, 90, -125,
	22, -123, 60, 113, -39, -62, 93, 75, 91, 92,
	77, 95, 94, 105, 98, 99, 100, 101, 102, 103,
	104, 96, 97, 108, 83, 84, 85, 86, 87, 88,
	89, -108, -193, -79, -193, 114, 115, -65, -65, -65,
	-65, -65, -65, -65, -65, -193, -2, -74, -39, -193,
	-193, -193, -193, -193, -193, -193, -193, -193, -83, -39,
	-193, -197, -71, -193, -197, -71, -197, -71, -197, -193,
	-197, -71, -197, -71, -197, -197, -71, -193, -193, -193,
	-193, -193, -193, -55, 26, -54, -41, -42, -43, -44,
	-57, -79, -193, -54, -54, -48, -195, 56, 11, 54,
	-195, 56, 113, 56, -99, 167, -100, -104, 232, 234,
	83, -128, -123, 60, 29, 30, 57, 56, -54, -140,
	-143, -145, -144, -146, -141, -142, 187, 188, 109, 191,
	193, 194, 195, 196, 197, 198, 199, 200, 201, 202,
	30, 147, 183, 184, 185, 186, 203, 204, 205, 206,
	207, 208, 209, 210, 170, 189, 261, 171, 172, 173,
	174, 175, 176, 178, 179, 180, 181, 182, 58, -135,
	126, 58, 75, 58, -54, -54, -135, 159, 159, 124,
	124, 164, -54, 56, 127, -48, 23, 53, -54, 58,
	58, -130, -129, -121, -135, -135, -135, -135, -135, -54,
	-135, -135, -135, -135, 11, -110, 11, 93, -39, -114,
	91, 53, 9, 93, 56, 18, 113, 56, -90, 24,
	25, -91, -194, -32, -66, -123, 61, 64, -31, 44,
	-54, -39, -39, -72, 69, 75, 70, 71, -125, 100,
	-130, -124, -121, -65, -73, -76, -79, 65, 93, 91,
	92, 77, -65, -65, -65, -65, -65, -65, -65, -65,
	-65, -65, -65, -65, -65, -65, -65, -136, 58, 60,
	58, -64, -64, -123, -37, 21, -36, -38, -194, 56,
	-194, -2, -36, -36, -39, -39, -80, 60, -36, -80,
	60, -36, -36, -30, -81, -82, 79, -80, -123, -129,
	-194, -65, -123, -123, -36, -37, -36, -36, -95, 153,
	-54, 30, 56, -50, -52, -51, -53, 43, 47, 49,
	44, 45, 46, 50, -133, 22, -41, -193, -132, 153,
	-131, 22, -129, 60, -95, 54, -41, -54, -41, -56,
	-129, 100, -103, -100, 56, 233, 235, 236, 53, 72,
	-39, -152, 108, -170, -171, -172, -124, 60, 61, -161,
	-162, -163, -173, 139, -178, 131, 133, 130, -164, 140,
	125, 28, 57, -157, 69, 75, -153, 215, -147, 55,
	-147, -147, -147, -147, -151, 190, -151, -151, -151, 55,
	55, -147, -147, -147, -155, 55, -155, -155, -156, 55,
	-156, -127, 54, -54, -135, 23, -135, -117, 121, 118,
	119, -181, 117, 212, 190, 67, 29, 15, 251, 153,
	266, 58, 154, -54, -54, -54, -54, -54, 121, 118,
	-54, -54, -54, -135, -54, -113, 91, 12, -129, -129,
	60, -54, 39, -39, -39, -130, -89, -92, -106, 19,
	11, 35, 35, -36, 69, 70, 71, 113, -193, -73,
	-65, -65, -65, -35, 148, 74, -194, -194, -36, 56,
	-39, -194, -194, -194, 56, 54, 22, 11, 11, -194,
	11, 11, -194, -194, -36, -84, -82, 81, -39, -194,
	113, -194, 56, 56, -194, -194, -194, -194, -63, 30,
	35, -2, -193, -193, -98, -102, -80, -42, -43, -43,
	-42, -43, 43, 43, 43, 48, 43, 48, 43, -51,
	-129, -194, -58, 51, 128, 52, -193, -131, -59, 12,
	-41, -59, -59, 113, -104, -105, 237, 234, 240, 58,
	60, 56, -172, 83, 55, 58, 28, -164, -164, -165,
	58, -165, 28, -149, 29, 69, -154, 216, 61, -151,
	-151, -152, 30, -152, -152, -152, -160, 60, -160, 61,
	61, 53, -123, -135, -134, -187, 136, 132, 139, 140,
	134, 58, 125, 28, 131, 133, 153, 130, -187, -118,
	-119, 127, 22, 125, 28, 153, -186, 54, 159, 212,
	159, 127, -135, -110, 60, -39, 40, 113, -54, -40,
	11, 100, -124, -37, -35, 74, -65, -65, -194, -38,
	-139, 109, 187, 147, 185, 181, 201, 192, 214, 183,
	215, -136, -139, -65, -65, -65, -65, 260, -87, 82,
	-39, 80, -124, -65, -65, -97, 53, -98, -75, -77,
	-76, -193, -2, -93, -123, -96, -123, -59, 56, 83,
	-46, -45, 53, 54, -47, 53, -45, 43, 43, 125,
	125, 125, -96, -87, -39, -59, 234, 238, 239, -171,
	-172, -175, -174, -123, -178, -165, -165, 55, -150, 53,
	-65, 57, -152, -152, 58, 109, 57, 56, 57, 56,
	57, 56, -54, -134, -134, -54, -134, -123, -184, 263,
	-185, 58, -123, -123, -123, -54, -113, -59, -41, -194,
	-65, -194, -147, -147, -147, -156, -147, 175, -147, 175,
	-194, -194, 19, 19, 19, 19, -193, -34, 256, -39,
	56, 56, 27, -97, 56, -194, -194, -194, 56, 113,
	-194, 56, -87, -102, -39, -39, 55, -39, -193, -193,
	-193, -194, -91, 57, 56, -147, -94, -123, -158, 212,
	9, -151, 60, -151, 61, 61, -135, 26, -183, -182,
	-124, 55, 54, -85, 13, -151, 58, -65, -65, -65,
	-65, -65, -194, 60, -65, -65, 28, -77, 35, -2,
	-193, -123, -123, -123, -91, -94, -94, -94, -94, -132,
	-177, -176, 54, 135, 67, -174, 57, 56, -159, 131,
	28, 130, -68, -152, -152, 57, 57, -193, 56, 83,
	-94, -54, -86, 14, 16, -194, -194, -194, -194, -33,
	93, 263, -194, -194, 9, -75, -2, 113, 57, -194,
	-194, -194, -58, -176, 58, -166, 83, 60, 142, -123,
	-148, 67, 28, 28, -179, -180, 153, -182, -172, 57,
	-39, -74, -194, 261, 50, 264, -98, -194, -123, 61,
	-54, 60, -194, 56, -123, -186, 40, 262, 265, 55,
	-180, 35, -184, 40, -94, 155, 263, 57, 156, 264,
	-189, -190, 53, -193, 265, -190, 53, 10, 9, -65,
	152, -188, 143, 138, 141, 30, -188, -194, -194, 137,
	29, 69,
}
var yyDef = [...]int{

	23, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 561, 0, 317, 317, 317, 317, 317, 317,
	0, 632, 615, 0, 0, 0, 0, -2, 304, 305,
	0, 307, 308, 934, 934, 934, 934, 934, 0, 0,
	934, 0, 35, 36, 932, 1, 3, 569, 0, 0,
	321, 324, 319, 0, 615, 615, 0, 0, 65, 66,
	0, 0, 0, 921, 0, 613, 613, 613, 633, 634,
	637, 638, 763, 764, 765, 766, 767, 768, 769, 770,
	771, 772, 773, 774, 775, 776, 777, 778, 779, 780,
	781, 782, 783, 784, 785, 786, 787, 788, 789, 790,
	791, 792, 793, 794, 795, 796, 797, 798, 799, 800,
	801, 802, 803, 804, 805, 806, 807, 808, 809, 810,
	811, 812, 813, 814, 815, 816, 817, 818, 819, 820,
	821, 822, 823, 824, 825, 826, 827, 828, 829, 830,
	831, 832, 833, 834, 835, 836, 837, 838, 839, 840,
	841, 842, 843, 844, 845, 846, 847, 848, 849, 850,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 874, 875, 876, 877, 878, 879, 880,
	881, 882, 883, 884, 885, 886, 887, 888, 889, 890,
	891, 892, 893, 894, 895, 896, 897, 898, 899, 900,
	901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	922, 923, 924, 925, 926, 927, 928, 929, 930, 931,
	0, 0, 0, 616, 0, 611, 0, 611, 611, 611,
	0, 256, 390, 641, 642, 921, 0, 0, 0, 935,
	0, 935, 268, 935, 935, 271, 935, 0, 935, 0,
	278, 0, 0, 284, 935, 301, 302, 289, 303, 306,
	309, 310, 311, 312, 313, 934, 934, 316, 29, 573,
	0, 0, 561, 31, 0, 317, 322, 323, 327, 325,
	326, 318, 0, 336, 340, 0, 399, 0, 404, 406,
	-2, -2, 0, 441, 442, 443, 444, 445, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 470, 471, 472,
	546, 547, 548, 549, 550, 551, 552, 553, 408, 409,
	543, 593, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 534, 0, 505, 505, 505, 505, 505, 505, 505,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 44, 46, 390, 50, 0, 910, 597, -2,
	-2, 0, 0, 639, 640, -2, 776, -2, 645, 646,
	647, 648, 649, 650, 651, 652, 653, 654, 655, 656,
	657, 658, 659, 660, 661, 662, 663, 664, 665, 666,
	667, 668, 669, 670, 671, 672, 673, 674, 675, 676,
	677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
	687, 688, 689, 690, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 701, 702, 703, 704, 705, 706,
	707, 708, 709, 710, 711, 712, 713, 714, 715, 716,
	717, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	727, 728, 729, 730, 731, 732, 733, 734, 735, 736,
	737, 738, 739, 740, 741, 742, 743, 744, 745, 746,
	747, 748, 749, 750, 751, 752, 753, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 0, 0, 84, 0,
	82, 0, 935, 0, 0, 0, 0, 0, 0, 935,
	0, 0, 0, 0, 247, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 257, 935, 935, 260, 936, 937,
	935, 935, 935, 0, 935, 935, 267, 269, 270, 272,
	935, 935, 274, 0, 292, 290, 291, 286, 287, 0,
	298, 281, 282, 285, 314, 315, 30, 933, 24, 0,
	0, 570, 0, 562, 563, 566, 569, 29, 324, 0,
	330, 328, 329, 320, 0, 337, 0, 0, 0, 341,
	0, 343, 344, 0, 402, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 426, 427, 428, 429, 430, 431,
	432, 405, 0, 419, 0, 0, 0, 461, 462, 463,
	464, 465, 466, 467, 0, 332, 29, 0, 439, 0,
	0, 0, 0, 0, 0, 0, 0, 327, 0, 535,
	0, 489, 497, 0, 490, 498, 491, 499, 492, 0,
	493, 500, 494, 501, 495, 496, 502, 0, 0, 0,
	332, 0, 0, 48, 0, 389, 0, 347, 349, 350,
	351, -2, 0, 373, -2, 0, 0, 0, 42, 43,
	0, 0, 0, 0, 51, 910, 53, 54, 0, 0,
	0, 162, 606, 607, 608, 604, 206, 0, 0, 150,
	146, 90, 91, 92, 139, 94, 139, 139, 139, 139,
	159, 159, 159, 159, 122, 123, 124, 125, 126, 0,
	0, 109, 139, 139, 139, 113, 129, 130, 131, 132,
	133, 134, 135, 136, 95, 96, 97, 98, 99, 100,
	101, 102, 103, 141, 141, 141, 143, 143, 635, 68,
	0, 935, 0, 935, 80, 0, 220, 0, 0, 0,
	0, 0, 0, 0, 0, 250, 612, 0, 935, 253,
	254, 391, 643, 644, 258, 259, 261, 262, 263, 264,
	265, 266, 273, 277, 0, 295, 0, 0, 279, 280,
	0, 0, 574, 0, 0, 0, 0, 0, 565, 567,
	568, 573, 32, 327, 0, 554, 0, 0, 0, 331,
	27, 400, 401, 403, 420, 0, 422, 424, 342, 338,
	0, 544, -2, 410, 411, 435, 436, 437, 0, 0,
	0, 0, 433, 415, 0, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 519, 520,
	0, 458, 459, 468, 0, 0, 333, 334, 438, 0,
	592, 29, 0, 0, 0, 0, 443, 546, 0, 443,
	546, 0, 0, 0, 541, 538, 0, 0, 543, 0,
	506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	388, 0, 0, 0, 0, 0, 0, 378, 0, 0,
	381, 0, 0, 0, 0, 372, 0, 0, 393, 855,
	374, 0, 376, 377, 397, 0, 397, 45, 397, 47,
	0, 392, 598, 52, 0, 0, 57, 58, 599, 600,
	601, 602, 0, 81, 207, 209, 212, 213, 214, 85,
	86, 87, 0, 0, 194, 0, 0, 188, 188, 0,
	186, 187, 83, 153, 151, 0, 148, 147, 93, 0,
	159, 159, 116, 117, 162, 0, 162, 162, 162, 0,
	0, 110, 111, 112, 104, 0, 105, 106, 107, 0,
	108, 0, 0, 935, 70, 614, 71, 934, 0, 0,
	627, 221, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 626, 0, 72, 223, 225, 224, 228, 0, 0,
	0, 248, 935, 252, 292, 276, 0, 0, 293, 294,
	299, 283, 0, 571, 572, 0, 564, 25, 0, 609,
	610, 555, 556, 345, 421, 423, 425, 0, 332, 412,
	433, 416, 0, 413, 0, 0, 407, 473, 0, 0,
	440, -2, 476, 477, 0, 0, 0, 0, 0, 512,
	0, 0, 513, 0, 561, 0, 539, 0, 0, 488,
	0, 507, 0, 0, 508, 509, 510, 511, 586, 0,
	0, -2, 0, 0, 397, 594, 0, 348, 367, 369,
	0, 364, 379, 380, 382, 0, 384, 0, 386, 387,
	352, 354, 355, 0, 0, 0, 0, 375, 561, 0,
	397, 40, 41, 0, 55, 56, 0, 0, 62, 163,
	164, 0, 210, 0, 0, 0, 181, 188, 188, 184,
	189, 185, 0, 155, 0, 152, 89, 149, 0, 162,
	162, 118, 0, 119, 120, 121, 0, 137, 0, 0,
	0, 0, 636, 69, 215, 934, 230, 231, 232, 233,
	234, 235, 236, 237, 238, 239, 240, 241, 934, 0,
	934, 628, 629, 630, 631, 0, 75, 0, 0, 0,
	0, 0, 251, 295, 296, 297, 575, 0, 26, 397,
	0, 339, 545, 0, 414, 0, 434, 417, 474, 335,
	0, 139, 139, 524, 139, 143, 527, 139, 529, 139,
	532, 0, 0, 0, 0, 0, 0, 0, 536, 487,
	542, 0, 544, 0, 0, 33, 0, 586, 576, 588,
	590, 0, 29, 0, 582, 0, 359, 561, 0, 0,
	361, 368, 0, 0, 362, 0, 363, 383, 385, 0,
	0, 0, 0, 569, 398, 39, 59, 60, 61, 208,
	211, 0, 190, 139, 193, 182, 183, 0, 157, 0,
	154, 140, 114, 115, 160, 161, 159, 0, 159, 0,
	144, 0, 935, 216, 217, 218, 219, 0, 222, 0,
	73, 74, 0, 0, 227, 249, 275, 557, 346, 475,
	418, 478, 521, 159, 525, 526, 528, 530, 531, 533,
	480, 479, 0, 0, 0, 0, 0, 0, 0, 540,
	0, 0, 0, 34, 0, 591, -2, 0, 0, 0,
	49, 0, 569, 595, 596, 365, 0, 370, 0, 0,
	0, 373, 38, 173, 0, 192, 0, 357, 165, 158,
	0, 162, 138, 162, 0, 0, 67, 0, 76, 77,
	0, 0, 0, 559, 0, 522, 523, 0, 0, 0,
	0, 514, 486, 537, 0, 0, 0, 589, 0, -2,
	0, 584, 583, 360, 37, 0, 0, 0, 0, 393,
	172, 174, 0, 179, 0, 191, 0, 0, 170, 0,
	167, 169, 156, 127, 128, 142, 145, 0, 0, 0,
	0, 229, 28, 0, 0, 481, 483, 482, 484, 0,
	0, 0, 503, 504, 0, 579, 29, 0, 366, 394,
	395, 396, 356, 175, 176, 0, 180, 178, 0, 358,
	88, 0, 166, 168, 0, 243, 0, 78, 79, 72,
	560, 558, 485, 0, 0, 0, 587, -2, 585, 177,
	0, 171, 242, 0, 0, 75, 515, 0, 518, 0,
	244, 0, 226, 516, 0, 0, 0, 195, 0, 0,
	196, 197, 0, 0, 517, 198, 0, 0, 0, 0,
	0, 199, 201, 202, 0, 0, 200, 245, 246, 203,
	204, 205,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 76, 3, 3, 3, 103, 95, 3,
	55, 57, 100, 98, 56, 99, 113, 101, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 348,
	84, 83, 85, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 105, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 94, 3, 106,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	75, 77, 78, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 96, 97, 102, 104, 107,
	108, 109, 110, 111, 112, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:324
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:329
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:330
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:334
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:356
		{
			setParseTree(yylex, nil)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:362
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 25:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:370
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 26:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:374
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 27:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:380
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 28:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:387
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:393
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:397
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:403
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:407
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:414
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:426
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:438
		{
			yyVAL.str = InsertStr
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:442
		{
			yyVAL.str = ReplaceStr
		}
	case 37:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:448
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:454
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:462
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:466
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:471
		{
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:472
		{
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:476
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:480
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:486
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:490
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:495
		{
			yyVAL.partitions = nil
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:499
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:505
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:509
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 52:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:513
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:517
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:523
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:533
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:537
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:541
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:547
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:551
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:555
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:559
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:565
		{
			yyVAL.str = SessionStr
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:569
		{
			yyVAL.str = GlobalStr
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:575
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:580
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:586
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:591
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:595
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:608
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:612
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:618
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:623
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:628
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:634
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:651
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:658
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:665
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:669
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:675
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:680
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:684
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:688
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:694
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:705
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:716
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:731
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:735
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:739
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:743
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:747
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:751
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:755
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:789
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:797
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:801
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:805
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:809
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:819
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:823
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:827
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:831
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:835
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:839
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:843
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:847
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:851
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:855
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:859
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:863
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:882
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:886
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:890
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:894
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:898
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:902
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:906
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:916
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:921
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:926
		{
			yyVAL.sqlVal = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:930
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:935
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:939
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:947
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:951
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:957
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:965
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:969
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:974
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:978
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:984
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:992
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:997
		{
			yyVAL.optVal = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1001
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1006
		{
			yyVAL.optVal = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1010
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1015
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1019
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1024
		{
			yyVAL.str = ""
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1028
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1037
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1041
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1045
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1050
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1058
		{
			yyVAL.colKeyOpt = colKey
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1071
		{
			yyVAL.sqlVal = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1075
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1081
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1085
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1101
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1105
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1116
		{
			yyVAL.str = ""
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1126
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1130
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1134
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1138
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1142
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1148
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1152
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1157
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1177
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1183
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1187
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 195:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1194
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 196:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1198
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 197:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1202
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 198:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1206
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1224
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1228
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1232
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1236
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1245
		{
			yyVAL.str = ""
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1249
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1253
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.str = yyDollar[1].str
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1265
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1269
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1275
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1279
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1283
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1289
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1293
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1297
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1301
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 219:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1306
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1311
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1315
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 222:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1319
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1331
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1341
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1345
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 226:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1349
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 227:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1362
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1372
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 229:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1376
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1403
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1409
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1413
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 245:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1419
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 246:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1423
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1435
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1439
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1447
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1455
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1460
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1468
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1472
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1478
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1482
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1487
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1493
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1498
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1506
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1511
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1515
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1519
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1523
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1527
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1535
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1539
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1543
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1547
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1551
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1555
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1559
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1563
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1568
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1586
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1592
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1597
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1605
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1609
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1623
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1639
		{
			yyVAL.str = ""
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = "full "
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1649
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1659
		{
			yyVAL.str = ""
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1663
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1667
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1673
		{
			yyVAL.showFilter = nil
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1677
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1687
		{
			yyVAL.showFilter = nil
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1691
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = ""
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = SessionStr
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = GlobalStr
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1711
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.statement = &Begin{}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1725
		{
			yyVAL.statement = &Begin{}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.statement = &Commit{}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &Rollback{}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1743
		{
			yyVAL.statement = &OtherRead{}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1747
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.statement = &OtherRead{}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1755
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1763
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1767
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1777
		{
			setAllowComments(yylex, true)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1781
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1787
		{
			yyVAL.bytes2 = nil
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1791
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = UnionStr
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = UnionAllStr
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = UnionDistinctStr
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1810
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1814
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1818
		{
			yyVAL.str = SQLCacheStr
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1823
		{
			yyVAL.str = ""
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1827
		{
			yyVAL.str = DistinctStr
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.str = DistinctStr
		}
	case 330:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1836
		{
			yyVAL.str = ""
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1840
		{
			yyVAL.str = StraightJoinHint
		}
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1845
		{
			yyVAL.selectExprs = nil
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1849
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1865
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1869
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1877
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 340:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1882
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1886
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1890
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1902
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1912
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1916
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1926
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1930
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1940
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1946
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 356:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1950
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1960
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1970
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1983
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1987
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1991
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2001
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2003
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2007
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2009
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2015
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2018
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2020
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2023
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2027
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2031
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2044
		{
			yyVAL.str = JoinStr
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = JoinStr
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.str = JoinStr
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = StraightJoinStr
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.str = LeftJoinStr
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2068
		{
			yyVAL.str = LeftJoinStr
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.str = RightJoinStr
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2076
		{
			yyVAL.str = RightJoinStr
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2082
		{
			yyVAL.str = NaturalJoinStr
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2096
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2106
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2110
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2116
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2121
		{
			yyVAL.indexHints = nil
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2125
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2129
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2133
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2138
		{
			yyVAL.expr = nil
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2142
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2152
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2156
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2160
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2172
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2178
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2182
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2192
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2198
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2202
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2206
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2210
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2214
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2218
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2222
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2226
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 418:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2230
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 419:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = IsNullStr
		}
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2244
		{
			yyVAL.str = IsNotNullStr
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2248
		{
			yyVAL.str = IsTrueStr
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2252
		{
			yyVAL.str = IsNotTrueStr
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.str = IsFalseStr
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2260
		{
			yyVAL.str = IsNotFalseStr
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2266
		{
			yyVAL.str = EqualStr
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2270
		{
			yyVAL.str = LessThanStr
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.str = GreaterThanStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2278
		{
			yyVAL.str = LessEqualStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2282
		{
			yyVAL.str = GreaterEqualStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2286
		{
			yyVAL.str = NotEqualStr
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2290
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2295
		{
			yyVAL.expr = nil
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2299
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2313
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2329
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2335
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2339
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2347
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2351
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2355
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2359
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2367
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2371
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2383
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2387
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2391
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2395
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2399
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2403
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2407
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2411
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2415
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2419
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2423
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2427
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2453
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2457
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2475
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2479
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 475:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2483
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2493
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2497
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 478:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2501
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2505
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 480:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2509
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 481:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2513
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2517
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2521
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2525
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 485:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2529
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 486:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2533
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2537
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2541
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2551
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2574
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2585
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2590
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2594
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2608
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2617
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 504:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2621
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2631
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2641
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2645
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2649
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2653
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2657
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2661
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = BooleanModeStr
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2675
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 517:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = QueryExpansionStr
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2689
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2693
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2703
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2707
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2715
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2719
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 528:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2729
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2737
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2749
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2754
		{
			yyVAL.expr = nil
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 536:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2763
		{
			yyVAL.str = string("")
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2767
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2773
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2777
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2783
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2788
		{
			yyVAL.expr = nil
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2792
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2802
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2806
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2824
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2828
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2832
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.expr = &NullVal{}
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2846
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2855
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2859
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2864
		{
			yyVAL.exprs = nil
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2873
		{
			yyVAL.expr = nil
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 561:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2882
		{
			yyVAL.orderBy = nil
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2886
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2907
		{
			yyVAL.str = AscScr
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2911
		{
			yyVAL.str = AscScr
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2915
		{
			yyVAL.str = DescScr
		}
	case 569:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2920
		{
			yyVAL.limit = nil
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2924
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2928
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2932
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 573:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2937
		{
			yyVAL.str = ""
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2941
		{
			yyVAL.str = ForUpdateStr
		}
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2945
		{
			yyVAL.str = ShareModeStr
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2958
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2966
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2971
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 580:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2975
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 581:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2979
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2990
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2994
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2998
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3003
		{
			yyVAL.updateExprs = nil
		}
	case 587:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3007
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 588:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 589:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3017
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3023
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3027
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 592:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3049
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3065
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3075
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3079
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3083
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3087
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3094
		{
			yyVAL.bytes = []byte("charset")
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3101
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 608:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.expr = &Default{}
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3118
		{
			yyVAL.byt = 0
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3120
		{
			yyVAL.byt = 1
		}
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3123
		{
			yyVAL.empty = struct{}{}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3125
		{
			yyVAL.empty = struct{}{}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3128
		{
			yyVAL.str = ""
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.str = IgnoreStr
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3144
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3148
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3150
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3152
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3155
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3157
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3163
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3165
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3168
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3170
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3172
		{
			yyVAL.empty = struct{}{}
		}
	case 635:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3175
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3181
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3185
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3202
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3209
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 933:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3531
		{
			decNesting(yylex)
		}
	case 934:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3536
		{
			skipToEnd(yylex)
		}
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3541
		{
			skipToEnd(yylex)
		}
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3545
		{
			skipToEnd(yylex)
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3549
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
