// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex yyLexer) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex yyLexer) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const DO = 57376
const CALL = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const GENERATED = 57380
const ALWAYS = 57381
const OUTFILE = 57382
const S3 = 57383
const DATA = 57384
const LOAD = 57385
const LINES = 57386
const TERMINATED = 57387
const ESCAPED = 57388
const ENCLOSED = 57389
const DUMPFILE = 57390
const CSV = 57391
const HEADER = 57392
const MANIFEST = 57393
const OVERWRITE = 57394
const STARTING = 57395
const OPTIONALLY = 57396
const VALUES = 57397
const LAST_INSERT_ID = 57398
const NEXT = 57399
const VALUE = 57400
const SHARE = 57401
const MODE = 57402
const SQL_NO_CACHE = 57403
const SQL_CACHE = 57404
const SQL_CALC_FOUND_ROWS = 57405
const JOIN = 57406
const STRAIGHT_JOIN = 57407
const LEFT = 57408
const RIGHT = 57409
const INNER = 57410
const OUTER = 57411
const CROSS = 57412
const NATURAL = 57413
const USE = 57414
const FORCE = 57415
const ON = 57416
const USING = 57417
const INPLACE = 57418
const COPY = 57419
const ALGORITHM = 57420
const NONE = 57421
const SHARED = 57422
const EXCLUSIVE = 57423
const SUBQUERY_AS_EXPR = 57424
const ID = 57425
const AT_ID = 57426
const AT_AT_ID = 57427
const HEX = 57428
const STRING = 57429
const NCHAR_STRING = 57430
const INTEGRAL = 57431
const FLOAT = 57432
const HEXNUM = 57433
const VALUE_ARG = 57434
const LIST_ARG = 57435
const COMMENT = 57436
const COMMENT_KEYWORD = 57437
const BIT_LITERAL = 57438
const COMPRESSION = 57439
const EXTRACT = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const OFF = 57444
const DISCARD = 57445
const IMPORT = 57446
const ENABLE = 57447
const DISABLE = 57448
const TABLESPACE = 57449
const VIRTUAL = 57450
const STORED = 57451
const EMPTY_FROM_CLAUSE = 57452
const LOWER_THAN_CHARSET = 57453
const CHARSET = 57454
const UNIQUE = 57455
const KEY = 57456
const EXPRESSION_PREC_SETTER = 57457
const OR = 57458
const XOR = 57459
const AND = 57460
const NOT = 57461
const BETWEEN = 57462
const CASE = 57463
const WHEN = 57464
const THEN = 57465
const ELSE = 57466
const END = 57467
const LE = 57468
const GE = 57469
const NE = 57470
const NULL_SAFE_EQUAL = 57471
const IS = 57472
const LIKE = 57473
const REGEXP = 57474
const IN = 57475
const SHIFT_LEFT = 57476
const SHIFT_RIGHT = 57477
const DIV = 57478
const MOD = 57479
const UNARY = 57480
const COLLATE = 57481
const BINARY = 57482
const UNDERSCORE_BINARY = 57483
const UNDERSCORE_UTF8MB4 = 57484
const UNDERSCORE_UTF8 = 57485
const UNDERSCORE_LATIN1 = 57486
const INTERVAL = 57487
const JSON_EXTRACT_OP = 57488
const JSON_UNQUOTE_EXTRACT_OP = 57489
const CREATE = 57490
const ALTER = 57491
const DROP = 57492
const RENAME = 57493
const ANALYZE = 57494
const ADD = 57495
const FLUSH = 57496
const CHANGE = 57497
const MODIFY = 57498
const REVERT = 57499
const SCHEMA = 57500
const TABLE = 57501
const INDEX = 57502
const VIEW = 57503
const TO = 57504
const IGNORE = 57505
const IF = 57506
const PRIMARY = 57507
const COLUMN = 57508
const SPATIAL = 57509
const FULLTEXT = 57510
const KEY_BLOCK_SIZE = 57511
const CHECK = 57512
const INDEXES = 57513
const ACTION = 57514
const CASCADE = 57515
const CONSTRAINT = 57516
const FOREIGN = 57517
const NO = 57518
const REFERENCES = 57519
const RESTRICT = 57520
const SHOW = 57521
const DESCRIBE = 57522
const EXPLAIN = 57523
const DATE = 57524
const ESCAPE = 57525
const REPAIR = 57526
const OPTIMIZE = 57527
const TRUNCATE = 57528
const COALESCE = 57529
const EXCHANGE = 57530
const REBUILD = 57531
const PARTITIONING = 57532
const REMOVE = 57533
const MAXVALUE = 57534
const PARTITION = 57535
const REORGANIZE = 57536
const LESS = 57537
const THAN = 57538
const PROCEDURE = 57539
const TRIGGER = 57540
const VINDEX = 57541
const VINDEXES = 57542
const DIRECTORY = 57543
const NAME = 57544
const UPGRADE = 57545
const STATUS = 57546
const VARIABLES = 57547
const WARNINGS = 57548
const CASCADED = 57549
const DEFINER = 57550
const OPTION = 57551
const SQL = 57552
const UNDEFINED = 57553
const SEQUENCE = 57554
const MERGE = 57555
const TEMPORARY = 57556
const TEMPTABLE = 57557
const INVOKER = 57558
const SECURITY = 57559
const FIRST = 57560
const AFTER = 57561
const LAST = 57562
const VITESS_MIGRATION = 57563
const CANCEL = 57564
const RETRY = 57565
const COMPLETE = 57566
const CLEANUP = 57567
const BEGIN = 57568
const START = 57569
const TRANSACTION = 57570
const COMMIT = 57571
const ROLLBACK = 57572
const SAVEPOINT = 57573
const RELEASE = 57574
const WORK = 57575
const BIT = 57576
const TINYINT = 57577
const SMALLINT = 57578
const MEDIUMINT = 57579
const INT = 57580
const INTEGER = 57581
const BIGINT = 57582
const INTNUM = 57583
const REAL = 57584
const DOUBLE = 57585
const FLOAT_TYPE = 57586
const DECIMAL = 57587
const NUMERIC = 57588
const TIME = 57589
const TIMESTAMP = 57590
const DATETIME = 57591
const YEAR = 57592
const CHAR = 57593
const VARCHAR = 57594
const BOOL = 57595
const CHARACTER = 57596
const VARBINARY = 57597
const NCHAR = 57598
const TEXT = 57599
const TINYTEXT = 57600
const MEDIUMTEXT = 57601
const LONGTEXT = 57602
const BLOB = 57603
const TINYBLOB = 57604
const MEDIUMBLOB = 57605
const LONGBLOB = 57606
const JSON = 57607
const ENUM = 57608
const GEOMETRY = 57609
const POINT = 57610
const LINESTRING = 57611
const POLYGON = 57612
const GEOMETRYCOLLECTION = 57613
const MULTIPOINT = 57614
const MULTILINESTRING = 57615
const MULTIPOLYGON = 57616
const NULLX = 57617
const AUTO_INCREMENT = 57618
const APPROXNUM = 57619
const SIGNED = 57620
const UNSIGNED = 57621
const ZEROFILL = 57622
const CODE = 57623
const COLLATION = 57624
const COLUMNS = 57625
const DATABASES = 57626
const ENGINES = 57627
const EVENT = 57628
const EXTENDED = 57629
const FIELDS = 57630
const FULL = 57631
const FUNCTION = 57632
const GTID_EXECUTED = 57633
const KEYSPACES = 57634
const OPEN = 57635
const PLUGINS = 57636
const PRIVILEGES = 57637
const PROCESSLIST = 57638
const SCHEMAS = 57639
const TABLES = 57640
const TRIGGERS = 57641
const USER = 57642
const VGTID_EXECUTED = 57643
const VITESS_KEYSPACES = 57644
const VITESS_METADATA = 57645
const VITESS_MIGRATIONS = 57646
const VITESS_REPLICATION_STATUS = 57647
const VITESS_SHARDS = 57648
const VITESS_TABLETS = 57649
const VSCHEMA = 57650
const NAMES = 57651
const GLOBAL = 57652
const SESSION = 57653
const ISOLATION = 57654
const LEVEL = 57655
const READ = 57656
const WRITE = 57657
const ONLY = 57658
const REPEATABLE = 57659
const COMMITTED = 57660
const UNCOMMITTED = 57661
const SERIALIZABLE = 57662
const CURRENT_TIMESTAMP = 57663
const DATABASE = 57664
const CURRENT_DATE = 57665
const CURRENT_TIME = 57666
const LOCALTIME = 57667
const LOCALTIMESTAMP = 57668
const CURRENT_USER = 57669
const UTC_DATE = 57670
const UTC_TIME = 57671
const UTC_TIMESTAMP = 57672
const DAY = 57673
const DAY_HOUR = 57674
const DAY_MICROSECOND = 57675
const DAY_MINUTE = 57676
const DAY_SECOND = 57677
const HOUR = 57678
const HOUR_MICROSECOND = 57679
const HOUR_MINUTE = 57680
const HOUR_SECOND = 57681
const MICROSECOND = 57682
const MINUTE = 57683
const MINUTE_MICROSECOND = 57684
const MINUTE_SECOND = 57685
const MONTH = 57686
const QUARTER = 57687
const SECOND = 57688
const SECOND_MICROSECOND = 57689
const YEAR_MONTH = 57690
const WEEK = 57691
const REPLACE = 57692
const CONVERT = 57693
const CAST = 57694
const SUBSTR = 57695
const SUBSTRING = 57696
const GROUP_CONCAT = 57697
const SEPARATOR = 57698
const TIMESTAMPADD = 57699
const TIMESTAMPDIFF = 57700
const MATCH = 57701
const AGAINST = 57702
const BOOLEAN = 57703
const LANGUAGE = 57704
const WITH = 57705
const QUERY = 57706
const EXPANSION = 57707
const WITHOUT = 57708
const VALIDATION = 57709
const UNUSED = 57710
const ARRAY = 57711
const CUME_DIST = 57712
const DESCRIPTION = 57713
const DENSE_RANK = 57714
const EMPTY = 57715
const EXCEPT = 57716
const FIRST_VALUE = 57717
const GROUPING = 57718
const GROUPS = 57719
const JSON_TABLE = 57720
const LAG = 57721
const LAST_VALUE = 57722
const LATERAL = 57723
const LEAD = 57724
const MEMBER = 57725
const NTH_VALUE = 57726
const NTILE = 57727
const OF = 57728
const OVER = 57729
const PERCENT_RANK = 57730
const RANK = 57731
const RECURSIVE = 57732
const ROW_NUMBER = 57733
const SYSTEM = 57734
const WINDOW = 57735
const ACTIVE = 57736
const ADMIN = 57737
const BUCKETS = 57738
const CLONE = 57739
const COMPONENT = 57740
const DEFINITION = 57741
const ENFORCED = 57742
const EXCLUDE = 57743
const FOLLOWING = 57744
const GEOMCOLLECTION = 57745
const GET_MASTER_PUBLIC_KEY = 57746
const HISTOGRAM = 57747
const HISTORY = 57748
const INACTIVE = 57749
const INVISIBLE = 57750
const LOCKED = 57751
const MASTER_COMPRESSION_ALGORITHMS = 57752
const MASTER_PUBLIC_KEY_PATH = 57753
const MASTER_TLS_CIPHERSUITES = 57754
const MASTER_ZSTD_COMPRESSION_LEVEL = 57755
const NESTED = 57756
const NETWORK_NAMESPACE = 57757
const NOWAIT = 57758
const NULLS = 57759
const OJ = 57760
const OLD = 57761
const OPTIONAL = 57762
const ORDINALITY = 57763
const ORGANIZATION = 57764
const OTHERS = 57765
const PATH = 57766
const PERSIST = 57767
const PERSIST_ONLY = 57768
const PRECEDING = 57769
const PRIVILEGE_CHECKS_USER = 57770
const PROCESS = 57771
const RANDOM = 57772
const REFERENCE = 57773
const REQUIRE_ROW_FORMAT = 57774
const RESOURCE = 57775
const RESPECT = 57776
const RESTART = 57777
const RETAIN = 57778
const REUSE = 57779
const ROLE = 57780
const SECONDARY = 57781
const SECONDARY_ENGINE = 57782
const SECONDARY_LOAD = 57783
const SECONDARY_UNLOAD = 57784
const SKIP = 57785
const SRID = 57786
const THREAD_PRIORITY = 57787
const TIES = 57788
const UNBOUNDED = 57789
const VCPU = 57790
const VISIBLE = 57791
const FORMAT = 57792
const TREE = 57793
const VITESS = 57794
const TRADITIONAL = 57795
const LOCAL = 57796
const LOW_PRIORITY = 57797
const NO_WRITE_TO_BINLOG = 57798
const LOGS = 57799
const ERROR = 57800
const GENERAL = 57801
const HOSTS = 57802
const OPTIMIZER_COSTS = 57803
const USER_RESOURCES = 57804
const SLOW = 57805
const CHANNEL = 57806
const RELAY = 57807
const EXPORT = 57808
const AVG_ROW_LENGTH = 57809
const CONNECTION = 57810
const CHECKSUM = 57811
const DELAY_KEY_WRITE = 57812
const ENCRYPTION = 57813
const ENGINE = 57814
const INSERT_METHOD = 57815
const MAX_ROWS = 57816
const MIN_ROWS = 57817
const PACK_KEYS = 57818
const PASSWORD = 57819
const FIXED = 57820
const DYNAMIC = 57821
const COMPRESSED = 57822
const REDUNDANT = 57823
const COMPACT = 57824
const ROW_FORMAT = 57825
const STATS_AUTO_RECALC = 57826
const STATS_PERSISTENT = 57827
const STATS_SAMPLE_PAGES = 57828
const STORAGE = 57829
const MEMORY = 57830
const DISK = 57831
const PARTITIONS = 57832
const LINEAR = 57833
const RANGE = 57834
const LIST = 57835
const SUBPARTITION = 57836
const SUBPARTITIONS = 57837
const HASH = 57838

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"CLEANUP",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VSCHEMA",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	10, 44,
	11, 44,
	-2, 34,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	1, 137,
	514, 137,
	-2, 143,
	-1, 45,
	115, 143,
	155, 143,
	271, 143,
	-2, 404,
	-1, 52,
	33, 577,
	177, 577,
	188, 577,
	221, 591,
	222, 591,
	-2, 579,
	-1, 57,
	179, 601,
	-2, 599,
	-1, 108,
	176, 1046,
	-2, 116,
	-1, 110,
	1, 138,
	514, 138,
	-2, 143,
	-1, 120,
	116, 307,
	182, 307,
	-2, 398,
	-1, 139,
	115, 143,
	155, 143,
	271, 143,
	-2, 413,
	-1, 598,
	162, 1067,
	-2, 1063,
	-1, 599,
	162, 1068,
	-2, 1064,
	-1, 632,
	57, 669,
	-2, 677,
	-1, 669,
	131, 1425,
	-2, 109,
	-1, 670,
	131, 1302,
	-2, 110,
	-1, 676,
	131, 1356,
	-2, 1040,
	-1, 818,
	131, 1235,
	-2, 1037,
	-1, 854,
	187, 38,
	192, 38,
	-2, 318,
	-1, 931,
	1, 452,
	514, 452,
	-2, 143,
	-1, 1127,
	57, 670,
	-2, 682,
	-1, 1128,
	57, 671,
	-2, 683,
	-1, 1180,
	115, 143,
	155, 143,
	271, 143,
	-2, 348,
	-1, 1183,
	23, 162,
	-2, 164,
	-1, 1256,
	116, 307,
	182, 307,
	-2, 398,
	-1, 1265,
	187, 39,
	192, 39,
	-2, 319,
	-1, 1515,
	162, 1072,
	-2, 1066,
	-1, 1590,
	115, 143,
	155, 143,
	271, 143,
	-2, 349,
	-1, 1826,
	75, 91,
	84, 91,
	-2, 735,
	-1, 1993,
	47, 1008,
	-2, 1002,
	-1, 2181,
	5, 50,
	16, 50,
	18, 50,
	85, 50,
	-2, 710,
}

const yyPrivate = 57344

const yyLast = 31089

var yyAct = [...]int{
	598, 2446, 1546, 2395, 2332, 2362, 2334, 2417, 2226, 2187,
	2381, 2090, 2102, 2368, 1846, 1853, 3, 592, 34, 2007,
	2298, 90, 2091, 1855, 2008, 1142, 2152, 2004, 1771, 1109,
	625, 2250, 1799, 2005, 2255, 2146, 1529, 1550, 994, 550,
	593, 2172, 601, 1994, 1563, 1622, 547, 2002, 176, 1791,
	1872, 176, 942, 514, 176, 1895, 647, 546, 2049, 530,
	2242, 176, 554, 1822, 1933, 590, 148, 548, 591, 176,
	1642, 1627, 1873, 576, 1874, 1568, 33, 1811, 1576, 648,
	674, 176, 1460, 35, 1783, 1129, 1419, 1567, 1587, 629,
	1949, 633, 627, 821, 542, 1655, 1509, 1687, 1467, 134,
	1641, 1629, 1866, 530, 849, 971, 530, 176, 530, 650,
	1828, 1570, 1151, 1112, 89, 1172, 559, 1279, 1479, 85,
	1437, 1531, 884, 1353, 1012, 1270, 1367, 828, 1370, 1555,
	850, 855, 1639, 851, 1169, 1155, 1171, 639, 927, 992,
	829, 671, 825, 1255, 987, 1375, 151, 1232, 862, 111,
	634, 1263, 1618, 112, 92, 1551, 117, 635, 118, 661,
	637, 70, 79, 91, 537, 1082, 1522, 8, 1078, 636,
	71, 7, 2430, 6, 2280, 852, 178, 179, 180, 83,
	1237, 2447, 2189, 2190, 2191, 657, 2363, 2189, 2335, 119,
	1685, 113, 1913, 1912, 1793, 655, 837, 660, 1941, 1942,
	84, 96, 832, 1013, 641, 517, 889, 1426, 487, 1512,
	822, 178, 179, 180, 1425, 1526, 1527, 1424, 1423, 1422,
	1421, 1339, 1408, 540, 2409, 541, 1769, 538, 1990, 2203,
	2294, 2293, 888, 628, 626, 582, 2071, 668, 887, 98,
	99, 1413, 102, 2440, 2221, 108, 504, 2222, 173, 2391,
	543, 482, 642, 2435, 649, 503, 1725, 113, 675, 886,
	843, 2350, 2425, 2227, 842, 1013, 501, 72, 1023, 844,
	866, 624, 900, 901, 632, 904, 905, 906, 907, 651,
	2382, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 897, 865, 72, 1673,
	72, 2390, 663, 664, 498, 2349, 1948, 902, 2134, 1246,
	1173, 1044, 1174, 512, 1770, 1920, 890, 891, 892, 1919,
	1723, 113, 1802, 1634, 2041, 2042, 1582, 1583, 509, 2040,
	1023, 172, 2303, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
	1053, 1052, 1054, 1055, 81, 1837, 1632, 1803, 1836, 2268,
	1940, 1838, 1722, 1581, 72, 114, 1528, 74, 1508, 1019,
	990, 518, 1011, 961, 841, 622, 936, 937, 156, 978,
	926, 980, 966, 967, 621, 81, 949, 81, 2282, 1863,
	949, 950, 2149, 962, 955, 950, 2104, 1602, 1601, 488,
	528, 490, 505, 948, 520, 947, 519, 494, 517, 492,
	496, 506, 497, 517, 491, 2126, 502, 977, 979, 493,
	507, 508, 510, 524, 523, 511, 930, 500, 521, 1412,
	839, 1019, 517, 2124, 153, 532, 154, 1414, 1415, 1416,
	526, 81, 1359, 1116, 1631, 1896, 171, 1656, 903, 1500,
	1489, 1490, 1491, 1492, 1502, 1493, 1494, 1495, 1507, 1503,
	1496, 1497, 1504, 1505, 1506, 1498, 1499, 1501, 989, 968,
	963, 956, 845, 2105, 178, 179, 180, 1916, 1688, 969,
	2098, 2410, 594, 2434, 577, 579, 595, 596, 2099, 575,
	578, 597, 176, 1354, 176, 964, 965, 176, 836, 984,
	1701, 838, 1702, 517, 1703, 970, 975, 932, 1928, 1704,
	976, 2106, 909, 157, 908, 982, 1329, 1693, 580, 581,
	981, 2216, 162, 841, 925, 530, 530, 530, 1690, 2290,
	873, 1018, 1015, 1016, 1017, 1022, 1024, 1021, 840, 1020,
	2070, 871, 974, 530, 530, 1692, 1014, 1699, 1696, 1698,
	1697, 945, 1658, 951, 952, 953, 954, 841, 1330, 833,
	1331, 1005, 34, 1564, 518, 1842, 835, 834, 846, 518,
	1694, 522, 882, 881, 880, 879, 991, 878, 2429, 1249,
	2279, 2304, 864, 1918, 877, 1691, 929, 876, 518, 515,
	875, 1360, 883, 1018, 1015, 1016, 1017, 1022, 1024, 1021,
	870, 1020, 1723, 1859, 516, 2283, 826, 1056, 1014, 983,
	1056, 858, 826, 839, 959, 2431, 824, 2150, 2421, 2423,
	1950, 826, 2348, 1932, 985, 1269, 1724, 857, 1368, 149,
	874, 1640, 176, 1059, 1060, 1061, 1062, 1107, 1633, 1772,
	1774, 872, 863, 1067, 864, 1070, 662, 867, 857, 176,
	899, 80, 1944, 1929, 1119, 1736, 1679, 868, 1123, 518,
	627, 1122, 1364, 1952, 629, 996, 997, 999, 530, 1120,
	893, 2078, 176, 928, 1915, 869, 864, 530, 1977, 1976,
	1102, 1975, 80, 530, 80, 1244, 1905, 840, 1063, 938,
	1243, 1268, 1117, 1242, 946, 935, 1108, 1341, 1340, 1342,
	1343, 1344, 1365, 110, 863, 1240, 486, 481, 1935, 1675,
	1057, 1058, 1008, 1934, 71, 671, 1006, 1108, 1007, 1121,
	2327, 840, 864, 89, 1927, 75, 1954, 1926, 1958, 1935,
	1953, 2186, 1951, 2168, 1934, 1833, 863, 1956, 80, 1798,
	1029, 867, 857, 1113, 864, 1761, 1955, 1773, 1521, 1159,
	1056, 868, 1089, 940, 1080, 1084, 1081, 1588, 958, 1957,
	1959, 2374, 1358, 92, 1055, 2372, 2039, 644, 1076, 960,
	1095, 1096, 1097, 1098, 2376, 2377, 972, 1376, 2419, 1857,
	1858, 2420, 863, 2418, 988, 105, 2373, 2361, 857, 860,
	861, 2344, 826, 2162, 864, 1110, 854, 858, 885, 1118,
	1689, 1361, 626, 1442, 863, 543, 898, 1175, 628, 1141,
	1965, 1138, 178, 179, 180, 853, 1462, 1443, 1444, 1441,
	150, 155, 152, 158, 159, 160, 161, 163, 164, 165,
	166, 176, 675, 1165, 1166, 1233, 167, 168, 169, 170,
	944, 106, 1009, 1124, 1241, 1856, 1674, 1026, 1152, 1027,
	1028, 1480, 1885, 1355, 863, 1356, 1967, 1859, 1357, 1028,
	857, 860, 861, 530, 826, 1265, 1027, 1028, 854, 858,
	178, 179, 180, 1274, 1795, 2264, 2060, 1276, 931, 2059,
	530, 530, 1463, 530, 1672, 530, 530, 1044, 530, 530,
	530, 530, 530, 530, 1048, 1049, 1050, 1051, 1053, 1052,
	1054, 1055, 1480, 530, 1750, 973, 1377, 176, 1312, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1053, 1052, 1054, 1055,
	1662, 1278, 2137, 176, 1046, 1047, 1048, 1049, 1050, 1051,
	1053, 1052, 1054, 1055, 530, 1277, 176, 1267, 1275, 1667,
	1796, 1050, 1051, 1053, 1052, 1054, 1055, 1366, 2353, 1556,
	1557, 176, 1432, 1434, 1435, 1667, 1261, 1026, 1254, 1027,
	1028, 1670, 873, 1307, 1308, 1671, 943, 176, 1026, 871,
	1027, 1028, 2131, 1433, 176, 1170, 1160, 1247, 1248, 2354,
	1239, 1669, 2320, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 530, 530, 530, 2403, 1309, 1272, 1281, 2432,
	1282, 1251, 1284, 1286, 2045, 2449, 1290, 1292, 1294, 1296,
	1298, 2404, 1264, 2321, 1252, 2394, 1250, 2364, 1380, 1271,
	1271, 2202, 176, 2136, 1273, 1384, 1136, 1386, 1387, 1388,
	1389, 1372, 2444, 1484, 1393, 1315, 1316, 1136, 1728, 1729,
	1730, 1321, 1322, 1026, 1325, 1027, 1028, 1739, 1407, 1245,
	1032, 1033, 1034, 1035, 1036, 1037, 1038, 1030, 1026, 1310,
	1027, 1028, 2324, 1378, 1379, 2201, 1026, 1461, 1027, 1028,
	1741, 1026, 2433, 1027, 1028, 1369, 1746, 1383, 666, 1740,
	1470, 530, 612, 613, 1390, 1391, 1392, 1136, 113, 1348,
	1438, 843, 2129, 1136, 2323, 842, 530, 530, 1445, 1436,
	1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
	1457, 1458, 1459, 1382, 1026, 81, 1027, 1028, 2076, 1346,
	1446, 1026, 2392, 1027, 1028, 176, 1870, 1026, 1440, 1027,
	1028, 1403, 1404, 1405, 2365, 1149, 172, 1869, 1513, 1406,
	1374, 1336, 1637, 1026, 1349, 1027, 1028, 1334, 1745, 1333,
	1481, 176, 1347, 1332, 530, 1534, 1026, 2286, 1027, 1028,
	114, 178, 179, 180, 176, 2057, 1439, 530, 1026, 1871,
	1027, 1028, 176, 156, 176, 1323, 176, 176, 530, 1317,
	1515, 530, 1345, 1026, 1314, 1027, 1028, 1536, 1313, 1537,
	1288, 1026, 530, 1027, 1028, 2322, 2263, 89, 1517, 1518,
	1148, 2261, 1145, 1026, 1335, 1027, 1028, 2239, 1513, 2199,
	178, 179, 180, 89, 1840, 1843, 671, 2056, 1879, 671,
	1867, 1427, 1428, 1429, 1430, 1542, 1683, 1682, 1514, 153,
	1549, 154, 178, 179, 180, 1026, 1650, 1027, 1028, 1566,
	1535, 171, 1608, 1609, 1610, 1611, 1465, 530, 1464, 1409,
	1515, 1146, 1373, 1643, 1644, 1645, 1337, 1591, 1647, 1649,
	1324, 1468, 1469, 1574, 178, 179, 180, 1320, 641, 1474,
	1319, 530, 178, 179, 180, 1318, 1648, 530, 1274, 1147,
	986, 1274, 86, 1274, 1466, 1592, 95, 1624, 1544, 1666,
	2101, 1472, 1473, 87, 2161, 1657, 1595, 94, 1561, 93,
	1789, 2448, 1559, 2219, 2428, 1789, 2414, 88, 157, 1136,
	1516, 543, 1578, 1519, 1520, 1579, 1630, 162, 2288, 530,
	2287, 1461, 1594, 1789, 2398, 1593, 1461, 1461, 2225, 1044,
	1800, 1943, 1897, 675, 1789, 2388, 675, 1789, 2357, 1789,
	2338, 2310, 1136, 1882, 1552, 1553, 1541, 1136, 2219, 1136,
	1849, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1052,
	1054, 1055, 176, 1829, 1654, 1136, 1136, 1789, 2217, 176,
	1596, 1586, 1800, 1638, 176, 176, 1668, 1636, 176, 1603,
	176, 1604, 1605, 1606, 1607, 1625, 176, 1635, 1646, 1667,
	1136, 1620, 1621, 176, 94, 1850, 2163, 1614, 1615, 1616,
	1617, 1808, 599, 1678, 1660, 1663, 1659, 1829, 1680, 1681,
	2166, 1136, 1676, 1025, 95, 1677, 1785, 1625, 866, 1852,
	2343, 176, 530, 1847, 149, 94, 1830, 93, 1271, 1661,
	1626, 88, 1664, 1667, 1665, 1832, 88, 1857, 1858, 2068,
	2067, 1714, 1715, 2161, 1848, 865, 1717, 86, 1686, 1789,
	177, 2064, 2065, 177, 88, 1718, 177, 1808, 87, 2064,
	2063, 531, 1737, 177, 1808, 1136, 1737, 1136, 1723, 1914,
	1830, 177, 1236, 1899, 1893, 1894, 1854, 1789, 1788, 1723,
	1025, 1136, 2034, 177, 1236, 1235, 1181, 1180, 1737, 2066,
	2003, 1723, 1438, 1807, 1136, 1580, 1737, 1755, 2204, 1732,
	2161, 1734, 1707, 1856, 1754, 531, 1667, 1651, 531, 177,
	531, 631, 1136, 1554, 1140, 1859, 1524, 1417, 81, 2333,
	1363, 1733, 1167, 1303, 603, 610, 611, 612, 613, 604,
	606, 848, 847, 2443, 605, 176, 2396, 608, 614, 615,
	2438, 2360, 81, 176, 2337, 2331, 1876, 1808, 2205, 2206,
	2207, 530, 1721, 2300, 1143, 2275, 2196, 1238, 1623, 2100,
	2062, 1900, 1794, 1619, 1613, 1612, 1351, 1266, 1439, 1262,
	1767, 1234, 1731, 1304, 1305, 1306, 107, 930, 2103, 2208,
	2053, 2054, 1875, 176, 176, 2173, 2174, 2301, 81, 1300,
	1804, 34, 616, 618, 617, 619, 1634, 1790, 2400, 1839,
	1824, 2369, 1813, 1816, 1817, 1818, 1814, 1749, 1815, 1819,
	2176, 2179, 1515, 2083, 1851, 150, 155, 152, 158, 159,
	160, 161, 163, 164, 165, 166, 2209, 2210, 2082, 1876,
	2081, 167, 168, 169, 170, 2003, 1301, 1302, 1786, 1886,
	1708, 1410, 2025, 2178, 2023, 530, 1113, 2026, 1768, 2024,
	176, 2022, 1864, 1865, 2021, 2412, 2389, 176, 1548, 1823,
	1514, 1144, 1540, 530, 1776, 1892, 2167, 1844, 2087, 530,
	1827, 1782, 1787, 1274, 1274, 1983, 1751, 1797, 530, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1053, 1052, 1054, 1055,
	1911, 2027, 1982, 1817, 1818, 1747, 1831, 2319, 2254, 1995,
	1997, 176, 176, 176, 176, 176, 1834, 1845, 1998, 1630,
	1813, 1816, 1817, 1818, 1814, 2154, 1815, 1819, 176, 176,
	2173, 2174, 2256, 2153, 645, 2157, 1868, 1134, 1130, 1992,
	1758, 1759, 646, 1362, 176, 620, 1861, 1599, 1880, 1476,
	1877, 895, 1131, 1909, 894, 2113, 1883, 1875, 86, 1938,
	1152, 86, 1461, 1477, 1887, 1888, 1889, 998, 88, 87,
	2159, 1254, 87, 95, 1878, 1907, 1906, 1538, 1539, 1133,
	114, 1132, 530, 88, 94, 2079, 93, 1910, 1711, 627,
	1556, 1557, 1908, 2340, 2296, 88, 530, 1860, 1964, 1821,
	1545, 653, 654, 1981, 1700, 95, 176, 1727, 93, 2397,
	530, 1980, 2262, 1945, 1930, 2260, 94, 94, 93, 530,
	1974, 2259, 2252, 2158, 1946, 2156, 530, 530, 2084, 176,
	176, 176, 176, 176, 1901, 1902, 1985, 2043, 1652, 1936,
	652, 176, 1937, 633, 1961, 2251, 176, 176, 95, 176,
	2147, 1960, 176, 176, 176, 2015, 1947, 1974, 1800, 94,
	2402, 2401, 2402, 1123, 2009, 1785, 1756, 1161, 1153, 1986,
	100, 101, 2325, 2055, 643, 2058, 2000, 1973, 97, 82,
	176, 1, 607, 2033, 2371, 2006, 499, 1984, 1525, 1111,
	2006, 513, 1987, 2367, 177, 1338, 177, 1328, 2228, 177,
	2297, 2077, 634, 1628, 856, 2017, 2018, 176, 2020, 635,
	139, 1589, 2035, 1978, 530, 2036, 2016, 2028, 1590, 2019,
	2384, 530, 2032, 2089, 89, 104, 176, 531, 531, 531,
	2044, 2037, 1134, 1130, 1372, 2052, 176, 819, 2051, 103,
	859, 957, 1653, 2048, 2014, 531, 531, 1131, 2220, 1862,
	176, 1962, 1963, 176, 1600, 1187, 1966, 1185, 1186, 1184,
	1968, 1969, 1970, 2114, 1189, 1188, 1183, 2073, 2072, 1411,
	527, 1820, 1127, 1128, 1133, 174, 1132, 1176, 1154, 2086,
	896, 489, 2069, 1684, 2095, 495, 2093, 1068, 1979, 583,
	1630, 2088, 1835, 2052, 672, 665, 2051, 2011, 2151, 1991,
	176, 1993, 2109, 1792, 1996, 1989, 2001, 2085, 2318, 2111,
	2112, 2253, 2339, 1597, 1150, 2108, 1748, 1075, 2074, 2075,
	2122, 2115, 1478, 1571, 1533, 1431, 552, 551, 549, 1778,
	1801, 1031, 2116, 602, 177, 1162, 1812, 2145, 1810, 1809,
	1709, 1575, 2175, 2171, 1569, 1784, 560, 553, 529, 545,
	600, 177, 2047, 2050, 1598, 176, 1917, 2155, 2097, 2148,
	1010, 1126, 539, 831, 1475, 2302, 1726, 2133, 2170, 1125,
	531, 1487, 2160, 1488, 177, 2180, 2281, 1841, 60, 531,
	38, 2177, 534, 2408, 1001, 531, 659, 32, 2184, 2185,
	31, 30, 673, 29, 28, 823, 23, 830, 2182, 176,
	22, 21, 176, 176, 176, 530, 1044, 2215, 1735, 20,
	19, 25, 18, 17, 16, 2195, 2193, 2194, 2183, 109,
	47, 2198, 44, 2200, 530, 530, 530, 530, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1053, 1052, 1054, 1055, 42,
	116, 2235, 2224, 115, 45, 41, 933, 39, 27, 26,
	15, 2119, 2120, 14, 2121, 13, 12, 2123, 11, 2125,
	10, 530, 530, 530, 176, 9, 5, 4, 1004, 24,
	2, 2188, 0, 2135, 0, 0, 0, 0, 2234, 0,
	0, 0, 0, 0, 2233, 0, 0, 530, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 2258, 0,
	2248, 2249, 2269, 34, 0, 2257, 0, 2271, 2267, 0,
	2238, 1135, 627, 0, 0, 2265, 543, 530, 0, 2285,
	0, 2273, 2246, 2247, 2009, 0, 0, 0, 2009, 0,
	0, 0, 0, 177, 0, 2277, 2278, 0, 0, 0,
	0, 0, 0, 0, 2006, 0, 0, 0, 530, 0,
	0, 0, 2192, 0, 0, 0, 0, 2289, 0, 0,
	0, 2291, 2292, 0, 0, 531, 0, 0, 2197, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 531, 531, 0, 531, 2299, 531, 531, 0,
	531, 531, 531, 531, 531, 531, 530, 2314, 2329, 0,
	2223, 2315, 2317, 0, 0, 531, 0, 0, 2326, 177,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 627,
	0, 530, 176, 2345, 0, 177, 0, 0, 2330, 2009,
	0, 530, 0, 2342, 34, 2236, 531, 2237, 177, 0,
	0, 0, 2240, 2241, 0, 0, 0, 0, 530, 0,
	2328, 0, 0, 177, 0, 0, 0, 0, 530, 0,
	2366, 0, 0, 0, 530, 530, 0, 0, 2266, 177,
	0, 0, 0, 2355, 2370, 2375, 177, 2378, 34, 2274,
	0, 530, 2276, 2393, 2383, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 531, 531, 531, 0, 0, 0,
	0, 2399, 2299, 2385, 0, 0, 0, 2358, 2006, 2405,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2413,
	0, 2411, 0, 0, 177, 0, 0, 2416, 2415, 0,
	2422, 0, 0, 0, 0, 0, 0, 0, 0, 2426,
	2424, 2427, 0, 0, 0, 0, 0, 0, 0, 0,
	2436, 0, 0, 2437, 0, 2439, 0, 2316, 543, 0,
	0, 2441, 0, 0, 530, 0, 2445, 0, 0, 0,
	2450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 2336, 1044,
	0, 0, 1040, 0, 1041, 0, 0, 0, 531, 531,
	0, 0, 0, 0, 673, 673, 673, 0, 1042, 1043,
	1039, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1052,
	1054, 1055, 1000, 1002, 0, 0, 0, 177, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 2359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2379, 0, 0,
	0, 0, 0, 177, 0, 0, 531, 0, 114, 0,
	136, 0, 0, 0, 0, 0, 177, 0, 0, 531,
	0, 156, 0, 0, 177, 0, 177, 0, 177, 177,
	531, 0, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 531, 0, 0, 1105, 0, 0,
	0, 0, 146, 0, 0, 0, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 154,
	0, 0, 0, 0, 0, 123, 124, 145, 144, 171,
	0, 0, 0, 0, 2442, 0, 0, 1157, 0, 531,
	0, 0, 0, 0, 0, 0, 673, 0, 0, 0,
	0, 0, 1177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 121, 147, 128, 120,
	0, 141, 142, 0, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 162, 129, 0, 0, 0,
	0, 531, 0, 0, 0, 0, 72, 36, 37, 74,
	132, 130, 125, 126, 127, 131, 0, 0, 0, 0,
	122, 0, 0, 0, 0, 0, 78, 0, 0, 133,
	40, 66, 67, 0, 64, 68, 0, 0, 0, 0,
	0, 0, 0, 65, 177, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 0, 0, 177, 177, 0, 0,
	177, 0, 177, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 53, 0, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 177, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 823, 0, 0, 584, 1137, 1139, 0, 0,
	0, 0, 0, 0, 0, 1105, 0, 0, 0, 1280,
	1280, 0, 1280, 0, 1280, 1280, 0, 1289, 1280, 1280,
	1280, 1280, 1280, 0, 0, 0, 0, 0, 0, 0,
	1105, 1105, 823, 0, 0, 43, 46, 49, 48, 51,
	0, 63, 0, 175, 69, 0, 485, 143, 0, 525,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 137,
	0, 0, 138, 1350, 485, 0, 52, 77, 76, 0,
	0, 61, 62, 50, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 177, 0, 0,
	0, 0, 658, 0, 658, 177, 0, 0, 0, 0,
	0, 0, 485, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 55, 0, 56, 57, 58, 59,
	0, 673, 673, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 177,
	1471, 0, 0, 0, 0, 531, 0, 1105, 0, 0,
	0, 531, 0, 0, 0, 1485, 1486, 0, 0, 673,
	531, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 177, 177, 177, 177, 177, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	177, 177, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1547, 0, 0, 177, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1157, 0, 0, 673,
	0, 0, 0, 0, 0, 0, 0, 673, 0, 0,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 823, 0, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 1204, 0, 0, 0, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 177, 0,
	0, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 0, 0, 0, 0, 0, 0, 531, 531,
	0, 177, 177, 177, 177, 177, 830, 0, 0, 0,
	0, 0, 0, 177, 0, 0, 0, 0, 177, 177,
	0, 177, 0, 0, 177, 177, 177, 0, 0, 0,
	823, 0, 0, 0, 0, 0, 830, 0, 0, 0,
	0, 0, 0, 0, 0, 609, 73, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 1483, 0, 0, 823, 177,
	0, 0, 0, 0, 0, 0, 531, 0, 0, 1192,
	0, 0, 0, 531, 0, 0, 0, 1114, 177, 0,
	1137, 1523, 0, 0, 0, 0, 0, 485, 177, 485,
	0, 0, 485, 0, 0, 0, 0, 630, 0, 73,
	0, 0, 177, 0, 0, 177, 0, 0, 0, 0,
	1543, 0, 1205, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 484, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	0, 0, 0, 0, 0, 0, 623, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 0, 0, 0, 0,
	0, 1720, 0, 0, 1218, 1221, 1222, 1223, 1224, 1225,
	1226, 0, 1227, 1228, 1229, 1230, 1231, 1206, 1207, 1208,
	1209, 1190, 1191, 1219, 827, 1193, 0, 1194, 1195, 1196,
	1197, 1198, 1199, 1200, 1201, 1202, 1203, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 0, 0, 177, 0, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 640, 0, 0, 0, 0, 0,
	0, 177, 0, 0, 177, 177, 177, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 673, 0, 0, 0, 0, 531, 531, 531, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1779, 1220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 81, 0, 531, 531, 531, 177, 603, 610, 611,
	612, 613, 604, 606, 0, 0, 0, 605, 0, 0,
	608, 614, 615, 0, 0, 0, 0, 0, 0, 531,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 531,
	0, 0, 0, 2053, 2054, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 616, 618, 617, 619, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	531, 0, 1547, 0, 0, 0, 0, 0, 1898, 0,
	0, 0, 0, 0, 0, 0, 0, 1903, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1738, 0,
	0, 0, 1742, 0, 1743, 1744, 0, 0, 531, 0,
	0, 0, 0, 1752, 0, 0, 1753, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 531, 177, 0, 0, 0, 0, 0,
	0, 1757, 0, 531, 0, 0, 0, 0, 1762, 1763,
	1764, 1765, 1766, 0, 1543, 0, 1106, 1106, 0, 0,
	531, 0, 485, 0, 0, 1777, 0, 0, 0, 0,
	531, 673, 0, 0, 0, 0, 531, 531, 1326, 0,
	0, 0, 0, 0, 0, 1280, 0, 0, 0, 0,
	0, 485, 0, 531, 0, 0, 0, 0, 0, 1988,
	993, 993, 993, 0, 0, 0, 1371, 0, 673, 0,
	0, 0, 1105, 0, 0, 2013, 1280, 1105, 0, 934,
	73, 939, 485, 0, 941, 0, 594, 0, 0, 485,
	595, 596, 0, 0, 0, 597, 0, 0, 1394, 1395,
	485, 485, 485, 485, 485, 485, 485, 630, 1064, 1065,
	1066, 0, 1069, 0, 1071, 1072, 1073, 1074, 0, 1077,
	1079, 1079, 0, 1079, 1083, 1083, 1085, 1086, 1087, 1088,
	0, 1090, 1091, 1092, 1093, 1094, 531, 485, 0, 0,
	1083, 1083, 1083, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 823, 0, 0, 1105, 0, 0, 1115,
	1547, 0, 630, 0, 0, 0, 630, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 0, 0, 0, 658, 658, 0,
	0, 0, 0, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 1371, 658, 658, 658, 658,
	658, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1326, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1971, 1972, 658, 0, 0, 0, 0, 0, 0, 1164,
	0, 0, 0, 0, 0, 0, 640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 1371, 0, 485, 0, 485,
	0, 485, 1577, 0, 0, 0, 0, 2012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2030, 2031, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1547, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2229, 2230, 2231, 2232, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2244, 2244, 2244, 0, 0, 0, 0, 0, 1182, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1105, 0, 0, 0, 0, 2270, 0, 2272, 0,
	0, 2118, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2127, 2128, 2130, 2132, 0, 0, 0, 0,
	0, 0, 2138, 0, 0, 2139, 1547, 0, 0, 0,
	2143, 0, 0, 0, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 0, 0, 485,
	485, 0, 0, 485, 1311, 1712, 0, 673, 0, 0,
	0, 485, 2164, 2165, 0, 0, 2169, 0, 485, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1352, 2181, 0, 0, 993, 993, 993,
	0, 0, 0, 0, 0, 0, 485, 0, 0, 0,
	0, 0, 0, 0, 0, 1547, 0, 0, 0, 0,
	0, 0, 0, 0, 1381, 0, 0, 0, 0, 0,
	0, 1385, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 0,
	2351, 0, 2218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1105, 0, 2356, 0, 0,
	0, 658, 0, 0, 0, 0, 0, 1547, 0, 1420,
	0, 0, 0, 673, 673, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1547, 0, 2243, 0, 0, 0, 658, 658, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1371, 0, 0,
	485, 0, 0, 0, 0, 0, 0, 0, 1326, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2284, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 172, 0, 0, 0, 485, 485,
	0, 0, 0, 0, 0, 1891, 0, 0, 0, 0,
	0, 1572, 0, 1547, 0, 2295, 0, 0, 114, 0,
	136, 0, 0, 0, 0, 0, 0, 0, 2305, 2306,
	2307, 156, 2308, 2309, 2311, 0, 0, 0, 2312, 2313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1558, 0, 0, 0, 0, 0, 0, 0, 1562,
	0, 1565, 146, 0, 1420, 485, 0, 135, 0, 0,
	0, 0, 1890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 153, 0, 154,
	0, 0, 0, 0, 2347, 1257, 1258, 145, 144, 171,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 485, 485, 485, 485,
	485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 485, 485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 485,
	0, 0, 0, 0, 0, 140, 1259, 147, 0, 1256,
	0, 141, 142, 658, 0, 0, 157, 0, 0, 0,
	0, 2406, 2407, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 0, 1106, 485, 485, 485, 485, 485, 0,
	0, 0, 0, 0, 0, 0, 2029, 0, 0, 1420,
	0, 485, 1326, 0, 485, 0, 1695, 485, 2038, 1371,
	0, 1705, 1706, 0, 0, 1710, 0, 0, 0, 0,
	0, 0, 0, 1713, 0, 0, 0, 0, 0, 0,
	1716, 0, 149, 0, 0, 485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1719, 0,
	0, 0, 485, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1106, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 485, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 143, 485, 1760,
	172, 0, 0, 0, 0, 0, 0, 0, 0, 137,
	0, 1253, 138, 0, 0, 0, 1775, 0, 0, 0,
	0, 0, 0, 0, 114, 0, 136, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 485, 0, 0, 0, 1805,
	1806, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 135, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 154, 0, 0, 0, 0,
	485, 1257, 1258, 145, 144, 171, 0, 0, 0, 0,
	0, 1826, 0, 150, 155, 152, 158, 159, 160, 161,
	163, 164, 165, 166, 0, 0, 0, 0, 0, 167,
	168, 169, 170, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 485, 0, 0, 485, 485, 485,
	0, 0, 0, 0, 1904, 0, 0, 0, 0, 0,
	0, 140, 1259, 147, 0, 1256, 0, 141, 142, 0,
	0, 0, 157, 0, 0, 0, 0, 1884, 0, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1106, 1921, 1922,
	1923, 1924, 1925, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1420, 1931, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1939, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1572, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 2010,
	0, 73, 0, 0, 1572, 1572, 1572, 1572, 1572, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 1572, 0, 0, 1572, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2046, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 143, 0, 0, 0, 485, 0, 0,
	0, 0, 0, 0, 0, 137, 0, 0, 138, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1106, 0, 2094, 0, 0, 0, 2061, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2117, 0, 0, 0, 0, 0,
	0, 0, 0, 2092, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2096, 0, 0, 0, 0, 0, 0,
	0, 2140, 2141, 2142, 0, 0, 0, 2107, 0, 0,
	2110, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	155, 152, 158, 159, 160, 161, 163, 164, 165, 166,
	0, 0, 0, 0, 0, 167, 168, 169, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2144, 0, 0,
	1572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2211, 0, 0, 2212,
	2213, 2214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2010,
	0, 73, 0, 2010, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 801, 787, 409, 0,
	735, 804, 705, 723, 814, 726, 729, 769, 684, 748,
	332, 720, 0, 709, 680, 715, 681, 707, 737, 236,
	704, 789, 752, 803, 288, 233, 686, 710, 346, 725,
	187, 771, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 810, 292, 758, 0,
	394, 317, 0, 0, 2010, 739, 793, 746, 783, 734,
	770, 694, 757, 805, 721, 766, 806, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 2341, 178, 179, 180,
	0, 2386, 73, 2387, 0, 0, 0, 0, 0, 210,
	0, 217, 717, 763, 800, 718, 765, 231, 276, 238,
	230, 413, 811, 792, 0, 0, 202, 802, 741, 0,
	768, 0, 817, 679, 760, 0, 682, 685, 813, 796,
	713, 241, 0, 0, 0, 0, 73, 0, 0, 738,
	747, 780, 732, 0, 0, 0, 0, 0, 0, 2346,
	711, 0, 756, 0, 0, 0, 690, 683, 0, 0,
	0, 0, 736, 0, 0, 0, 693, 0, 712, 781,
	0, 677, 259, 687, 318, 0, 785, 795, 733, 445,
	799, 731, 730, 775, 691, 791, 724, 287, 689, 284,
	182, 198, 0, 722, 328, 368, 374, 790, 708, 716,
	222, 714, 372, 342, 430, 206, 249, 365, 347, 370,
	755, 773, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 995, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 703, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 786, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 778, 816, 341, 373, 212, 432, 393, 698,
	702, 696, 697, 750, 751, 699, 807, 808, 809, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 782, 692,
	0, 700, 701, 0, 788, 797, 798, 754, 181, 195,
	290, 812, 362, 252, 459, 439, 435, 678, 695, 228,
	706, 0, 0, 719, 727, 728, 740, 742, 743, 744,
	745, 314, 761, 762, 764, 772, 774, 777, 779, 784,
	794, 815, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 753, 759, 301, 246, 264, 275, 767,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 749,
	776, 297, 410, 411, 271, 801, 787, 409, 0, 735,
	804, 705, 723, 814, 726, 729, 769, 684, 748, 332,
	720, 0, 709, 680, 715, 681, 707, 737, 236, 704,
	789, 752, 803, 288, 233, 686, 710, 346, 725, 187,
	771, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 810, 292, 758, 0, 394,
	317, 0, 0, 0, 739, 793, 746, 783, 734, 770,
	694, 757, 805, 721, 766, 806, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 717, 763, 800, 718, 765, 231, 276, 238, 230,
	413, 811, 792, 0, 0, 202, 802, 741, 0, 768,
	0, 817, 679, 760, 0, 682, 685, 813, 796, 713,
	241, 0, 0, 0, 0, 0, 0, 0, 738, 747,
	780, 732, 0, 0, 0, 0, 0, 2039, 0, 711,
	0, 756, 0, 0, 0, 690, 683, 0, 0, 0,
	0, 736, 0, 0, 0, 693, 0, 712, 781, 0,
	677, 259, 687, 318, 0, 785, 795, 733, 445, 799,
	731, 730, 775, 691, 791, 724, 287, 689, 284, 182,
	198, 0, 722, 328, 368, 374, 790, 708, 716, 222,
	714, 372, 342, 430, 206, 249, 365, 347, 370, 755,
	773, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 995, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 703, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 786, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 778, 816, 341, 373, 212, 432, 393, 698, 702,
	696, 697, 750, 751, 699, 807, 808, 809, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 782, 692, 0,
	700, 701, 0, 788, 797, 798, 754, 181, 195, 290,
	812, 362, 252, 459, 439, 435, 678, 695, 228, 706,
	0, 0, 719, 727, 728, 740, 742, 743, 744, 745,
	314, 761, 762, 764, 772, 774, 777, 779, 784, 794,
	815, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 753, 759, 301, 246, 264, 275, 767, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 749, 776,
	297, 410, 411, 271, 801, 787, 409, 0, 735, 804,
	705, 723, 814, 726, 729, 769, 684, 748, 332, 720,
	0, 709, 680, 715, 681, 707, 737, 236, 704, 789,
	752, 803, 288, 233, 686, 710, 346, 725, 187, 771,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 810, 292, 758, 0, 394, 317,
	0, 0, 0, 739, 793, 746, 783, 734, 770, 694,
	757, 805, 721, 766, 806, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	717, 763, 800, 718, 765, 231, 276, 238, 230, 413,
	811, 792, 0, 0, 202, 802, 741, 0, 768, 0,
	817, 679, 760, 0, 682, 685, 813, 796, 713, 241,
	0, 0, 0, 0, 0, 0, 0, 738, 747, 780,
	732, 0, 0, 0, 0, 0, 1999, 0, 711, 0,
	756, 0, 0, 0, 690, 683, 0, 0, 0, 0,
	736, 0, 0, 0, 693, 0, 712, 781, 0, 677,
	259, 687, 318, 0, 785, 795, 733, 445, 799, 731,
	730, 775, 691, 791, 724, 287, 689, 284, 182, 198,
	0, 722, 328, 368, 374, 790, 708, 716, 222, 714,
	372, 342, 430, 206, 249, 365, 347, 370, 755, 773,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	995, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	703, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 786, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	778, 816, 341, 373, 212, 432, 393, 698, 702, 696,
	697, 750, 751, 699, 807, 808, 809, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 782, 692, 0, 700,
	701, 0, 788, 797, 798, 754, 181, 195, 290, 812,
	362, 252, 459, 439, 435, 678, 695, 228, 706, 0,
	0, 719, 727, 728, 740, 742, 743, 744, 745, 314,
	761, 762, 764, 772, 774, 777, 779, 784, 794, 815,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 753, 759, 301, 246, 264, 275, 767, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 749, 776, 297,
	410, 411, 271, 801, 787, 409, 0, 735, 804, 705,
	723, 814, 726, 729, 769, 684, 748, 332, 720, 0,
	709, 680, 715, 681, 707, 737, 236, 704, 789, 752,
	803, 288, 233, 686, 710, 346, 725, 187, 771, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 810, 292, 758, 0, 394, 317, 0,
	0, 0, 739, 793, 746, 783, 734, 770, 694, 757,
	805, 721, 766, 806, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 717,
	763, 800, 718, 765, 231, 276, 238, 230, 413, 811,
	792, 0, 0, 202, 802, 741, 0, 768, 0, 817,
	679, 760, 0, 682, 685, 813, 796, 713, 241, 0,
	0, 0, 0, 0, 0, 0, 738, 747, 780, 732,
	0, 0, 0, 0, 0, 1560, 0, 711, 0, 756,
	0, 0, 0, 690, 683, 0, 0, 0, 0, 736,
	0, 0, 0, 693, 0, 712, 781, 0, 677, 259,
	687, 318, 0, 785, 795, 733, 445, 799, 731, 730,
	775, 691, 791, 724, 287, 689, 284, 182, 198, 0,
	722, 328, 368, 374, 790, 708, 716, 222, 714, 372,
	342, 430, 206, 249, 365, 347, 370, 755, 773, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 995,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 703,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 786, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 778,
	816, 341, 373, 212, 432, 393, 698, 702, 696, 697,
	750, 751, 699, 807, 808, 809, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 782, 692, 0, 700, 701,
	0, 788, 797, 798, 754, 181, 195, 290, 812, 362,
	252, 459, 439, 435, 678, 695, 228, 706, 0, 0,
	719, 727, 728, 740, 742, 743, 744, 745, 314, 761,
	762, 764, 772, 774, 777, 779, 784, 794, 815, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	753, 759, 301, 246, 264, 275, 767, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 749, 776, 297, 410,
	411, 271, 801, 787, 409, 0, 735, 804, 705, 723,
	814, 726, 729, 769, 684, 748, 332, 720, 0, 709,
	680, 715, 681, 707, 737, 236, 704, 789, 752, 803,
	288, 233, 686, 710, 346, 725, 187, 771, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 810, 292, 758, 0, 394, 317, 0, 0,
	0, 739, 793, 746, 783, 734, 770, 694, 757, 805,
	721, 766, 806, 278, 219, 186, 329, 395, 251, 0,
	81, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 717, 763,
	800, 718, 765, 231, 276, 238, 230, 413, 811, 792,
	0, 0, 202, 802, 741, 0, 768, 0, 817, 679,
	760, 0, 682, 685, 813, 796, 713, 241, 0, 0,
	0, 0, 0, 0, 0, 738, 747, 780, 732, 0,
	0, 0, 0, 0, 0, 0, 711, 0, 756, 0,
	0, 0, 690, 683, 0, 0, 0, 0, 736, 0,
	0, 0, 693, 0, 712, 781, 0, 677, 259, 687,
	318, 0, 785, 795, 733, 445, 799, 731, 730, 775,
	691, 791, 724, 287, 689, 284, 182, 198, 0, 722,
	328, 368, 374, 790, 708, 716, 222, 714, 372, 342,
	430, 206, 249, 365, 347, 370, 755, 773, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 995, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 703, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 786, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 778, 816,
	341, 373, 212, 432, 393, 698, 702, 696, 697, 750,
	751, 699, 807, 808, 809, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 782, 692, 0, 700, 701, 0,
	788, 797, 798, 754, 181, 195, 290, 812, 362, 252,
	459, 439, 435, 678, 695, 228, 706, 0, 0, 719,
	727, 728, 740, 742, 743, 744, 745, 314, 761, 762,
	764, 772, 774, 777, 779, 784, 794, 815, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 753,
	759, 301, 246, 264, 275, 767, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 749, 776, 297, 410, 411,
	271, 801, 787, 409, 0, 735, 804, 705, 723, 814,
	726, 729, 769, 684, 748, 332, 720, 0, 709, 680,
	715, 681, 707, 737, 236, 704, 789, 752, 803, 288,
	233, 686, 710, 346, 725, 187, 771, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 810, 292, 758, 0, 394, 317, 0, 0, 0,
	739, 793, 746, 783, 734, 770, 694, 757, 805, 721,
	766, 806, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 717, 763, 800,
	718, 765, 231, 276, 238, 230, 413, 811, 792, 0,
	0, 202, 802, 741, 0, 768, 0, 817, 679, 760,
	0, 682, 685, 813, 796, 713, 241, 0, 0, 0,
	0, 0, 0, 0, 738, 747, 780, 732, 0, 0,
	0, 0, 0, 0, 0, 711, 0, 756, 0, 0,
	0, 690, 683, 0, 0, 0, 0, 736, 0, 0,
	0, 693, 0, 712, 781, 0, 677, 259, 687, 318,
	0, 785, 795, 733, 445, 799, 731, 730, 775, 691,
	791, 724, 287, 689, 284, 182, 198, 0, 722, 328,
	368, 374, 790, 708, 716, 222, 714, 372, 342, 430,
	206, 249, 365, 347, 370, 755, 773, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 995, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 703, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	786, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 778, 816, 341,
	373, 212, 432, 393, 698, 702, 696, 697, 750, 751,
	699, 807, 808, 809, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 782, 692, 0, 700, 701, 0, 788,
	797, 798, 754, 181, 195, 290, 812, 362, 252, 459,
	439, 435, 678, 695, 228, 706, 0, 0, 719, 727,
	728, 740, 742, 743, 744, 745, 314, 761, 762, 764,
	772, 774, 777, 779, 784, 794, 815, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 753, 759,
	301, 246, 264, 275, 767, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 749, 776, 297, 410, 411, 271,
	801, 787, 409, 0, 735, 804, 705, 723, 814, 726,
	729, 769, 684, 748, 332, 720, 0, 709, 680, 715,
	681, 707, 737, 236, 704, 789, 752, 803, 288, 233,
	686, 710, 346, 725, 187, 771, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	810, 292, 758, 0, 394, 317, 0, 0, 0, 739,
	793, 746, 783, 734, 770, 694, 757, 805, 721, 766,
	806, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 717, 763, 800, 718,
	765, 231, 276, 238, 230, 413, 811, 792, 0, 0,
	818, 802, 741, 0, 768, 0, 817, 679, 760, 0,
	682, 685, 813, 796, 713, 241, 0, 0, 0, 0,
	0, 0, 0, 738, 747, 780, 732, 0, 0, 0,
	0, 0, 0, 0, 711, 0, 756, 0, 0, 0,
	690, 683, 0, 0, 0, 0, 736, 0, 0, 0,
	693, 0, 712, 781, 0, 677, 259, 687, 318, 0,
	785, 795, 733, 445, 799, 731, 730, 775, 691, 791,
	724, 287, 689, 284, 182, 198, 0, 722, 328, 368,
	374, 790, 708, 716, 222, 714, 372, 342, 430, 206,
	249, 365, 347, 370, 755, 773, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 688, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 703, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 786,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 676, 670, 669, 285, 294, 778, 816, 341, 373,
	212, 432, 393, 698, 702, 696, 697, 750, 751, 699,
	807, 808, 809, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 782, 692, 0, 700, 701, 0, 788, 797,
	798, 754, 181, 195, 290, 812, 362, 252, 459, 439,
	435, 678, 695, 228, 706, 0, 0, 719, 727, 728,
	740, 742, 743, 744, 745, 314, 761, 762, 764, 772,
	774, 777, 779, 784, 794, 815, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 753, 759, 301,
	246, 264, 275, 767, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 749, 776, 297, 410, 411, 271, 801,
	787, 409, 0, 735, 804, 705, 723, 814, 726, 729,
	769, 684, 748, 332, 720, 0, 709, 680, 715, 681,
	707, 737, 236, 704, 789, 752, 803, 288, 233, 686,
	710, 346, 725, 187, 771, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 810,
	292, 758, 0, 394, 317, 0, 0, 0, 739, 793,
	746, 783, 734, 770, 694, 757, 805, 721, 766, 806,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 717, 763, 800, 718, 765,
	231, 276, 238, 230, 413, 811, 792, 0, 0, 818,
	802, 741, 0, 768, 0, 817, 679, 760, 0, 682,
	685, 813, 796, 713, 241, 0, 0, 0, 0, 0,
	0, 0, 738, 747, 780, 732, 0, 0, 0, 0,
	0, 0, 0, 711, 0, 756, 0, 0, 0, 690,
	683, 0, 0, 0, 0, 736, 0, 0, 0, 693,
	0, 712, 781, 0, 677, 259, 687, 318, 0, 785,
	795, 733, 445, 799, 731, 730, 775, 691, 791, 724,
	287, 689, 284, 182, 198, 0, 722, 328, 368, 374,
	790, 708, 716, 222, 714, 372, 342, 430, 206, 249,
	365, 347, 370, 755, 773, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 1168,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 688, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 703, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 786, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	676, 670, 669, 285, 294, 778, 816, 341, 373, 212,
	432, 393, 698, 702, 696, 697, 750, 751, 699, 807,
	808, 809, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 782, 692, 0, 700, 701, 0, 788, 797, 798,
	754, 181, 195, 290, 812, 362, 252, 459, 439, 435,
	678, 695, 228, 706, 0, 0, 719, 727, 728, 740,
	742, 743, 744, 745, 314, 761, 762, 764, 772, 774,
	777, 779, 784, 794, 815, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 753, 759, 301, 246,
	264, 275, 767, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 749, 776, 297, 410, 411, 271, 801, 787,
	409, 0, 735, 804, 705, 723, 814, 726, 729, 769,
	684, 748, 332, 720, 0, 709, 680, 715, 681, 707,
	737, 236, 704, 789, 752, 803, 288, 233, 686, 710,
	346, 725, 187, 771, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 810, 292,
	758, 0, 394, 317, 0, 0, 0, 739, 793, 746,
	783, 734, 770, 694, 757, 805, 721, 766, 806, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 717, 763, 800, 718, 765, 231,
	276, 238, 230, 413, 811, 792, 0, 0, 818, 802,
	741, 0, 768, 0, 817, 679, 760, 0, 682, 685,
	813, 796, 713, 241, 0, 0, 0, 0, 0, 0,
	0, 738, 747, 780, 732, 0, 0, 0, 0, 0,
	0, 0, 711, 0, 756, 0, 0, 0, 690, 683,
	0, 0, 0, 0, 736, 0, 0, 0, 693, 0,
	712, 781, 0, 677, 259, 687, 318, 0, 785, 795,
	733, 445, 799, 731, 730, 775, 691, 791, 724, 287,
	689, 284, 182, 198, 0, 722, 328, 368, 374, 790,
	708, 716, 222, 714, 372, 342, 430, 206, 249, 365,
	347, 370, 755, 773, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 667, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 688, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 703, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 786, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 676,
	670, 669, 285, 294, 778, 816, 341, 373, 212, 432,
	393, 698, 702, 696, 697, 750, 751, 699, 807, 808,
	809, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	782, 692, 0, 700, 701, 0, 788, 797, 798, 754,
	181, 195, 290, 812, 362, 252, 459, 439, 435, 678,
	695, 228, 706, 0, 0, 719, 727, 728, 740, 742,
	743, 744, 745, 314, 761, 762, 764, 772, 774, 777,
	779, 784, 794, 815, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 753, 759, 301, 246, 264,
	275, 767, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 749, 776, 297, 410, 411, 271, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 1510, 0, 561, 0, 0, 0, 236, 566,
	0, 0, 0, 288, 233, 0, 1511, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 573, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 568, 569, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 81, 0, 0, 178, 179, 180, 603,
	610, 611, 612, 613, 604, 606, 0, 0, 210, 605,
	217, 582, 608, 614, 615, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 544, 558, 0, 572, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 555, 556, 656, 0, 0,
	0, 588, 0, 557, 0, 0, 565, 616, 618, 617,
	619, 567, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 587, 0, 0, 445, 0,
	0, 585, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 594, 586,
	577, 579, 595, 596, 574, 575, 578, 597, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 589, 564, 563,
	0, 570, 571, 0, 580, 581, 562, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 561, 0, 0, 0, 236,
	566, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 573, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 568, 569, 0,
	0, 0, 0, 0, 0, 1584, 0, 278, 219, 186,
	329, 395, 251, 0, 81, 0, 0, 178, 179, 180,
	603, 610, 611, 612, 613, 604, 606, 0, 0, 210,
	605, 217, 582, 608, 614, 615, 1585, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 544, 558, 0, 572, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 555, 556, 0, 0,
	0, 0, 588, 0, 557, 0, 0, 565, 616, 618,
	617, 619, 567, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 587, 0, 0, 445,
	0, 0, 585, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 594,
	586, 577, 579, 595, 596, 574, 575, 578, 597, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 589, 564,
	563, 0, 570, 571, 0, 580, 581, 562, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 72,
	409, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 561, 0, 0,
	0, 236, 566, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 573, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 568,
	569, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 0, 178,
	179, 180, 603, 610, 611, 612, 613, 604, 606, 0,
	0, 210, 605, 217, 582, 608, 614, 615, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 544, 558, 0, 572,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 555, 556,
	0, 0, 0, 0, 588, 0, 557, 0, 0, 565,
	616, 618, 617, 619, 567, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 587, 0,
	0, 445, 0, 0, 585, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 594, 586, 577, 579, 595, 596, 574, 575, 578,
	597, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	589, 564, 563, 0, 570, 571, 0, 580, 581, 562,
	181, 195, 290, 80, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 561, 0,
	0, 0, 236, 566, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 573,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	568, 569, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 81, 0, 0,
	178, 179, 180, 603, 610, 611, 612, 613, 604, 606,
	0, 0, 210, 605, 217, 582, 608, 614, 615, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 544, 558, 0,
	572, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 555,
	556, 0, 0, 0, 0, 588, 0, 557, 0, 0,
	565, 616, 618, 617, 619, 567, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 587,
	0, 0, 445, 0, 0, 585, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 2380, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 594, 586, 577, 579, 595, 596, 574, 575,
	578, 597, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 589, 564, 563, 0, 570, 571, 0, 580, 581,
	562, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 561,
	0, 0, 0, 236, 566, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	573, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 568, 569, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 81, 0,
	1136, 178, 179, 180, 603, 610, 611, 612, 613, 604,
	606, 0, 0, 210, 605, 217, 582, 608, 614, 615,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 544, 558,
	0, 572, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	555, 556, 0, 0, 0, 0, 588, 0, 557, 0,
	0, 565, 616, 618, 617, 619, 567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	587, 0, 0, 445, 0, 0, 585, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 594, 586, 577, 579, 595, 596, 574,
	575, 578, 597, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 589, 564, 563, 0, 570, 571, 0, 580,
	581, 562, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 0,
	561, 0, 0, 0, 236, 566, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 573, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 568, 569, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 81,
	0, 0, 178, 179, 180, 603, 610, 611, 612, 613,
	604, 606, 0, 0, 210, 605, 217, 582, 608, 614,
	615, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 544,
	558, 0, 572, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 555, 556, 656, 0, 0, 0, 588, 0, 557,
	0, 0, 565, 616, 618, 617, 619, 567, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 587, 0, 0, 445, 0, 0, 585, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 594, 586, 577, 579, 595, 596,
	574, 575, 578, 597, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 589, 564, 563, 0, 570, 571, 0,
	580, 581, 562, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 561, 0, 0, 0, 236, 566, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 573, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 568, 569, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	81, 0, 0, 178, 179, 180, 603, 610, 611, 612,
	613, 604, 606, 0, 0, 210, 605, 217, 582, 608,
	614, 615, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	544, 558, 0, 572, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 555, 556, 0, 0, 0, 0, 588, 0,
	557, 0, 0, 565, 616, 618, 617, 619, 567, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 587, 0, 0, 445, 0, 0, 585, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 594, 586, 577, 579, 595,
	596, 574, 575, 578, 597, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 589, 564, 563, 0, 570, 571,
	0, 580, 581, 562, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 561, 0, 0, 0, 236, 566, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 573, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 568, 569, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 81, 0, 0, 178, 179, 180, 603, 610, 611,
	612, 613, 604, 606, 0, 0, 210, 605, 217, 582,
	608, 614, 615, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 558, 0, 572, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 555, 556, 0, 0, 0, 0, 588,
	0, 557, 0, 0, 565, 616, 618, 617, 619, 567,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 587, 0, 0, 445, 0, 0, 585,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 594, 586, 577, 579,
	595, 596, 574, 575, 578, 597, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 589, 564, 563, 0, 570,
	571, 0, 580, 581, 562, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 863, 445, 0, 0,
	0, 0, 0, 860, 861, 287, 826, 284, 182, 198,
	854, 858, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 1156, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	1158, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 1026,
	0, 1027, 1028, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	1101, 1104, 0, 0, 0, 1100, 1103, 0, 0, 210,
	1099, 217, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 72,
	409, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 81, 0, 1136, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 80, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 72, 409, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 81, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 80, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 0, 0, 1532,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 1327, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 1530, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 826, 284, 182, 198, 824, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 1532, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1327, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 1136, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 2245, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 1780, 0, 0, 1781, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	1179, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 1178, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 2352, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 2245, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 81, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 1327, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 0, 409, 297, 410, 411, 271, 1573,
	0, 0, 0, 0, 0, 0, 332, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 1158, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 0, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1056, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	1418, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 1299, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 1297, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 1295, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	261, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 1293, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	0, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 1291, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 409, 0, 297, 410, 411, 271, 0,
	0, 0, 0, 0, 0, 332, 0, 1287, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 288,
	233, 0, 0, 346, 0, 187, 0, 385, 221, 298,
	295, 416, 247, 239, 235, 220, 272, 304, 344, 403,
	338, 0, 292, 0, 0, 394, 317, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 219, 186, 329, 395, 251, 0, 0,
	0, 0, 178, 179, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 210, 0, 217, 0, 0, 0,
	0, 0, 231, 276, 238, 230, 413, 0, 0, 0,
	0, 202, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 259, 0, 318,
	0, 0, 0, 0, 445, 0, 0, 0, 0, 0,
	0, 0, 287, 0, 284, 182, 198, 0, 0, 328,
	368, 374, 0, 0, 0, 222, 0, 372, 342, 430,
	206, 249, 365, 347, 370, 0, 0, 371, 293, 418,
	360, 428, 446, 447, 229, 322, 436, 407, 442, 458,
	199, 226, 336, 400, 433, 391, 315, 414, 415, 283,
	390, 257, 185, 291, 452, 197, 380, 214, 204, 190,
	402, 426, 211, 383, 0, 0, 460, 192, 424, 399,
	311, 280, 281, 191, 0, 364, 234, 255, 224, 331,
	421, 422, 223, 461, 201, 441, 194, 0, 440, 324,
	417, 425, 312, 303, 193, 423, 310, 302, 286, 245,
	266, 358, 296, 359, 267, 320, 319, 321, 0, 188,
	0, 396, 434, 462, 207, 208, 209, 0, 244, 248,
	254, 256, 262, 263, 270, 289, 335, 357, 355, 361,
	0, 412, 429, 437, 444, 450, 451, 453, 454, 455,
	456, 457, 323, 269, 392, 285, 294, 0, 0, 341,
	373, 212, 432, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 463, 464, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 476, 477, 478,
	479, 480, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 181, 195, 290, 0, 362, 252, 459,
	439, 435, 0, 0, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 184, 196,
	205, 215, 227, 242, 250, 260, 265, 268, 273, 274,
	277, 282, 300, 305, 306, 307, 308, 325, 326, 327,
	330, 333, 334, 337, 339, 340, 343, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	381, 382, 386, 387, 388, 389, 397, 401, 419, 420,
	431, 443, 448, 261, 427, 449, 0, 299, 0, 0,
	301, 246, 264, 275, 0, 438, 398, 200, 369, 253,
	189, 218, 203, 225, 240, 243, 279, 309, 316, 345,
	349, 258, 237, 216, 366, 213, 384, 404, 405, 406,
	408, 313, 232, 348, 409, 0, 297, 410, 411, 271,
	0, 0, 0, 0, 0, 0, 332, 0, 1285, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	288, 233, 0, 0, 346, 0, 187, 0, 385, 221,
	298, 295, 416, 247, 239, 235, 220, 272, 304, 344,
	403, 338, 0, 292, 0, 0, 394, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 219, 186, 329, 395, 251, 0,
	0, 0, 0, 178, 179, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 210, 0, 217, 0, 0,
	0, 0, 0, 231, 276, 238, 230, 413, 0, 0,
	0, 0, 202, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 259, 0,
	318, 0, 0, 0, 0, 445, 0, 0, 0, 0,
	0, 0, 0, 287, 0, 284, 182, 198, 0, 0,
	328, 368, 374, 0, 0, 0, 222, 0, 372, 342,
	430, 206, 249, 365, 347, 370, 0, 0, 371, 293,
	418, 360, 428, 446, 447, 229, 322, 436, 407, 442,
	458, 199, 226, 336, 400, 433, 391, 315, 414, 415,
	283, 390, 257, 185, 291, 452, 197, 380, 214, 204,
	190, 402, 426, 211, 383, 0, 0, 460, 192, 424,
	399, 311, 280, 281, 191, 0, 364, 234, 255, 224,
	331, 421, 422, 223, 461, 201, 441, 194, 0, 440,
	324, 417, 425, 312, 303, 193, 423, 310, 302, 286,
	245, 266, 358, 296, 359, 267, 320, 319, 321, 0,
	188, 0, 396, 434, 462, 207, 208, 209, 0, 244,
	248, 254, 256, 262, 263, 270, 289, 335, 357, 355,
	361, 0, 412, 429, 437, 444, 450, 451, 453, 454,
	455, 456, 457, 323, 269, 392, 285, 294, 0, 0,
	341, 373, 212, 432, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 463, 464, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 476, 477,
	478, 479, 480, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 181, 195, 290, 0, 362, 252,
	459, 439, 435, 0, 0, 228, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 184,
	196, 205, 215, 227, 242, 250, 260, 265, 268, 273,
	274, 277, 282, 300, 305, 306, 307, 308, 325, 326,
	327, 330, 333, 334, 337, 339, 340, 343, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 381, 382, 386, 387, 388, 389, 397, 401, 419,
	420, 431, 443, 448, 261, 427, 449, 0, 299, 0,
	0, 301, 246, 264, 275, 0, 438, 398, 200, 369,
	253, 189, 218, 203, 225, 240, 243, 279, 309, 316,
	345, 349, 258, 237, 216, 366, 213, 384, 404, 405,
	406, 408, 313, 232, 348, 409, 0, 297, 410, 411,
	271, 0, 0, 0, 0, 0, 0, 332, 0, 1283,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 288, 233, 0, 0, 346, 0, 187, 0, 385,
	221, 298, 295, 416, 247, 239, 235, 220, 272, 304,
	344, 403, 338, 0, 292, 0, 0, 394, 317, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 219, 186, 329, 395, 251,
	0, 0, 0, 0, 178, 179, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 210, 0, 217, 0,
	0, 0, 0, 0, 231, 276, 238, 230, 413, 0,
	0, 0, 0, 202, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 259,
	0, 318, 0, 0, 0, 0, 445, 0, 0, 0,
	0, 0, 0, 0, 287, 0, 284, 182, 198, 0,
	0, 328, 368, 374, 0, 0, 0, 222, 0, 372,
	342, 430, 206, 249, 365, 347, 370, 0, 0, 371,
	293, 418, 360, 428, 446, 447, 229, 322, 436, 407,
	442, 458, 199, 226, 336, 400, 433, 391, 315, 414,
	415, 283, 390, 257, 185, 291, 452, 197, 380, 214,
	204, 190, 402, 426, 211, 383, 0, 0, 460, 192,
	424, 399, 311, 280, 281, 191, 0, 364, 234, 255,
	224, 331, 421, 422, 223, 461, 201, 441, 194, 0,
	440, 324, 417, 425, 312, 303, 193, 423, 310, 302,
	286, 245, 266, 358, 296, 359, 267, 320, 319, 321,
	0, 188, 0, 396, 434, 462, 207, 208, 209, 0,
	244, 248, 254, 256, 262, 263, 270, 289, 335, 357,
	355, 361, 0, 412, 429, 437, 444, 450, 451, 453,
	454, 455, 456, 457, 323, 269, 392, 285, 294, 0,
	0, 341, 373, 212, 432, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 463, 464, 465, 466,
	467, 468, 469, 470, 471, 472, 473, 474, 475, 476,
	477, 478, 479, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 195, 290, 0, 362,
	252, 459, 439, 435, 0, 0, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	184, 196, 205, 215, 227, 242, 250, 260, 265, 268,
	273, 274, 277, 282, 300, 305, 306, 307, 308, 325,
	326, 327, 330, 333, 334, 337, 339, 340, 343, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 381, 382, 386, 387, 388, 389, 397, 401,
	419, 420, 431, 443, 448, 261, 427, 449, 0, 299,
	0, 0, 301, 246, 264, 275, 0, 438, 398, 200,
	369, 253, 189, 218, 203, 225, 240, 243, 279, 309,
	316, 345, 349, 258, 237, 216, 366, 213, 384, 404,
	405, 406, 408, 313, 232, 348, 409, 0, 297, 410,
	411, 271, 0, 0, 0, 0, 0, 0, 332, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 288, 233, 0, 0, 346, 0, 187, 0,
	385, 221, 298, 295, 416, 247, 239, 235, 220, 272,
	304, 344, 403, 338, 0, 292, 0, 0, 394, 317,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 219, 186, 329, 395,
	251, 0, 1260, 0, 0, 178, 179, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 210, 0, 217,
	0, 0, 0, 0, 0, 231, 276, 238, 230, 413,
	0, 0, 0, 0, 202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	259, 0, 318, 0, 0, 0, 0, 445, 0, 0,
	0, 0, 0, 0, 0, 287, 0, 284, 182, 198,
	0, 0, 328, 368, 374, 0, 0, 0, 222, 0,
	372, 342, 430, 206, 249, 365, 347, 370, 0, 0,
	371, 293, 418, 360, 428, 446, 447, 229, 322, 436,
	407, 442, 458, 199, 226, 336, 400, 433, 391, 315,
	414, 415, 283, 390, 257, 185, 291, 452, 197, 380,
	214, 204, 190, 402, 426, 211, 383, 0, 0, 460,
	192, 424, 399, 311, 280, 281, 191, 0, 364, 234,
	255, 224, 331, 421, 422, 223, 461, 201, 441, 194,
	0, 440, 324, 417, 425, 312, 303, 193, 423, 310,
	302, 286, 245, 266, 358, 296, 359, 267, 320, 319,
	321, 0, 188, 0, 396, 434, 462, 207, 208, 209,
	0, 244, 248, 254, 256, 262, 263, 270, 289, 335,
	357, 355, 361, 0, 412, 429, 437, 444, 450, 451,
	453, 454, 455, 456, 457, 323, 269, 392, 285, 294,
	0, 0, 341, 373, 212, 432, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 463, 464, 465,
	466, 467, 468, 469, 470, 471, 472, 473, 474, 475,
	476, 477, 478, 479, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 181, 195, 290, 0,
	362, 252, 459, 439, 435, 0, 0, 228, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 184, 196, 205, 215, 227, 242, 250, 260, 265,
	268, 273, 274, 277, 282, 300, 305, 306, 307, 308,
	325, 326, 327, 330, 333, 334, 337, 339, 340, 343,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 381, 382, 386, 387, 388, 389, 397,
	401, 419, 420, 431, 443, 448, 261, 427, 449, 0,
	299, 0, 0, 301, 246, 264, 275, 0, 438, 398,
	200, 369, 253, 189, 218, 203, 225, 240, 243, 279,
	309, 316, 345, 349, 258, 237, 216, 366, 213, 384,
	404, 405, 406, 408, 313, 232, 348, 409, 0, 297,
	410, 411, 271, 0, 0, 0, 0, 0, 0, 332,
	0, 0, 0, 0, 0, 0, 0, 1163, 236, 0,
	0, 0, 0, 288, 233, 0, 0, 346, 0, 187,
	0, 385, 221, 298, 295, 416, 247, 239, 235, 220,
	272, 304, 344, 403, 338, 0, 292, 0, 0, 394,
	317, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 219, 186, 329,
	395, 251, 0, 0, 0, 0, 178, 179, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 210, 0,
	217, 0, 0, 0, 0, 0, 231, 276, 238, 230,
	413, 0, 0, 0, 0, 202, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 259, 0, 318, 0, 0, 0, 0, 445, 0,
	0, 0, 0, 0, 0, 0, 287, 0, 284, 182,
	198, 0, 0, 328, 368, 374, 0, 0, 0, 222,
	0, 372, 342, 430, 206, 249, 365, 347, 370, 0,
	0, 371, 293, 418, 360, 428, 446, 447, 229, 322,
	436, 407, 442, 458, 199, 226, 336, 400, 433, 391,
	315, 414, 415, 283, 390, 257, 185, 291, 452, 197,
	380, 214, 204, 190, 402, 426, 211, 383, 0, 0,
	460, 192, 424, 399, 311, 280, 281, 191, 0, 364,
	234, 255, 224, 331, 421, 422, 223, 461, 201, 441,
	194, 0, 440, 324, 417, 425, 312, 303, 193, 423,
	310, 302, 286, 245, 266, 358, 296, 359, 267, 320,
	319, 321, 0, 188, 0, 396, 434, 462, 207, 208,
	209, 0, 244, 248, 254, 256, 262, 263, 270, 289,
	335, 357, 355, 361, 0, 412, 429, 437, 444, 450,
	451, 453, 454, 455, 456, 457, 323, 269, 392, 285,
	294, 0, 0, 341, 373, 212, 432, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 463, 464,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 476, 477, 478, 479, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 181, 195, 290,
	0, 362, 252, 459, 439, 435, 0, 0, 228, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 184, 196, 205, 215, 227, 242, 250, 260,
	265, 268, 273, 274, 277, 282, 300, 305, 306, 307,
	308, 325, 326, 327, 330, 333, 334, 337, 339, 340,
	343, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 381, 382, 386, 387, 388, 389,
	397, 401, 419, 420, 431, 443, 448, 261, 427, 449,
	0, 299, 0, 0, 301, 246, 264, 275, 0, 438,
	398, 200, 369, 253, 189, 218, 203, 225, 240, 243,
	279, 309, 316, 345, 349, 258, 237, 216, 366, 213,
	384, 404, 405, 406, 408, 313, 232, 348, 409, 0,
	297, 410, 411, 271, 0, 0, 0, 0, 0, 0,
	332, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 288, 233, 0, 0, 346, 0,
	187, 0, 385, 221, 298, 295, 416, 247, 239, 235,
	220, 272, 304, 344, 403, 338, 0, 292, 0, 0,
	394, 317, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 219, 186,
	329, 395, 251, 0, 0, 0, 0, 178, 179, 180,
	0, 1003, 0, 0, 0, 0, 0, 0, 0, 210,
	0, 217, 0, 0, 0, 0, 0, 231, 276, 238,
	230, 413, 0, 0, 0, 0, 202, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 259, 0, 318, 0, 0, 0, 0, 445,
	0, 0, 0, 0, 0, 0, 0, 287, 0, 284,
	182, 198, 0, 0, 328, 368, 374, 0, 0, 0,
	222, 0, 372, 342, 430, 206, 249, 365, 347, 370,
	0, 0, 371, 293, 418, 360, 428, 446, 447, 229,
	322, 436, 407, 442, 458, 199, 226, 336, 400, 433,
	391, 315, 414, 415, 283, 390, 257, 185, 291, 452,
	197, 380, 214, 204, 190, 402, 426, 211, 383, 0,
	0, 460, 192, 424, 399, 311, 280, 281, 191, 0,
	364, 234, 255, 224, 331, 421, 422, 223, 461, 201,
	441, 194, 0, 440, 324, 417, 425, 312, 303, 193,
	423, 310, 302, 286, 245, 266, 358, 296, 359, 267,
	320, 319, 321, 0, 188, 0, 396, 434, 462, 207,
	208, 209, 0, 244, 248, 254, 256, 262, 263, 270,
	289, 335, 357, 355, 361, 0, 412, 429, 437, 444,
	450, 451, 453, 454, 455, 456, 457, 323, 269, 392,
	285, 294, 0, 0, 341, 373, 212, 432, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 463,
	464, 465, 466, 467, 468, 469, 470, 471, 472, 473,
	474, 475, 476, 477, 478, 479, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 195,
	290, 0, 362, 252, 459, 439, 435, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 184, 196, 205, 215, 227, 242, 250,
	260, 265, 268, 273, 274, 277, 282, 300, 305, 306,
	307, 308, 325, 326, 327, 330, 333, 334, 337, 339,
	340, 343, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 381, 382, 386, 387, 388,
	389, 397, 401, 419, 420, 431, 443, 448, 261, 427,
	449, 0, 299, 0, 0, 301, 246, 264, 275, 0,
	438, 398, 200, 369, 253, 189, 218, 203, 225, 240,
	243, 279, 309, 316, 345, 349, 258, 237, 216, 366,
	213, 384, 404, 405, 406, 408, 313, 232, 348, 409,
	0, 297, 410, 411, 271, 0, 0, 0, 0, 0,
	0, 332, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 288, 233, 0, 0, 346,
	0, 187, 0, 385, 221, 298, 295, 416, 247, 239,
	235, 220, 272, 304, 344, 403, 338, 0, 292, 0,
	0, 394, 317, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 219,
	186, 329, 395, 251, 0, 0, 0, 0, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	210, 0, 217, 0, 0, 0, 0, 0, 231, 276,
	238, 230, 413, 0, 0, 0, 0, 202, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 259, 0, 318, 0, 0, 0, 0,
	445, 0, 0, 0, 0, 0, 0, 0, 287, 0,
	284, 182, 198, 0, 0, 328, 368, 374, 0, 0,
	0, 222, 0, 372, 342, 430, 206, 249, 365, 347,
	370, 0, 0, 371, 293, 418, 360, 428, 446, 447,
	229, 322, 436, 407, 442, 458, 199, 226, 336, 400,
	433, 391, 315, 414, 415, 283, 390, 257, 185, 291,
	452, 197, 380, 214, 204, 190, 402, 426, 211, 383,
	0, 0, 460, 192, 424, 399, 311, 280, 281, 191,
	0, 364, 234, 255, 224, 331, 421, 422, 223, 461,
	201, 441, 194, 0, 440, 324, 417, 425, 312, 303,
	193, 423, 310, 302, 286, 245, 266, 358, 296, 359,
	267, 320, 319, 321, 0, 188, 0, 396, 434, 462,
	207, 208, 209, 0, 244, 248, 254, 256, 262, 263,
	270, 289, 335, 357, 355, 361, 0, 412, 429, 437,
	444, 450, 451, 453, 454, 455, 456, 457, 323, 269,
	392, 285, 294, 0, 0, 341, 373, 212, 432, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 181,
	195, 290, 0, 362, 252, 459, 439, 435, 0, 0,
	228, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 314, 0, 0, 0, 0, 0, 0, 638,
	0, 0, 0, 183, 184, 196, 205, 215, 227, 242,
	250, 260, 265, 268, 273, 274, 277, 282, 300, 305,
	306, 307, 308, 325, 326, 327, 330, 333, 334, 337,
	339, 340, 343, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 381, 382, 386, 387,
	388, 389, 397, 401, 419, 420, 431, 443, 448, 261,
	427, 449, 0, 299, 0, 0, 301, 246, 264, 275,
	0, 438, 398, 200, 369, 253, 189, 218, 203, 225,
	240, 243, 279, 309, 316, 345, 349, 258, 237, 216,
	366, 213, 384, 404, 405, 406, 408, 313, 232, 348,
	409, 0, 297, 410, 411, 271, 0, 0, 0, 0,
	0, 0, 332, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 288, 233, 0, 0,
	346, 0, 187, 0, 385, 221, 298, 295, 416, 247,
	239, 235, 220, 272, 304, 344, 403, 338, 0, 292,
	0, 0, 394, 317, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	219, 186, 329, 395, 251, 0, 0, 0, 0, 178,
	179, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 210, 0, 217, 0, 0, 0, 0, 0, 231,
	276, 238, 230, 413, 0, 0, 0, 0, 202, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 536, 0, 259, 0, 318, 0, 0, 0,
	0, 445, 0, 0, 0, 0, 0, 0, 0, 287,
	0, 284, 182, 198, 0, 0, 328, 368, 374, 0,
	0, 0, 222, 0, 372, 342, 430, 206, 249, 365,
	347, 370, 0, 0, 371, 293, 418, 360, 428, 446,
	447, 229, 322, 436, 407, 442, 458, 199, 226, 336,
	400, 433, 391, 315, 414, 415, 283, 390, 257, 185,
	291, 452, 197, 380, 214, 204, 190, 402, 426, 211,
	383, 0, 0, 460, 192, 424, 399, 311, 280, 281,
	191, 0, 364, 234, 255, 224, 331, 421, 422, 223,
	461, 201, 441, 194, 0, 440, 324, 417, 425, 312,
	303, 193, 423, 310, 302, 286, 245, 266, 358, 296,
	359, 267, 320, 319, 321, 0, 188, 0, 396, 434,
	462, 207, 208, 209, 0, 244, 248, 254, 256, 262,
	263, 270, 289, 335, 357, 355, 361, 0, 412, 429,
	437, 444, 450, 451, 453, 454, 455, 456, 457, 323,
	269, 392, 285, 294, 0, 0, 341, 373, 212, 432,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 463, 464, 465, 466, 467, 468, 469, 470, 471,
	472, 473, 474, 475, 476, 477, 478, 479, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	181, 195, 290, 0, 362, 252, 459, 439, 435, 0,
	0, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 184, 196, 205, 215, 227,
	242, 250, 260, 265, 268, 273, 274, 277, 282, 300,
	305, 306, 307, 308, 325, 326, 327, 330, 333, 334,
	337, 339, 340, 343, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 381, 382, 386,
	387, 388, 389, 397, 401, 419, 420, 431, 443, 448,
	535, 427, 449, 0, 299, 0, 0, 301, 246, 264,
	275, 0, 438, 398, 200, 369, 253, 189, 218, 203,
	225, 240, 243, 279, 309, 316, 345, 349, 258, 237,
	216, 366, 213, 384, 404, 405, 406, 408, 313, 232,
	348, 409, 0, 297, 410, 411, 271, 0, 0, 0,
	0, 0, 0, 332, 0, 0, 0, 0, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 288, 233, 0,
	0, 346, 0, 187, 0, 385, 221, 298, 295, 416,
	247, 239, 235, 220, 272, 304, 344, 403, 338, 0,
	292, 0, 0, 394, 317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 219, 186, 329, 395, 251, 0, 0, 0, 0,
	178, 179, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 210, 0, 217, 0, 0, 0, 0, 0,
	231, 276, 238, 230, 413, 0, 0, 0, 0, 202,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 259, 0, 318, 0, 0,
	483, 0, 445, 0, 0, 0, 0, 0, 0, 0,
	287, 0, 284, 182, 198, 0, 0, 328, 368, 374,
	0, 0, 0, 222, 0, 372, 342, 430, 206, 249,
	365, 347, 370, 0, 0, 371, 293, 418, 360, 428,
	446, 447, 229, 322, 436, 407, 442, 458, 199, 226,
	336, 400, 433, 391, 315, 414, 415, 283, 390, 257,
	185, 291, 452, 197, 380, 214, 204, 190, 402, 426,
	211, 383, 0, 0, 460, 192, 424, 399, 311, 280,
	281, 191, 0, 364, 234, 255, 224, 331, 421, 422,
	223, 461, 201, 441, 194, 0, 440, 324, 417, 425,
	312, 303, 193, 423, 310, 302, 286, 245, 266, 358,
	296, 359, 267, 320, 319, 321, 0, 188, 0, 396,
	434, 462, 207, 208, 209, 0, 244, 248, 254, 256,
	262, 263, 270, 289, 335, 357, 355, 361, 0, 412,
	429, 437, 444, 450, 451, 453, 454, 455, 456, 457,
	323, 269, 392, 285, 294, 0, 0, 341, 373, 212,
	432, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 463, 464, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 476, 477, 478, 479, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 181, 195, 290, 0, 362, 252, 459, 439, 435,
	0, 0, 228, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 184, 196, 205, 215,
	227, 242, 250, 260, 265, 268, 273, 274, 277, 282,
	300, 305, 306, 307, 308, 325, 326, 327, 330, 333,
	334, 337, 339, 340, 343, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 381, 382,
	386, 387, 388, 389, 397, 401, 419, 420, 431, 443,
	448, 261, 427, 449, 0, 299, 0, 0, 301, 246,
	264, 275, 0, 438, 398, 200, 369, 253, 189, 218,
	203, 225, 240, 243, 279, 309, 316, 345, 349, 258,
	237, 216, 366, 213, 384, 404, 405, 406, 408, 313,
	232, 348, 409, 0, 297, 410, 411, 271, 0, 0,
	0, 0, 0, 0, 332, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 288, 233,
	0, 0, 346, 0, 187, 0, 385, 221, 298, 295,
	416, 247, 239, 235, 220, 272, 304, 344, 403, 338,
	0, 292, 0, 0, 394, 317, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 219, 186, 329, 395, 251, 0, 0, 0,
	0, 178, 179, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 210, 0, 217, 0, 0, 0, 0,
	0, 231, 276, 238, 230, 413, 0, 0, 0, 0,
	202, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 259, 0, 318, 0,
	0, 0, 0, 445, 0, 0, 0, 0, 0, 0,
	0, 287, 0, 284, 182, 198, 0, 0, 328, 368,
	374, 0, 0, 0, 222, 0, 372, 342, 430, 206,
	249, 365, 347, 370, 0, 0, 371, 293, 418, 360,
	428, 446, 447, 229, 322, 436, 407, 442, 458, 199,
	226, 336, 400, 433, 391, 315, 414, 415, 283, 390,
	257, 185, 291, 452, 197, 380, 214, 204, 190, 402,
	426, 211, 383, 0, 0, 460, 192, 424, 399, 311,
	280, 281, 191, 0, 364, 234, 255, 224, 331, 421,
	422, 223, 461, 201, 441, 194, 0, 440, 324, 417,
	425, 312, 303, 193, 423, 310, 302, 286, 245, 266,
	358, 296, 359, 267, 320, 319, 321, 0, 188, 0,
	396, 434, 462, 207, 208, 209, 0, 244, 248, 254,
	256, 262, 263, 270, 289, 335, 357, 355, 361, 0,
	412, 429, 437, 444, 450, 451, 453, 454, 455, 456,
	457, 323, 269, 392, 285, 294, 0, 0, 341, 373,
	212, 432, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 463, 464, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 476, 477, 478, 479,
	480, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 181, 195, 290, 0, 362, 252, 459, 439,
	435, 0, 0, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 184, 196, 205,
	215, 227, 242, 250, 260, 265, 268, 273, 274, 277,
	282, 300, 305, 306, 307, 308, 325, 326, 327, 330,
	333, 334, 337, 339, 340, 343, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 381,
	382, 386, 387, 388, 389, 397, 401, 419, 420, 431,
	443, 448, 261, 427, 449, 0, 299, 0, 0, 301,
	246, 264, 275, 0, 438, 398, 200, 369, 253, 189,
	218, 203, 225, 240, 243, 279, 309, 316, 345, 349,
	258, 237, 216, 366, 213, 384, 404, 405, 406, 408,
	313, 232, 348, 0, 0, 297, 410, 411, 271,
}

var yyPact = [...]int{
	2700, -1000, -335, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1721, 1748, -1000, -1000, -1000, -1000, 1840,
	-1000, 692, 1483, -1000, 1731, 2509, -1000, 30575, 521, -1000,
	30074, 520, 90, 30575, -1000, 185, -1000, 140, 30575, 177,
	29573, -1000, -1000, -248, 13037, 1683, 59, 50, 30575, -1000,
	1823, 1495, -1000, 261, -1000, -1000, -1000, -1000, -1000, -1000,
	29072, -1000, -1000, -1000, 1736, 1718, 1844, 616, 1674, -1000,
	1770, 1495, -1000, 13037, 1803, 1760, 12536, -1000, 12536, 456,
	-1000, -1000, 9523, -1000, -1000, 17047, 30575, 30575, 372, -1000,
	1731, -1000, -1000, 307, -1000, 350, 1438, -1000, 1437, -1000,
	595, 455, 380, 421, 410, 370, 367, 364, 357, 355,
	354, 353, 352, 375, -1000, 657, 657, -146, -152, 326,
	434, 434, 434, 481, 1701, 1698, -1000, 617, -1000, 657,
	657, 283, 657, 657, 657, 657, 286, 284, 657, 657,
	657, 657, 657, 657, 657, 657, 657, 657, 657, 657,
	657, 657, 657, 338, 1731, 277, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30575, 189, 30575, -1000, 581, 30575, 817, 817, 80,
	817, 817, 817, 817, 163, 571, 48, -1000, 162, 264,
	151, 274, 754, 193, 125, -1000, -1000, 267, 754, 1180,
	635, 143, -1000, 817, 7487, 7487, 7487, -1000, 1717, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 478, -1000, -1000,
	-1000, -1000, 30575, 28571, 348, 701, -1000, -1000, -1000, 47,
	-1000, -1000, 1319, 839, 13037, 909, -1000, 2349, 585, -1000,
	-1000, -1000, -1000, -1000, 537, 13538, 13538, 13538, 13538, -1000,
	-1000, 1449, 1449, 1449, 1449, 13538, 1449, 13538, 1449, 1449,
	1449, 1449, 13037, 1449, 1449, 1449, -1000, 1449, 1449, 1449,
	1449, 1449, 1449, 1449, 580, 1449, 1449, 1449, 1449, 1449,
	-1000, -1000, -1000, -1000, 1449, 1449, 1449, 1449, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 15041, -1000, 11033,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30575, -1000, 1449, 195, 1770, 1495, -1000, 1823, 1780,
	261, -1000, 1891, 1399, 1417, 1214, 1495, 1420, 30575, -1000,
	1461, -1000, -1000, -1000, 1592, 1151, 1179, -1000, -1000, -1000,
	-1000, 1106, 13037, -1000, -1000, 1836, -1000, 14540, 577, 869,
	1835, 28070, -1000, 456, 456, 1428, 9014, -19, -1000, -1000,
	-1000, 666, 19051, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1717, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1392,
	30575, -1000, -1000, 3133, 1168, -1000, 1478, -1000, 1390, -1000,
	1464, 1489, 519, 1168, 506, 503, 498, -1000, -58, -1000,
	-1000, -1000, -1000, -1000, 657, 657, 362, 2509, 4755, -1000,
	-1000, -1000, 27569, 1476, 1168, -1000, 1474, -1000, 810, 499,
	517, 517, 1168, -1000, -1000, 30575, 1168, 808, 794, 30575,
	30575, -1000, 27068, -1000, 26567, 26066, 1088, 30575, 25565, 25064,
	24563, 24062, 23561, -1000, 1550, -1000, 1484, -1000, -1000, -1000,
	30575, 30575, 30575, 288, -1000, -1000, 30575, 1168, -1000, -1000,
	1086, 1082, 657, 657, 1077, 1175, 1170, 1167, 657, 657,
	1073, 1160, 21055, 313, 1051, 1047, 1045, 1102, 1156, 192,
	1080, 1050, 1042, 30575, 1473, 30575, -1000, 258, 678, 342,
	660, 1731, 1681, 1426, 473, 516, 1168, 437, 437, -1000,
	7996, -1000, -1000, 1152, 13037, -1000, 755, 754, 754, -1000,
	-1000, -1000, -1000, -1000, -1000, 817, 30575, 755, -1000, -1000,
	-1000, 754, 817, 30575, 817, 817, 817, 817, 754, 754,
	754, 817, 30575, 30575, 30575, 30575, 30575, 30575, 30575, 30575,
	30575, 7487, 7487, 7487, 635, 817, -252, -1000, 1149, -1000,
	1557, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 171,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -41,
	1423, 23060, -1000, -254, -255, -256, -257, -1000, -1000, -1000,
	-260, -267, -1000, -1000, -1000, 13037, 13037, 13037, 13037, -1000,
	840, 13538, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1022,
	668, 13538, 13538, 13538, 13538, 13538, 13538, 13538, 13538, 13538,
	13538, 13538, 13538, 13538, 13538, 13538, 716, 1148, 1146, 585,
	585, 585, 585, -1000, 12536, 13037, 13037, 585, -1000, 1168,
	22559, 12536, 12536, 13037, 1707, 714, 839, 30575, -1000, 1214,
	-1000, -1000, -1000, 931, -1000, 30575, 30575, 91, 10030, 7996,
	12536, 12536, 12536, 12536, 12536, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 576, 1271, 1252, 1386,
	-1000, 1422, -1000, -116, 16546, 13037, 1140, -1000, -1000, -1000,
	1770, -1000, 1770, 1271, 1696, 1595, 12536, -1000, -1000, 1696,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1270, -1000,
	30575, 1420, 1757, 30575, 1588, 1130, 288, -1000, 13037, 13037,
	1419, -1000, 914, 30575, -1000, -1000, 22058, -1000, -1000, 6978,
	-1000, 30575, 343, 30575, -1000, 20554, 21557, 8505, -19, -1000,
	8505, 1401, -1000, 23, -6, 10531, 592, -1000, -1000, -1000,
	326, 14039, 1275, 1689, 92, -1000, -1000, -1000, 1464, -1000,
	1464, 1464, 1464, 1464, 288, 288, 288, 288, -1000, -1000,
	-1000, -1000, -1000, 1472, 1471, -1000, 1464, 1464, 1464, 1464,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1470, 1470, 1470,
	1465, 1465, 424, -1000, 13037, 248, 30575, 1745, 1040, 258,
	440, 1511, 1168, 1168, 1168, 440, -1000, 1176, 1136, -1000,
	1413, -1000, -1000, 1801, -1000, -1000, 667, 849, 842, 549,
	30575, 202, 332, -1000, 409, -1000, 30575, 1168, 793, 517,
	1168, -1000, 1168, -1000, -1000, -1000, -1000, -1000, 1168, 1412,
	-1000, 1339, 861, 841, 845, 764, 1412, -1000, -1000, -81,
	1412, -1000, 1412, -1000, 1412, -1000, 1412, -1000, 1412, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 669, 30575, 202,
	716, -1000, 467, -1000, -1000, 716, 716, -1000, -1000, -1000,
	-1000, 1127, 1126, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-314, 30575, -1000, 241, 659, 302, 359, 331, 30575, 298,
	1763, 262, 281, 30575, 30575, 437, 1556, 30575, 1744, 30575,
	-1000, -1000, -1000, -1000, 839, 30575, -1000, -1000, 817, 817,
	-1000, -1000, 30575, 817, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 817, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	30575, 30575, -1000, -1000, -1000, -1000, -1000, 109, 21, 236,
	-1000, -1000, -1000, -1000, -1000, 1767, -1000, 839, 735, 727,
	-1000, -1000, -1000, 926, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1022, 13538, 13538, 13538, 1966, 445, 757, 1527, 771,
	739, 739, 784, 784, 602, 602, 602, 602, 602, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1372, -1000, 1014, 985,
	1214, -1000, 1372, 1372, 1054, 12536, -1000, -1000, 765, -1000,
	13037, 1214, -1000, -1000, 1214, 1410, 1403, 1834, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1214,
	12536, 12536, 1402, 1449, 573, -1000, 1372, 1214, 1214, 1372,
	1372, 7996, 1214, -1000, 30575, -1000, -245, -1000, -18, 557,
	1449, -1000, 21055, 1214, 1319, -1000, -1000, -1000, -1000, -1000,
	18550, 1394, 1696, -1000, -1000, 1449, 1383, -1000, -1000, 288,
	76, 774, 839, 839, 13037, -1000, -1000, -1000, -1000, -1000,
	-1000, 567, 1825, 292, 1449, -1000, 1453, 1528, -1000, -1000,
	-1000, 1756, 16045, 30575, 1385, 1341, -1000, 563, -1000, 1401,
	-19, 14, -1000, -1000, -1000, -1000, 839, -1000, 1114, 345,
	1121, -1000, 415, -1000, -1000, -1000, -1000, 1311, 1754, 1687,
	82, -1000, -1000, -1000, 288, 288, -1000, -1000, -1000, -1000,
	-1000, -1000, 1120, 1120, -1000, -1000, -1000, -1000, -1000, 1035,
	-1000, -1000, -1000, 1024, -1000, -1000, 1074, 1541, 248, -1000,
	-1000, 657, 1118, 1691, 30575, -1000, -1000, 1248, 241, 30575,
	719, 1555, -1000, 1511, 1511, 1511, 30575, -1000, -1000, -1000,
	-1000, 4389, 30575, 1380, -1000, 199, -1000, 1237, 30575, -1000,
	1378, 1468, 1168, 1168, -1000, -1000, -1000, 30575, 1449, -1000,
	-1000, -1000, -1000, 500, 1727, 1726, 202, 199, 592, 1168,
	-1000, -1000, -1000, -1000, -1000, -313, 1374, 486, 233, 229,
	30575, 30575, 30575, 30575, 30575, 547, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 279, 464, -1000, 30575, 30575, 529,
	-1000, -1000, -1000, 754, -1000, -1000, 754, -1000, -1000, -1000,
	-1000, -1000, 1708, 30575, 19, -285, -1000, -282, -1000, -1000,
	-1000, -1000, 1199, 442, 757, 13538, 13538, 12536, -71, 454,
	454, 716, -1000, -1000, -1000, 13037, 13037, 1368, 670, -1000,
	13037, 718, -1000, -1000, 13037, 13037, 13037, -1000, 1372, 1372,
	12536, 7996, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 494, 492, 491, 30575, -1000, -1000, 1771, -1000,
	1627, 1610, 1833, 1825, -1000, 20554, 1696, -1000, -1000, 30575,
	-239, -1000, 1675, 1644, -1000, -1000, -1000, -1000, 6469, 1770,
	13037, 1551, 30575, 1449, -1000, 15543, 30575, 30575, 20554, 20554,
	20554, 20554, 20554, -1000, 1580, 1577, -1000, 1570, 1568, 1617,
	30575, -1000, 1370, 1214, 1780, 16045, 17548, 1397, 20554, -1000,
	-1000, 20554, 30575, 5960, -1000, -1000, -2, -11, -1000, -1000,
	-1000, -1000, 1800, 326, -1000, -1000, -1000, -1000, 892, 3448,
	1843, -1000, 1117, -1000, 1065, -1000, 752, 749, -1000, 30575,
	1467, -1000, -1000, -1000, -1000, -1000, 1365, -1000, 1357, 1395,
	1345, 113, -1000, 1458, 1706, 657, 657, -1000, 1016, -1000,
	1168, -1000, -1000, 483, -1000, 1741, 30575, 1546, 1544, 1529,
	-1000, 1791, 1355, 30575, -1000, -1000, 30575, -1000, 1603, 248,
	30575, -1000, -1000, -1000, 332, 30575, -1000, 1425, 199, -1000,
	-1000, -1000, -1000, -1000, -1000, 30575, 245, -1000, 1466, 1193,
	-1000, 1493, -1000, -1000, -1000, -1000, 170, 285, -1000, 30575,
	508, 1541, 30575, -1000, -1000, -1000, 817, 817, -1000, -1000,
	1704, -1000, 1168, 13538, 13538, -1000, 585, -1000, 1449, 1214,
	1464, 1464, -1000, 1464, 1465, -1000, 1464, 167, 1464, 149,
	1214, 1214, 998, 942, -65, -1000, 839, 13037, 929, 828,
	992, -1000, -1000, 1214, -1000, 1449, 1449, 1449, 1295, 30575,
	-1000, -1000, -1000, -1000, 1825, 1816, 1363, -1000, -1000, 76,
	333, -1000, 1660, 1644, -1000, 1788, 1668, 1786, -1000, -1000,
	-1000, 839, -1000, 1722, 1406, -1000, 652, 1302, -1000, -1000,
	12035, 1316, 1601, 561, 1295, 1349, 1528, 1501, 1526, 1636,
	-1000, -1000, -1000, -1000, 1569, -1000, 1537, -1000, -1000, 1461,
	-1000, -1000, 1252, 343, 20554, 1307, 1307, -1000, 559, -1000,
	-1000, -1000, -1000, -326, -1000, -1000, 13037, -1000, -1000, -1000,
	-1000, -1000, -1000, 980, 980, 134, -1000, -1000, -1000, -1000,
	-1000, 1463, 13037, 288, 1109, 288, 963, -1000, 919, -1000,
	-1000, -188, -1000, -1000, 1459, 1540, -1000, -1000, 30575, -1000,
	-1000, 30575, 30575, 30575, 30575, -1000, -1000, 299, -1000, 1273,
	1254, -1000, -136, -1000, 13037, -1000, 1461, -1000, -1000, -1000,
	1233, -1000, -117, 30575, 30575, 30575, 30575, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 585, 13538, -1000, -1000,
	378, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13037,
	-1000, 13037, -1000, 1770, 1107, 839, 13037, 13037, -1000, -1000,
	18049, 20053, 20053, 17548, -1000, 1816, 1810, 1785, 1637, 1662,
	1662, 1660, -1000, 1784, 1778, -1000, 1101, 1775, 1096, 748,
	-1000, 30575, 13037, 1449, -1000, 294, 30575, 1449, 30575, -1000,
	1781, -1000, -1000, 13037, 1462, -1000, 13037, -1000, -1000, -1000,
	-1000, -1000, 1825, 1307, -1000, -1000, 609, 57, 295, -1000,
	-1000, -1000, 992, -1000, -1000, -1000, 30575, 1062, -1000, -1000,
	-1000, 1225, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1461, -1000, -1000, -1000, 1355, 306, 399, -1000, 332,
	-1000, -153, -154, 992, 1751, -1000, -1000, 7996, -1000, -1000,
	1460, 1502, -1000, 191, -1000, -1000, 992, 992, 1214, -1000,
	992, 992, 1247, -1000, -1000, -1000, 1247, 1247, 557, 1810,
	-1000, 13037, 13037, 1635, 898, -1000, -1000, -1000, -1000, 1095,
	994, -1000, 962, -1000, 1842, -1000, 839, -1000, 1449, -1000,
	548, 1302, -1000, 1770, 839, 30575, 839, 1781, -1000, 1452,
	1431, -319, 13037, 1451, -1000, 1245, -1000, -1000, -1000, 1750,
	1449, -1000, -1000, -1000, -1000, -1000, 261, 1326, -1000, 650,
	30575, 30575, 1214, 234, -120, -1000, -1000, -1000, -1000, -1000,
	19552, -1000, -1000, -1000, -1000, -1000, 839, 1319, -1000, 864,
	-1000, -1000, -1000, -1000, -1000, 30575, 1302, 30575, -1000, 1243,
	1770, 13037, 1448, 646, -325, 915, 1039, 30575, 1517, 653,
	261, 11534, -100, 7996, 5451, 1240, -1000, -1000, 1586, -78,
	-133, -1000, -1000, -1000, -1000, 1200, -1000, -1000, -1000, 1027,
	30575, 913, 1443, 1772, -1000, -1000, 1229, 1514, -1000, 1830,
	-1000, -1000, -1000, 883, 911, -1000, -1000, -1000, -100, 992,
	1214, -1000, 0, -1000, -1000, -1000, -1000, -1000, 1493, -1000,
	1585, -1000, -319, 1211, -1000, -1000, 332, -321, -1000, -1000,
	1832, 578, 578, -1000, -1000, -1000, -1000, -1000, 422, -1000,
	-1000, -117, -118, -325, -319, 1209, 55, -1000, -1000, -1000,
	416, 960, -1000, 247, -1000, -128, 1443, -325, -1000, 1447,
	1431, -1000, -1000, -1000, -1000, -139, -1000, 1443, 13037, 1440,
	-1000, -1000, 937, 30575, -331, 1206, -1000, 903, -331, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 9, 2151, 6, 1, 4, 2150, 17, 76, 161,
	16, 162, 83, 2149, 2148, 2147, 2146, 173, 171, 167,
	2145, 2140, 2138, 2136, 2135, 2133, 2130, 2129, 2128, 2127,
	169, 137, 160, 2126, 2125, 2124, 99, 143, 72, 74,
	158, 2123, 2120, 50, 2119, 2102, 2100, 153, 149, 693,
	2099, 146, 95, 2094, 2093, 2092, 2091, 2090, 2089, 2081,
	2080, 2076, 2074, 2073, 2071, 2070, 2067, 201, 2066, 2064,
	10, 2063, 64, 2062, 2060, 2058, 2057, 2056, 5, 2053,
	2051, 2049, 2047, 124, 2046, 2045, 2044, 163, 2043, 2042,
	209, 96, 98, 2041, 2040, 85, 138, 2038, 97, 123,
	2036, 2034, 185, 2033, 58, 68, 2032, 46, 67, 65,
	42, 2030, 2029, 2027, 73, 57, 2026, 84, 63, 2025,
	87, 75, 2024, 41, 2023, 2022, 86, 2021, 2020, 2019,
	77, 2018, 2016, 3297, 2015, 78, 111, 28, 32, 2013,
	2011, 2010, 2009, 2008, 39, 2007, 2006, 2005, 120, 29,
	2004, 19, 40, 24, 116, 2003, 62, 55, 2002, 118,
	1997, 1996, 35, 31, 30, 1994, 21, 112, 129, 56,
	79, 119, 1993, 1992, 34, 49, 1991, 1988, 1985, 1984,
	1983, 1981, 43, 1979, 26, 1978, 166, 1977, 2, 25,
	60, 44, 117, 47, 27, 1975, 155, 1974, 33, 134,
	115, 136, 1972, 1968, 1967, 159, 194, 1965, 1963, 52,
	144, 126, 132, 1962, 202, 1961, 1960, 80, 1392, 1969,
	38, 135, 1958, 1957, 2825, 128, 121, 36, 1955, 105,
	1951, 1950, 1949, 164, 139, 82, 965, 90, 1946, 1945,
	1944, 1939, 1938, 1937, 1935, 180, 165, 37, 88, 152,
	45, 1934, 1929, 1928, 102, 93, 1922, 133, 130, 104,
	148, 1921, 145, 125, 151, 1920, 122, 1919, 1917, 1905,
	1900, 66, 1898, 1891, 1890, 1884, 140, 127, 101, 70,
	1883, 71, 100, 131, 142, 11, 3, 22, 156, 20,
	1880, 8, 0, 1878, 12, 147, 196, 175, 1877, 1875,
	7, 1873, 13, 1871, 1869, 113, 1868, 1866, 1864, 15,
	23, 14, 1862, 1861, 1859, 3245, 2191, 110, 1858, 168,
}

//line sql.y:5842
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     *JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprOrColumnsUnion() *ExprOrColumns {
	v, _ := st.union.(*ExprOrColumns)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) unaryExprOperatorUnion() UnaryExprOperator {
	v, _ := st.union.(UnaryExprOperator)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 313, 314, 314, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 6, 6, 6, 292, 292, 292, 295, 295,
	28, 62, 30, 30, 29, 29, 32, 32, 31, 7,
	7, 7, 8, 8, 8, 8, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 10, 10, 10, 10, 12,
	12, 12, 12, 12, 15, 16, 11, 11, 17, 17,
	74, 74, 18, 19, 19, 19, 19, 317, 317, 128,
	128, 126, 126, 127, 127, 191, 191, 20, 21, 21,
	201, 201, 200, 200, 200, 202, 202, 202, 202, 236,
	236, 22, 22, 22, 22, 22, 88, 88, 294, 294,
	293, 291, 291, 290, 290, 289, 34, 35, 44, 44,
	44, 44, 45, 46, 296, 296, 267, 50, 50, 49,
	49, 49, 49, 51, 51, 48, 48, 47, 47, 269,
	269, 256, 256, 268, 268, 268, 268, 268, 268, 268,
	255, 255, 101, 101, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 308, 308, 173, 173, 173,
	173, 173, 173, 106, 106, 114, 114, 114, 114, 104,
	104, 105, 103, 103, 103, 109, 109, 109, 109, 109,
	109, 109, 109, 109, 109, 109, 109, 312, 312, 312,
	312, 113, 113, 110, 110, 111, 111, 111, 309, 309,
	309, 309, 238, 238, 238, 238, 241, 241, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 240, 240, 240,
	240, 240, 242, 242, 242, 242, 242, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 244, 244, 244, 244, 244, 244, 244, 244,
	254, 254, 245, 245, 249, 249, 250, 250, 250, 251,
	251, 251, 252, 252, 247, 247, 247, 247, 248, 248,
	248, 257, 281, 281, 280, 280, 278, 278, 278, 278,
	266, 266, 275, 275, 275, 275, 275, 265, 265, 261,
	261, 261, 262, 262, 263, 263, 260, 260, 264, 264,
	277, 277, 276, 258, 258, 259, 259, 283, 310, 310,
	310, 310, 311, 311, 284, 301, 302, 300, 300, 300,
	300, 300, 72, 72, 72, 213, 213, 213, 273, 273,
	272, 272, 272, 274, 274, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 208, 208, 208, 299, 299, 299, 299,
	299, 299, 298, 298, 298, 270, 270, 270, 297, 297,
	52, 52, 157, 157, 41, 41, 41, 41, 41, 41,
	40, 40, 40, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 36, 36, 36, 36,
	36, 36, 36, 36, 36, 36, 42, 42, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 76, 76, 76,
	76, 78, 78, 78, 286, 286, 1, 1, 5, 5,
	2, 2, 77, 77, 3, 3, 4, 4, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	253, 253, 253, 285, 285, 287, 287, 24, 33, 33,
	25, 25, 25, 25, 26, 26, 53, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 54, 54, 54, 54, 54,
	54, 54, 54, 54, 54, 303, 303, 207, 207, 215,
	215, 206, 206, 229, 229, 229, 209, 209, 209, 210,
	210, 307, 307, 307, 55, 55, 57, 57, 58, 59,
	59, 231, 231, 232, 232, 60, 61, 73, 73, 73,
	73, 73, 73, 75, 75, 75, 14, 14, 14, 14,
	69, 69, 69, 13, 13, 56, 56, 63, 304, 304,
	305, 306, 306, 306, 306, 64, 66, 27, 27, 27,
	27, 27, 27, 94, 94, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 89, 89, 89,
	84, 84, 318, 67, 68, 68, 87, 87, 87, 81,
	81, 81, 86, 86, 86, 91, 91, 93, 93, 93,
	93, 93, 95, 95, 95, 95, 95, 95, 95, 90,
	90, 92, 92, 92, 92, 222, 222, 222, 221, 221,
	117, 117, 119, 118, 118, 120, 120, 121, 121, 121,
	155, 136, 136, 189, 189, 188, 188, 190, 190, 190,
	190, 192, 192, 122, 122, 122, 122, 123, 123, 124,
	124, 125, 125, 230, 230, 227, 227, 227, 226, 226,
	129, 129, 129, 131, 130, 130, 130, 130, 132, 132,
	134, 134, 133, 133, 135, 137, 137, 137, 137, 137,
	138, 138, 102, 102, 102, 102, 102, 102, 112, 112,
	112, 112, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 107, 107, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 204,
	204, 139, 139, 147, 147, 147, 147, 140, 140, 140,
	140, 140, 140, 140, 148, 148, 148, 154, 149, 149,
	145, 145, 145, 145, 143, 143, 143, 143, 143, 143,
	143, 143, 143, 143, 144, 144, 144, 144, 144, 144,
	144, 144, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 319, 319, 246, 246, 246, 146, 146,
	146, 146, 146, 85, 85, 85, 85, 85, 235, 235,
	235, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 160, 160, 82, 82, 158, 158,
	159, 161, 161, 156, 156, 156, 142, 142, 142, 162,
	162, 163, 163, 164, 164, 166, 165, 165, 167, 168,
	168, 168, 169, 169, 170, 170, 170, 43, 43, 43,
	43, 43, 38, 38, 38, 38, 39, 39, 39, 96,
	96, 96, 96, 98, 98, 97, 97, 70, 70, 71,
	71, 71, 99, 99, 100, 100, 100, 100, 186, 186,
	171, 171, 171, 178, 178, 178, 174, 174, 176, 176,
	176, 177, 177, 177, 175, 183, 183, 185, 185, 184,
	184, 180, 180, 181, 181, 182, 182, 182, 179, 179,
	141, 141, 141, 141, 141, 187, 187, 187, 187, 193,
	193, 151, 151, 153, 153, 152, 116, 194, 194, 198,
	195, 195, 199, 199, 199, 199, 199, 196, 196, 197,
	197, 223, 223, 223, 203, 203, 214, 214, 211, 211,
	212, 212, 205, 205, 216, 216, 216, 65, 150, 150,
	282, 282, 279, 219, 219, 220, 220, 224, 224, 228,
	228, 225, 225, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	217, 217, 217, 217, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 315, 316, 233, 234, 234, 234,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 2, 3, 0, 1, 3, 1, 4, 3,
	3, 4, 3, 2, 3, 4, 3, 4, 2, 7,
	1, 3, 3, 3, 3, 1, 2, 1, 1, 3,
	2, 3, 3, 2, 5, 7, 9, 8, 7, 8,
	1, 1, 10, 11, 9, 8, 8, 1, 1, 1,
	3, 1, 3, 1, 3, 0, 4, 3, 5, 4,
	1, 3, 3, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 2, 6, 12, 2, 0, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 2, 2, 0, 1, 4, 4, 4, 4, 2,
	4, 1, 3, 1, 1, 3, 4, 3, 3, 3,
	4, 9, 0, 2, 0, 2, 3, 5, 3, 4,
	2, 3, 2, 3, 3, 1, 1, 0, 2, 2,
	3, 3, 2, 1, 1, 2, 2, 2, 2, 1,
	1, 1, 1, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 1,
	2, 1, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 3, 3, 2,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 1,
	5, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 1, 0, 1, 0, 2, 2, 2, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 3,
	0, 1, 4, 3, 3, 4, 2, 0, 2, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	1, 3, 3, 3, 1, 3, 1, 7, 5, 6,
	6, 7, 0, 1, 5, 3, 3, 1, 1, 2,
	2, 2, 0, 1, 1, 0, 1, 2, 0, 1,
	1, 3, 2, 1, 2, 3, 3, 4, 4, 3,
	3, 3, 3, 4, 4, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 5, 0, 2, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 2, 0, 1, 5, 1, 3, 7,
	1, 3, 3, 1, 2, 2, 2, 5, 5, 5,
	6, 8, 6, 5, 5, 2, 2, 2, 2, 3,
	3, 3, 4, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 4, 4,
	2, 11, 3, 6, 8, 6, 6, 6, 13, 8,
	6, 10, 5, 5, 5, 5, 5, 0, 10, 11,
	7, 0, 8, 9, 0, 3, 0, 1, 0, 3,
	1, 1, 3, 4, 0, 2, 0, 2, 5, 3,
	7, 4, 4, 4, 4, 3, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	0, 2, 2, 1, 3, 8, 8, 3, 3, 5,
	7, 7, 6, 5, 3, 2, 3, 3, 3, 7,
	3, 3, 3, 3, 4, 7, 5, 2, 4, 4,
	4, 4, 4, 5, 5, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 2, 4, 2, 4,
	5, 4, 4, 4, 4, 4, 3, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 0, 1, 0,
	1, 1, 1, 0, 2, 2, 0, 2, 2, 0,
	2, 0, 1, 1, 2, 1, 1, 2, 1, 1,
	5, 0, 1, 0, 1, 2, 3, 0, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 3, 3, 2, 2, 3, 1, 3,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 6,
	4, 7, 6, 1, 3, 2, 2, 2, 2, 1,
	1, 1, 3, 2, 1, 1, 1, 0, 1, 1,
	0, 3, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 3, 5, 0, 1, 2, 1, 1,
	0, 1, 2, 1, 3, 1, 1, 1, 4, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 1, 3,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 3, 3, 3, 2, 3, 1, 3, 4,
	3, 1, 3, 4, 5, 6, 3, 4, 5, 6,
	3, 4, 1, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 2, 2, 2, 2, 1, 1, 2,
	9, 6, 6, 6, 2, 2, 3, 3, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 5, 5, 6, 4, 4, 8, 6, 8, 6,
	8, 5, 4, 2, 2, 1, 2, 2, 2, 8,
	8, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 0, 2, 3, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 2, 2, 0,
	3, 0, 2, 0, 1, 3, 1, 3, 2, 0,
	1, 1, 0, 1, 2, 4, 4, 0, 2, 2,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 0,
	3, 3, 3, 0, 3, 1, 1, 0, 4, 0,
	1, 1, 0, 3, 1, 3, 2, 1, 2, 4,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 2, 1, 2, 3,
	3, 0, 2, 1, 2, 3, 4, 3, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 2,
	0, 3, 0, 1, 0, 1, 1, 5, 0, 1,
	0, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -313, -6, -10, -15, -16, -17, -18, -19, -20,
	-21, -22, -23, -24, -25, -26, -53, -54, -55, -57,
	-58, -59, -60, -61, -13, -56, -27, -28, -62, -63,
	-64, -65, -66, -8, -7, -12, 7, 8, -74, -29,
	30, -34, -44, 165, -45, -35, 166, -46, 168, 167,
	203, 169, 196, 72, 243, 244, 246, 247, 248, 249,
	-75, 201, 202, 171, 34, 43, 31, 32, 35, 174,
	-9, -30, 6, -315, 9, 367, 198, 197, 26, -11,
	380, 83, -314, 514, -186, -171, 20, 31, 27, -170,
	-166, -87, -171, 18, 16, 5, -67, -318, -67, -67,
	10, 11, -67, -267, -269, 83, 139, 83, -67, -50,
	-49, -48, -47, -51, 29, -41, -42, -288, -40, -37,
	170, 167, 211, 106, 107, 203, 204, 205, 169, 187,
	202, 206, 201, 220, -36, 78, 31, 380, 383, -274,
	166, 172, 173, 368, 109, 108, 73, 168, -271, 293,
	484, -51, 486, 98, 100, 485, 42, 177, 487, 488,
	489, 490, 186, 491, 492, 493, 494, 500, 501, 502,
	503, 110, 5, -67, -228, -224, -292, -218, 86, 87,
	88, 377, 189, 411, 412, 236, 78, 39, 293, 484,
	243, 257, 251, 278, 270, 378, 413, 239, 190, 224,
	481, 268, 115, 486, 242, 414, 204, 298, 299, 300,
	98, 246, 335, 499, 241, 415, 497, 100, 485, 77,
	49, 42, 199, 266, 262, 487, 225, 416, 388, 218,
	109, 106, 506, 34, 260, 48, 28, 496, 108, 47,
	488, 130, 417, 489, 302, 283, 475, 46, 303, 205,
	418, 81, 382, 483, 304, 261, 305, 235, 495, 171,
	419, 467, 306, 307, 476, 420, 284, 288, 421, 327,
	308, 513, 50, 422, 423, 477, 107, 424, 76, 490,
	255, 256, 425, 233, 188, 329, 282, 186, 33, 309,
	379, 237, 56, 212, 330, 44, 286, 510, 43, 471,
	426, 474, 281, 277, 51, 427, 428, 429, 430, 491,
	280, 254, 276, 505, 400, 230, 492, 60, 173, 290,
	289, 291, 219, 326, 273, 431, 432, 433, 193, 79,
	434, 263, 19, 435, 436, 310, 226, 437, 54, 438,
	439, 333, 202, 440, 52, 493, 37, 207, 507, 494,
	441, 442, 443, 444, 445, 312, 446, 311, 285, 287,
	214, 313, 381, 447, 259, 206, 498, 448, 194, 482,
	208, 211, 201, 334, 195, 449, 450, 451, 452, 453,
	240, 454, 455, 247, 500, 41, 456, 457, 458, 459,
	234, 229, 328, 337, 59, 80, 295, 460, 480, 253,
	227, 461, 244, 53, 501, 502, 503, 221, 504, 7,
	511, 512, 315, 110, 231, 232, 45, 274, 213, 462,
	463, 264, 265, 279, 252, 275, 245, 468, 215, 316,
	203, 464, 336, 228, 296, 385, 220, 317, 479, 384,
	272, 269, 222, 465, 318, 178, 216, 217, 466, 469,
	319, 320, 238, 321, 322, 323, 324, 325, 223, 383,
	250, 267, 297, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 176, -67, 176, -133, -224, 176, -196, 299, -215,
	301, 314, 309, 319, 307, -207, 310, 312, 214, -307,
	327, 176, 316, 165, 156, 302, 311, 320, 321, 238,
	322, 325, 223, -303, -292, 489, 504, 115, 271, 306,
	304, 328, 471, 324, 323, -224, 245, -231, 250, -219,
	-292, -218, 248, -133, -73, 467, 169, -233, -233, -89,
	471, 473, -149, -102, 123, -112, -115, -107, -108, -143,
	-144, -145, -146, -113, -156, 145, 146, 153, 124, -154,
	-116, 24, 376, 369, 368, 156, 29, 161, 66, 67,
	371, 372, 126, 55, 344, 345, -114, 340, 346, 341,
	374, 375, 101, -219, -224, 181, 339, 175, 151, 367,
	-109, -105, -7, -152, 338, 342, 343, 347, -292, -218,
	-111, -110, -139, 89, 94, 99, 95, -312, 102, -315,
	90, 91, 92, 93, 103, 104, 157, 159, 158, 160,
	42, 315, 315, -133, -67, -164, -87, -166, -9, -7,
	-315, 6, -67, -7, -8, -12, -30, -32, 407, -31,
	-224, -171, -186, 10, 141, 40, 48, -169, -170, -11,
	-7, -102, 17, 21, 22, -92, 147, -102, -224, -68,
	-92, -205, 180, -67, -67, -195, -236, 245, -199, 328,
	327, -220, -197, -219, -217, -196, 326, 170, 386, 122,
	23, 25, 125, 156, 17, 126, 35, 172, 271, 187,
	155, 183, 368, 165, 70, 387, 340, 341, 338, 344,
	370, 371, 339, 301, 29, 11, 389, 26, 197, 22,
	36, 149, 167, 129, 200, 24, 198, 101, 104, 392,
	20, 73, 192, 12, 185, 38, 14, 393, 394, 15,
	181, 180, 141, 177, 68, 9, 161, 27, 138, 64,
	395, 117, 396, 397, 398, 399, 66, 139, 18, 508,
	342, 343, 31, 472, 376, 209, 151, 71, 57, 473,
	123, 401, 402, 102, 403, 105, 74, 478, 119, 16,
	69, 40, 404, 210, 405, 182, 509, 406, 331, 407,
	140, 168, 367, 67, 408, 175, 314, 6, 373, 30,
	196, 184, 112, 65, 409, 176, 128, 374, 375, 179,
	103, 5, 116, 32, 10, 72, 75, 345, 346, 347,
	55, 111, 380, 127, 13, 410, 332, 121, 115, -268,
	139, -255, -259, -219, 191, -284, 187, -133, -277, -276,
	-219, -88, -214, 177, 185, 184, 116, -296, 119, 231,
	339, 175, -47, -48, -196, 155, 208, 84, 84, -259,
	-258, -257, -297, 210, 191, -283, -275, 183, 192, -265,
	184, 185, -260, 177, 117, -297, -260, 182, 192, 210,
	210, 110, 210, 110, 210, 210, 210, 210, 210, 210,
	210, 210, 210, 207, -266, 131, -266, 384, 384, -271,
	-297, -297, -297, 179, 33, 33, -216, -260, 179, 23,
	-266, -266, -196, 155, -266, -266, -266, -266, 218, 218,
	-266, -266, -266, -266, -266, -266, -266, -266, -266, -266,
	-266, -266, -266, -266, -266, 176, -296, -96, 325, 238,
	78, -49, 220, -33, -133, -214, 177, 178, -296, -133,
	162, -133, -209, 139, 13, -209, -206, 315, 313, 300,
	305, -209, -209, -209, -209, 221, 298, -261, 177, 33,
	188, 315, 221, 298, 221, 222, 221, 222, 308, 318,
	221, -229, 12, 141, 339, 303, 307, 214, 176, 215,
	178, 317, -292, 474, 222, -229, 90, -210, 139, 315,
	217, -209, -234, -315, -220, 271, -234, -234, 30, 179,
	-219, -69, -219, 90, -14, -10, -18, -17, -19, 131,
	-94, 315, -83, 156, 489, 475, 476, 477, 474, 312,
	482, 480, 478, 221, 479, 84, 119, 121, 122, -102,
	138, -140, 131, 132, 133, 134, 135, 136, 137, 141,
	123, 125, 139, 140, 120, 142, 143, 144, 145, 146,
	147, 148, 150, 149, 151, 152, 155, 163, 164, -108,
	-108, -108, -108, -154, -315, -315, -315, -108, -204, -315,
	-108, -315, -315, -315, -315, -160, -102, -315, -319, -315,
	-319, -319, -246, -315, -246, -315, -315, -315, -315, 162,
	-315, -315, -315, -315, -315, -246, -246, -246, -246, 99,
	94, 89, -156, 95, 90, -219, -224, -7, -8, -149,
	-233, -304, -305, -136, -133, -315, 238, -169, -11, -7,
	-164, -170, -166, -7, -67, -81, -93, 61, 62, -95,
	22, 36, 65, 63, 21, -316, 85, -316, -186, -316,
	84, -32, -189, 83, 59, 41, 90, 90, 84, 19,
	-165, -167, -102, 12, -222, -221, 23, -219, 90, 162,
	97, 12, -134, 27, -133, -205, -205, 84, 245, -199,
	-236, -201, -200, 329, 331, 131, -223, -219, 90, 29,
	85, 84, -133, -238, -241, -243, -242, -244, -239, -240,
	268, 269, 156, 272, 274, 275, 276, 277, 278, 279,
	280, 281, 282, 283, 30, 199, 264, 265, 266, 267,
	284, 285, 286, 287, 288, 289, 290, 291, 251, 270,
	378, 252, 253, 254, 255, 256, 257, 259, 260, 261,
	262, 263, -295, -292, 83, 85, 84, -245, 83, -96,
	176, -292, 177, 177, 177, -67, 367, -266, -266, 207,
	-40, -37, -288, 16, -36, -37, 170, 106, 107, 167,
	83, -255, 83, -264, -295, -292, 83, 117, 182, 116,
	-263, -260, -263, -264, -292, -156, -292, 117, 117, -192,
	-219, -192, -192, 21, -192, 21, -192, 21, 92, -219,
	-192, 21, -192, 21, -192, 21, -192, 21, -192, 21,
	29, 76, 77, 29, 79, 80, 81, -156, -156, -255,
	-196, -133, -292, 92, 92, -266, -266, 92, 90, 90,
	90, -266, -266, 92, 90, -226, -224, 90, -298, 193,
	235, 237, 92, 92, 92, 92, 29, 90, -299, 29,
	496, 495, 497, 498, 499, 92, 29, 92, 29, 92,
	-219, 83, -133, -99, 225, 165, 167, 170, 74, 90,
	239, 131, 42, 84, 179, 176, -292, -211, 181, -211,
	-225, -224, -217, 90, -102, -262, 12, 141, -229, -229,
	-209, -133, -262, -229, -209, -133, -209, -209, -209, -209,
	-229, -229, -229, -209, -224, -224, -133, -133, -133, -133,
	-133, -133, -133, -234, -234, -234, -210, -209, 474, 90,
	74, -232, 248, 282, 468, 469, 470, 84, 380, -126,
	-133, 474, 474, 474, 474, 474, 474, -102, -102, -102,
	-102, -147, 102, 123, 103, 104, -115, -148, -152, -154,
	96, 141, 125, 139, 140, -107, -108, -107, -107, -107,
	-107, -107, -107, -107, -107, -107, -107, -107, -107, -107,
	-235, -292, 90, 156, 90, 90, -90, -92, -102, -102,
	-292, -219, -90, -90, -102, -86, 22, 36, -158, -159,
	127, -156, -316, -316, 92, -219, -219, -80, -79, 349,
	350, 351, 352, 354, 355, 356, 359, 360, 364, 365,
	348, 366, 353, 358, 361, 362, 363, 357, 267, -91,
	22, 36, -90, -220, -225, -217, -90, -91, -91, -90,
	-90, 162, -186, -316, 84, -306, 331, 332, 472, -227,
	210, -226, 23, -150, -149, 90, -169, -169, 61, 62,
	57, -90, -95, -316, -31, 23, -188, -219, 60, 90,
	-247, -196, -102, -102, 84, -168, 25, 26, -133, -221,
	147, -225, -133, -191, 210, -133, -118, -120, -121, -122,
	-136, -155, -315, 12, -126, -127, -135, -224, -199, -201,
	84, 330, 332, 333, 74, 105, -102, -248, 155, -273,
	-272, -271, -255, -257, -258, -259, 85, -172, -101, 38,
	-251, 296, 295, -245, -245, -245, -245, -245, -247, -247,
	-247, -247, 83, 83, -245, -245, -245, -245, -249, 83,
	-249, -249, -250, 83, -250, -284, -102, -281, -280, -278,
	-279, 186, 98, 380, 75, -276, -168, 92, -99, -212,
	181, -282, -279, -292, -292, -292, -212, -292, 90, -292,
	90, 84, 17, -256, -255, -52, 235, -287, 210, -283,
	-277, -264, 117, -263, -264, -264, -292, 84, 27, 110,
	110, 110, 110, 380, 167, 30, -255, -52, -235, 179,
	-235, -235, 90, 90, -208, 504, -126, -98, 227, 131,
	216, 216, 176, 176, 229, -133, 240, 242, 241, 239,
	21, 228, 230, 232, 218, -133, -133, -211, 74, -128,
	-133, 24, -224, -133, -209, -209, -133, -209, -209, -133,
	-219, -83, 331, 84, 380, 20, -84, 20, 102, 103,
	104, -148, -107, -108, -107, 122, 200, 84, -316, 23,
	84, 75, -316, -316, -316, 84, 12, -90, -161, -159,
	129, -102, -316, -316, 84, 84, 12, -316, -90, -90,
	-315, 162, -316, -316, -316, -316, -316, -220, -305, 471,
	332, -137, 72, 180, 73, -315, -226, -316, -142, -219,
	92, 95, -171, -117, -119, 12, -95, -154, 85, 84,
	-247, -175, -180, -206, -292, 90, 156, -167, 162, -138,
	13, -141, 30, 55, -10, -315, -315, 30, 84, -129,
	-131, -130, -132, 64, 68, 70, 65, 66, 67, 71,
	-230, 23, -118, -8, -7, -315, -133, -126, -317, 12,
	75, -317, 84, 162, -200, -202, 334, 331, 337, -292,
	90, -76, 210, 84, -271, -259, -311, 102, 123, 29,
	74, 293, 98, -309, 155, -310, 182, 116, 117, 194,
	23, 39, -252, 297, -247, -247, -254, 90, -254, 92,
	92, 85, -43, -38, -39, 31, 78, -278, -266, 90,
	37, -219, 85, -98, -133, 123, 74, -282, -282, -282,
	-224, 16, -188, 84, 85, -157, 236, 85, -219, 85,
	83, -264, -264, -219, -315, 176, 29, 29, -52, -157,
	-248, -292, 506, 505, 85, 178, 234, -100, 344, 90,
	86, -133, -133, -133, -133, -133, 170, 167, 219, 179,
	-126, -133, 84, -72, 195, 190, -229, -229, 31, -133,
	331, 483, 481, 122, 200, -115, -108, -92, 377, -237,
	156, 268, 199, 266, 262, 282, 273, 295, 264, 296,
	-237, -235, -102, -102, -164, 130, -102, 128, -102, -102,
	-102, -316, -316, -91, -220, 177, 177, 177, -192, -203,
	20, 12, 55, 55, -117, -138, -118, -95, -219, -178,
	467, -183, 44, -181, -182, 45, -179, 46, 54, 147,
	-169, -102, -193, 74, -194, -198, -156, -151, -153, -152,
	-315, -187, -316, -219, -192, -194, -120, -121, -121, -120,
	-121, 64, 64, 64, 69, 64, 69, 64, -130, -224,
	-316, -316, -8, -227, 75, -118, -118, -135, -224, 147,
	331, 335, 336, 17, -271, 102, -315, -106, -114, -104,
	-103, -105, -109, 145, 146, 10, 90, 90, -292, 117,
	117, -133, 83, 85, 84, 85, 84, 85, 84, -213,
	417, 123, -39, -38, -266, -266, 92, -292, 178, 24,
	-133, 74, 74, 74, 17, -255, -156, 55, -281, -188,
	-285, -287, -133, -104, -315, -157, -133, -97, 225, 233,
	83, 87, -294, 75, 216, 293, 216, -133, -72, -43,
	-133, -209, -209, 31, -292, -115, -108, -315, -316, -245,
	-245, -245, -250, -245, 256, -245, 256, -316, -316, 84,
	-316, 20, -316, -82, 373, -102, 84, 84, -316, -316,
	-315, -315, -315, -316, -133, -138, -162, 14, -175, 49,
	274, -185, -184, 53, 45, -182, 17, 47, 17, 28,
	-193, 84, 131, 84, -316, -316, 84, 55, 162, -316,
	-138, -124, -123, 74, 75, -125, 74, -123, 64, 64,
	-189, -316, -191, -118, -138, -138, 162, -1, -2, 508,
	509, 510, -102, -110, -110, -144, 83, -102, -247, 90,
	-247, 92, 92, 417, 29, 79, 80, 81, 29, 76,
	77, -133, -133, -133, -133, -188, 212, 85, -316, 84,
	-253, 380, 383, -102, -189, 85, -291, 380, -293, -219,
	-219, -219, -219, -107, -247, -292, -102, -102, -169, 90,
	-102, -102, -190, -316, -219, 182, -190, -190, -227, -162,
	-163, 15, 17, -176, 51, -174, 50, -174, -184, 17,
	17, 90, 17, 90, 117, -198, -102, -153, 55, -10,
	-219, -151, -219, -164, -102, 83, -102, -138, -138, 513,
	117, -77, 83, 300, -316, -188, 85, 85, 85, -189,
	213, -310, -287, 384, 384, -316, 23, -290, -289, -220,
	83, 75, -85, 141, 380, -316, -316, -316, -316, -316,
	84, -316, -316, -316, -137, -163, -102, -149, -177, 52,
	74, 105, 90, 90, 90, 10, -151, 162, -169, -188,
	-164, 83, -5, 78, -3, 507, -102, 83, 85, -173,
	23, -315, -10, 84, 131, -188, -133, -316, 378, 71,
	381, -219, 182, 74, 105, -194, -219, 85, -169, -102,
	83, 131, -78, 511, 92, 85, -188, -301, -302, 74,
	-311, -308, 102, 123, 98, -309, 111, 112, -10, -102,
	209, -70, 380, -289, -270, -220, 90, 92, 85, 60,
	379, 382, 85, -188, 92, -286, 83, 17, 85, -302,
	74, 11, 10, 102, 90, -70, -316, -316, -71, 224,
	471, -294, 60, -3, 85, -285, -1, -300, 195, 190,
	193, 30, -300, 187, -291, 380, -78, -3, 85, 513,
	117, 189, 29, 102, 226, 381, -286, -78, 83, -5,
	382, -286, -102, 83, 85, -188, -4, 512, 85, 92,
	-4,
}

var yyDef = [...]int{
	-2, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 65, 67, 68, 662, 662, 662, 0,
	662, 0, 0, 662, -2, -2, 662, 1069, 0, 662,
	0, 0, -2, 595, 596, 0, 598, -2, 0, 0,
	607, 1516, 1516, 657, 0, 0, 0, 0, 0, 662,
	933, 45, 662, 0, 80, 81, 613, 614, 615, 60,
	0, 1514, 1, 3, 66, 70, 0, 0, 0, 53,
	942, 0, 73, 0, 0, 666, 0, 664, 0, 1052,
	662, 662, 0, 111, 112, 0, 0, 0, -2, 115,
	-2, 139, 140, 0, 144, 447, 407, 450, 405, 436,
	-2, 398, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 410, 300, 300, 0, 0, -2,
	398, 398, 398, 0, 0, 0, 433, 1054, 353, 300,
	300, 0, 300, 300, 300, 300, 0, 0, 300, 300,
	300, 300, 300, 300, 300, 300, 300, 300, 300, 300,
	300, 300, 300, 959, 143, 1070, 1067, 1068, 35, 36,
	37, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312,
	1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322,
	1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332,
	1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342,
	1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352,
	1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432,
	1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442,
	1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452,
	1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462,
	1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472,
	1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482,
	1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502,
	1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512,
	1513, 0, 1046, 0, 525, 752, 0, 586, 586, 0,
	586, 586, 586, 586, 0, 0, 0, 537, 0, 0,
	0, 0, 583, 0, 0, 556, 558, 0, 583, 0,
	589, 0, 570, 586, 1517, 1517, 1517, 1037, 0, 580,
	578, 592, 593, 575, 576, 594, 597, 0, 602, 605,
	1063, 1064, 0, 620, 44, 1294, 612, 625, 626, 0,
	658, 659, 40, 838, 0, 767, 771, 782, 795, 796,
	797, 798, 799, 801, 802, 0, 0, 0, 0, 807,
	808, 0, 0, 0, 0, 0, 819, 0, 0, 0,
	0, 0, 914, 0, 883, 883, 855, 883, 885, 885,
	0, 0, 0, 923, 0, 0, 0, 0, 0, 0,
	211, 212, 837, 1026, 885, 885, 885, 885, -2, -2,
	195, 196, 197, 198, 199, 200, 201, 0, 191, 0,
	215, 216, 213, 214, 821, 822, 207, 208, 209, 210,
	1516, 0, 635, 0, 0, 942, 0, 934, 933, 58,
	0, 662, -2, 0, 0, 0, 0, 42, 0, 47,
	713, 72, 71, 978, 0, 0, 0, 54, 943, 62,
	64, 944, 0, 667, 668, 0, 691, 695, 0, 663,
	0, 0, 1053, 1052, 1052, 97, 0, 1459, 1030, -2,
	-2, 0, 0, 1065, 1066, 1039, -2, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185,
	1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195,
	1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, -2, 0,
	0, 153, 154, 0, 38, 326, 0, 149, 0, 320,
	272, 959, 0, 0, 0, 0, 0, 662, 0, 1047,
	134, 135, 141, 142, 300, 300, 0, 143, 143, 414,
	415, 416, 0, 0, -2, 324, 0, 399, 0, 0,
	314, 314, 318, 316, 317, 0, 0, 0, 0, 0,
	0, 427, 0, 428, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 0, 301, 0, 445, 446, 354,
	0, 0, 0, 0, 425, 426, 0, 0, 1055, 1056,
	0, 0, 300, 300, 0, 0, 0, 0, 300, 300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 133, 972, 0, 0,
	0, -2, 0, 517, 0, 0, 0, 1048, 1048, 524,
	0, 526, 527, 0, 0, 528, 0, 583, 583, 581,
	582, 530, 531, 532, 533, 586, 0, 0, 309, 310,
	311, 583, 586, 0, 586, 586, 586, 586, 583, 583,
	583, 586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1517, 1517, 1517, 589, 586, 0, 566, 0, 567,
	568, 571, 572, 1518, 1519, 1084, 573, 574, 1038, 603,
	606, 623, 621, 622, 624, 616, 617, 618, 619, 0,
	637, 638, 643, 0, 0, 0, 0, 649, 650, 651,
	0, 0, 654, 655, 656, 0, 0, 0, 0, 765,
	0, 0, 827, 828, 829, 830, 831, 832, 833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 803,
	804, 805, 806, 809, 0, 0, 0, 814, 815, 0,
	0, 0, 0, 0, 672, 0, 915, 0, 853, 0,
	854, 856, 857, 0, 858, 0, 0, 0, 675, 0,
	0, 675, 675, 0, 0, 185, 186, 187, 188, 202,
	203, 204, 205, 206, 217, 923, 0, 837, 0, 0,
	41, 627, 628, 0, 735, 1058, 0, 52, 61, 63,
	942, 56, 942, 0, 677, 0, 0, -2, -2, 678,
	684, 685, 686, 687, 688, 49, 1515, 50, 0, 69,
	0, 43, 0, 0, 0, 0, 284, 981, 0, 0,
	935, 936, 939, 0, 692, 696, 0, 698, 699, 0,
	665, 0, 95, 0, 751, 0, 0, 0, 1459, 1036,
	0, 99, 100, 0, 0, 0, 288, 1041, 1042, 1043,
	-2, 307, 0, -2, 279, 223, 224, 225, 272, 227,
	272, 272, 272, 272, 284, 284, 284, 284, 255, 256,
	257, 258, 259, 0, 0, 242, 272, 272, 272, 272,
	262, 263, 264, 265, 266, 267, 268, 269, 228, 229,
	230, 231, 232, 233, 234, 235, 236, 274, 274, 274,
	276, 276, 0, 39, 0, 292, 0, 939, 0, 972,
	1050, 1060, 0, 0, 0, 1050, 117, 0, 0, 448,
	408, 437, 449, 0, 411, 412, -2, 0, 0, 398,
	0, 400, 0, 308, 0, -2, 0, 318, 0, 314,
	318, 315, 318, 306, 319, 429, 430, 431, 0, 489,
	721, 0, 0, 0, 0, 0, 495, 496, 497, 0,
	499, 500, 501, 502, 503, 504, 505, 506, 507, 508,
	438, 439, 440, 441, 442, 443, 444, 0, 0, 400,
	0, 434, 0, 355, 356, 0, 0, 359, 360, 361,
	362, 0, 0, 365, 366, 367, 738, 739, 368, 392,
	393, 394, 369, 370, 371, 372, 373, 374, 375, 386,
	387, 388, 389, 390, 391, 376, 377, 378, 379, 380,
	383, 0, 127, 963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1048, 0, 0, 0, 0,
	753, 1071, 1072, 587, 588, 0, 312, 313, 586, 586,
	534, 557, 0, 586, 538, 559, 539, 541, 540, 542,
	561, 562, 586, 545, 584, 585, 546, 547, 548, 549,
	550, 551, 552, 553, 554, 555, 563, 564, 565, 590,
	0, 0, 604, 608, 609, 610, 611, 0, 0, 640,
	91, 645, 646, 647, 648, 660, 653, 839, 762, 763,
	764, 766, 768, 0, 823, 825, 770, 772, 834, 835,
	836, 0, 0, 0, 0, 0, 776, 780, 783, 784,
	785, 786, 787, 788, 789, 790, 791, 792, 793, 794,
	800, 898, 899, 900, 817, 818, 0, 689, 0, 0,
	0, 816, 0, 0, 0, 0, 673, 674, 921, 918,
	0, 0, 884, 886, 0, 0, 0, 0, 862, 863,
	864, 865, 866, 867, 868, 869, 870, 871, 872, 873,
	874, 875, 876, 877, 878, 879, 880, 881, 882, 0,
	0, 0, 676, 924, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 1025, 0, 630, 631, 633, 0, 755,
	0, 736, 0, 0, 1059, 636, 55, 57, 682, 683,
	0, 700, 679, 51, 46, 0, 0, 715, 979, 284,
	1001, 0, 945, 946, 0, 938, 940, 941, 74, 697,
	693, 0, 760, 0, 0, 750, 0, 703, 705, 706,
	707, 733, 0, 0, 0, 0, 93, 752, 1031, 98,
	0, 0, 103, 104, 1032, 1033, 1034, 1035, 0, 467,
	-2, 350, 155, 157, 158, 159, 150, 332, 0, 0,
	282, 280, 281, 226, 284, 284, 249, 250, 251, 252,
	253, 254, 0, 0, 243, 244, 245, 246, 237, 0,
	238, 239, 240, 0, 241, 325, 0, 947, 293, 294,
	296, 300, 0, 0, 0, 321, 322, 0, 963, 0,
	0, 0, 1061, 1060, 1060, 1060, 0, 145, 146, 147,
	148, 143, 0, 0, 151, 402, 401, 0, 0, 323,
	0, 0, 318, 318, 303, 304, 432, 0, 0, 491,
	492, 493, 494, 0, 0, 0, 400, 402, 288, 0,
	357, 358, 363, 364, 381, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 462, 463, 464, 465,
	466, 960, 961, 962, 0, 0, 518, 0, 0, 342,
	89, 1049, 523, 583, 544, 560, 583, 536, 543, 569,
	600, 644, 0, 0, 0, 0, 652, 0, 769, 824,
	826, 773, 0, 777, 781, 0, 0, 0, 0, 0,
	0, 0, 820, 844, 845, 0, 0, 933, 0, 919,
	0, 0, 852, 887, 0, 0, 0, 840, 0, 0,
	675, 0, 888, 889, 890, 891, 892, 924, 629, 632,
	634, 711, 0, 0, 0, 0, 737, 1057, 0, 926,
	0, 0, 700, 760, 701, 0, 680, 48, 714, 0,
	983, 982, 995, 1008, 285, 286, 287, 937, 0, 942,
	0, 1019, 0, 0, 1011, 0, 0, 0, 0, 0,
	0, 0, 0, 740, 0, 0, 743, 0, 0, 0,
	0, 734, 0, 0, 0, 0, -2, 0, 0, 87,
	88, 0, 0, 0, 101, 102, 0, 0, 108, 289,
	290, 136, 0, 143, 352, 156, 160, 165, 0, 0,
	0, 170, 0, 172, 0, 333, 0, 219, 221, 0,
	0, 163, 222, 283, 247, 248, 0, 270, 0, 0,
	0, 345, 113, 951, 950, 300, 300, 295, 0, 298,
	0, 1062, 273, 0, 126, 0, 0, 0, 0, 0,
	132, 0, 406, 0, 417, 418, 0, 488, 0, 292,
	0, 302, 305, 722, 0, 0, 419, 0, 402, 423,
	424, 435, 384, 385, 382, 0, 0, 973, 974, 0,
	977, 118, 455, 457, 456, 460, 0, 0, 453, 0,
	342, 947, 0, 522, 343, 344, 586, 586, 639, 92,
	0, 642, 0, 0, 0, 774, 778, 690, 0, 0,
	272, 272, 904, 272, 276, 907, 272, 909, 272, 912,
	0, 0, 0, 0, 916, 851, 922, 0, 0, 0,
	0, 841, 842, 0, 925, 0, 0, 0, 0, 0,
	1044, 1045, 927, 928, 760, 929, 702, 681, 716, 1001,
	0, 994, 0, -2, 1003, 0, 0, 0, 1009, 694,
	75, 761, 78, 0, 1019, 1027, 0, 1010, 1021, 1023,
	0, 0, 0, 1015, 0, 760, 704, 729, 731, 0,
	726, 741, 742, 744, 0, 746, 0, 748, 749, 713,
	709, 710, 0, 95, 0, 760, 760, 94, 0, 754,
	105, 106, 107, 476, 351, 166, 0, 168, 183, 184,
	189, 190, 192, 0, 0, 0, 171, 173, 174, 218,
	220, 0, 0, 284, 0, 284, 0, 277, 0, 334,
	346, 0, 948, 949, 0, 0, 297, 299, 0, 1051,
	128, 0, 0, 0, 0, 152, 403, 0, 291, 0,
	0, 513, 510, 420, 0, 422, 713, 964, 965, 966,
	0, 976, 121, 0, 0, 0, 0, 519, 520, 521,
	90, 529, 535, 641, 661, 775, 779, 0, 811, 901,
	284, 905, 906, 908, 910, 911, 913, 812, 813, 0,
	847, 0, 849, 942, 0, 920, 0, 0, 861, 843,
	0, 0, 0, 735, 59, 929, 931, 0, 988, 986,
	986, 996, 997, 0, 0, 1004, 0, 0, 0, 0,
	79, 0, 0, 0, 1024, 0, 0, 0, 0, 96,
	933, 723, 730, 0, 0, 724, 0, 725, 745, 747,
	708, -2, 760, 760, 85, 86, 0, 0, 0, 477,
	480, 481, 0, 193, 194, 169, 0, 0, 260, 271,
	261, 0, 0, 347, 952, 953, 954, 955, 956, 957,
	958, 713, 129, 130, 131, 409, 0, 0, 490, 0,
	498, 0, 0, 0, 0, 975, 454, 0, 119, 120,
	0, 0, 459, 893, 902, 903, 0, 0, 0, 917,
	0, 0, 0, 757, 717, 718, 0, 0, 755, 931,
	77, 0, 0, 991, 0, 984, 987, 985, 998, 0,
	0, 1005, 0, 1007, 0, 1028, 1029, 1022, 0, 1014,
	1017, 1013, 1016, 942, 727, 0, 732, 933, 84, 0,
	478, 484, 0, 0, 167, 0, 177, 275, 278, 0,
	0, 327, 514, 511, 512, 421, 0, 122, 123, 0,
	0, 0, 0, 0, 0, 846, 848, 850, 859, 860,
	0, 756, 758, 759, 712, 76, 932, 930, 980, 0,
	989, 990, 999, 1000, 1006, 0, 1012, 0, 82, 0,
	942, 0, 0, 0, 471, 0, 0, 0, 328, 332,
	0, 0, 967, 0, 0, 0, 461, 810, 0, 0,
	0, 719, 720, 992, 993, 1020, 1018, 728, 83, 0,
	0, 0, 474, 0, 485, 482, 0, 329, 330, 0,
	161, 178, 179, 0, 0, 182, 175, 176, 967, 0,
	0, 451, 969, 124, 125, 395, 396, 397, 118, 894,
	0, 897, 484, 0, 479, 470, 0, 476, 483, 331,
	0, 0, 0, 180, 181, 114, 515, 516, 0, 970,
	971, 121, 895, 471, 484, 0, 0, 335, 337, 338,
	0, 0, 336, 0, 458, 0, 474, 471, 475, 0,
	478, 339, 340, 341, 968, 0, 468, 474, 0, 0,
	896, 469, 0, 0, 486, 0, 472, 0, 486, 487,
	473,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 124, 3, 3, 3, 150, 142, 3,
	83, 85, 147, 145, 84, 146, 162, 148, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 514,
	132, 131, 133, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 152, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 120, 3, 153,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 121, 122, 123, 125, 126,
	127, 128, 129, 130, 134, 135, 136, 137, 138, 139,
	140, 141, 143, 144, 149, 151, 154, 155, 156, 157,
	158, 159, 160, 161, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:458
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:463
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:464
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:468
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:501
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:507
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:511
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:515
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:520
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:524
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:530
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:536
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:542
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:546
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:551
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:555
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:561
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:565
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:571
		{
			yyLOCAL = &CommonTableExpr{TableID: yyDollar[1].tableIdent, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:577
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:581
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:585
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:608
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:614
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:619
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:625
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:632
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:638
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:645
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:649
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:655
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:659
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:663
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:667
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:671
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:677
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:681
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:686
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:690
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:696
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:700
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:705
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:711
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:717
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:724
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:730
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:738
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:742
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:750
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:762
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:774
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:778
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:784
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:790
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].tableIdent}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:794
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:798
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:802
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:807
		{
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:812
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:816
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:822
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:826
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:832
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 95:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:841
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:845
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:851
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:857
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:861
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:867
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:871
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:877
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:881
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:885
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:891
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:895
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:899
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:903
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:909
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:913
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:919
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:925
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:932
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:941
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].str, Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:945
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:952
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:956
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:961
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 119:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:965
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:971
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:976
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:981
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:987
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:992
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:998
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 126:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1004
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1011
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1018
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1023
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1028
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 131:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1033
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].colIdent, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1040
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs), DBName: yyDollar[6].tableIdent, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1047
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1058
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1065
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1069
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1075
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:1079
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1083
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1087
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1093
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1097
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1103
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 146:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1107
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1113
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1117
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1124
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1128
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1134
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1138
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1144
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1149
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1158
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1171
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1177
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[4].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1183
		{
			yyDollar[2].columnType.Options = yyDollar[8].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[6].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[9].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1191
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1195
		{
			yyVAL.str = ""
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1204
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1208
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1214
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1220
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1225
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1230
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1235
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1240
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1245
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1254
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].colIdent.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1261
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1265
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1270
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1274
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1279
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1285
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1291
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1296
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1303
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1310
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1314
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1318
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1322
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1333
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1340
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1344
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1350
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1354
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1358
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1362
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1366
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1370
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1374
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1379
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1383
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1387
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1391
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: yyDollar[2].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1395
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1402
		{
			yyLOCAL = UBinaryOp
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1406
		{
			yyLOCAL = Utf8Op
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1410
		{
			yyLOCAL = Utf8mb4Op
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UnaryExprOperator
//line sql.y:1414
		{
			yyLOCAL = Latin1Op
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1424
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1428
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1435
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1439
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1443
		{
			yyLOCAL = &UnaryExpr{Operator: yyDollar[1].unaryExprOperatorUnion(), Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1449
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1453
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1457
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1461
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1467
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1478
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1497
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1501
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1505
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1517
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1527
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1533
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 239:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1539
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 240:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1545
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1551
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1563
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 244:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1567
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1571
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1575
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1581
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1585
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1593
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1597
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1601
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1605
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1609
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str}
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1613
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1617
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1621
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1633
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 261:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1638
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1644
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1648
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1652
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1656
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1660
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1664
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1668
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1672
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1678
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1683
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1688
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1692
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1697
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1701
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1709
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1713
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1719
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 279:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1727
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1731
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1735
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1740
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1744
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = ""
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 286:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1766
		{
			yyVAL.str = ""
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1770
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1774
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 291:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1781
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1786
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1790
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1796
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1800
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 296:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1806
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1810
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1815
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1819
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = ""
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1835
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1839
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1843
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1847
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1851
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1856
		{
			yyVAL.str = ""
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.str = yyDollar[2].str
		}
	case 309:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1866
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1870
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1874
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1881
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1885
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1890
		{
			yyVAL.str = "key"
		}
	case 315:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1894
		{
			yyVAL.str = yyDollar[1].str
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1900
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1904
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1909
		{
			yyVAL.str = ""
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1913
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1919
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1929
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1935
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1939
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1945
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].colIdent, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1949
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1955
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewColIdent(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1961
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1965
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1969
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnUpdate: yyDollar[6].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1973
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), OnDelete: yyDollar[6].ReferenceActionUnion(), OnUpdate: yyDollar[7].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1978
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:1982
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1988
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1994
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2000
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2006
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2010
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2014
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2018
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2022
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2027
		{
			yyVAL.str = ""
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2040
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2044
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2048
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2053
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2057
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2063
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2067
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2071
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2077
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2081
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2087
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2091
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2095
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2099
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2103
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2107
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2111
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2115
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2119
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2123
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2127
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2131
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2135
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].tableIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2139
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2143
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2147
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2151
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2155
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2159
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2163
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2167
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2171
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2175
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2179
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2183
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2187
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2191
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2195
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.str = ""
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2240
		{
			yyVAL.str = ""
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2255
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2259
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2264
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2268
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2272
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2276
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2280
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 409:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2284
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2290
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2294
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2298
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2304
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2308
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2312
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2316
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2320
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2324
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2328
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2332
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2336
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2340
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2344
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2348
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2352
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2356
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2360
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2364
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2368
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2372
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2376
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2380
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2384
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2388
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2392
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent, NewName: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2398
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2402
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2408
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2412
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2416
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2420
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2424
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2428
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2432
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2436
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2440
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2446
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2452
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2459
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2466
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2472
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2476
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2483
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].tableIdent
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2490
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].colIdent,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2502
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2512
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2516
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2520
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].colIdent,
					Type:   yyDollar[12].colIdent,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2533
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2543
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2547
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].colIdent,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2558
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2565
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2572
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2579
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2586
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2598
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isHASH:       true,
				Expr:         yyDollar[6].exprUnion(),
				Partitions:   yyDollar[8].str,
				SubPartition: yyDollar[9].subPartitionUnion(),
				Definitions:  yyDollar[10].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2610
		{
			yyLOCAL = &PartitionOption{
				Linear:       yyDollar[3].str,
				isKEY:        true,
				KeyAlgorithm: yyDollar[5].str,
				KeyColList:   yyDollar[7].columnsUnion(),
				Partitions:   yyDollar[9].str,
				SubPartition: yyDollar[10].subPartitionUnion(),
				Definitions:  yyDollar[11].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:2623
		{
			yyLOCAL = &PartitionOption{
				RangeOrList:  yyDollar[3].str,
				ExprOrCol:    yyDollar[4].exprOrColumnsUnion(),
				Partitions:   yyDollar[5].str,
				SubPartition: yyDollar[6].subPartitionUnion(),
				Definitions:  yyDollar[7].partDefsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2634
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2638
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isHASH:        true,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:2647
		{
			yyLOCAL = &SubPartition{
				Linear:        yyDollar[3].str,
				isKEY:         true,
				KeyAlgorithm:  yyDollar[5].str,
				KeyColList:    yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2658
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2662
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2667
		{
			yyVAL.str = ""
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2676
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2696
		{
			yyLOCAL = &ExprOrColumns{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ExprOrColumns
//line sql.y:2700
		{
			yyLOCAL = &ExprOrColumns{ColumnList: yyDollar[3].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = ""
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2714
		{
			yyVAL.str = ""
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2718
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 488:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2724
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2728
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2732
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2736
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2740
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2744
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2748
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2752
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2756
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2760
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2764
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2768
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2772
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2776
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2780
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2784
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2788
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2792
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2796
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2800
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2804
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2808
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2813
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2817
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2821
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2828
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2832
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 515:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2838
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2842
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2848
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2854
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2858
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 520:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2864
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2868
		{
			// Change this to an alter statement
			if yyDollar[4].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].colIdent}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2877
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2881
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs), DBName: yyDollar[5].tableIdent, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2887
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2891
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2896
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2902
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2906
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2910
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2914
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2918
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2922
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2926
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2930
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2934
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].tableIdent, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2938
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2942
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2946
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2950
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2954
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2958
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2962
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2966
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2970
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].tableIdent, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2974
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].tableIdent, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2978
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2982
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 548:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2986
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2990
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2994
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2998
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3002
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3006
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3010
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3014
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3018
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3022
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3026
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3030
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3034
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3038
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3042
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3046
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3051
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3055
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3059
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3064
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3068
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3072
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3076
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3081
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3095
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3099
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3103
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3109
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3113
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 577:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3119
		{
			yyVAL.str = ""
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3123
		{
			yyVAL.str = "extended "
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3129
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3133
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3139
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3143
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3149
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3163
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3167
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3171
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3177
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:3181
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3187
		{
			yyVAL.empty = struct{}{}
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.empty = struct{}{}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3195
		{
			yyVAL.empty = struct{}{}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3201
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3205
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3211
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3215
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3221
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3227
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3236
		{
			yyVAL.empty = struct{}{}
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3238
		{
			yyVAL.empty = struct{}{}
		}
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3241
		{
			yyVAL.empty = struct{}{}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.empty = struct{}{}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3248
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3254
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3259
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3263
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3267
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3271
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3275
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:3279
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.str = yyDollar[1].str
		}
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3289
		{
			yyVAL.str = yyDollar[1].str
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3293
		{
			yyVAL.str = yyDollar[1].str
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3299
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3303
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3307
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3311
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3316
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3320
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3324
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 623:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3330
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3334
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3340
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3344
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3350
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:3356
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3360
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:3366
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3372
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3376
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3380
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:3384
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3390
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3396
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3402
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3406
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3410
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3414
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3418
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3422
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3428
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3432
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3438
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 646:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3442
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3446
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3450
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3454
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3458
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3462
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3466
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3470
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3487
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3491
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3495
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3500
		{
			yyVAL.str = ""
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3509
		{
			setAllowComments(yylex, true)
		}
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3513
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3519
		{
			yyVAL.strs = nil
		}
	case 665:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3523
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3529
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3533
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3537
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3546
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3550
		{
			yyVAL.str = SQLCacheStr
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3555
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3559
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3563
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3568
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3572
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3577
		{
			yyVAL.strs = nil
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3581
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3585
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3603
		{
			yyVAL.str = SQLCacheStr
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = DistinctStr
		}
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = DistinctStr
		}
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = StraightJoinHint
		}
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3623
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3629
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3633
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3639
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3643
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3647
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3651
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3656
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3660
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3664
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3671
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3676
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3680
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3686
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3692
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3696
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3706
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3710
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3714
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3720
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3726
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3730
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3735
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3739
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3745
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3749
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3755
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3759
		{
			yyLOCAL = Columns{NewColIdent(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewColIdent(string(yyDollar[3].str)))
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3773
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3790
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3794
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3798
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3802
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3810
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 729:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3820
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3822
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3825
		{
			yyVAL.empty = struct{}{}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.empty = struct{}{}
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3830
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 737:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3838
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3851
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3855
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3859
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3865
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3871
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3875
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3879
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3883
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3889
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3893
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3903
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3907
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3913
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3917
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3928
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3932
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3936
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3940
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3944
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3949
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3953
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3960
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3964
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3968
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3972
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3976
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3980
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3987
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3991
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3999
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4005
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4009
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4013
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4017
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4021
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4025
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4029
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4033
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4037
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4041
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4045
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4051
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4055
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4059
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4063
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4067
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4071
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4075
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4079
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4083
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4087
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4091
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4095
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4099
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4105
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4109
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4113
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4117
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4121
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4125
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4129
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4133
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4137
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4141
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4145
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4149
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4153
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4157
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4161
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4165
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4169
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4173
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4177
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4181
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4185
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4193
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4197
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = ""
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4214
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:4218
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4225
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4229
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4233
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:4237
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4243
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4247
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4251
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4255
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4259
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4263
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:4267
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4273
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4277
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:4281
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:4288
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4294
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4298
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 840:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4308
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4312
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4316
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4320
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4330
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4334
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4338
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4342
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 848:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4346
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4350
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4354
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4358
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4362
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4366
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4377
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4381
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4387
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4391
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4396
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4400
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4404
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4408
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4414
		{
		}
	case 863:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4416
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4420
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4424
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4428
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4432
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4436
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4440
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4444
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4448
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4452
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4456
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4462
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4466
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4470
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4474
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4478
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4482
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4486
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 881:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4490
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:4494
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4504
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4508
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:4512
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 888:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4522
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4526
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4530
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4534
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 892:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4538
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4544
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4548
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4552
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4556
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:4560
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4570
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4574
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4580
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4584
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4588
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4592
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4596
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4600
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4606
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4610
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4614
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4618
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4622
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4626
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:4630
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4635
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4639
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = string("")
		}
	case 917:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 918:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4654
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4658
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 920:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4664
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4669
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4673
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4679
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4683
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4687
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4693
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4702
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4706
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4712
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4716
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4725
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4730
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4734
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4740
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4746
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4750
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 938:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4756
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4761
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4765
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4769
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4774
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4778
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4784
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4788
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4792
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4797
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4801
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4805
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4809
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4813
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4820
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4824
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4828
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4832
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4838
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4842
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4846
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4851
		{
			yyVAL.str = ""
		}
	case 960:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4855
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 961:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4859
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 962:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4863
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 963:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4868
		{
			yyVAL.str = ""
		}
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4872
		{
			yyVAL.str = yyDollar[3].str
		}
	case 965:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4878
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 966:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4882
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 967:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4887
		{
			yyVAL.str = ""
		}
	case 968:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4891
		{
			yyVAL.str = yyDollar[2].str
		}
	case 969:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4896
		{
			yyVAL.str = "cascaded"
		}
	case 970:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 971:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4904
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 972:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4909
		{
			yyVAL.str = ""
		}
	case 973:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4913
		{
			yyVAL.str = yyDollar[3].str
		}
	case 974:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4919
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 975:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4923
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4927
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4931
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 978:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4937
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4941
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4947
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4951
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4955
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4960
		{
			yyVAL.str = ""
		}
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4964
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 985:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4968
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 986:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4973
		{
			yyVAL.str = ""
		}
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4977
		{
			yyVAL.str = " header"
		}
	case 988:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4982
		{
			yyVAL.str = ""
		}
	case 989:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4986
		{
			yyVAL.str = " manifest on"
		}
	case 990:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4990
		{
			yyVAL.str = " manifest off"
		}
	case 991:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4995
		{
			yyVAL.str = ""
		}
	case 992:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4999
		{
			yyVAL.str = " overwrite on"
		}
	case 993:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5003
		{
			yyVAL.str = " overwrite off"
		}
	case 994:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5009
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 995:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5014
		{
			yyVAL.str = ""
		}
	case 996:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5018
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 997:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5024
		{
			yyVAL.str = yyDollar[1].str
		}
	case 998:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5028
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5034
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5038
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1001:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5043
		{
			yyVAL.str = ""
		}
	case 1002:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5047
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5053
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5057
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1005:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5063
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1006:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:5067
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1007:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5071
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1008:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5076
		{
			yyVAL.str = ""
		}
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5080
		{
			yyVAL.str = " optionally"
		}
	case 1010:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5093
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5097
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5101
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5105
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:5109
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5115
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:5119
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5123
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 1018:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:5127
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 1019:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5136
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:5142
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5146
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1023:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5152
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5156
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:5162
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5167
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:5177
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5181
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:5187
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:5193
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5197
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1032:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5203
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5207
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5211
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5215
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:5219
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5227
		{
			yyVAL.str = "charset"
		}
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5237
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5241
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5245
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5254
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:5256
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5259
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:5261
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:5264
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:5266
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5269
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:5271
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5274
		{
			yyVAL.empty = struct{}{}
		}
	case 1055:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5276
		{
			yyVAL.empty = struct{}{}
		}
	case 1056:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5278
		{
			yyVAL.empty = struct{}{}
		}
	case 1057:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:5282
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5287
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5291
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5296
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:5298
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:5302
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5308
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5312
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1066:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5319
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5325
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5329
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1069:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5335
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 1070:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5339
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 1072:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5346
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5812
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5821
		{
			decNesting(yylex)
		}
	case 1516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5826
		{
			skipToEnd(yylex)
		}
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5831
		{
			skipToEnd(yylex)
		}
	case 1518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5835
		{
			skipToEnd(yylex)
		}
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5839
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
