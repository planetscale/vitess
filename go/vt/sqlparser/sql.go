// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const FIRST = 57533
const AFTER = 57534
const BEGIN = 57535
const START = 57536
const TRANSACTION = 57537
const COMMIT = 57538
const ROLLBACK = 57539
const SAVEPOINT = 57540
const RELEASE = 57541
const WORK = 57542
const BIT = 57543
const TINYINT = 57544
const SMALLINT = 57545
const MEDIUMINT = 57546
const INT = 57547
const INTEGER = 57548
const BIGINT = 57549
const INTNUM = 57550
const REAL = 57551
const DOUBLE = 57552
const FLOAT_TYPE = 57553
const DECIMAL = 57554
const NUMERIC = 57555
const TIME = 57556
const TIMESTAMP = 57557
const DATETIME = 57558
const YEAR = 57559
const CHAR = 57560
const VARCHAR = 57561
const BOOL = 57562
const CHARACTER = 57563
const VARBINARY = 57564
const NCHAR = 57565
const TEXT = 57566
const TINYTEXT = 57567
const MEDIUMTEXT = 57568
const LONGTEXT = 57569
const BLOB = 57570
const TINYBLOB = 57571
const MEDIUMBLOB = 57572
const LONGBLOB = 57573
const JSON = 57574
const ENUM = 57575
const GEOMETRY = 57576
const POINT = 57577
const LINESTRING = 57578
const POLYGON = 57579
const GEOMETRYCOLLECTION = 57580
const MULTIPOINT = 57581
const MULTILINESTRING = 57582
const MULTIPOLYGON = 57583
const NULLX = 57584
const AUTO_INCREMENT = 57585
const APPROXNUM = 57586
const SIGNED = 57587
const UNSIGNED = 57588
const ZEROFILL = 57589
const COLLATION = 57590
const DATABASES = 57591
const SCHEMAS = 57592
const TABLES = 57593
const VITESS_METADATA = 57594
const VSCHEMA = 57595
const FULL = 57596
const PROCESSLIST = 57597
const COLUMNS = 57598
const FIELDS = 57599
const ENGINES = 57600
const PLUGINS = 57601
const EXTENDED = 57602
const KEYSPACES = 57603
const VITESS_KEYSPACES = 57604
const VITESS_SHARDS = 57605
const VITESS_TABLETS = 57606
const CODE = 57607
const PRIVILEGES = 57608
const FUNCTION = 57609
const NAMES = 57610
const CHARSET = 57611
const GLOBAL = 57612
const SESSION = 57613
const ISOLATION = 57614
const LEVEL = 57615
const READ = 57616
const WRITE = 57617
const ONLY = 57618
const REPEATABLE = 57619
const COMMITTED = 57620
const UNCOMMITTED = 57621
const SERIALIZABLE = 57622
const CURRENT_TIMESTAMP = 57623
const DATABASE = 57624
const CURRENT_DATE = 57625
const CURRENT_TIME = 57626
const LOCALTIME = 57627
const LOCALTIMESTAMP = 57628
const CURRENT_USER = 57629
const UTC_DATE = 57630
const UTC_TIME = 57631
const UTC_TIMESTAMP = 57632
const REPLACE = 57633
const CONVERT = 57634
const CAST = 57635
const SUBSTR = 57636
const SUBSTRING = 57637
const GROUP_CONCAT = 57638
const SEPARATOR = 57639
const TIMESTAMPADD = 57640
const TIMESTAMPDIFF = 57641
const MATCH = 57642
const AGAINST = 57643
const BOOLEAN = 57644
const LANGUAGE = 57645
const WITH = 57646
const QUERY = 57647
const EXPANSION = 57648
const UNUSED = 57649
const ARRAY = 57650
const CUME_DIST = 57651
const DESCRIPTION = 57652
const DENSE_RANK = 57653
const EMPTY = 57654
const EXCEPT = 57655
const FIRST_VALUE = 57656
const GROUPING = 57657
const GROUPS = 57658
const JSON_TABLE = 57659
const LAG = 57660
const LAST_VALUE = 57661
const LATERAL = 57662
const LEAD = 57663
const MEMBER = 57664
const NTH_VALUE = 57665
const NTILE = 57666
const OF = 57667
const OVER = 57668
const PERCENT_RANK = 57669
const RANK = 57670
const RECURSIVE = 57671
const ROW_NUMBER = 57672
const SYSTEM = 57673
const WINDOW = 57674
const ACTIVE = 57675
const ADMIN = 57676
const BUCKETS = 57677
const CLONE = 57678
const COMPONENT = 57679
const DEFINITION = 57680
const ENFORCED = 57681
const EXCLUDE = 57682
const FOLLOWING = 57683
const GEOMCOLLECTION = 57684
const GET_MASTER_PUBLIC_KEY = 57685
const HISTOGRAM = 57686
const HISTORY = 57687
const INACTIVE = 57688
const INVISIBLE = 57689
const LOCKED = 57690
const MASTER_COMPRESSION_ALGORITHMS = 57691
const MASTER_PUBLIC_KEY_PATH = 57692
const MASTER_TLS_CIPHERSUITES = 57693
const MASTER_ZSTD_COMPRESSION_LEVEL = 57694
const NESTED = 57695
const NETWORK_NAMESPACE = 57696
const NOWAIT = 57697
const NULLS = 57698
const OJ = 57699
const OLD = 57700
const OPTIONAL = 57701
const ORDINALITY = 57702
const ORGANIZATION = 57703
const OTHERS = 57704
const PATH = 57705
const PERSIST = 57706
const PERSIST_ONLY = 57707
const PRECEDING = 57708
const PRIVILEGE_CHECKS_USER = 57709
const PROCESS = 57710
const RANDOM = 57711
const REFERENCE = 57712
const REQUIRE_ROW_FORMAT = 57713
const RESOURCE = 57714
const RESPECT = 57715
const RESTART = 57716
const RETAIN = 57717
const REUSE = 57718
const ROLE = 57719
const SECONDARY = 57720
const SECONDARY_ENGINE = 57721
const SECONDARY_LOAD = 57722
const SECONDARY_UNLOAD = 57723
const SKIP = 57724
const SRID = 57725
const THREAD_PRIORITY = 57726
const TIES = 57727
const UNBOUNDED = 57728
const VCPU = 57729
const VISIBLE = 57730
const FORMAT = 57731
const TREE = 57732
const VITESS = 57733
const TRADITIONAL = 57734
const LOCAL = 57735
const LOW_PRIORITY = 57736

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 822,
	-2, 87,
	-1, 43,
	136, 111,
	238, 111,
	-2, 105,
	-1, 51,
	34, 369,
	155, 369,
	167, 369,
	195, 383,
	196, 383,
	-2, 371,
	-1, 56,
	157, 393,
	-2, 391,
	-1, 80,
	55, 436,
	-2, 444,
	-1, 104,
	136, 111,
	238, 111,
	-2, 106,
	-1, 112,
	160, 228,
	161, 228,
	-2, 272,
	-1, 454,
	143, 833,
	-2, 829,
	-1, 455,
	143, 834,
	-2, 830,
	-1, 472,
	55, 437,
	-2, 449,
	-1, 473,
	55, 438,
	-2, 450,
	-1, 493,
	111, 1128,
	-2, 80,
	-1, 494,
	111, 1028,
	-2, 81,
	-1, 499,
	111, 986,
	-2, 793,
	-1, 501,
	111, 1069,
	-2, 795,
	-1, 661,
	166, 36,
	171, 36,
	-2, 239,
	-1, 678,
	136, 111,
	238, 111,
	-2, 289,
	-1, 966,
	166, 37,
	171, 37,
	-2, 240,
	-1, 1076,
	143, 836,
	-2, 832,
	-1, 1168,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1533,
	5, 690,
	18, 690,
	20, 690,
	32, 690,
	82, 690,
	-2, 475,
	-1, 1733,
	45, 764,
	-2, 762,
}

const yyPrivate = 57344

const yyLast = 20249

var yyAct = [...]int{
	454, 1811, 1798, 1578, 1733, 1447, 1774, 1450, 1364, 1684,
	427, 1190, 413, 79, 3, 1661, 1513, 1514, 1332, 398,
	1510, 795, 1351, 732, 1229, 1365, 1422, 1224, 1186, 1209,
	1115, 1189, 1165, 959, 846, 1525, 1470, 691, 1423, 635,
	839, 1498, 1063, 1005, 1291, 498, 991, 118, 1231, 1415,
	130, 636, 367, 130, 964, 730, 876, 1154, 379, 1070,
	130, 1147, 866, 883, 849, 844, 77, 474, 1117, 869,
	1096, 833, 459, 31, 642, 867, 400, 1040, 465, 971,
	662, 1232, 1130, 880, 643, 389, 639, 882, 379, 972,
	658, 379, 130, 379, 659, 949, 873, 856, 1220, 396,
	1170, 75, 105, 106, 111, 80, 1008, 386, 808, 1026,
	117, 495, 74, 1784, 130, 809, 130, 1330, 119, 120,
	121, 1112, 1113, 130, 1730, 684, 8, 1686, 130, 7,
	1647, 6, 1817, 1771, 1810, 76, 1752, 1559, 1800, 1579,
	82, 83, 84, 85, 86, 87, 1236, 480, 484, 460,
	1720, 757, 756, 766, 767, 759, 760, 761, 762, 763,
	764, 765, 758, 1770, 657, 768, 1751, 1234, 1487, 387,
	388, 492, 358, 1608, 651, 439, 97, 445, 446, 443,
	444, 359, 442, 441, 440, 1331, 1437, 1540, 1541, 356,
	1436, 33, 447, 448, 68, 37, 38, 102, 123, 124,
	125, 1539, 669, 102, 113, 701, 115, 653, 652, 1395,
	1180, 699, 1394, 1181, 1182, 1396, 884, 728, 885, 710,
	711, 458, 457, 353, 119, 120, 121, 1407, 1203, 102,
	94, 1640, 365, 1452, 1754, 655, 98, 1210, 1233, 99,
	100, 1114, 712, 1599, 1471, 1597, 713, 710, 711, 377,
	119, 120, 121, 1025, 381, 1444, 1255, 375, 1073, 1568,
	1433, 1243, 1241, 1244, 1245, 67, 1569, 1027, 1028, 1029,
	1805, 952, 707, 344, 726, 980, 705, 706, 703, 704,
	679, 1455, 1270, 1454, 977, 1473, 1148, 1658, 640, 1815,
	979, 724, 702, 665, 727, 719, 1818, 721, 700, 1796,
	346, 347, 348, 1453, 363, 364, 370, 1701, 640, 683,
	360, 362, 371, 349, 350, 373, 372, 648, 352, 351,
	116, 345, 355, 368, 981, 1785, 978, 640, 486, 718,
	720, 638, 970, 969, 1333, 1335, 1475, 654, 1479, 1456,
	1474, 985, 1472, 101, 130, 733, 1432, 1477, 671, 101,
	1721, 1497, 1496, 1495, 649, 343, 1476, 122, 1269, 714,
	717, 1268, 112, 780, 781, 1737, 1310, 677, 379, 1478,
	1480, 1307, 1629, 1538, 1356, 101, 1320, 1299, 1176, 860,
	793, 688, 379, 379, 694, 695, 696, 697, 698, 916,
	1558, 671, 758, 1391, 1235, 768, 1187, 739, 761, 762,
	763, 764, 765, 758, 729, 1210, 768, 1435, 768, 1006,
	1009, 682, 723, 1126, 748, 693, 1750, 119, 120, 121,
	1047, 1022, 1334, 1712, 725, 716, 745, 1813, 1755, 960,
	1814, 1101, 1812, 1523, 1045, 1046, 1044, 90, 1702, 1700,
	715, 674, 748, 675, 1242, 369, 676, 104, 955, 953,
	886, 1766, 743, 1489, 1131, 1132, 1097, 1405, 130, 757,
	756, 766, 767, 759, 760, 761, 762, 763, 764, 765,
	758, 1550, 778, 768, 670, 837, 91, 1819, 746, 747,
	745, 1801, 1097, 379, 1317, 708, 130, 1420, 130, 130,
	1740, 379, 853, 69, 836, 904, 748, 379, 780, 781,
	1646, 647, 796, 780, 781, 746, 747, 745, 1802, 1645,
	742, 468, 1791, 740, 495, 741, 1292, 670, 1007, 1010,
	865, 692, 67, 748, 664, 667, 668, 834, 640, 746,
	747, 745, 661, 665, 1043, 485, 917, 685, 686, 1792,
	1564, 1306, 850, 1820, 747, 745, 1419, 748, 1500, 811,
	813, 815, 817, 819, 821, 822, 812, 814, 1418, 818,
	820, 748, 823, 1200, 831, 678, 1239, 1804, 838, 1803,
	1201, 1284, 1285, 1286, 1793, 1782, 930, 933, 934, 935,
	936, 937, 938, 469, 939, 940, 941, 942, 943, 918,
	919, 920, 921, 902, 903, 931, 1501, 905, 650, 906,
	907, 908, 909, 910, 911, 912, 913, 914, 915, 922,
	923, 924, 925, 926, 927, 928, 929, 881, 746, 747,
	745, 487, 488, 757, 756, 766, 767, 759, 760, 761,
	762, 763, 764, 765, 758, 130, 748, 768, 1764, 945,
	1035, 1037, 1038, 1674, 1643, 1617, 1502, 1036, 130, 1428,
	956, 957, 1416, 759, 760, 761, 762, 763, 764, 765,
	758, 379, 966, 768, 1128, 1281, 995, 746, 747, 745,
	975, 119, 120, 121, 379, 1491, 1571, 932, 130, 469,
	1305, 1577, 1786, 130, 1707, 748, 130, 990, 1304, 130,
	766, 767, 759, 760, 761, 762, 763, 764, 765, 758,
	963, 130, 768, 130, 1706, 490, 1657, 746, 747, 745,
	119, 120, 121, 1431, 1065, 379, 379, 130, 379, 379,
	130, 379, 379, 76, 974, 748, 1127, 1511, 994, 976,
	848, 119, 120, 121, 993, 1440, 1522, 997, 1198, 999,
	1522, 1001, 1002, 1003, 1004, 746, 747, 745, 973, 944,
	119, 120, 121, 1011, 1398, 416, 415, 418, 419, 420,
	421, 961, 1041, 748, 417, 422, 1577, 1748, 1624, 1064,
	1012, 1013, 965, 1015, 1016, 744, 1018, 1019, 1066, 986,
	1711, 653, 652, 1577, 1744, 752, 1554, 755, 1577, 1738,
	1577, 469, 379, 769, 770, 771, 772, 773, 774, 775,
	469, 753, 754, 751, 757, 756, 766, 767, 759, 760,
	761, 762, 763, 764, 765, 758, 33, 1074, 768, 1616,
	469, 1085, 1088, 1627, 469, 379, 379, 1098, 1042, 1020,
	1172, 1080, 1352, 119, 120, 121, 130, 1251, 78, 1076,
	1075, 1577, 1576, 1556, 1555, 1552, 1553, 1151, 379, 1552,
	1551, 1139, 469, 796, 33, 130, 948, 1446, 379, 1441,
	1442, 33, 130, 1172, 130, 1151, 469, 744, 469, 948,
	947, 1150, 130, 130, 893, 892, 1399, 1179, 1140, 379,
	1067, 1068, 379, 1352, 1074, 1166, 1359, 1106, 1107, 1385,
	67, 1173, 1323, 379, 379, 1648, 1077, 1171, 1322, 1175,
	1151, 1691, 495, 1139, 1139, 495, 1076, 1145, 1360, 1171,
	1129, 1110, 984, 462, 878, 1121, 1191, 656, 1141, 1745,
	1652, 1151, 67, 1663, 1173, 1133, 1656, 1635, 67, 950,
	1225, 1451, 1171, 1194, 1570, 67, 1258, 1211, 1212, 1213,
	1221, 1215, 1649, 1650, 1651, 1197, 1532, 1139, 1214, 379,
	1424, 1522, 967, 946, 92, 1143, 1425, 646, 1526, 1527,
	1250, 1664, 1177, 379, 1653, 1654, 1236, 1178, 379, 1169,
	1807, 1226, 975, 1799, 975, 1174, 1545, 455, 130, 130,
	130, 130, 130, 669, 1196, 130, 130, 67, 1195, 130,
	379, 1529, 1249, 1511, 1425, 1438, 1204, 1023, 1205, 1206,
	1207, 1208, 1253, 988, 1531, 1376, 1374, 130, 130, 130,
	1377, 1375, 1373, 1372, 1216, 1217, 1218, 1219, 1788, 1769,
	1378, 130, 1160, 1161, 130, 379, 1261, 131, 1262, 1503,
	131, 1227, 1238, 1237, 1341, 380, 847, 131, 1248, 1222,
	1223, 1628, 1257, 1275, 1350, 1274, 1256, 1349, 1760, 1279,
	1260, 1757, 1227, 1790, 1773, 1041, 1081, 1082, 1775, 1339,
	1087, 1090, 1091, 1781, 1780, 380, 1734, 1340, 380, 131,
	380, 756, 766, 767, 759, 760, 761, 762, 763, 764,
	765, 758, 1611, 1732, 768, 1105, 983, 456, 1108, 1109,
	96, 131, 1429, 131, 1424, 1156, 1159, 1160, 1161, 1157,
	131, 1158, 1162, 840, 1093, 131, 1156, 1159, 1160, 1161,
	1157, 130, 1158, 1162, 1404, 841, 1526, 1527, 1094, 130,
	1411, 1042, 1287, 757, 756, 766, 767, 759, 760, 761,
	762, 763, 764, 765, 758, 958, 114, 768, 891, 126,
	690, 130, 108, 1742, 1741, 1689, 1259, 968, 1622, 1124,
	1300, 460, 130, 130, 130, 130, 130, 1131, 1132, 1301,
	1246, 1361, 1338, 987, 130, 1708, 1316, 1164, 130, 1357,
	1366, 130, 130, 1354, 1345, 130, 130, 130, 463, 464,
	834, 1383, 1329, 1348, 466, 1795, 1794, 1337, 1397, 1778,
	379, 1347, 1761, 1621, 467, 1344, 78, 1620, 1506, 1352,
	462, 1400, 1311, 1386, 1353, 1809, 1808, 1388, 1308, 1355,
	475, 861, 854, 1191, 1367, 1809, 1735, 1370, 426, 475,
	1379, 1641, 993, 1125, 476, 76, 1078, 1079, 1368, 1369,
	1384, 1371, 1389, 476, 81, 1408, 1409, 379, 1410, 1610,
	1412, 1413, 1414, 1392, 73, 1, 1402, 851, 852, 478,
	1439, 477, 354, 1111, 832, 366, 472, 473, 478, 379,
	477, 975, 1797, 660, 1580, 1417, 1660, 1427, 129, 1122,
	1247, 374, 1421, 1230, 379, 1445, 663, 1188, 129, 1426,
	757, 756, 766, 767, 759, 760, 761, 762, 763, 764,
	765, 758, 89, 633, 768, 88, 666, 722, 1252, 1699,
	379, 483, 483, 1406, 1202, 1639, 1064, 1544, 1403, 1739,
	129, 899, 897, 898, 896, 1449, 901, 900, 895, 1024,
	376, 131, 1458, 1467, 1459, 1163, 887, 855, 1557, 1457,
	1296, 1297, 129, 1460, 129, 1468, 1199, 379, 1021, 361,
	709, 129, 1469, 1482, 1492, 380, 129, 130, 1481, 1488,
	357, 1314, 776, 1346, 1393, 496, 489, 379, 1466, 380,
	380, 1655, 1517, 379, 379, 95, 1076, 1075, 1512, 1779,
	1758, 1515, 1756, 1731, 1685, 1759, 1729, 1789, 1772, 1366,
	1467, 1123, 843, 1619, 1505, 1315, 130, 1521, 805, 1095,
	1443, 1254, 870, 399, 1034, 414, 411, 412, 1134, 1358,
	379, 750, 379, 397, 391, 1520, 1530, 1534, 862, 1536,
	1155, 1537, 1549, 1543, 1153, 1152, 874, 1528, 1535, 1524,
	868, 1138, 1434, 1191, 951, 1191, 1240, 1567, 645, 471,
	1565, 1542, 93, 130, 1092, 131, 1509, 1547, 1548, 130,
	1719, 1607, 379, 470, 59, 36, 383, 1783, 1765, 735,
	1561, 479, 1581, 379, 379, 379, 30, 130, 1562, 1563,
	380, 1560, 29, 131, 1574, 131, 131, 28, 380, 23,
	22, 1575, 21, 20, 380, 19, 25, 18, 17, 16,
	107, 1573, 103, 46, 43, 41, 109, 110, 44, 40,
	680, 27, 26, 15, 14, 13, 1586, 1587, 1294, 12,
	11, 10, 1295, 1595, 9, 5, 4, 738, 24, 794,
	2, 0, 0, 1302, 1303, 0, 0, 0, 0, 1309,
	0, 0, 1312, 1313, 0, 0, 0, 0, 0, 0,
	1319, 1618, 0, 1623, 1321, 0, 0, 1324, 1325, 1326,
	1327, 1328, 1366, 379, 0, 0, 0, 1590, 1632, 0,
	0, 0, 0, 0, 1400, 0, 1631, 0, 1638, 0,
	0, 0, 129, 0, 0, 0, 1191, 1592, 1593, 1637,
	1594, 0, 0, 1596, 0, 1598, 0, 0, 379, 0,
	379, 1642, 0, 1644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1667, 0, 0, 1381, 1382, 0,
	0, 0, 0, 1662, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 379, 379, 379, 130, 379, 1677, 1679,
	1680, 0, 0, 1666, 0, 131, 0, 0, 379, 0,
	379, 1665, 0, 0, 0, 1515, 379, 0, 380, 1515,
	1692, 1697, 1690, 1688, 0, 1694, 1681, 1683, 0, 0,
	0, 380, 0, 0, 1703, 131, 0, 379, 0, 130,
	131, 0, 1709, 131, 379, 130, 131, 0, 0, 1713,
	0, 1704, 1605, 1705, 0, 0, 129, 0, 131, 0,
	131, 0, 0, 0, 0, 0, 1673, 0, 0, 0,
	483, 0, 380, 380, 131, 380, 380, 131, 380, 380,
	1728, 0, 1515, 0, 129, 0, 129, 877, 1736, 0,
	1696, 0, 379, 379, 0, 0, 1698, 0, 0, 0,
	0, 0, 1743, 0, 1747, 0, 0, 1746, 1464, 1465,
	0, 0, 0, 0, 0, 1662, 1191, 0, 379, 1753,
	0, 0, 0, 0, 1762, 0, 379, 0, 0, 0,
	0, 1767, 0, 0, 0, 1366, 1768, 0, 0, 0,
	0, 1777, 1776, 0, 0, 0, 0, 0, 0, 380,
	0, 0, 1787, 0, 757, 756, 766, 767, 759, 760,
	761, 762, 763, 764, 765, 758, 0, 0, 768, 425,
	0, 0, 0, 0, 1518, 0, 0, 0, 0, 0,
	1806, 0, 380, 380, 0, 0, 0, 0, 0, 0,
	0, 1816, 0, 131, 0, 1533, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 482, 0, 0,
	0, 0, 131, 0, 0, 380, 0, 0, 0, 131,
	0, 131, 0, 0, 0, 0, 0, 378, 0, 131,
	131, 0, 0, 129, 0, 0, 380, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 129, 1604, 0, 0,
	380, 380, 0, 0, 0, 0, 0, 497, 0, 0,
	637, 0, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 390, 0, 0, 0, 0, 129, 0, 1589, 0,
	0, 129, 1591, 0, 129, 0, 0, 992, 0, 0,
	0, 0, 0, 1600, 1601, 0, 0, 0, 0, 129,
	0, 129, 0, 0, 0, 1603, 380, 0, 0, 0,
	1615, 0, 0, 0, 0, 129, 0, 0, 129, 0,
	380, 0, 0, 0, 0, 380, 0, 0, 1625, 1626,
	0, 0, 1630, 1602, 0, 131, 131, 131, 131, 131,
	0, 0, 131, 131, 0, 0, 131, 380, 0, 757,
	756, 766, 767, 759, 760, 761, 762, 763, 764, 765,
	758, 0, 0, 768, 131, 131, 131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 131, 0,
	0, 131, 380, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 992, 0, 0, 0, 483, 483, 0, 0,
	483, 483, 483, 0, 0, 0, 1100, 757, 756, 766,
	767, 759, 760, 761, 762, 763, 764, 765, 758, 0,
	0, 768, 0, 0, 1678, 483, 483, 483, 483, 483,
	0, 0, 0, 0, 1119, 757, 756, 766, 767, 759,
	760, 761, 762, 763, 764, 765, 758, 0, 0, 768,
	0, 0, 0, 129, 0, 0, 0, 0, 0, 992,
	129, 0, 129, 0, 0, 0, 393, 0, 131, 0,
	129, 129, 0, 0, 0, 0, 131, 0, 0, 0,
	1715, 1716, 1717, 1718, 0, 1722, 0, 1723, 1724, 1725,
	0, 1726, 1727, 0, 0, 0, 0, 0, 131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	131, 131, 131, 131, 0, 0, 0, 0, 0, 0,
	0, 131, 0, 0, 0, 131, 0, 0, 131, 131,
	0, 1749, 131, 131, 131, 1461, 0, 497, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 734, 736, 0, 0, 757, 756, 766, 767, 759,
	760, 761, 762, 763, 764, 765, 758, 835, 0, 768,
	0, 0, 0, 0, 0, 0, 129, 129, 129, 129,
	129, 0, 0, 129, 129, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 380, 0, 0, 0, 0, 0,
	749, 0, 0, 0, 0, 1276, 1277, 129, 0, 0,
	0, 0, 0, 0, 0, 0, 380, 128, 0, 129,
	0, 0, 129, 0, 0, 0, 0, 382, 0, 0,
	0, 380, 0, 0, 0, 0, 390, 0, 0, 0,
	0, 0, 0, 0, 0, 806, 0, 0, 0, 0,
	0, 0, 858, 0, 0, 0, 0, 380, 0, 641,
	497, 0, 0, 0, 0, 0, 888, 0, 0, 0,
	483, 483, 0, 0, 842, 845, 0, 0, 0, 0,
	0, 672, 0, 673, 0, 0, 0, 0, 0, 0,
	681, 483, 0, 0, 380, 687, 0, 0, 0, 0,
	0, 0, 0, 0, 131, 0, 0, 0, 0, 129,
	0, 0, 0, 0, 380, 0, 0, 1119, 0, 0,
	380, 380, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 428, 32, 0, 0, 0, 0, 0, 483, 129,
	0, 0, 0, 131, 0, 0, 0, 0, 0, 1100,
	129, 129, 129, 129, 129, 0, 0, 380, 1293, 380,
	0, 0, 1380, 0, 32, 0, 129, 0, 0, 129,
	129, 0, 0, 129, 1390, 992, 0, 0, 757, 756,
	766, 767, 759, 760, 761, 762, 763, 764, 765, 758,
	131, 0, 768, 0, 0, 0, 131, 0, 0, 380,
	0, 0, 0, 0, 0, 0, 0, 461, 0, 0,
	380, 380, 380, 0, 131, 757, 756, 766, 767, 759,
	760, 761, 762, 763, 764, 765, 758, 0, 0, 768,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1100, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 782, 783,
	784, 785, 786, 787, 788, 789, 790, 791, 0, 0,
	0, 0, 0, 0, 497, 497, 0, 497, 497, 0,
	497, 497, 0, 0, 0, 0, 0, 483, 0, 0,
	380, 996, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 689, 0, 0, 0, 0, 0, 0, 0, 992,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 380, 0, 380, 0, 0,
	0, 0, 0, 0, 0, 129, 0, 0, 0, 0,
	0, 0, 1030, 1031, 1032, 1033, 0, 0, 1100, 0,
	0, 1069, 0, 497, 0, 0, 0, 0, 0, 0,
	380, 380, 380, 131, 380, 0, 0, 1099, 0, 0,
	0, 0, 0, 0, 129, 380, 0, 380, 0, 0,
	0, 0, 0, 380, 1103, 1104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1083, 1084, 0,
	0, 0, 0, 0, 380, 0, 131, 1135, 0, 0,
	0, 380, 131, 0, 0, 0, 0, 858, 0, 0,
	497, 129, 0, 0, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 1100, 0, 0, 0, 0, 497, 0,
	0, 497, 0, 864, 0, 129, 875, 0, 0, 0,
	0, 0, 497, 637, 0, 0, 0, 0, 0, 380,
	380, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1185, 380, 0, 0, 0, 731,
	0, 0, 0, 380, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 32, 0, 0, 644, 0,
	0, 1100, 0, 0, 0, 0, 777, 779, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1228, 0, 0, 792, 0, 497,
	0, 797, 798, 799, 800, 801, 802, 803, 804, 0,
	807, 810, 810, 810, 816, 810, 810, 816, 810, 824,
	825, 826, 827, 828, 829, 830, 0, 0, 0, 0,
	0, 0, 0, 32, 1283, 0, 0, 0, 0, 0,
	0, 0, 894, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1119, 954, 0, 1039, 0, 871,
	1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057,
	1058, 1059, 1060, 1061, 1062, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 0, 0,
	875, 0, 0, 989, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 129, 0, 0, 0, 0, 998, 0,
	1000, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 1014, 0, 0, 1017, 0, 0,
	0, 0, 33, 34, 35, 68, 37, 38, 0, 0,
	0, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	0, 0, 72, 0, 0, 0, 0, 39, 65, 66,
	1099, 63, 0, 0, 0, 0, 0, 64, 0, 0,
	0, 0, 0, 0, 1100, 1342, 1343, 845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 0, 0, 497,
	0, 0, 0, 0, 0, 0, 67, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 731, 1430, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1142, 0, 0, 1099, 0, 0, 1448, 1146,
	0, 1149, 42, 45, 48, 47, 50, 0, 62, 0,
	1168, 0, 0, 497, 0, 0, 731, 731, 0, 731,
	731, 0, 731, 731, 0, 0, 0, 0, 0, 0,
	0, 51, 71, 70, 0, 0, 60, 61, 49, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	497, 0, 0, 0, 0, 0, 53, 54, 0, 55,
	56, 57, 58, 0, 0, 0, 1499, 0, 0, 0,
	0, 0, 1288, 1289, 1290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1490, 497, 0, 0, 1099,
	0, 0, 1519, 1499, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1263, 1264, 1265, 1266, 1267,
	0, 0, 1271, 1272, 0, 0, 1273, 0, 0, 0,
	1507, 0, 0, 0, 0, 0, 0, 0, 0, 497,
	0, 497, 0, 0, 0, 0, 1278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1280, 0,
	0, 1282, 0, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 1167, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 1099, 0, 0, 0, 0, 0,
	0, 0, 1582, 1583, 1584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1099, 0, 0, 0, 0, 0, 0, 1609,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 497, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 390, 0, 0, 0, 0, 0,
	0, 1633, 0, 0, 1634, 0, 0, 1636, 0, 1387,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 497,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1462,
	1463, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1483, 1484, 0, 1485, 1486, 0,
	0, 0, 1448, 1448, 1448, 0, 1682, 0, 0, 1493,
	1494, 0, 0, 0, 0, 0, 0, 1693, 0, 1695,
	0, 0, 0, 0, 0, 1448, 1298, 0, 0, 461,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1448, 0, 1687, 390,
	0, 0, 0, 1448, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1546, 871, 0, 0, 0, 0, 0, 0, 1362,
	1363, 497, 497, 871, 871, 871, 871, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1167,
	0, 0, 871, 0, 0, 1099, 871, 1763, 0, 0,
	0, 0, 0, 0, 1504, 1448, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 0, 731, 1572, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1585, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1668,
	1669, 1670, 1671, 1672, 0, 0, 0, 1675, 1676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1516, 0, 32, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1606,
	0, 0, 0, 0, 0, 0, 1710, 1612, 1613, 1614,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1516, 0, 32, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1516, 617, 604, 0, 0, 556, 620,
	527, 545, 629, 547, 550, 588, 509, 569, 242, 542,
	32, 531, 505, 538, 506, 529, 558, 171, 562, 526,
	606, 572, 619, 206, 0, 532, 254, 590, 285, 161,
	214, 212, 306, 176, 172, 170, 160, 193, 219, 253,
	302, 247, 626, 209, 579, 0, 294, 228, 0, 0,
	0, 560, 609, 567, 600, 555, 589, 516, 578, 621,
	543, 586, 622, 197, 159, 137, 239, 295, 178, 0,
	0, 0, 119, 120, 121, 0, 1192, 1193, 0, 0,
	0, 0, 0, 155, 0, 583, 616, 540, 585, 587,
	632, 504, 580, 0, 507, 510, 628, 612, 535, 536,
	1401, 0, 0, 0, 0, 0, 0, 559, 568, 597,
	553, 0, 0, 0, 0, 0, 0, 0, 0, 533,
	0, 577, 0, 0, 0, 512, 508, 0, 0, 0,
	0, 557, 0, 0, 0, 515, 0, 534, 598, 0,
	502, 184, 602, 611, 554, 330, 615, 552, 551, 618,
	593, 513, 608, 546, 205, 511, 202, 133, 146, 0,
	544, 238, 272, 276, 607, 530, 539, 162, 537, 274,
	251, 319, 576, 255, 273, 210, 308, 266, 318, 331,
	332, 168, 232, 325, 303, 328, 340, 147, 165, 245,
	299, 322, 291, 227, 305, 201, 290, 183, 136, 139,
	301, 316, 156, 284, 0, 0, 0, 141, 314, 298,
	225, 198, 199, 140, 0, 270, 169, 181, 164, 241,
	311, 312, 163, 341, 148, 327, 143, 149, 326, 234,
	307, 315, 226, 218, 142, 313, 224, 217, 204, 175,
	189, 264, 213, 265, 190, 230, 229, 231, 0, 138,
	0, 296, 323, 342, 153, 525, 603, 304, 336, 339,
	0, 267, 154, 182, 174, 263, 180, 207, 335, 337,
	338, 152, 261, 187, 233, 150, 192, 292, 203, 211,
	595, 631, 250, 275, 157, 321, 293, 520, 524, 518,
	519, 570, 571, 521, 623, 624, 625, 599, 514, 0,
	522, 523, 0, 605, 613, 614, 575, 132, 144, 208,
	627, 268, 179, 324, 503, 517, 167, 528, 0, 0,
	541, 548, 549, 561, 563, 564, 565, 566, 574, 581,
	582, 584, 591, 592, 594, 596, 601, 610, 630, 134,
	135, 145, 151, 158, 166, 173, 177, 185, 188, 191,
	194, 195, 196, 200, 216, 220, 221, 222, 223, 235,
	236, 237, 240, 243, 244, 246, 248, 249, 252, 256,
	257, 258, 259, 260, 262, 269, 271, 277, 278, 279,
	280, 281, 282, 283, 286, 287, 288, 289, 297, 300,
	309, 310, 320, 329, 333, 186, 317, 334, 0, 215,
	573, 617, 604, 0, 0, 556, 620, 527, 545, 629,
	547, 550, 588, 509, 569, 242, 542, 0, 531, 505,
	538, 506, 529, 558, 171, 562, 526, 606, 572, 619,
	206, 0, 532, 254, 590, 285, 161, 214, 212, 306,
	176, 172, 170, 160, 193, 219, 253, 302, 247, 626,
	209, 579, 0, 294, 228, 0, 0, 0, 560, 609,
	567, 600, 555, 589, 516, 578, 621, 543, 586, 622,
	197, 159, 137, 239, 295, 178, 0, 0, 0, 119,
	120, 121, 0, 1192, 1193, 0, 0, 0, 0, 0,
	155, 0, 583, 616, 540, 585, 587, 632, 504, 580,
	0, 507, 510, 628, 612, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 559, 568, 597, 553, 0, 0,
	0, 0, 0, 0, 0, 0, 533, 0, 577, 0,
	0, 0, 512, 508, 0, 0, 0, 0, 557, 0,
	0, 0, 515, 0, 534, 598, 0, 502, 184, 602,
	611, 554, 330, 615, 552, 551, 618, 593, 513, 608,
	546, 205, 511, 202, 133, 146, 0, 544, 238, 272,
	276, 607, 530, 539, 162, 537, 274, 251, 319, 576,
	255, 273, 210, 308, 266, 318, 331, 332, 168, 232,
	325, 303, 328, 340, 147, 165, 245, 299, 322, 291,
	227, 305, 201, 290, 183, 136, 139, 301, 316, 156,
	284, 0, 0, 0, 141, 314, 298, 225, 198, 199,
	140, 0, 270, 169, 181, 164, 241, 311, 312, 163,
	341, 148, 327, 143, 149, 326, 234, 307, 315, 226,
	218, 142, 313, 224, 217, 204, 175, 189, 264, 213,
	265, 190, 230, 229, 231, 0, 138, 0, 296, 323,
	342, 153, 525, 603, 304, 336, 339, 0, 267, 154,
	182, 174, 263, 180, 207, 335, 337, 338, 152, 261,
	187, 233, 150, 192, 292, 203, 211, 595, 631, 250,
	275, 157, 321, 293, 520, 524, 518, 519, 570, 571,
	521, 623, 624, 625, 599, 514, 0, 522, 523, 0,
	605, 613, 614, 575, 132, 144, 208, 627, 268, 179,
	324, 503, 517, 167, 528, 0, 0, 541, 548, 549,
	561, 563, 564, 565, 566, 574, 581, 582, 584, 591,
	592, 594, 596, 601, 610, 630, 134, 135, 145, 151,
	158, 166, 173, 177, 185, 188, 191, 194, 195, 196,
	200, 216, 220, 221, 222, 223, 235, 236, 237, 240,
	243, 244, 246, 248, 249, 252, 256, 257, 258, 259,
	260, 262, 269, 271, 277, 278, 279, 280, 281, 282,
	283, 286, 287, 288, 289, 297, 300, 309, 310, 320,
	329, 333, 186, 317, 334, 0, 215, 573, 617, 604,
	0, 0, 556, 620, 527, 545, 629, 547, 550, 588,
	509, 569, 242, 542, 0, 531, 505, 538, 506, 529,
	558, 171, 562, 526, 606, 572, 619, 206, 0, 532,
	254, 590, 285, 161, 214, 212, 306, 176, 172, 170,
	160, 193, 219, 253, 302, 247, 626, 209, 579, 0,
	294, 228, 0, 0, 0, 560, 609, 567, 600, 555,
	589, 516, 578, 621, 543, 586, 622, 197, 159, 137,
	239, 295, 178, 0, 0, 0, 119, 120, 121, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 583,
	616, 540, 585, 587, 632, 504, 580, 0, 507, 510,
	628, 612, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 559, 568, 597, 553, 0, 0, 0, 0, 0,
	0, 1508, 0, 533, 0, 577, 0, 0, 0, 512,
	508, 0, 0, 0, 0, 557, 0, 0, 0, 515,
	0, 534, 598, 0, 502, 184, 602, 611, 554, 330,
	615, 552, 551, 618, 593, 513, 608, 546, 205, 511,
	202, 133, 146, 0, 544, 238, 272, 276, 607, 530,
	539, 162, 537, 274, 251, 319, 576, 255, 273, 210,
	308, 266, 318, 331, 332, 168, 232, 325, 303, 328,
	340, 147, 165, 245, 299, 322, 291, 227, 305, 201,
	290, 183, 136, 139, 301, 316, 156, 284, 0, 0,
	0, 141, 314, 298, 225, 198, 199, 140, 0, 270,
	169, 181, 164, 241, 311, 312, 163, 341, 148, 327,
	143, 149, 326, 234, 307, 315, 226, 218, 142, 313,
	224, 217, 204, 175, 189, 264, 213, 265, 190, 230,
	229, 231, 0, 138, 0, 296, 323, 342, 153, 525,
	603, 304, 336, 339, 0, 267, 154, 182, 174, 263,
	180, 207, 335, 337, 338, 152, 261, 187, 233, 150,
	192, 292, 203, 211, 595, 631, 250, 275, 157, 321,
	293, 520, 524, 518, 519, 570, 571, 521, 623, 624,
	625, 599, 514, 0, 522, 523, 0, 605, 613, 614,
	575, 132, 144, 208, 627, 268, 179, 324, 503, 517,
	167, 528, 0, 0, 541, 548, 549, 561, 563, 564,
	565, 566, 574, 581, 582, 584, 591, 592, 594, 596,
	601, 610, 630, 134, 135, 145, 151, 158, 166, 173,
	177, 185, 188, 191, 194, 195, 196, 200, 216, 220,
	221, 222, 223, 235, 236, 237, 240, 243, 244, 246,
	248, 249, 252, 256, 257, 258, 259, 260, 262, 269,
	271, 277, 278, 279, 280, 281, 282, 283, 286, 287,
	288, 289, 297, 300, 309, 310, 320, 329, 333, 186,
	317, 334, 0, 215, 573, 617, 604, 0, 0, 556,
	620, 527, 545, 629, 547, 550, 588, 509, 569, 242,
	542, 0, 531, 505, 538, 506, 529, 558, 171, 562,
	526, 606, 572, 619, 206, 0, 532, 254, 590, 285,
	161, 214, 212, 306, 176, 172, 170, 160, 193, 219,
	253, 302, 247, 626, 209, 579, 0, 294, 228, 0,
	0, 0, 560, 609, 567, 600, 555, 589, 516, 578,
	621, 543, 586, 622, 197, 159, 137, 239, 295, 178,
	67, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 0, 583, 616, 540, 585,
	587, 632, 504, 580, 0, 507, 510, 628, 612, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 559, 568,
	597, 553, 0, 0, 0, 0, 0, 0, 0, 0,
	533, 0, 577, 0, 0, 0, 512, 508, 0, 0,
	0, 0, 557, 0, 0, 0, 515, 0, 534, 598,
	0, 502, 184, 602, 611, 554, 330, 615, 552, 551,
	618, 593, 513, 608, 546, 205, 511, 202, 133, 146,
	0, 544, 238, 272, 276, 607, 530, 539, 162, 537,
	274, 251, 319, 576, 255, 273, 210, 308, 266, 318,
	331, 332, 168, 232, 325, 303, 328, 340, 147, 165,
	245, 299, 322, 291, 227, 305, 201, 290, 183, 136,
	139, 301, 316, 156, 284, 0, 0, 0, 141, 314,
	298, 225, 198, 199, 140, 0, 270, 169, 181, 164,
	241, 311, 312, 163, 341, 148, 327, 143, 149, 326,
	234, 307, 315, 226, 218, 142, 313, 224, 217, 204,
	175, 189, 264, 213, 265, 190, 230, 229, 231, 0,
	138, 0, 296, 323, 342, 153, 525, 603, 304, 336,
	339, 0, 267, 154, 182, 174, 263, 180, 207, 335,
	337, 338, 152, 261, 187, 233, 150, 192, 292, 203,
	211, 595, 631, 250, 275, 157, 321, 293, 520, 524,
	518, 519, 570, 571, 521, 623, 624, 625, 599, 514,
	0, 522, 523, 0, 605, 613, 614, 575, 132, 144,
	208, 627, 268, 179, 324, 503, 517, 167, 528, 0,
	0, 541, 548, 549, 561, 563, 564, 565, 566, 574,
	581, 582, 584, 591, 592, 594, 596, 601, 610, 630,
	134, 135, 145, 151, 158, 166, 173, 177, 185, 188,
	191, 194, 195, 196, 200, 216, 220, 221, 222, 223,
	235, 236, 237, 240, 243, 244, 246, 248, 249, 252,
	256, 257, 258, 259, 260, 262, 269, 271, 277, 278,
	279, 280, 281, 282, 283, 286, 287, 288, 289, 297,
	300, 309, 310, 320, 329, 333, 186, 317, 334, 0,
	215, 573, 617, 604, 0, 0, 556, 620, 527, 545,
	629, 547, 550, 588, 509, 569, 242, 542, 0, 531,
	505, 538, 506, 529, 558, 171, 562, 526, 606, 572,
	619, 206, 0, 532, 254, 590, 285, 161, 214, 212,
	306, 176, 172, 170, 160, 193, 219, 253, 302, 247,
	626, 209, 579, 0, 294, 228, 0, 0, 0, 560,
	609, 567, 600, 555, 589, 516, 578, 621, 543, 586,
	622, 197, 159, 137, 239, 295, 178, 0, 0, 0,
	119, 120, 121, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 0, 583, 616, 540, 585, 587, 632, 504,
	580, 0, 507, 510, 628, 612, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 559, 568, 597, 553, 0,
	0, 0, 0, 0, 0, 1391, 0, 533, 0, 577,
	0, 0, 0, 512, 508, 0, 0, 0, 0, 557,
	0, 0, 0, 515, 0, 534, 598, 0, 502, 184,
	602, 611, 554, 330, 615, 552, 551, 618, 593, 513,
	608, 546, 205, 511, 202, 133, 146, 0, 544, 238,
	272, 276, 607, 530, 539, 162, 537, 274, 251, 319,
	576, 255, 273, 210, 308, 266, 318, 331, 332, 168,
	232, 325, 303, 328, 340, 147, 165, 245, 299, 322,
	291, 227, 305, 201, 290, 183, 136, 139, 301, 316,
	156, 284, 0, 0, 0, 141, 314, 298, 225, 198,
	199, 140, 0, 270, 169, 181, 164, 241, 311, 312,
	163, 341, 148, 327, 143, 149, 326, 234, 307, 315,
	226, 218, 142, 313, 224, 217, 204, 175, 189, 264,
	213, 265, 190, 230, 229, 231, 0, 138, 0, 296,
	323, 342, 153, 525, 603, 304, 336, 339, 0, 267,
	154, 182, 174, 263, 180, 207, 335, 337, 338, 152,
	261, 187, 233, 150, 192, 292, 203, 211, 595, 631,
	250, 275, 157, 321, 293, 520, 524, 518, 519, 570,
	571, 521, 623, 624, 625, 599, 514, 0, 522, 523,
	0, 605, 613, 614, 575, 132, 144, 208, 627, 268,
	179, 324, 503, 517, 167, 528, 0, 0, 541, 548,
	549, 561, 563, 564, 565, 566, 574, 581, 582, 584,
	591, 592, 594, 596, 601, 610, 630, 134, 135, 145,
	151, 158, 166, 173, 177, 185, 188, 191, 194, 195,
	196, 200, 216, 220, 221, 222, 223, 235, 236, 237,
	240, 243, 244, 246, 248, 249, 252, 256, 257, 258,
	259, 260, 262, 269, 271, 277, 278, 279, 280, 281,
	282, 283, 286, 287, 288, 289, 297, 300, 309, 310,
	320, 329, 333, 186, 317, 334, 0, 215, 573, 617,
	604, 0, 0, 556, 620, 527, 545, 629, 547, 550,
	588, 509, 569, 242, 542, 0, 531, 505, 538, 506,
	529, 558, 171, 562, 526, 606, 572, 619, 206, 0,
	532, 254, 590, 285, 161, 214, 212, 306, 176, 172,
	170, 160, 193, 219, 253, 302, 247, 626, 209, 579,
	0, 294, 228, 0, 0, 0, 560, 609, 567, 600,
	555, 589, 516, 578, 621, 543, 586, 622, 197, 159,
	137, 239, 295, 178, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 0,
	583, 616, 540, 585, 587, 632, 504, 580, 0, 507,
	510, 628, 612, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 559, 568, 597, 553, 0, 0, 0, 0,
	0, 0, 1144, 0, 533, 0, 577, 0, 0, 0,
	512, 508, 0, 0, 0, 0, 557, 0, 0, 0,
	515, 0, 534, 598, 0, 502, 184, 602, 611, 554,
	330, 615, 552, 551, 618, 593, 513, 608, 546, 205,
	511, 202, 133, 146, 0, 544, 238, 272, 276, 607,
	530, 539, 162, 537, 274, 251, 319, 576, 255, 273,
	210, 308, 266, 318, 331, 332, 168, 232, 325, 303,
	328, 340, 147, 165, 245, 299, 322, 291, 227, 305,
	201, 290, 183, 136, 139, 301, 316, 156, 284, 0,
	0, 0, 141, 314, 298, 225, 198, 199, 140, 0,
	270, 169, 181, 164, 241, 311, 312, 163, 341, 148,
	327, 143, 149, 326, 234, 307, 315, 226, 218, 142,
	313, 224, 217, 204, 175, 189, 264, 213, 265, 190,
	230, 229, 231, 0, 138, 0, 296, 323, 342, 153,
	525, 603, 304, 336, 339, 0, 267, 154, 182, 174,
	263, 180, 207, 335, 337, 338, 152, 261, 187, 233,
	150, 192, 292, 203, 211, 595, 631, 250, 275, 157,
	321, 293, 520, 524, 518, 519, 570, 571, 521, 623,
	624, 625, 599, 514, 0, 522, 523, 0, 605, 613,
	614, 575, 132, 144, 208, 627, 268, 179, 324, 503,
	517, 167, 528, 0, 0, 541, 548, 549, 561, 563,
	564, 565, 566, 574, 581, 582, 584, 591, 592, 594,
	596, 601, 610, 630, 134, 135, 145, 151, 158, 166,
	173, 177, 185, 188, 191, 194, 195, 196, 200, 216,
	220, 221, 222, 223, 235, 236, 237, 240, 243, 244,
	246, 248, 249, 252, 256, 257, 258, 259, 260, 262,
	269, 271, 277, 278, 279, 280, 281, 282, 283, 286,
	287, 288, 289, 297, 300, 309, 310, 320, 329, 333,
	186, 317, 334, 0, 215, 573, 617, 604, 0, 0,
	556, 620, 527, 545, 629, 547, 550, 588, 509, 569,
	242, 542, 0, 531, 505, 538, 506, 529, 558, 171,
	562, 526, 606, 572, 619, 206, 0, 532, 254, 590,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 626, 209, 579, 0, 294, 228,
	0, 0, 0, 560, 609, 567, 600, 555, 589, 516,
	578, 621, 543, 586, 622, 197, 159, 137, 239, 295,
	178, 0, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 583, 616, 540,
	585, 587, 632, 504, 580, 0, 507, 510, 628, 612,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 559,
	568, 597, 553, 0, 0, 0, 0, 0, 0, 0,
	0, 533, 0, 577, 0, 0, 0, 512, 508, 0,
	0, 0, 0, 557, 0, 0, 0, 515, 0, 534,
	598, 0, 502, 184, 602, 611, 554, 330, 615, 552,
	551, 618, 593, 513, 608, 546, 205, 511, 202, 133,
	146, 0, 544, 238, 272, 276, 607, 530, 539, 162,
	537, 274, 251, 319, 576, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 525, 603, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 595, 631, 250, 275, 157, 321, 293, 520,
	524, 518, 519, 570, 571, 521, 623, 624, 625, 599,
	514, 0, 522, 523, 0, 605, 613, 614, 575, 132,
	144, 208, 627, 268, 179, 324, 503, 517, 167, 528,
	0, 0, 541, 548, 549, 561, 563, 564, 565, 566,
	574, 581, 582, 584, 591, 592, 594, 596, 601, 610,
	630, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	0, 215, 573, 617, 604, 0, 0, 556, 620, 527,
	545, 629, 547, 550, 588, 509, 569, 242, 542, 0,
	531, 505, 538, 506, 529, 558, 171, 562, 526, 606,
	572, 619, 206, 0, 532, 254, 590, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 626, 209, 579, 0, 294, 228, 0, 0, 0,
	560, 609, 567, 600, 555, 589, 516, 578, 621, 543,
	586, 622, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 583, 616, 540, 585, 587, 632,
	504, 580, 0, 507, 510, 628, 612, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 559, 568, 597, 553,
	0, 0, 0, 0, 0, 0, 0, 0, 533, 0,
	577, 0, 0, 0, 512, 508, 0, 0, 0, 0,
	557, 0, 0, 0, 515, 0, 534, 598, 0, 502,
	184, 602, 611, 554, 330, 615, 552, 551, 618, 593,
	513, 608, 546, 205, 511, 202, 133, 146, 0, 544,
	238, 272, 276, 607, 530, 539, 162, 537, 274, 251,
	319, 576, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 500, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 525, 603, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 501, 499, 494, 493, 203, 211, 595,
	631, 250, 275, 157, 321, 293, 520, 524, 518, 519,
	570, 571, 521, 623, 624, 625, 599, 514, 0, 522,
	523, 0, 605, 613, 614, 575, 132, 144, 208, 627,
	268, 179, 324, 503, 517, 167, 528, 0, 0, 541,
	548, 549, 561, 563, 564, 565, 566, 574, 581, 582,
	584, 591, 592, 594, 596, 601, 610, 630, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 0, 215, 573,
	617, 604, 0, 0, 556, 620, 527, 545, 629, 547,
	550, 588, 509, 569, 242, 542, 0, 531, 505, 538,
	506, 529, 558, 171, 562, 526, 606, 572, 619, 206,
	0, 532, 254, 590, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 626, 209,
	579, 0, 294, 228, 0, 0, 0, 560, 609, 567,
	600, 555, 589, 516, 578, 621, 543, 586, 622, 197,
	159, 137, 239, 295, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 583, 616, 540, 585, 587, 632, 504, 580, 0,
	507, 510, 628, 612, 535, 536, 0, 0, 0, 0,
	0, 0, 0, 559, 568, 597, 553, 0, 0, 0,
	0, 0, 0, 0, 0, 533, 0, 577, 0, 0,
	0, 512, 508, 0, 0, 0, 0, 557, 0, 0,
	0, 515, 0, 534, 598, 0, 502, 184, 602, 611,
	554, 330, 615, 552, 551, 618, 593, 513, 608, 546,
	205, 511, 202, 133, 146, 0, 544, 238, 272, 276,
	607, 530, 539, 162, 537, 274, 251, 319, 576, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 879, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 500, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 525, 603, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	501, 499, 494, 493, 203, 211, 595, 631, 250, 275,
	157, 321, 293, 520, 524, 518, 519, 570, 571, 521,
	623, 624, 625, 599, 514, 0, 522, 523, 0, 605,
	613, 614, 575, 132, 144, 208, 627, 268, 179, 324,
	503, 517, 167, 528, 0, 0, 541, 548, 549, 561,
	563, 564, 565, 566, 574, 581, 582, 584, 591, 592,
	594, 596, 601, 610, 630, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 0, 215, 573, 617, 604, 0,
	0, 556, 620, 527, 545, 629, 547, 550, 588, 509,
	569, 242, 542, 0, 531, 505, 538, 506, 529, 558,
	171, 562, 526, 606, 572, 619, 206, 0, 532, 254,
	590, 285, 161, 214, 212, 306, 176, 172, 170, 160,
	193, 219, 253, 302, 247, 626, 209, 579, 0, 294,
	228, 0, 0, 0, 560, 609, 567, 600, 555, 589,
	516, 578, 621, 543, 586, 622, 197, 159, 137, 239,
	295, 178, 0, 0, 0, 119, 120, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 583, 616,
	540, 585, 587, 632, 504, 580, 0, 507, 510, 628,
	612, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	559, 568, 597, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 533, 0, 577, 0, 0, 0, 512, 508,
	0, 0, 0, 0, 557, 0, 0, 0, 515, 0,
	534, 598, 0, 502, 184, 602, 611, 554, 330, 615,
	552, 551, 618, 593, 513, 608, 546, 205, 511, 202,
	133, 146, 0, 544, 238, 272, 276, 607, 530, 539,
	162, 537, 274, 251, 319, 576, 255, 273, 210, 308,
	266, 318, 331, 332, 168, 232, 325, 303, 328, 340,
	147, 165, 245, 299, 322, 291, 227, 305, 201, 290,
	183, 136, 139, 301, 491, 156, 284, 0, 0, 0,
	141, 314, 298, 225, 198, 199, 140, 0, 270, 169,
	181, 164, 241, 311, 312, 163, 341, 148, 327, 143,
	500, 326, 234, 307, 315, 226, 218, 142, 313, 224,
	217, 204, 175, 189, 264, 213, 265, 190, 230, 229,
	231, 0, 138, 0, 296, 323, 342, 153, 525, 603,
	304, 336, 339, 0, 267, 154, 182, 174, 263, 180,
	207, 335, 337, 338, 152, 261, 187, 501, 499, 494,
	493, 203, 211, 595, 631, 250, 275, 157, 321, 293,
	520, 524, 518, 519, 570, 571, 521, 623, 624, 625,
	599, 514, 0, 522, 523, 0, 605, 613, 614, 575,
	132, 144, 208, 627, 268, 179, 324, 503, 517, 167,
	528, 0, 0, 541, 548, 549, 561, 563, 564, 565,
	566, 574, 581, 582, 584, 591, 592, 594, 596, 601,
	610, 630, 134, 135, 145, 151, 158, 166, 173, 177,
	185, 188, 191, 194, 195, 196, 200, 216, 220, 221,
	222, 223, 235, 236, 237, 240, 243, 244, 246, 248,
	249, 252, 256, 257, 258, 259, 260, 262, 269, 271,
	277, 278, 279, 280, 281, 282, 283, 286, 287, 288,
	289, 297, 300, 309, 310, 320, 329, 333, 186, 317,
	334, 242, 215, 573, 1071, 0, 395, 0, 0, 0,
	171, 0, 394, 0, 0, 0, 206, 0, 1072, 254,
	0, 285, 161, 214, 212, 306, 176, 172, 170, 160,
	193, 219, 253, 302, 247, 438, 209, 0, 0, 294,
	228, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 159, 137, 239,
	295, 178, 67, 0, 0, 119, 120, 121, 416, 415,
	418, 419, 420, 421, 0, 0, 155, 417, 422, 423,
	424, 0, 0, 0, 0, 392, 409, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	481, 0, 0, 0, 452, 0, 408, 0, 0, 401,
	402, 404, 403, 405, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 451, 0, 0, 330, 0,
	0, 449, 0, 0, 0, 0, 0, 205, 0, 202,
	133, 146, 0, 0, 238, 272, 276, 0, 0, 0,
	162, 0, 274, 251, 319, 0, 255, 273, 210, 308,
	266, 318, 331, 332, 168, 232, 325, 303, 328, 340,
	147, 165, 245, 299, 322, 291, 227, 305, 201, 290,
	183, 136, 139, 301, 316, 156, 284, 0, 0, 0,
	141, 314, 298, 225, 198, 199, 140, 0, 270, 169,
	181, 164, 241, 311, 312, 163, 341, 148, 327, 143,
	149, 326, 234, 307, 315, 226, 218, 142, 313, 224,
	217, 204, 175, 189, 264, 213, 265, 190, 230, 229,
	231, 0, 138, 0, 296, 323, 342, 153, 0, 0,
	304, 336, 339, 0, 267, 154, 182, 174, 263, 180,
	207, 335, 337, 338, 152, 261, 187, 233, 150, 192,
	292, 203, 211, 0, 0, 250, 275, 157, 321, 293,
	439, 450, 445, 446, 443, 444, 0, 442, 441, 440,
	453, 431, 432, 433, 434, 436, 0, 447, 448, 435,
	132, 144, 208, 0, 268, 179, 324, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 145, 151, 158, 166, 173, 177,
	185, 188, 191, 194, 195, 196, 200, 216, 220, 221,
	222, 223, 235, 236, 237, 240, 243, 244, 246, 248,
	249, 252, 256, 257, 258, 259, 260, 262, 269, 271,
	277, 278, 279, 280, 281, 282, 283, 286, 287, 288,
	289, 297, 300, 309, 310, 320, 329, 333, 186, 317,
	334, 242, 215, 0, 0, 0, 395, 0, 0, 0,
	171, 0, 394, 0, 0, 0, 206, 0, 0, 254,
	0, 285, 161, 214, 212, 306, 176, 172, 170, 160,
	193, 219, 253, 302, 247, 438, 209, 0, 0, 294,
	228, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 0, 0, 1183, 0, 197, 159, 137, 239,
	295, 178, 67, 0, 0, 119, 120, 121, 416, 415,
	418, 419, 420, 421, 0, 0, 155, 417, 422, 423,
	424, 1184, 0, 0, 0, 392, 409, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	0, 0, 0, 0, 452, 0, 408, 0, 0, 401,
	402, 404, 403, 405, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 451, 0, 0, 330, 0,
	0, 449, 0, 0, 0, 0, 0, 205, 0, 202,
	133, 146, 0, 0, 238, 272, 276, 0, 0, 0,
	162, 0, 274, 251, 319, 0, 255, 273, 210, 308,
	266, 318, 331, 332, 168, 232, 325, 303, 328, 340,
	147, 165, 245, 299, 322, 291, 227, 305, 201, 290,
	183, 136, 139, 301, 316, 156, 284, 0, 0, 0,
	141, 314, 298, 225, 198, 199, 140, 0, 270, 169,
	181, 164, 241, 311, 312, 163, 341, 148, 327, 143,
	149, 326, 234, 307, 315, 226, 218, 142, 313, 224,
	217, 204, 175, 189, 264, 213, 265, 190, 230, 229,
	231, 0, 138, 0, 296, 323, 342, 153, 0, 0,
	304, 336, 339, 0, 267, 154, 182, 174, 263, 180,
	207, 335, 337, 338, 152, 261, 187, 233, 150, 192,
	292, 203, 211, 0, 0, 250, 275, 157, 321, 293,
	439, 450, 445, 446, 443, 444, 0, 442, 441, 440,
	453, 431, 432, 433, 434, 436, 0, 447, 448, 435,
	132, 144, 208, 0, 268, 179, 324, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 145, 151, 158, 166, 173, 177,
	185, 188, 191, 194, 195, 196, 200, 216, 220, 221,
	222, 223, 235, 236, 237, 240, 243, 244, 246, 248,
	249, 252, 256, 257, 258, 259, 260, 262, 269, 271,
	277, 278, 279, 280, 281, 282, 283, 286, 287, 288,
	289, 297, 300, 309, 310, 320, 329, 333, 186, 317,
	334, 242, 215, 0, 0, 0, 395, 0, 0, 0,
	171, 0, 394, 0, 0, 0, 206, 0, 0, 254,
	0, 285, 161, 214, 212, 306, 176, 172, 170, 160,
	193, 219, 253, 302, 247, 438, 209, 0, 0, 294,
	228, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 159, 137, 239,
	295, 178, 67, 0, 469, 119, 120, 121, 416, 415,
	418, 419, 420, 421, 0, 0, 155, 417, 422, 423,
	424, 0, 0, 0, 0, 392, 409, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	0, 0, 0, 0, 452, 0, 408, 0, 0, 401,
	402, 404, 403, 405, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 451, 0, 0, 330, 0,
	0, 449, 0, 0, 0, 0, 0, 205, 0, 202,
	133, 146, 0, 0, 238, 272, 276, 0, 0, 0,
	162, 0, 274, 251, 319, 0, 255, 273, 210, 308,
	266, 318, 331, 332, 168, 232, 325, 303, 328, 340,
	147, 165, 245, 299, 322, 291, 227, 305, 201, 290,
	183, 136, 139, 301, 316, 156, 284, 0, 0, 0,
	141, 314, 298, 225, 198, 199, 140, 0, 270, 169,
	181, 164, 241, 311, 312, 163, 341, 148, 327, 143,
	149, 326, 234, 307, 315, 226, 218, 142, 313, 224,
	217, 204, 175, 189, 264, 213, 265, 190, 230, 229,
	231, 0, 138, 0, 296, 323, 342, 153, 0, 0,
	304, 336, 339, 0, 267, 154, 182, 174, 263, 180,
	207, 335, 337, 338, 152, 261, 187, 233, 150, 192,
	292, 203, 211, 0, 0, 250, 275, 157, 321, 293,
	439, 450, 445, 446, 443, 444, 0, 442, 441, 440,
	453, 431, 432, 433, 434, 436, 0, 447, 448, 435,
	132, 144, 208, 0, 268, 179, 324, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 145, 151, 158, 166, 173, 177,
	185, 188, 191, 194, 195, 196, 200, 216, 220, 221,
	222, 223, 235, 236, 237, 240, 243, 244, 246, 248,
	249, 252, 256, 257, 258, 259, 260, 262, 269, 271,
	277, 278, 279, 280, 281, 282, 283, 286, 287, 288,
	289, 297, 300, 309, 310, 320, 329, 333, 186, 317,
	334, 242, 215, 0, 0, 0, 395, 0, 0, 0,
	171, 0, 394, 0, 0, 0, 206, 0, 0, 254,
	0, 285, 161, 214, 212, 306, 176, 172, 170, 160,
	193, 219, 253, 302, 247, 438, 209, 0, 0, 294,
	228, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 159, 137, 239,
	295, 178, 67, 0, 0, 119, 120, 121, 416, 415,
	418, 419, 420, 421, 0, 0, 155, 417, 422, 423,
	424, 0, 0, 0, 0, 392, 409, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	481, 0, 0, 0, 452, 0, 408, 0, 0, 401,
	402, 404, 403, 405, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 451, 0, 0, 330, 0,
	0, 449, 0, 0, 0, 0, 0, 205, 0, 202,
	133, 146, 0, 0, 238, 272, 276, 0, 0, 0,
	162, 0, 274, 251, 319, 0, 255, 273, 210, 308,
	266, 318, 331, 332, 168, 232, 325, 303, 328, 340,
	147, 165, 245, 299, 322, 291, 227, 305, 201, 290,
	183, 136, 139, 301, 316, 156, 284, 0, 0, 0,
	141, 314, 298, 225, 198, 199, 140, 0, 270, 169,
	181, 164, 241, 311, 312, 163, 341, 148, 327, 143,
	149, 326, 234, 307, 315, 226, 218, 142, 313, 224,
	217, 204, 175, 189, 264, 213, 265, 190, 230, 229,
	231, 0, 138, 0, 296, 323, 342, 153, 0, 0,
	304, 336, 339, 0, 267, 154, 182, 174, 263, 180,
	207, 335, 337, 338, 152, 261, 187, 233, 150, 192,
	292, 203, 211, 0, 0, 250, 275, 157, 321, 293,
	439, 450, 445, 446, 443, 444, 0, 442, 441, 440,
	453, 431, 432, 433, 434, 436, 0, 447, 448, 435,
	132, 144, 208, 0, 268, 179, 324, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 145, 151, 158, 166, 173, 177,
	185, 188, 191, 194, 195, 196, 200, 216, 220, 221,
	222, 223, 235, 236, 237, 240, 243, 244, 246, 248,
	249, 252, 256, 257, 258, 259, 260, 262, 269, 271,
	277, 278, 279, 280, 281, 282, 283, 286, 287, 288,
	289, 297, 300, 309, 310, 320, 329, 333, 186, 317,
	334, 242, 215, 0, 0, 0, 395, 0, 0, 0,
	171, 0, 394, 0, 0, 0, 206, 0, 0, 254,
	0, 285, 161, 214, 212, 306, 176, 172, 170, 160,
	193, 219, 253, 302, 247, 438, 209, 0, 0, 294,
	228, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 159, 137, 239,
	295, 178, 67, 0, 0, 119, 120, 121, 416, 1089,
	418, 419, 420, 421, 0, 0, 155, 417, 422, 423,
	424, 0, 0, 0, 0, 392, 409, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	481, 0, 0, 0, 452, 0, 408, 0, 0, 401,
	402, 404, 403, 405, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 451, 0, 0, 330, 0,
	0, 449, 0, 0, 0, 0, 0, 205, 0, 202,
	133, 146, 0, 0, 238, 272, 276, 0, 0, 0,
	162, 0, 274, 251, 319, 0, 255, 273, 210, 308,
	266, 318, 331, 332, 168, 232, 325, 303, 328, 340,
	147, 165, 245, 299, 322, 291, 227, 305, 201, 290,
	183, 136, 139, 301, 316, 156, 284, 0, 0, 0,
	141, 314, 298, 225, 198, 199, 140, 0, 270, 169,
	181, 164, 241, 311, 312, 163, 341, 148, 327, 143,
	149, 326, 234, 307, 315, 226, 218, 142, 313, 224,
	217, 204, 175, 189, 264, 213, 265, 190, 230, 229,
	231, 0, 138, 0, 296, 323, 342, 153, 0, 0,
	304, 336, 339, 0, 267, 154, 182, 174, 263, 180,
	207, 335, 337, 338, 152, 261, 187, 233, 150, 192,
	292, 203, 211, 0, 0, 250, 275, 157, 321, 293,
	439, 450, 445, 446, 443, 444, 0, 442, 441, 440,
	453, 431, 432, 433, 434, 436, 0, 447, 448, 435,
	132, 144, 208, 0, 268, 179, 324, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 145, 151, 158, 166, 173, 177,
	185, 188, 191, 194, 195, 196, 200, 216, 220, 221,
	222, 223, 235, 236, 237, 240, 243, 244, 246, 248,
	249, 252, 256, 257, 258, 259, 260, 262, 269, 271,
	277, 278, 279, 280, 281, 282, 283, 286, 287, 288,
	289, 297, 300, 309, 310, 320, 329, 333, 186, 317,
	334, 242, 215, 0, 0, 0, 395, 0, 0, 0,
	171, 0, 394, 0, 0, 0, 206, 0, 0, 254,
	0, 285, 161, 214, 212, 306, 176, 172, 170, 160,
	193, 219, 253, 302, 247, 438, 209, 0, 0, 294,
	228, 0, 0, 0, 0, 0, 429, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 197, 159, 137, 239,
	295, 178, 67, 0, 0, 119, 120, 121, 416, 1086,
	418, 419, 420, 421, 0, 0, 155, 417, 422, 423,
	424, 0, 0, 0, 0, 392, 409, 0, 437, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 406, 407,
	481, 0, 0, 0, 452, 0, 408, 0, 0, 401,
	402, 404, 403, 405, 410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 184, 451, 0, 0, 330, 0,
	0, 449, 0, 0, 0, 0, 0, 205, 0, 202,
	133, 146, 0, 0, 238, 272, 276, 0, 0, 0,
	162, 0, 274, 251, 319, 0, 255, 273, 210, 308,
	266, 318, 331, 332, 168, 232, 325, 303, 328, 340,
	147, 165, 245, 299, 322, 291, 227, 305, 201, 290,
	183, 136, 139, 301, 316, 156, 284, 0, 0, 0,
	141, 314, 298, 225, 198, 199, 140, 0, 270, 169,
	181, 164, 241, 311, 312, 163, 341, 148, 327, 143,
	149, 326, 234, 307, 315, 226, 218, 142, 313, 224,
	217, 204, 175, 189, 264, 213, 265, 190, 230, 229,
	231, 0, 138, 0, 296, 323, 342, 153, 0, 0,
	304, 336, 339, 0, 267, 154, 182, 174, 263, 180,
	207, 335, 337, 338, 152, 261, 187, 233, 150, 192,
	292, 203, 211, 0, 0, 250, 275, 157, 321, 293,
	439, 450, 445, 446, 443, 444, 0, 442, 441, 440,
	453, 431, 432, 433, 434, 436, 0, 447, 448, 435,
	132, 144, 208, 0, 268, 179, 324, 0, 0, 167,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 134, 135, 145, 151, 158, 166, 173, 177,
	185, 188, 191, 194, 195, 196, 200, 216, 220, 221,
	222, 223, 235, 236, 237, 240, 243, 244, 246, 248,
	249, 252, 256, 257, 258, 259, 260, 262, 269, 271,
	277, 278, 279, 280, 281, 282, 283, 286, 287, 288,
	289, 297, 300, 309, 310, 320, 329, 333, 186, 317,
	334, 462, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 0, 395,
	0, 0, 0, 171, 0, 394, 0, 0, 0, 206,
	0, 0, 254, 0, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 438, 209,
	0, 0, 294, 228, 0, 0, 0, 0, 0, 429,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	159, 137, 239, 295, 178, 67, 0, 0, 119, 120,
	121, 416, 415, 418, 419, 420, 421, 0, 0, 155,
	417, 422, 423, 424, 0, 0, 0, 0, 392, 409,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 0, 0, 0, 0, 452, 0, 408,
	0, 0, 401, 402, 404, 403, 405, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 451, 0,
	0, 330, 0, 0, 449, 0, 0, 0, 0, 0,
	205, 0, 202, 133, 146, 0, 0, 238, 272, 276,
	0, 0, 0, 162, 0, 274, 251, 319, 0, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 316, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 149, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 0, 0, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	233, 150, 192, 292, 203, 211, 0, 0, 250, 275,
	157, 321, 293, 439, 450, 445, 446, 443, 444, 0,
	442, 441, 440, 453, 431, 432, 433, 434, 436, 0,
	447, 448, 435, 132, 144, 208, 0, 268, 179, 324,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 242, 215, 0, 0, 0, 395,
	0, 0, 0, 171, 0, 394, 0, 0, 0, 206,
	0, 0, 254, 0, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 438, 209,
	0, 0, 294, 228, 0, 0, 0, 0, 0, 429,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	159, 137, 239, 295, 178, 67, 0, 0, 119, 120,
	121, 416, 415, 418, 419, 420, 421, 0, 0, 155,
	417, 422, 423, 424, 0, 0, 0, 0, 392, 409,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 0, 0, 0, 0, 452, 0, 408,
	0, 0, 401, 402, 404, 403, 405, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 451, 0,
	0, 330, 0, 0, 449, 0, 0, 0, 0, 0,
	205, 0, 202, 133, 146, 0, 0, 238, 272, 276,
	0, 0, 0, 162, 0, 274, 251, 319, 0, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 316, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 149, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 0, 0, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	233, 150, 192, 292, 203, 211, 0, 0, 250, 275,
	157, 321, 293, 439, 450, 445, 446, 443, 444, 0,
	442, 441, 440, 453, 431, 432, 433, 434, 436, 0,
	447, 448, 435, 132, 144, 208, 0, 268, 179, 324,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 242, 215, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 206,
	0, 0, 254, 0, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 438, 209,
	0, 0, 294, 228, 0, 0, 0, 0, 0, 429,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	159, 137, 239, 295, 178, 67, 0, 469, 119, 120,
	121, 416, 415, 418, 419, 420, 421, 0, 0, 155,
	417, 422, 423, 424, 0, 0, 0, 0, 0, 409,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 0, 0, 0, 0, 452, 0, 408,
	0, 0, 401, 402, 404, 403, 405, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 451, 0,
	0, 330, 0, 0, 449, 0, 0, 0, 0, 0,
	205, 0, 202, 133, 146, 0, 0, 238, 272, 276,
	0, 0, 0, 162, 0, 274, 251, 319, 0, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 316, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 149, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 0, 0, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	233, 150, 192, 292, 203, 211, 0, 0, 250, 275,
	157, 321, 293, 439, 450, 445, 446, 443, 444, 0,
	442, 441, 440, 453, 431, 432, 433, 434, 436, 0,
	447, 448, 435, 132, 144, 208, 0, 268, 179, 324,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 242, 215, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 206,
	0, 0, 254, 0, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 438, 209,
	0, 0, 294, 228, 0, 0, 0, 0, 0, 429,
	430, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	159, 137, 239, 295, 178, 67, 0, 0, 119, 120,
	121, 416, 415, 418, 419, 420, 421, 0, 0, 155,
	417, 422, 423, 424, 0, 0, 0, 0, 0, 409,
	0, 437, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 406, 407, 0, 0, 0, 0, 452, 0, 408,
	0, 0, 401, 402, 404, 403, 405, 410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 451, 0,
	0, 330, 0, 0, 449, 0, 0, 0, 0, 0,
	205, 0, 202, 133, 146, 0, 0, 238, 272, 276,
	0, 0, 0, 162, 0, 274, 251, 319, 0, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 316, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 149, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 0, 0, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	233, 150, 192, 292, 203, 211, 0, 0, 250, 275,
	157, 321, 293, 439, 450, 445, 446, 443, 444, 0,
	442, 441, 440, 453, 431, 432, 433, 434, 436, 0,
	447, 448, 435, 132, 144, 208, 0, 268, 179, 324,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 242, 215, 0, 0, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 206,
	0, 0, 254, 0, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 0, 209,
	0, 0, 294, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	159, 137, 239, 295, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 757, 756, 766,
	767, 759, 760, 761, 762, 763, 764, 765, 758, 0,
	0, 768, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 202, 133, 146, 0, 0, 238, 272, 276,
	0, 0, 0, 162, 0, 274, 251, 319, 0, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 316, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 149, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 0, 0, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	233, 150, 192, 292, 203, 211, 0, 0, 250, 275,
	157, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 144, 208, 0, 268, 179, 324,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 242, 215, 0, 0, 0, 0,
	0, 0, 0, 171, 671, 0, 0, 0, 0, 206,
	0, 0, 254, 0, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 0, 209,
	0, 0, 294, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	159, 137, 239, 295, 178, 0, 0, 0, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	670, 330, 0, 0, 0, 0, 0, 0, 667, 668,
	205, 640, 202, 133, 146, 661, 665, 238, 272, 276,
	0, 0, 0, 162, 0, 274, 251, 319, 0, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 316, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 149, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 0, 0, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	233, 150, 192, 292, 203, 211, 0, 0, 250, 275,
	157, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 144, 208, 0, 268, 179, 324,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 242, 215, 0, 0, 857, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 206,
	0, 0, 254, 0, 285, 161, 214, 212, 306, 176,
	172, 170, 160, 193, 219, 253, 302, 247, 0, 209,
	0, 0, 294, 228, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 197,
	159, 137, 239, 295, 178, 0, 0, 0, 119, 120,
	121, 0, 859, 0, 0, 0, 0, 0, 0, 155,
	0, 0, 0, 0, 0, 746, 747, 745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 748, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 184, 0, 0,
	0, 330, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 202, 133, 146, 0, 0, 238, 272, 276,
	0, 0, 0, 162, 0, 274, 251, 319, 0, 255,
	273, 210, 308, 266, 318, 331, 332, 168, 232, 325,
	303, 328, 340, 147, 165, 245, 299, 322, 291, 227,
	305, 201, 290, 183, 136, 139, 301, 316, 156, 284,
	0, 0, 0, 141, 314, 298, 225, 198, 199, 140,
	0, 270, 169, 181, 164, 241, 311, 312, 163, 341,
	148, 327, 143, 149, 326, 234, 307, 315, 226, 218,
	142, 313, 224, 217, 204, 175, 189, 264, 213, 265,
	190, 230, 229, 231, 0, 138, 0, 296, 323, 342,
	153, 0, 0, 304, 336, 339, 0, 267, 154, 182,
	174, 263, 180, 207, 335, 337, 338, 152, 261, 187,
	233, 150, 192, 292, 203, 211, 0, 0, 250, 275,
	157, 321, 293, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 144, 208, 0, 268, 179, 324,
	0, 0, 167, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 134, 135, 145, 151, 158,
	166, 173, 177, 185, 188, 191, 194, 195, 196, 200,
	216, 220, 221, 222, 223, 235, 236, 237, 240, 243,
	244, 246, 248, 249, 252, 256, 257, 258, 259, 260,
	262, 269, 271, 277, 278, 279, 280, 281, 282, 283,
	286, 287, 288, 289, 297, 300, 309, 310, 320, 329,
	333, 186, 317, 334, 33, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 67, 0,
	469, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 242, 215, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 634, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 640, 202, 133, 146, 638, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 242, 215, 0,
	0, 1118, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 1120, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 33, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	242, 0, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 67, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 0, 0, 0, 119, 120, 121, 0, 0, 1136,
	0, 0, 1137, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 1118, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 0, 0, 0, 119, 120, 121, 0, 1120, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 1116, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 890, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 0, 0, 0, 119, 120, 121, 0, 889, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 0, 0, 469, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 67, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 0, 0, 0, 119, 120, 121, 0, 1120, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 0, 0, 0, 119, 120, 121, 0, 859, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	242, 215, 0, 0, 0, 0, 0, 0, 0, 171,
	0, 0, 0, 0, 0, 206, 0, 0, 254, 0,
	285, 161, 214, 212, 306, 176, 172, 170, 160, 193,
	219, 253, 302, 247, 0, 209, 0, 0, 294, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 197, 159, 137, 239, 295,
	178, 962, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 184, 0, 0, 0, 330, 0, 0,
	0, 0, 0, 0, 0, 0, 205, 0, 202, 133,
	146, 0, 0, 238, 272, 276, 0, 0, 0, 162,
	0, 274, 251, 319, 0, 255, 273, 210, 308, 266,
	318, 331, 332, 168, 232, 325, 303, 328, 340, 147,
	165, 245, 299, 322, 291, 227, 305, 201, 290, 183,
	136, 139, 301, 316, 156, 284, 0, 0, 0, 141,
	314, 298, 225, 198, 199, 140, 0, 270, 169, 181,
	164, 241, 311, 312, 163, 341, 148, 327, 143, 149,
	326, 234, 307, 315, 226, 218, 142, 313, 224, 217,
	204, 175, 189, 264, 213, 265, 190, 230, 229, 231,
	0, 138, 0, 296, 323, 342, 153, 0, 0, 304,
	336, 339, 0, 267, 154, 182, 174, 263, 180, 207,
	335, 337, 338, 152, 261, 187, 233, 150, 192, 292,
	203, 211, 0, 0, 250, 275, 157, 321, 293, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 132,
	144, 208, 0, 268, 179, 324, 0, 0, 167, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 134, 135, 145, 151, 158, 166, 173, 177, 185,
	188, 191, 194, 195, 196, 200, 216, 220, 221, 222,
	223, 235, 236, 237, 240, 243, 244, 246, 248, 249,
	252, 256, 257, 258, 259, 260, 262, 269, 271, 277,
	278, 279, 280, 281, 282, 283, 286, 287, 288, 289,
	297, 300, 309, 310, 320, 329, 333, 186, 317, 334,
	872, 215, 0, 0, 0, 0, 0, 242, 0, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 242, 215, 0,
	0, 0, 0, 0, 0, 863, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 242, 215, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 737, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 242, 215, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 385, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 384, 317, 334, 242, 215, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 127, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 242, 215, 0,
	0, 0, 0, 0, 0, 0, 171, 0, 0, 0,
	0, 0, 206, 0, 0, 254, 0, 285, 161, 214,
	212, 306, 176, 172, 170, 160, 193, 219, 253, 302,
	247, 0, 209, 0, 0, 294, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 197, 159, 137, 239, 295, 178, 0, 0,
	0, 119, 120, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 0, 0, 0, 330, 0, 0, 0, 0, 0,
	0, 0, 0, 205, 0, 202, 133, 146, 0, 0,
	238, 272, 276, 0, 0, 0, 162, 0, 274, 251,
	319, 0, 255, 273, 210, 308, 266, 318, 331, 332,
	168, 232, 325, 303, 328, 340, 147, 165, 245, 299,
	322, 291, 227, 305, 201, 290, 183, 136, 139, 301,
	316, 156, 284, 0, 0, 0, 141, 314, 298, 225,
	198, 199, 140, 0, 270, 169, 181, 164, 241, 311,
	312, 163, 341, 148, 327, 143, 149, 326, 234, 307,
	315, 226, 218, 142, 313, 224, 217, 204, 175, 189,
	264, 213, 265, 190, 230, 229, 231, 0, 138, 0,
	296, 323, 342, 153, 0, 0, 304, 336, 339, 0,
	267, 154, 182, 174, 263, 180, 207, 335, 337, 338,
	152, 261, 187, 233, 150, 192, 292, 203, 211, 0,
	0, 250, 275, 157, 321, 293, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 132, 144, 208, 0,
	268, 179, 324, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 135,
	145, 151, 158, 166, 173, 177, 185, 188, 191, 194,
	195, 196, 200, 216, 220, 221, 222, 223, 235, 236,
	237, 240, 243, 244, 246, 248, 249, 252, 256, 257,
	258, 259, 260, 262, 269, 271, 277, 278, 279, 280,
	281, 282, 283, 286, 287, 288, 289, 297, 300, 309,
	310, 320, 329, 333, 186, 317, 334, 0, 215,
}

var yyPact = [...]int{
	2906, -1000, -300, 1220, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1180, 810, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	357, 874, 76, 1112, 211, 50, 588, 203, 44, 19448,
	201, 35, 19838, -1000, 45, -1000, 32, 19838, 39, 19058,
	-1000, -1000, -1000, 10835, 1047, -46, -47, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 907, 1157, 1166, 1177, 718,
	1197, -1000, 9262, 9262, 170, 170, 170, 7702, -1000, -1000,
	13578, 19838, 19838, 881, 158, 199, 158, -134, -1000, -1000,
	-1000, -1000, -1000, -1000, 1112, -1000, -1000, 99, -1000, -1000,
	836, -1000, 362, 19838, -1000, 19838, 295, 1112, 86, -1000,
	-1000, -1000, 19838, 150, 588, 150, 150, 19838, -1000, 238,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 19838, 1109, 402, 402, 402, 402, 402,
	402, 16, -1000, 10, 83, 81, 77, -26, 588, 141,
	-1000, 257, -1000, 78, 26, -1000, 402, 5260, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 188, -1000, -1000, -1000,
	-1000, 19838, 18668, 185, 341, -1000, -1000, -1000, -1000, 694,
	378, -1000, 10835, 682, 842, 842, -1000, -1000, 219, -1000,
	-1000, 11615, 11615, 11615, 11615, 11615, 11615, 11615, 11615, 11615,
	11615, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 842, 237, -1000, 10445, 842,
	842, 842, 842, 842, 842, 842, 842, 10835, 842, 842,
	842, 842, 842, 842, 842, 842, 842, 842, 842, 842,
	842, 842, 842, 842, -1000, -1000, -1000, 19838, -1000, 1180,
	-1000, 810, -1000, -1000, -1000, 1083, 10835, 10835, 1180, -1000,
	981, 9262, -1000, -1000, 1188, -1000, -1000, -1000, -1000, 399,
	1200, -1000, 12785, 236, 1199, 18278, -1000, 16321, 17888, 833,
	7295, -73, -1000, -1000, -1000, 339, 15541, -1000, -1000, -1000,
	1107, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 793, 19838, -1000, -1000, 358, 588, -1000,
	873, -1000, 788, -1000, 849, 72, 338, 19838, 345, 588,
	588, -1000, -1000, -1000, 1104, 318, 211, -1000, -1000, -1000,
	17491, 588, -1000, 872, -1000, 1118, 172, 319, 319, 588,
	-1000, -1000, -1000, 5260, 94, 136, 121, 19838, 1112, 1046,
	831, 184, 19838, 1139, 931, 19838, 588, -1000, 6481, -1000,
	402, -1000, 579, 10835, -1000, -1000, -1000, -1000, -1000, 402,
	19838, 402, 19838, 402, 402, 402, 402, 397, 398, 397,
	-1000, -1000, -1000, -1000, 5260, 5260, 19838, 5260, 5260, 19838,
	5260, 5260, 398, -1000, -1000, -1000, 302, -1000, 925, -1000,
	-1000, -1000, -1000, 38, -1000, -1000, -1000, -1000, -1000, 1220,
	-1000, -1000, -1000, -140, 10835, 10835, 10835, 10835, 544, 296,
	11615, 442, 315, 11615, 11615, 11615, 11615, 11615, 11615, 11615,
	11615, 11615, 11615, 11615, 11615, 11615, 11615, 11615, 627, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 588, -1000, 1194,
	669, 669, 272, 272, 272, 272, 272, 272, 272, 272,
	272, 12005, 8092, 6481, 718, 786, 1180, 9262, 9262, 10835,
	10835, 10042, 9652, 9262, 1082, 349, 378, 19838, -1000, -1000,
	11225, -1000, -1000, -1000, -1000, -1000, 597, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19838, 19838, 9262, 9262, 9262, 9262,
	9262, -1000, 830, -1000, -170, 15151, 1166, 718, 1188, 1122,
	1213, 292, 645, 829, -1000, 429, 1166, 14761, 866, -1000,
	1188, -1000, -1000, -1000, 19838, -1000, -1000, 17101, -1000, -1000,
	6074, 19838, 102, 19838, -1000, 840, 1033, -1000, -1000, -1000,
	1144, 14371, 19838, 851, 818, -1000, -1000, 235, 6888, -73,
	-1000, 6888, 796, -1000, -80, -79, 8482, 260, -1000, -1000,
	-1000, -1000, 4446, 12395, 656, 467, -35, -1000, -1000, -1000,
	849, -1000, 849, 849, 849, 849, -1, -1, -1, -1,
	-1000, -1000, -1000, -1000, -1000, 868, 861, -1000, 849, 849,
	849, 849, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 860,
	860, 860, 850, 850, 142, -1000, 10835, 73, 19838, 1132,
	478, 61, 333, 59, -1000, 1136, 893, -1000, 318, 750,
	-1000, -1000, 19838, 48, -1000, 122, -1000, 19838, 856, 1117,
	319, 588, -1000, 588, -1000, -1000, -1000, 19838, 19838, 19838,
	19838, 19838, 210, 90, 19838, 19838, 828, -1000, 19838, 5260,
	-1000, -1000, -1000, -1000, -1000, -1000, 378, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 402, 19838, 19838, 19838, -1000,
	-1000, 402, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19838, -1000, 578, 19838, 19838, -1000, -1000, -1000, -1000, -1000,
	378, 296, 443, 324, -1000, -1000, 475, -1000, -1000, 2313,
	-1000, -1000, -1000, -1000, 442, 11615, 11615, 11615, 337, 2313,
	2276, 566, 948, 272, 270, 270, 259, 259, 259, 259,
	259, 527, 527, -1000, -1000, -1000, 597, -1000, -1000, -1000,
	597, 9262, 9262, 823, 842, 234, -1000, 907, -1000, -1000,
	1166, 770, 770, 607, 518, 359, 1196, 770, 354, 1190,
	770, 770, 9262, -1000, -1000, 375, -1000, 10835, 597, -1000,
	233, -1000, 501, 817, 811, 770, 597, 597, 770, 770,
	19838, -1000, -293, -1000, -107, 264, 842, -1000, 16711, -1000,
	-1000, 1083, -1000, -1000, 1021, -1000, 977, 10835, 10835, 10835,
	-1000, -1000, -1000, 1083, 1171, -1000, 994, 991, 1186, 9262,
	16321, 1188, -1000, -1000, -1000, 231, 1186, 855, 842, -1000,
	19838, 16321, 16321, 16321, 16321, 16321, -1000, 951, 950, -1000,
	944, 943, 958, 19838, -1000, 784, 718, 14371, 102, 816,
	16321, 19838, -1000, -1000, 16321, 19838, 5667, -1000, 796, -73,
	-82, -1000, -1000, -1000, -1000, 378, -1000, 667, 795, 4039,
	-1000, -1000, -1000, -1000, 161, -1000, -1000, -1000, -1000, 1084,
	-1000, 361, -37, -1000, -1000, -1, -1, -1000, -1000, 260,
	1089, 260, 260, 260, 565, 565, -1000, -1000, -1000, -1000,
	-1000, 470, -1000, -1000, -1000, 458, -1000, -1000, 405, 918,
	73, -1000, -1000, 318, 562, 1055, 19838, -1000, -1000, 631,
	190, 53, 103, -1000, -1000, -1000, -1000, 923, -1000, 648,
	-1000, -1000, 778, -1000, 46, 19838, -1000, 775, 19838, -1000,
	588, -1000, -1000, 858, -1000, -1000, -1000, -1000, 43, 93,
	88, 182, -1000, 5260, -1000, -1000, -1000, -1000, 397, -1000,
	397, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 337, 2313,
	2053, -1000, 11615, 11615, -1000, -1000, 770, 770, 9262, 6481,
	1180, 1083, -1000, -1000, 107, 627, 107, 11615, 11615, -1000,
	11615, 11615, -1000, -150, 822, 343, -1000, 10835, 567, -1000,
	6481, -1000, 11615, 11615, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 198, 197, 196, 19838, -1000, -1000, 509,
	559, 971, 378, 378, -1000, -1000, 19838, -1000, -1000, -1000,
	-1000, 1184, 10835, -1000, 766, -1000, 4853, 1166, 921, 19838,
	842, 1220, 13188, 19838, 870, -1000, 322, 1033, 886, 919,
	1044, -1000, -1000, -1000, -1000, 942, -1000, 884, -1000, -1000,
	-1000, -1000, -1000, 718, 1186, 16321, 819, -1000, 819, -1000,
	230, -1000, -1000, -1000, -90, -108, -1000, -1000, -1000, 4446,
	-1000, 4446, -1000, 904, 11615, -1000, -1000, -1000, 260, 260,
	-1000, 334, -1000, -1000, -1000, 768, -1000, 764, 705, 762,
	34, -1000, 880, 1062, 318, 318, -1000, 452, -1000, 588,
	-1000, -1000, 19838, 60, -1000, 854, 592, -1000, 19838, -1000,
	-1000, 19838, -1000, -1000, 19838, -1000, 73, 760, -1000, -1000,
	-182, 588, 19838, 19838, 19838, -1000, 19838, -1000, 402, 402,
	-1000, 11615, 2313, 2313, -1000, -1000, 597, -1000, 1166, -1000,
	597, 849, 849, -1000, 849, 850, -1000, 849, 22, 849,
	20, 597, 597, 1933, 1905, 1847, 1652, 842, -141, -1000,
	378, 10835, -1000, 1158, 1001, 842, 842, 842, 738, -1000,
	558, -1, -1000, -1000, -1000, 1182, 1176, 378, -1000, -1000,
	-1000, 1120, 655, 687, -1000, -1000, 8872, 742, 988, 229,
	738, 1180, 19838, 10835, -1000, -1000, 10835, 847, -1000, 10835,
	-1000, -1000, -1000, 1180, 1180, 819, -1000, -1000, 265, -1000,
	-1000, -1000, 4039, -1000, -29, 1211, 2313, -1000, -1000, -1000,
	-1000, -1, 557, -1, 421, -1000, 412, -1000, -1000, -226,
	-1000, -1000, 865, 890, -1000, -1000, 846, -1000, -1000, -1000,
	624, -1000, -1000, -1000, -1000, -1000, 114, 19838, -1000, 6481,
	-1000, -1000, 843, 888, -1000, -1000, -1000, -1000, 2313, -1000,
	1083, -1000, -1000, 167, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 11615, 11615, 11615, 11615, 11615, 1166, 556, 378,
	11615, 11615, 15931, 19838, 19838, 13968, 19838, -1, -54, -1000,
	10835, 10835, 1116, -1000, 842, -1000, 848, 19838, 842, 19838,
	-1000, 1166, -1000, 378, 378, 19838, 378, 1166, -1000, 278,
	-1000, -123, 260, -1000, 260, 622, 602, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1142, 19838, -1000, 19838, -1000,
	699, -1000, 312, 19838, 19838, -1000, -1000, -1000, 501, 501,
	501, 501, 29, 597, -1000, 501, 501, 709, -1000, 709,
	709, 264, -1000, -282, -1000, 1041, 1023, 378, 694, 1206,
	-1000, 842, 1220, 222, 687, -1000, -1000, 707, -1000, 396,
	1115, -1000, 1114, -1000, -1000, -1000, -1000, -1000, 810, 702,
	839, 6481, 4446, 685, -1000, -1000, -1000, -1000, -1000, 597,
	97, -186, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -54,
	187, -1000, 1000, 996, 1175, 19838, 687, 19838, -1000, -1000,
	551, -1000, -1000, 130, -1000, 19838, -1000, -1000, 858, -1000,
	961, -157, -190, 1005, 1010, 1010, 1023, 1172, 1020, 1018,
	-1000, 488, 659, -1000, -1000, -1000, -85, 600, -182, -1000,
	960, -1000, 1003, 440, -1000, -1000, -1000, -1000, 487, -1000,
	1169, 1168, -1000, 133, -1000, -1000, 901, -1000, -183, -1000,
	409, -1000, -1000, -1000, 482, 480, 70, 898, -1000, 1195,
	-188, -1000, -1000, -1000, -1000, -1000, -1000, 1205, 258, 258,
	-191, -1000, -1000, -1000, 128, 447, -1000, -1000, -1000, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 1510, 1509, 13, 73, 72, 1508, 1507, 1506, 1505,
	131, 129, 126, 1504, 1501, 1500, 1499, 1495, 1494, 1493,
	1492, 1491, 1490, 1489, 1488, 104, 1487, 1486, 1485, 1484,
	1483, 103, 102, 447, 1482, 1480, 1479, 1478, 1477, 1476,
	1475, 1473, 1472, 1470, 1469, 1467, 1462, 1456, 105, 1451,
	1449, 1448, 1447, 1446, 1445, 1444, 1443, 1441, 1440, 1434,
	101, 1432, 44, 258, 59, 64, 1429, 67, 1428, 1427,
	1426, 1424, 1422, 1827, 1421, 32, 62, 75, 1420, 35,
	1419, 1417, 96, 1416, 1415, 57, 1414, 1410, 2187, 1408,
	56, 69, 18, 22, 1404, 1403, 1401, 1399, 99, 2086,
	1398, 1397, 12, 1396, 1395, 115, 1394, 77, 21, 16,
	10, 17, 1393, 76, 1392, 19, 1391, 1390, 1389, 70,
	1388, 1385, 1384, 1383, 34, 1382, 65, 82, 78, 1381,
	6, 9, 1378, 1377, 1376, 1375, 1374, 1373, 4, 1372,
	1370, 1369, 1365, 40, 1362, 5, 1361, 61, 41, 20,
	8, 1356, 1355, 25, 83, 63, 87, 1354, 1353, 1352,
	535, 1350, 43, 1340, 127, 1339, 37, 1338, 411, 501,
	1336, 1328, 1328, 1328, 1328, 45, 977, 1789, 23, 97,
	1327, 1326, 1218, 46, 68, 30, 1325, 1320, 1319, 107,
	55, 42, 617, 36, 1318, 1317, 1316, 1314, 1313, 1312,
	1311, 95, 1309, 1308, 1307, 29, 28, 98, 27, 1305,
	1304, 1303, 1299, 49, 39, 1298, 94, 90, 51, 89,
	1297, 106, 79, 54, 1296, 33, 1295, 1293, 1292, 1277,
	31, 11, 1276, 84, 74, 48, 26, 38, 81, 1273,
	24, 1272, 1270, 80, 86, 1270, 1270, 1270, 15, 1266,
	3, 0, 1264, 7, 110, 1264, 1090, 1263, 1, 1262,
	2, 1255, 1254, 71, 1253, 1252, 1245, 1244, 2351, 431,
	100, 1234, 108,
}

var yyR1 = [...]int{
	0, 266, 267, 267, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 251, 251, 251, 254, 254, 21, 45,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 54, 54, 11, 12, 12, 12, 12,
	270, 270, 82, 82, 83, 83, 147, 147, 13, 14,
	14, 156, 156, 155, 155, 155, 157, 157, 157, 157,
	192, 192, 15, 15, 15, 15, 15, 61, 61, 253,
	253, 252, 250, 250, 249, 249, 248, 23, 24, 28,
	29, 30, 256, 256, 226, 34, 34, 33, 33, 33,
	33, 35, 35, 32, 32, 31, 31, 228, 228, 215,
	215, 227, 227, 227, 227, 227, 227, 227, 214, 194,
	194, 194, 194, 197, 197, 195, 195, 195, 195, 195,
	195, 195, 195, 195, 196, 196, 196, 196, 196, 198,
	198, 198, 198, 198, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 199, 200,
	200, 200, 200, 200, 200, 200, 200, 213, 213, 201,
	201, 207, 207, 208, 208, 208, 210, 210, 211, 211,
	170, 170, 170, 203, 203, 204, 204, 209, 209, 205,
	205, 205, 206, 206, 206, 212, 212, 212, 212, 212,
	202, 202, 216, 240, 240, 239, 239, 235, 235, 235,
	235, 225, 225, 232, 232, 232, 232, 232, 224, 224,
	220, 220, 220, 221, 221, 222, 222, 219, 219, 223,
	223, 234, 234, 233, 217, 217, 218, 218, 243, 243,
	243, 243, 244, 259, 260, 258, 258, 258, 258, 258,
	171, 171, 171, 229, 229, 229, 230, 230, 230, 231,
	231, 231, 257, 257, 116, 116, 117, 117, 27, 27,
	26, 26, 25, 25, 25, 25, 25, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 247, 245, 245, 246, 246, 17, 22,
	22, 18, 18, 18, 18, 19, 19, 36, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 37, 37, 37, 37, 37,
	37, 37, 37, 37, 37, 163, 163, 261, 261, 165,
	165, 161, 161, 164, 164, 162, 162, 162, 166, 166,
	166, 167, 167, 265, 265, 265, 38, 38, 40, 40,
	41, 42, 42, 187, 187, 188, 188, 43, 44, 53,
	53, 53, 53, 53, 53, 55, 55, 55, 7, 7,
	7, 7, 50, 50, 50, 6, 6, 39, 39, 46,
	262, 262, 263, 264, 264, 264, 264, 47, 20, 271,
	48, 49, 49, 60, 60, 60, 56, 56, 56, 59,
	59, 59, 64, 64, 66, 66, 66, 66, 66, 67,
	67, 67, 67, 67, 67, 63, 63, 65, 65, 65,
	65, 180, 180, 180, 179, 179, 74, 74, 75, 75,
	76, 76, 77, 77, 77, 114, 91, 91, 146, 146,
	145, 145, 148, 148, 78, 78, 78, 78, 79, 79,
	80, 80, 81, 81, 186, 186, 185, 185, 185, 184,
	184, 84, 84, 84, 86, 85, 85, 85, 85, 87,
	87, 89, 89, 88, 88, 90, 92, 92, 92, 92,
	92, 93, 93, 73, 73, 73, 73, 73, 73, 73,
	73, 159, 159, 95, 95, 94, 94, 94, 94, 94,
	94, 94, 94, 94, 94, 106, 106, 106, 106, 106,
	106, 96, 96, 96, 96, 96, 96, 96, 62, 62,
	107, 107, 107, 113, 108, 108, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	103, 103, 103, 103, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 272, 272, 105, 104, 104, 104, 104,
	104, 104, 104, 58, 58, 58, 58, 58, 191, 191,
	193, 193, 193, 193, 193, 193, 193, 193, 193, 193,
	193, 193, 193, 120, 120, 57, 57, 118, 118, 119,
	121, 121, 115, 115, 115, 98, 98, 98, 98, 98,
	98, 98, 98, 100, 100, 100, 122, 122, 123, 123,
	124, 124, 125, 125, 126, 127, 127, 127, 128, 128,
	128, 128, 241, 241, 241, 241, 241, 236, 236, 236,
	236, 237, 237, 237, 68, 68, 68, 68, 70, 70,
	69, 69, 51, 51, 52, 52, 52, 71, 71, 72,
	72, 72, 72, 143, 143, 143, 129, 129, 129, 129,
	134, 134, 134, 130, 130, 132, 132, 132, 133, 133,
	133, 131, 137, 137, 139, 139, 138, 138, 136, 136,
	141, 141, 140, 140, 135, 135, 97, 97, 97, 97,
	97, 144, 144, 144, 144, 149, 149, 109, 109, 111,
	111, 110, 112, 150, 150, 153, 151, 151, 154, 154,
	154, 154, 154, 152, 152, 152, 181, 181, 181, 158,
	158, 168, 168, 169, 169, 160, 160, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 173, 173, 173,
	174, 174, 142, 142, 142, 142, 242, 242, 238, 177,
	177, 178, 178, 182, 182, 183, 183, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 175, 175,
	175, 175, 175, 175, 175, 175, 175, 175, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 268,
	269, 189, 190, 190, 190,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 3, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 3, 1, 2, 3, 1,
	1, 1, 0, 1, 0, 2, 0, 2, 0, 1,
	1, 3, 2, 2, 2, 5, 5, 2, 4, 3,
	6, 7, 5, 5, 5, 12, 7, 5, 9, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 7, 1, 3, 8, 8, 3, 3,
	5, 4, 6, 5, 4, 3, 2, 3, 4, 3,
	3, 3, 3, 3, 3, 4, 2, 4, 4, 4,
	4, 4, 5, 7, 4, 4, 4, 4, 4, 4,
	4, 4, 2, 4, 7, 2, 4, 5, 4, 3,
	3, 5, 2, 3, 3, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 5, 6, 4, 4, 6, 6, 6, 8,
	8, 8, 8, 9, 8, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 4, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -266, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -36, -37, -38, -40,
	-41, -42, -43, -44, -6, -39, -20, -21, -45, -46,
	-47, -4, -268, 6, 7, 8, -54, 10, 11, 31,
	-23, -28, 146, -29, -24, 147, -30, 149, 148, 182,
	150, 175, 70, 210, 211, 213, 214, 215, 216, -55,
	180, 181, 152, 35, 41, 32, 33, 80, 9, 308,
	177, 176, 26, -267, 412, -60, 5, -124, 16, -3,
	-48, -271, -48, -48, -48, -48, -48, -48, -226, -228,
	80, 119, 80, -61, 154, -142, -256, 100, 160, 163,
	164, 299, 153, -34, -33, -32, -31, -35, 30, -27,
	-26, -25, 151, 154, -256, 156, 270, -254, -251, 83,
	84, 85, 154, 154, 155, 156, -256, 154, -88, -182,
	-251, -176, 318, 168, 350, 351, 209, 76, 260, 210,
	224, 218, 245, 237, 319, 352, 169, 198, 235, 238,
	286, 353, 282, 265, 273, 94, 213, 295, 354, 75,
	47, 40, 178, 233, 229, 199, 355, 327, 192, 227,
	46, 28, 45, 356, 275, 250, 44, 357, 79, 323,
	277, 228, 274, 208, 152, 358, 406, 284, 359, 251,
	255, 360, 287, 48, 361, 362, 363, 74, 222, 223,
	364, 206, 167, 289, 249, 165, 34, 278, 320, 54,
	186, 290, 42, 253, 41, 410, 365, 248, 244, 49,
	366, 367, 368, 369, 247, 221, 243, 204, 58, 257,
	256, 258, 193, 285, 240, 370, 371, 372, 172, 77,
	373, 230, 19, 374, 375, 200, 376, 52, 377, 378,
	293, 181, 379, 50, 37, 184, 380, 381, 382, 383,
	384, 283, 385, 276, 252, 254, 188, 272, 322, 386,
	226, 387, 173, 185, 180, 294, 174, 388, 389, 390,
	391, 392, 393, 394, 214, 39, 395, 396, 397, 398,
	207, 203, 288, 297, 57, 78, 262, 399, 220, 201,
	400, 211, 51, 195, 268, 205, 43, 241, 187, 401,
	402, 231, 232, 246, 219, 242, 212, 407, 189, 182,
	403, 296, 202, 263, 324, 194, 239, 236, 196, 404,
	156, 190, 191, 405, 408, 279, 269, 280, 281, 270,
	197, 234, 264, 154, 238, 286, 265, 266, 267, 278,
	279, 284, 283, 188, -265, 287, 154, -161, 137, 146,
	275, -165, 276, 269, 270, 197, -261, -251, 288, 410,
	271, 277, 281, 280, -182, 212, -187, 217, -177, -251,
	-176, 215, -88, -53, 406, 150, -189, -189, -189, -108,
	-73, -94, 103, -99, 30, 24, -98, -95, -115, -112,
	-113, 137, 138, 140, 139, 141, 126, 127, 134, 104,
	142, -103, -101, -102, -104, 87, 86, 95, 88, 89,
	90, 91, 96, 97, 98, -177, -182, -110, -268, 64,
	65, 309, 310, 311, 312, 317, 313, 106, 53, 298,
	307, 306, 305, 302, 303, 300, 301, 315, 316, 159,
	299, 153, 132, 308, -251, -176, 40, 268, 268, -5,
	-4, -268, 6, 21, 22, -128, 18, 17, -269, 82,
	-56, -66, 59, 60, -67, 22, 36, 63, 61, -49,
	-65, 128, -73, -182, -65, -160, 158, -160, -160, -151,
	-192, 212, -154, 288, 287, -178, -152, -177, -175, 286,
	238, 285, 151, 325, 102, 23, 25, 105, 137, 17,
	106, 166, 136, 162, 309, 146, 68, 326, 300, 301,
	298, 304, 311, 312, 299, 266, 30, 11, 328, 26,
	176, 22, 36, 130, 148, 109, 110, 179, 24, 177,
	98, 331, 20, 71, 171, 12, 164, 14, 332, 333,
	15, 159, 158, 121, 155, 66, 9, 142, 27, 118,
	62, 334, 29, 335, 336, 337, 338, 64, 119, 18,
	302, 303, 32, 411, 339, 317, 183, 132, 69, 55,
	103, 340, 341, 96, 342, 99, 72, 100, 16, 67,
	38, 343, 344, 161, 345, 291, 346, 120, 149, 308,
	65, 347, 153, 267, 6, 314, 31, 175, 163, 63,
	348, 154, 108, 315, 316, 157, 97, 5, 160, 33,
	10, 70, 73, 305, 306, 307, 53, 321, 107, 13,
	349, 292, 101, -227, 119, -214, -218, -177, 170, -244,
	166, -88, -234, -233, -177, -68, 76, -169, 159, 155,
	-169, 308, -31, -32, 238, 136, 81, -218, -217, -216,
	-257, 170, -243, -232, 162, 171, -224, 163, 164, -219,
	155, 29, -88, -88, 146, 148, 151, 72, -33, 194,
	-22, -88, -168, 159, -251, -168, -168, -88, 143, -88,
	31, -166, 119, 13, -166, -166, -166, -166, -166, 195,
	282, 195, 282, 195, 196, 195, 196, 195, -164, -163,
	273, 274, 268, 272, -251, 299, 284, -251, 188, 154,
	189, 156, -220, 155, 34, 167, 196, 268, 191, -166,
	-190, -268, -178, 157, -177, -50, -177, 87, -7, -3,
	-11, -10, -12, 111, 81, 102, 100, 101, 118, -73,
	-96, 121, 103, 119, 120, 105, 123, 122, 133, 126,
	127, 128, 129, 130, 131, 132, 124, 125, 136, 111,
	112, 113, 114, 115, 116, 117, -159, -268, -113, -268,
	144, 145, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -268, 143, -2, -108, -4, -268, -268, -268,
	-268, -268, -268, -268, -268, -120, -73, -268, -272, -105,
	-268, -272, -105, -272, -105, -272, -268, -272, -105, -272,
	-105, -272, -272, -105, -268, -268, -268, -268, -268, -268,
	-268, -189, -262, -263, -91, -88, -124, -3, -48, -143,
	20, 32, -73, -125, -126, -73, -124, 55, -63, -65,
	-67, 59, 60, 93, 12, -180, -179, 23, -177, 87,
	143, 12, -89, 27, -88, -75, -76, -77, -78, -91,
	-114, -268, 12, -82, -83, -88, -90, -182, 81, 212,
	-154, -192, -156, -155, 289, 291, 111, -181, -177, 87,
	30, 31, 82, 81, -88, -194, -197, -199, -198, -200,
	-195, -196, 235, 236, 137, 239, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 31, 178, 231, 232,
	233, 234, 251, 252, 253, 254, 255, 256, 257, 258,
	218, 237, 319, 219, 220, 221, 222, 223, 224, 226,
	227, 228, 229, 230, -254, -251, 80, 82, 81, -201,
	80, -71, 199, 111, -88, 103, -251, -251, 31, -225,
	111, -25, 80, -214, -223, -254, -251, 80, 29, 161,
	160, -222, -219, -222, -223, -251, -190, 190, 190, 154,
	154, 203, -88, 40, 81, 157, -82, 24, 72, -88,
	-251, -183, -182, -175, -166, 87, -73, -166, -88, -166,
	-88, -166, -166, -166, -166, -162, 12, 121, -221, 12,
	121, -162, -190, -190, -88, -190, -190, -88, -190, -190,
	-221, -167, 119, 72, -188, 215, 249, 407, 408, 409,
	-73, -73, -73, -73, -106, 96, 103, 97, 98, -99,
	-107, -110, -113, 92, 121, 119, 120, 105, -99, -99,
	-99, -99, -99, -99, -99, -99, -99, -99, -99, -99,
	-99, -99, -99, -191, -251, 87, -251, -98, -98, -177,
	-64, 22, 36, -63, -178, -183, -175, -60, -269, -269,
	-124, -63, -63, -73, -73, -115, 87, -63, -115, 87,
	-63, -63, -59, 22, 36, -118, -119, 107, -115, -177,
	-182, -269, -99, -177, -177, -63, -64, -64, -63, -63,
	81, -264, 291, 292, 411, -185, 184, -184, 23, -182,
	87, -128, -269, -129, 27, 10, 121, 81, 19, 81,
	-127, 25, 26, -128, -100, -177, 88, 91, -74, 81,
	12, -67, -88, -179, 128, -183, -88, -147, 184, -88,
	31, 81, -84, -86, -85, -87, 62, 66, 68, 63,
	64, 65, 69, -186, 23, -75, -3, -268, -88, -82,
	-270, 81, 12, 73, -270, 81, 143, -154, -156, 81,
	290, 292, 293, 72, 99, -73, -206, 136, -229, -230,
	-231, -178, 87, 88, -214, -216, -217, -218, 82, -170,
	96, 103, -210, 263, -201, -201, -201, -201, -201, -205,
	238, -205, -205, -205, 80, 80, -201, -201, -201, -201,
	-207, 80, -207, -207, -208, 80, -208, -244, -73, -240,
	-239, -235, -238, 165, 94, 321, 73, -233, -127, 88,
	-70, 201, 111, 202, 204, 205, 24, -242, -238, -225,
	-251, 87, -215, -214, -116, 208, -243, -234, 80, 29,
	-222, -223, -223, -88, -88, -88, -88, -88, 151, 148,
	192, -88, -88, -88, -190, -166, -182, -182, -88, -166,
	-88, 87, -88, -177, 96, 97, 98, -107, -99, -99,
	-99, -62, 179, 102, -269, -269, -63, -63, -268, 143,
	-5, -128, -269, -269, 81, 73, 23, 12, 12, -269,
	12, 12, -269, -269, -63, -121, -119, 109, -73, -269,
	143, -269, 81, 81, -269, -269, -269, -269, -269, -263,
	410, 292, -92, 70, 158, 71, -268, -184, -143, 38,
	46, 57, -73, -73, -126, -143, -158, 20, 12, 53,
	53, -93, 13, -65, -75, -67, 143, -93, -97, 31,
	53, -3, -268, -268, -150, -153, -115, -76, -77, -77,
	-76, -77, 62, 62, 62, 67, 62, 67, 62, -85,
	-182, -269, -269, -3, -147, 73, -75, -88, -75, -90,
	-182, 128, -155, -157, 294, 291, 297, -251, 87, 81,
	-231, 111, -218, -203, 30, 96, -211, 264, -205, -205,
	-206, 31, -206, -206, -206, -213, 87, -213, 88, 88,
	82, -241, -236, -237, 32, 76, -235, -225, 87, 37,
	-177, 82, 156, 207, -72, 304, 87, 83, 72, -251,
	87, 81, 82, -117, 209, -115, 82, -145, -177, -223,
	-253, 73, 190, 260, 190, 193, 157, -190, -162, -162,
	-62, 102, -99, -99, -269, -269, -64, -178, -124, -143,
	-193, 137, 235, 178, 233, 229, 249, 240, 262, 231,
	263, -191, -193, -99, -99, -99, -99, 318, -124, 110,
	-73, 108, -178, -99, -99, 155, 155, 155, -148, -177,
	39, 87, 87, 58, -88, -122, 14, -73, 128, -128,
	-149, 72, -150, -109, -111, -110, -268, -144, -269, -177,
	-148, -93, 81, 111, -80, -79, 72, 73, -81, 72,
	-79, 62, 62, -269, -93, -75, -93, -93, 143, 291,
	295, 296, -230, -231, -204, 72, -99, -206, -206, -251,
	137, 82, 81, 82, 81, 82, 81, -171, 356, 103,
	-237, -236, -225, -225, 88, -251, -88, -69, 199, 206,
	80, 84, -88, -214, -115, -240, 82, 81, -250, 321,
	-252, -251, -177, -177, -177, -88, -166, -166, -99, -269,
	-128, -269, -201, -201, -201, -208, -201, 223, -201, 223,
	-269, -269, 20, 20, 20, 20, -268, -57, 314, -73,
	81, 81, -268, -268, -268, -269, 81, 87, -205, -123,
	15, 17, 28, -149, 81, -269, -269, 81, 53, 143,
	-269, -124, -153, -73, -73, 80, -73, -124, -93, -209,
	260, 10, -205, 87, -205, 88, 88, 356, 30, 77,
	78, 79, 30, 74, 75, -146, 80, 82, 173, -177,
	-249, -248, -178, 80, 73, -143, -205, -251, -99, -99,
	-99, -99, -99, -128, 87, -99, -99, -145, -269, -145,
	-145, -185, -177, -205, -131, -136, -164, -73, -108, 29,
	-111, 53, -3, -177, -109, -177, -128, -145, -128, -212,
	161, 29, 160, -102, -206, -206, 82, 82, 23, -145,
	-88, 81, 111, -145, -88, -269, -269, -269, -269, -58,
	121, 321, -269, -269, -269, -269, -269, -269, -92, -134,
	406, -137, 42, -138, 43, 10, -109, 143, 82, -202,
	94, 29, 29, -3, 82, 80, -248, -231, 82, -269,
	319, 69, 322, -131, 47, 241, -139, 51, -140, -135,
	52, 17, -150, -177, 87, -51, 321, -145, -253, 58,
	320, 323, -132, 49, -130, 48, -130, -138, 17, -141,
	44, 45, 87, -52, 198, 410, 82, -250, 58, -133,
	50, 72, 99, 87, 17, 17, 166, -259, -260, 72,
	321, 72, 99, 87, 87, 200, -260, 72, 11, 10,
	322, -258, 174, 169, 172, 31, -258, 323, 168, 30,
	96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 690, 0, 429, 429, 429, 429, 429, 429, 429,
	0, 0, -2, -2, 278, 0, 36, 0, 0, 0,
	0, -2, 387, 388, 0, 390, -2, 0, 0, 399,
	1181, 1181, 1181, 0, 0, 0, 0, 1179, 53, 54,
	405, 406, 407, 1, 3, 0, 433, 698, 0, 0,
	-2, 431, 0, 0, 805, 805, 805, 0, 82, 83,
	0, 0, 0, 714, 803, 0, 803, 0, 823, 824,
	825, 102, 103, 86, -2, 107, 108, 0, 112, 287,
	279, 280, -2, 0, 101, 0, 0, 111, 37, 33,
	34, 35, 0, 801, 0, 801, 801, 0, 326, 513,
	833, 834, 968, 969, 970, 971, 972, 973, 974, 975,
	976, 977, 978, 979, 980, 981, 982, 983, 984, 985,
	986, 987, 988, 989, 990, 991, 992, 993, 994, 995,
	996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005,
	1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015,
	1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025,
	1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035,
	1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045,
	1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055,
	1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065,
	1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075,
	1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085,
	1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095,
	1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105,
	1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
	1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135,
	1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145,
	1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155,
	1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165,
	1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175,
	1176, 1177, 1178, 0, 0, 378, 378, 378, 378, 378,
	378, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	352, 0, 355, 0, 0, 362, 378, 1182, 384, 385,
	372, 370, 367, 368, 386, 389, 0, 394, 397, 829,
	830, 0, 412, 0, 1022, 404, 417, 418, 428, 38,
	564, 523, 0, 529, 531, 0, 566, 567, 568, 569,
	570, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 596, 597, 598, 599, 675, 676, 677, 678, 679,
	680, 681, 682, 533, 534, 672, 0, 782, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 663, 0, 633,
	633, 633, 633, 633, 633, 633, 633, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 1181, 0, 427, 690,
	49, 0, 429, 434, 435, 733, 0, 0, 690, 1180,
	0, 0, -2, -2, 445, 451, 452, 453, 454, 430,
	0, 457, 461, 0, 0, 0, 806, 0, 0, 68,
	0, 1152, 786, -2, -2, 0, 0, 831, 832, -2,
	985, -2, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	945, 946, 947, 948, 949, 950, 951, 952, 953, 954,
	955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
	965, 966, 967, 0, 0, 121, 122, 0, 36, 247,
	0, 117, 0, 241, 179, 727, 0, 0, 0, 0,
	0, 88, 109, 110, 0, 221, 0, 282, 283, 284,
	0, -2, 245, 0, 273, 0, 0, 235, 235, 239,
	237, 238, 98, 1182, 0, 0, 0, 0, -2, 0,
	318, 0, 0, 0, 0, 0, 0, 325, 0, 327,
	378, 329, 0, 0, 330, 331, 332, 333, 334, 378,
	0, 378, 0, 378, 378, 378, 378, 375, 0, 375,
	373, 374, 365, 366, 1182, 1182, 0, 1182, 1182, 0,
	1182, 1182, 0, 230, 231, 232, 381, 359, 360, 363,
	364, 1183, 1184, 395, 398, 415, 413, 414, 416, 408,
	409, 410, 411, 0, 0, 0, 0, 0, 0, 527,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 551,
	552, 553, 554, 555, 556, 557, 530, 0, 544, 0,
	0, 0, 586, 587, 588, 589, 590, 591, 592, 593,
	594, 0, 442, 0, 0, 0, 690, 0, 0, 0,
	0, 0, 0, 0, 439, 0, 664, 0, 617, 625,
	0, 618, 626, 619, 627, 620, 0, 621, 628, 622,
	629, 623, 624, 630, 0, 0, 0, 442, 442, 0,
	0, 39, 419, 420, 0, 496, 698, 0, 444, 736,
	0, 0, 699, 691, 692, 695, 698, 0, 466, 455,
	446, 449, 450, 432, 0, 458, 462, 0, 464, 465,
	0, 0, 66, 0, 512, 0, 468, 470, 471, 472,
	494, 0, 0, 0, 0, 62, 64, 513, 0, 1152,
	792, 0, 70, 71, 0, 0, 0, 202, 796, 797,
	798, 794, 263, 228, 0, 190, 186, 130, 131, 132,
	179, 134, 179, 179, 179, 179, 199, 199, 199, 199,
	162, 163, 164, 165, 166, 0, 0, 149, 179, 179,
	179, 179, 169, 170, 171, 172, 173, 174, 175, 176,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 181,
	181, 181, 183, 183, 0, 37, 0, 213, 0, 695,
	0, 718, 0, 0, 97, 0, 826, 100, 221, 0,
	222, 281, 0, 274, 229, 0, -2, 0, 0, 0,
	235, 239, 236, 239, 227, 240, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 321, 802, 0, 1182,
	324, 514, 835, 836, 328, 379, 380, 335, 353, 337,
	356, 338, 340, 339, 341, 378, 0, 0, 0, 233,
	234, 378, 344, 345, 346, 347, 348, 349, 350, 351,
	0, 358, 0, 0, 0, 396, 400, 401, 402, 403,
	565, 524, 525, 526, 528, 545, 0, 547, 549, 535,
	536, 560, 561, 562, 0, 0, 0, 0, 558, 540,
	0, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 581, 582, 585, 648, 649, 0, 583, 584, 595,
	0, 0, 0, 443, 673, 0, -2, 0, 563, 781,
	698, 0, 0, 0, 0, 568, 675, 0, 568, 675,
	0, 0, 0, 440, 441, 670, 667, 0, 0, 672,
	0, 634, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 422, 423, 425, 0, 516, 1091, 497, 0, 499,
	500, 733, 50, 40, 0, 734, 0, 0, 0, 0,
	694, 696, 697, 733, 0, 683, 0, 0, 521, 0,
	0, 447, 46, 463, 459, 0, 521, 0, 0, 511,
	0, 0, 0, 0, 0, 0, 501, 0, 0, 504,
	0, 0, 0, 0, 495, 0, 0, 0, -2, 0,
	0, 0, 60, 61, 0, 0, 0, 787, 69, 0,
	0, 74, 75, 788, 789, 790, 791, 0, 104, 264,
	266, 269, 270, 271, 123, 125, 126, 127, 118, 193,
	191, 0, 188, 187, 133, 199, 199, 156, 157, 202,
	0, 202, 202, 202, 0, 0, 150, 151, 152, 153,
	144, 0, 145, 146, 147, 0, 148, 246, 0, 702,
	214, 215, 217, 221, 0, 0, 0, 242, 243, 0,
	0, 0, 0, 715, 716, 717, 804, 0, 827, 0,
	115, 116, 0, 119, 276, 0, 244, 0, 0, 223,
	239, 224, 225, 89, 292, 294, 293, 297, 0, 0,
	0, 0, 319, 1182, 323, 342, 376, 377, 375, 357,
	375, 382, 361, 392, 546, 548, 550, 537, 558, 541,
	0, 538, 0, 0, 532, 600, 0, 0, 442, 0,
	690, 733, 604, 605, 0, 0, 0, 0, 0, 641,
	0, 0, 642, 0, 690, 0, 668, 0, 0, 616,
	0, 635, 0, 0, 636, 637, 638, 639, 640, 421,
	424, 426, 476, 0, 0, 0, 0, 498, 42, 0,
	0, 0, 700, 701, 693, 41, 0, 799, 800, 684,
	685, 686, 0, 456, 467, 448, 0, 698, 775, 0,
	0, 767, 0, 0, 521, 783, 0, 469, 490, 492,
	0, 487, 502, 503, 505, 0, 507, 0, 509, 510,
	473, 474, 475, 0, 521, 0, 521, 63, 521, 65,
	0, 515, 72, 73, 0, 0, 79, 203, 204, 0,
	267, 0, 124, 195, 0, 192, 129, 189, 202, 202,
	158, 0, 159, 160, 161, 0, 177, 0, 0, 0,
	260, 84, 706, 705, 221, 221, 216, 0, 219, 0,
	828, 180, 0, 0, 728, 729, 0, 732, 0, 113,
	114, 0, 285, 286, 0, 275, 213, 0, 480, 226,
	92, 0, 0, 0, 0, 290, 0, 322, 378, 378,
	539, 0, 559, 542, 601, 602, 0, 674, 698, 44,
	0, 179, 179, 653, 179, 183, 656, 179, 658, 179,
	661, 0, 0, 0, 0, 0, 0, 0, 665, 615,
	671, 0, 673, 0, 0, 0, 0, 0, 0, 482,
	0, 199, 738, 735, 43, 688, 0, 522, 460, 47,
	51, 0, 775, 766, 777, 779, 0, 0, 0, 771,
	0, 690, 0, 0, 484, 491, 0, 0, 485, 0,
	486, 506, 508, -2, 690, 521, 58, 59, 0, 76,
	77, 78, 265, 268, 197, 0, 194, 154, 155, 200,
	201, 199, 0, 199, 0, 184, 0, 252, 261, 0,
	703, 704, 0, 0, 218, 220, 478, 719, 720, 721,
	0, 731, 99, 120, 277, 212, 0, 0, 291, 0,
	90, 91, 0, 0, 296, 320, 343, 354, 543, 603,
	733, 606, 650, 199, 654, 655, 657, 659, 660, 662,
	608, 607, 0, 0, 0, 0, 0, 698, 0, 669,
	0, 0, 0, 0, 0, 496, 0, 199, 758, 48,
	0, 0, 0, 52, 0, 780, 0, 0, 0, 0,
	67, 698, 784, 785, 488, 0, 493, 698, 57, 205,
	198, 0, 202, 178, 202, 0, 0, 262, 707, 708,
	709, 710, 711, 712, 713, 0, 0, 730, 0, 481,
	93, 94, 0, 0, 0, 45, 651, 652, 0, 0,
	0, 0, 643, 0, 666, 0, 0, 0, 518, 0,
	0, 516, 483, 740, 739, 752, 756, 689, 687, 0,
	778, 0, 770, 773, 769, 772, 55, 0, 56, 210,
	0, 207, 209, 196, 167, 168, 182, 185, 0, 0,
	0, 0, 0, 0, 298, 609, 611, 610, 612, 0,
	0, 0, 614, 631, 632, 517, 519, 520, 477, 758,
	0, 751, 754, -2, 0, 0, 768, 0, 489, 128,
	0, 206, 208, 722, 479, 0, 95, 96, 89, 613,
	0, 0, 0, 745, 743, 743, 756, 0, 760, 0,
	765, 0, 776, 774, 211, 85, 724, 0, 92, 644,
	0, 647, 748, 0, 741, 744, 742, 753, 0, 759,
	0, 0, 757, 0, 725, 726, 248, 295, 645, 737,
	0, 746, 747, 755, 0, 0, 0, 249, 250, 0,
	0, 749, 750, 761, 763, 723, 251, 0, 0, 0,
	0, 253, 255, 256, 0, 0, 254, 646, 257, 258,
	259,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 412,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:397
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:402
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:403
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:407
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:438
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:444
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:448
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:457
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:461
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:467
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:473
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:479
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:488
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:492
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:496
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:519
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:527
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:533
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:539
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:547
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:564
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:576
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:588
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:592
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:598
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:604
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:612
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:616
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:621
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:622
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:626
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:645
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:649
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:661
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:681
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:685
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:689
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:707
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:713
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:723
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:729
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:736
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:744
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:748
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:755
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:764
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:768
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:774
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:779
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:784
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:790
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:795
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:801
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:807
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:814
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:821
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:828
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:835
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:846
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:852
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:874
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:879
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:889
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:893
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:899
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:903
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:910
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:914
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:920
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:935
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:940
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:944
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:949
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:953
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:957
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:963
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:985
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:990
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1124
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1132
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1136
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1145
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1167
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1190
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1195
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1199
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1204
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1208
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1216
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1220
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1226
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1243
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1247
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1261
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1266
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1275
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1284
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1288
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1293
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1297
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1301
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1306
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1310
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1314
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1319
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1323
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1327
		{
			yyVAL.colKeyOpt = colKey
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1331
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1335
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1340
		{
			yyVAL.literal = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1344
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1350
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1355
		{
			yyVAL.indexOptions = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1359
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1365
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1379
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1394
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1408
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1416
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1420
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1425
		{
			yyVAL.str = ""
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = yyDollar[2].str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1443
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = "key"
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1488
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1492
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1498
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1504
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1524
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 249:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1532
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1536
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1548
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1581
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1585
		{
			yyVAL.boolean = true
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1589
		{
			yyVAL.boolean = false
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1594
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1598
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1602
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1610
		{
			yyVAL.str = yyDollar[1].str
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1614
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1632
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 272:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1637
		{
			yyVAL.bytes = []byte("")
		}
	case 274:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1643
		{
			yyVAL.colName = nil
		}
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1647
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 276:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1652
		{
			yyVAL.colName = nil
		}
	case 277:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1656
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 278:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1661
		{
			yyVAL.alterOptions = nil
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1665
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1671
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1675
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 282:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1681
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 283:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1685
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1689
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1693
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1697
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1703
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1735
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1739
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 290:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1746
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1753
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 292:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 293:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1775
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 294:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1779
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 295:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1783
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 296:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1796
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 298:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1839
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 316:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1855
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 317:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1859
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1871
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1875
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1883
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 322:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1887
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1892
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1896
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1902
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1906
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1911
		{
			yyVAL.statement = &OtherRead{}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1921
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1929
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1937
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1941
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 339:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1961
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1973
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 343:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1977
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 344:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 345:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1985
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1989
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1994
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 348:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1998
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 349:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2002
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 350:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2006
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 351:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2010
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2014
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2018
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 354:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2022
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2027
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 356:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2031
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 357:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2035
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 358:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2045
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2050
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2054
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 361:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2058
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2067
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2081
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2087
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2091
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2097
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2101
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2107
		{
			yyVAL.str = ""
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.str = "extended "
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2117
		{
			yyVAL.str = ""
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.str = "full "
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2137
		{
			yyVAL.str = ""
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2141
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2145
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2151
		{
			yyVAL.showFilter = nil
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2159
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 381:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2165
		{
			yyVAL.showFilter = nil
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.empty = struct{}{}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.empty = struct{}{}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2183
		{
			yyVAL.empty = struct{}{}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2189
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2199
		{
			yyVAL.statement = &Begin{}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2203
		{
			yyVAL.statement = &Begin{}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2209
		{
			yyVAL.statement = &Commit{}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.statement = &Rollback{}
		}
	case 392:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2219
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2224
		{
			yyVAL.empty = struct{}{}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.empty = struct{}{}
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2229
		{
			yyVAL.empty = struct{}{}
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2231
		{
			yyVAL.empty = struct{}{}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2242
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2247
		{
			yyVAL.explainType = EmptyType
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2251
		{
			yyVAL.explainType = JSONType
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2255
		{
			yyVAL.explainType = TreeType
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2259
		{
			yyVAL.explainType = VitessType
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2263
		{
			yyVAL.explainType = TraditionalType
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.explainType = AnalyzeType
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2273
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2277
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2281
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2287
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = ""
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = ""
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = ""
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2318
		{
			yyVAL.statement = &OtherRead{}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2328
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2338
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2344
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2348
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2354
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.lockType = Read
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2364
		{
			yyVAL.lockType = ReadLocal
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2368
		{
			yyVAL.lockType = Write
		}
	case 426:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2372
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 429:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2388
		{
			setAllowComments(yylex, true)
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2398
		{
			yyVAL.bytes2 = nil
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2402
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2408
		{
			yyVAL.boolean = true
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2412
		{
			yyVAL.boolean = false
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2416
		{
			yyVAL.boolean = true
		}
	case 436:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2421
		{
			yyVAL.str = ""
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2425
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.str = SQLCacheStr
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2434
		{
			yyVAL.boolean = false
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2438
		{
			yyVAL.boolean = true
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.boolean = true
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.selectExprs = nil
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2451
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2456
		{
			yyVAL.strs = nil
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2460
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2468
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2472
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.str = SQLCacheStr
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2486
		{
			yyVAL.str = DistinctStr
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.str = DistinctStr
		}
	case 453:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2494
		{
			yyVAL.str = StraightJoinHint
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2498
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2504
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2508
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2514
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2518
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2522
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2526
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2531
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2539
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2546
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2551
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2555
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2565
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2575
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2589
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2595
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 477:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2599
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2604
		{
			yyVAL.columns = nil
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2608
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2614
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2618
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2624
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2628
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 484:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2641
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2645
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2649
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2659
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2661
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 490:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2665
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2671
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2673
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2676
		{
			yyVAL.empty = struct{}{}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.empty = struct{}{}
		}
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2681
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2685
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2696
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2702
		{
			yyVAL.joinType = NormalJoinType
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.joinType = NormalJoinType
		}
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.joinType = NormalJoinType
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.joinType = StraightJoinType
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2722
		{
			yyVAL.joinType = LeftJoinType
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yyVAL.joinType = LeftJoinType
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2730
		{
			yyVAL.joinType = RightJoinType
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2734
		{
			yyVAL.joinType = RightJoinType
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2740
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2744
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2754
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2758
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2774
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2779
		{
			yyVAL.indexHints = nil
		}
	case 517:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2783
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2787
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2791
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2795
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2800
		{
			yyVAL.expr = nil
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2814
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2818
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2822
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2826
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2838
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2844
		{
			yyVAL.str = ""
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2848
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2854
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2858
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2864
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2868
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2872
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2876
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 539:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2880
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2884
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2888
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 542:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2892
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 543:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2896
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2900
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2906
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2918
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2926
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2932
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2936
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2940
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2944
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2948
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 556:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2956
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2961
		{
			yyVAL.expr = nil
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2965
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 560:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2971
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2975
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2979
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2985
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2991
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2995
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3001
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3005
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3009
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3017
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3021
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3025
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 574:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 579:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 580:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3089
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3093
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3097
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3101
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3109
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3123
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3127
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3131
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3149
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 601:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3153
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 602:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3157
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 603:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3161
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3171
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3175
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3179
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 607:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3183
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 608:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3187
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3191
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 610:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3195
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 611:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3199
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 612:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3203
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 613:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3207
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3211
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 615:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3215
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3219
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3229
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3237
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3242
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3247
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3252
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3258
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3263
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3268
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3272
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 631:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3295
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 632:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3309
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 637:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 638:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 639:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 640:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 641:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 642:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 643:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3349
		{
			yyVAL.matchExprOption = NoOption
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3353
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 645:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3357
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 646:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3361
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 647:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3365
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3371
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3375
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3381
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3389
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3397
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3401
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3415
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3419
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3423
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3427
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3431
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = nil
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3445
		{
			yyVAL.str = string("")
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3449
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 667:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3465
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3470
		{
			yyVAL.expr = nil
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3474
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3480
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3484
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 674:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3488
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3494
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3498
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3506
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3510
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3514
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3518
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3522
		{
			yyVAL.expr = &NullVal{}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3528
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3537
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 685:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3541
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 686:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3546
		{
			yyVAL.exprs = nil
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3550
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3555
		{
			yyVAL.expr = nil
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3559
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 690:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3564
		{
			yyVAL.orderBy = nil
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3568
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3574
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3578
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3584
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3589
		{
			yyVAL.orderDirection = AscOrder
		}
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3593
		{
			yyVAL.orderDirection = AscOrder
		}
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3597
		{
			yyVAL.orderDirection = DescOrder
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3602
		{
			yyVAL.limit = nil
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3606
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 700:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3610
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 701:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3614
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3619
		{
			yyVAL.indexOptions = nil
		}
	case 703:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3623
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3627
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3631
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 706:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3635
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3642
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3646
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3650
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3654
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3660
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3664
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3668
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3677
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3681
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3685
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3690
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3694
		{
			yyVAL.str = yyDollar[3].str
		}
	case 720:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3704
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = yyDollar[2].str
		}
	case 724:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = "cascaded"
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 727:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3731
		{
			yyVAL.str = ""
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3735
		{
			yyVAL.str = yyDollar[3].str
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 731:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 732:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3758
		{
			yyVAL.lock = NoLock
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3762
		{
			yyVAL.lock = ForUpdateLock
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3766
		{
			yyVAL.lock = ShareModeLock
		}
	case 736:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3771
		{
			yyVAL.selectInto = nil
		}
	case 737:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3775
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3779
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 739:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3783
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 740:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3788
		{
			yyVAL.str = ""
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3792
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3796
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.str = " header"
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3810
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = " manifest on"
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = " manifest off"
		}
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = ""
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = " overwrite on"
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = " overwrite off"
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3846
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3851
		{
			yyVAL.str = ""
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3855
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3860
		{
			yyVAL.str = ""
		}
	case 757:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3864
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3869
		{
			yyVAL.str = ""
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3873
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3878
		{
			yyVAL.str = ""
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3882
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 762:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3887
		{
			yyVAL.str = ""
		}
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3891
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = ""
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = " optionally"
		}
	case 766:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3913
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3917
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 768:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3921
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3925
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3929
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3935
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3939
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3943
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 774:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3947
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3952
		{
			yyVAL.updateExprs = nil
		}
	case 776:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3956
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3962
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3966
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3972
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3982
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3988
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3998
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4002
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 785:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4008
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4014
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4018
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4036
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4040
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4048
		{
			yyVAL.bytes = []byte("charset")
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4055
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4059
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4063
		{
			yyVAL.expr = &Default{}
		}
	case 801:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.boolean = false
		}
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4074
		{
			yyVAL.boolean = true
		}
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4077
		{
			yyVAL.boolean = false
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4079
		{
			yyVAL.boolean = true
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4082
		{
			yyVAL.ignore = false
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4084
		{
			yyVAL.ignore = true
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4088
		{
			yyVAL.empty = struct{}{}
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4090
		{
			yyVAL.empty = struct{}{}
		}
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.empty = struct{}{}
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4094
		{
			yyVAL.empty = struct{}{}
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4096
		{
			yyVAL.empty = struct{}{}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4098
		{
			yyVAL.empty = struct{}{}
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.empty = struct{}{}
		}
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4102
		{
			yyVAL.empty = struct{}{}
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4104
		{
			yyVAL.empty = struct{}{}
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4106
		{
			yyVAL.empty = struct{}{}
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4110
		{
			yyVAL.empty = struct{}{}
		}
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.empty = struct{}{}
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4114
		{
			yyVAL.empty = struct{}{}
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4118
		{
			yyVAL.empty = struct{}{}
		}
	case 821:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4120
		{
			yyVAL.empty = struct{}{}
		}
	case 822:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = ""
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4125
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 825:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4129
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4132
		{
			yyVAL.indexOptions = nil
		}
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4134
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4138
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 829:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4144
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 830:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4148
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4155
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4161
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4165
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4172
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4539
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4548
		{
			decNesting(yylex)
		}
	case 1181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4553
		{
			skipToEnd(yylex)
		}
	case 1182:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4558
		{
			skipToEnd(yylex)
		}
	case 1183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4562
		{
			skipToEnd(yylex)
		}
	case 1184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4566
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
