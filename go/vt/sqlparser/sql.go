// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const COMPRESSION = 57435
const NULL = 57436
const TRUE = 57437
const FALSE = 57438
const OFF = 57439
const DISCARD = 57440
const IMPORT = 57441
const ENABLE = 57442
const DISABLE = 57443
const TABLESPACE = 57444
const OR = 57445
const XOR = 57446
const AND = 57447
const NOT = 57448
const BETWEEN = 57449
const CASE = 57450
const WHEN = 57451
const THEN = 57452
const ELSE = 57453
const END = 57454
const LE = 57455
const GE = 57456
const NE = 57457
const NULL_SAFE_EQUAL = 57458
const IS = 57459
const LIKE = 57460
const REGEXP = 57461
const IN = 57462
const SHIFT_LEFT = 57463
const SHIFT_RIGHT = 57464
const DIV = 57465
const MOD = 57466
const UNARY = 57467
const COLLATE = 57468
const BINARY = 57469
const UNDERSCORE_BINARY = 57470
const UNDERSCORE_UTF8MB4 = 57471
const UNDERSCORE_UTF8 = 57472
const UNDERSCORE_LATIN1 = 57473
const INTERVAL = 57474
const JSON_EXTRACT_OP = 57475
const JSON_UNQUOTE_EXTRACT_OP = 57476
const CREATE = 57477
const ALTER = 57478
const DROP = 57479
const RENAME = 57480
const ANALYZE = 57481
const ADD = 57482
const FLUSH = 57483
const CHANGE = 57484
const MODIFY = 57485
const SCHEMA = 57486
const TABLE = 57487
const INDEX = 57488
const VIEW = 57489
const TO = 57490
const IGNORE = 57491
const IF = 57492
const UNIQUE = 57493
const PRIMARY = 57494
const COLUMN = 57495
const SPATIAL = 57496
const FULLTEXT = 57497
const KEY_BLOCK_SIZE = 57498
const CHECK = 57499
const INDEXES = 57500
const ACTION = 57501
const CASCADE = 57502
const CONSTRAINT = 57503
const FOREIGN = 57504
const NO = 57505
const REFERENCES = 57506
const RESTRICT = 57507
const SHOW = 57508
const DESCRIBE = 57509
const EXPLAIN = 57510
const DATE = 57511
const ESCAPE = 57512
const REPAIR = 57513
const OPTIMIZE = 57514
const TRUNCATE = 57515
const COALESCE = 57516
const EXCHANGE = 57517
const REBUILD = 57518
const PARTITIONING = 57519
const REMOVE = 57520
const MAXVALUE = 57521
const PARTITION = 57522
const REORGANIZE = 57523
const LESS = 57524
const THAN = 57525
const PROCEDURE = 57526
const TRIGGER = 57527
const VINDEX = 57528
const VINDEXES = 57529
const DIRECTORY = 57530
const NAME = 57531
const UPGRADE = 57532
const STATUS = 57533
const VARIABLES = 57534
const WARNINGS = 57535
const CASCADED = 57536
const DEFINER = 57537
const OPTION = 57538
const SQL = 57539
const UNDEFINED = 57540
const SEQUENCE = 57541
const MERGE = 57542
const TEMPTABLE = 57543
const INVOKER = 57544
const SECURITY = 57545
const FIRST = 57546
const AFTER = 57547
const LAST = 57548
const BEGIN = 57549
const START = 57550
const TRANSACTION = 57551
const COMMIT = 57552
const ROLLBACK = 57553
const SAVEPOINT = 57554
const RELEASE = 57555
const WORK = 57556
const BIT = 57557
const TINYINT = 57558
const SMALLINT = 57559
const MEDIUMINT = 57560
const INT = 57561
const INTEGER = 57562
const BIGINT = 57563
const INTNUM = 57564
const REAL = 57565
const DOUBLE = 57566
const FLOAT_TYPE = 57567
const DECIMAL = 57568
const NUMERIC = 57569
const TIME = 57570
const TIMESTAMP = 57571
const DATETIME = 57572
const YEAR = 57573
const CHAR = 57574
const VARCHAR = 57575
const BOOL = 57576
const CHARACTER = 57577
const VARBINARY = 57578
const NCHAR = 57579
const TEXT = 57580
const TINYTEXT = 57581
const MEDIUMTEXT = 57582
const LONGTEXT = 57583
const BLOB = 57584
const TINYBLOB = 57585
const MEDIUMBLOB = 57586
const LONGBLOB = 57587
const JSON = 57588
const ENUM = 57589
const GEOMETRY = 57590
const POINT = 57591
const LINESTRING = 57592
const POLYGON = 57593
const GEOMETRYCOLLECTION = 57594
const MULTIPOINT = 57595
const MULTILINESTRING = 57596
const MULTIPOLYGON = 57597
const NULLX = 57598
const AUTO_INCREMENT = 57599
const APPROXNUM = 57600
const SIGNED = 57601
const UNSIGNED = 57602
const ZEROFILL = 57603
const COLLATION = 57604
const DATABASES = 57605
const SCHEMAS = 57606
const TABLES = 57607
const VITESS_METADATA = 57608
const VSCHEMA = 57609
const FULL = 57610
const PROCESSLIST = 57611
const COLUMNS = 57612
const FIELDS = 57613
const ENGINES = 57614
const PLUGINS = 57615
const EXTENDED = 57616
const KEYSPACES = 57617
const VITESS_KEYSPACES = 57618
const VITESS_SHARDS = 57619
const VITESS_TABLETS = 57620
const CODE = 57621
const PRIVILEGES = 57622
const FUNCTION = 57623
const NAMES = 57624
const CHARSET = 57625
const GLOBAL = 57626
const SESSION = 57627
const ISOLATION = 57628
const LEVEL = 57629
const READ = 57630
const WRITE = 57631
const ONLY = 57632
const REPEATABLE = 57633
const COMMITTED = 57634
const UNCOMMITTED = 57635
const SERIALIZABLE = 57636
const CURRENT_TIMESTAMP = 57637
const DATABASE = 57638
const CURRENT_DATE = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const CURRENT_USER = 57643
const UTC_DATE = 57644
const UTC_TIME = 57645
const UTC_TIMESTAMP = 57646
const REPLACE = 57647
const CONVERT = 57648
const CAST = 57649
const SUBSTR = 57650
const SUBSTRING = 57651
const GROUP_CONCAT = 57652
const SEPARATOR = 57653
const TIMESTAMPADD = 57654
const TIMESTAMPDIFF = 57655
const MATCH = 57656
const AGAINST = 57657
const BOOLEAN = 57658
const LANGUAGE = 57659
const WITH = 57660
const QUERY = 57661
const EXPANSION = 57662
const WITHOUT = 57663
const VALIDATION = 57664
const UNUSED = 57665
const ARRAY = 57666
const CUME_DIST = 57667
const DESCRIPTION = 57668
const DENSE_RANK = 57669
const EMPTY = 57670
const EXCEPT = 57671
const FIRST_VALUE = 57672
const GROUPING = 57673
const GROUPS = 57674
const JSON_TABLE = 57675
const LAG = 57676
const LAST_VALUE = 57677
const LATERAL = 57678
const LEAD = 57679
const MEMBER = 57680
const NTH_VALUE = 57681
const NTILE = 57682
const OF = 57683
const OVER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const RECURSIVE = 57687
const ROW_NUMBER = 57688
const SYSTEM = 57689
const WINDOW = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const FORMAT = 57747
const TREE = 57748
const VITESS = 57749
const TRADITIONAL = 57750
const LOCAL = 57751
const LOW_PRIORITY = 57752
const AVG_ROW_LENGTH = 57753
const CONNECTION = 57754
const CHECKSUM = 57755
const DELAY_KEY_WRITE = 57756
const ENCRYPTION = 57757
const ENGINE = 57758
const INSERT_METHOD = 57759
const MAX_ROWS = 57760
const MIN_ROWS = 57761
const PACK_KEYS = 57762
const PASSWORD = 57763
const FIXED = 57764
const DYNAMIC = 57765
const COMPRESSED = 57766
const REDUNDANT = 57767
const COMPACT = 57768
const ROW_FORMAT = 57769
const STATS_AUTO_RECALC = 57770
const STATS_PERSISTENT = 57771
const STATS_SAMPLE_PAGES = 57772
const STORAGE = 57773
const MEMORY = 57774
const DISK = 57775

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	163, 901,
	-2, 87,
	-1, 43,
	142, 111,
	252, 111,
	-2, 105,
	-1, 44,
	142, 111,
	252, 111,
	-2, 320,
	-1, 51,
	34, 459,
	163, 459,
	175, 459,
	208, 473,
	209, 473,
	-2, 461,
	-1, 56,
	165, 483,
	-2, 481,
	-1, 80,
	55, 526,
	-2, 534,
	-1, 104,
	142, 111,
	252, 111,
	-2, 106,
	-1, 114,
	168, 228,
	169, 228,
	-2, 314,
	-1, 133,
	142, 111,
	252, 111,
	-2, 329,
	-1, 547,
	149, 912,
	-2, 908,
	-1, 548,
	149, 913,
	-2, 909,
	-1, 565,
	55, 527,
	-2, 539,
	-1, 566,
	55, 528,
	-2, 540,
	-1, 586,
	117, 1239,
	-2, 80,
	-1, 587,
	117, 1126,
	-2, 81,
	-1, 592,
	117, 1068,
	-2, 884,
	-1, 594,
	117, 1174,
	-2, 886,
	-1, 759,
	174, 36,
	179, 36,
	-2, 239,
	-1, 836,
	142, 111,
	252, 111,
	-2, 367,
	-1, 1052,
	142, 111,
	252, 111,
	-2, 263,
	-1, 1127,
	168, 228,
	169, 228,
	-2, 314,
	-1, 1136,
	174, 37,
	179, 37,
	-2, 240,
	-1, 1325,
	149, 915,
	-2, 911,
	-1, 1415,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1436,
	142, 111,
	252, 111,
	-2, 264,
	-1, 1817,
	5, 781,
	18, 781,
	20, 781,
	32, 781,
	82, 781,
	-2, 565,
	-1, 2033,
	45, 855,
	-2, 853,
}

const yyPrivate = 57344

const yyLast = 26343

var yyAct = [...]int{
	547, 2119, 2106, 1869, 2033, 1736, 2080, 1633, 491, 890,
	1797, 1980, 1958, 1601, 999, 79, 3, 1362, 1433, 1634,
	520, 1502, 506, 1798, 1006, 955, 1794, 1468, 1690, 1714,
	1473, 489, 1691, 142, 1809, 1311, 1756, 1412, 1319, 1561,
	128, 730, 1453, 558, 591, 849, 1239, 172, 1475, 1500,
	184, 1683, 458, 184, 1134, 1036, 77, 1043, 472, 1401,
	184, 754, 1027, 1620, 1710, 1026, 888, 1009, 1253, 567,
	1394, 1004, 789, 1364, 1029, 993, 1345, 31, 552, 493,
	737, 1288, 1476, 734, 760, 1377, 1033, 755, 472, 482,
	1109, 472, 184, 472, 738, 756, 1042, 588, 1040, 1464,
	1417, 75, 1256, 1016, 145, 1141, 80, 105, 968, 479,
	106, 8, 7, 74, 6, 969, 1734, 1733, 1982, 1531,
	1211, 1274, 171, 2090, 1359, 1360, 1599, 757, 2030, 767,
	1126, 111, 112, 1842, 1937, 2010, 2009, 1955, 1152, 793,
	1956, 82, 83, 84, 85, 86, 87, 792, 107, 2125,
	573, 577, 731, 553, 2020, 917, 916, 926, 927, 919,
	920, 921, 922, 923, 924, 925, 918, 794, 184, 928,
	184, 480, 481, 2077, 2118, 113, 76, 184, 2056, 842,
	2108, 1870, 184, 1519, 2076, 1480, 585, 532, 2055, 538,
	539, 536, 537, 1773, 535, 534, 533, 1899, 746, 1824,
	1825, 1428, 1429, 791, 540, 541, 1478, 1705, 1044, 107,
	1045, 1704, 748, 1600, 1823, 747, 805, 806, 1427, 809,
	810, 811, 812, 859, 857, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	886, 97, 551, 770, 550, 771, 1361, 173, 174, 175,
	1675, 1664, 1322, 166, 1663, 1447, 33, 1665, 1738, 68,
	37, 38, 795, 796, 797, 102, 177, 178, 179, 868,
	869, 802, 102, 167, 1930, 169, 107, 1454, 108, 1757,
	130, 1275, 1276, 1277, 808, 1477, 870, 2058, 150, 1183,
	871, 868, 869, 1890, 1888, 470, 102, 94, 173, 174,
	175, 1273, 474, 98, 750, 468, 99, 100, 1715, 1501,
	1851, 860, 858, 1201, 1701, 1228, 1485, 1852, 885, 140,
	2113, 1112, 1759, 884, 129, 865, 877, 837, 879, 1739,
	67, 1487, 1741, 1488, 1489, 863, 864, 1540, 2091, 861,
	862, 1227, 147, 814, 148, 813, 173, 174, 175, 117,
	118, 139, 138, 165, 1202, 769, 1203, 1740, 1225, 2006,
	1950, 778, 2021, 1503, 776, 876, 878, 486, 769, 1229,
	1395, 787, 786, 785, 784, 783, 1120, 782, 781, 1761,
	780, 1765, 1226, 1760, 775, 1758, 751, 788, 2123, 1951,
	1763, 2104, 735, 840, 807, 170, 1841, 763, 2126, 1762,
	735, 134, 115, 141, 122, 114, 449, 135, 136, 882,
	841, 151, 1764, 1766, 749, 450, 735, 101, 743, 762,
	733, 156, 123, 104, 101, 447, 1140, 1139, 1602, 1604,
	579, 1742, 1525, 1233, 893, 184, 126, 124, 119, 120,
	121, 125, 1703, 798, 1700, 1782, 116, 1479, 101, 1781,
	872, 875, 2054, 779, 1780, 127, 777, 1997, 769, 472,
	472, 472, 874, 744, 444, 1725, 434, 1454, 176, 1539,
	2037, 1521, 1538, 456, 804, 472, 472, 873, 1919, 769,
	769, 940, 941, 852, 853, 854, 855, 856, 1580, 768,
	1822, 1625, 899, 1577, 1569, 2059, 762, 765, 766, 1511,
	735, 1423, 768, 887, 759, 763, 2070, 1434, 772, 762,
	1020, 953, 846, 918, 928, 435, 928, 769, 773, 1660,
	1373, 1254, 143, 758, 1603, 1270, 891, 892, 908, 1213,
	1212, 1214, 1215, 1216, 2121, 90, 774, 2122, 881, 2120,
	2012, 1257, 437, 438, 439, 1346, 454, 455, 463, 851,
	883, 184, 451, 453, 464, 440, 441, 466, 465, 790,
	443, 442, 905, 436, 446, 461, 1807, 866, 938, 1486,
	997, 137, 69, 843, 844, 1113, 472, 996, 908, 184,
	91, 184, 184, 131, 472, 1046, 132, 903, 902, 900,
	472, 901, 768, 588, 1520, 836, 1998, 1996, 1775, 956,
	1115, 917, 916, 926, 927, 919, 920, 921, 922, 923,
	924, 925, 918, 768, 768, 928, 803, 835, 1025, 1295,
	762, 765, 766, 1576, 735, 994, 940, 941, 759, 763,
	1513, 940, 941, 1293, 1294, 1292, 1255, 1010, 173, 174,
	175, 1673, 971, 973, 975, 977, 979, 981, 982, 972,
	974, 768, 978, 980, 1517, 983, 1258, 772, 762, 991,
	1562, 850, 998, 1346, 1518, 1587, 562, 773, 173, 174,
	175, 1516, 1313, 906, 907, 905, 144, 149, 146, 152,
	153, 154, 155, 157, 158, 159, 160, 907, 905, 462,
	2040, 908, 161, 162, 163, 164, 459, 832, 1833, 833,
	778, 1513, 834, 776, 908, 2109, 906, 907, 905, 1013,
	2127, 460, 917, 916, 926, 927, 919, 920, 921, 922,
	923, 924, 925, 918, 908, 1515, 928, 742, 1314, 1936,
	184, 1935, 1220, 2110, 1105, 1218, 921, 922, 923, 924,
	925, 918, 2099, 184, 928, 1116, 1117, 926, 927, 919,
	920, 921, 922, 923, 924, 925, 918, 1444, 472, 928,
	1136, 1283, 1285, 1286, 1554, 1555, 1556, 1847, 1145, 1445,
	2100, 1687, 1149, 1284, 1686, 472, 472, 2128, 472, 1146,
	472, 472, 1208, 472, 472, 472, 472, 472, 472, 67,
	1219, 1483, 1575, 1217, 1125, 1221, 1206, 2112, 472, 1132,
	1574, 1291, 184, 1185, 1180, 1181, 916, 926, 927, 919,
	920, 921, 922, 923, 924, 925, 918, 1008, 1198, 928,
	1205, 1204, 1144, 1119, 745, 906, 907, 905, 1196, 472,
	1190, 1187, 472, 173, 174, 175, 184, 1708, 2111, 1182,
	1207, 184, 1186, 908, 184, 1238, 1161, 184, 919, 920,
	921, 922, 923, 924, 925, 918, 1104, 2101, 928, 184,
	2088, 184, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 1143, 472, 472, 184, 472, 472, 184, 472,
	472, 1189, 1135, 1122, 1123, 1121, 1194, 1195, 173, 174,
	175, 1241, 1667, 2068, 1242, 1142, 1142, 1971, 1224, 1041,
	1933, 548, 1784, 1245, 1907, 1247, 1786, 1249, 1250, 1251,
	1252, 173, 174, 175, 1154, 1495, 1155, 1696, 1157, 1159,
	1378, 1379, 1163, 1165, 1167, 1169, 1171, 1234, 1684, 1312,
	1551, 1529, 1289, 1528, 578, 1243, 1259, 1854, 1315, 1260,
	1261, 107, 1263, 1264, 748, 1266, 1267, 747, 1375, 1209,
	1785, 185, 472, 1688, 185, 1197, 906, 907, 905, 473,
	1193, 185, 1192, 1323, 1777, 173, 174, 175, 1191, 1199,
	1334, 1337, 1316, 1317, 908, 76, 1347, 906, 907, 905,
	1419, 1329, 562, 1268, 2003, 472, 472, 583, 2002, 473,
	1947, 1290, 473, 185, 473, 908, 184, 1717, 1325, 1699,
	1324, 906, 907, 905, 173, 174, 175, 1795, 472, 1442,
	1374, 1857, 2094, 1857, 2052, 184, 1806, 956, 472, 908,
	580, 581, 184, 1654, 184, 1806, 1353, 1354, 1857, 2044,
	1323, 1418, 184, 184, 1914, 906, 907, 905, 904, 472,
	1368, 1420, 472, 1857, 2038, 1857, 562, 1413, 588, 1422,
	1380, 588, 562, 908, 472, 1419, 1326, 509, 508, 511,
	512, 513, 514, 1953, 562, 1325, 510, 1392, 515, 185,
	1387, 185, 1513, 562, 1917, 562, 1857, 1862, 185, 1938,
	1388, 1839, 1838, 185, 1835, 1836, 1437, 1835, 1834, 1386,
	562, 1418, 1735, 1108, 1719, 1438, 1712, 1713, 1398, 562,
	33, 904, 562, 1108, 1107, 1053, 1052, 1514, 1621, 472,
	1455, 1456, 1457, 33, 78, 1441, 1420, 1621, 1397, 1416,
	1494, 1390, 2011, 33, 1418, 1628, 1939, 1940, 1941, 1857,
	555, 1470, 472, 1837, 1398, 1421, 1425, 1424, 472, 1386,
	1426, 1440, 1145, 1592, 1145, 1176, 1591, 1629, 1386, 1439,
	1418, 1448, 1512, 1449, 1450, 1451, 1452, 1513, 1496, 1376,
	1987, 1513, 1357, 1232, 1038, 753, 752, 1693, 1398, 1460,
	1461, 1462, 1463, 1499, 67, 741, 1398, 2046, 1737, 1386,
	67, 1960, 472, 1946, 1961, 1806, 1925, 67, 1471, 1110,
	1312, 1493, 1177, 1178, 1179, 1482, 1509, 67, 1510, 1492,
	1466, 1467, 1469, 1481, 67, 1853, 1506, 1465, 1459, 1458,
	1330, 1331, 1223, 1137, 1336, 1339, 1340, 1133, 1505, 1471,
	1504, 1106, 92, 1522, 184, 1527, 184, 184, 184, 184,
	184, 1942, 1523, 184, 184, 1692, 1480, 184, 472, 1352,
	1810, 1811, 1355, 1356, 2115, 2107, 1508, 1828, 1813, 1795,
	1706, 1271, 1236, 1173, 1645, 184, 184, 184, 770, 1646,
	771, 1526, 1647, 2096, 1407, 1408, 1816, 1902, 1815, 184,
	1142, 575, 184, 472, 1642, 1943, 1944, 2075, 1287, 1693,
	1641, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304,
	1305, 1306, 1307, 1308, 1309, 1310, 1901, 1174, 1175, 1545,
	1787, 1643, 1610, 1007, 1544, 1549, 1644, 1918, 1860, 1619,
	1532, 1618, 2064, 1289, 917, 916, 926, 927, 919, 920,
	921, 922, 923, 924, 925, 918, 568, 2061, 928, 2098,
	2079, 2081, 2087, 2086, 1608, 483, 185, 2034, 1349, 2032,
	569, 96, 1609, 917, 916, 926, 927, 919, 920, 921,
	922, 923, 924, 925, 918, 568, 800, 928, 184, 1231,
	473, 473, 473, 1011, 1012, 571, 184, 570, 549, 569,
	799, 1697, 1290, 1571, 1557, 1342, 473, 473, 1403, 1406,
	1407, 1408, 1404, 1607, 1405, 1409, 1000, 168, 184, 1343,
	180, 1692, 565, 566, 571, 1614, 570, 1727, 1001, 184,
	184, 184, 184, 184, 553, 1570, 1635, 1679, 1524, 1726,
	1630, 184, 1188, 1118, 1051, 184, 848, 1672, 184, 184,
	108, 1586, 184, 184, 184, 1623, 2042, 2041, 1985, 1507,
	1652, 1151, 994, 1598, 1150, 1666, 1138, 1912, 1371, 1606,
	1403, 1406, 1407, 1408, 1404, 1490, 1405, 1409, 1613, 1235,
	1810, 1811, 185, 2004, 1622, 1655, 1411, 1626, 1624, 1657,
	1378, 1379, 1637, 1638, 1636, 1640, 559, 1639, 1241, 1648,
	1669, 1617, 1678, 2103, 1680, 1681, 1682, 473, 1658, 1616,
	185, 472, 185, 185, 1661, 473, 1653, 556, 557, 2102,
	2084, 473, 1676, 1677, 1707, 2065, 1911, 518, 472, 1856,
	1670, 1497, 560, 78, 472, 1910, 1790, 472, 1621, 1145,
	1716, 1685, 2117, 2116, 472, 1581, 1578, 1021, 1014, 2117,
	2035, 1722, 1931, 1694, 1372, 1312, 1731, 1312, 555, 76,
	81, 73, 1, 445, 1358, 992, 457, 1125, 2105, 1210,
	1200, 1871, 1957, 1863, 472, 1491, 1689, 1474, 761, 133,
	1695, 1435, 1436, 1729, 2048, 471, 1325, 89, 1324, 728,
	1730, 88, 1732, 1721, 764, 880, 1498, 1995, 1954, 1674,
	472, 1720, 1728, 1566, 1567, 1446, 1312, 1929, 1827, 1753,
	1671, 2039, 1059, 1057, 1058, 590, 1755, 1056, 732, 1061,
	739, 1060, 1055, 1272, 1584, 1754, 469, 1410, 1746, 1047,
	1015, 801, 1840, 1443, 1269, 1530, 472, 1752, 452, 1774,
	1743, 1767, 867, 1768, 448, 936, 184, 1744, 1615, 1745,
	1662, 589, 582, 1945, 1801, 95, 472, 2085, 2062, 2060,
	2031, 185, 472, 472, 1981, 1753, 1796, 1635, 2063, 2029,
	2097, 2078, 1370, 1003, 185, 1909, 1789, 1585, 965, 1344,
	1799, 1030, 492, 1282, 507, 184, 504, 505, 1381, 473,
	1627, 1558, 1559, 1560, 910, 490, 484, 1022, 1402, 1400,
	1793, 1399, 1034, 1812, 1814, 1808, 473, 473, 1028, 473,
	1832, 473, 473, 1385, 473, 473, 473, 473, 473, 473,
	1702, 1111, 1819, 1484, 1850, 1830, 1831, 1805, 1848, 473,
	740, 184, 1826, 185, 564, 93, 1341, 184, 2019, 1898,
	563, 59, 36, 472, 476, 2089, 2069, 1818, 895, 1820,
	1844, 1821, 572, 1843, 1859, 30, 184, 29, 28, 23,
	473, 22, 21, 473, 20, 19, 25, 185, 1872, 472,
	472, 472, 185, 184, 1783, 185, 1864, 18, 185, 1868,
	1861, 1896, 17, 16, 1858, 103, 46, 909, 1867, 1866,
	185, 43, 185, 41, 110, 1845, 1846, 109, 44, 40,
	838, 1804, 27, 26, 473, 473, 185, 473, 473, 185,
	473, 473, 15, 1747, 14, 13, 12, 11, 10, 1886,
	1877, 1878, 9, 483, 5, 4, 898, 24, 1881, 954,
	2, 0, 966, 917, 916, 926, 927, 919, 920, 921,
	922, 923, 924, 925, 918, 1635, 0, 928, 0, 0,
	0, 0, 0, 1913, 0, 0, 1922, 0, 1908, 0,
	1921, 1002, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1927, 0, 0, 0, 0, 1883, 1884,
	0, 1885, 0, 473, 1887, 0, 1889, 472, 472, 917,
	916, 926, 927, 919, 920, 921, 922, 923, 924, 925,
	918, 472, 0, 928, 0, 0, 0, 1932, 0, 1934,
	1959, 0, 0, 1928, 0, 1964, 473, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 1962, 185, 0, 0,
	0, 0, 0, 0, 472, 472, 472, 184, 0, 473,
	0, 0, 0, 1348, 0, 0, 185, 0, 472, 473,
	472, 1948, 0, 185, 1978, 185, 472, 1963, 0, 1990,
	1748, 1749, 1988, 185, 185, 1799, 0, 1984, 1986, 1799,
	473, 0, 1970, 473, 0, 1769, 1770, 472, 1771, 1772,
	1979, 2000, 184, 2001, 1999, 473, 590, 590, 590, 1778,
	1779, 472, 184, 0, 0, 1992, 0, 0, 1974, 1976,
	1977, 1994, 894, 896, 0, 2008, 0, 917, 916, 926,
	927, 919, 920, 921, 922, 923, 924, 925, 918, 0,
	1993, 928, 2028, 561, 0, 0, 0, 0, 2036, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1799, 0,
	473, 2005, 472, 472, 0, 0, 0, 0, 0, 0,
	2043, 1959, 2049, 0, 2047, 2013, 0, 0, 0, 0,
	0, 0, 0, 473, 0, 0, 0, 0, 472, 473,
	1829, 2057, 0, 2066, 1635, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2074, 0,
	0, 166, 0, 0, 0, 2083, 2082, 0, 0, 0,
	0, 0, 0, 1018, 0, 0, 0, 0, 2095, 0,
	0, 590, 0, 473, 0, 0, 108, 1048, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2114, 0,
	0, 2073, 0, 0, 0, 1879, 0, 0, 0, 2124,
	0, 0, 0, 1244, 0, 185, 0, 185, 185, 185,
	185, 185, 0, 0, 185, 185, 0, 1668, 185, 473,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	147, 0, 148, 0, 0, 0, 185, 185, 185, 0,
	0, 165, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 0, 108, 185, 473, 0, 1278, 1279, 1280, 1281,
	0, 912, 150, 915, 0, 0, 0, 0, 0, 929,
	930, 931, 932, 933, 934, 935, 0, 913, 914, 911,
	917, 916, 926, 927, 919, 920, 921, 922, 923, 924,
	925, 918, 0, 0, 928, 0, 0, 0, 0, 151,
	0, 0, 0, 1895, 0, 0, 0, 0, 0, 156,
	0, 1332, 1333, 0, 0, 0, 147, 0, 148, 1894,
	0, 0, 0, 0, 0, 0, 0, 165, 0, 0,
	0, 0, 0, 0, 0, 732, 0, 0, 0, 185,
	0, 1965, 1966, 1967, 1968, 1969, 0, 185, 1147, 1972,
	1973, 0, 1153, 1153, 0, 1153, 0, 1153, 1153, 0,
	1162, 1153, 1153, 1153, 1153, 1153, 0, 0, 0, 185,
	0, 0, 0, 1147, 1147, 732, 0, 0, 0, 0,
	185, 185, 185, 185, 185, 151, 0, 0, 0, 0,
	0, 0, 185, 0, 0, 156, 185, 0, 1432, 185,
	185, 0, 0, 185, 185, 185, 1222, 0, 0, 590,
	143, 917, 916, 926, 927, 919, 920, 921, 922, 923,
	924, 925, 918, 519, 1893, 928, 0, 917, 916, 926,
	927, 919, 920, 921, 922, 923, 924, 925, 918, 0,
	0, 928, 0, 0, 0, 0, 0, 0, 0, 0,
	590, 590, 0, 590, 590, 0, 590, 590, 1472, 0,
	0, 0, 473, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 467, 0, 0, 473,
	0, 0, 0, 183, 0, 473, 0, 0, 473, 0,
	0, 0, 0, 2071, 0, 473, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 576, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 0, 0, 0, 1318,
	0, 590, 917, 916, 926, 927, 919, 920, 921, 922,
	923, 924, 925, 918, 0, 1147, 928, 0, 0, 0,
	0, 473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1350, 1351, 144, 149, 146, 152, 153, 154,
	155, 157, 158, 159, 160, 0, 0, 0, 0, 0,
	161, 162, 163, 164, 0, 1382, 0, 473, 0, 0,
	0, 183, 0, 183, 0, 1018, 0, 185, 590, 0,
	183, 0, 0, 0, 0, 183, 0, 473, 0, 0,
	0, 0, 0, 473, 473, 0, 590, 0, 0, 590,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	144, 149, 146, 152, 153, 154, 155, 157, 158, 159,
	160, 0, 0, 0, 0, 0, 161, 162, 163, 164,
	0, 0, 0, 0, 0, 0, 0, 0, 166, 0,
	0, 0, 185, 0, 0, 0, 739, 0, 185, 1709,
	0, 0, 0, 0, 473, 0, 0, 0, 1588, 0,
	0, 0, 0, 108, 0, 130, 0, 185, 0, 732,
	0, 1563, 0, 150, 0, 739, 0, 0, 0, 0,
	473, 473, 473, 0, 185, 0, 1611, 1612, 1005, 0,
	0, 917, 916, 926, 927, 919, 920, 921, 922, 923,
	924, 925, 918, 0, 140, 928, 0, 0, 0, 129,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 732,
	0, 0, 0, 0, 0, 0, 0, 147, 0, 148,
	0, 0, 0, 0, 1128, 1129, 139, 138, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 590, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 1130, 141, 0,
	1127, 0, 135, 136, 0, 0, 151, 0, 473, 473,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	1553, 0, 473, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 473, 473, 473, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 473, 0, 0, 0, 0, 0, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 0,
	0, 0, 0, 185, 0, 0, 0, 0, 0, 1776,
	0, 0, 473, 185, 0, 0, 0, 143, 1327, 1328,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1791, 183, 1147, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 576, 0,
	0, 1369, 0, 473, 473, 0, 137, 0, 0, 0,
	0, 0, 183, 0, 183, 1037, 0, 0, 131, 0,
	0, 132, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 0, 0, 0, 0, 0, 0, 473, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 521,
	32, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 32, 0, 0, 1711, 0, 0, 0, 1147,
	0, 1718, 0, 0, 1711, 0, 0, 0, 0, 590,
	0, 1723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 144, 149, 146, 152, 153, 154, 155, 157, 158,
	159, 160, 0, 0, 0, 554, 0, 161, 162, 163,
	164, 590, 0, 0, 0, 0, 0, 0, 0, 1900,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 590, 0, 0,
	0, 0, 483, 183, 0, 0, 0, 0, 0, 1923,
	0, 0, 1924, 0, 0, 1926, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1148, 0, 0, 0, 0, 0,
	0, 0, 0, 590, 0, 0, 1147, 0, 0, 1803,
	1153, 0, 0, 0, 0, 0, 0, 0, 0, 1148,
	1148, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 1983, 483, 183, 0, 0, 183, 0, 0,
	1240, 0, 995, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 183, 0, 0, 0, 0, 0,
	732, 0, 0, 1147, 0, 0, 0, 0, 183, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 1564,
	0, 0, 0, 1565, 0, 0, 1873, 1874, 1875, 0,
	0, 0, 182, 0, 1572, 1573, 0, 0, 0, 0,
	1579, 0, 475, 1582, 1583, 0, 0, 0, 0, 0,
	0, 1589, 0, 1590, 0, 0, 1593, 1594, 1595, 1596,
	1597, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 576, 1240, 0, 0,
	0, 576, 576, 0, 1147, 576, 576, 576, 0, 0,
	0, 1148, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1650, 1651, 0, 0,
	576, 576, 576, 576, 576, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 1949, 0, 0, 183, 0,
	830, 0, 831, 0, 1240, 183, 0, 183, 590, 839,
	0, 0, 0, 0, 845, 183, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1711, 1711, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1989, 0, 1991, 889, 889,
	889, 0, 0, 1711, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 32, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 937, 939, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 952, 0,
	1750, 1751, 957, 958, 959, 960, 961, 962, 963, 964,
	0, 967, 970, 970, 970, 976, 970, 970, 976, 970,
	984, 985, 986, 987, 988, 989, 990, 0, 0, 590,
	590, 0, 0, 0, 32, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1147, 0, 2067, 0, 0, 0, 0,
	1031, 0, 0, 0, 1711, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 183, 0, 183,
	183, 183, 183, 183, 0, 0, 183, 183, 0, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1546, 1547,
	183, 0, 0, 33, 34, 35, 68, 37, 38, 0,
	0, 0, 183, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 72, 0, 0, 0, 847, 39, 65,
	66, 0, 63, 0, 0, 0, 0, 0, 64, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 576, 1880, 52, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 1891, 1892, 0, 0, 576, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1906, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 1366,
	0, 0, 0, 0, 1915, 1916, 0, 0, 1920, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	576, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1148, 183, 183, 183, 183, 183, 0, 0, 42,
	45, 48, 47, 50, 1649, 62, 0, 0, 183, 0,
	0, 183, 183, 0, 0, 183, 1659, 1240, 0, 0,
	0, 1024, 0, 0, 1035, 0, 0, 1952, 0, 0,
	51, 71, 70, 0, 0, 60, 61, 49, 0, 0,
	0, 889, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1975, 0, 0,
	0, 53, 54, 0, 55, 56, 57, 58, 0, 166,
	0, 0, 889, 889, 0, 889, 889, 0, 889, 889,
	1124, 0, 0, 0, 0, 1148, 0, 0, 0, 0,
	0, 0, 0, 0, 108, 1240, 130, 0, 0, 0,
	0, 0, 0, 0, 150, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2015,
	2016, 2017, 2018, 0, 2022, 0, 2023, 2024, 2025, 0,
	2026, 2027, 0, 0, 0, 140, 0, 0, 0, 1076,
	129, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 576, 0, 0, 0, 0, 0, 147, 69,
	148, 0, 1054, 0, 0, 1128, 1129, 139, 138, 165,
	0, 0, 0, 2053, 0, 1114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 183,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1148, 0, 0, 0, 0, 134, 1130, 141,
	0, 1127, 0, 135, 136, 2092, 2093, 151, 0, 0,
	0, 1414, 0, 0, 1184, 0, 0, 156, 183, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1230, 0,
	0, 0, 0, 1035, 0, 0, 1237, 0, 0, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	183, 1246, 0, 1248, 1077, 0, 0, 0, 0, 1148,
	0, 0, 0, 0, 0, 0, 0, 1262, 0, 183,
	1265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 143, 0,
	1090, 1093, 1094, 1095, 1096, 1097, 1098, 0, 1099, 1100,
	1101, 1102, 1103, 1078, 1079, 1080, 1081, 1062, 1063, 1091,
	0, 1065, 0, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 0, 0, 0, 0, 0, 0, 137, 0, 0,
	1148, 0, 0, 0, 0, 0, 0, 0, 0, 131,
	0, 0, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 889, 0, 0,
	0, 1092, 0, 0, 0, 0, 0, 1389, 0, 0,
	0, 0, 0, 0, 1393, 0, 1396, 0, 0, 0,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1366, 0, 144, 149, 146, 152, 153, 154, 155, 157,
	158, 159, 160, 0, 0, 0, 0, 0, 161, 162,
	163, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1568, 0, 0, 554, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1605, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1031, 0, 0,
	0, 0, 0, 0, 1631, 1632, 0, 0, 1031, 1031,
	1031, 1031, 1031, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1414, 0, 0, 1031, 0, 1148,
	0, 1031, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1035, 0, 1533, 1534,
	1535, 1536, 1537, 0, 0, 1541, 1542, 0, 0, 1543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1548,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1550, 0, 0, 1552, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 889, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	0, 32, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1656, 0, 0, 1031, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1897, 0, 0, 0, 0, 0, 0,
	1903, 1904, 1905, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1800, 0, 32, 0, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 32, 0, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 712, 699, 0, 0, 650, 715, 621,
	639, 724, 641, 644, 682, 602, 663, 320, 636, 0,
	625, 598, 632, 599, 623, 652, 236, 656, 620, 701,
	666, 714, 279, 0, 626, 333, 684, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 721, 283, 673, 0, 378, 305, 0, 0, 0,
	654, 704, 661, 695, 649, 683, 610, 672, 716, 637,
	680, 717, 269, 220, 191, 317, 379, 248, 0, 0,
	0, 173, 174, 175, 0, 2050, 2051, 0, 0, 0,
	0, 0, 212, 0, 218, 677, 711, 634, 679, 232,
	267, 238, 231, 393, 681, 727, 597, 674, 0, 600,
	603, 723, 707, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 653, 662, 692, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 671, 0, 0, 0,
	606, 601, 0, 0, 2007, 0, 651, 0, 0, 0,
	609, 0, 628, 693, 2014, 595, 255, 604, 306, 697,
	706, 648, 420, 710, 646, 645, 713, 688, 607, 703,
	640, 278, 605, 275, 187, 201, 0, 638, 316, 354,
	359, 702, 624, 633, 223, 631, 357, 329, 408, 208,
	246, 351, 334, 355, 670, 686, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 619, 698,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 690, 726, 328, 358, 214, 410, 377,
	614, 618, 612, 613, 664, 665, 615, 718, 719, 720,
	694, 608, 0, 616, 617, 0, 700, 708, 709, 669,
	186, 199, 281, 722, 348, 249, 431, 415, 413, 596,
	611, 229, 622, 0, 0, 635, 642, 643, 655, 657,
	658, 659, 660, 668, 675, 676, 678, 685, 687, 689,
	691, 696, 705, 725, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 667, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 712,
	699, 0, 0, 650, 715, 621, 639, 724, 641, 644,
	682, 602, 663, 320, 636, 0, 625, 598, 632, 599,
	623, 652, 236, 656, 620, 701, 666, 714, 279, 0,
	626, 333, 684, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 721, 283, 673,
	0, 378, 305, 0, 0, 0, 654, 704, 661, 695,
	649, 683, 610, 672, 716, 637, 680, 717, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 677, 711, 634, 679, 232, 267, 238, 231, 393,
	681, 727, 597, 674, 0, 600, 603, 723, 707, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 653, 662,
	692, 647, 0, 0, 0, 0, 0, 0, 1792, 0,
	627, 0, 671, 0, 0, 0, 606, 601, 0, 0,
	0, 0, 651, 0, 0, 0, 609, 0, 628, 693,
	0, 595, 255, 604, 306, 697, 706, 648, 420, 710,
	646, 645, 713, 688, 607, 703, 640, 278, 605, 275,
	187, 201, 0, 638, 316, 354, 359, 702, 624, 633,
	223, 631, 357, 329, 408, 208, 246, 351, 334, 355,
	670, 686, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 619, 698, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 690,
	726, 328, 358, 214, 410, 377, 614, 618, 612, 613,
	664, 665, 615, 718, 719, 720, 694, 608, 0, 616,
	617, 0, 700, 708, 709, 669, 186, 199, 281, 722,
	348, 249, 431, 415, 413, 596, 611, 229, 622, 0,
	0, 635, 642, 643, 655, 657, 658, 659, 660, 668,
	675, 676, 678, 685, 687, 689, 691, 696, 705, 725,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 667, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 712, 699, 0, 0, 650,
	715, 621, 639, 724, 641, 644, 682, 602, 663, 320,
	636, 0, 625, 598, 632, 599, 623, 652, 236, 656,
	620, 701, 666, 714, 279, 0, 626, 333, 684, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 721, 283, 673, 0, 378, 305, 0,
	0, 0, 654, 704, 661, 695, 649, 683, 610, 672,
	716, 637, 680, 717, 269, 220, 191, 317, 379, 248,
	67, 0, 0, 173, 174, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 218, 677, 711, 634,
	679, 232, 267, 238, 231, 393, 681, 727, 597, 674,
	0, 600, 603, 723, 707, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 653, 662, 692, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 671, 0,
	0, 0, 606, 601, 0, 0, 0, 0, 651, 0,
	0, 0, 609, 0, 628, 693, 0, 595, 255, 604,
	306, 697, 706, 648, 420, 710, 646, 645, 713, 688,
	607, 703, 640, 278, 605, 275, 187, 201, 0, 638,
	316, 354, 359, 702, 624, 633, 223, 631, 357, 329,
	408, 208, 246, 351, 334, 355, 670, 686, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 405, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 204, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	619, 698, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 311,
	205, 263, 376, 276, 285, 690, 726, 328, 358, 214,
	410, 377, 614, 618, 612, 613, 664, 665, 615, 718,
	719, 720, 694, 608, 0, 616, 617, 0, 700, 708,
	709, 669, 186, 199, 281, 722, 348, 249, 431, 415,
	413, 596, 611, 229, 622, 0, 0, 635, 642, 643,
	655, 657, 658, 659, 660, 668, 675, 676, 678, 685,
	687, 689, 691, 696, 705, 725, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 667, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 712, 699, 0, 0, 650, 715, 621, 639, 724,
	641, 644, 682, 602, 663, 320, 636, 0, 625, 598,
	632, 599, 623, 652, 236, 656, 620, 701, 666, 714,
	279, 0, 626, 333, 684, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 721,
	283, 673, 0, 378, 305, 0, 0, 0, 654, 704,
	661, 695, 649, 683, 610, 672, 716, 637, 680, 717,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 677, 711, 634, 679, 232, 267, 238,
	231, 393, 681, 727, 597, 674, 0, 600, 603, 723,
	707, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	653, 662, 692, 647, 0, 0, 0, 0, 0, 0,
	1660, 0, 627, 0, 671, 0, 0, 0, 606, 601,
	0, 0, 0, 0, 651, 0, 0, 0, 609, 0,
	628, 693, 0, 595, 255, 604, 306, 697, 706, 648,
	420, 710, 646, 645, 713, 688, 607, 703, 640, 278,
	605, 275, 187, 201, 0, 638, 316, 354, 359, 702,
	624, 633, 223, 631, 357, 329, 408, 208, 246, 351,
	334, 355, 670, 686, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 619, 698, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 690, 726, 328, 358, 214, 410, 377, 614, 618,
	612, 613, 664, 665, 615, 718, 719, 720, 694, 608,
	0, 616, 617, 0, 700, 708, 709, 669, 186, 199,
	281, 722, 348, 249, 431, 415, 413, 596, 611, 229,
	622, 0, 0, 635, 642, 643, 655, 657, 658, 659,
	660, 668, 675, 676, 678, 685, 687, 689, 691, 696,
	705, 725, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 667, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 712, 699, 0,
	0, 650, 715, 621, 639, 724, 641, 644, 682, 602,
	663, 320, 636, 0, 625, 598, 632, 599, 623, 652,
	236, 656, 620, 701, 666, 714, 279, 0, 626, 333,
	684, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 721, 283, 673, 0, 378,
	305, 0, 0, 0, 654, 704, 661, 695, 649, 683,
	610, 672, 716, 637, 680, 717, 269, 220, 191, 317,
	379, 248, 0, 0, 0, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 677,
	711, 634, 679, 232, 267, 238, 231, 393, 681, 727,
	597, 674, 0, 600, 603, 723, 707, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 653, 662, 692, 647,
	0, 0, 0, 0, 0, 0, 1391, 0, 627, 0,
	671, 0, 0, 0, 606, 601, 0, 0, 0, 0,
	651, 0, 0, 0, 609, 0, 628, 693, 0, 595,
	255, 604, 306, 697, 706, 648, 420, 710, 646, 645,
	713, 688, 607, 703, 640, 278, 605, 275, 187, 201,
	0, 638, 316, 354, 359, 702, 624, 633, 223, 631,
	357, 329, 408, 208, 246, 351, 334, 355, 670, 686,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 619, 698, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 690, 726, 328,
	358, 214, 410, 377, 614, 618, 612, 613, 664, 665,
	615, 718, 719, 720, 694, 608, 0, 616, 617, 0,
	700, 708, 709, 669, 186, 199, 281, 722, 348, 249,
	431, 415, 413, 596, 611, 229, 622, 0, 0, 635,
	642, 643, 655, 657, 658, 659, 660, 668, 675, 676,
	678, 685, 687, 689, 691, 696, 705, 725, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 667,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 712, 699, 0, 0, 650, 715, 621,
	639, 724, 641, 644, 682, 602, 663, 320, 636, 0,
	625, 598, 632, 599, 623, 652, 236, 656, 620, 701,
	666, 714, 279, 0, 626, 333, 684, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 721, 283, 673, 0, 378, 305, 0, 0, 0,
	654, 704, 661, 695, 649, 683, 610, 672, 716, 637,
	680, 717, 269, 220, 191, 317, 379, 248, 0, 0,
	0, 173, 174, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 218, 677, 711, 634, 679, 232,
	267, 238, 231, 393, 681, 727, 597, 674, 0, 600,
	603, 723, 707, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 653, 662, 692, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 671, 0, 0, 0,
	606, 601, 0, 0, 0, 0, 651, 0, 0, 0,
	609, 0, 628, 693, 0, 595, 255, 604, 306, 697,
	706, 648, 420, 710, 646, 645, 713, 688, 607, 703,
	640, 278, 605, 275, 187, 201, 0, 638, 316, 354,
	359, 702, 624, 633, 223, 631, 357, 329, 408, 208,
	246, 351, 334, 355, 670, 686, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 619, 698,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 690, 726, 328, 358, 214, 410, 377,
	614, 618, 612, 613, 664, 665, 615, 718, 719, 720,
	694, 608, 0, 616, 617, 0, 700, 708, 709, 669,
	186, 199, 281, 722, 348, 249, 431, 415, 413, 596,
	611, 229, 622, 0, 0, 635, 642, 643, 655, 657,
	658, 659, 660, 668, 675, 676, 678, 685, 687, 689,
	691, 696, 705, 725, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 667, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 712,
	699, 0, 0, 650, 715, 621, 639, 724, 641, 644,
	682, 602, 663, 320, 636, 0, 625, 598, 632, 599,
	623, 652, 236, 656, 620, 701, 666, 714, 279, 0,
	626, 333, 684, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 721, 283, 673,
	0, 378, 305, 0, 0, 0, 654, 704, 661, 695,
	649, 683, 610, 672, 716, 637, 680, 717, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 677, 711, 634, 679, 232, 267, 238, 231, 393,
	681, 727, 597, 674, 0, 600, 603, 723, 707, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 653, 662,
	692, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 671, 0, 0, 0, 606, 601, 0, 0,
	0, 0, 651, 0, 0, 0, 609, 0, 628, 693,
	0, 595, 255, 604, 306, 697, 706, 648, 420, 710,
	646, 645, 713, 688, 607, 703, 640, 278, 605, 275,
	187, 201, 0, 638, 316, 354, 359, 702, 624, 633,
	223, 631, 357, 329, 408, 208, 246, 351, 334, 355,
	670, 686, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 593, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 619, 698, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 594, 592, 587, 586, 276, 285, 690,
	726, 328, 358, 214, 410, 377, 614, 618, 612, 613,
	664, 665, 615, 718, 719, 720, 694, 608, 0, 616,
	617, 0, 700, 708, 709, 669, 186, 199, 281, 722,
	348, 249, 431, 415, 413, 596, 611, 229, 622, 0,
	0, 635, 642, 643, 655, 657, 658, 659, 660, 668,
	675, 676, 678, 685, 687, 689, 691, 696, 705, 725,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 667, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 712, 699, 0, 0, 650,
	715, 621, 639, 724, 641, 644, 682, 602, 663, 320,
	636, 0, 625, 598, 632, 599, 623, 652, 236, 656,
	620, 701, 666, 714, 279, 0, 626, 333, 684, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 721, 283, 673, 0, 378, 305, 0,
	0, 0, 654, 704, 661, 695, 649, 683, 610, 672,
	716, 637, 680, 717, 269, 220, 191, 317, 379, 248,
	0, 0, 0, 173, 174, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 218, 677, 711, 634,
	679, 232, 267, 238, 231, 393, 681, 727, 597, 674,
	0, 600, 603, 723, 707, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 653, 662, 692, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 671, 0,
	0, 0, 606, 601, 0, 0, 0, 0, 651, 0,
	0, 0, 609, 0, 628, 693, 0, 595, 255, 604,
	306, 697, 706, 648, 420, 710, 646, 645, 713, 688,
	607, 703, 640, 278, 605, 275, 187, 201, 0, 638,
	316, 354, 359, 702, 624, 633, 223, 631, 357, 329,
	408, 208, 246, 351, 334, 355, 670, 686, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 1039, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 593, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	619, 698, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 594,
	592, 587, 586, 276, 285, 690, 726, 328, 358, 214,
	410, 377, 614, 618, 612, 613, 664, 665, 615, 718,
	719, 720, 694, 608, 0, 616, 617, 0, 700, 708,
	709, 669, 186, 199, 281, 722, 348, 249, 431, 415,
	413, 596, 611, 229, 622, 0, 0, 635, 642, 643,
	655, 657, 658, 659, 660, 668, 675, 676, 678, 685,
	687, 689, 691, 696, 705, 725, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 667, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 712, 699, 0, 0, 650, 715, 621, 639, 724,
	641, 644, 682, 602, 663, 320, 636, 0, 625, 598,
	632, 599, 623, 652, 236, 656, 620, 701, 666, 714,
	279, 0, 626, 333, 684, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 721,
	283, 673, 0, 378, 305, 0, 0, 0, 654, 704,
	661, 695, 649, 683, 610, 672, 716, 637, 680, 717,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 677, 711, 634, 679, 232, 267, 238,
	231, 393, 681, 727, 597, 674, 0, 600, 603, 723,
	707, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	653, 662, 692, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 627, 0, 671, 0, 0, 0, 606, 601,
	0, 0, 0, 0, 651, 0, 0, 0, 609, 0,
	628, 693, 0, 595, 255, 604, 306, 697, 706, 648,
	420, 710, 646, 645, 713, 688, 607, 703, 640, 278,
	605, 275, 187, 201, 0, 638, 316, 354, 359, 702,
	624, 633, 223, 631, 357, 329, 408, 208, 246, 351,
	334, 355, 670, 686, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 584, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 593, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 619, 698, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 594, 592, 587, 586, 276,
	285, 690, 726, 328, 358, 214, 410, 377, 614, 618,
	612, 613, 664, 665, 615, 718, 719, 720, 694, 608,
	0, 616, 617, 0, 700, 708, 709, 669, 186, 199,
	281, 722, 348, 249, 431, 415, 413, 596, 611, 229,
	622, 0, 0, 635, 642, 643, 655, 657, 658, 659,
	660, 668, 675, 676, 678, 685, 687, 689, 691, 696,
	705, 725, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 667, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	1320, 0, 488, 0, 0, 0, 236, 0, 487, 0,
	0, 0, 279, 0, 1321, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 531, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 67, 0,
	0, 173, 174, 175, 509, 508, 511, 512, 513, 514,
	0, 0, 212, 510, 218, 515, 516, 517, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 485, 502, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	499, 500, 574, 0, 0, 0, 545, 0, 501, 0,
	0, 494, 495, 497, 496, 498, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 306, 544,
	0, 0, 420, 0, 0, 542, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	532, 543, 538, 539, 536, 537, 0, 535, 534, 533,
	546, 524, 525, 526, 527, 529, 0, 540, 541, 528,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 320,
	0, 0, 0, 0, 488, 0, 0, 0, 236, 0,
	487, 0, 0, 0, 279, 0, 0, 333, 0, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 531, 283, 0, 0, 378, 305, 0,
	0, 0, 0, 0, 522, 523, 0, 0, 0, 0,
	0, 0, 1430, 0, 269, 220, 191, 317, 379, 248,
	67, 0, 0, 173, 174, 175, 509, 508, 511, 512,
	513, 514, 0, 0, 212, 510, 218, 515, 516, 517,
	1431, 232, 267, 238, 231, 393, 0, 0, 0, 485,
	502, 0, 530, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 499, 500, 0, 0, 0, 0, 545, 0,
	501, 0, 0, 494, 495, 497, 496, 498, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	306, 544, 0, 0, 420, 0, 0, 542, 0, 0,
	0, 0, 0, 278, 0, 275, 187, 201, 0, 0,
	316, 354, 359, 0, 0, 0, 223, 0, 357, 329,
	408, 208, 246, 351, 334, 355, 0, 0, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 405, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 204, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	0, 0, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 311,
	205, 263, 376, 276, 285, 0, 0, 328, 358, 214,
	410, 377, 532, 543, 538, 539, 536, 537, 0, 535,
	534, 533, 546, 524, 525, 526, 527, 529, 0, 540,
	541, 528, 186, 199, 281, 0, 348, 249, 431, 415,
	413, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 0, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 320, 0, 0, 0, 0, 488, 0, 0, 0,
	236, 0, 487, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 531, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 522, 523, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 67, 0, 562, 173, 174, 175, 509, 508,
	511, 512, 513, 514, 0, 0, 212, 510, 218, 515,
	516, 517, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 485, 502, 0, 530, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 500, 0, 0, 0, 0,
	545, 0, 501, 0, 0, 494, 495, 497, 496, 498,
	503, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 544, 0, 0, 420, 0, 0, 542,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 532, 543, 538, 539, 536, 537,
	0, 535, 534, 533, 546, 524, 525, 526, 527, 529,
	0, 540, 541, 528, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 320, 0, 0, 0, 0, 488, 0,
	0, 0, 236, 0, 487, 0, 0, 0, 279, 0,
	0, 333, 0, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 531, 283, 0,
	0, 378, 305, 0, 0, 0, 0, 0, 522, 523,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 220,
	191, 317, 379, 248, 67, 0, 0, 173, 174, 175,
	509, 508, 511, 512, 513, 514, 0, 0, 212, 510,
	218, 515, 516, 517, 0, 232, 267, 238, 231, 393,
	0, 0, 0, 485, 502, 0, 530, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 499, 500, 574, 0,
	0, 0, 545, 0, 501, 0, 0, 494, 495, 497,
	496, 498, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 306, 544, 0, 0, 420, 0,
	0, 542, 0, 0, 0, 0, 0, 278, 0, 275,
	187, 201, 0, 0, 316, 354, 359, 0, 0, 0,
	223, 0, 357, 329, 408, 208, 246, 351, 334, 355,
	0, 0, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 0, 0, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 0,
	0, 328, 358, 214, 410, 377, 532, 543, 538, 539,
	536, 537, 0, 535, 534, 533, 546, 524, 525, 526,
	527, 529, 0, 540, 541, 528, 186, 199, 281, 0,
	348, 249, 431, 415, 413, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 0, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 320, 0, 0, 0, 0,
	488, 0, 0, 0, 236, 0, 487, 0, 0, 0,
	279, 0, 0, 333, 0, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 531,
	283, 0, 0, 378, 305, 0, 0, 0, 0, 0,
	522, 523, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 220, 191, 317, 379, 248, 67, 0, 0, 173,
	174, 175, 509, 1338, 511, 512, 513, 514, 0, 0,
	212, 510, 218, 515, 516, 517, 0, 232, 267, 238,
	231, 393, 0, 0, 0, 485, 502, 0, 530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 500,
	574, 0, 0, 0, 545, 0, 501, 0, 0, 494,
	495, 497, 496, 498, 503, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 306, 544, 0, 0,
	420, 0, 0, 542, 0, 0, 0, 0, 0, 278,
	0, 275, 187, 201, 0, 0, 316, 354, 359, 0,
	0, 0, 223, 0, 357, 329, 408, 208, 246, 351,
	334, 355, 0, 0, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 0, 0, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 0, 0, 328, 358, 214, 410, 377, 532, 543,
	538, 539, 536, 537, 0, 535, 534, 533, 546, 524,
	525, 526, 527, 529, 0, 540, 541, 528, 186, 199,
	281, 0, 348, 249, 431, 415, 413, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 0, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	0, 0, 488, 0, 0, 0, 236, 0, 487, 0,
	0, 0, 279, 0, 0, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 531, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 522, 523, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 67, 0,
	0, 173, 174, 175, 509, 1335, 511, 512, 513, 514,
	0, 0, 212, 510, 218, 515, 516, 517, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 485, 502, 0,
	530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	499, 500, 574, 0, 0, 0, 545, 0, 501, 0,
	0, 494, 495, 497, 496, 498, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 306, 544,
	0, 0, 420, 0, 0, 542, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	532, 543, 538, 539, 536, 537, 0, 535, 534, 533,
	546, 524, 525, 526, 527, 529, 0, 540, 541, 528,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 488, 0, 0,
	0, 236, 0, 487, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 531, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 522, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 67, 0, 0, 173, 174, 175, 509,
	508, 511, 512, 513, 514, 0, 0, 212, 510, 218,
	515, 516, 517, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 485, 502, 0, 530, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 499, 500, 0, 0, 0,
	0, 545, 0, 501, 0, 0, 494, 495, 497, 496,
	498, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 544, 0, 0, 420, 0, 0,
	542, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 532, 543, 538, 539, 536,
	537, 0, 535, 534, 533, 546, 524, 525, 526, 527,
	529, 0, 540, 541, 528, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 488,
	0, 0, 0, 236, 0, 487, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 531, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 522,
	523, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 67, 0, 0, 173, 174,
	175, 509, 508, 511, 512, 513, 514, 0, 0, 212,
	510, 218, 515, 516, 517, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 485, 502, 0, 530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 500, 0,
	0, 0, 0, 545, 0, 501, 0, 0, 494, 495,
	497, 496, 498, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 544, 0, 0, 420,
	0, 0, 542, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 532, 543, 538,
	539, 536, 537, 0, 535, 534, 533, 546, 524, 525,
	526, 527, 529, 0, 540, 541, 528, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	531, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 522, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 67, 0, 0,
	173, 174, 175, 509, 508, 511, 512, 513, 514, 0,
	0, 212, 510, 218, 515, 516, 517, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 502, 0, 530,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	500, 0, 0, 0, 0, 545, 0, 501, 0, 0,
	494, 495, 497, 496, 498, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 544, 0,
	0, 420, 0, 0, 542, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 2072, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 532,
	543, 538, 539, 536, 537, 0, 535, 534, 533, 546,
	524, 525, 526, 527, 529, 0, 540, 541, 528, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 531, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 522, 523, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 67,
	0, 562, 173, 174, 175, 509, 508, 511, 512, 513,
	514, 0, 0, 212, 510, 218, 515, 516, 517, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 502,
	0, 530, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 499, 500, 0, 0, 0, 0, 545, 0, 501,
	0, 0, 494, 495, 497, 496, 498, 503, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	544, 0, 0, 420, 0, 0, 542, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 532, 543, 538, 539, 536, 537, 0, 535, 534,
	533, 546, 524, 525, 526, 527, 529, 0, 540, 541,
	528, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 531, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 522, 523, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 67, 0, 0, 173, 174, 175, 509, 508, 511,
	512, 513, 514, 0, 0, 212, 510, 218, 515, 516,
	517, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 502, 0, 530, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 500, 0, 0, 0, 0, 545,
	0, 501, 0, 0, 494, 495, 497, 496, 498, 503,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 544, 0, 0, 420, 0, 0, 542, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 532, 543, 538, 539, 536, 537, 0,
	535, 534, 533, 546, 524, 525, 526, 527, 529, 0,
	540, 541, 528, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 0, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 917, 916, 926, 927, 919, 920, 921, 922, 923,
	924, 925, 918, 0, 0, 928, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 769, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 768, 420,
	0, 0, 0, 0, 0, 0, 765, 766, 278, 735,
	275, 187, 201, 759, 763, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 0, 0,
	1017, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 1019, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 906, 907, 905, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 0, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 67, 0, 562, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 0,
	0, 0, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 320, 0, 0, 0, 1365, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 279, 0,
	0, 333, 0, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 0, 283, 0,
	0, 378, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 1367, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 0, 0, 0, 0, 232, 267, 238, 231, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 306, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 275,
	187, 201, 0, 0, 316, 354, 359, 0, 0, 0,
	223, 0, 357, 329, 408, 208, 246, 351, 334, 355,
	0, 1363, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 0, 0, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 0,
	0, 328, 358, 214, 410, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 199, 281, 0,
	348, 249, 431, 415, 413, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 0, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	279, 0, 0, 333, 0, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 0,
	283, 0, 0, 378, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 0, 0, 0, 0, 232, 267, 238,
	231, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 729, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 306, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	735, 275, 187, 201, 733, 0, 316, 354, 359, 0,
	0, 0, 223, 0, 357, 329, 408, 208, 246, 351,
	334, 355, 0, 0, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 0, 0, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 0, 0, 328, 358, 214, 410, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 199,
	281, 0, 348, 249, 431, 415, 413, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 0, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	0, 1365, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 279, 0, 0, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 0, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 0, 0,
	0, 173, 174, 175, 0, 1367, 0, 0, 0, 0,
	0, 0, 212, 0, 218, 0, 0, 0, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 306, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 33,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 67, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 0, 1383, 0, 0, 1384, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 1050, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 1049, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 0, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 0,
	0, 562, 173, 174, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 218, 0, 0, 0, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 0, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 67, 0, 0, 173, 174, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 218, 0, 0,
	0, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 0, 0, 0, 173, 174, 175, 0,
	1367, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 1019, 0, 0, 0, 0, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 1172, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	1170, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 0, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 0,
	0, 0, 173, 174, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 218, 0, 0, 0, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 1168, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 0, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 0, 0, 0, 173, 174, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 218, 0, 0,
	0, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 1166, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 0, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 1164, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 1160, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	1158, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 0, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 0,
	0, 0, 173, 174, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 218, 0, 0, 0, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 1156, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 0, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 0, 0, 0, 173, 174, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 218, 0, 0,
	0, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 1131, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 1032, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 0, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 0, 0, 0, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 0,
	0, 0, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 320, 0, 0, 0, 0, 0, 0,
	0, 1023, 236, 0, 0, 0, 0, 0, 279, 0,
	0, 333, 0, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 0, 283, 0,
	0, 378, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 0, 0, 0, 0, 232, 267, 238, 231, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 306, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 275,
	187, 201, 0, 0, 316, 354, 359, 0, 0, 0,
	223, 0, 357, 329, 408, 208, 246, 351, 334, 355,
	0, 0, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 0, 0, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 0,
	0, 328, 358, 214, 410, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 199, 281, 0,
	348, 249, 431, 415, 413, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 0, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	279, 0, 0, 333, 0, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 0,
	283, 0, 0, 378, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 897, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 0, 0, 0, 0, 232, 267, 238,
	231, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 306, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 275, 187, 201, 0, 0, 316, 354, 359, 0,
	0, 0, 223, 0, 357, 329, 408, 208, 246, 351,
	334, 355, 0, 0, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 0, 0, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 0, 0, 328, 358, 214, 410, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 199,
	281, 0, 348, 249, 431, 415, 413, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 0, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 279, 0, 0, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 0, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 0, 0,
	0, 173, 174, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 218, 0, 0, 0, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 478, 0, 255, 0, 306, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	477, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 279, 0, 0, 333, 0, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 0, 283, 0, 0, 378, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 220, 191, 317, 379, 248,
	0, 0, 0, 173, 174, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 218, 0, 0, 0,
	0, 232, 267, 238, 231, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	306, 0, 181, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 275, 187, 201, 0, 0,
	316, 354, 359, 0, 0, 0, 223, 0, 357, 329,
	408, 208, 246, 351, 334, 355, 0, 0, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 405, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 204, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	0, 0, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 311,
	205, 263, 376, 276, 285, 0, 0, 328, 358, 214,
	410, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 199, 281, 0, 348, 249, 431, 415,
	413, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 0, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 0, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 0, 0, 0, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 0,
	0, 0, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233,
}

var yyPact = [...]int{
	3597, -1000, -338, 1524, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1487, 1117, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	455, 1142, 135, 1390, 248, 111, 921, 306, 104, 25460,
	304, 263, 25892, -1000, 79, -1000, 64, 25892, 73, 25028,
	-1000, -1000, -1000, 12035, 1328, -38, -40, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1124, 1466, 1448, 1485, 970,
	1333, -1000, 10294, 10294, 264, 264, 264, 8566, -1000, -1000,
	15936, 25892, 25892, 1099, 251, 300, 251, -124, -1000, -1000,
	-1000, -1000, -1000, -1000, 1390, -1000, -1000, 162, -1000, 191,
	1085, -1000, 1084, -1000, 326, 339, 187, 259, 256, 183,
	181, 180, 178, 177, 176, 175, 174, 193, -1000, 442,
	442, -192, -200, 2142, 249, 249, 249, 278, 1336, 1322,
	-1000, 451, -1000, 442, 442, 142, 442, 442, 442, 442,
	140, 138, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 25892, -1000, 25892,
	545, 1390, 120, -1000, -1000, -1000, 25892, 243, 921, 243,
	243, 25892, -1000, 363, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 25892, 1385, 536, 536, 536, 536,
	536, 536, 16, -1000, 15, 131, 127, 117, 4, 921,
	164, -1000, 375, -1000, 114, 36, -1000, 536, 5890, 5890,
	5890, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 269,
	-1000, -1000, -1000, -1000, 25892, 24596, 250, 470, -1000, -1000,
	-1000, -1000, 957, 567, -1000, 12035, 2072, 1100, 1100, -1000,
	-1000, 331, -1000, -1000, 13331, 13331, 13331, 13331, 13331, 13331,
	13331, 13331, 13331, 13331, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1100, 362,
	-1000, 11603, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	12035, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100, 1100,
	1100, 1100, 1100, 1100, 1100, 1100, 1100, -1000, -1000, -1000,
	25892, -1000, 1487, -1000, 1117, -1000, -1000, -1000, 1366, 12035,
	12035, 1487, -1000, 1248, 10294, -1000, -1000, 1304, -1000, -1000,
	-1000, -1000, 616, 1506, -1000, 14627, 361, 1505, 24164, -1000,
	18541, 23732, 1083, 8120, -95, -1000, -1000, -1000, 468, 17677,
	-1000, -1000, -1000, 1383, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1024, 25892,
	-1000, -1000, 3868, 921, -1000, 1141, -1000, 1022, -1000, 1109,
	109, 458, 25892, 491, 921, 921, -1000, -1000, -1000, 1382,
	442, 182, 248, 3824, -1000, -1000, -1000, 23293, 1137, 921,
	-1000, 1133, -1000, 1407, 258, 429, 429, 921, -1000, -1000,
	25892, 921, 1405, 1402, 25892, 25892, -1000, 22861, -1000, 22429,
	21997, 758, 25892, 21565, 21133, 20701, 20269, 19837, -1000, 1223,
	-1000, 1115, -1000, -1000, -1000, 25892, 25892, 25892, 37, -1000,
	-1000, 25892, 921, -1000, -1000, 754, 743, 1381, 442, 742,
	881, 875, 873, 442, 442, 740, 868, 882, 133, 733,
	732, 708, 752, 862, 90, 705, 702, 707, 25892, 1132,
	-1000, 5890, 155, 179, 153, 25892, 1390, 1319, 1082, 268,
	25892, 1425, 1180, 25892, 921, -1000, 7228, -1000, 536, -1000,
	848, 12035, -1000, -1000, -1000, -1000, -1000, 536, 25892, 536,
	25892, 536, 536, 536, 536, 509, 529, 509, -1000, -1000,
	-1000, -1000, 5890, 5890, 25892, 5890, 5890, 25892, 5890, 5890,
	529, -1000, -1000, -1000, 400, -1000, 1179, -1000, -1000, -1000,
	-1000, -1000, -1000, 72, -1000, -1000, -1000, -1000, -1000, 1524,
	-1000, -1000, -1000, -142, 12035, 12035, 12035, 12035, 664, 404,
	13331, 709, 508, 13331, 13331, 13331, 13331, 13331, 13331, 13331,
	13331, 13331, 13331, 13331, 13331, 13331, 13331, 13331, 585, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 921, -1000, 1522,
	971, 971, 372, 372, 372, 372, 372, 372, 372, 372,
	372, 13763, 8998, 7228, 970, 1020, 1487, 10294, 10294, 12035,
	12035, 11158, 10726, 10294, 1353, 432, 567, 25892, -1000, -1000,
	12899, -1000, -1000, -1000, -1000, -1000, 900, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 25892, 25892, 10294, 10294, 10294, 10294,
	10294, -1000, 1081, -1000, -181, 15504, 1448, 970, 1304, 1411,
	1514, 393, 929, 1078, -1000, 895, 1448, 17245, 1058, -1000,
	1304, -1000, -1000, -1000, 25892, -1000, -1000, 19405, -1000, -1000,
	6782, 25892, 173, 25892, -1000, 1087, 1316, -1000, -1000, -1000,
	1433, 16813, 25892, 1043, 968, -1000, -1000, 352, 7674, -95,
	-1000, 7674, 1059, -1000, -86, -105, 9430, 365, -1000, -1000,
	-1000, -1000, 2142, 14195, 927, 660, -22, -1000, -1000, -1000,
	1109, -1000, 1109, 1109, 1109, 1109, 25, 25, 25, 25,
	-1000, -1000, -1000, -1000, -1000, 1129, 1128, -1000, 1109, 1109,
	1109, 1109, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1127,
	1127, 1127, 1122, 1122, 226, -1000, 12035, 112, 25892, 1435,
	703, 102, 452, 116, -1000, 1421, 1163, -1000, 442, 828,
	-1000, 1077, -1000, -1000, 1484, -1000, -1000, 450, 598, 595,
	488, 25892, 88, 166, -1000, 218, -1000, 25892, 1126, 1400,
	429, 921, -1000, 921, -1000, -1000, -1000, -1000, 350, -1000,
	-1000, 921, 1076, -1000, 1080, 620, 566, 549, 559, 1076,
	-1000, -1000, -152, 1076, -1000, 1076, -1000, 1076, -1000, 1076,
	-1000, 1076, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	440, 25892, 88, 1377, -1000, 267, -1000, -1000, 442, 585,
	-1000, -1000, -1000, -1000, 846, 844, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -329, 25892, -1000, 25892, 25892, 25892, 25892, 25892,
	315, 132, 25892, 25892, 1069, -1000, 25892, 5890, -1000, -1000,
	-1000, -1000, -1000, -1000, 567, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 536, 25892, 25892, 25892, -1000, -1000, 536,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 25892, -1000,
	843, 25892, 25892, -1000, -1000, -1000, -1000, -1000, 567, 404,
	580, 454, -1000, -1000, 667, -1000, -1000, 1849, -1000, -1000,
	-1000, -1000, 709, 13331, 13331, 13331, 473, 1849, 2523, 617,
	677, 372, 602, 602, 374, 374, 374, 374, 374, 716,
	716, -1000, -1000, -1000, -1000, 900, -1000, -1000, -1000, 900,
	10294, 10294, 1067, 1100, 345, -1000, 1124, -1000, -1000, 1448,
	1008, 1008, 719, 600, 481, 1504, 1008, 476, 1503, 1008,
	1008, 10294, -1000, -1000, 550, -1000, 12035, 900, -1000, 584,
	1065, 1062, 1008, 900, 900, 1008, 1008, 25892, -1000, -300,
	-1000, -93, 358, 1100, -1000, 18973, -1000, -1000, 1366, -1000,
	-1000, 1296, -1000, 1245, 12035, 12035, 12035, -1000, -1000, -1000,
	1366, 1459, -1000, 1258, 1256, 1495, 10294, 18541, 1304, -1000,
	-1000, -1000, 342, 1495, 1094, 1100, -1000, 25892, 18541, 18541,
	18541, 18541, 18541, -1000, 1218, 1212, -1000, 1239, 1192, 1200,
	25892, -1000, 1017, 970, 16813, 173, 950, 18541, 25892, -1000,
	-1000, 18541, 25892, 6336, -1000, 1059, -95, -54, -1000, -1000,
	-1000, -1000, 567, -1000, 805, -1000, 2056, -1000, 242, -1000,
	-1000, -1000, -1000, 1387, -1000, 544, -28, -1000, -1000, 25,
	25, -1000, -1000, 365, 1376, 365, 365, 365, 841, 841,
	-1000, -1000, -1000, -1000, -1000, 686, -1000, -1000, -1000, 683,
	-1000, -1000, 871, 1203, 112, -1000, -1000, 442, 830, 1334,
	25892, -1000, -1000, 917, 280, 94, 124, -1000, -1000, -1000,
	-1000, 1178, -1000, 750, -1000, -1000, 2593, 25892, 1015, -1000,
	86, 25892, 915, 25892, -1000, 1012, 25892, -1000, 921, -1000,
	-1000, 7228, -1000, 25892, 1100, -1000, -1000, -1000, -1000, 303,
	1379, 1367, 88, 86, 585, 921, 585, -1000, -1000, -1000,
	-1000, -333, 1010, 1105, -1000, -1000, -1000, -1000, 55, 154,
	126, 266, -1000, 5890, -1000, -1000, -1000, -1000, 509, -1000,
	509, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 473, 1849,
	1675, -1000, 13331, 13331, -1000, -1000, 1008, 1008, 10294, 7228,
	1487, 1366, -1000, -1000, 136, 585, 136, 13331, 13331, -1000,
	13331, 13331, -1000, -139, 1098, 482, -1000, 12035, 850, -1000,
	-1000, 13331, 13331, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 291, 286, 282, 25892, -1000, -1000, 863, 819,
	1242, 567, 567, -1000, -1000, 25892, -1000, -1000, -1000, -1000,
	1492, 12035, -1000, 1053, -1000, 5444, 1448, 1177, 25892, 1100,
	1524, 15072, 25892, 1104, -1000, 449, 1316, 1168, 1176, 1378,
	-1000, -1000, -1000, -1000, 1206, -1000, 1204, -1000, -1000, -1000,
	-1000, -1000, 970, 1495, 18541, 1095, -1000, 1095, -1000, 341,
	-1000, -1000, -1000, -91, -110, -1000, -1000, -1000, 2142, -1000,
	-1000, 1175, 13331, -1000, -1000, -1000, 365, 365, -1000, 555,
	-1000, -1000, -1000, 1006, -1000, 1003, 1052, 1000, 24, -1000,
	1091, 1359, 442, 442, -1000, 679, -1000, 921, -1000, -1000,
	25892, 98, -1000, 1125, 853, -1000, 25892, -1000, -1000, 1482,
	1048, -1000, 25892, -1000, -1000, 25892, -1000, -1000, 1255, 112,
	995, -1000, -1000, -1000, 166, 25892, -1000, 971, 86, -1000,
	365, -1000, -1000, -1000, -1000, -1000, -154, 921, 25892, 25892,
	25892, -1000, 25892, -1000, 536, 536, -1000, 13331, 1849, 1849,
	-1000, -1000, 900, -1000, 1448, -1000, 900, 1109, 1109, -1000,
	1109, 1122, -1000, 1109, 57, 1109, 56, 900, 900, 2324,
	2219, 2203, 1731, 1100, -131, -1000, 567, 12035, 1215, 1186,
	1100, 1100, 1100, 991, 817, 25, -1000, -1000, -1000, 1490,
	1479, 567, -1000, -1000, -1000, 1409, 935, 953, -1000, -1000,
	9862, 993, 1254, 329, 991, 1487, 25892, 12035, -1000, -1000,
	12035, 1106, -1000, 12035, -1000, -1000, -1000, 1487, 1487, 1095,
	-1000, -1000, 385, -1000, -1000, -1000, -1000, 0, 1512, 1849,
	-1000, -1000, -1000, -1000, 25, 813, 25, 643, -1000, 641,
	-1000, -1000, -238, -1000, -1000, 1049, 1201, -1000, -1000, 1103,
	-1000, -1000, -1000, 908, -1000, -1000, 25892, 25892, -1000, -1000,
	161, -1000, 208, 982, -1000, -198, -1000, -1000, -1000, -1000,
	7228, -1000, -1000, 1101, 1111, -1000, -1000, -1000, -1000, 1849,
	-1000, 1366, -1000, -1000, 215, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 13331, 13331, 13331, 13331, 13331, 1448, 810,
	567, 13331, 13331, 18109, 25892, 25892, 16368, 25, -18, -1000,
	12035, 12035, 1399, -1000, 1100, -1000, 1107, 25892, 1100, 25892,
	-1000, 1448, -1000, 567, 567, 25892, 567, 1448, -1000, 428,
	-1000, -125, 365, -1000, 365, 906, 902, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1430, 25892, -1000, 1048, -1000,
	159, 25892, -1000, 166, -1000, -203, -204, 1041, -1000, 423,
	25892, 25892, -1000, -1000, -1000, 584, 584, 584, 584, 27,
	900, -1000, 584, 584, 964, -1000, 964, 964, 358, -294,
	-1000, 1297, 1294, 567, 957, 1510, -1000, 1100, 1524, 321,
	953, -1000, -1000, 962, -1000, 596, 1398, -1000, 1397, -1000,
	-1000, -1000, -1000, -1000, 1117, 947, 1100, 1097, -1000, -1000,
	-1000, 7228, 4998, 932, -1000, -1000, -1000, -1000, -1000, 900,
	119, -158, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -18,
	240, -1000, 1276, 1260, 1478, 25892, 953, 25892, -1000, -1000,
	806, -1000, -1000, 171, -1000, 12467, 25892, -1000, -1000, -1000,
	-1000, -1000, 1105, -1000, 1219, -150, -164, 1281, 1283, 1283,
	1294, 1473, 1289, 1287, -1000, 773, 944, -1000, -1000, -1000,
	-88, 584, 900, 930, -154, -1000, 1205, -1000, 1279, 670,
	-1000, -1000, -1000, -1000, 770, -1000, 1472, 1456, -1000, 217,
	-1000, -1000, -1000, -1000, 1173, -1000, -155, -1000, 633, -1000,
	-1000, -1000, 751, 710, 107, 1172, -1000, 1502, -162, -1000,
	-1000, -1000, -1000, -1000, -1000, 1509, 357, 357, -188, -1000,
	-1000, -1000, 222, 680, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1800, 1799, 15, 77, 78, 1797, 1796, 1795, 1794,
	114, 112, 111, 1792, 1788, 1787, 1786, 1785, 1784, 1782,
	1773, 1772, 1770, 1769, 1768, 40, 130, 132, 1767, 1764,
	1763, 1761, 1756, 110, 107, 423, 1755, 104, 1753, 1752,
	1747, 1736, 1735, 1734, 1732, 1731, 1729, 1728, 1727, 1725,
	106, 1722, 1718, 1716, 1715, 1714, 1712, 1711, 1710, 1709,
	1708, 1706, 101, 1705, 39, 252, 38, 67, 1704, 69,
	1700, 1694, 1693, 1691, 1690, 1271, 1683, 37, 65, 62,
	1678, 34, 1675, 1673, 86, 1672, 1671, 59, 1669, 1668,
	3192, 1667, 55, 74, 13, 63, 1666, 1665, 1664, 1660,
	31, 367, 1658, 1657, 22, 1656, 1654, 115, 1653, 81,
	25, 10, 20, 23, 1652, 79, 1651, 8, 49, 29,
	1649, 76, 1648, 1647, 1646, 1645, 24, 1643, 71, 85,
	43, 1642, 6, 11, 1641, 1640, 1639, 1638, 1634, 1630,
	4, 1629, 1628, 1627, 1625, 14, 1624, 64, 1623, 70,
	138, 26, 7, 1622, 1621, 19, 98, 57, 96, 1620,
	1618, 1615, 934, 1614, 68, 1612, 118, 1608, 1605, 45,
	1604, 393, 727, 1603, 1602, 1601, 44, 901, 1497, 9,
	103, 1600, 1599, 2343, 46, 73, 17, 1597, 1596, 1593,
	109, 66, 35, 899, 36, 1592, 1591, 1589, 1587, 1584,
	1583, 1582, 90, 1581, 1580, 1578, 42, 18, 99, 27,
	1577, 1575, 1569, 1568, 1567, 51, 41, 1566, 95, 87,
	61, 129, 1565, 102, 105, 54, 1564, 72, 1561, 1559,
	1557, 1554, 33, 1552, 1551, 1549, 1548, 94, 80, 48,
	28, 32, 82, 1547, 30, 1546, 1545, 84, 83, 1543,
	21, 131, 12, 1542, 3, 0, 1541, 5, 122, 1341,
	127, 1540, 1539, 1, 1538, 2, 1536, 1535, 75, 1534,
	1533, 1532, 1531, 2959, 1913, 100, 1530, 108,
}

var yyR1 = [...]int{
	0, 271, 272, 272, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 255, 255, 255, 258, 258, 21, 47,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 56, 56, 11, 12, 12, 12, 12,
	275, 275, 84, 84, 85, 85, 149, 149, 13, 14,
	14, 158, 158, 157, 157, 157, 159, 159, 159, 159,
	193, 193, 15, 15, 15, 15, 15, 63, 63, 257,
	257, 256, 254, 254, 253, 253, 252, 23, 24, 30,
	31, 32, 259, 259, 228, 36, 36, 35, 35, 35,
	35, 37, 37, 34, 34, 33, 33, 230, 230, 217,
	217, 229, 229, 229, 229, 229, 229, 229, 216, 195,
	195, 195, 195, 198, 198, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 197, 197, 197, 197, 197, 199,
	199, 199, 199, 199, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 201,
	201, 201, 201, 201, 201, 201, 201, 215, 215, 202,
	202, 208, 208, 209, 209, 209, 211, 211, 212, 212,
	173, 173, 173, 204, 204, 205, 205, 210, 210, 206,
	206, 206, 207, 207, 207, 214, 214, 214, 214, 214,
	203, 203, 218, 244, 244, 243, 243, 239, 239, 239,
	239, 227, 227, 236, 236, 236, 236, 236, 226, 226,
	222, 222, 222, 223, 223, 224, 224, 221, 221, 225,
	225, 238, 238, 237, 219, 219, 220, 220, 247, 247,
	247, 247, 248, 264, 265, 263, 263, 263, 263, 263,
	174, 174, 174, 234, 234, 233, 233, 233, 235, 235,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 232,
	232, 232, 232, 232, 232, 232, 232, 232, 232, 168,
	168, 168, 262, 262, 262, 262, 262, 262, 261, 261,
	261, 231, 231, 231, 260, 260, 118, 118, 119, 119,
	28, 28, 28, 28, 28, 28, 27, 27, 27, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 29, 29, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 251,
	251, 251, 251, 251, 251, 251, 251, 251, 251, 213,
	213, 213, 249, 249, 250, 250, 17, 22, 22, 18,
	18, 18, 18, 19, 19, 38, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 165, 165, 266, 266, 167,
	167, 163, 163, 166, 166, 164, 164, 164, 169, 169,
	169, 170, 170, 270, 270, 270, 40, 40, 42, 42,
	43, 44, 44, 188, 188, 189, 189, 45, 46, 55,
	55, 55, 55, 55, 55, 57, 57, 57, 7, 7,
	7, 7, 52, 52, 52, 6, 6, 41, 41, 48,
	267, 267, 268, 269, 269, 269, 269, 49, 20, 276,
	50, 51, 51, 62, 62, 62, 58, 58, 58, 61,
	61, 61, 66, 66, 68, 68, 68, 68, 68, 69,
	69, 69, 69, 69, 69, 65, 65, 67, 67, 67,
	67, 181, 181, 181, 180, 180, 76, 76, 77, 77,
	78, 78, 79, 79, 79, 116, 93, 93, 148, 148,
	147, 147, 150, 150, 80, 80, 80, 80, 81, 81,
	82, 82, 83, 83, 187, 187, 186, 186, 186, 185,
	185, 86, 86, 86, 88, 87, 87, 87, 87, 89,
	89, 91, 91, 90, 90, 92, 94, 94, 94, 94,
	94, 95, 95, 75, 75, 75, 75, 75, 75, 75,
	75, 161, 161, 97, 97, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 108, 108, 108, 108, 108,
	108, 98, 98, 98, 98, 98, 98, 98, 64, 64,
	109, 109, 109, 115, 110, 110, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	105, 105, 105, 105, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 103, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 277, 277, 107, 106, 106, 106, 106,
	106, 106, 106, 60, 60, 60, 60, 60, 192, 192,
	192, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 122, 122, 59, 59, 120, 120,
	121, 123, 123, 117, 117, 117, 100, 100, 100, 100,
	100, 100, 100, 100, 102, 102, 102, 124, 124, 125,
	125, 126, 126, 127, 127, 128, 129, 129, 129, 130,
	130, 130, 130, 245, 245, 245, 245, 245, 240, 240,
	240, 240, 241, 241, 241, 70, 70, 70, 70, 72,
	72, 71, 71, 53, 53, 54, 54, 54, 73, 73,
	74, 74, 74, 74, 145, 145, 145, 131, 131, 131,
	131, 136, 136, 136, 132, 132, 134, 134, 134, 135,
	135, 135, 133, 139, 139, 141, 141, 140, 140, 138,
	138, 143, 143, 142, 142, 137, 137, 99, 99, 99,
	99, 99, 146, 146, 146, 146, 151, 151, 111, 111,
	113, 113, 112, 114, 152, 152, 155, 153, 153, 156,
	156, 156, 156, 156, 154, 154, 154, 182, 182, 182,
	160, 160, 171, 171, 172, 172, 162, 162, 175, 175,
	175, 144, 144, 144, 144, 246, 246, 242, 178, 178,
	179, 179, 183, 183, 184, 184, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 273, 274, 190,
	191, 191, 191,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 5, 5, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 3, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 5, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 6, 5, 6,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 4, 4, 2, 4, 3, 6, 7,
	5, 5, 5, 12, 7, 5, 9, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 4,
	6, 5, 4, 3, 2, 3, 4, 3, 3, 3,
	3, 3, 3, 4, 2, 4, 4, 4, 4, 4,
	5, 7, 4, 4, 4, 4, 4, 4, 4, 4,
	2, 4, 7, 2, 4, 5, 4, 3, 3, 5,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 2, 0,
	2, 0, 2, 1, 2, 2, 0, 1, 1, 0,
	1, 1, 0, 1, 0, 1, 2, 3, 4, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 2, 3,
	5, 0, 1, 2, 1, 1, 0, 2, 1, 3,
	1, 1, 1, 3, 3, 3, 3, 7, 0, 3,
	1, 3, 1, 3, 4, 4, 4, 3, 2, 4,
	0, 1, 0, 2, 0, 1, 0, 1, 2, 1,
	1, 1, 2, 2, 1, 2, 3, 2, 3, 2,
	2, 2, 1, 1, 3, 3, 0, 5, 4, 5,
	5, 0, 2, 1, 3, 3, 3, 2, 3, 1,
	2, 0, 3, 1, 1, 3, 3, 4, 4, 5,
	3, 4, 5, 6, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 0, 2,
	1, 1, 1, 3, 1, 3, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 3, 1, 1, 1, 1,
	4, 5, 5, 6, 4, 4, 6, 6, 6, 8,
	8, 8, 8, 9, 8, 5, 4, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 8, 8, 0, 2, 3, 4, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 4, 0, 1, 1, 0, 3,
	1, 3, 2, 1, 0, 2, 4, 0, 9, 3,
	5, 0, 3, 3, 0, 1, 0, 2, 2, 0,
	2, 2, 2, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 3, 0, 4, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 0, 1, 1, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -271, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -38, -39, -40, -42,
	-43, -44, -45, -46, -6, -41, -20, -21, -47, -48,
	-49, -4, -273, 6, 7, 8, -56, 10, 11, 31,
	-23, -30, 152, -31, -24, 153, -32, 155, 154, 190,
	156, 183, 70, 224, 225, 227, 228, 229, 230, -57,
	188, 189, 158, 35, 41, 32, 33, 80, 9, 322,
	185, 184, 26, -272, 451, -62, 5, -126, 16, -3,
	-50, -276, -50, -50, -50, -50, -50, -50, -228, -230,
	80, 125, 80, -63, 162, -144, -259, 106, 168, 171,
	172, 313, 161, -36, -35, -34, -33, -37, 30, -28,
	-29, -251, -27, -26, 157, 154, 198, 101, 102, 190,
	191, 192, 156, 174, 189, 193, 188, 207, -25, 76,
	32, 335, 338, -235, 153, 159, 160, 323, 104, 103,
	71, 155, -232, 274, 428, -37, 430, 94, 96, 429,
	40, 163, 431, 432, 433, 434, 173, 435, 436, 437,
	438, 444, 445, 446, 447, 105, 5, 162, -259, 164,
	284, -258, -255, 83, 84, 85, 162, 162, 163, 164,
	-259, 162, -90, -183, -255, -177, 332, 176, 366, 367,
	222, 76, 274, 428, 224, 238, 232, 259, 251, 333,
	368, 177, 211, 249, 252, 300, 430, 369, 191, 296,
	279, 287, 94, 227, 309, 443, 370, 441, 96, 429,
	75, 47, 40, 186, 247, 243, 431, 212, 371, 343,
	205, 104, 101, 450, 241, 46, 28, 440, 103, 45,
	432, 372, 433, 289, 264, 44, 192, 373, 79, 337,
	291, 242, 288, 221, 439, 158, 374, 422, 298, 375,
	265, 269, 376, 301, 48, 377, 378, 102, 379, 74,
	434, 236, 237, 380, 219, 175, 303, 263, 173, 34,
	292, 334, 223, 54, 199, 304, 42, 267, 41, 426,
	381, 262, 258, 49, 382, 383, 384, 385, 435, 261,
	235, 257, 449, 217, 436, 58, 160, 271, 270, 272,
	206, 299, 254, 386, 387, 388, 180, 77, 389, 244,
	19, 390, 391, 213, 392, 52, 393, 394, 307, 189,
	395, 50, 437, 37, 194, 438, 396, 397, 398, 399,
	400, 297, 401, 290, 266, 268, 201, 286, 336, 402,
	240, 193, 442, 403, 181, 195, 198, 188, 308, 182,
	404, 405, 406, 407, 408, 409, 410, 228, 444, 39,
	411, 412, 413, 414, 220, 216, 302, 311, 57, 78,
	276, 415, 234, 214, 416, 225, 51, 445, 446, 447,
	208, 448, 282, 105, 218, 43, 255, 200, 417, 418,
	245, 246, 260, 233, 256, 226, 423, 202, 190, 419,
	310, 215, 277, 340, 207, 339, 253, 250, 209, 420,
	164, 203, 204, 421, 424, 293, 283, 294, 295, 284,
	210, 338, 248, 278, 162, 252, 300, 279, 280, 281,
	292, 293, 298, 297, 201, -270, 301, 162, -163, 143,
	152, 289, -167, 290, 283, 284, 210, -266, -255, 433,
	448, 302, 426, 285, 291, 295, 294, -183, 226, -188,
	231, -178, -255, -177, 229, -90, -55, 422, 156, -190,
	-190, -190, -110, -75, -96, 109, -101, 30, 24, -100,
	-97, -117, -114, -115, 143, 144, 146, 145, 147, 132,
	133, 140, 110, 148, -105, -103, -104, -106, 87, 86,
	95, 88, 89, 90, 91, 97, 98, 99, -178, -183,
	-112, -273, 64, 65, 323, 324, 325, 326, 331, 327,
	112, 53, 312, 321, 320, 319, 316, 317, 314, 315,
	329, 330, 167, 313, 161, 138, 322, -255, -177, 40,
	282, 282, -5, -4, -273, 6, 21, 22, -130, 18,
	17, -274, 82, -58, -68, 59, 60, -69, 22, 36,
	63, 61, -51, -67, 134, -75, -183, -67, -162, 166,
	-162, -162, -153, -193, 226, -156, 302, 301, -179, -154,
	-178, -176, 300, 252, 299, 157, 341, 108, 23, 25,
	111, 143, 17, 112, 159, 174, 142, 170, 323, 152,
	68, 342, 314, 315, 312, 318, 325, 326, 313, 280,
	30, 11, 344, 26, 184, 22, 36, 136, 154, 115,
	116, 187, 24, 185, 99, 347, 20, 71, 179, 12,
	172, 14, 348, 349, 15, 167, 166, 127, 163, 66,
	9, 148, 27, 124, 62, 350, 29, 351, 352, 353,
	354, 64, 125, 18, 316, 317, 32, 427, 355, 331,
	196, 138, 69, 55, 109, 356, 357, 97, 358, 100,
	72, 106, 16, 67, 38, 359, 197, 360, 169, 361,
	305, 362, 126, 155, 322, 65, 363, 161, 281, 6,
	328, 31, 183, 171, 63, 364, 162, 114, 329, 330,
	165, 98, 5, 168, 33, 10, 70, 73, 319, 320,
	321, 53, 335, 113, 13, 365, 306, 107, -229, 125,
	-216, -220, -178, 178, -248, 174, -90, -238, -237, -178,
	-70, 76, -172, 167, 163, -172, 322, -33, -34, 252,
	142, 195, 81, 81, -220, -219, -218, -260, 197, 178,
	-247, -236, 170, 179, -226, 171, 172, -221, 163, 29,
	-260, -221, 169, 179, 197, 197, 105, 197, 105, 197,
	197, 197, 197, 197, 197, 197, 197, 197, 194, -227,
	117, -227, 339, 339, -232, -260, -260, -260, 165, 34,
	34, -175, -221, 165, 23, -227, -227, 252, 142, -227,
	-227, -227, -227, 205, 205, -227, -227, -227, -227, -227,
	-227, -227, -227, -227, -227, -227, -227, -227, -227, -227,
	-90, -90, 152, 154, 157, 72, -35, 207, -22, -90,
	-171, 167, -255, -171, -171, -90, 149, -90, 31, -169,
	125, 13, -169, -169, -169, -169, -169, 208, 296, 208,
	296, 208, 209, 208, 209, 208, -166, -165, 287, 288,
	282, 286, -255, 313, 298, -255, 201, 162, 202, 164,
	-222, 163, 34, 175, 209, 282, 204, -169, -191, -273,
	-179, -191, -191, 165, -178, -52, -178, 87, -7, -3,
	-11, -10, -12, 117, 81, 108, 106, 107, 124, -75,
	-98, 127, 109, 125, 126, 111, 129, 128, 139, 132,
	133, 134, 135, 136, 137, 138, 130, 131, 142, 117,
	118, 119, 120, 121, 122, 123, -161, -273, -115, -273,
	150, 151, -101, -101, -101, -101, -101, -101, -101, -101,
	-101, -101, -273, 149, -2, -110, -4, -273, -273, -273,
	-273, -273, -273, -273, -273, -122, -75, -273, -277, -107,
	-273, -277, -107, -277, -107, -277, -273, -277, -107, -277,
	-107, -277, -277, -107, -273, -273, -273, -273, -273, -273,
	-273, -190, -267, -268, -93, -90, -126, -3, -50, -145,
	20, 32, -75, -127, -128, -75, -126, 55, -65, -67,
	-69, 59, 60, 93, 12, -181, -180, 23, -178, 87,
	149, 12, -91, 27, -90, -77, -78, -79, -80, -93,
	-116, -273, 12, -84, -85, -90, -92, -183, 81, 226,
	-156, -193, -158, -157, 303, 305, 117, -182, -178, 87,
	30, 31, 82, 81, -90, -195, -198, -200, -199, -201,
	-196, -197, 249, 250, 143, 253, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 31, 186, 245, 246,
	247, 248, 265, 266, 267, 268, 269, 270, 271, 272,
	232, 251, 333, 233, 234, 235, 236, 237, 238, 240,
	241, 242, 243, 244, -258, -255, 80, 82, 81, -202,
	80, -73, 212, 117, -90, 109, -255, -255, 31, -227,
	194, -27, -26, -251, 16, -25, -26, 157, 101, 102,
	154, 80, -216, 80, -225, -258, -255, 80, 29, 169,
	168, -224, -221, -224, -225, -255, -117, -178, -183, -255,
	29, 29, -150, -178, -150, -150, 21, -150, 21, -150,
	21, 88, -178, -150, 21, -150, 21, -150, 21, -150,
	21, -150, 21, 30, 74, 75, 30, 77, 78, 79,
	-117, -117, -216, 252, -90, -255, 88, 88, 31, -227,
	88, 87, 87, 87, -227, -227, 88, 87, -255, 87,
	-261, 180, 221, 223, 88, 88, 88, 88, 30, 87,
	-262, 30, 440, 439, 441, 442, 443, 88, 30, 88,
	30, 88, -178, 80, -191, 203, 203, 162, 162, 216,
	-90, 40, 81, 165, -84, 24, 72, -90, -255, -184,
	-183, -176, -169, 87, -75, -169, -90, -169, -90, -169,
	-169, -169, -169, -164, 12, 127, -223, 12, 127, -164,
	-191, -191, -90, -191, -191, -90, -191, -191, -223, -170,
	125, 72, -189, 229, 263, 423, 424, 425, -75, -75,
	-75, -75, -108, 97, 109, 98, 99, -101, -109, -112,
	-115, 92, 127, 125, 126, 111, -101, -101, -101, -101,
	-101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
	-101, -192, -255, 87, 143, -255, -100, -100, -178, -66,
	22, 36, -65, -179, -184, -176, -62, -274, -274, -126,
	-65, -65, -75, -75, -117, 87, -65, -117, 87, -65,
	-65, -61, 22, 36, -120, -121, 113, -117, -274, -101,
	-178, -178, -65, -66, -66, -65, -65, 81, -269, 305,
	306, 427, -186, 197, -185, 23, -183, 87, -130, -274,
	-131, 27, 10, 127, 81, 19, 81, -129, 25, 26,
	-130, -102, -178, 88, 91, -76, 81, 12, -69, -90,
	-180, 134, -184, -90, -149, 197, -90, 31, 81, -86,
	-88, -87, -89, 62, 66, 68, 63, 64, 65, 69,
	-187, 23, -77, -3, -273, -90, -84, -275, 81, 12,
	73, -275, 81, 149, -156, -158, 81, 304, 306, 307,
	72, 100, -75, -207, 142, -234, -233, -232, -216, -218,
	-219, -220, 82, -173, 97, 109, -211, 277, -202, -202,
	-202, -202, -202, -206, 252, -206, -206, -206, 80, 80,
	-202, -202, -202, -202, -208, 80, -208, -208, -209, 80,
	-209, -248, -75, -244, -243, -239, -242, 173, 94, 335,
	73, -237, -129, 88, -72, 214, 117, 215, 217, 218,
	24, -246, -242, -227, -255, 87, 81, 17, -217, -216,
	-118, 221, -250, 197, -247, -238, 80, 29, -224, -225,
	-225, 149, -255, 81, 27, 105, 105, 105, 105, 335,
	154, 31, -216, -118, 31, 165, -227, -192, 87, 87,
	-168, 448, -84, -90, -90, -90, -90, -90, 157, 154,
	205, -90, -90, -90, -191, -169, -183, -183, -90, -169,
	-90, 87, -90, -178, 97, 98, 99, -109, -101, -101,
	-101, -64, 187, 108, -274, -274, -65, -65, -273, 149,
	-5, -130, -274, -274, 81, 73, 23, 12, 12, -274,
	12, 12, -274, -274, -65, -123, -121, 115, -75, -274,
	-274, 81, 81, -274, -274, -274, -274, -274, -268, 426,
	306, -94, 70, 166, 71, -273, -185, -145, 38, 46,
	57, -75, -75, -128, -145, -160, 20, 12, 53, 53,
	-95, 13, -67, -77, -69, 149, -95, -99, 31, 53,
	-3, -273, -273, -152, -155, -117, -78, -79, -79, -78,
	-79, 62, 62, 62, 67, 62, 67, 62, -87, -183,
	-274, -274, -3, -149, 73, -77, -90, -77, -92, -183,
	134, -157, -159, 308, 305, 311, -255, 87, 81, -232,
	-220, -204, 30, 97, -212, 278, -206, -206, -207, 31,
	-207, -207, -207, -215, 87, -215, 88, 88, 82, -245,
	-240, -241, 32, 76, -239, -227, 87, 37, -178, 82,
	164, 220, -74, 318, 87, 83, 72, -255, 87, 16,
	-147, -178, 81, 82, -119, 222, -117, 82, -178, 82,
	-147, -225, -179, -178, -273, 162, 30, 30, -118, -119,
	-192, -255, -192, 450, 449, 82, -257, 73, 203, 274,
	203, 206, 165, -191, -164, -164, -64, 108, -101, -101,
	-274, -274, -66, -179, -126, -145, -194, 143, 249, 186,
	247, 243, 263, 254, 276, 245, 277, -192, -194, -101,
	-101, -101, -101, 332, -126, 116, -75, 114, -101, -101,
	163, 163, 163, -150, 39, 87, 87, 58, -90, -124,
	14, -75, 134, -130, -151, 72, -152, -111, -113, -112,
	-273, -146, -274, -178, -150, -95, 81, 117, -82, -81,
	72, 73, -83, 72, -81, 62, 62, -274, -95, -77,
	-95, -95, 149, 305, 309, 310, -232, -205, 72, -101,
	-207, -207, -255, 143, 82, 81, 82, 81, 82, 81,
	-174, 372, 109, -241, -240, -227, -227, 88, -255, -90,
	-71, 212, 219, 80, 84, -90, 17, 81, -216, -117,
	53, -244, 82, -249, -250, -90, -100, -119, -207, -254,
	335, -256, -255, -178, -178, -178, -90, -169, -169, -101,
	-274, -130, -274, -202, -202, -202, -209, -202, 237, -202,
	237, -274, -274, 20, 20, 20, 20, -273, -59, 328,
	-75, 81, 81, -273, -273, -273, -274, 87, -206, -125,
	15, 17, 28, -151, 81, -274, -274, 81, 53, 149,
	-274, -126, -155, -75, -75, 80, -75, -126, -95, -210,
	274, 10, -206, 87, -206, 88, 88, 372, 30, 77,
	78, 79, 30, 74, 75, -148, 80, 82, -147, -178,
	199, 181, -274, 81, -213, 335, 338, -253, -252, -179,
	80, 73, -145, -206, -255, -101, -101, -101, -101, -101,
	-130, 87, -101, -101, -147, -274, -147, -147, -186, -206,
	-133, -138, -166, -75, -110, 29, -113, 53, -3, -178,
	-111, -178, -130, -147, -130, -214, 169, 29, 168, -104,
	-207, -207, 82, 82, 23, -147, 200, -90, -250, 339,
	339, 81, 117, -147, -90, -274, -274, -274, -274, -60,
	127, 335, -274, -274, -274, -274, -274, -274, -94, -136,
	422, -139, 42, -140, 43, 10, -111, 149, 82, -203,
	94, 29, 29, -3, 82, -273, 80, -252, -231, -179,
	87, 88, 82, -274, 333, 69, 336, -133, 47, 255,
	-141, 51, -142, -137, 52, 17, -152, -178, 87, -53,
	335, -101, 196, -147, -257, 58, 334, 337, -134, 49,
	-132, 48, -132, -140, 17, -143, 44, 45, 87, -54,
	211, 426, -274, -274, 82, -254, 58, -135, 50, 72,
	100, 87, 17, 17, 174, -264, -265, 72, 335, 72,
	100, 87, 87, 213, -265, 72, 11, 10, 336, -263,
	182, 177, 180, 31, -263, 337, 176, 30, 97,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 781, 0, 519, 519, 519, 519, 519, 519, 519,
	0, 0, -2, -2, -2, 0, 36, 0, 0, 0,
	0, -2, 477, 478, 0, 480, -2, 0, 0, 489,
	1299, 1299, 1299, 0, 0, 0, 0, 1297, 53, 54,
	495, 496, 497, 1, 3, 0, 523, 789, 0, 0,
	-2, 521, 0, 0, 896, 896, 896, 0, 82, 83,
	0, 0, 0, 805, 894, 0, 894, 0, 902, 903,
	904, 102, 103, 86, -2, 107, 108, 0, 112, 362,
	323, 365, 321, 351, -2, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 221,
	221, 0, 0, -2, 314, 314, 314, 0, 0, 0,
	348, 898, 268, 221, 221, 0, 221, 221, 221, 221,
	0, 0, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 0, 101, 0,
	0, 111, 37, 33, 34, 35, 0, 892, 0, 892,
	892, 0, 414, 603, 912, 913, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 0, 0, 468, 468, 468, 468,
	468, 468, 0, 424, 0, 0, 0, 0, 0, 0,
	0, 440, 0, 443, 0, 0, 450, 468, 1300, 1300,
	1300, 474, 475, 462, 460, 457, 458, 476, 479, 0,
	484, 487, 908, 909, 0, 502, 0, 1120, 494, 507,
	508, 518, 38, 654, 613, 0, 619, 621, 0, 656,
	657, 658, 659, 660, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 686, 687, 688, 689, 766, 767,
	768, 769, 770, 771, 772, 773, 623, 624, 763, 0,
	873, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	754, 0, 723, 723, 723, 723, 723, 723, 723, 723,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 1299,
	0, 517, 781, 49, 0, 519, 524, 525, 824, 0,
	0, 781, 1298, 0, 0, -2, -2, 535, 541, 542,
	543, 544, 520, 0, 547, 551, 0, 0, 0, 897,
	0, 0, 68, 0, 1268, 877, -2, -2, 0, 0,
	910, 911, -2, 1067, -2, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 0, 0,
	121, 122, 0, 36, 247, 0, 117, 0, 241, 179,
	818, 0, 0, 0, 0, 0, 88, 109, 110, 0,
	221, 0, 111, 111, 330, 331, 332, 0, 0, -2,
	245, 0, 315, 0, 0, 235, 235, 239, 237, 238,
	0, 0, 0, 0, 0, 0, 342, 0, 343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 398, 0,
	222, 0, 360, 361, 269, 0, 0, 0, 0, 340,
	341, 0, 0, 899, 900, 0, 0, 0, 221, 0,
	0, 0, 0, 221, 221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 1300, 0, 0, 0, 0, -2, 0, 406, 0,
	0, 0, 0, 0, 0, 413, 0, 415, 468, 417,
	0, 0, 418, 419, 420, 421, 422, 468, 0, 468,
	0, 468, 468, 468, 468, 465, 0, 465, 463, 464,
	455, 456, 1300, 1300, 0, 1300, 1300, 0, 1300, 1300,
	0, 230, 231, 232, 471, 447, 448, 451, 452, 1301,
	1302, 453, 454, 485, 488, 505, 503, 504, 506, 498,
	499, 500, 501, 0, 0, 0, 0, 0, 0, 617,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 641,
	642, 643, 644, 645, 646, 647, 620, 0, 634, 0,
	0, 0, 676, 677, 678, 679, 680, 681, 682, 683,
	684, 0, 532, 0, 0, 0, 781, 0, 0, 0,
	0, 0, 0, 0, 529, 0, 755, 0, 707, 715,
	0, 708, 716, 709, 717, 710, 0, 711, 718, 712,
	719, 713, 714, 720, 0, 0, 0, 532, 532, 0,
	0, 39, 509, 510, 0, 586, 789, 0, 534, 827,
	0, 0, 790, 782, 783, 786, 789, 0, 556, 545,
	536, 539, 540, 522, 0, 548, 552, 0, 554, 555,
	0, 0, 66, 0, 602, 0, 558, 560, 561, 562,
	584, 0, 0, 0, 0, 62, 64, 603, 0, 1268,
	883, 0, 70, 71, 0, 0, 0, 202, 887, 888,
	889, 885, -2, 228, 0, 190, 186, 130, 131, 132,
	179, 134, 179, 179, 179, 179, 199, 199, 199, 199,
	162, 163, 164, 165, 166, 0, 0, 149, 179, 179,
	179, 179, 169, 170, 171, 172, 173, 174, 175, 176,
	135, 136, 137, 138, 139, 140, 141, 142, 143, 181,
	181, 181, 183, 183, 0, 37, 0, 213, 0, 786,
	0, 809, 0, 0, 97, 0, 905, 100, 221, 0,
	363, 324, 352, 364, 0, 327, 328, -2, 0, 0,
	314, 0, 316, 0, 229, 0, -2, 0, 0, 0,
	235, 239, 236, 239, 227, 240, 344, 763, 0, 345,
	346, 0, 378, 572, 0, 0, 0, 0, 0, 384,
	385, 386, 0, 388, 389, 390, 391, 392, 393, 394,
	395, 396, 397, 353, 354, 355, 356, 357, 358, 359,
	0, 0, 316, 0, 349, 0, 270, 271, 221, 0,
	274, 275, 276, 277, 0, 0, 280, 281, 282, 283,
	284, 308, 309, 310, 285, 286, 287, 288, 289, 290,
	291, 302, 303, 304, 305, 306, 307, 292, 293, 294,
	295, 296, 299, 0, 366, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 409, 893, 0, 1300, 412, 604,
	914, 915, 416, 469, 470, 423, 441, 425, 444, 426,
	428, 427, 429, 468, 0, 0, 0, 233, 234, 468,
	432, 433, 434, 435, 436, 437, 438, 439, 0, 446,
	0, 0, 0, 486, 490, 491, 492, 493, 655, 614,
	615, 616, 618, 635, 0, 637, 639, 625, 626, 650,
	651, 652, 0, 0, 0, 0, 648, 630, 0, 661,
	662, 663, 664, 665, 666, 667, 668, 669, 670, 671,
	672, 675, 738, 739, 740, 0, 673, 674, 685, 0,
	0, 0, 533, 764, 0, -2, 0, 653, 872, 789,
	0, 0, 0, 0, 658, 766, 0, 658, 766, 0,
	0, 0, 530, 531, 761, 758, 0, 0, 724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	515, 0, 606, 0, 587, 0, 589, 590, 824, 50,
	40, 0, 825, 0, 0, 0, 0, 785, 787, 788,
	824, 0, 774, 0, 0, 611, 0, 0, 537, 46,
	553, 549, 0, 611, 0, 0, 601, 0, 0, 0,
	0, 0, 0, 591, 0, 0, 594, 0, 0, 0,
	0, 585, 0, 0, 0, -2, 0, 0, 0, 60,
	61, 0, 0, 0, 878, 69, 0, 0, 74, 75,
	879, 880, 881, 882, 0, 104, -2, 265, 123, 125,
	126, 127, 118, 193, 191, 0, 188, 187, 133, 199,
	199, 156, 157, 202, 0, 202, 202, 202, 0, 0,
	150, 151, 152, 153, 144, 0, 145, 146, 147, 0,
	148, 246, 0, 793, 214, 215, 217, 221, 0, 0,
	0, 242, 243, 0, 0, 0, 0, 806, 807, 808,
	895, 0, 906, 0, 115, 116, 111, 0, 0, 119,
	318, 0, 0, 0, 244, 0, 0, 223, 239, 224,
	225, 0, 347, 0, 0, 380, 381, 382, 383, 0,
	0, 0, 316, 318, 0, 0, 0, 273, 278, 279,
	297, 0, 0, 89, 370, 372, 371, 375, 0, 0,
	0, 0, 407, 1300, 411, 430, 466, 467, 465, 445,
	465, 472, 449, 482, 636, 638, 640, 627, 648, 631,
	0, 628, 0, 0, 622, 690, 0, 0, 532, 0,
	781, 824, 694, 695, 0, 0, 0, 0, 0, 731,
	0, 0, 732, 0, 781, 0, 759, 0, 0, 706,
	725, 0, 0, 726, 727, 728, 729, 730, 511, 514,
	516, 566, 0, 0, 0, 0, 588, 42, 0, 0,
	0, 791, 792, 784, 41, 0, 890, 891, 775, 776,
	777, 0, 546, 557, 538, 0, 789, 866, 0, 0,
	858, 0, 0, 611, 874, 0, 559, 580, 582, 0,
	577, 592, 593, 595, 0, 597, 0, 599, 600, 563,
	564, 565, 0, 611, 0, 611, 63, 611, 65, 0,
	605, 72, 73, 0, 0, 79, 203, 204, 111, 267,
	124, 195, 0, 192, 129, 189, 202, 202, 158, 0,
	159, 160, 161, 0, 177, 0, 0, 0, 260, 84,
	797, 796, 221, 221, 216, 0, 219, 0, 907, 180,
	0, 0, 819, 820, 0, 823, 0, 113, 114, 0,
	322, 570, 0, 333, 334, 0, 317, 377, 0, 213,
	0, 226, 764, 573, 0, 0, 335, 0, 318, 338,
	202, 350, 272, 300, 301, 298, 92, 0, 0, 0,
	0, 368, 0, 410, 468, 468, 629, 0, 649, 632,
	691, 692, 0, 765, 789, 44, 0, 179, 179, 744,
	179, 183, 747, 179, 749, 179, 752, 0, 0, 0,
	0, 0, 0, 0, 756, 705, 762, 0, 0, 0,
	0, 0, 0, 0, 0, 199, 829, 826, 43, 779,
	0, 612, 550, 47, 51, 0, 866, 857, 868, 870,
	0, 0, 0, 862, 0, 781, 0, 0, 574, 581,
	0, 0, 575, 0, 576, 596, 598, -2, 781, 611,
	58, 59, 0, 76, 77, 78, 266, 197, 0, 194,
	154, 155, 200, 201, 199, 0, 199, 0, 184, 0,
	252, 261, 0, 794, 795, 0, 0, 218, 220, 568,
	810, 811, 812, 0, 822, 99, 0, 0, 120, 319,
	0, 212, 0, 0, 402, 399, 336, 337, 339, 369,
	0, 90, 91, 0, 0, 374, 408, 431, 442, 633,
	693, 824, 696, 741, 199, 745, 746, 748, 750, 751,
	753, 698, 697, 0, 0, 0, 0, 0, 789, 0,
	760, 0, 0, 0, 0, 0, 586, 199, 849, 48,
	0, 0, 0, 52, 0, 871, 0, 0, 0, 0,
	67, 789, 875, 876, 578, 0, 583, 789, 57, 205,
	198, 0, 202, 178, 202, 0, 0, 262, 798, 799,
	800, 801, 802, 803, 804, 0, 0, 821, 325, 571,
	0, 0, 379, 0, 387, 0, 0, 93, 94, 0,
	0, 0, 45, 742, 743, 0, 0, 0, 0, 733,
	0, 757, 0, 0, 0, 608, 0, 0, 606, 831,
	830, 843, 847, 780, 778, 0, 869, 0, 861, 864,
	860, 863, 55, 0, 56, 210, 0, 207, 209, 196,
	167, 168, 182, 185, 0, 0, 0, 0, 403, 400,
	401, 0, 0, 0, 376, 699, 701, 700, 702, 0,
	0, 0, 704, 721, 722, 607, 609, 610, 567, 849,
	0, 842, 845, -2, 0, 0, 859, 0, 579, 128,
	0, 206, 208, 813, 569, 0, 0, 95, 96, 311,
	312, 313, 89, 703, 0, 0, 0, 836, 834, 834,
	847, 0, 851, 0, 856, 0, 867, 865, 211, 85,
	815, 0, 0, 0, 92, 734, 0, 737, 839, 0,
	832, 835, 833, 844, 0, 850, 0, 0, 848, 0,
	816, 817, 404, 405, 248, 373, 735, 828, 0, 837,
	838, 846, 0, 0, 0, 249, 250, 0, 0, 840,
	841, 852, 854, 814, 251, 0, 0, 0, 0, 253,
	255, 256, 0, 0, 254, 736, 257, 258, 259,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 110, 3, 3, 3, 137, 129, 3,
	80, 82, 134, 132, 81, 133, 149, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 451,
	118, 117, 119, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 111, 112, 113, 114, 115,
	116, 120, 121, 122, 123, 124, 125, 126, 127, 130,
	131, 136, 138, 141, 142, 143, 144, 145, 146, 147,
	148, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:407
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:412
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:454
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:458
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:467
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:471
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:483
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:489
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:498
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:502
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:506
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:529
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:543
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:549
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:567
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:574
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:586
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:614
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:618
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:659
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:671
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:675
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:691
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:705
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:713
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:733
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:739
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:754
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:758
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:765
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:774
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:778
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:784
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:789
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:794
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:817
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:831
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:838
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:845
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:856
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:862
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:880
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:893
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:899
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:903
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:924
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:945
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:954
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:967
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:973
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1150
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1214
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1218
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1226
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1276
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1303
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1311
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1329
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1337
		{
			yyVAL.colKeyOpt = colKey
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1345
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1350
		{
			yyVAL.literal = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1360
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1365
		{
			yyVAL.indexOptions = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1404
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1426
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = ""
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = yyDollar[2].str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = "key"
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1534
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 249:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1546
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1552
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1564
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.boolean = true
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.boolean = false
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1604
		{
			yyVAL.tableOptions = nil
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1638
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1646
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)), String: yyDollar[5].str}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1650
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1654
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1658
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1666
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1670
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1674
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1678
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1702
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1718
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1722
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1730
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1734
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1738
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1742
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1746
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1750
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = ""
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1795
		{
			yyVAL.bytes = []byte("")
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1801
		{
			yyVAL.colName = nil
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1810
		{
			yyVAL.colName = nil
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1819
		{
			yyVAL.alterOptions = nil
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1839
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1853
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1875
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1879
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1883
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1887
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1891
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 339:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1899
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1903
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1919
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1931
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.alterOption = &Force{}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.alterOption = &RenameTable{Table: yyDollar[3].tableName}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1943
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2003
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2010
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2034
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2041
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2063
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 373:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2111
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2119
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2123
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2127
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2131
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2135
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2147
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2151
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2175
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2183
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2191
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.boolean = false
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.boolean = false
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.boolean = true
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2225
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 405:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2229
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2245
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2257
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2266
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.statement = &OtherRead{}
		}
	case 416:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2287
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 423:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2323
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2327
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2331
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2335
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2343
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2359
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2388
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 442:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2392
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2397
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2401
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2405
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2415
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2432
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2437
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2459
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2469
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2479
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = ""
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2489
		{
			yyVAL.str = "extended "
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = ""
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2499
		{
			yyVAL.str = "full "
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = ""
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2529
		{
			yyVAL.showFilter = nil
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2537
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2543
		{
			yyVAL.showFilter = nil
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2553
		{
			yyVAL.empty = struct{}{}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.empty = struct{}{}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2561
		{
			yyVAL.empty = struct{}{}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2567
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.statement = &Begin{}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2581
		{
			yyVAL.statement = &Begin{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2587
		{
			yyVAL.statement = &Commit{}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2593
		{
			yyVAL.statement = &Rollback{}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2597
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2602
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2604
		{
			yyVAL.empty = struct{}{}
		}
	case 485:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2607
		{
			yyVAL.empty = struct{}{}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2609
		{
			yyVAL.empty = struct{}{}
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2620
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 489:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2625
		{
			yyVAL.explainType = EmptyType
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.explainType = JSONType
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.explainType = TreeType
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.explainType = VitessType
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2641
		{
			yyVAL.explainType = TraditionalType
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2645
		{
			yyVAL.explainType = AnalyzeType
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2677
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = ""
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.str = ""
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yyVAL.statement = &OtherRead{}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2700
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2710
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2716
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2722
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2732
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2738
		{
			yyVAL.lockType = Read
		}
	case 514:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2742
		{
			yyVAL.lockType = ReadLocal
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2746
		{
			yyVAL.lockType = Write
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2750
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2756
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2766
		{
			setAllowComments(yylex, true)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2776
		{
			yyVAL.bytes2 = nil
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2780
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2786
		{
			yyVAL.boolean = true
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.boolean = false
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2794
		{
			yyVAL.boolean = true
		}
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = ""
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2807
		{
			yyVAL.str = SQLCacheStr
		}
	case 529:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2812
		{
			yyVAL.boolean = false
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.boolean = true
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2820
		{
			yyVAL.boolean = true
		}
	case 532:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2825
		{
			yyVAL.selectExprs = nil
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 534:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2834
		{
			yyVAL.strs = nil
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2838
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 538:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2850
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = SQLCacheStr
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = DistinctStr
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = DistinctStr
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = StraightJoinHint
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2876
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2886
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2892
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2896
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2900
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 550:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2904
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2909
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2913
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2917
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2924
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2929
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2933
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 558:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2939
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2943
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2953
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2961
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2967
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2973
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 567:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2977
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2982
		{
			yyVAL.columns = nil
		}
	case 569:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2986
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 570:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2992
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2996
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 572:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3002
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 573:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3006
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3019
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3023
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3027
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3031
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3037
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3039
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 580:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3043
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3045
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 582:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3049
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3051
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 584:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3054
		{
			yyVAL.empty = struct{}{}
		}
	case 585:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3056
		{
			yyVAL.empty = struct{}{}
		}
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3059
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3067
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3074
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3080
		{
			yyVAL.joinType = NormalJoinType
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3084
		{
			yyVAL.joinType = NormalJoinType
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3088
		{
			yyVAL.joinType = NormalJoinType
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.joinType = StraightJoinType
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.joinType = LeftJoinType
		}
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.joinType = LeftJoinType
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3108
		{
			yyVAL.joinType = RightJoinType
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3112
		{
			yyVAL.joinType = RightJoinType
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3118
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3122
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3132
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3146
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3152
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3157
		{
			yyVAL.indexHints = nil
		}
	case 607:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3161
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3165
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3169
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 610:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3173
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3178
		{
			yyVAL.expr = nil
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3182
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 613:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3192
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3196
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3200
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3204
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3208
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = ""
		}
	case 622:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3226
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3236
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 626:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3246
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3250
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3254
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 629:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3258
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3262
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3266
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 632:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 633:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3284
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3288
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3292
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3296
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3300
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3304
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3310
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3314
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3326
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3334
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = nil
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3343
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3357
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3363
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3369
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3403
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3407
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3423
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3479
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3487
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3505
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3509
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 690:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 692:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 693:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3539
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3549
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 695:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3553
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3557
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 698:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3565
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 699:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3569
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 700:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3573
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 701:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3577
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 702:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 703:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3585
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 704:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 705:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3593
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3597
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3611
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3615
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3620
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3625
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3630
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3636
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3641
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3654
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3659
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3664
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3669
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 722:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3677
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3687
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3701
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3713
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3721
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3727
		{
			yyVAL.matchExprOption = NoOption
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3731
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 735:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3735
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 736:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3739
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3743
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3757
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 741:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3763
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3771
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3779
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3783
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3793
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3809
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3818
		{
			yyVAL.expr = nil
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = string("")
		}
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3831
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3837
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3841
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 760:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3847
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = nil
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3856
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3866
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 765:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3870
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3904
		{
			yyVAL.expr = &NullVal{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3910
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3923
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 777:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3928
		{
			yyVAL.exprs = nil
		}
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3932
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 779:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = nil
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3941
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 781:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3946
		{
			yyVAL.orderBy = nil
		}
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3950
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3956
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 784:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3960
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3966
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3971
		{
			yyVAL.orderDirection = AscOrder
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3975
		{
			yyVAL.orderDirection = AscOrder
		}
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.orderDirection = DescOrder
		}
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3984
		{
			yyVAL.limit = nil
		}
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3988
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3992
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 792:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3996
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4001
		{
			yyVAL.indexOptions = nil
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4005
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 795:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4009
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4017
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4036
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4042
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4046
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4050
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = ""
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4067
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4072
		{
			yyVAL.str = ""
		}
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4076
		{
			yyVAL.str = yyDollar[3].str
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4086
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 813:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = ""
		}
	case 814:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4095
		{
			yyVAL.str = yyDollar[2].str
		}
	case 815:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4100
		{
			yyVAL.str = "cascaded"
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4104
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = ""
		}
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4117
		{
			yyVAL.str = yyDollar[3].str
		}
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4135
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4140
		{
			yyVAL.lock = NoLock
		}
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4144
		{
			yyVAL.lock = ForUpdateLock
		}
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4148
		{
			yyVAL.lock = ShareModeLock
		}
	case 827:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4153
		{
			yyVAL.selectInto = nil
		}
	case 828:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4157
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 829:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4161
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 830:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4165
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 831:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = ""
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4178
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 834:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = ""
		}
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4187
		{
			yyVAL.str = " header"
		}
	case 836:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = ""
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = " manifest on"
		}
	case 838:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = " manifest off"
		}
	case 839:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = ""
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = " overwrite on"
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4213
		{
			yyVAL.str = " overwrite off"
		}
	case 842:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4219
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = ""
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4237
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = ""
		}
	case 848:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4246
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 849:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = ""
		}
	case 850:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 851:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = ""
		}
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = ""
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4282
		{
			yyVAL.str = " optionally"
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4295
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4303
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4307
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4311
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4317
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4325
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4329
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4334
		{
			yyVAL.updateExprs = nil
		}
	case 867:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4338
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4344
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 869:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4348
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4354
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 871:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4358
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4364
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4370
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4380
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4384
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4390
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4396
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4400
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4406
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4414
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4422
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4430
		{
			yyVAL.bytes = []byte("charset")
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4441
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4445
		{
			yyVAL.expr = &Default{}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4454
		{
			yyVAL.boolean = false
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			yyVAL.boolean = true
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.boolean = false
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4461
		{
			yyVAL.boolean = true
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4464
		{
			yyVAL.ignore = false
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4466
		{
			yyVAL.ignore = true
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4469
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4471
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4473
		{
			yyVAL.empty = struct{}{}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4478
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4482
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4485
		{
			yyVAL.indexOptions = nil
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4487
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4491
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4497
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4501
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4508
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4514
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4518
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4525
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4931
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4940
		{
			decNesting(yylex)
		}
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4945
		{
			skipToEnd(yylex)
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4950
		{
			skipToEnd(yylex)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4954
		{
			skipToEnd(yylex)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4958
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
