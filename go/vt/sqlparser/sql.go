// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl *DDL) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                  int
	empty                struct{}
	statement            Statement
	selStmt              SelectStatement
	ddl                  *DDL
	ins                  *Insert
	byt                  byte
	bytes                []byte
	bytes2               [][]byte
	str                  string
	strs                 []string
	selectExprs          SelectExprs
	selectExpr           SelectExpr
	columns              Columns
	partitions           Partitions
	colName              *ColName
	tableExprs           TableExprs
	tableExpr            TableExpr
	joinCondition        JoinCondition
	tableName            TableName
	tableNames           TableNames
	indexHints           *IndexHints
	expr                 Expr
	exprs                Exprs
	boolVal              BoolVal
	sqlVal               *SQLVal
	colTuple             ColTuple
	values               Values
	valTuple             ValTuple
	subquery             *Subquery
	whens                []*When
	when                 *When
	orderBy              OrderBy
	order                *Order
	limit                *Limit
	updateExprs          UpdateExprs
	setExprs             SetExprs
	updateExpr           *UpdateExpr
	setExpr              *SetExpr
	colIdent             ColIdent
	tableIdent           TableIdent
	convertType          *ConvertType
	aliasedTableName     *AliasedTableExpr
	TableSpec            *TableSpec
	columnType           ColumnType
	colKeyOpt            ColumnKeyOption
	optVal               Expr
	LengthScaleOption    LengthScaleOption
	columnDefinition     *ColumnDefinition
	indexDefinition      *IndexDefinition
	indexInfo            *IndexInfo
	indexOption          *IndexOption
	indexOptions         []*IndexOption
	indexColumn          *IndexColumn
	indexColumns         []*IndexColumn
	constraintDefinition *ConstraintDefinition
	constraintInfo       ConstraintInfo
	ReferenceAction      ReferenceAction
	partDefs             []*PartitionDefinition
	partDef              *PartitionDefinition
	partSpec             *PartitionSpec
	vindexParam          VindexParam
	vindexParams         []VindexParam
	showFilter           *ShowFilter
	optLike              *OptLike
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const INSERT = 57350
const UPDATE = 57351
const DELETE = 57352
const FROM = 57353
const WHERE = 57354
const GROUP = 57355
const HAVING = 57356
const ORDER = 57357
const BY = 57358
const LIMIT = 57359
const OFFSET = 57360
const FOR = 57361
const ALL = 57362
const DISTINCT = 57363
const AS = 57364
const EXISTS = 57365
const ASC = 57366
const DESC = 57367
const INTO = 57368
const DUPLICATE = 57369
const KEY = 57370
const DEFAULT = 57371
const SET = 57372
const LOCK = 57373
const UNLOCK = 57374
const KEYS = 57375
const VALUES = 57376
const LAST_INSERT_ID = 57377
const NEXT = 57378
const VALUE = 57379
const SHARE = 57380
const MODE = 57381
const SQL_NO_CACHE = 57382
const SQL_CACHE = 57383
const JOIN = 57384
const STRAIGHT_JOIN = 57385
const LEFT = 57386
const RIGHT = 57387
const INNER = 57388
const OUTER = 57389
const CROSS = 57390
const NATURAL = 57391
const USE = 57392
const FORCE = 57393
const ON = 57394
const USING = 57395
const ID = 57396
const HEX = 57397
const STRING = 57398
const INTEGRAL = 57399
const FLOAT = 57400
const HEXNUM = 57401
const VALUE_ARG = 57402
const LIST_ARG = 57403
const COMMENT = 57404
const COMMENT_KEYWORD = 57405
const BIT_LITERAL = 57406
const NULL = 57407
const TRUE = 57408
const FALSE = 57409
const OFF = 57410
const OR = 57411
const AND = 57412
const NOT = 57413
const BETWEEN = 57414
const CASE = 57415
const WHEN = 57416
const THEN = 57417
const ELSE = 57418
const END = 57419
const LE = 57420
const GE = 57421
const NE = 57422
const NULL_SAFE_EQUAL = 57423
const IS = 57424
const LIKE = 57425
const REGEXP = 57426
const IN = 57427
const SHIFT_LEFT = 57428
const SHIFT_RIGHT = 57429
const DIV = 57430
const MOD = 57431
const UNARY = 57432
const COLLATE = 57433
const BINARY = 57434
const UNDERSCORE_BINARY = 57435
const UNDERSCORE_UTF8MB4 = 57436
const INTERVAL = 57437
const JSON_EXTRACT_OP = 57438
const JSON_UNQUOTE_EXTRACT_OP = 57439
const CREATE = 57440
const ALTER = 57441
const DROP = 57442
const RENAME = 57443
const ANALYZE = 57444
const ADD = 57445
const FLUSH = 57446
const SCHEMA = 57447
const TABLE = 57448
const INDEX = 57449
const VIEW = 57450
const TO = 57451
const IGNORE = 57452
const IF = 57453
const UNIQUE = 57454
const PRIMARY = 57455
const COLUMN = 57456
const SPATIAL = 57457
const FULLTEXT = 57458
const KEY_BLOCK_SIZE = 57459
const CHECK = 57460
const ACTION = 57461
const CASCADE = 57462
const CONSTRAINT = 57463
const FOREIGN = 57464
const NO = 57465
const REFERENCES = 57466
const RESTRICT = 57467
const SHOW = 57468
const DESCRIBE = 57469
const EXPLAIN = 57470
const DATE = 57471
const ESCAPE = 57472
const REPAIR = 57473
const OPTIMIZE = 57474
const TRUNCATE = 57475
const MAXVALUE = 57476
const PARTITION = 57477
const REORGANIZE = 57478
const LESS = 57479
const THAN = 57480
const PROCEDURE = 57481
const TRIGGER = 57482
const VINDEX = 57483
const VINDEXES = 57484
const STATUS = 57485
const VARIABLES = 57486
const WARNINGS = 57487
const SEQUENCE = 57488
const BEGIN = 57489
const START = 57490
const TRANSACTION = 57491
const COMMIT = 57492
const ROLLBACK = 57493
const BIT = 57494
const TINYINT = 57495
const SMALLINT = 57496
const MEDIUMINT = 57497
const INT = 57498
const INTEGER = 57499
const BIGINT = 57500
const INTNUM = 57501
const REAL = 57502
const DOUBLE = 57503
const FLOAT_TYPE = 57504
const DECIMAL = 57505
const NUMERIC = 57506
const TIME = 57507
const TIMESTAMP = 57508
const DATETIME = 57509
const YEAR = 57510
const CHAR = 57511
const VARCHAR = 57512
const BOOL = 57513
const CHARACTER = 57514
const VARBINARY = 57515
const NCHAR = 57516
const TEXT = 57517
const TINYTEXT = 57518
const MEDIUMTEXT = 57519
const LONGTEXT = 57520
const BLOB = 57521
const TINYBLOB = 57522
const MEDIUMBLOB = 57523
const LONGBLOB = 57524
const JSON = 57525
const ENUM = 57526
const GEOMETRY = 57527
const POINT = 57528
const LINESTRING = 57529
const POLYGON = 57530
const GEOMETRYCOLLECTION = 57531
const MULTIPOINT = 57532
const MULTILINESTRING = 57533
const MULTIPOLYGON = 57534
const NULLX = 57535
const AUTO_INCREMENT = 57536
const APPROXNUM = 57537
const SIGNED = 57538
const UNSIGNED = 57539
const ZEROFILL = 57540
const COLLATION = 57541
const DATABASES = 57542
const TABLES = 57543
const VITESS_METADATA = 57544
const VSCHEMA = 57545
const FULL = 57546
const PROCESSLIST = 57547
const COLUMNS = 57548
const FIELDS = 57549
const ENGINES = 57550
const PLUGINS = 57551
const NAMES = 57552
const CHARSET = 57553
const GLOBAL = 57554
const SESSION = 57555
const ISOLATION = 57556
const LEVEL = 57557
const READ = 57558
const WRITE = 57559
const ONLY = 57560
const REPEATABLE = 57561
const COMMITTED = 57562
const UNCOMMITTED = 57563
const SERIALIZABLE = 57564
const CURRENT_TIMESTAMP = 57565
const DATABASE = 57566
const CURRENT_DATE = 57567
const CURRENT_TIME = 57568
const LOCALTIME = 57569
const LOCALTIMESTAMP = 57570
const UTC_DATE = 57571
const UTC_TIME = 57572
const UTC_TIMESTAMP = 57573
const REPLACE = 57574
const CONVERT = 57575
const CAST = 57576
const SUBSTR = 57577
const SUBSTRING = 57578
const GROUP_CONCAT = 57579
const SEPARATOR = 57580
const TIMESTAMPADD = 57581
const TIMESTAMPDIFF = 57582
const MATCH = 57583
const AGAINST = 57584
const BOOLEAN = 57585
const LANGUAGE = 57586
const WITH = 57587
const QUERY = 57588
const EXPANSION = 57589
const UNUSED = 57590
const ARRAY = 57591
const CUME_DIST = 57592
const DESCRIPTION = 57593
const DENSE_RANK = 57594
const EMPTY = 57595
const EXCEPT = 57596
const FIRST_VALUE = 57597
const GROUPING = 57598
const GROUPS = 57599
const JSON_TABLE = 57600
const LAG = 57601
const LAST_VALUE = 57602
const LATERAL = 57603
const LEAD = 57604
const MEMBER = 57605
const NTH_VALUE = 57606
const NTILE = 57607
const OF = 57608
const OVER = 57609
const PERCENT_RANK = 57610
const RANK = 57611
const RECURSIVE = 57612
const ROW_NUMBER = 57613
const SYSTEM = 57614
const WINDOW = 57615

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"'('",
	"','",
	"')'",
	"ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 3,
	5, 29,
	-2, 4,
	-1, 37,
	160, 300,
	161, 300,
	-2, 288,
	-1, 263,
	112, 640,
	-2, 636,
	-1, 264,
	112, 641,
	-2, 637,
	-1, 332,
	82, 839,
	-2, 63,
	-1, 333,
	82, 795,
	-2, 64,
	-1, 338,
	82, 773,
	-2, 602,
	-1, 340,
	82, 816,
	-2, 604,
	-1, 633,
	1, 352,
	5, 352,
	12, 352,
	13, 352,
	14, 352,
	15, 352,
	17, 352,
	19, 352,
	30, 352,
	31, 352,
	42, 352,
	43, 352,
	44, 352,
	45, 352,
	46, 352,
	48, 352,
	49, 352,
	52, 352,
	53, 352,
	55, 352,
	56, 352,
	291, 352,
	-2, 370,
	-1, 636,
	53, 44,
	55, 44,
	-2, 48,
	-1, 784,
	112, 643,
	-2, 639,
	-1, 1013,
	5, 30,
	-2, 437,
	-1, 1043,
	5, 29,
	-2, 576,
	-1, 1288,
	5, 30,
	-2, 577,
	-1, 1341,
	5, 29,
	-2, 579,
	-1, 1419,
	5, 30,
	-2, 580,
}

const yyPrivate = 57344

const yyLast = 13020

var yyAct = [...]int{

	264, 1453, 1443, 1250, 842, 1138, 589, 268, 1407, 1046,
	897, 1353, 1224, 1321, 1308, 1064, 1190, 281, 870, 1047,
	490, 1191, 1187, 242, 868, 940, 57, 294, 977, 906,
	1070, 926, 81, 1091, 896, 1203, 207, 1162, 1197, 207,
	819, 1005, 337, 733, 809, 649, 816, 910, 872, 893,
	1117, 837, 1108, 527, 747, 588, 3, 857, 786, 521,
	936, 295, 51, 648, 331, 461, 629, 207, 81, 541,
	630, 326, 207, 533, 207, 850, 266, 251, 323, 328,
	638, 603, 56, 1446, 1430, 1441, 1417, 1438, 604, 1251,
	1429, 1179, 1280, 1416, 466, 1219, 1220, 650, 233, 651,
	202, 198, 199, 200, 255, 1079, 959, 241, 1078, 888,
	889, 1080, 1218, 51, 887, 515, 239, 194, 238, 196,
	958, 247, 1099, 1382, 554, 553, 563, 564, 556, 557,
	558, 559, 560, 561, 562, 555, 510, 492, 565, 61,
	511, 508, 509, 234, 235, 236, 237, 919, 963, 240,
	1311, 479, 927, 1140, 1328, 494, 306, 957, 312, 313,
	310, 311, 309, 308, 307, 63, 64, 65, 66, 67,
	1271, 1269, 314, 315, 514, 232, 722, 503, 504, 513,
	554, 553, 563, 564, 556, 557, 558, 559, 560, 561,
	562, 555, 1163, 1142, 565, 207, 721, 719, 207, 1400,
	1440, 1437, 1408, 1137, 207, 334, 1141, 954, 951, 952,
	207, 950, 195, 81, 851, 81, 723, 81, 81, 201,
	81, 496, 81, 498, 913, 911, 1461, 480, 81, 468,
	1165, 720, 1354, 1457, 1006, 499, 196, 500, 501, 1143,
	502, 726, 505, 961, 964, 1356, 519, 712, 516, 1362,
	1213, 913, 1212, 462, 495, 497, 1065, 1067, 81, 1211,
	464, 471, 209, 197, 1167, 1389, 1171, 1291, 1166, 1149,
	1164, 682, 529, 1075, 491, 1169, 491, 1032, 491, 491,
	956, 491, 1134, 491, 1168, 999, 927, 971, 1136, 491,
	970, 577, 578, 1383, 758, 644, 545, 1170, 1172, 486,
	894, 1022, 955, 530, 1415, 1019, 565, 883, 555, 51,
	755, 565, 920, 1355, 752, 1236, 540, 748, 1398, 1371,
	912, 207, 207, 207, 574, 909, 907, 576, 908, 1201,
	81, 539, 538, 1066, 905, 911, 81, 517, 518, 493,
	1455, 960, 1181, 1456, 652, 1454, 628, 912, 540, 670,
	1363, 1361, 482, 483, 484, 587, 962, 591, 592, 593,
	594, 595, 596, 597, 598, 599, 1237, 602, 605, 605,
	605, 611, 605, 605, 611, 605, 619, 620, 621, 622,
	623, 624, 838, 634, 1135, 714, 1133, 683, 531, 606,
	608, 610, 612, 614, 616, 617, 607, 609, 749, 613,
	615, 637, 618, 577, 578, 642, 979, 577, 578, 646,
	696, 699, 700, 701, 702, 703, 704, 1097, 705, 706,
	707, 708, 709, 684, 685, 686, 687, 668, 669, 697,
	913, 671, 70, 672, 673, 674, 675, 676, 677, 678,
	679, 680, 681, 688, 689, 690, 691, 692, 693, 694,
	695, 535, 558, 559, 560, 561, 562, 555, 538, 1092,
	565, 207, 539, 538, 1403, 261, 81, 334, 71, 1183,
	462, 207, 207, 81, 540, 916, 476, 207, 1421, 540,
	207, 917, 1423, 207, 978, 1317, 711, 207, 1316, 81,
	81, 757, 793, 718, 81, 81, 81, 207, 81, 81,
	838, 698, 1029, 460, 81, 81, 791, 792, 790, 736,
	737, 1017, 1112, 1016, 738, 739, 740, 1018, 742, 743,
	193, 467, 1462, 1111, 744, 745, 912, 491, 756, 735,
	539, 538, 54, 81, 491, 764, 810, 207, 811, 473,
	1100, 474, 789, 81, 475, 539, 538, 540, 761, 762,
	491, 491, 520, 763, 1396, 491, 491, 491, 727, 491,
	491, 1463, 540, 1399, 1335, 491, 491, 539, 538, 293,
	22, 776, 778, 779, 1125, 1314, 787, 777, 996, 997,
	998, 1146, 1109, 1253, 540, 320, 321, 81, 784, 782,
	1081, 982, 1082, 820, 822, 1092, 539, 538, 469, 470,
	1087, 79, 812, 1123, 828, 831, 1359, 1439, 1368, 765,
	839, 732, 780, 540, 284, 283, 286, 287, 288, 289,
	81, 81, 731, 285, 290, 1425, 520, 207, 1359, 1411,
	246, 1359, 520, 1359, 1390, 207, 207, 336, 51, 207,
	207, 1359, 1358, 207, 207, 207, 81, 823, 1306, 1305,
	1293, 520, 1367, 591, 813, 814, 818, 1290, 520, 81,
	1243, 1242, 1233, 878, 1239, 1240, 1071, 880, 715, 847,
	1124, 1239, 1238, 835, 713, 1129, 1126, 1119, 1127, 1122,
	710, 1118, 488, 783, 1120, 1121, 481, 735, 1011, 520,
	854, 520, 821, 520, 659, 658, 869, 914, 1128, 1188,
	634, 1152, 1200, 853, 634, 928, 929, 930, 58, 854,
	884, 885, 876, 207, 81, 881, 81, 877, 520, 639,
	207, 207, 207, 207, 207, 901, 207, 207, 854, 640,
	207, 81, 1200, 1071, 946, 942, 948, 579, 580, 581,
	582, 583, 584, 585, 586, 1011, 24, 207, 1011, 207,
	207, 975, 24, 821, 207, 554, 553, 563, 564, 556,
	557, 558, 559, 560, 561, 562, 555, 938, 939, 565,
	1041, 641, 640, 643, 1042, 491, 1200, 491, 1286, 1370,
	1340, 854, 336, 334, 336, 24, 336, 336, 1241, 336,
	1083, 336, 491, 886, 54, 248, 898, 336, 1035, 1034,
	54, 784, 987, 563, 564, 556, 557, 558, 559, 560,
	561, 562, 555, 988, 641, 565, 639, 1008, 787, 1011,
	639, 1009, 645, 989, 759, 725, 270, 543, 1013, 1014,
	1015, 54, 1431, 54, 1323, 1021, 1448, 921, 1024, 1025,
	1298, 941, 1229, 54, 1031, 1000, 1204, 1205, 1033, 1001,
	1086, 1036, 1037, 1038, 1039, 207, 207, 207, 207, 207,
	937, 1048, 859, 862, 863, 864, 860, 207, 861, 865,
	207, 932, 931, 1063, 207, 257, 1139, 1324, 207, 556,
	557, 558, 559, 560, 561, 562, 555, 944, 1028, 565,
	1444, 1231, 1207, 1188, 1113, 753, 783, 81, 729, 336,
	771, 1210, 1072, 1058, 1209, 654, 1043, 1084, 1059, 1073,
	1056, 1074, 1044, 1045, 1055, 1057, 634, 634, 634, 634,
	634, 1049, 1069, 1061, 1052, 823, 1050, 1051, 1054, 1053,
	1435, 869, 1076, 1068, 1060, 1428, 863, 864, 1148, 634,
	252, 253, 984, 1433, 1093, 81, 81, 994, 534, 993,
	1104, 657, 489, 1096, 1101, 1102, 1089, 1090, 859, 862,
	863, 864, 860, 532, 861, 865, 1115, 1405, 1204, 1205,
	1404, 1338, 1094, 1088, 522, 81, 1103, 1284, 1105, 1106,
	1107, 922, 923, 924, 925, 1110, 523, 1319, 947, 728,
	867, 207, 249, 250, 534, 1144, 992, 933, 934, 935,
	81, 243, 1130, 1376, 991, 244, 58, 491, 1375, 1326,
	1071, 512, 1023, 785, 1020, 1160, 794, 795, 796, 797,
	798, 799, 800, 801, 802, 803, 804, 805, 806, 807,
	808, 1145, 1450, 1449, 898, 336, 491, 746, 536, 1450,
	1386, 1312, 336, 754, 1156, 81, 81, 1155, 1116, 1048,
	60, 1189, 1161, 1180, 62, 55, 1174, 1, 336, 336,
	1442, 1252, 1173, 336, 336, 336, 1320, 336, 336, 81,
	1192, 843, 953, 336, 336, 784, 987, 1199, 1406, 1352,
	1223, 904, 895, 69, 81, 459, 81, 81, 1208, 68,
	1397, 903, 575, 902, 1360, 1310, 1222, 1215, 915, 1098,
	1194, 918, 767, 1217, 1193, 1230, 51, 1214, 1095, 1402,
	665, 663, 543, 664, 207, 336, 662, 1226, 1221, 524,
	528, 667, 666, 1227, 1228, 661, 220, 329, 866, 653,
	943, 537, 207, 72, 1132, 1131, 546, 1154, 81, 949,
	751, 81, 81, 81, 207, 506, 507, 222, 633, 573,
	81, 1234, 1235, 207, 990, 1077, 815, 335, 1195, 760,
	1261, 526, 1374, 1325, 1027, 600, 836, 1263, 269, 775,
	1184, 590, 840, 282, 1258, 279, 280, 1260, 1272, 1273,
	601, 766, 1259, 1040, 547, 267, 259, 632, 625, 844,
	845, 858, 856, 1267, 855, 324, 1206, 1202, 1287, 1288,
	1289, 631, 1292, 1151, 1279, 1381, 770, 26, 1048, 59,
	254, 19, 1285, 18, 634, 336, 1245, 17, 20, 1303,
	1295, 898, 81, 898, 16, 15, 1294, 14, 336, 1246,
	81, 1248, 1084, 477, 30, 21, 13, 12, 11, 1304,
	10, 1278, 9, 8, 7, 81, 6, 5, 4, 824,
	825, 245, 81, 830, 833, 834, 23, 1002, 1003, 1004,
	2, 0, 0, 0, 0, 1318, 0, 0, 0, 0,
	1313, 0, 1315, 1300, 1301, 1302, 0, 0, 846, 0,
	848, 849, 0, 336, 1334, 336, 0, 1154, 0, 0,
	0, 81, 81, 0, 81, 0, 0, 1327, 0, 81,
	336, 81, 81, 81, 207, 0, 491, 81, 1339, 0,
	0, 0, 0, 1347, 1192, 1348, 1349, 1350, 1346, 1357,
	0, 0, 1351, 0, 81, 207, 0, 0, 336, 0,
	1364, 0, 0, 0, 1377, 1378, 1379, 1380, 1372, 0,
	0, 1384, 1385, 0, 0, 1341, 0, 0, 1193, 0,
	0, 1342, 0, 1391, 1392, 1393, 0, 1387, 0, 898,
	81, 0, 0, 1365, 1395, 1366, 0, 1394, 1192, 525,
	0, 81, 81, 0, 0, 788, 0, 0, 0, 0,
	0, 1369, 1410, 1413, 1409, 0, 1414, 0, 750, 1322,
	81, 0, 0, 1419, 1048, 0, 1418, 0, 1388, 0,
	0, 207, 1193, 0, 51, 205, 0, 0, 231, 81,
	0, 1424, 0, 0, 773, 774, 0, 1427, 0, 0,
	0, 0, 0, 840, 635, 0, 0, 995, 0, 0,
	0, 1434, 81, 258, 1432, 0, 327, 0, 0, 0,
	0, 205, 0, 205, 0, 1447, 1436, 0, 0, 0,
	0, 0, 1458, 0, 0, 0, 1459, 1460, 0, 0,
	204, 633, 0, 0, 0, 633, 336, 590, 0, 633,
	826, 827, 1158, 1159, 1010, 0, 1264, 1265, 1283, 1266,
	0, 0, 1268, 0, 1270, 1175, 1176, 0, 1177, 1178,
	0, 325, 1026, 0, 0, 0, 463, 0, 465, 0,
	1185, 1186, 1445, 0, 0, 0, 1277, 1282, 1322, 898,
	0, 0, 0, 0, 1114, 336, 554, 553, 563, 564,
	556, 557, 558, 559, 560, 561, 562, 555, 892, 0,
	565, 0, 0, 0, 0, 0, 0, 0, 1307, 0,
	0, 0, 0, 0, 336, 554, 553, 563, 564, 556,
	557, 558, 559, 560, 561, 562, 555, 0, 0, 565,
	0, 0, 1232, 0, 205, 0, 0, 205, 0, 336,
	0, 0, 0, 205, 0, 0, 0, 0, 0, 205,
	554, 553, 563, 564, 556, 557, 558, 559, 560, 561,
	562, 555, 0, 0, 565, 0, 0, 0, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 840, 0, 0, 1196, 1198, 0, 788, 0, 472,
	0, 0, 478, 1262, 0, 0, 0, 0, 485, 0,
	0, 0, 985, 986, 487, 528, 0, 0, 1198, 0,
	0, 0, 0, 0, 0, 24, 25, 52, 27, 28,
	1276, 0, 0, 336, 0, 336, 1225, 0, 0, 0,
	0, 0, 0, 0, 43, 0, 0, 0, 0, 29,
	48, 49, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 633, 633, 633, 633, 633, 0, 0, 0, 38,
	205, 205, 205, 54, 0, 0, 633, 1012, 0, 0,
	0, 0, 0, 0, 633, 0, 0, 1249, 0, 0,
	1254, 1255, 1256, 0, 1030, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 554, 553, 563, 564, 556, 557,
	558, 559, 560, 561, 562, 555, 0, 0, 565, 0,
	1329, 1330, 1331, 1332, 1333, 627, 0, 636, 1336, 1337,
	0, 0, 0, 0, 31, 32, 34, 33, 36, 0,
	50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 37, 44, 45, 0, 0, 46, 47, 35,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 1309,
	0, 0, 0, 39, 40, 0, 41, 42, 0, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 205, 0, 0, 0, 0, 205, 0, 0, 205,
	0, 0, 205, 0, 0, 1147, 734, 0, 0, 0,
	1343, 1344, 0, 1345, 0, 0, 205, 0, 1309, 0,
	1309, 1309, 1309, 0, 0, 0, 1225, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 0, 0, 53, 0,
	0, 0, 0, 1309, 0, 716, 717, 0, 0, 0,
	0, 724, 0, 0, 325, 1182, 205, 730, 0, 0,
	0, 1451, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 741, 0, 0, 0, 0, 0, 0, 0, 1401,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 336, 0, 0, 0, 0, 0, 1216, 0, 0,
	0, 0, 0, 0, 0, 0, 840, 258, 0, 1420,
	0, 772, 258, 258, 0, 0, 258, 258, 258, 0,
	0, 0, 841, 0, 0, 0, 0, 0, 1426, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 258, 258, 258, 0, 205, 217, 0, 0,
	0, 1309, 0, 0, 205, 874, 0, 0, 205, 205,
	0, 0, 205, 882, 734, 549, 0, 552, 0, 0,
	0, 227, 0, 566, 567, 568, 569, 570, 571, 572,
	0, 550, 551, 548, 554, 553, 563, 564, 556, 557,
	558, 559, 560, 561, 562, 555, 0, 0, 565, 0,
	0, 852, 0, 0, 0, 0, 0, 0, 0, 1281,
	0, 0, 0, 0, 879, 0, 0, 0, 0, 590,
	0, 0, 210, 0, 0, 0, 0, 1296, 0, 213,
	1297, 1275, 205, 1299, 0, 0, 0, 221, 216, 205,
	205, 205, 205, 205, 0, 205, 205, 0, 0, 205,
	554, 553, 563, 564, 556, 557, 558, 559, 560, 561,
	562, 555, 0, 0, 565, 0, 205, 0, 980, 981,
	219, 0, 0, 205, 0, 0, 226, 0, 734, 0,
	0, 0, 1274, 0, 0, 0, 0, 945, 0, 0,
	258, 0, 0, 0, 965, 966, 967, 968, 969, 0,
	972, 973, 0, 211, 974, 554, 553, 563, 564, 556,
	557, 558, 559, 560, 561, 562, 555, 0, 0, 565,
	0, 976, 0, 0, 0, 0, 0, 0, 983, 0,
	223, 214, 0, 224, 225, 230, 0, 258, 0, 215,
	218, 0, 212, 229, 228, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 258, 554, 553, 563, 564,
	556, 557, 558, 559, 560, 561, 562, 555, 0, 0,
	565, 0, 0, 841, 205, 205, 205, 205, 205, 0,
	0, 0, 0, 1157, 0, 0, 1062, 0, 0, 205,
	0, 0, 0, 874, 0, 0, 0, 205, 1007, 0,
	0, 1412, 590, 554, 553, 563, 564, 556, 557, 558,
	559, 560, 561, 562, 555, 0, 0, 565, 554, 553,
	563, 564, 556, 557, 558, 559, 560, 561, 562, 555,
	0, 0, 565, 553, 563, 564, 556, 557, 558, 559,
	560, 561, 562, 555, 0, 0, 565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	205, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 258, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 734, 0, 0, 0, 0, 0, 0, 0,
	0, 841, 0, 0, 0, 1150, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 0, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 205, 121, 0, 123, 0, 0, 161,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 205, 0, 0, 0, 0, 0, 0, 80, 0,
	0, 0, 0, 205, 0, 0, 0, 97, 0, 0,
	0, 0, 205, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 554, 553, 563, 564, 556, 557,
	558, 559, 560, 561, 562, 555, 1247, 0, 565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1257, 0,
	841, 0, 110, 0, 0, 0, 208, 0, 0, 0,
	0, 147, 0, 164, 112, 120, 94, 83, 90, 0,
	111, 138, 152, 156, 0, 0, 0, 100, 0, 154,
	142, 177, 0, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 84, 165, 175, 98, 157,
	86, 173, 163, 130, 116, 117, 85, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 91, 182, 88,
	92, 181, 137, 168, 174, 131, 128, 87, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 0, 0, 162, 179, 192, 95, 0, 167,
	186, 187, 0, 874, 96, 109, 105, 144, 136, 93,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 0, 0, 0, 205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	82, 89, 122, 189, 149, 107, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1373,
	0, 0, 0, 0, 0, 0, 841, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 446, 434,
	205, 391, 449, 364, 381, 457, 382, 385, 422, 349,
	404, 140, 379, 0, 369, 344, 375, 345, 366, 393,
	104, 397, 363, 436, 407, 448, 121, 455, 123, 413,
	0, 161, 132, 0, 0, 395, 438, 402, 431, 390,
	423, 354, 412, 450, 380, 420, 451, 0, 0, 0,
	80, 0, 899, 900, 0, 1422, 0, 0, 0, 97,
	0, 417, 445, 377, 419, 421, 343, 414, 0, 347,
	350, 456, 441, 372, 373, 1085, 0, 0, 0, 0,
	0, 0, 394, 403, 428, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 411, 0, 0, 0,
	351, 348, 0, 0, 392, 0, 0, 0, 353, 0,
	371, 429, 0, 341, 110, 433, 440, 389, 208, 444,
	387, 386, 447, 147, 0, 164, 112, 120, 94, 83,
	90, 0, 111, 138, 152, 156, 437, 367, 376, 100,
	374, 154, 142, 177, 410, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 84, 165, 175,
	98, 157, 86, 173, 163, 130, 116, 117, 85, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 91,
	182, 88, 92, 181, 137, 168, 174, 131, 128, 87,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 346, 0, 162, 179, 192, 95,
	362, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 93, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 358, 361, 356, 357, 405, 406, 452,
	453, 454, 430, 352, 0, 359, 360, 0, 435, 442,
	443, 409, 82, 89, 122, 189, 149, 107, 180, 342,
	355, 368, 365, 0, 0, 378, 383, 384, 396, 398,
	399, 400, 401, 408, 415, 416, 418, 424, 425, 426,
	427, 432, 439, 458, 446, 434, 0, 391, 449, 364,
	381, 457, 382, 385, 422, 349, 404, 140, 379, 0,
	369, 344, 375, 345, 366, 393, 104, 397, 363, 436,
	407, 448, 121, 455, 123, 413, 0, 161, 132, 0,
	0, 395, 438, 402, 431, 390, 423, 354, 412, 450,
	380, 420, 451, 0, 0, 0, 80, 0, 899, 900,
	0, 0, 0, 0, 0, 97, 0, 417, 445, 377,
	419, 421, 343, 414, 0, 347, 350, 456, 441, 372,
	373, 0, 0, 0, 0, 0, 0, 0, 394, 403,
	428, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 411, 0, 0, 0, 351, 348, 0, 0,
	392, 0, 0, 0, 353, 0, 371, 429, 0, 341,
	110, 433, 440, 389, 208, 444, 387, 386, 447, 147,
	0, 164, 112, 120, 94, 83, 90, 0, 111, 138,
	152, 156, 437, 367, 376, 100, 374, 154, 142, 177,
	410, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 84, 165, 175, 98, 157, 86, 173,
	163, 130, 116, 117, 85, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 91, 182, 88, 92, 181,
	137, 168, 174, 131, 128, 87, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	346, 0, 162, 179, 192, 95, 362, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 93, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 358,
	361, 356, 357, 405, 406, 452, 453, 454, 430, 352,
	0, 359, 360, 0, 435, 442, 443, 409, 82, 89,
	122, 189, 149, 107, 180, 342, 355, 368, 365, 0,
	0, 378, 383, 384, 396, 398, 399, 400, 401, 408,
	415, 416, 418, 424, 425, 426, 427, 432, 439, 458,
	446, 434, 0, 391, 449, 364, 381, 457, 382, 385,
	422, 349, 404, 140, 379, 0, 369, 344, 375, 345,
	366, 393, 104, 397, 363, 436, 407, 448, 121, 455,
	123, 413, 0, 161, 132, 0, 0, 395, 438, 402,
	431, 390, 423, 354, 412, 450, 380, 420, 451, 54,
	0, 0, 80, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 417, 445, 377, 419, 421, 343, 414,
	0, 347, 350, 456, 441, 372, 373, 0, 0, 0,
	0, 0, 0, 0, 394, 403, 428, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 411, 0,
	0, 0, 351, 348, 0, 0, 392, 0, 0, 0,
	353, 0, 371, 429, 0, 341, 110, 433, 440, 389,
	208, 444, 387, 386, 447, 147, 0, 164, 112, 120,
	94, 83, 90, 0, 111, 138, 152, 156, 437, 367,
	376, 100, 374, 154, 142, 177, 410, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 84,
	165, 175, 98, 157, 86, 173, 163, 130, 116, 117,
	85, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 91, 182, 88, 92, 181, 137, 168, 174, 131,
	128, 87, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 346, 0, 162, 179,
	192, 95, 362, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 93, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 358, 361, 356, 357, 405,
	406, 452, 453, 454, 430, 352, 0, 359, 360, 0,
	435, 442, 443, 409, 82, 89, 122, 189, 149, 107,
	180, 342, 355, 368, 365, 0, 0, 378, 383, 384,
	396, 398, 399, 400, 401, 408, 415, 416, 418, 424,
	425, 426, 427, 432, 439, 458, 446, 434, 0, 391,
	449, 364, 381, 457, 382, 385, 422, 349, 404, 140,
	379, 0, 369, 344, 375, 345, 366, 393, 104, 397,
	363, 436, 407, 448, 121, 455, 123, 413, 0, 161,
	132, 0, 0, 395, 438, 402, 431, 390, 423, 354,
	412, 450, 380, 420, 451, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 417,
	445, 377, 419, 421, 343, 414, 0, 347, 350, 456,
	441, 372, 373, 0, 0, 0, 0, 0, 0, 0,
	394, 403, 428, 388, 0, 0, 0, 0, 0, 0,
	1153, 0, 370, 0, 411, 0, 0, 0, 351, 348,
	0, 0, 392, 0, 0, 0, 353, 0, 371, 429,
	0, 341, 110, 433, 440, 389, 208, 444, 387, 386,
	447, 147, 0, 164, 112, 120, 94, 83, 90, 0,
	111, 138, 152, 156, 437, 367, 376, 100, 374, 154,
	142, 177, 410, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 84, 165, 175, 98, 157,
	86, 173, 163, 130, 116, 117, 85, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 91, 182, 88,
	92, 181, 137, 168, 174, 131, 128, 87, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 346, 0, 162, 179, 192, 95, 362, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 93,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 358, 361, 356, 357, 405, 406, 452, 453, 454,
	430, 352, 0, 359, 360, 0, 435, 442, 443, 409,
	82, 89, 122, 189, 149, 107, 180, 342, 355, 368,
	365, 0, 0, 378, 383, 384, 396, 398, 399, 400,
	401, 408, 415, 416, 418, 424, 425, 426, 427, 432,
	439, 458, 446, 434, 0, 391, 449, 364, 381, 457,
	382, 385, 422, 349, 404, 140, 379, 0, 369, 344,
	375, 345, 366, 393, 104, 397, 363, 436, 407, 448,
	121, 455, 123, 413, 0, 161, 132, 0, 0, 395,
	438, 402, 431, 390, 423, 354, 412, 450, 380, 420,
	451, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 417, 445, 377, 419, 421,
	343, 414, 0, 347, 350, 456, 441, 372, 373, 0,
	0, 0, 0, 0, 0, 0, 394, 403, 428, 388,
	0, 0, 0, 0, 0, 0, 883, 0, 370, 0,
	411, 0, 0, 0, 351, 348, 0, 0, 392, 0,
	0, 0, 353, 0, 371, 429, 0, 341, 110, 433,
	440, 389, 208, 444, 387, 386, 447, 147, 0, 164,
	112, 120, 94, 83, 90, 0, 111, 138, 152, 156,
	437, 367, 376, 100, 374, 154, 142, 177, 410, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 84, 165, 175, 98, 157, 86, 173, 163, 130,
	116, 117, 85, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 91, 182, 88, 92, 181, 137, 168,
	174, 131, 128, 87, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 346, 0,
	162, 179, 192, 95, 362, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 93, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 358, 361, 356,
	357, 405, 406, 452, 453, 454, 430, 352, 0, 359,
	360, 0, 435, 442, 443, 409, 82, 89, 122, 189,
	149, 107, 180, 342, 355, 368, 365, 0, 0, 378,
	383, 384, 396, 398, 399, 400, 401, 408, 415, 416,
	418, 424, 425, 426, 427, 432, 439, 458, 446, 434,
	0, 391, 449, 364, 381, 457, 382, 385, 422, 349,
	404, 140, 379, 0, 369, 344, 375, 345, 366, 393,
	104, 397, 363, 436, 407, 448, 121, 455, 123, 413,
	0, 161, 132, 0, 0, 395, 438, 402, 431, 390,
	423, 354, 412, 450, 380, 420, 451, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 417, 445, 377, 419, 421, 343, 414, 0, 347,
	350, 456, 441, 372, 373, 0, 0, 0, 0, 0,
	0, 0, 394, 403, 428, 388, 0, 0, 0, 0,
	0, 0, 781, 0, 370, 0, 411, 0, 0, 0,
	351, 348, 0, 0, 392, 0, 0, 0, 353, 0,
	371, 429, 0, 341, 110, 433, 440, 389, 208, 444,
	387, 386, 447, 147, 0, 164, 112, 120, 94, 83,
	90, 0, 111, 138, 152, 156, 437, 367, 376, 100,
	374, 154, 142, 177, 410, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 84, 165, 175,
	98, 157, 86, 173, 163, 130, 116, 117, 85, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 91,
	182, 88, 92, 181, 137, 168, 174, 131, 128, 87,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 346, 0, 162, 179, 192, 95,
	362, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 93, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 358, 361, 356, 357, 405, 406, 452,
	453, 454, 430, 352, 0, 359, 360, 0, 435, 442,
	443, 409, 82, 89, 122, 189, 149, 107, 180, 342,
	355, 368, 365, 0, 0, 378, 383, 384, 396, 398,
	399, 400, 401, 408, 415, 416, 418, 424, 425, 426,
	427, 432, 439, 458, 446, 434, 0, 391, 449, 364,
	381, 457, 382, 385, 422, 349, 404, 140, 379, 0,
	369, 344, 375, 345, 366, 393, 104, 397, 363, 436,
	407, 448, 121, 455, 123, 413, 0, 161, 132, 0,
	0, 395, 438, 402, 431, 390, 423, 354, 412, 450,
	380, 420, 451, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 417, 445, 377,
	419, 421, 343, 414, 0, 347, 350, 456, 441, 372,
	373, 0, 0, 0, 0, 0, 0, 0, 394, 403,
	428, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 411, 0, 0, 0, 351, 348, 0, 0,
	392, 0, 0, 0, 353, 0, 371, 429, 0, 341,
	110, 433, 440, 389, 208, 444, 387, 386, 447, 147,
	0, 164, 112, 120, 94, 83, 90, 0, 111, 138,
	152, 156, 437, 367, 376, 100, 374, 154, 142, 177,
	410, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 84, 165, 175, 98, 157, 86, 173,
	163, 130, 116, 117, 85, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 91, 182, 88, 92, 181,
	137, 168, 174, 131, 128, 87, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	346, 0, 162, 179, 192, 95, 362, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 93, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 358,
	361, 356, 357, 405, 406, 452, 453, 454, 430, 352,
	0, 359, 360, 0, 435, 442, 443, 409, 82, 89,
	122, 189, 149, 107, 180, 342, 355, 368, 365, 0,
	0, 378, 383, 384, 396, 398, 399, 400, 401, 408,
	415, 416, 418, 424, 425, 426, 427, 432, 439, 458,
	446, 434, 0, 391, 449, 364, 381, 457, 382, 385,
	422, 349, 404, 140, 379, 0, 369, 344, 375, 345,
	366, 393, 104, 397, 363, 436, 407, 448, 121, 455,
	123, 413, 0, 161, 132, 0, 0, 395, 438, 402,
	431, 390, 423, 354, 412, 450, 380, 420, 451, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 417, 445, 377, 419, 421, 343, 414,
	0, 347, 350, 456, 441, 372, 373, 0, 0, 0,
	0, 0, 0, 0, 394, 403, 428, 388, 0, 0,
	0, 0, 0, 0, 0, 0, 370, 0, 411, 0,
	0, 0, 351, 348, 0, 0, 392, 0, 0, 0,
	353, 0, 371, 429, 0, 341, 110, 433, 440, 389,
	208, 444, 387, 386, 447, 147, 0, 164, 112, 120,
	94, 83, 90, 0, 111, 138, 152, 156, 437, 367,
	376, 100, 374, 154, 142, 177, 410, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 84,
	165, 175, 98, 157, 86, 173, 163, 130, 116, 117,
	85, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 91, 182, 88, 92, 181, 137, 168, 174, 131,
	128, 87, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 346, 0, 162, 179,
	192, 95, 362, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 93, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 358, 361, 356, 357, 405,
	406, 452, 453, 454, 430, 352, 0, 359, 360, 0,
	435, 442, 443, 409, 82, 89, 122, 189, 149, 107,
	180, 342, 355, 368, 365, 0, 0, 378, 383, 384,
	396, 398, 399, 400, 401, 408, 415, 416, 418, 424,
	425, 426, 427, 432, 439, 458, 446, 434, 0, 391,
	449, 364, 381, 457, 382, 385, 422, 349, 404, 140,
	379, 0, 369, 344, 375, 345, 366, 393, 104, 397,
	363, 436, 407, 448, 121, 455, 123, 413, 0, 161,
	132, 0, 0, 395, 438, 402, 431, 390, 423, 354,
	412, 450, 380, 420, 451, 0, 0, 0, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 417,
	445, 377, 419, 421, 343, 414, 0, 347, 350, 456,
	441, 372, 373, 0, 0, 0, 0, 0, 0, 0,
	394, 403, 428, 388, 0, 0, 0, 0, 0, 0,
	0, 0, 370, 0, 411, 0, 0, 0, 351, 348,
	0, 0, 392, 0, 0, 0, 353, 0, 371, 429,
	0, 341, 110, 433, 440, 389, 208, 444, 387, 386,
	447, 147, 0, 164, 112, 120, 94, 83, 90, 0,
	111, 138, 152, 156, 437, 367, 376, 100, 374, 154,
	142, 177, 410, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 84, 165, 175, 98, 157,
	86, 173, 163, 130, 116, 117, 85, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 91, 182, 88,
	339, 181, 137, 168, 174, 131, 128, 87, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 346, 0, 162, 179, 192, 95, 362, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 340, 338,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 358, 361, 356, 357, 405, 406, 452, 453, 454,
	430, 352, 0, 359, 360, 0, 435, 442, 443, 409,
	82, 89, 122, 189, 149, 107, 180, 342, 355, 368,
	365, 0, 0, 378, 383, 384, 396, 398, 399, 400,
	401, 408, 415, 416, 418, 424, 425, 426, 427, 432,
	439, 458, 446, 434, 0, 391, 449, 364, 381, 457,
	382, 385, 422, 349, 404, 140, 379, 0, 369, 344,
	375, 345, 366, 393, 104, 397, 363, 436, 407, 448,
	121, 455, 123, 413, 0, 161, 132, 0, 0, 395,
	438, 402, 431, 390, 423, 354, 412, 450, 380, 420,
	451, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 417, 445, 377, 419, 421,
	343, 414, 0, 347, 350, 456, 441, 372, 373, 0,
	0, 0, 0, 0, 0, 0, 394, 403, 428, 388,
	0, 0, 0, 0, 0, 0, 0, 0, 370, 0,
	411, 0, 0, 0, 351, 348, 0, 0, 392, 0,
	0, 0, 353, 0, 371, 429, 0, 341, 110, 433,
	440, 389, 208, 444, 387, 386, 447, 147, 0, 164,
	112, 120, 94, 83, 90, 0, 111, 138, 152, 156,
	437, 367, 376, 100, 374, 154, 142, 177, 410, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 84, 165, 175, 98, 157, 86, 173, 163, 130,
	116, 117, 85, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 91, 182, 88, 92, 181, 137, 168,
	174, 131, 128, 87, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 346, 0,
	162, 179, 192, 95, 362, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 93, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 358, 361, 356,
	357, 405, 406, 452, 453, 454, 430, 352, 0, 359,
	360, 0, 435, 442, 443, 409, 82, 89, 122, 189,
	149, 107, 180, 342, 355, 368, 365, 0, 0, 378,
	383, 384, 396, 398, 399, 400, 401, 408, 415, 416,
	418, 424, 425, 426, 427, 432, 439, 458, 446, 434,
	0, 391, 449, 364, 381, 457, 382, 385, 422, 349,
	404, 140, 379, 0, 369, 344, 375, 345, 366, 393,
	104, 397, 363, 436, 407, 448, 121, 455, 123, 413,
	0, 161, 132, 0, 0, 395, 438, 402, 431, 390,
	423, 354, 412, 450, 380, 420, 451, 0, 0, 0,
	80, 0, 0, 0, 0, 0, 0, 0, 0, 97,
	0, 417, 445, 377, 419, 421, 343, 414, 0, 347,
	350, 456, 441, 372, 373, 0, 0, 0, 0, 0,
	0, 0, 394, 403, 428, 388, 0, 0, 0, 0,
	0, 0, 0, 0, 370, 0, 411, 0, 0, 0,
	351, 348, 0, 0, 392, 0, 0, 0, 353, 0,
	371, 429, 0, 341, 110, 433, 440, 389, 208, 444,
	387, 386, 447, 147, 0, 164, 112, 120, 94, 83,
	90, 0, 111, 138, 152, 156, 437, 367, 376, 100,
	374, 154, 142, 177, 410, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 84, 165, 647,
	98, 157, 86, 173, 163, 130, 116, 117, 85, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 91,
	182, 88, 339, 181, 137, 168, 174, 131, 128, 87,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 346, 0, 162, 179, 192, 95,
	362, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	340, 338, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 358, 361, 356, 357, 405, 406, 452,
	453, 454, 430, 352, 0, 359, 360, 0, 435, 442,
	443, 409, 82, 89, 122, 189, 149, 107, 180, 342,
	355, 368, 365, 0, 0, 378, 383, 384, 396, 398,
	399, 400, 401, 408, 415, 416, 418, 424, 425, 426,
	427, 432, 439, 458, 446, 434, 0, 391, 449, 364,
	381, 457, 382, 385, 422, 349, 404, 140, 379, 0,
	369, 344, 375, 345, 366, 393, 104, 397, 363, 436,
	407, 448, 121, 455, 123, 413, 0, 161, 132, 0,
	0, 395, 438, 402, 431, 390, 423, 354, 412, 450,
	380, 420, 451, 0, 0, 0, 80, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 417, 445, 377,
	419, 421, 343, 414, 0, 347, 350, 456, 441, 372,
	373, 0, 0, 0, 0, 0, 0, 0, 394, 403,
	428, 388, 0, 0, 0, 0, 0, 0, 0, 0,
	370, 0, 411, 0, 0, 0, 351, 348, 0, 0,
	392, 0, 0, 0, 353, 0, 371, 429, 0, 341,
	110, 433, 440, 389, 208, 444, 387, 386, 447, 147,
	0, 164, 112, 120, 94, 83, 90, 0, 111, 138,
	152, 156, 437, 367, 376, 100, 374, 154, 142, 177,
	410, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 84, 165, 330, 98, 157, 86, 173,
	163, 130, 116, 117, 85, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 91, 182, 88, 339, 181,
	137, 168, 174, 131, 128, 87, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	346, 0, 162, 179, 192, 95, 362, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 340, 338, 333, 332,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 358,
	361, 356, 357, 405, 406, 452, 453, 454, 430, 352,
	0, 359, 360, 0, 435, 442, 443, 409, 82, 89,
	122, 189, 149, 107, 180, 342, 355, 368, 365, 0,
	0, 378, 383, 384, 396, 398, 399, 400, 401, 408,
	415, 416, 418, 424, 425, 426, 427, 432, 439, 458,
	140, 0, 0, 0, 0, 265, 0, 0, 0, 104,
	0, 262, 0, 0, 0, 121, 305, 123, 0, 0,
	161, 132, 0, 0, 0, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 890, 0, 54, 0, 0, 263,
	284, 283, 286, 287, 288, 289, 0, 0, 97, 285,
	290, 291, 292, 891, 0, 0, 260, 277, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 0, 0, 0, 0, 318, 0, 276, 0, 0,
	271, 272, 273, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 208, 0, 0,
	316, 0, 147, 0, 164, 112, 120, 94, 83, 90,
	0, 111, 138, 152, 156, 0, 0, 0, 100, 0,
	154, 142, 177, 0, 143, 153, 124, 169, 148, 176,
	184, 185, 166, 183, 188, 158, 84, 165, 175, 98,
	157, 86, 173, 163, 130, 116, 117, 85, 0, 151,
	103, 108, 102, 139, 170, 171, 101, 191, 91, 182,
	88, 92, 181, 137, 168, 174, 131, 128, 87, 172,
	129, 127, 119, 106, 113, 145, 126, 146, 114, 134,
	133, 135, 0, 0, 0, 162, 179, 192, 95, 0,
	167, 186, 187, 0, 0, 96, 109, 105, 144, 136,
	93, 115, 159, 118, 125, 150, 190, 141, 155, 99,
	178, 160, 306, 317, 312, 313, 310, 311, 309, 308,
	307, 319, 298, 299, 300, 301, 303, 0, 314, 315,
	302, 82, 89, 122, 189, 149, 107, 180, 140, 0,
	0, 817, 0, 265, 0, 0, 0, 104, 0, 262,
	0, 0, 0, 121, 305, 123, 0, 0, 161, 132,
	0, 0, 0, 0, 296, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 263, 284, 283,
	286, 287, 288, 289, 0, 0, 97, 285, 290, 291,
	292, 0, 0, 0, 260, 277, 0, 304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 275, 256,
	0, 0, 0, 318, 0, 276, 0, 0, 271, 272,
	273, 278, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 208, 0, 0, 316, 0,
	147, 0, 164, 112, 120, 94, 83, 90, 0, 111,
	138, 152, 156, 0, 0, 0, 100, 0, 154, 142,
	177, 0, 143, 153, 124, 169, 148, 176, 184, 185,
	166, 183, 188, 158, 84, 165, 175, 98, 157, 86,
	173, 163, 130, 116, 117, 85, 0, 151, 103, 108,
	102, 139, 170, 171, 101, 191, 91, 182, 88, 92,
	181, 137, 168, 174, 131, 128, 87, 172, 129, 127,
	119, 106, 113, 145, 126, 146, 114, 134, 133, 135,
	0, 0, 0, 162, 179, 192, 95, 0, 167, 186,
	187, 0, 0, 96, 109, 105, 144, 136, 93, 115,
	159, 118, 125, 150, 190, 141, 155, 99, 178, 160,
	306, 317, 312, 313, 310, 311, 309, 308, 307, 319,
	298, 299, 300, 301, 303, 0, 314, 315, 302, 82,
	89, 122, 189, 149, 107, 180, 140, 0, 0, 0,
	0, 265, 0, 0, 0, 104, 0, 262, 0, 0,
	0, 121, 305, 123, 0, 0, 161, 132, 0, 0,
	0, 0, 296, 297, 0, 0, 0, 0, 0, 0,
	0, 0, 54, 0, 520, 263, 284, 283, 286, 287,
	288, 289, 0, 0, 97, 285, 290, 291, 292, 0,
	0, 0, 260, 277, 0, 304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 275, 0, 0, 0,
	0, 318, 0, 276, 0, 0, 271, 272, 273, 278,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 208, 0, 0, 316, 0, 147, 0,
	164, 112, 120, 94, 83, 90, 0, 111, 138, 152,
	156, 0, 0, 0, 100, 0, 154, 142, 177, 0,
	143, 153, 124, 169, 148, 176, 184, 185, 166, 183,
	188, 158, 84, 165, 175, 98, 157, 86, 173, 163,
	130, 116, 117, 85, 0, 151, 103, 108, 102, 139,
	170, 171, 101, 191, 91, 182, 88, 92, 181, 137,
	168, 174, 131, 128, 87, 172, 129, 127, 119, 106,
	113, 145, 126, 146, 114, 134, 133, 135, 0, 0,
	0, 162, 179, 192, 95, 0, 167, 186, 187, 0,
	0, 96, 109, 105, 144, 136, 93, 115, 159, 118,
	125, 150, 190, 141, 155, 99, 178, 160, 306, 317,
	312, 313, 310, 311, 309, 308, 307, 319, 298, 299,
	300, 301, 303, 0, 314, 315, 302, 82, 89, 122,
	189, 149, 107, 180, 140, 0, 0, 0, 0, 265,
	0, 0, 0, 104, 0, 262, 0, 0, 0, 121,
	305, 123, 0, 0, 161, 132, 0, 0, 0, 0,
	296, 297, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 263, 284, 283, 286, 287, 288, 289,
	0, 0, 97, 285, 290, 291, 292, 0, 0, 0,
	260, 277, 0, 304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 275, 256, 0, 0, 0, 318,
	0, 276, 0, 0, 271, 272, 273, 278, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 208, 0, 0, 316, 0, 147, 0, 164, 112,
	120, 94, 83, 90, 0, 111, 138, 152, 156, 0,
	0, 0, 100, 0, 154, 142, 177, 0, 143, 153,
	124, 169, 148, 176, 184, 185, 166, 183, 188, 158,
	84, 165, 175, 98, 157, 86, 173, 163, 130, 116,
	117, 85, 0, 151, 103, 108, 102, 139, 170, 171,
	101, 191, 91, 182, 88, 92, 181, 137, 168, 174,
	131, 128, 87, 172, 129, 127, 119, 106, 113, 145,
	126, 146, 114, 134, 133, 135, 0, 0, 0, 162,
	179, 192, 95, 0, 167, 186, 187, 0, 0, 96,
	109, 105, 144, 136, 93, 115, 159, 118, 125, 150,
	190, 141, 155, 99, 178, 160, 306, 317, 312, 313,
	310, 311, 309, 308, 307, 319, 298, 299, 300, 301,
	303, 0, 314, 315, 302, 82, 89, 122, 189, 149,
	107, 180, 140, 0, 0, 0, 0, 265, 0, 0,
	0, 104, 0, 262, 0, 0, 0, 121, 305, 123,
	0, 0, 161, 132, 0, 0, 0, 0, 296, 297,
	0, 0, 0, 0, 0, 0, 0, 0, 54, 0,
	0, 263, 284, 832, 286, 287, 288, 289, 0, 0,
	97, 285, 290, 291, 292, 0, 0, 0, 260, 277,
	0, 304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 275, 256, 0, 0, 0, 318, 0, 276,
	0, 0, 271, 272, 273, 278, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 208,
	0, 0, 316, 0, 147, 0, 164, 112, 120, 94,
	83, 90, 0, 111, 138, 152, 156, 0, 0, 0,
	100, 0, 154, 142, 177, 0, 143, 153, 124, 169,
	148, 176, 184, 185, 166, 183, 188, 158, 84, 165,
	175, 98, 157, 86, 173, 163, 130, 116, 117, 85,
	0, 151, 103, 108, 102, 139, 170, 171, 101, 191,
	91, 182, 88, 92, 181, 137, 168, 174, 131, 128,
	87, 172, 129, 127, 119, 106, 113, 145, 126, 146,
	114, 134, 133, 135, 0, 0, 0, 162, 179, 192,
	95, 0, 167, 186, 187, 0, 0, 96, 109, 105,
	144, 136, 93, 115, 159, 118, 125, 150, 190, 141,
	155, 99, 178, 160, 306, 317, 312, 313, 310, 311,
	309, 308, 307, 319, 298, 299, 300, 301, 303, 0,
	314, 315, 302, 82, 89, 122, 189, 149, 107, 180,
	140, 0, 0, 0, 0, 265, 0, 0, 0, 104,
	0, 262, 0, 0, 0, 121, 305, 123, 0, 0,
	161, 132, 0, 0, 0, 0, 296, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 263,
	284, 829, 286, 287, 288, 289, 0, 0, 97, 285,
	290, 291, 292, 0, 0, 0, 260, 277, 0, 304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	275, 256, 0, 0, 0, 318, 0, 276, 0, 0,
	271, 272, 273, 278, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 208, 0, 0,
	316, 0, 147, 0, 164, 112, 120, 94, 83, 90,
	0, 111, 138, 152, 156, 0, 0, 0, 100, 0,
	154, 142, 177, 0, 143, 153, 124, 169, 148, 176,
	184, 185, 166, 183, 188, 158, 84, 165, 175, 98,
	157, 86, 173, 163, 130, 116, 117, 85, 0, 151,
	103, 108, 102, 139, 170, 171, 101, 191, 91, 182,
	88, 92, 181, 137, 168, 174, 131, 128, 87, 172,
	129, 127, 119, 106, 113, 145, 126, 146, 114, 134,
	133, 135, 0, 0, 0, 162, 179, 192, 95, 0,
	167, 186, 187, 0, 0, 96, 109, 105, 144, 136,
	93, 115, 159, 118, 125, 150, 190, 141, 155, 99,
	178, 160, 306, 317, 312, 313, 310, 311, 309, 308,
	307, 319, 298, 299, 300, 301, 303, 24, 314, 315,
	302, 82, 89, 122, 189, 149, 107, 180, 0, 140,
	0, 0, 0, 0, 265, 0, 0, 0, 104, 0,
	262, 0, 0, 0, 121, 305, 123, 0, 0, 161,
	132, 0, 0, 0, 0, 296, 297, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 263, 284,
	283, 286, 287, 288, 289, 0, 0, 97, 285, 290,
	291, 292, 0, 0, 0, 260, 277, 0, 304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 275,
	0, 0, 0, 0, 318, 0, 276, 0, 0, 271,
	272, 273, 278, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 208, 0, 0, 316,
	0, 147, 0, 164, 112, 120, 94, 83, 90, 0,
	111, 138, 152, 156, 0, 0, 0, 100, 0, 154,
	142, 177, 0, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 84, 165, 175, 98, 157,
	86, 173, 163, 130, 116, 117, 85, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 91, 182, 88,
	92, 181, 137, 168, 174, 131, 128, 87, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 0, 0, 162, 179, 192, 95, 0, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 93,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 306, 317, 312, 313, 310, 311, 309, 308, 307,
	319, 298, 299, 300, 301, 303, 0, 314, 315, 302,
	82, 89, 122, 189, 149, 107, 180, 140, 0, 0,
	0, 0, 265, 0, 0, 0, 104, 0, 262, 0,
	0, 0, 121, 305, 123, 0, 0, 161, 132, 0,
	0, 0, 0, 296, 297, 0, 0, 0, 0, 0,
	0, 0, 0, 54, 0, 0, 263, 284, 283, 286,
	287, 288, 289, 0, 0, 97, 285, 290, 291, 292,
	0, 0, 0, 260, 277, 0, 304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 275, 0, 0,
	0, 0, 318, 0, 276, 0, 0, 271, 272, 273,
	278, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 0, 0, 208, 0, 0, 316, 0, 147,
	0, 164, 112, 120, 94, 83, 90, 0, 111, 138,
	152, 156, 0, 0, 0, 100, 0, 154, 142, 177,
	0, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 84, 165, 175, 98, 157, 86, 173,
	163, 130, 116, 117, 85, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 91, 182, 88, 92, 181,
	137, 168, 174, 131, 128, 87, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	0, 0, 162, 179, 192, 95, 0, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 93, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 306,
	317, 312, 313, 310, 311, 309, 308, 307, 319, 298,
	299, 300, 301, 303, 0, 314, 315, 302, 82, 89,
	122, 189, 149, 107, 180, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 0,
	121, 305, 123, 0, 0, 161, 132, 0, 0, 0,
	0, 296, 297, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 263, 284, 283, 286, 287, 288,
	289, 0, 0, 97, 285, 290, 291, 292, 0, 0,
	0, 0, 277, 0, 304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 275, 0, 0, 0, 0,
	318, 0, 276, 0, 0, 271, 272, 273, 278, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 208, 0, 0, 316, 0, 147, 0, 164,
	112, 120, 94, 83, 90, 0, 111, 138, 152, 156,
	0, 0, 0, 100, 0, 154, 142, 177, 1452, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 84, 165, 175, 98, 157, 86, 173, 163, 130,
	116, 117, 85, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 91, 182, 88, 92, 181, 137, 168,
	174, 131, 128, 87, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 0, 0,
	162, 179, 192, 95, 0, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 93, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 306, 317, 312,
	313, 310, 311, 309, 308, 307, 319, 298, 299, 300,
	301, 303, 0, 314, 315, 302, 82, 89, 122, 189,
	149, 107, 180, 140, 0, 0, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 0, 121, 305,
	123, 0, 0, 161, 132, 0, 0, 0, 0, 296,
	297, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	0, 520, 263, 284, 283, 286, 287, 288, 289, 0,
	0, 97, 285, 290, 291, 292, 0, 0, 0, 0,
	277, 0, 304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 275, 0, 0, 0, 0, 318, 0,
	276, 0, 0, 271, 272, 273, 278, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	208, 0, 0, 316, 0, 147, 0, 164, 112, 120,
	94, 83, 90, 0, 111, 138, 152, 156, 0, 0,
	0, 100, 0, 154, 142, 177, 0, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 84,
	165, 175, 98, 157, 86, 173, 163, 130, 116, 117,
	85, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 91, 182, 88, 92, 181, 137, 168, 174, 131,
	128, 87, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 0, 0, 162, 179,
	192, 95, 0, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 93, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 306, 317, 312, 313, 310,
	311, 309, 308, 307, 319, 298, 299, 300, 301, 303,
	0, 314, 315, 302, 82, 89, 122, 189, 149, 107,
	180, 140, 0, 0, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 0, 121, 305, 123, 0,
	0, 161, 132, 0, 0, 0, 0, 296, 297, 0,
	0, 0, 0, 0, 0, 0, 0, 54, 0, 0,
	263, 284, 283, 286, 287, 288, 289, 0, 0, 97,
	285, 290, 291, 292, 0, 0, 0, 0, 277, 0,
	304, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 275, 0, 0, 0, 0, 318, 0, 276, 0,
	0, 271, 272, 273, 278, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 0, 208, 0,
	0, 316, 0, 147, 0, 164, 112, 120, 94, 83,
	90, 0, 111, 138, 152, 156, 0, 0, 0, 100,
	0, 154, 142, 177, 0, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 84, 165, 175,
	98, 157, 86, 173, 163, 130, 116, 117, 85, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 91,
	182, 88, 92, 181, 137, 168, 174, 131, 128, 87,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 0, 0, 162, 179, 192, 95,
	0, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 93, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 306, 317, 312, 313, 310, 311, 309,
	308, 307, 319, 298, 299, 300, 301, 303, 0, 314,
	315, 302, 82, 89, 122, 189, 149, 107, 180, 140,
	0, 0, 0, 542, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 0, 121, 0, 123, 0, 0, 161,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 80, 0,
	544, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 539, 538, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	540, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 208, 0, 0, 0,
	0, 147, 0, 164, 112, 120, 94, 83, 90, 0,
	111, 138, 152, 156, 0, 0, 0, 100, 0, 154,
	142, 177, 0, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 84, 165, 175, 98, 157,
	86, 173, 163, 130, 116, 117, 85, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 91, 182, 88,
	92, 181, 137, 168, 174, 131, 128, 87, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 0, 0, 162, 179, 192, 95, 0, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 93,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	82, 89, 122, 189, 149, 107, 180, 104, 0, 0,
	0, 0, 0, 121, 0, 123, 0, 0, 161, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 80, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 76, 77, 0, 73, 0, 0, 0, 78,
	147, 0, 164, 112, 120, 94, 83, 90, 0, 111,
	138, 152, 156, 0, 0, 0, 100, 0, 154, 142,
	177, 0, 143, 153, 124, 169, 148, 176, 184, 185,
	166, 183, 188, 158, 84, 165, 175, 98, 157, 86,
	173, 163, 130, 116, 117, 85, 0, 151, 103, 108,
	102, 139, 170, 171, 101, 191, 91, 182, 88, 92,
	181, 137, 168, 174, 131, 128, 87, 172, 129, 127,
	119, 106, 113, 145, 126, 146, 114, 134, 133, 135,
	0, 0, 0, 162, 179, 192, 95, 0, 167, 186,
	187, 0, 0, 96, 109, 105, 144, 136, 93, 115,
	159, 118, 125, 150, 190, 141, 155, 99, 178, 160,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 82,
	89, 122, 189, 149, 107, 180, 140, 0, 0, 0,
	873, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	0, 121, 0, 123, 0, 0, 161, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 875, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 208, 0, 0, 0, 0, 147, 0,
	164, 112, 120, 94, 83, 90, 0, 111, 138, 152,
	156, 0, 0, 0, 100, 0, 154, 142, 177, 0,
	143, 153, 124, 169, 148, 176, 184, 185, 166, 183,
	188, 158, 84, 165, 175, 98, 157, 86, 173, 163,
	130, 116, 117, 85, 0, 151, 103, 108, 102, 139,
	170, 171, 101, 191, 91, 182, 88, 92, 181, 137,
	168, 174, 131, 128, 87, 172, 129, 127, 119, 106,
	113, 145, 126, 146, 114, 134, 133, 135, 0, 0,
	0, 162, 179, 192, 95, 0, 167, 186, 187, 0,
	0, 96, 109, 105, 144, 136, 93, 115, 159, 118,
	125, 150, 190, 141, 155, 99, 178, 160, 0, 0,
	0, 0, 0, 24, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 82, 89, 122,
	189, 149, 107, 180, 104, 0, 0, 0, 0, 0,
	121, 0, 123, 0, 0, 161, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 54, 0, 0, 80, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	0, 0, 208, 0, 0, 0, 0, 147, 0, 164,
	112, 120, 94, 83, 90, 0, 111, 138, 152, 156,
	0, 0, 0, 100, 0, 154, 142, 177, 0, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 84, 165, 175, 98, 157, 86, 173, 163, 130,
	116, 117, 85, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 91, 182, 88, 92, 181, 137, 168,
	174, 131, 128, 87, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 0, 0,
	162, 179, 192, 95, 0, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 93, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 0, 0, 0,
	0, 0, 24, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 82, 89, 122, 189,
	149, 107, 180, 104, 0, 0, 0, 0, 0, 121,
	0, 123, 0, 0, 161, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	54, 0, 0, 206, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 208, 0, 0, 0, 0, 147, 0, 164, 112,
	120, 94, 83, 90, 0, 111, 138, 152, 156, 0,
	0, 0, 100, 0, 154, 142, 177, 0, 143, 153,
	124, 169, 148, 176, 184, 185, 166, 183, 188, 158,
	84, 165, 175, 98, 157, 86, 173, 163, 130, 116,
	117, 85, 0, 151, 103, 108, 102, 139, 170, 171,
	101, 191, 91, 182, 88, 92, 181, 137, 168, 174,
	131, 128, 87, 172, 129, 127, 119, 106, 113, 145,
	126, 146, 114, 134, 133, 135, 0, 0, 0, 162,
	179, 192, 95, 0, 167, 186, 187, 0, 0, 96,
	109, 105, 144, 136, 93, 115, 159, 118, 125, 150,
	190, 141, 155, 99, 178, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 82, 89, 122, 189, 149,
	107, 180, 140, 0, 0, 0, 873, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 0, 121, 0, 123,
	0, 0, 161, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 206, 0, 875, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 208,
	0, 0, 0, 0, 147, 0, 164, 112, 120, 94,
	83, 90, 0, 111, 138, 152, 156, 0, 0, 0,
	100, 0, 154, 142, 177, 0, 871, 153, 124, 169,
	148, 176, 184, 185, 166, 183, 188, 158, 84, 165,
	175, 98, 157, 86, 173, 163, 130, 116, 117, 85,
	0, 151, 103, 108, 102, 139, 170, 171, 101, 191,
	91, 182, 88, 92, 181, 137, 168, 174, 131, 128,
	87, 172, 129, 127, 119, 106, 113, 145, 126, 146,
	114, 134, 133, 135, 0, 0, 0, 162, 179, 192,
	95, 0, 167, 186, 187, 0, 0, 96, 109, 105,
	144, 136, 93, 115, 159, 118, 125, 150, 190, 141,
	155, 99, 178, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 140, 0, 82, 89, 122, 189, 149, 107, 180,
	104, 0, 0, 0, 0, 0, 121, 0, 123, 0,
	0, 161, 132, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	80, 0, 0, 768, 0, 0, 769, 0, 0, 97,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 0, 0, 0, 208, 0,
	0, 0, 0, 147, 0, 164, 112, 120, 94, 83,
	90, 0, 111, 138, 152, 156, 0, 0, 0, 100,
	0, 154, 142, 177, 0, 143, 153, 124, 169, 148,
	176, 184, 185, 166, 183, 188, 158, 84, 165, 175,
	98, 157, 86, 173, 163, 130, 116, 117, 85, 0,
	151, 103, 108, 102, 139, 170, 171, 101, 191, 91,
	182, 88, 92, 181, 137, 168, 174, 131, 128, 87,
	172, 129, 127, 119, 106, 113, 145, 126, 146, 114,
	134, 133, 135, 0, 0, 0, 162, 179, 192, 95,
	0, 167, 186, 187, 0, 0, 96, 109, 105, 144,
	136, 93, 115, 159, 118, 125, 150, 190, 141, 155,
	99, 178, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 82, 89, 122, 189, 149, 107, 180, 104,
	0, 656, 0, 0, 0, 121, 0, 123, 0, 0,
	161, 132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 80,
	0, 655, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 0, 208, 0, 0,
	0, 0, 147, 0, 164, 112, 120, 94, 83, 90,
	0, 111, 138, 152, 156, 0, 0, 0, 100, 0,
	154, 142, 177, 0, 143, 153, 124, 169, 148, 176,
	184, 185, 166, 183, 188, 158, 84, 165, 175, 98,
	157, 86, 173, 163, 130, 116, 117, 85, 0, 151,
	103, 108, 102, 139, 170, 171, 101, 191, 91, 182,
	88, 92, 181, 137, 168, 174, 131, 128, 87, 172,
	129, 127, 119, 106, 113, 145, 126, 146, 114, 134,
	133, 135, 0, 0, 0, 162, 179, 192, 95, 0,
	167, 186, 187, 0, 0, 96, 109, 105, 144, 136,
	93, 115, 159, 118, 125, 150, 190, 141, 155, 99,
	178, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 140,
	0, 82, 89, 122, 189, 149, 107, 180, 104, 0,
	0, 0, 0, 0, 121, 0, 123, 0, 0, 161,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 110, 0, 0, 0, 208, 0, 0, 0,
	0, 147, 0, 164, 112, 120, 94, 83, 90, 0,
	111, 138, 152, 156, 0, 0, 0, 100, 0, 154,
	142, 177, 0, 143, 153, 124, 169, 148, 176, 184,
	185, 166, 183, 188, 158, 84, 165, 175, 98, 157,
	86, 173, 163, 130, 116, 117, 85, 0, 151, 103,
	108, 102, 139, 170, 171, 101, 191, 91, 182, 88,
	92, 181, 137, 168, 174, 131, 128, 87, 172, 129,
	127, 119, 106, 113, 145, 126, 146, 114, 134, 133,
	135, 0, 0, 0, 162, 179, 192, 95, 0, 167,
	186, 187, 0, 0, 96, 109, 105, 144, 136, 93,
	115, 159, 118, 125, 150, 190, 141, 155, 99, 178,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 140, 0,
	82, 89, 122, 189, 149, 107, 180, 104, 0, 0,
	0, 0, 0, 121, 0, 123, 0, 0, 161, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 206, 0, 875,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 110, 0, 0, 0, 208, 0, 0, 0, 0,
	147, 0, 164, 112, 120, 94, 83, 90, 0, 111,
	138, 152, 156, 0, 0, 0, 100, 0, 154, 142,
	177, 0, 143, 153, 124, 169, 148, 176, 184, 185,
	166, 183, 188, 158, 84, 165, 175, 98, 157, 86,
	173, 163, 130, 116, 117, 85, 0, 151, 103, 108,
	102, 139, 170, 171, 101, 191, 91, 182, 88, 92,
	181, 137, 168, 174, 131, 128, 87, 172, 129, 127,
	119, 106, 113, 145, 126, 146, 114, 134, 133, 135,
	0, 0, 0, 162, 179, 192, 95, 0, 167, 186,
	187, 0, 0, 96, 109, 105, 144, 136, 93, 115,
	159, 118, 125, 150, 190, 141, 155, 99, 178, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 0, 82,
	89, 122, 189, 149, 107, 180, 104, 0, 0, 0,
	0, 0, 121, 0, 123, 0, 0, 161, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 80, 0, 544, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 0, 0, 208, 0, 0, 0, 0, 147,
	0, 164, 112, 120, 94, 83, 90, 0, 111, 138,
	152, 156, 0, 0, 0, 100, 0, 154, 142, 177,
	0, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 84, 165, 175, 98, 157, 86, 173,
	163, 130, 116, 117, 85, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 91, 182, 88, 92, 181,
	137, 168, 174, 131, 128, 87, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	0, 0, 162, 179, 192, 95, 0, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 93, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 140, 82, 89,
	122, 189, 149, 107, 180, 626, 104, 0, 0, 0,
	0, 0, 121, 0, 123, 0, 0, 161, 132, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 206, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 0, 0, 208, 0, 0, 0, 0, 147,
	0, 164, 112, 120, 94, 83, 90, 0, 111, 138,
	152, 156, 0, 0, 0, 100, 0, 154, 142, 177,
	0, 143, 153, 124, 169, 148, 176, 184, 185, 166,
	183, 188, 158, 84, 165, 175, 98, 157, 86, 173,
	163, 130, 116, 117, 85, 0, 151, 103, 108, 102,
	139, 170, 171, 101, 191, 91, 182, 88, 92, 181,
	137, 168, 174, 131, 128, 87, 172, 129, 127, 119,
	106, 113, 145, 126, 146, 114, 134, 133, 135, 0,
	0, 0, 162, 179, 192, 95, 0, 167, 186, 187,
	0, 0, 96, 109, 105, 144, 136, 93, 115, 159,
	118, 125, 150, 190, 141, 155, 99, 178, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 322,
	0, 0, 0, 0, 0, 0, 140, 0, 82, 89,
	122, 189, 149, 107, 180, 104, 0, 0, 0, 0,
	0, 121, 0, 123, 0, 0, 161, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 110,
	0, 0, 0, 208, 0, 0, 0, 0, 147, 0,
	164, 112, 120, 94, 83, 90, 0, 111, 138, 152,
	156, 0, 0, 0, 100, 0, 154, 142, 177, 0,
	143, 153, 124, 169, 148, 176, 184, 185, 166, 183,
	188, 158, 84, 165, 175, 98, 157, 86, 173, 163,
	130, 116, 117, 85, 0, 151, 103, 108, 102, 139,
	170, 171, 101, 191, 91, 182, 88, 92, 181, 137,
	168, 174, 131, 128, 87, 172, 129, 127, 119, 106,
	113, 145, 126, 146, 114, 134, 133, 135, 0, 0,
	0, 162, 179, 192, 95, 0, 167, 186, 187, 0,
	0, 96, 109, 105, 144, 136, 93, 115, 159, 118,
	125, 150, 190, 141, 155, 99, 178, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 140, 0, 82, 89, 122,
	189, 149, 107, 180, 104, 0, 0, 0, 0, 0,
	121, 0, 123, 0, 0, 161, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 110, 0,
	203, 0, 208, 0, 0, 0, 0, 147, 0, 164,
	112, 120, 94, 83, 90, 0, 111, 138, 152, 156,
	0, 0, 0, 100, 0, 154, 142, 177, 0, 143,
	153, 124, 169, 148, 176, 184, 185, 166, 183, 188,
	158, 84, 165, 175, 98, 157, 86, 173, 163, 130,
	116, 117, 85, 0, 151, 103, 108, 102, 139, 170,
	171, 101, 191, 91, 182, 88, 92, 181, 137, 168,
	174, 131, 128, 87, 172, 129, 127, 119, 106, 113,
	145, 126, 146, 114, 134, 133, 135, 0, 0, 0,
	162, 179, 192, 95, 0, 167, 186, 187, 0, 0,
	96, 109, 105, 144, 136, 93, 115, 159, 118, 125,
	150, 190, 141, 155, 99, 178, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 0, 82, 89, 122, 189,
	149, 107, 180, 104, 0, 0, 0, 0, 0, 121,
	0, 123, 0, 0, 161, 132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 80, 0, 0, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 208, 0, 0, 0, 0, 147, 0, 164, 112,
	120, 94, 83, 90, 0, 111, 138, 152, 156, 0,
	0, 0, 100, 0, 154, 142, 177, 0, 143, 153,
	124, 169, 148, 176, 184, 185, 166, 183, 188, 158,
	84, 165, 175, 98, 157, 86, 173, 163, 130, 116,
	117, 85, 0, 151, 103, 108, 102, 139, 170, 171,
	101, 191, 91, 182, 88, 92, 181, 137, 168, 174,
	131, 128, 87, 172, 129, 127, 119, 106, 113, 145,
	126, 146, 114, 134, 133, 135, 0, 0, 0, 162,
	179, 192, 95, 0, 167, 186, 187, 0, 0, 96,
	109, 105, 144, 136, 93, 115, 159, 118, 125, 150,
	190, 141, 155, 99, 178, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 140, 0, 82, 89, 122, 189, 149,
	107, 180, 104, 0, 0, 0, 0, 0, 121, 0,
	123, 0, 0, 161, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 0, 0, 0,
	208, 0, 0, 0, 0, 147, 0, 164, 112, 120,
	94, 83, 90, 0, 111, 138, 152, 156, 0, 0,
	0, 100, 0, 154, 142, 177, 0, 143, 153, 124,
	169, 148, 176, 184, 185, 166, 183, 188, 158, 84,
	165, 175, 98, 157, 86, 173, 163, 130, 116, 117,
	85, 0, 151, 103, 108, 102, 139, 170, 171, 101,
	191, 91, 182, 88, 92, 181, 137, 168, 174, 131,
	128, 87, 172, 129, 127, 119, 106, 113, 145, 126,
	146, 114, 134, 133, 135, 0, 0, 0, 162, 179,
	192, 95, 0, 167, 186, 187, 0, 0, 96, 109,
	105, 144, 136, 93, 115, 159, 118, 125, 150, 190,
	141, 155, 99, 178, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 140, 0, 82, 89, 122, 189, 149, 107,
	180, 104, 0, 0, 0, 0, 0, 121, 0, 123,
	0, 0, 161, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 110, 0, 0, 0, 208,
	0, 0, 0, 0, 147, 0, 164, 112, 120, 94,
	83, 90, 0, 111, 138, 152, 156, 0, 0, 0,
	100, 0, 154, 142, 177, 0, 143, 153, 124, 169,
	148, 176, 184, 185, 166, 183, 188, 158, 84, 165,
	175, 98, 157, 86, 173, 163, 130, 116, 117, 85,
	0, 151, 103, 108, 102, 139, 170, 171, 101, 191,
	91, 182, 88, 92, 181, 137, 168, 174, 131, 128,
	87, 172, 129, 127, 119, 106, 113, 145, 126, 146,
	114, 134, 133, 135, 0, 0, 0, 162, 179, 192,
	95, 0, 167, 186, 187, 0, 0, 96, 109, 105,
	144, 136, 93, 115, 159, 118, 125, 150, 190, 141,
	155, 99, 178, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 82, 89, 122, 189, 149, 107, 180,
}
var yyPact = [...]int{

	1639, -1000, -209, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 991, 1045, -1000, -1000, -1000, -1000, -1000, -1000,
	378, 9150, -8, 140, -22, 12037, 139, 1964, 12515, -1000,
	9, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -100, -102,
	-1000, 779, -1000, -1000, -1000, -1000, -1000, 984, 989, 789,
	972, 900, -1000, 6926, 109, 109, 11798, 5909, -1000, -1000,
	413, 12515, 136, 12515, -155, 101, 101, 101, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 138, 12515, 424, -1000, 12515, 99, 629,
	99, 99, 99, 12515, -1000, 187, -1000, -1000, -1000, 12515,
	625, 922, 3335, 98, 3335, -1000, 3335, 3335, -1000, 3335,
	17, 3335, -82, 999, 18, -44, -1000, 3335, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 496, 955, 7919, 7919, 991, -1000, 779, -1000, -1000,
	-1000, 927, -1000, -1000, 386, 1027, -1000, 8911, 184, -1000,
	7919, 1941, 777, -1000, -1000, 777, -1000, -1000, 178, -1000,
	-1000, 8663, 8663, 8663, 8663, 8663, 8663, 8663, 8663, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 777, -1000, 7671, 777, 777, 777, 777,
	777, 777, 777, 777, 7919, 777, 777, 777, 777, 777,
	777, 777, 777, 777, 777, 777, 777, 777, 777, 777,
	11559, 10841, 12515, 761, 718, -1000, -1000, 183, 767, 5623,
	-134, -1000, -1000, -1000, 262, 10602, -1000, -1000, -1000, 921,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 639,
	12515, -1000, 241, -1000, 623, 3335, 122, 617, 311, 611,
	12515, 12515, 3335, 39, 73, 53, 12515, 770, 115, 12515,
	966, 846, 12515, 565, 554, -1000, 5337, -1000, 3335, 3335,
	-1000, -1000, -1000, 3335, 3335, 3335, 12515, 3335, 3335, -1000,
	-1000, -1000, -1000, 3335, 3335, -1000, 1026, 306, -1000, -1000,
	-1000, -1000, 7919, 224, -1000, 843, -1000, -1000, -1000, -1000,
	-1000, -1000, 1034, 218, 473, 182, 769, -1000, 524, 984,
	496, 900, 10363, 857, -1000, -1000, 12515, -1000, 7919, 7919,
	503, -1000, 11319, -1000, -1000, 4193, 227, 8663, 478, 416,
	8663, 8663, 8663, 8663, 8663, 8663, 8663, 8663, 8663, 8663,
	8663, 8663, 8663, 8663, 8663, 479, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 545, -1000, 779, 556, 556, 199,
	199, 199, 199, 199, 199, 199, 2451, 6430, 496, 637,
	259, 7671, 6926, 6926, 7919, 7919, 7422, 7174, 6926, 973,
	304, 259, 12754, -1000, -1000, 8415, -1000, -1000, -1000, -1000,
	-1000, 496, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 12276,
	12276, 6926, 6926, 6926, 6926, 62, 12515, -1000, 673, 820,
	-1000, -1000, -1000, 968, 9876, 10124, 62, 664, 10841, 12515,
	-1000, -1000, 10841, 12515, 3907, 5051, 767, -134, 738, -1000,
	-118, -125, 6182, 193, -1000, -1000, -1000, -1000, 3049, 196,
	641, 407, -67, -1000, -1000, -1000, 783, -1000, 783, 783,
	783, 783, -37, -37, -37, -37, -1000, -1000, -1000, -1000,
	-1000, 818, 817, -1000, 783, 783, 783, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 806, 806, 806, 787, 787,
	834, -1000, 12515, 3335, 965, 3335, -1000, 91, -1000, 12515,
	12515, 12515, 12515, 12515, 170, 12515, 12515, 765, -1000, 12515,
	3335, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 12515, 394, 12515, 12515,
	259, -1000, 532, 12515, -1000, 904, 7919, 7919, 4765, 7919,
	-1000, -1000, -1000, 955, -1000, 973, 985, -1000, 915, 913,
	6926, -1000, -1000, 227, 385, -1000, -1000, 510, -1000, -1000,
	-1000, -1000, 173, 777, -1000, 2007, -1000, -1000, -1000, -1000,
	478, 8663, 8663, 8663, 87, 2007, 2175, 708, 2189, 199,
	353, 353, 204, 204, 204, 204, 204, 782, 782, -1000,
	-1000, -1000, 496, -1000, -1000, -1000, 496, 6926, 764, -1000,
	-1000, 7919, -1000, 496, 633, 633, 458, 495, 294, 1003,
	633, 290, 1001, 633, 633, 6926, 422, -1000, 7919, 496,
	-1000, 165, -1000, 662, 744, 743, 633, 496, 633, 633,
	740, 777, -1000, 12754, 10841, 10841, 10841, 10841, 10841, -1000,
	886, 872, -1000, 868, 861, 892, 12515, -1000, 635, 9876,
	206, 777, -1000, 11080, -1000, -1000, 998, 10841, 654, -1000,
	654, -1000, 161, -1000, -1000, 738, -134, -128, -1000, -1000,
	-1000, -1000, 259, -1000, 533, 735, 2763, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 796, 543, -1000, 945, 223, 402,
	538, 944, -1000, -1000, -1000, 924, -1000, 349, -93, -1000,
	-1000, 480, -37, -37, -1000, -1000, 193, 920, 193, 193,
	193, 523, 523, -1000, -1000, -1000, -1000, 463, -1000, -1000,
	-1000, 452, -1000, 842, 12276, 3335, -1000, -1000, -1000, -1000,
	546, 546, 260, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 51, 823, -1000, -1000, -1000, -1000,
	-5, 35, 113, -1000, 3335, -1000, 306, -1000, 522, 7919,
	-1000, -1000, -1000, -1000, 899, 259, 259, 157, -1000, -1000,
	12515, -1000, -1000, -1000, -1000, 690, -1000, -1000, -1000, 3621,
	6926, -1000, 87, 2007, 2160, -1000, 8663, 8663, -1000, -1000,
	633, 6926, 259, -1000, -1000, -1000, 84, 479, 84, 8663,
	8663, -1000, 8663, 8663, -1000, -168, 693, 261, -1000, 7919,
	390, -1000, 4765, -1000, 8663, 8663, -1000, -1000, -1000, -1000,
	841, 12754, 777, -1000, 9637, 12276, 721, -1000, 247, 820,
	794, 840, 916, -1000, -1000, -1000, -1000, 862, -1000, 859,
	-1000, -1000, -1000, -1000, -1000, 135, 128, 126, 12276, -1000,
	991, 7919, 654, -1000, -1000, 208, -1000, -1000, -121, -142,
	-1000, -1000, -1000, 3049, -1000, 3049, 12276, 86, -1000, 538,
	538, -1000, -1000, -1000, 788, 839, 8663, -1000, -1000, -1000,
	606, 193, 193, -1000, 258, -1000, -1000, -1000, 616, -1000,
	609, 733, 605, 12515, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 12515, -1000, -1000, -1000, -1000, -1000, 12276, -173, 526,
	12276, 12276, 12276, 12515, -1000, 394, -1000, 259, -1000, 4479,
	-1000, 998, 10841, -1000, -1000, 496, -1000, 8663, 2007, 2007,
	-1000, -1000, 496, 783, 783, -1000, 783, 787, -1000, 783,
	-3, 783, -4, 496, 496, 2113, 2062, 1631, 1487, 777,
	-163, -1000, 259, 7919, -1000, 1452, 1423, -1000, 950, 647,
	723, -1000, -1000, 6678, 496, 602, 155, 595, -1000, 991,
	12754, 7919, -1000, -1000, 7919, 786, -1000, 7919, -1000, -1000,
	-1000, 777, 777, 777, 595, 984, 259, -1000, -1000, -1000,
	-1000, 2763, -1000, 593, -1000, 783, -1000, -1000, -1000, 12276,
	-61, 1032, 2007, -1000, -1000, -1000, -1000, -1000, -37, 516,
	-37, 428, -1000, 425, 3335, -1000, -1000, -1000, -1000, 961,
	-1000, 4479, -1000, -1000, 780, 824, -1000, -1000, -1000, 996,
	726, -1000, 2007, -1000, -1000, 97, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 8663, 8663, 8663, 8663, 8663, 496,
	505, 259, 8663, 8663, 943, -1000, 777, -1000, -1000, 746,
	12276, 12276, -1000, 12276, 984, -1000, 259, 259, 12276, 259,
	12276, 12276, 12276, 9398, -1000, 179, 12276, -1000, 586, -1000,
	221, -1000, -84, 193, -1000, 193, 596, 552, -1000, 777,
	724, -1000, 237, 12276, 12515, 994, 987, -1000, -1000, 662,
	662, 662, 662, 31, -1000, -1000, 662, 662, 1031, -1000,
	777, -1000, 779, 153, -1000, -1000, -1000, 578, 576, 576,
	576, 206, 179, -1000, 497, 236, 504, -1000, 58, 12276,
	398, 942, -1000, 939, -1000, -1000, -1000, -1000, -1000, 50,
	4479, 3049, 573, -1000, -1000, 7919, 7919, -1000, -1000, -1000,
	-1000, 496, 44, -177, -1000, -1000, 12754, 723, 496, 12276,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 418, -1000, -1000,
	12515, -1000, -1000, 423, -1000, -1000, 570, -1000, 12276, -1000,
	-1000, 823, 259, 698, -1000, 896, -171, -180, 677, -1000,
	-1000, -1000, 778, -1000, -1000, 50, 909, -173, -1000, 891,
	-1000, 12276, -1000, 47, -1000, -175, 551, 45, -178, 838,
	777, -181, 784, -1000, 1023, 8167, -1000, -1000, 1030, 203,
	203, 662, 496, -1000, -1000, -1000, 90, 493, -1000, -1000,
	-1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1260, 55, 570, 1256, 1251, 1248, 1247, 1246, 1244,
	1243, 1242, 1240, 1238, 1237, 1236, 1235, 1234, 1233, 1227,
	1225, 1224, 1218, 1217, 1213, 1211, 139, 1210, 1209, 1207,
	73, 1206, 77, 1205, 1204, 41, 656, 46, 40, 875,
	1203, 24, 66, 70, 1201, 35, 1197, 1196, 78, 1195,
	1194, 57, 1192, 1191, 1424, 1188, 71, 1187, 15, 30,
	1186, 1185, 1184, 1183, 76, 465, 1181, 1176, 17, 1175,
	1173, 88, 1169, 58, 6, 16, 27, 21, 1168, 826,
	7, 1166, 51, 1165, 1164, 1163, 1162, 26, 1161, 53,
	1159, 23, 59, 1158, 14, 75, 38, 22, 9, 79,
	63, 1157, 19, 64, 45, 1155, 1154, 520, 1149, 1147,
	54, 1146, 1145, 28, 1140, 151, 521, 1139, 1135, 1134,
	1133, 42, 0, 569, 137, 69, 1131, 1130, 1129, 1369,
	43, 48, 18, 1128, 98, 20, 44, 1127, 1126, 37,
	1125, 1122, 1121, 1116, 1113, 1111, 1110, 312, 1109, 1108,
	1105, 31, 49, 1101, 1099, 60, 25, 1098, 1095, 1094,
	52, 65, 1093, 1091, 47, 33, 1090, 1089, 1085, 1083,
	1082, 34, 10, 1081, 12, 1080, 11, 1079, 29, 1078,
	8, 1072, 13, 1066, 3, 1061, 5, 50, 1, 1060,
	2, 1057, 1055, 61, 4, 80, 1054, 81,
}
var yyR1 = [...]int{

	0, 191, 192, 192, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 6, 3, 4,
	4, 5, 5, 7, 7, 29, 29, 8, 9, 9,
	9, 9, 195, 195, 48, 48, 49, 49, 95, 95,
	10, 10, 10, 10, 100, 100, 104, 104, 104, 105,
	105, 105, 105, 137, 137, 11, 11, 11, 11, 11,
	11, 11, 186, 186, 185, 184, 184, 183, 183, 182,
	17, 167, 169, 169, 168, 168, 168, 168, 161, 140,
	140, 140, 140, 143, 143, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 142, 142, 142, 142, 142, 144,
	144, 144, 144, 144, 145, 145, 145, 145, 145, 145,
	145, 145, 145, 145, 145, 145, 145, 145, 145, 146,
	146, 146, 146, 146, 146, 146, 146, 160, 160, 147,
	147, 155, 155, 156, 156, 156, 153, 153, 154, 154,
	157, 157, 157, 149, 149, 150, 150, 158, 158, 151,
	151, 151, 152, 152, 152, 159, 159, 159, 159, 159,
	148, 148, 162, 162, 177, 177, 176, 176, 176, 166,
	166, 173, 173, 173, 173, 173, 164, 164, 165, 165,
	175, 175, 174, 163, 163, 178, 178, 178, 178, 189,
	190, 188, 188, 188, 188, 188, 170, 170, 170, 171,
	171, 171, 172, 172, 172, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	187, 187, 187, 187, 187, 187, 187, 187, 187, 187,
	187, 187, 181, 179, 179, 180, 180, 13, 18, 18,
	14, 14, 14, 14, 14, 15, 15, 19, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 20, 20, 20, 20,
	20, 20, 20, 20, 20, 20, 111, 111, 109, 109,
	112, 112, 110, 110, 110, 113, 113, 113, 114, 114,
	138, 138, 138, 21, 21, 23, 23, 24, 25, 22,
	22, 22, 22, 22, 22, 22, 16, 196, 26, 27,
	27, 28, 28, 28, 32, 32, 32, 30, 30, 31,
	31, 37, 37, 36, 36, 38, 38, 38, 38, 126,
	126, 126, 125, 125, 40, 40, 41, 41, 42, 42,
	43, 43, 43, 43, 57, 57, 94, 94, 96, 96,
	44, 44, 44, 44, 45, 45, 46, 46, 47, 47,
	133, 133, 132, 132, 132, 131, 131, 50, 50, 50,
	52, 51, 51, 51, 51, 53, 53, 55, 55, 54,
	54, 56, 58, 58, 58, 58, 59, 59, 39, 39,
	39, 39, 39, 39, 39, 108, 108, 61, 61, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 72,
	72, 72, 72, 72, 72, 62, 62, 62, 62, 62,
	62, 62, 35, 35, 73, 73, 73, 79, 74, 74,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 65, 65, 65, 65, 65, 65, 65, 65,
	65, 65, 69, 69, 69, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 67, 67, 67, 67, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 197, 197, 71, 70, 70, 70,
	70, 70, 70, 33, 33, 33, 33, 33, 136, 136,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 139,
	139, 139, 139, 83, 83, 34, 34, 81, 81, 82,
	84, 84, 80, 80, 80, 64, 64, 64, 64, 64,
	64, 64, 64, 66, 66, 66, 85, 85, 86, 86,
	87, 87, 88, 88, 89, 90, 90, 90, 91, 91,
	91, 91, 92, 92, 92, 63, 63, 63, 63, 63,
	63, 93, 93, 93, 93, 97, 97, 75, 75, 77,
	77, 76, 78, 98, 98, 102, 99, 99, 103, 103,
	103, 103, 101, 101, 101, 128, 128, 128, 106, 106,
	115, 115, 116, 116, 107, 107, 117, 117, 117, 117,
	117, 117, 117, 117, 117, 117, 118, 118, 118, 119,
	119, 120, 120, 120, 127, 127, 123, 123, 124, 124,
	129, 129, 130, 130, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 121, 121, 121, 121, 121, 121, 121, 121,
	121, 121, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 122, 122, 122, 122, 122, 122,
	122, 122, 122, 122, 193, 194, 134, 135, 135, 135,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 4, 6, 7, 5, 10, 1,
	3, 1, 3, 7, 8, 1, 1, 9, 8, 7,
	6, 6, 1, 1, 1, 3, 1, 3, 0, 4,
	3, 4, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 2, 2, 8, 4, 6,
	5, 5, 0, 2, 1, 0, 2, 1, 3, 3,
	4, 4, 2, 4, 1, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 1, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 4, 1, 2, 2, 3, 2, 0,
	1, 2, 3, 3, 2, 2, 1, 1, 0, 1,
	1, 3, 2, 3, 1, 10, 11, 11, 12, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 6, 7, 7, 7, 7,
	4, 5, 7, 5, 5, 5, 12, 7, 5, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	4, 6, 5, 4, 4, 3, 2, 3, 4, 4,
	3, 4, 4, 4, 4, 4, 4, 3, 2, 3,
	3, 2, 3, 4, 3, 7, 5, 4, 2, 4,
	4, 3, 3, 5, 2, 3, 1, 1, 0, 1,
	1, 1, 0, 2, 2, 0, 2, 2, 0, 2,
	0, 1, 1, 2, 1, 1, 2, 1, 1, 2,
	2, 2, 2, 2, 3, 3, 2, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 0,
	1, 0, 1, 1, 3, 1, 2, 3, 5, 0,
	1, 2, 1, 1, 0, 2, 1, 3, 1, 1,
	1, 3, 1, 3, 3, 7, 1, 3, 1, 3,
	4, 4, 4, 3, 2, 4, 0, 1, 0, 2,
	0, 1, 0, 1, 2, 1, 1, 1, 2, 2,
	1, 2, 3, 2, 3, 2, 2, 2, 1, 1,
	3, 3, 0, 5, 5, 5, 0, 2, 1, 3,
	3, 2, 3, 1, 2, 0, 3, 1, 1, 3,
	3, 4, 4, 5, 3, 4, 5, 6, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 1, 1, 1, 3, 1, 3,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 2, 2, 2, 3, 1, 1,
	1, 1, 4, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 7, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 0, 3, 4, 7, 3, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 4, 2, 1, 3, 5, 4,
	6, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	0, 2, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -191, -1, -2, -6, -7, -8, -9, -10, -11,
	-12, -13, -14, -15, -19, -20, -21, -23, -24, -25,
	-22, -16, -3, -4, 6, 7, -29, 9, 10, 30,
	-17, 115, 116, 118, 117, 150, 119, 143, 50, 164,
	165, 167, 168, 25, 144, 145, 148, 149, 31, 32,
	121, -193, 8, 249, 54, -192, 291, -87, 15, -28,
	5, -26, -196, -26, -26, -26, -26, -26, -167, -169,
	54, 90, -120, 125, 72, 241, 122, 123, 129, -123,
	57, -122, 259, 136, 164, 175, 169, 196, 188, 260,
	137, 186, 189, 228, 135, 216, 223, 66, 167, 237,
	146, 184, 180, 178, 27, 225, 201, 264, 179, 224,
	121, 139, 133, 202, 206, 229, 173, 174, 231, 200,
	134, 33, 261, 35, 154, 232, 204, 199, 195, 198,
	172, 194, 39, 208, 207, 209, 227, 191, 140, 181,
	18, 235, 149, 152, 226, 203, 205, 130, 156, 263,
	233, 177, 141, 153, 148, 236, 142, 168, 163, 230,
	239, 38, 213, 171, 132, 165, 160, 218, 192, 155,
	182, 183, 197, 170, 193, 166, 157, 150, 238, 214,
	265, 190, 187, 161, 158, 159, 219, 220, 162, 262,
	234, 185, 215, -107, 125, 220, 127, 123, 123, 124,
	125, 241, 122, 123, -54, -129, 57, -122, 125, 123,
	108, 189, 228, 115, 217, 225, 124, 33, 226, 156,
	-138, 123, -109, 216, 219, 220, 162, 57, 230, 229,
	221, -129, 166, -134, -134, -134, -134, -134, 218, 218,
	-134, -2, -91, 17, 16, -5, -3, -193, 6, 20,
	21, -32, 40, 41, -27, -38, 99, -39, -129, -60,
	74, -65, 29, 57, -122, 23, -64, -61, -80, -78,
	-79, 108, 109, 110, 97, 98, 105, 75, 111, -69,
	-67, -68, -70, 59, 58, 67, 60, 61, 62, 63,
	68, 69, 70, -123, -76, -193, 44, 45, 250, 251,
	252, 253, 258, 254, 77, 34, 240, 248, 247, 246,
	244, 245, 242, 243, 256, 257, 128, 241, 103, 249,
	-107, -107, 11, -48, -49, -54, -56, -129, -99, -137,
	166, -103, 230, 229, -124, -101, -123, -121, 228, 189,
	227, 120, 266, 73, 22, 24, 211, 76, 108, 16,
	77, 107, 250, 115, 48, 267, 242, 243, 240, 252,
	253, 241, 217, 29, 10, 269, 25, 144, 268, 21,
	101, 117, 80, 81, 147, 23, 145, 70, 272, 19,
	51, 11, 13, 273, 274, 14, 128, 127, 92, 124,
	46, 8, 111, 26, 89, 42, 275, 28, 276, 277,
	278, 279, 44, 90, 17, 244, 245, 31, 280, 258,
	151, 103, 49, 36, 74, 281, 282, 68, 283, 71,
	52, 72, 15, 47, 284, 285, 286, 287, 91, 118,
	249, 45, 288, 122, 6, 255, 30, 143, 43, 289,
	123, 79, 256, 257, 126, 69, 5, 129, 32, 9,
	50, 53, 246, 247, 248, 34, 78, 12, 290, -168,
	90, -161, 57, -54, 124, -54, 249, -116, 128, -116,
	-116, 123, -54, 115, 117, 120, 52, -18, -54, -115,
	128, 57, -115, -115, -115, -54, 112, -54, 57, 30,
	-135, -193, -124, 241, 57, 156, 123, 157, 125, -135,
	-135, -135, -135, 160, 161, -135, -112, -111, 223, 224,
	218, 222, 12, 161, 218, 159, -135, -134, -134, -194,
	56, -92, 19, 31, -39, -129, -88, -89, -39, -87,
	-2, -26, 36, -30, 21, 65, 11, -126, 73, 72,
	89, -125, 22, -123, 59, 112, -39, -62, 92, 74,
	90, 91, 76, 94, 93, 104, 97, 98, 99, 100,
	101, 102, 103, 95, 96, 107, 82, 83, 84, 85,
	86, 87, 88, -108, -193, -79, -193, 113, 114, -65,
	-65, -65, -65, -65, -65, -65, -65, -193, -2, -74,
	-39, -193, -193, -193, -193, -193, -193, -193, -193, -193,
	-83, -39, -193, -197, -71, -193, -197, -71, -197, -71,
	-197, -193, -197, -71, -197, -71, -197, -197, -71, -193,
	-193, -193, -193, -193, -193, -55, 26, -54, -41, -42,
	-43, -44, -57, -79, -193, -54, -54, -48, -195, 55,
	11, 53, -195, 55, 112, 55, -99, 166, -100, -104,
	231, 233, 82, -128, -123, 59, 29, 30, 56, 55,
	-54, -140, -143, -145, -144, -146, -141, -142, 186, 187,
	108, 190, 192, 193, 194, 195, 196, 197, 198, 199,
	200, 201, 30, 146, 182, 183, 184, 185, 202, 203,
	204, 205, 206, 207, 208, 209, 169, 188, 260, 170,
	171, 172, 173, 174, 175, 177, 178, 179, 180, 181,
	57, -135, 125, 57, 74, 57, -54, -54, -135, 158,
	158, 123, 123, 163, -54, 55, 126, -48, 23, 52,
	-54, 57, 57, -130, -129, -121, -135, -135, -135, -135,
	-135, -54, -135, -135, -135, -135, 11, -110, 11, 92,
	-39, -114, 90, 52, 9, 92, 55, 18, 112, 55,
	-90, 24, 25, -91, -194, -32, -66, -123, 60, 63,
	-31, 43, -54, -39, -39, -72, 68, 74, 69, 70,
	-125, 99, -130, -124, -121, -65, -73, -76, -79, 64,
	92, 90, 91, 76, -65, -65, -65, -65, -65, -65,
	-65, -65, -65, -65, -65, -65, -65, -65, -65, -136,
	57, 59, 57, -64, -64, -123, -37, 21, -36, -38,
	-194, 55, -194, -2, -36, -36, -39, -39, -80, 59,
	-36, -80, 59, -36, -36, -30, -81, -82, 78, -80,
	-123, -129, -194, -65, -123, -123, -36, -37, -36, -36,
	-95, 152, -54, 30, 55, -50, -52, -51, -53, 42,
	46, 48, 43, 44, 45, 49, -133, 22, -41, -193,
	-132, 152, -131, 22, -129, 59, -95, 53, -41, -54,
	-41, -56, -129, 99, -103, -100, 55, 232, 234, 235,
	52, 71, -39, -152, 107, -170, -171, -172, -124, 59,
	60, -161, -162, -163, -173, 138, -178, 130, 132, 129,
	-164, 139, 124, 28, 56, -157, 68, 74, -153, 214,
	-147, 54, -147, -147, -147, -147, -151, 189, -151, -151,
	-151, 54, 54, -147, -147, -147, -155, 54, -155, -155,
	-156, 54, -156, -127, 53, -54, -135, 23, -135, -117,
	120, 117, 118, -181, 116, 211, 189, 66, 29, 15,
	250, 152, 265, 57, 153, -54, -54, -54, -54, -54,
	120, 117, -54, -54, -54, -135, -54, -113, 90, 12,
	-129, -129, 59, -54, 38, -39, -39, -130, -89, -92,
	-106, 19, 11, 34, 34, -36, 68, 69, 70, 112,
	-193, -73, -65, -65, -65, -35, 147, 73, -194, -194,
	-36, 55, -39, -194, -194, -194, 55, 53, 22, 11,
	11, -194, 11, 11, -194, -194, -36, -84, -82, 80,
	-39, -194, 112, -194, 55, 55, -194, -194, -194, -194,
	-63, 30, 34, -2, -193, -193, -98, -102, -80, -42,
	-43, -43, -42, -43, 42, 42, 42, 47, 42, 47,
	42, -51, -129, -194, -58, 50, 127, 51, -193, -131,
	-59, 12, -41, -59, -59, 112, -104, -105, 236, 233,
	239, 57, 59, 55, -172, 82, 54, 57, 28, -164,
	-164, -165, 57, -165, 28, -149, 29, 68, -154, 215,
	60, -151, -151, -152, 30, -152, -152, -152, -160, 59,
	-160, 60, 60, 52, -123, -135, -134, -187, 135, 131,
	138, 139, 133, 57, 124, 28, 130, 132, 152, 129,
	-187, -118, -119, 126, 22, 124, 28, 152, -186, 53,
	158, 211, 158, 126, -135, -110, 59, -39, 39, 112,
	-54, -40, 11, 99, -124, -37, -35, 73, -65, -65,
	-194, -38, -139, 108, 186, 146, 184, 180, 200, 191,
	213, 182, 214, -136, -139, -65, -65, -65, -65, 259,
	-87, 81, -39, 79, -124, -65, -65, -97, 52, -98,
	-75, -77, -76, -193, -2, -93, -123, -96, -123, -59,
	55, 82, -46, -45, 52, 53, -47, 52, -45, 42,
	42, 124, 124, 124, -96, -87, -39, -59, 233, 237,
	238, -171, -172, -175, -174, -123, -178, -165, -165, 54,
	-150, 52, -65, 56, -152, -152, 57, 108, 56, 55,
	56, 55, 56, 55, -54, -134, -134, -54, -134, -123,
	-184, 262, -185, 57, -123, -123, -123, -54, -113, -59,
	-41, -194, -65, -194, -147, -147, -147, -156, -147, 174,
	-147, 174, -194, -194, 19, 19, 19, 19, -193, -34,
	255, -39, 55, 55, 27, -97, 55, -194, -194, -194,
	55, 112, -194, 55, -87, -102, -39, -39, 54, -39,
	-193, -193, -193, -194, -91, 56, 55, -147, -94, -123,
	-158, 211, 9, -151, 59, -151, 60, 60, -135, 26,
	-183, -182, -124, 54, 53, -85, 13, -151, 57, -65,
	-65, -65, -65, -65, -194, 59, -65, -65, 28, -77,
	34, -2, -193, -123, -123, -123, -91, -94, -94, -94,
	-94, -132, -177, -176, 53, 134, 66, -174, 56, 55,
	-159, 130, 28, 129, -68, -152, -152, 56, 56, -193,
	55, 82, -94, -54, -86, 14, 16, -194, -194, -194,
	-194, -33, 92, 262, -194, -194, 9, -75, -2, 112,
	56, -194, -194, -194, -58, -176, 57, -166, 82, 59,
	141, -123, -148, 66, 28, 28, -179, -180, 152, -182,
	-172, 56, -39, -74, -194, 260, 49, 263, -98, -194,
	-123, 60, -54, 59, -194, 55, -123, -186, 39, 261,
	264, 54, -180, 34, -184, 39, -94, 154, 262, 56,
	155, 263, -189, -190, 52, -193, 264, -190, 52, 10,
	9, -65, 151, -188, 142, 137, 140, 30, -188, -194,
	-194, 136, 29, 68,
}
var yyDef = [...]int{

	23, -2, 2, -2, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 560, 0, 317, 317, 317, 317, 317, 317,
	0, 631, 614, 0, 0, 0, 0, -2, 304, 305,
	0, 307, 308, 876, 876, 876, 876, 876, 0, 0,
	876, 0, 35, 36, 874, 1, 3, 568, 0, 0,
	321, 324, 319, 0, 614, 614, 0, 0, 65, 66,
	0, 0, 0, 864, 0, 612, 612, 612, 632, 633,
	636, 637, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 788, 789,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	800, 801, 802, 803, 804, 805, 806, 807, 808, 809,
	810, 811, 812, 813, 814, 815, 816, 817, 818, 819,
	820, 821, 822, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 865, 866, 867, 868, 869, 870,
	871, 872, 873, 0, 0, 0, 615, 0, 610, 0,
	610, 610, 610, 0, 256, 389, 640, 641, 864, 0,
	0, 0, 877, 0, 877, 268, 877, 877, 271, 877,
	0, 877, 0, 278, 0, 0, 284, 877, 301, 302,
	289, 303, 306, 309, 310, 311, 312, 313, 876, 876,
	316, 29, 572, 0, 0, 560, 31, 0, 317, 322,
	323, 327, 325, 326, 318, 0, 335, 339, 0, 398,
	0, 403, 405, -2, -2, 0, 440, 441, 442, 443,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 468,
	469, 470, 471, 545, 546, 547, 548, 549, 550, 551,
	552, 407, 408, 542, 592, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 533, 0, 504, 504, 504, 504,
	504, 504, 504, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 44, 46, 389, 50, 0,
	855, 596, -2, -2, 0, 0, 638, 639, -2, 772,
	-2, 644, 645, 646, 647, 648, 649, 650, 651, 652,
	653, 654, 655, 656, 657, 658, 659, 660, 661, 662,
	663, 664, 665, 666, 667, 668, 669, 670, 671, 672,
	673, 674, 675, 676, 677, 678, 679, 680, 681, 682,
	683, 684, 685, 686, 687, 688, 689, 690, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 701, 702,
	703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
	713, 714, 715, 716, 717, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 727, 728, 729, 730, 731, 732,
	733, 734, 735, 736, 737, 738, 739, 740, 741, 742,
	743, 744, 745, 746, 747, 748, 749, 750, 751, 752,
	753, 754, 755, 756, 757, 758, 759, 760, 761, 0,
	0, 84, 0, 82, 0, 877, 0, 0, 0, 0,
	0, 0, 877, 0, 0, 0, 0, 247, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 257, 877, 877,
	260, 878, 879, 877, 877, 877, 0, 877, 877, 267,
	269, 270, 272, 877, 877, 274, 0, 292, 290, 291,
	286, 287, 0, 298, 281, 282, 285, 314, 315, 30,
	875, 24, 0, 0, 569, 0, 561, 562, 565, 568,
	29, 324, 0, 329, 328, 320, 0, 336, 0, 0,
	0, 340, 0, 342, 343, 0, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 425, 426, 427, 428,
	429, 430, 431, 404, 0, 418, 0, 0, 0, 460,
	461, 462, 463, 464, 465, 466, 0, 331, 29, 0,
	438, 0, 0, 0, 0, 0, 0, 0, 0, 327,
	0, 534, 0, 488, 496, 0, 489, 497, 490, 498,
	491, 0, 492, 499, 493, 500, 494, 495, 501, 0,
	0, 0, 331, 0, 0, 48, 0, 388, 0, 346,
	348, 349, 350, -2, 0, 372, -2, 0, 0, 0,
	42, 43, 0, 0, 0, 0, 51, 855, 53, 54,
	0, 0, 0, 162, 605, 606, 607, 603, 206, 0,
	0, 150, 146, 90, 91, 92, 139, 94, 139, 139,
	139, 139, 159, 159, 159, 159, 122, 123, 124, 125,
	126, 0, 0, 109, 139, 139, 139, 113, 129, 130,
	131, 132, 133, 134, 135, 136, 95, 96, 97, 98,
	99, 100, 101, 102, 103, 141, 141, 141, 143, 143,
	634, 68, 0, 877, 0, 877, 80, 0, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 250, 611, 0,
	877, 253, 254, 390, 642, 643, 258, 259, 261, 262,
	263, 264, 265, 266, 273, 277, 0, 295, 0, 0,
	279, 280, 0, 0, 573, 0, 0, 0, 0, 0,
	564, 566, 567, 572, 32, 327, 0, 553, 0, 0,
	0, 330, 27, 399, 400, 402, 419, 0, 421, 423,
	341, 337, 0, 543, -2, 409, 410, 434, 435, 436,
	0, 0, 0, 0, 432, 414, 0, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	518, 519, 0, 457, 458, 467, 0, 0, 332, 333,
	437, 0, 591, 29, 0, 0, 0, 0, 442, 545,
	0, 442, 545, 0, 0, 0, 540, 537, 0, 0,
	542, 0, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 0, 0, 0, 0, 0, 377,
	0, 0, 380, 0, 0, 0, 0, 371, 0, 0,
	392, 823, 373, 0, 375, 376, 396, 0, 396, 45,
	396, 47, 0, 391, 597, 52, 0, 0, 57, 58,
	598, 599, 600, 601, 0, 81, 207, 209, 212, 213,
	214, 85, 86, 87, 0, 0, 194, 0, 0, 188,
	188, 0, 186, 187, 83, 153, 151, 0, 148, 147,
	93, 0, 159, 159, 116, 117, 162, 0, 162, 162,
	162, 0, 0, 110, 111, 112, 104, 0, 105, 106,
	107, 0, 108, 0, 0, 877, 70, 613, 71, 876,
	0, 0, 626, 221, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 72, 223, 225, 224, 228,
	0, 0, 0, 248, 877, 252, 292, 276, 0, 0,
	293, 294, 299, 283, 0, 570, 571, 0, 563, 25,
	0, 608, 609, 554, 555, 344, 420, 422, 424, 0,
	331, 411, 432, 415, 0, 412, 0, 0, 406, 472,
	0, 0, 439, -2, 475, 476, 0, 0, 0, 0,
	0, 511, 0, 0, 512, 0, 560, 0, 538, 0,
	0, 487, 0, 506, 0, 0, 507, 508, 509, 510,
	585, 0, 0, -2, 0, 0, 396, 593, 0, 347,
	366, 368, 0, 363, 378, 379, 381, 0, 383, 0,
	385, 386, 351, 353, 354, 0, 0, 0, 0, 374,
	560, 0, 396, 40, 41, 0, 55, 56, 0, 0,
	62, 163, 164, 0, 210, 0, 0, 0, 181, 188,
	188, 184, 189, 185, 0, 155, 0, 152, 89, 149,
	0, 162, 162, 118, 0, 119, 120, 121, 0, 137,
	0, 0, 0, 0, 635, 69, 215, 876, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	876, 0, 876, 627, 628, 629, 630, 0, 75, 0,
	0, 0, 0, 0, 251, 295, 296, 297, 574, 0,
	26, 396, 0, 338, 544, 0, 413, 0, 433, 416,
	473, 334, 0, 139, 139, 523, 139, 143, 526, 139,
	528, 139, 531, 0, 0, 0, 0, 0, 0, 0,
	535, 486, 541, 0, 543, 0, 0, 33, 0, 585,
	575, 587, 589, 0, 29, 0, 581, 0, 358, 560,
	0, 0, 360, 367, 0, 0, 361, 0, 362, 382,
	384, 0, 0, 0, 0, 568, 397, 39, 59, 60,
	61, 208, 211, 0, 190, 139, 193, 182, 183, 0,
	157, 0, 154, 140, 114, 115, 160, 161, 159, 0,
	159, 0, 144, 0, 877, 216, 217, 218, 219, 0,
	222, 0, 73, 74, 0, 0, 227, 249, 275, 556,
	345, 474, 417, 477, 520, 159, 524, 525, 527, 529,
	530, 532, 479, 478, 0, 0, 0, 0, 0, 0,
	0, 539, 0, 0, 0, 34, 0, 590, -2, 0,
	0, 0, 49, 0, 568, 594, 595, 364, 0, 369,
	0, 0, 0, 372, 38, 173, 0, 192, 0, 356,
	165, 158, 0, 162, 138, 162, 0, 0, 67, 0,
	76, 77, 0, 0, 0, 558, 0, 521, 522, 0,
	0, 0, 0, 513, 485, 536, 0, 0, 0, 588,
	0, -2, 0, 583, 582, 359, 37, 0, 0, 0,
	0, 392, 172, 174, 0, 179, 0, 191, 0, 0,
	170, 0, 167, 169, 156, 127, 128, 142, 145, 0,
	0, 0, 0, 229, 28, 0, 0, 480, 482, 481,
	483, 0, 0, 0, 502, 503, 0, 578, 29, 0,
	365, 393, 394, 395, 355, 175, 176, 0, 180, 178,
	0, 357, 88, 0, 166, 168, 0, 243, 0, 78,
	79, 72, 559, 557, 484, 0, 0, 0, 586, -2,
	584, 177, 0, 171, 242, 0, 0, 75, 514, 0,
	517, 0, 244, 0, 226, 515, 0, 0, 0, 195,
	0, 0, 196, 197, 0, 0, 516, 198, 0, 0,
	0, 0, 0, 199, 201, 202, 0, 0, 200, 245,
	246, 203, 204, 205,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 75, 3, 3, 3, 102, 94, 3,
	54, 56, 99, 97, 55, 98, 112, 100, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 291,
	83, 82, 84, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 104, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 93, 3, 105,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 57, 58, 59, 60, 61, 62, 63, 64,
	65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
	76, 77, 78, 79, 80, 81, 85, 86, 87, 88,
	89, 90, 91, 92, 95, 96, 101, 103, 106, 107,
	108, 109, 110, 111, 113, 114, 115, 116, 117, 118,
	119, 120, 121, 122, 123, 124, 125, 126, 127, 128,
	129, 130, 131, 132, 133, 134, 135, 136, 137, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:318
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:323
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:324
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:328
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:350
		{
			setParseTree(yylex, nil)
		}
	case 24:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:356
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].str
			yyVAL.selStmt = sel
		}
	case 25:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:364
		{
			yyVAL.selStmt = &Union{Type: yyDollar[2].str, Left: yyDollar[1].selStmt, Right: yyDollar[3].selStmt, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].str}
		}
	case 26:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:368
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, SelectExprs: SelectExprs{Nextval{Expr: yyDollar[5].expr}}, From: TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}}
		}
	case 27:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:374
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 28:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:381
		{
			yyVAL.selStmt = &Select{Comments: Comments(yyDollar[2].bytes2), Cache: yyDollar[3].str, Distinct: yyDollar[4].str, Hints: yyDollar[5].str, SelectExprs: yyDollar[6].selectExprs, From: yyDollar[7].tableExprs, Where: NewWhere(WhereStr, yyDollar[8].expr), GroupBy: GroupBy(yyDollar[9].exprs), Having: NewWhere(HavingStr, yyDollar[10].expr)}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:387
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:391
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:397
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:401
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 33:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:408
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].str
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].str
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:420
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].str, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:432
		{
			yyVAL.str = InsertStr
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:436
		{
			yyVAL.str = ReplaceStr
		}
	case 37:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:442
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].str, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereStr, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 38:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:448
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[4].tableName}}, Partitions: yyDollar[5].partitions, Where: NewWhere(WhereStr, yyDollar[6].expr), OrderBy: yyDollar[7].orderBy, Limit: yyDollar[8].limit}
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:452
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereStr, yyDollar[7].expr)}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:456
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:460
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Targets: yyDollar[3].tableNames, TableExprs: yyDollar[5].tableExprs, Where: NewWhere(WhereStr, yyDollar[6].expr)}
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:465
		{
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:466
		{
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:470
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:474
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:480
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:484
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:489
		{
			yyVAL.partitions = nil
		}
	case 49:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:493
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:499
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 51:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:503
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[4].setExprs}
		}
	case 52:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:507
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].str, Exprs: yyDollar[5].setExprs}
		}
	case 53:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:511
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[4].setExprs}
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:521
		{
			yyVAL.setExprs = append(yyVAL.setExprs, yyDollar[3].setExpr)
		}
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:527
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(yyDollar[3].str))}
		}
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:531
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadWrite))}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:535
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(TransactionStr), Expr: NewStrVal([]byte(TxReadOnly))}
		}
	case 59:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:541
		{
			yyVAL.str = IsolationLevelRepeatableRead
		}
	case 60:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:545
		{
			yyVAL.str = IsolationLevelReadCommitted
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:549
		{
			yyVAL.str = IsolationLevelReadUncommitted
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:553
		{
			yyVAL.str = IsolationLevelSerializable
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:559
		{
			yyVAL.str = SessionStr
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.str = GlobalStr
		}
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:569
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:574
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 67:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:580
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[7].tableName}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:585
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 69:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &DDL{Action: CreateStr, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:593
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:597
		{
			yyVAL.statement = &DBDDL{Action: CreateStr, DBName: string(yyDollar[4].bytes)}
		}
	case 72:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:602
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:606
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:617
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:622
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:628
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 78:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:633
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 79:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:645
		{
			yyVAL.ddl = &DDL{Action: CreateStr, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:652
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:663
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:669
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 86:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:678
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 87:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:688
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolVal
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolVal
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].sqlVal
			yyVAL.columnDefinition = &ColumnDefinition{Name: NewColIdent(string(yyDollar[1].bytes)), Type: yyDollar[2].columnType}
		}
	case 89:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:699
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolVal
			yyVAL.columnType.Zerofill = yyDollar[3].boolVal
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:710
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].sqlVal
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:715
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:721
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:725
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:729
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:737
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:745
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:753
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:759
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:765
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:771
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:777
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:783
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:799
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:807
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:813
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:817
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:821
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:825
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:829
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:833
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:841
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:845
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 123:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:849
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:853
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:857
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:865
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 128:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:870
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:884
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:888
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:892
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:896
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:900
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:904
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:910
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:915
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:920
		{
			yyVAL.sqlVal = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.sqlVal = NewIntVal(yyDollar[2].bytes)
		}
	case 141:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:929
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 142:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:933
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 143:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:941
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:945
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
			}
		}
	case 145:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:951
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntVal(yyDollar[2].bytes),
				Scale:  NewIntVal(yyDollar[4].bytes),
			}
		}
	case 146:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:959
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:963
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:968
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:972
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 150:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:978
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:982
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 153:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:991
		{
			yyVAL.optVal = nil
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1000
		{
			yyVAL.optVal = nil
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1009
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1013
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1018
		{
			yyVAL.str = ""
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1022
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1026
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 162:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1031
		{
			yyVAL.str = ""
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1035
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1039
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 165:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1044
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1048
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.colKeyOpt = colKey
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1065
		{
			yyVAL.sqlVal = nil
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1069
		{
			yyVAL.sqlVal = NewStrVal(yyDollar[2].bytes)
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1075
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1079
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1085
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1089
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1095
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Using: string(yyDollar[2].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1099
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntVal(yyDollar[3].bytes)}
		}
	case 178:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1104
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrVal(yyDollar[2].bytes)}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1110
		{
			yyVAL.str = ""
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1120
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1124
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 183:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1128
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1136
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1151
		{
			yyVAL.str = ""
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1165
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1171
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].sqlVal}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1177
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].bytes), Details: yyDollar[3].constraintInfo}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 195:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1188
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 196:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1192
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 197:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1196
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 198:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1200
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1206
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 200:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1212
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1222
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1226
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1230
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = ""
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1243
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.str = yyDollar[1].str
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1263
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 215:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1283
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 216:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1287
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 217:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1291
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 218:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1295
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 219:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1300
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName}
		}
	case 220:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1305
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 221:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1309
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 222:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1313
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 223:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1325
		{
			yyVAL.statement = &DDL{
				Action: DropVindexStr,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 224:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1335
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 225:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1339
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableStr, Table: yyDollar[5].tableName}
		}
	case 226:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1343
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 227:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1356
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexStr,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1366
		{
			yyVAL.statement = &DDL{Action: AddSequenceStr, Table: yyDollar[5].tableName}
		}
	case 229:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1370
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncStr,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 242:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1397
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeStr, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1403
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1407
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 245:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1413
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 246:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1417
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1423
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1429
		{
			yyVAL.ddl = &DDL{Action: RenameStr, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 249:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1433
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 250:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1441
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: yyDollar[4].tableNames, IfExists: exists}
		}
	case 251:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1449
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[5].tableName}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1454
		{
			var exists bool
			if yyDollar[3].byt != 0 {
				exists = true
			}
			yyVAL.statement = &DDL{Action: DropStr, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: exists}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1462
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 254:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1466
		{
			yyVAL.statement = &DBDDL{Action: DropStr, DBName: string(yyDollar[4].bytes)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[3].tableName}
		}
	case 256:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1476
		{
			yyVAL.statement = &DDL{Action: TruncateStr, Table: yyDollar[2].tableName}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1481
		{
			yyVAL.statement = &DDL{Action: AlterStr, Table: yyDollar[3].tableName}
		}
	case 258:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1487
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1492
		{
			yyVAL.statement = &Show{Type: CharsetStr}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1496
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 261:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1500
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 262:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1505
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1509
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 264:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1513
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1517
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 266:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1521
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1525
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1529
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1533
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1537
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1541
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1545
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1549
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1553
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1557
		{
			showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1562
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{Type: yyDollar[3].str}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt}
			}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1572
		{
			yyVAL.statement = &Show{Scope: yyDollar[2].str, Type: string(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1576
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1580
		{
			// Cannot dereference $4 directly, or else the parser stackcannot be pooled. See yyParsePooled
			showCollationFilterOpt := yyDollar[4].expr
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: &showCollationFilterOpt}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1586
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{Scope: string(yyDollar[2].bytes), Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1591
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1595
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes)}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1599
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1603
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1617
		{
			yyVAL.statement = &Show{Type: string(yyDollar[2].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1623
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1627
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 288:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1633
		{
			yyVAL.str = ""
		}
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1637
		{
			yyVAL.str = "full "
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1643
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1647
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 292:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1653
		{
			yyVAL.str = ""
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1657
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1661
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 295:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1667
		{
			yyVAL.showFilter = nil
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1671
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 298:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1681
		{
			yyVAL.showFilter = nil
		}
	case 299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1685
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1691
		{
			yyVAL.str = ""
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1695
		{
			yyVAL.str = SessionStr
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1699
		{
			yyVAL.str = GlobalStr
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1705
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1715
		{
			yyVAL.statement = &Begin{}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1719
		{
			yyVAL.statement = &Begin{}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.statement = &Commit{}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1731
		{
			yyVAL.statement = &Rollback{}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &OtherRead{}
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1741
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1745
		{
			yyVAL.statement = &OtherRead{}
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1749
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1753
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1767
		{
			yyVAL.statement = &DDL{Action: FlushStr}
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1771
		{
			setAllowComments(yylex, true)
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 319:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1781
		{
			yyVAL.bytes2 = nil
		}
	case 320:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1785
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1791
		{
			yyVAL.str = UnionStr
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1795
		{
			yyVAL.str = UnionAllStr
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1799
		{
			yyVAL.str = UnionDistinctStr
		}
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1804
		{
			yyVAL.str = ""
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1808
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1812
		{
			yyVAL.str = SQLCacheStr
		}
	case 327:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = ""
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = DistinctStr
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1826
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1830
		{
			yyVAL.str = StraightJoinHint
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1835
		{
			yyVAL.selectExprs = nil
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1839
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1855
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1859
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 337:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1863
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1867
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1872
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1876
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1880
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 344:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1892
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1896
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1902
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1906
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1916
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1920
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			// missed alias for subquery
			yylex.Error("Every derived table must have its own alias")
			return 1
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1930
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1936
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 355:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1940
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1950
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1956
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1960
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 360:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1973
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 361:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1977
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1981
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1985
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].str, RightExpr: yyDollar[3].tableExpr}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 365:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1993
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1997
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1999
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2003
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2005
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 370:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2008
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2010
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2017
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 374:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2028
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2034
		{
			yyVAL.str = JoinStr
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2038
		{
			yyVAL.str = JoinStr
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2042
		{
			yyVAL.str = JoinStr
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2048
		{
			yyVAL.str = StraightJoinStr
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.str = LeftJoinStr
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2058
		{
			yyVAL.str = LeftJoinStr
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2062
		{
			yyVAL.str = RightJoinStr
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2066
		{
			yyVAL.str = RightJoinStr
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2072
		{
			yyVAL.str = NaturalJoinStr
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2076
		{
			if yyDollar[2].str == LeftJoinStr {
				yyVAL.str = NaturalLeftJoinStr
			} else {
				yyVAL.str = NaturalRightJoinStr
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2086
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2100
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2111
		{
			yyVAL.indexHints = nil
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2115
		{
			yyVAL.indexHints = &IndexHints{Type: UseStr, Indexes: yyDollar[4].columns}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2119
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreStr, Indexes: yyDollar[4].columns}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2123
		{
			yyVAL.indexHints = &IndexHints{Type: ForceStr, Indexes: yyDollar[4].columns}
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2128
		{
			yyVAL.expr = nil
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2132
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2138
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2142
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2146
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2150
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].str, Expr: yyDollar[1].expr}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2162
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2168
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2172
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2178
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].str, Right: yyDollar[3].expr}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InStr, Right: yyDollar[3].colTuple}
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2196
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInStr, Right: yyDollar[4].colTuple}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2200
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeStr, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2204
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeStr, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpStr, Right: yyDollar[3].expr}
		}
	case 415:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2212
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpStr, Right: yyDollar[4].expr}
		}
	case 416:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2216
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenStr, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 417:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2220
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenStr, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2224
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2230
		{
			yyVAL.str = IsNullStr
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2234
		{
			yyVAL.str = IsNotNullStr
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2238
		{
			yyVAL.str = IsTrueStr
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2242
		{
			yyVAL.str = IsNotTrueStr
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2246
		{
			yyVAL.str = IsFalseStr
		}
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2250
		{
			yyVAL.str = IsNotFalseStr
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.str = EqualStr
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2260
		{
			yyVAL.str = LessThanStr
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2264
		{
			yyVAL.str = GreaterThanStr
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2268
		{
			yyVAL.str = LessEqualStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2272
		{
			yyVAL.str = GreaterEqualStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2276
		{
			yyVAL.str = NotEqualStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2280
		{
			yyVAL.str = NullSafeEqualStr
		}
	case 432:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2285
		{
			yyVAL.expr = nil
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2289
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2295
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2309
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2315
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2319
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2325
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2341
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2345
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndStr, Right: yyDollar[3].expr}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2349
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrStr, Right: yyDollar[3].expr}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2353
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorStr, Right: yyDollar[3].expr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2357
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusStr, Right: yyDollar[3].expr}
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2361
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusStr, Right: yyDollar[3].expr}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2365
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultStr, Right: yyDollar[3].expr}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2369
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivStr, Right: yyDollar[3].expr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2373
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivStr, Right: yyDollar[3].expr}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2377
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2381
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModStr, Right: yyDollar[3].expr}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2385
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftStr, Right: yyDollar[3].expr}
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightStr, Right: yyDollar[3].expr}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2393
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2397
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2401
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2405
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryStr, Expr: yyDollar[2].expr}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2409
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryStr, Expr: yyDollar[2].expr}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Str, Expr: yyDollar[2].expr}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2417
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusStr, Expr: yyDollar[2].expr}
			}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2425
		{
			if num, ok := yyDollar[2].expr.(*SQLVal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntVal(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusStr, Expr: yyDollar[2].expr}
			}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2439
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaStr, Expr: yyDollar[2].expr}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2443
		{
			yyVAL.expr = &UnaryExpr{Operator: BangStr, Expr: yyDollar[2].expr}
		}
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2447
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2465
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2469
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 474:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2473
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2483
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2487
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 477:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2491
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 478:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2495
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2499
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 480:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2503
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 481:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2507
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 482:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2511
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 483:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2515
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrVal(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 484:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2519
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].str}
		}
	case 485:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2523
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].str, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str}
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2527
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2531
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2541
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2570
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2575
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 498:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2588
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2603
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 502:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2607
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 503:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2611
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2621
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2631
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2635
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 509:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2639
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2643
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 511:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2647
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 512:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2651
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 513:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2657
		{
			yyVAL.str = ""
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2661
		{
			yyVAL.str = BooleanModeStr
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2665
		{
			yyVAL.str = NaturalLanguageModeStr
		}
	case 516:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2669
		{
			yyVAL.str = NaturalLanguageModeWithQueryExpansionStr
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.str = QueryExpansionStr
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2679
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2689
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2693
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: yyDollar[3].str, Operator: CharacterSetStr}
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2697
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal, Charset: string(yyDollar[3].bytes)}
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2709
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2715
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2719
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2723
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2727
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2731
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].sqlVal}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2735
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 532:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2739
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2744
		{
			yyVAL.expr = nil
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2748
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2753
		{
			yyVAL.str = string("")
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2757
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2763
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2767
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 539:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2773
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2778
		{
			yyVAL.expr = nil
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2782
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2788
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 544:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2796
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.expr = NewHexVal(yyDollar[1].bytes)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.expr = NewBitVal(yyDollar[1].bytes)
		}
	case 548:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.expr = NewFloatVal(yyDollar[1].bytes)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.expr = NewHexNum(yyDollar[1].bytes)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2826
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2830
		{
			yyVAL.expr = &NullVal{}
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2836
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntVal([]byte("1"))
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2845
		{
			yyVAL.expr = NewIntVal(yyDollar[1].bytes)
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2849
		{
			yyVAL.expr = NewValArg(yyDollar[1].bytes)
		}
	case 556:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2854
		{
			yyVAL.exprs = nil
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 558:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2863
		{
			yyVAL.expr = nil
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2867
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2872
		{
			yyVAL.orderBy = nil
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2876
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2882
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2886
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].str}
		}
	case 565:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2897
		{
			yyVAL.str = AscScr
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2901
		{
			yyVAL.str = AscScr
		}
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2905
		{
			yyVAL.str = DescScr
		}
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2910
		{
			yyVAL.limit = nil
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 570:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2918
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2922
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2927
		{
			yyVAL.str = ""
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2931
		{
			yyVAL.str = ForUpdateStr
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2935
		{
			yyVAL.str = ShareModeStr
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2948
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2952
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 577:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Rows: yyDollar[2].selStmt}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2961
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2965
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2969
		{
			// Drop the redundant parenthesis.
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].selStmt}
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2976
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 582:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2980
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 583:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2984
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2988
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2993
		{
			yyVAL.updateExprs = nil
		}
	case 586:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2997
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3003
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3007
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3013
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3017
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 591:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3023
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 592:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3029
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = &ParenExpr{yyDollar[1].valTuple[0]}
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3043
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3049
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 596:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3059
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3065
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("on"))}
		}
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3069
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: NewStrVal([]byte("off"))}
		}
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Expr: yyDollar[3].expr}
		}
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3077
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Expr: yyDollar[2].expr}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3084
		{
			yyVAL.bytes = []byte("charset")
		}
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = NewStrVal([]byte(yyDollar[1].colIdent.String()))
		}
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = NewStrVal(yyDollar[1].bytes)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &Default{}
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3108
		{
			yyVAL.byt = 0
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.byt = 1
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3113
		{
			yyVAL.empty = struct{}{}
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3115
		{
			yyVAL.empty = struct{}{}
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3118
		{
			yyVAL.str = ""
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3120
		{
			yyVAL.str = IgnoreStr
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3124
		{
			yyVAL.empty = struct{}{}
		}
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.empty = struct{}{}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3128
		{
			yyVAL.empty = struct{}{}
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3130
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.empty = struct{}{}
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3136
		{
			yyVAL.empty = struct{}{}
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3140
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3142
		{
			yyVAL.empty = struct{}{}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3145
		{
			yyVAL.empty = struct{}{}
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.empty = struct{}{}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3149
		{
			yyVAL.empty = struct{}{}
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3153
		{
			yyVAL.empty = struct{}{}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3155
		{
			yyVAL.empty = struct{}{}
		}
	case 631:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3158
		{
			yyVAL.empty = struct{}{}
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3160
		{
			yyVAL.empty = struct{}{}
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3162
		{
			yyVAL.empty = struct{}{}
		}
	case 634:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3165
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3171
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3175
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3182
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3188
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3192
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3464
		{
			decNesting(yylex)
		}
	case 876:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3469
		{
			skipToEnd(yylex)
		}
	case 877:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3474
		{
			skipToEnd(yylex)
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3478
		{
			skipToEnd(yylex)
		}
	case 879:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3482
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
