// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const SEQUENCE = 57523
const BEGIN = 57524
const START = 57525
const TRANSACTION = 57526
const COMMIT = 57527
const ROLLBACK = 57528
const SAVEPOINT = 57529
const RELEASE = 57530
const WORK = 57531
const BIT = 57532
const TINYINT = 57533
const SMALLINT = 57534
const MEDIUMINT = 57535
const INT = 57536
const INTEGER = 57537
const BIGINT = 57538
const INTNUM = 57539
const REAL = 57540
const DOUBLE = 57541
const FLOAT_TYPE = 57542
const DECIMAL = 57543
const NUMERIC = 57544
const TIME = 57545
const TIMESTAMP = 57546
const DATETIME = 57547
const YEAR = 57548
const CHAR = 57549
const VARCHAR = 57550
const BOOL = 57551
const CHARACTER = 57552
const VARBINARY = 57553
const NCHAR = 57554
const TEXT = 57555
const TINYTEXT = 57556
const MEDIUMTEXT = 57557
const LONGTEXT = 57558
const BLOB = 57559
const TINYBLOB = 57560
const MEDIUMBLOB = 57561
const LONGBLOB = 57562
const JSON = 57563
const ENUM = 57564
const GEOMETRY = 57565
const POINT = 57566
const LINESTRING = 57567
const POLYGON = 57568
const GEOMETRYCOLLECTION = 57569
const MULTIPOINT = 57570
const MULTILINESTRING = 57571
const MULTIPOLYGON = 57572
const NULLX = 57573
const AUTO_INCREMENT = 57574
const APPROXNUM = 57575
const SIGNED = 57576
const UNSIGNED = 57577
const ZEROFILL = 57578
const COLLATION = 57579
const DATABASES = 57580
const SCHEMAS = 57581
const TABLES = 57582
const VITESS_METADATA = 57583
const VSCHEMA = 57584
const FULL = 57585
const PROCESSLIST = 57586
const COLUMNS = 57587
const FIELDS = 57588
const ENGINES = 57589
const PLUGINS = 57590
const EXTENDED = 57591
const KEYSPACES = 57592
const VITESS_KEYSPACES = 57593
const VITESS_SHARDS = 57594
const VITESS_TABLETS = 57595
const NAMES = 57596
const CHARSET = 57597
const GLOBAL = 57598
const SESSION = 57599
const ISOLATION = 57600
const LEVEL = 57601
const READ = 57602
const WRITE = 57603
const ONLY = 57604
const REPEATABLE = 57605
const COMMITTED = 57606
const UNCOMMITTED = 57607
const SERIALIZABLE = 57608
const CURRENT_TIMESTAMP = 57609
const DATABASE = 57610
const CURRENT_DATE = 57611
const CURRENT_TIME = 57612
const LOCALTIME = 57613
const LOCALTIMESTAMP = 57614
const UTC_DATE = 57615
const UTC_TIME = 57616
const UTC_TIMESTAMP = 57617
const REPLACE = 57618
const CONVERT = 57619
const CAST = 57620
const SUBSTR = 57621
const SUBSTRING = 57622
const GROUP_CONCAT = 57623
const SEPARATOR = 57624
const TIMESTAMPADD = 57625
const TIMESTAMPDIFF = 57626
const MATCH = 57627
const AGAINST = 57628
const BOOLEAN = 57629
const LANGUAGE = 57630
const WITH = 57631
const QUERY = 57632
const EXPANSION = 57633
const UNUSED = 57634
const ARRAY = 57635
const CUME_DIST = 57636
const DESCRIPTION = 57637
const DENSE_RANK = 57638
const EMPTY = 57639
const EXCEPT = 57640
const FIRST_VALUE = 57641
const GROUPING = 57642
const GROUPS = 57643
const JSON_TABLE = 57644
const LAG = 57645
const LAST_VALUE = 57646
const LATERAL = 57647
const LEAD = 57648
const MEMBER = 57649
const NTH_VALUE = 57650
const NTILE = 57651
const OF = 57652
const OVER = 57653
const PERCENT_RANK = 57654
const RANK = 57655
const RECURSIVE = 57656
const ROW_NUMBER = 57657
const SYSTEM = 57658
const WINDOW = 57659
const ACTIVE = 57660
const ADMIN = 57661
const BUCKETS = 57662
const CLONE = 57663
const COMPONENT = 57664
const DEFINITION = 57665
const ENFORCED = 57666
const EXCLUDE = 57667
const FOLLOWING = 57668
const GEOMCOLLECTION = 57669
const GET_MASTER_PUBLIC_KEY = 57670
const HISTOGRAM = 57671
const HISTORY = 57672
const INACTIVE = 57673
const INVISIBLE = 57674
const LOCKED = 57675
const MASTER_COMPRESSION_ALGORITHMS = 57676
const MASTER_PUBLIC_KEY_PATH = 57677
const MASTER_TLS_CIPHERSUITES = 57678
const MASTER_ZSTD_COMPRESSION_LEVEL = 57679
const NESTED = 57680
const NETWORK_NAMESPACE = 57681
const NOWAIT = 57682
const NULLS = 57683
const OJ = 57684
const OLD = 57685
const OPTIONAL = 57686
const ORDINALITY = 57687
const ORGANIZATION = 57688
const OTHERS = 57689
const PATH = 57690
const PERSIST = 57691
const PERSIST_ONLY = 57692
const PRECEDING = 57693
const PRIVILEGE_CHECKS_USER = 57694
const PROCESS = 57695
const RANDOM = 57696
const REFERENCE = 57697
const REQUIRE_ROW_FORMAT = 57698
const RESOURCE = 57699
const RESPECT = 57700
const RESTART = 57701
const RETAIN = 57702
const REUSE = 57703
const ROLE = 57704
const SECONDARY = 57705
const SECONDARY_ENGINE = 57706
const SECONDARY_LOAD = 57707
const SECONDARY_UNLOAD = 57708
const SKIP = 57709
const SRID = 57710
const THREAD_PRIORITY = 57711
const TIES = 57712
const UNBOUNDED = 57713
const VCPU = 57714
const VISIBLE = 57715
const FORMAT = 57716
const TREE = 57717
const VITESS = 57718
const TRADITIONAL = 57719

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	136, 107,
	227, 107,
	-2, 101,
	-1, 48,
	34, 345,
	155, 345,
	167, 345,
	195, 359,
	196, 359,
	-2, 347,
	-1, 53,
	157, 369,
	-2, 367,
	-1, 77,
	55, 405,
	-2, 413,
	-1, 101,
	136, 107,
	227, 107,
	-2, 102,
	-1, 439,
	143, 780,
	-2, 776,
	-1, 440,
	143, 781,
	-2, 777,
	-1, 455,
	55, 406,
	-2, 418,
	-1, 456,
	55, 407,
	-2, 419,
	-1, 476,
	111, 1057,
	-2, 78,
	-1, 477,
	111, 961,
	-2, 79,
	-1, 482,
	111, 920,
	-2, 741,
	-1, 484,
	111, 999,
	-2, 743,
	-1, 634,
	136, 107,
	227, 107,
	-2, 270,
	-1, 1021,
	143, 783,
	-2, 779,
	-1, 1108,
	73, 60,
	81, 60,
	-2, 64,
	-1, 1486,
	5, 657,
	18, 657,
	20, 657,
	32, 657,
	82, 657,
	-2, 444,
	-1, 1685,
	45, 712,
	-2, 710,
}

const yyPrivate = 57344

const yyLast = 19831

var yyAct = [...]int{
	439, 1774, 1763, 1532, 1685, 1407, 1594, 1732, 1665, 1631,
	1313, 1614, 1333, 1102, 749, 1465, 1181, 1130, 1314, 383,
	448, 398, 1462, 1466, 789, 412, 1126, 1387, 1175, 908,
	615, 649, 796, 1388, 1364, 1099, 1478, 1129, 1427, 1249,
	76, 3, 612, 1139, 111, 1472, 481, 124, 378, 350,
	124, 1300, 1160, 942, 1015, 362, 1008, 124, 1380, 961,
	1144, 369, 74, 1183, 667, 609, 827, 1104, 834, 1081,
	1088, 817, 457, 794, 442, 799, 816, 374, 1041, 385,
	985, 1199, 1018, 1064, 29, 362, 616, 1171, 362, 124,
	362, 124, 1110, 833, 806, 831, 381, 608, 72, 956,
	77, 971, 824, 102, 103, 71, 1682, 867, 124, 124,
	658, 669, 762, 1633, 8, 7, 124, 6, 640, 1523,
	370, 763, 124, 373, 1604, 1184, 1767, 1729, 1761, 1710,
	1754, 1533, 1728, 79, 80, 81, 82, 83, 84, 1709,
	1444, 1562, 619, 835, 31, 836, 1186, 65, 35, 36,
	120, 116, 117, 118, 1496, 463, 467, 443, 1676, 711,
	710, 720, 721, 713, 714, 715, 716, 717, 718, 719,
	712, 91, 682, 722, 112, 113, 114, 1497, 1498, 1120,
	475, 424, 372, 430, 431, 428, 429, 427, 426, 425,
	1121, 1122, 675, 676, 371, 899, 478, 432, 433, 1372,
	1154, 1350, 1409, 1597, 1349, 625, 624, 1351, 1553, 1161,
	677, 1712, 1551, 855, 678, 675, 676, 1185, 64, 360,
	99, 107, 970, 108, 99, 92, 364, 90, 112, 113,
	114, 95, 358, 930, 96, 97, 627, 680, 681, 670,
	671, 672, 635, 1412, 1753, 655, 1229, 657, 1411, 927,
	1742, 1695, 1666, 1082, 868, 972, 973, 974, 1221, 1179,
	1778, 1410, 1179, 1780, 1503, 1179, 611, 639, 1657, 929,
	621, 1334, 1336, 902, 469, 665, 1413, 931, 935, 654,
	656, 685, 119, 881, 884, 885, 886, 887, 888, 889,
	1148, 890, 891, 892, 893, 894, 869, 870, 871, 872,
	853, 854, 882, 1428, 856, 928, 857, 858, 859, 860,
	861, 862, 863, 864, 865, 866, 873, 874, 875, 876,
	877, 878, 879, 880, 920, 1489, 109, 626, 1488, 1218,
	124, 647, 1487, 622, 653, 1220, 329, 115, 919, 734,
	735, 1689, 362, 1677, 1430, 1228, 1268, 1578, 1227, 1495,
	1305, 362, 98, 1278, 1257, 1116, 98, 1522, 1187, 1335,
	810, 747, 645, 1265, 712, 362, 362, 722, 1148, 1127,
	722, 1346, 1161, 1060, 1708, 633, 652, 651, 659, 1668,
	883, 683, 962, 702, 1432, 909, 1436, 87, 1431, 1476,
	1429, 112, 113, 114, 1713, 1434, 664, 837, 1776, 1658,
	1656, 1777, 918, 1775, 1433, 992, 695, 691, 666, 1446,
	112, 113, 114, 638, 957, 684, 1147, 1435, 1437, 990,
	991, 989, 112, 113, 114, 1042, 88, 1275, 1042, 904,
	1698, 66, 1209, 696, 697, 736, 737, 738, 739, 740,
	741, 742, 743, 744, 745, 1370, 660, 661, 662, 630,
	101, 631, 699, 803, 632, 915, 912, 913, 673, 911,
	732, 1219, 1755, 1217, 1514, 1781, 362, 1603, 702, 124,
	1151, 124, 124, 1602, 362, 786, 620, 1152, 734, 735,
	362, 694, 692, 650, 693, 787, 1205, 1206, 1207, 1756,
	64, 963, 922, 925, 1147, 734, 735, 1747, 750, 1528,
	1263, 1384, 988, 785, 1452, 1383, 815, 1190, 1262, 701,
	699, 711, 710, 720, 721, 713, 714, 715, 716, 717,
	718, 719, 712, 958, 1748, 722, 702, 700, 701, 699,
	800, 1782, 641, 642, 643, 917, 1264, 798, 765, 767,
	769, 771, 773, 775, 776, 702, 788, 766, 768, 452,
	772, 774, 1453, 777, 700, 701, 699, 916, 1208, 1758,
	1757, 634, 1448, 1213, 1210, 1201, 1211, 1204, 1250, 1200,
	1749, 623, 702, 1202, 1203, 1740, 713, 714, 715, 716,
	717, 718, 719, 712, 1723, 478, 722, 1212, 1627, 711,
	710, 720, 721, 713, 714, 715, 716, 717, 718, 719,
	712, 1600, 921, 722, 700, 701, 699, 1566, 124, 112,
	113, 114, 895, 700, 701, 699, 452, 923, 1565, 362,
	1529, 124, 702, 905, 906, 980, 982, 983, 1454, 924,
	362, 702, 981, 1394, 124, 1242, 1243, 1244, 1381, 124,
	955, 947, 124, 940, 941, 832, 124, 1663, 362, 1065,
	1066, 1654, 1759, 362, 362, 362, 124, 362, 362, 711,
	710, 720, 721, 713, 714, 715, 716, 717, 718, 719,
	712, 362, 362, 722, 73, 1418, 1475, 112, 113, 114,
	946, 1010, 1662, 901, 1396, 715, 716, 717, 718, 719,
	712, 1149, 944, 722, 926, 711, 710, 720, 721, 713,
	714, 715, 716, 717, 718, 719, 712, 1654, 1706, 722,
	1702, 452, 945, 1654, 452, 1654, 1690, 949, 950, 951,
	1463, 953, 954, 1009, 700, 701, 699, 1573, 1062, 1475,
	473, 986, 1011, 698, 965, 959, 960, 1074, 625, 624,
	1667, 936, 702, 112, 113, 114, 362, 1401, 112, 113,
	114, 452, 1353, 984, 1654, 1653, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1518, 1559, 964, 1340, 1030, 1033, 898, 1593, 362,
	362, 1043, 1111, 1025, 1385, 987, 468, 1580, 452, 1112,
	1061, 967, 1576, 452, 1021, 112, 113, 114, 362, 1197,
	1085, 1020, 700, 701, 699, 124, 1073, 1055, 362, 700,
	701, 699, 124, 1047, 124, 1520, 1519, 1067, 750, 1354,
	702, 31, 124, 124, 124, 1516, 1517, 702, 1516, 1515,
	362, 1012, 1013, 362, 1026, 1027, 1051, 1052, 1032, 1035,
	1036, 1073, 452, 75, 362, 362, 1308, 1022, 1085, 452,
	1113, 401, 400, 403, 404, 405, 406, 1021, 1115, 1019,
	402, 407, 1100, 1050, 1079, 1301, 1053, 1054, 1309, 470,
	471, 698, 452, 1075, 711, 710, 720, 721, 713, 714,
	715, 716, 717, 718, 719, 712, 1301, 1146, 722, 898,
	897, 1112, 844, 843, 1119, 64, 1084, 1281, 1280, 362,
	31, 440, 1077, 124, 445, 1073, 1111, 1063, 1073, 1196,
	934, 1162, 1163, 1164, 829, 64, 1741, 1616, 1114, 1605,
	1585, 31, 1019, 1177, 1118, 1117, 1109, 900, 124, 124,
	124, 124, 124, 1085, 1176, 124, 124, 1195, 1178, 124,
	362, 478, 1134, 1507, 478, 1408, 1085, 1638, 125, 896,
	1358, 125, 1113, 1390, 1475, 1131, 363, 124, 125, 1389,
	1111, 1172, 1166, 124, 124, 124, 1606, 1607, 1608, 124,
	362, 1165, 1198, 89, 64, 1609, 1479, 1480, 64, 1173,
	1174, 1617, 1194, 1189, 1769, 1188, 363, 1485, 1764, 363,
	125, 363, 125, 1235, 1214, 64, 1509, 1239, 1482, 1484,
	1463, 1398, 968, 1390, 1233, 938, 1325, 1744, 1323, 125,
	125, 1326, 1322, 1324, 1321, 986, 1727, 125, 1455, 1610,
	1611, 1290, 797, 125, 711, 710, 720, 721, 713, 714,
	715, 716, 717, 718, 719, 712, 1725, 1577, 722, 1246,
	1247, 1248, 1299, 1298, 458, 1718, 1259, 1155, 1715, 1156,
	1157, 1158, 1159, 1090, 1093, 1094, 1095, 1091, 459, 1092,
	1096, 1746, 1731, 1479, 1480, 1167, 1168, 1169, 1170, 987,
	1245, 1327, 1733, 1094, 1095, 124, 1288, 1739, 1738, 1686,
	1287, 801, 802, 461, 1289, 460, 124, 124, 124, 124,
	124, 94, 1294, 1684, 933, 441, 1395, 1258, 124, 1254,
	1255, 790, 124, 1389, 1315, 1376, 124, 443, 907, 1038,
	1303, 124, 124, 791, 842, 124, 124, 124, 1369, 1274,
	1272, 648, 1310, 1039, 105, 1700, 1699, 1636, 1352, 822,
	362, 1367, 1306, 1360, 106, 1571, 1531, 1293, 1058, 1359,
	1065, 1066, 1332, 1192, 1365, 1365, 1341, 1355, 1304, 1302,
	1343, 937, 1098, 446, 447, 449, 1297, 1751, 1317, 1318,
	1750, 1320, 1316, 944, 1296, 1319, 1736, 1328, 1090, 1093,
	1094, 1095, 1091, 1338, 1092, 1096, 122, 1719, 1339, 1366,
	1570, 450, 1344, 75, 1569, 1392, 365, 1375, 1347, 1377,
	1378, 1379, 362, 1458, 1301, 362, 1400, 679, 1771, 1770,
	1357, 1269, 1361, 1362, 1363, 1266, 811, 804, 1771, 1373,
	1374, 1687, 1598, 1059, 445, 1393, 124, 78, 614, 73,
	618, 70, 362, 1, 349, 1382, 1762, 110, 1534, 1613,
	914, 125, 1664, 362, 458, 1386, 1182, 628, 629, 1137,
	1128, 1131, 86, 363, 606, 637, 1391, 85, 459, 663,
	1136, 644, 363, 1135, 1655, 1371, 1397, 1153, 362, 1596,
	1508, 1402, 1368, 1697, 1009, 850, 363, 363, 848, 849,
	847, 455, 456, 461, 852, 460, 1403, 851, 1405, 846,
	342, 969, 359, 1097, 1426, 838, 1417, 805, 1216, 1046,
	1215, 1425, 910, 1521, 1415, 1150, 124, 1414, 1416, 1419,
	1420, 339, 674, 1439, 344, 1445, 362, 730, 1295, 1348,
	479, 1423, 362, 362, 1440, 1441, 472, 1442, 1443, 1464,
	1438, 1469, 1193, 93, 1737, 1021, 1716, 1461, 1315, 1450,
	1451, 1714, 1020, 1683, 1632, 1467, 1717, 1681, 362, 1745,
	1730, 124, 720, 721, 713, 714, 715, 716, 717, 718,
	719, 712, 1057, 793, 722, 362, 1483, 362, 1568, 362,
	1457, 1273, 1365, 1365, 1365, 1474, 451, 363, 1558, 1424,
	125, 759, 125, 125, 1500, 363, 1492, 1513, 1040, 820,
	384, 363, 1564, 1490, 979, 399, 396, 397, 1068, 1501,
	1449, 1491, 1499, 1493, 1307, 1494, 1504, 1505, 1506, 124,
	1511, 1512, 1146, 1502, 704, 382, 376, 819, 812, 1535,
	362, 362, 362, 1089, 124, 1087, 1525, 1424, 1510, 1526,
	1527, 1524, 1086, 711, 710, 720, 721, 713, 714, 715,
	716, 717, 718, 719, 712, 825, 1481, 722, 1477, 818,
	1072, 454, 1037, 1675, 1561, 453, 1544, 1540, 1541, 56,
	34, 366, 687, 462, 28, 23, 22, 21, 20, 646,
	19, 1549, 25, 18, 17, 16, 1131, 1542, 1131, 104,
	711, 710, 720, 721, 713, 714, 715, 716, 717, 718,
	719, 712, 100, 43, 722, 41, 39, 1572, 636, 38,
	27, 26, 413, 30, 1582, 1315, 15, 14, 13, 12,
	362, 11, 10, 9, 5, 4, 1567, 1581, 362, 125,
	690, 24, 748, 2, 0, 0, 0, 1355, 0, 0,
	363, 0, 125, 30, 1591, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 362, 125, 0, 0, 0, 0,
	125, 0, 0, 125, 1592, 0, 0, 125, 1620, 363,
	0, 0, 0, 0, 363, 363, 363, 125, 363, 363,
	0, 0, 0, 0, 0, 444, 0, 0, 1599, 1618,
	1601, 0, 363, 363, 0, 0, 0, 362, 0, 362,
	0, 362, 1626, 0, 0, 1635, 362, 0, 362, 362,
	362, 124, 1645, 1641, 1646, 1648, 1649, 1637, 814, 1467,
	1619, 826, 1644, 1467, 1650, 1621, 1622, 1623, 1624, 1625,
	1652, 1131, 1651, 1628, 1629, 410, 1639, 362, 124, 1630,
	1659, 0, 0, 1669, 1546, 1547, 1660, 1548, 1661, 0,
	1550, 0, 1552, 710, 720, 721, 713, 714, 715, 716,
	717, 718, 719, 712, 0, 1615, 722, 363, 0, 0,
	0, 0, 0, 0, 1688, 362, 0, 0, 0, 0,
	0, 0, 0, 1694, 1467, 0, 0, 362, 362, 362,
	361, 0, 0, 0, 0, 0, 0, 0, 0, 1704,
	363, 363, 0, 0, 0, 1557, 1705, 0, 0, 0,
	362, 1711, 0, 0, 0, 0, 124, 0, 1720, 363,
	480, 0, 0, 610, 0, 617, 125, 1315, 1556, 363,
	0, 1724, 1726, 125, 0, 125, 0, 0, 0, 1735,
	0, 1734, 0, 125, 125, 125, 0, 0, 0, 0,
	1743, 363, 0, 0, 363, 0, 0, 845, 0, 0,
	0, 0, 362, 0, 0, 363, 363, 0, 1752, 0,
	903, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 932, 0, 1768, 0, 0, 826, 0,
	0, 939, 0, 1779, 0, 0, 0, 0, 0, 1615,
	1131, 0, 0, 0, 0, 952, 0, 711, 710, 720,
	721, 713, 714, 715, 716, 717, 718, 719, 712, 0,
	363, 722, 0, 0, 125, 0, 0, 0, 0, 1765,
	711, 710, 720, 721, 713, 714, 715, 716, 717, 718,
	719, 712, 0, 0, 722, 0, 1251, 0, 0, 125,
	125, 125, 125, 125, 668, 0, 125, 125, 0, 0,
	125, 363, 0, 668, 0, 0, 711, 710, 720, 721,
	713, 714, 715, 716, 717, 718, 719, 712, 125, 30,
	722, 0, 0, 0, 125, 125, 125, 706, 0, 709,
	125, 363, 731, 733, 0, 723, 724, 725, 726, 727,
	728, 729, 0, 707, 708, 705, 711, 710, 720, 721,
	713, 714, 715, 716, 717, 718, 719, 712, 0, 0,
	722, 0, 0, 746, 0, 0, 0, 751, 752, 753,
	754, 755, 756, 757, 758, 0, 761, 764, 764, 764,
	770, 764, 764, 770, 764, 778, 779, 780, 781, 782,
	783, 784, 0, 0, 1076, 0, 0, 30, 0, 0,
	0, 1080, 0, 1083, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1108, 0, 0, 0, 480, 0, 0,
	0, 0, 0, 821, 0, 0, 480, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 465,
	686, 688, 0, 0, 0, 0, 0, 125, 125, 125,
	125, 125, 0, 0, 0, 0, 0, 0, 0, 125,
	112, 113, 114, 125, 0, 0, 0, 125, 0, 0,
	0, 0, 125, 125, 0, 0, 125, 125, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 363, 1191, 0, 0, 0, 0, 0, 1023, 1024,
	0, 0, 375, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 0, 0, 1222, 1223, 1224,
	1225, 1226, 0, 333, 1230, 1231, 0, 0, 1232, 0,
	0, 343, 0, 0, 0, 0, 0, 1056, 0, 0,
	0, 808, 0, 0, 0, 0, 1234, 0, 0, 480,
	0, 0, 0, 363, 1238, 839, 363, 0, 1240, 0,
	0, 0, 0, 0, 0, 341, 0, 0, 0, 0,
	0, 668, 0, 0, 348, 0, 0, 125, 0, 0,
	0, 0, 668, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 363, 0, 0, 0, 0, 0,
	668, 0, 0, 0, 331, 668, 668, 668, 0, 668,
	668, 0, 0, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 668, 668, 0, 0, 0, 0, 0,
	0, 345, 334, 335, 0, 346, 347, 354, 0, 0,
	0, 338, 340, 351, 336, 337, 356, 355, 0, 332,
	353, 352, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 363, 0, 0,
	0, 0, 0, 363, 363, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 480, 0, 0, 0, 0, 363,
	0, 1342, 125, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 363, 0, 363, 0,
	363, 0, 0, 480, 0, 0, 0, 0, 480, 480,
	480, 0, 480, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 480, 480, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 1252, 0, 0, 0, 1253, 0, 0, 0, 0,
	0, 363, 363, 363, 1101, 125, 1260, 1261, 0, 0,
	0, 0, 1267, 0, 0, 1270, 1271, 0, 0, 0,
	0, 0, 0, 1277, 0, 0, 0, 1279, 0, 0,
	1282, 1283, 1284, 1285, 1286, 1404, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 703, 0, 0,
	0, 1014, 0, 480, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1044, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	1331, 0, 0, 375, 1048, 1049, 0, 0, 0, 0,
	0, 363, 760, 0, 0, 0, 0, 0, 0, 363,
	0, 0, 0, 1069, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 808, 0, 1456, 480, 0, 0, 792,
	795, 0, 668, 0, 0, 363, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 480, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	610, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 363, 0,
	363, 0, 363, 0, 0, 0, 0, 363, 0, 363,
	363, 363, 125, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1256, 0, 617, 444, 0, 0, 363, 125,
	0, 0, 0, 0, 0, 0, 0, 0, 1530, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1539, 1421, 1422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 363, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 821, 363, 363,
	363, 0, 0, 0, 1311, 1312, 0, 411, 821, 821,
	821, 821, 821, 0, 0, 1241, 0, 0, 0, 0,
	0, 363, 0, 0, 1101, 0, 1337, 125, 0, 0,
	0, 1470, 0, 821, 0, 0, 0, 821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1486, 0, 123, 0, 0, 357, 0, 0,
	0, 948, 0, 0, 123, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 466, 466, 966,
	0, 0, 0, 0, 0, 0, 123, 0, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 975, 976,
	977, 978, 0, 0, 668, 123, 123, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 123,
	1044, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1543, 0, 0, 0, 1545, 0, 0,
	0, 0, 0, 0, 0, 668, 0, 0, 1554, 1555,
	0, 0, 0, 1028, 1029, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 1670, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 1575,
	0, 0, 1579, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1590, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1468, 0, 30, 0, 0, 480, 0, 0,
	1399, 0, 0, 0, 0, 0, 0, 1125, 31, 32,
	33, 65, 35, 36, 0, 1722, 0, 0, 0, 0,
	0, 0, 0, 821, 0, 0, 0, 1406, 69, 0,
	0, 0, 0, 37, 59, 60, 0, 62, 480, 0,
	0, 0, 0, 63, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 480, 0, 0, 1180, 1647, 0, 0,
	0, 0, 49, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 64, 0, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	0, 1671, 1672, 1673, 1674, 0, 1678, 0, 1679, 1680,
	0, 480, 0, 0, 1044, 0, 0, 1471, 1473, 0,
	0, 0, 0, 0, 0, 0, 1691, 1560, 1692, 1693,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1473, 1701, 0, 0, 0, 40, 42,
	45, 44, 47, 0, 61, 1707, 0, 0, 0, 0,
	480, 0, 480, 0, 617, 0, 0, 0, 0, 0,
	1587, 1588, 1589, 0, 0, 0, 0, 48, 68, 67,
	0, 0, 57, 58, 46, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 50, 51, 0, 52, 53, 54, 55, 0, 0,
	0, 0, 1276, 0, 1612, 1536, 1537, 1538, 0, 0,
	0, 0, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 1291, 1292, 795, 0, 0, 123, 0, 123, 828,
	0, 0, 0, 0, 0, 1772, 1773, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1468, 0, 30, 0,
	1468, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1044, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 66, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 480, 0, 0, 0, 0,
	0, 0, 0, 1595, 0, 0, 0, 0, 0, 0,
	0, 1468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 480,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 1640, 0, 1642, 0, 1643, 0, 123, 0,
	0, 1595, 0, 1595, 1595, 1595, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 123, 0, 0, 123,
	0, 0, 0, 943, 0, 0, 0, 0, 0, 0,
	0, 0, 1595, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1760, 0, 0, 0,
	0, 0, 0, 0, 0, 1447, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1459, 1703, 480, 480, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1044, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 943, 0, 0, 0, 466,
	466, 0, 0, 466, 466, 466, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1595, 466, 466,
	466, 466, 466, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 0, 0, 0, 0, 943, 123,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 123,
	1106, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1563, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 0, 0, 0, 0, 0, 1583, 0, 0, 1584,
	0, 0, 1586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 123, 123, 123, 123,
	0, 0, 123, 123, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 0, 0, 0,
	1236, 1237, 123, 0, 0, 0, 123, 0, 0, 1634,
	375, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 466, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 466, 123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1045, 123, 123, 123, 123, 123, 0, 0,
	0, 0, 0, 0, 0, 1329, 0, 0, 0, 123,
	0, 0, 0, 1106, 0, 0, 0, 0, 123, 123,
	0, 0, 123, 1345, 943, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 466, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1045, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1106, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1045, 0, 0, 0, 0,
	592, 580, 0, 123, 535, 595, 508, 525, 603, 526,
	529, 566, 493, 548, 229, 523, 0, 512, 488, 519,
	489, 510, 537, 161, 541, 507, 582, 551, 594, 195,
	0, 513, 240, 568, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 601, 198,
	557, 0, 280, 215, 0, 0, 0, 539, 584, 546,
	576, 534, 567, 498, 556, 596, 524, 564, 597, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 1132, 1133, 0, 0, 0, 0, 0, 146,
	0, 561, 591, 521, 563, 565, 605, 487, 558, 0,
	491, 494, 602, 587, 516, 517, 1356, 0, 0, 0,
	0, 0, 0, 538, 547, 573, 532, 0, 0, 0,
	0, 0, 0, 0, 0, 514, 0, 555, 0, 0,
	0, 495, 492, 0, 0, 0, 0, 536, 0, 0,
	0, 497, 0, 515, 574, 0, 485, 173, 578, 586,
	533, 314, 590, 531, 530, 593, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	583, 511, 520, 153, 518, 261, 237, 304, 554, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 490, 0, 282, 307, 328, 144,
	506, 579, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 502,
	505, 500, 501, 549, 550, 598, 599, 600, 575, 496,
	0, 503, 504, 0, 581, 588, 589, 553, 126, 136,
	197, 325, 254, 169, 308, 486, 499, 157, 509, 0,
	0, 522, 527, 528, 540, 542, 543, 544, 545, 552,
	559, 560, 562, 569, 570, 571, 572, 577, 585, 604,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 592,
	580, 0, 0, 535, 595, 508, 525, 603, 526, 529,
	566, 493, 548, 229, 523, 0, 512, 488, 519, 489,
	510, 537, 161, 541, 507, 582, 551, 594, 195, 0,
	513, 240, 568, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 601, 198, 557,
	0, 280, 215, 0, 0, 0, 539, 584, 546, 576,
	534, 567, 498, 556, 596, 524, 564, 597, 187, 150,
	130, 226, 281, 168, 0, 0, 0, 112, 113, 114,
	0, 1132, 1133, 0, 0, 0, 0, 0, 146, 0,
	561, 591, 521, 563, 565, 605, 487, 558, 0, 491,
	494, 602, 587, 516, 517, 0, 0, 0, 0, 0,
	0, 0, 538, 547, 573, 532, 0, 0, 0, 0,
	0, 0, 0, 0, 514, 0, 555, 0, 0, 0,
	495, 492, 0, 0, 0, 0, 536, 0, 0, 0,
	497, 0, 515, 574, 0, 485, 173, 578, 586, 533,
	314, 590, 531, 530, 593, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 583,
	511, 520, 153, 518, 261, 237, 304, 554, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 490, 0, 282, 307, 328, 144, 506,
	579, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 502, 505,
	500, 501, 549, 550, 598, 599, 600, 575, 496, 0,
	503, 504, 0, 581, 588, 589, 553, 126, 136, 197,
	325, 254, 169, 308, 486, 499, 157, 509, 0, 0,
	522, 527, 528, 540, 542, 543, 544, 545, 552, 559,
	560, 562, 569, 570, 571, 572, 577, 585, 604, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 592, 580,
	0, 0, 535, 595, 508, 525, 603, 526, 529, 566,
	493, 548, 229, 523, 0, 512, 488, 519, 489, 510,
	537, 161, 541, 507, 582, 551, 594, 195, 0, 513,
	240, 568, 272, 152, 203, 201, 291, 166, 162, 160,
	151, 183, 207, 239, 288, 233, 601, 198, 557, 0,
	280, 215, 0, 0, 0, 539, 584, 546, 576, 534,
	567, 498, 556, 596, 524, 564, 597, 187, 150, 130,
	226, 281, 168, 0, 0, 0, 112, 113, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 146, 0, 561,
	591, 521, 563, 565, 605, 487, 558, 0, 491, 494,
	602, 587, 516, 517, 0, 0, 0, 0, 0, 0,
	0, 538, 547, 573, 532, 0, 0, 0, 0, 0,
	0, 1460, 0, 514, 0, 555, 0, 0, 0, 495,
	492, 0, 0, 0, 0, 536, 0, 0, 0, 497,
	0, 515, 574, 0, 485, 173, 578, 586, 533, 314,
	590, 531, 530, 593, 251, 0, 285, 177, 194, 142,
	191, 127, 138, 0, 175, 225, 259, 263, 583, 511,
	520, 153, 518, 261, 237, 304, 554, 241, 260, 199,
	293, 252, 303, 315, 316, 158, 219, 309, 289, 312,
	324, 277, 131, 287, 301, 147, 271, 0, 0, 0,
	133, 299, 284, 213, 188, 189, 132, 0, 257, 159,
	171, 155, 228, 296, 297, 154, 327, 139, 311, 135,
	140, 310, 221, 292, 300, 214, 206, 134, 298, 212,
	205, 193, 165, 179, 249, 202, 250, 180, 217, 216,
	218, 0, 490, 0, 282, 307, 328, 144, 506, 579,
	290, 320, 323, 0, 253, 145, 172, 164, 248, 170,
	196, 319, 321, 322, 220, 141, 182, 278, 192, 200,
	256, 326, 236, 262, 148, 306, 279, 502, 505, 500,
	501, 549, 550, 598, 599, 600, 575, 496, 0, 503,
	504, 0, 581, 588, 589, 553, 126, 136, 197, 325,
	254, 169, 308, 486, 499, 157, 509, 0, 0, 522,
	527, 528, 540, 542, 543, 544, 545, 552, 559, 560,
	562, 569, 570, 571, 572, 577, 585, 604, 128, 129,
	137, 143, 149, 156, 163, 167, 174, 178, 181, 184,
	185, 186, 190, 204, 208, 209, 210, 211, 222, 223,
	224, 227, 230, 231, 232, 234, 235, 238, 242, 243,
	244, 245, 246, 247, 255, 258, 264, 265, 266, 267,
	268, 269, 270, 273, 274, 275, 276, 283, 286, 294,
	295, 305, 313, 317, 176, 302, 318, 592, 580, 0,
	0, 535, 595, 508, 525, 603, 526, 529, 566, 493,
	548, 229, 523, 0, 512, 488, 519, 489, 510, 537,
	161, 541, 507, 582, 551, 594, 195, 0, 513, 240,
	568, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 601, 198, 557, 0, 280,
	215, 0, 0, 0, 539, 584, 546, 576, 534, 567,
	498, 556, 596, 524, 564, 597, 187, 150, 130, 226,
	281, 168, 64, 0, 0, 112, 113, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 561, 591,
	521, 563, 565, 605, 487, 558, 0, 491, 494, 602,
	587, 516, 517, 0, 0, 0, 0, 0, 0, 0,
	538, 547, 573, 532, 0, 0, 0, 0, 0, 0,
	0, 0, 514, 0, 555, 0, 0, 0, 495, 492,
	0, 0, 0, 0, 536, 0, 0, 0, 497, 0,
	515, 574, 0, 485, 173, 578, 586, 533, 314, 590,
	531, 530, 593, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 583, 511, 520,
	153, 518, 261, 237, 304, 554, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 490, 0, 282, 307, 328, 144, 506, 579, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 502, 505, 500, 501,
	549, 550, 598, 599, 600, 575, 496, 0, 503, 504,
	0, 581, 588, 589, 553, 126, 136, 197, 325, 254,
	169, 308, 486, 499, 157, 509, 0, 0, 522, 527,
	528, 540, 542, 543, 544, 545, 552, 559, 560, 562,
	569, 570, 571, 572, 577, 585, 604, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 592, 580, 0, 0,
	535, 595, 508, 525, 603, 526, 529, 566, 493, 548,
	229, 523, 0, 512, 488, 519, 489, 510, 537, 161,
	541, 507, 582, 551, 594, 195, 0, 513, 240, 568,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 601, 198, 557, 0, 280, 215,
	0, 0, 0, 539, 584, 546, 576, 534, 567, 498,
	556, 596, 524, 564, 597, 187, 150, 130, 226, 281,
	168, 0, 0, 0, 112, 113, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 146, 0, 561, 591, 521,
	563, 565, 605, 487, 558, 0, 491, 494, 602, 587,
	516, 517, 0, 0, 0, 0, 0, 0, 0, 538,
	547, 573, 532, 0, 0, 0, 0, 0, 0, 1346,
	0, 514, 0, 555, 0, 0, 0, 495, 492, 0,
	0, 0, 0, 536, 0, 0, 0, 497, 0, 515,
	574, 0, 485, 173, 578, 586, 533, 314, 590, 531,
	530, 593, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 583, 511, 520, 153,
	518, 261, 237, 304, 554, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	490, 0, 282, 307, 328, 144, 506, 579, 290, 320,
	323, 0, 253, 145, 172, 164, 248, 170, 196, 319,
	321, 322, 220, 141, 182, 278, 192, 200, 256, 326,
	236, 262, 148, 306, 279, 502, 505, 500, 501, 549,
	550, 598, 599, 600, 575, 496, 0, 503, 504, 0,
	581, 588, 589, 553, 126, 136, 197, 325, 254, 169,
	308, 486, 499, 157, 509, 0, 0, 522, 527, 528,
	540, 542, 543, 544, 545, 552, 559, 560, 562, 569,
	570, 571, 572, 577, 585, 604, 128, 129, 137, 143,
	149, 156, 163, 167, 174, 178, 181, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 222, 223, 224, 227,
	230, 231, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 283, 286, 294, 295, 305,
	313, 317, 176, 302, 318, 592, 580, 0, 0, 535,
	595, 508, 525, 603, 526, 529, 566, 493, 548, 229,
	523, 0, 512, 488, 519, 489, 510, 537, 161, 541,
	507, 582, 551, 594, 195, 0, 513, 240, 568, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 601, 198, 557, 0, 280, 215, 0,
	0, 0, 539, 584, 546, 576, 534, 567, 498, 556,
	596, 524, 564, 597, 187, 150, 130, 226, 281, 168,
	0, 0, 0, 112, 113, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 561, 591, 521, 563,
	565, 605, 487, 558, 0, 491, 494, 602, 587, 516,
	517, 0, 0, 0, 0, 0, 0, 0, 538, 547,
	573, 532, 0, 0, 0, 0, 0, 0, 1078, 0,
	514, 0, 555, 0, 0, 0, 495, 492, 0, 0,
	0, 0, 536, 0, 0, 0, 497, 0, 515, 574,
	0, 485, 173, 578, 586, 533, 314, 590, 531, 530,
	593, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 583, 511, 520, 153, 518,
	261, 237, 304, 554, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 490,
	0, 282, 307, 328, 144, 506, 579, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 502, 505, 500, 501, 549, 550,
	598, 599, 600, 575, 496, 0, 503, 504, 0, 581,
	588, 589, 553, 126, 136, 197, 325, 254, 169, 308,
	486, 499, 157, 509, 0, 0, 522, 527, 528, 540,
	542, 543, 544, 545, 552, 559, 560, 562, 569, 570,
	571, 572, 577, 585, 604, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 592, 580, 0, 0, 535, 595,
	508, 525, 603, 526, 529, 566, 493, 548, 229, 523,
	0, 512, 488, 519, 489, 510, 537, 161, 541, 507,
	582, 551, 594, 195, 0, 513, 240, 568, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 601, 198, 557, 0, 280, 215, 0, 0,
	0, 539, 584, 546, 576, 534, 567, 498, 556, 596,
	524, 564, 597, 187, 150, 130, 226, 281, 168, 0,
	0, 0, 112, 113, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 561, 591, 521, 563, 565,
	605, 487, 558, 0, 491, 494, 602, 587, 516, 517,
	0, 0, 0, 0, 0, 0, 0, 538, 547, 573,
	532, 0, 0, 0, 0, 0, 0, 0, 0, 514,
	0, 555, 0, 0, 0, 495, 492, 0, 0, 0,
	0, 536, 0, 0, 0, 497, 0, 515, 574, 0,
	485, 173, 578, 586, 533, 314, 590, 531, 530, 593,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 583, 511, 520, 153, 518, 261,
	237, 304, 554, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 490, 0,
	282, 307, 328, 144, 506, 579, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 502, 505, 500, 501, 549, 550, 598,
	599, 600, 575, 496, 0, 503, 504, 0, 581, 588,
	589, 553, 126, 136, 197, 325, 254, 169, 308, 486,
	499, 157, 509, 0, 0, 522, 527, 528, 540, 542,
	543, 544, 545, 552, 559, 560, 562, 569, 570, 571,
	572, 577, 585, 604, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 592, 580, 0, 0, 535, 595, 508,
	525, 603, 526, 529, 566, 493, 548, 229, 523, 0,
	512, 488, 519, 489, 510, 537, 161, 541, 507, 582,
	551, 594, 195, 0, 513, 240, 568, 272, 152, 203,
	201, 291, 166, 162, 160, 151, 183, 207, 239, 288,
	233, 601, 198, 557, 0, 280, 215, 0, 0, 0,
	539, 584, 546, 576, 534, 567, 498, 556, 596, 524,
	564, 597, 187, 150, 130, 226, 281, 168, 0, 0,
	0, 112, 113, 114, 0, 0, 0, 0, 0, 0,
	0, 0, 146, 0, 561, 591, 521, 563, 565, 605,
	487, 558, 0, 491, 494, 602, 587, 516, 517, 0,
	0, 0, 0, 0, 0, 0, 538, 547, 573, 532,
	0, 0, 0, 0, 0, 0, 0, 0, 514, 0,
	555, 0, 0, 0, 495, 492, 0, 0, 0, 0,
	536, 0, 0, 0, 497, 0, 515, 574, 0, 485,
	173, 578, 586, 533, 314, 590, 531, 530, 593, 251,
	0, 285, 177, 194, 142, 191, 127, 138, 0, 175,
	225, 259, 263, 583, 511, 520, 153, 518, 261, 237,
	304, 554, 241, 260, 199, 293, 252, 303, 315, 316,
	158, 219, 309, 289, 312, 324, 277, 131, 287, 301,
	147, 271, 0, 0, 0, 133, 299, 284, 213, 188,
	189, 132, 0, 257, 159, 171, 155, 228, 296, 297,
	154, 327, 139, 311, 135, 483, 310, 221, 292, 300,
	214, 206, 134, 298, 212, 205, 193, 165, 179, 249,
	202, 250, 180, 217, 216, 218, 0, 490, 0, 282,
	307, 328, 144, 506, 579, 290, 320, 323, 0, 253,
	145, 172, 164, 248, 170, 196, 319, 321, 322, 484,
	482, 477, 476, 192, 200, 256, 326, 236, 262, 148,
	306, 279, 502, 505, 500, 501, 549, 550, 598, 599,
	600, 575, 496, 0, 503, 504, 0, 581, 588, 589,
	553, 126, 136, 197, 325, 254, 169, 308, 486, 499,
	157, 509, 0, 0, 522, 527, 528, 540, 542, 543,
	544, 545, 552, 559, 560, 562, 569, 570, 571, 572,
	577, 585, 604, 128, 129, 137, 143, 149, 156, 163,
	167, 174, 178, 181, 184, 185, 186, 190, 204, 208,
	209, 210, 211, 222, 223, 224, 227, 230, 231, 232,
	234, 235, 238, 242, 243, 244, 245, 246, 247, 255,
	258, 264, 265, 266, 267, 268, 269, 270, 273, 274,
	275, 276, 283, 286, 294, 295, 305, 313, 317, 176,
	302, 318, 592, 580, 0, 0, 535, 595, 508, 525,
	603, 526, 529, 566, 493, 548, 229, 523, 0, 512,
	488, 519, 489, 510, 537, 161, 541, 507, 582, 551,
	594, 195, 0, 513, 240, 568, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	601, 198, 557, 0, 280, 215, 0, 0, 0, 539,
	584, 546, 576, 534, 567, 498, 556, 596, 524, 564,
	597, 187, 150, 130, 226, 281, 168, 0, 0, 0,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 561, 591, 521, 563, 565, 605, 487,
	558, 0, 491, 494, 602, 587, 516, 517, 0, 0,
	0, 0, 0, 0, 0, 538, 547, 573, 532, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 0, 555,
	0, 0, 0, 495, 492, 0, 0, 0, 0, 536,
	0, 0, 0, 497, 0, 515, 574, 0, 485, 173,
	578, 586, 533, 314, 590, 531, 530, 593, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 583, 511, 520, 153, 518, 261, 237, 304,
	554, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 830, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 483, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 490, 0, 282, 307,
	328, 144, 506, 579, 290, 320, 323, 0, 253, 145,
	172, 164, 248, 170, 196, 319, 321, 322, 484, 482,
	477, 476, 192, 200, 256, 326, 236, 262, 148, 306,
	279, 502, 505, 500, 501, 549, 550, 598, 599, 600,
	575, 496, 0, 503, 504, 0, 581, 588, 589, 553,
	126, 136, 197, 325, 254, 169, 308, 486, 499, 157,
	509, 0, 0, 522, 527, 528, 540, 542, 543, 544,
	545, 552, 559, 560, 562, 569, 570, 571, 572, 577,
	585, 604, 128, 129, 137, 143, 149, 156, 163, 167,
	174, 178, 181, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 222, 223, 224, 227, 230, 231, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 283, 286, 294, 295, 305, 313, 317, 176, 302,
	318, 592, 580, 0, 0, 535, 595, 508, 525, 603,
	526, 529, 566, 493, 548, 229, 523, 0, 512, 488,
	519, 489, 510, 537, 161, 541, 507, 582, 551, 594,
	195, 0, 513, 240, 568, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 601,
	198, 557, 0, 280, 215, 0, 0, 0, 539, 584,
	546, 576, 534, 567, 498, 556, 596, 524, 564, 597,
	187, 150, 130, 226, 281, 168, 0, 0, 0, 112,
	113, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	146, 0, 561, 591, 521, 563, 565, 605, 487, 558,
	0, 491, 494, 602, 587, 516, 517, 0, 0, 0,
	0, 0, 0, 0, 538, 547, 573, 532, 0, 0,
	0, 0, 0, 0, 0, 0, 514, 0, 555, 0,
	0, 0, 495, 492, 0, 0, 0, 0, 536, 0,
	0, 0, 497, 0, 515, 574, 0, 485, 173, 578,
	586, 533, 314, 590, 531, 530, 593, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 583, 511, 520, 153, 518, 261, 237, 304, 554,
	241, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 474, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 483, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 490, 0, 282, 307, 328,
	144, 506, 579, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 484, 482, 477,
	476, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	502, 505, 500, 501, 549, 550, 598, 599, 600, 575,
	496, 0, 503, 504, 0, 581, 588, 589, 553, 126,
	136, 197, 325, 254, 169, 308, 486, 499, 157, 509,
	0, 0, 522, 527, 528, 540, 542, 543, 544, 545,
	552, 559, 560, 562, 569, 570, 571, 572, 577, 585,
	604, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 176, 302, 318,
	229, 0, 0, 1016, 0, 380, 0, 0, 0, 161,
	0, 379, 0, 0, 0, 195, 0, 1017, 240, 0,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 423, 198, 0, 0, 280, 215,
	0, 0, 0, 0, 0, 414, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 150, 130, 226, 281,
	168, 64, 0, 0, 112, 113, 114, 401, 400, 403,
	404, 405, 406, 0, 0, 146, 402, 407, 408, 409,
	0, 0, 0, 0, 377, 394, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 464,
	0, 0, 0, 437, 0, 393, 0, 0, 386, 387,
	389, 388, 390, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 436, 0, 0, 314, 0, 0,
	434, 0, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 0, 0, 0, 153,
	0, 261, 237, 304, 0, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	0, 0, 282, 307, 328, 144, 0, 0, 290, 320,
	323, 0, 253, 145, 172, 164, 248, 170, 196, 319,
	321, 322, 220, 141, 182, 278, 192, 200, 256, 326,
	236, 262, 148, 306, 279, 424, 435, 430, 431, 428,
	429, 427, 426, 425, 438, 416, 417, 418, 419, 421,
	0, 432, 433, 420, 126, 136, 197, 325, 254, 169,
	308, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 129, 137, 143,
	149, 156, 163, 167, 174, 178, 181, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 222, 223, 224, 227,
	230, 231, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 283, 286, 294, 295, 305,
	313, 317, 176, 302, 318, 229, 0, 0, 0, 0,
	380, 0, 0, 0, 161, 0, 379, 0, 0, 0,
	195, 0, 0, 240, 0, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 423,
	198, 0, 0, 280, 215, 0, 0, 0, 0, 0,
	414, 415, 0, 0, 0, 0, 0, 0, 1123, 0,
	187, 150, 130, 226, 281, 168, 64, 0, 0, 112,
	113, 114, 401, 400, 403, 404, 405, 406, 0, 0,
	146, 402, 407, 408, 409, 1124, 0, 0, 0, 377,
	394, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 0, 0, 0, 0, 437, 0,
	393, 0, 0, 386, 387, 389, 388, 390, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 436,
	0, 0, 314, 0, 0, 434, 0, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 0, 0, 0, 153, 0, 261, 237, 304, 0,
	241, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 301, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 140, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 0, 0, 282, 307, 328,
	144, 0, 0, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 220, 141, 182,
	278, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	424, 435, 430, 431, 428, 429, 427, 426, 425, 438,
	416, 417, 418, 419, 421, 0, 432, 433, 420, 126,
	136, 197, 325, 254, 169, 308, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 176, 302, 318,
	229, 0, 0, 0, 0, 380, 0, 0, 0, 161,
	0, 379, 0, 0, 0, 195, 0, 0, 240, 0,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 423, 198, 0, 0, 280, 215,
	0, 0, 0, 0, 0, 414, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 150, 130, 226, 281,
	168, 64, 0, 452, 112, 113, 114, 401, 400, 403,
	404, 405, 406, 0, 0, 146, 402, 407, 408, 409,
	0, 0, 0, 0, 377, 394, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 0,
	0, 0, 0, 437, 0, 393, 0, 0, 386, 387,
	389, 388, 390, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 436, 0, 0, 314, 0, 0,
	434, 0, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 0, 0, 0, 153,
	0, 261, 237, 304, 0, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	0, 0, 282, 307, 328, 144, 0, 0, 290, 320,
	323, 0, 253, 145, 172, 164, 248, 170, 196, 319,
	321, 322, 220, 141, 182, 278, 192, 200, 256, 326,
	236, 262, 148, 306, 279, 424, 435, 430, 431, 428,
	429, 427, 426, 425, 438, 416, 417, 418, 419, 421,
	0, 432, 433, 420, 126, 136, 197, 325, 254, 169,
	308, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 129, 137, 143,
	149, 156, 163, 167, 174, 178, 181, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 222, 223, 224, 227,
	230, 231, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 283, 286, 294, 295, 305,
	313, 317, 176, 302, 318, 229, 0, 0, 0, 0,
	380, 0, 0, 0, 161, 0, 379, 0, 0, 0,
	195, 0, 0, 240, 0, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 423,
	198, 0, 0, 280, 215, 0, 0, 0, 0, 0,
	414, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 150, 130, 226, 281, 168, 64, 0, 0, 112,
	113, 114, 401, 400, 403, 404, 405, 406, 0, 0,
	146, 402, 407, 408, 409, 0, 0, 0, 0, 377,
	394, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 464, 0, 0, 0, 437, 0,
	393, 0, 0, 386, 387, 389, 388, 390, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 436,
	0, 0, 314, 0, 0, 434, 0, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 0, 0, 0, 153, 0, 261, 237, 304, 0,
	241, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 301, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 140, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 0, 0, 282, 307, 328,
	144, 0, 0, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 220, 141, 182,
	278, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	424, 435, 430, 431, 428, 429, 427, 426, 425, 438,
	416, 417, 418, 419, 421, 0, 432, 433, 420, 126,
	136, 197, 325, 254, 169, 308, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 176, 302, 318,
	229, 0, 0, 0, 0, 380, 0, 0, 0, 161,
	0, 379, 0, 0, 0, 195, 0, 0, 240, 0,
	272, 152, 203, 201, 291, 166, 162, 160, 151, 183,
	207, 239, 288, 233, 423, 198, 0, 0, 280, 215,
	0, 0, 0, 0, 0, 414, 415, 0, 0, 0,
	0, 0, 0, 0, 0, 187, 150, 130, 226, 281,
	168, 64, 0, 0, 112, 113, 114, 401, 1034, 403,
	404, 405, 406, 0, 0, 146, 402, 407, 408, 409,
	0, 0, 0, 0, 377, 394, 0, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 391, 392, 464,
	0, 0, 0, 437, 0, 393, 0, 0, 386, 387,
	389, 388, 390, 395, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 436, 0, 0, 314, 0, 0,
	434, 0, 251, 0, 285, 177, 194, 142, 191, 127,
	138, 0, 175, 225, 259, 263, 0, 0, 0, 153,
	0, 261, 237, 304, 0, 241, 260, 199, 293, 252,
	303, 315, 316, 158, 219, 309, 289, 312, 324, 277,
	131, 287, 301, 147, 271, 0, 0, 0, 133, 299,
	284, 213, 188, 189, 132, 0, 257, 159, 171, 155,
	228, 296, 297, 154, 327, 139, 311, 135, 140, 310,
	221, 292, 300, 214, 206, 134, 298, 212, 205, 193,
	165, 179, 249, 202, 250, 180, 217, 216, 218, 0,
	0, 0, 282, 307, 328, 144, 0, 0, 290, 320,
	323, 0, 253, 145, 172, 164, 248, 170, 196, 319,
	321, 322, 220, 141, 182, 278, 192, 200, 256, 326,
	236, 262, 148, 306, 279, 424, 435, 430, 431, 428,
	429, 427, 426, 425, 438, 416, 417, 418, 419, 421,
	0, 432, 433, 420, 126, 136, 197, 325, 254, 169,
	308, 0, 0, 157, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 128, 129, 137, 143,
	149, 156, 163, 167, 174, 178, 181, 184, 185, 186,
	190, 204, 208, 209, 210, 211, 222, 223, 224, 227,
	230, 231, 232, 234, 235, 238, 242, 243, 244, 245,
	246, 247, 255, 258, 264, 265, 266, 267, 268, 269,
	270, 273, 274, 275, 276, 283, 286, 294, 295, 305,
	313, 317, 176, 302, 318, 229, 0, 0, 0, 0,
	380, 0, 0, 0, 161, 0, 379, 0, 0, 0,
	195, 0, 0, 240, 0, 272, 152, 203, 201, 291,
	166, 162, 160, 151, 183, 207, 239, 288, 233, 423,
	198, 0, 0, 280, 215, 0, 0, 0, 0, 0,
	414, 415, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 150, 130, 226, 281, 168, 64, 0, 0, 112,
	113, 114, 401, 1031, 403, 404, 405, 406, 0, 0,
	146, 402, 407, 408, 409, 0, 0, 0, 0, 377,
	394, 0, 422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 391, 392, 464, 0, 0, 0, 437, 0,
	393, 0, 0, 386, 387, 389, 388, 390, 395, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 436,
	0, 0, 314, 0, 0, 434, 0, 251, 0, 285,
	177, 194, 142, 191, 127, 138, 0, 175, 225, 259,
	263, 0, 0, 0, 153, 0, 261, 237, 304, 0,
	241, 260, 199, 293, 252, 303, 315, 316, 158, 219,
	309, 289, 312, 324, 277, 131, 287, 301, 147, 271,
	0, 0, 0, 133, 299, 284, 213, 188, 189, 132,
	0, 257, 159, 171, 155, 228, 296, 297, 154, 327,
	139, 311, 135, 140, 310, 221, 292, 300, 214, 206,
	134, 298, 212, 205, 193, 165, 179, 249, 202, 250,
	180, 217, 216, 218, 0, 0, 0, 282, 307, 328,
	144, 0, 0, 290, 320, 323, 0, 253, 145, 172,
	164, 248, 170, 196, 319, 321, 322, 220, 141, 182,
	278, 192, 200, 256, 326, 236, 262, 148, 306, 279,
	424, 435, 430, 431, 428, 429, 427, 426, 425, 438,
	416, 417, 418, 419, 421, 0, 432, 433, 420, 126,
	136, 197, 325, 254, 169, 308, 0, 0, 157, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 128, 129, 137, 143, 149, 156, 163, 167, 174,
	178, 181, 184, 185, 186, 190, 204, 208, 209, 210,
	211, 222, 223, 224, 227, 230, 231, 232, 234, 235,
	238, 242, 243, 244, 245, 246, 247, 255, 258, 264,
	265, 266, 267, 268, 269, 270, 273, 274, 275, 276,
	283, 286, 294, 295, 305, 313, 317, 176, 302, 318,
	445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 229, 0, 0, 0, 0, 380, 0,
	0, 0, 161, 0, 379, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 423, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 414, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 64, 0, 0, 112, 113, 114,
	401, 400, 403, 404, 405, 406, 0, 0, 146, 402,
	407, 408, 409, 0, 0, 0, 0, 377, 394, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 0, 0, 0, 0, 437, 0, 393, 0,
	0, 386, 387, 389, 388, 390, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 436, 0, 0,
	314, 0, 0, 434, 0, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 0, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 424, 435,
	430, 431, 428, 429, 427, 426, 425, 438, 416, 417,
	418, 419, 421, 0, 432, 433, 420, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 229, 0,
	0, 0, 0, 380, 0, 0, 0, 161, 0, 379,
	0, 0, 0, 195, 0, 0, 240, 0, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 423, 198, 0, 0, 280, 215, 0, 0,
	0, 0, 0, 414, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 130, 226, 281, 168, 64,
	0, 0, 112, 113, 114, 401, 400, 403, 404, 405,
	406, 0, 0, 146, 402, 407, 408, 409, 0, 0,
	0, 0, 377, 394, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 0, 0, 0,
	0, 437, 0, 393, 0, 0, 386, 387, 389, 388,
	390, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 436, 0, 0, 314, 0, 0, 434, 0,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 0, 0, 0, 153, 0, 261,
	237, 304, 0, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 0, 0,
	282, 307, 328, 144, 0, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 424, 435, 430, 431, 428, 429, 427,
	426, 425, 438, 416, 417, 418, 419, 421, 0, 432,
	433, 420, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 423, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 414, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 64, 0, 0, 112, 113, 114,
	401, 400, 403, 404, 405, 406, 0, 0, 146, 402,
	407, 408, 409, 0, 0, 0, 0, 0, 394, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 0, 0, 0, 0, 437, 0, 393, 0,
	0, 386, 387, 389, 388, 390, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 436, 0, 0,
	314, 0, 0, 434, 0, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 1766, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 424, 435,
	430, 431, 428, 429, 427, 426, 425, 438, 416, 417,
	418, 419, 421, 0, 432, 433, 420, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 195, 0, 0, 240, 0, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 423, 198, 0, 0, 280, 215, 0, 0,
	0, 0, 0, 414, 415, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 130, 226, 281, 168, 64,
	0, 452, 112, 113, 114, 401, 400, 403, 404, 405,
	406, 0, 0, 146, 402, 407, 408, 409, 0, 0,
	0, 0, 0, 394, 0, 422, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 391, 392, 0, 0, 0,
	0, 437, 0, 393, 0, 0, 386, 387, 389, 388,
	390, 395, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 436, 0, 0, 314, 0, 0, 434, 0,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 0, 0, 0, 153, 0, 261,
	237, 304, 0, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 0, 0,
	282, 307, 328, 144, 0, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 424, 435, 430, 431, 428, 429, 427,
	426, 425, 438, 416, 417, 418, 419, 421, 0, 432,
	433, 420, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 423, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 414, 415,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 64, 0, 0, 112, 113, 114,
	401, 400, 403, 404, 405, 406, 0, 0, 146, 402,
	407, 408, 409, 0, 0, 0, 0, 0, 394, 0,
	422, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	391, 392, 0, 0, 0, 0, 437, 0, 393, 0,
	0, 386, 387, 389, 388, 390, 395, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 436, 0, 0,
	314, 0, 0, 434, 0, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 0, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 424, 435,
	430, 431, 428, 429, 427, 426, 425, 438, 416, 417,
	418, 419, 421, 0, 432, 433, 420, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 0,
	0, 0, 0, 195, 0, 0, 240, 0, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 0, 198, 0, 0, 280, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 130, 226, 281, 168, 0,
	0, 0, 112, 113, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 711, 710, 720, 721, 713, 714, 715, 716, 717,
	718, 719, 712, 0, 0, 722, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 314, 0, 0, 0, 0,
	251, 0, 285, 177, 194, 142, 191, 127, 138, 0,
	175, 225, 259, 263, 0, 0, 0, 153, 0, 261,
	237, 304, 0, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 0, 0,
	282, 307, 328, 144, 0, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 229, 0, 0, 0, 807, 0, 0,
	0, 0, 161, 0, 0, 0, 0, 0, 195, 0,
	0, 240, 0, 272, 152, 203, 201, 291, 166, 162,
	160, 151, 183, 207, 239, 288, 233, 0, 198, 0,
	0, 280, 215, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 187, 150,
	130, 226, 281, 168, 0, 0, 0, 112, 113, 114,
	0, 809, 0, 0, 0, 0, 0, 0, 146, 0,
	0, 0, 0, 0, 700, 701, 699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	314, 0, 0, 0, 0, 251, 0, 285, 177, 194,
	142, 191, 127, 138, 0, 175, 225, 259, 263, 0,
	0, 0, 153, 0, 261, 237, 304, 0, 241, 260,
	199, 293, 252, 303, 315, 316, 158, 219, 309, 289,
	312, 324, 277, 131, 287, 301, 147, 271, 0, 0,
	0, 133, 299, 284, 213, 188, 189, 132, 0, 257,
	159, 171, 155, 228, 296, 297, 154, 327, 139, 311,
	135, 140, 310, 221, 292, 300, 214, 206, 134, 298,
	212, 205, 193, 165, 179, 249, 202, 250, 180, 217,
	216, 218, 0, 0, 0, 282, 307, 328, 144, 0,
	0, 290, 320, 323, 0, 253, 145, 172, 164, 248,
	170, 196, 319, 321, 322, 220, 141, 182, 278, 192,
	200, 256, 326, 236, 262, 148, 306, 279, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 136, 197,
	325, 254, 169, 308, 0, 0, 157, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	129, 137, 143, 149, 156, 163, 167, 174, 178, 181,
	184, 185, 186, 190, 204, 208, 209, 210, 211, 222,
	223, 224, 227, 230, 231, 232, 234, 235, 238, 242,
	243, 244, 245, 246, 247, 255, 258, 264, 265, 266,
	267, 268, 269, 270, 273, 274, 275, 276, 283, 286,
	294, 295, 305, 313, 317, 176, 302, 318, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 1148, 0,
	0, 0, 0, 195, 0, 0, 240, 0, 272, 152,
	203, 201, 291, 166, 162, 160, 151, 183, 207, 239,
	288, 233, 0, 198, 0, 0, 280, 215, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 187, 150, 130, 226, 281, 168, 0,
	0, 0, 112, 113, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 146, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 1147, 314, 0, 0, 0, 1143,
	1140, 0, 1141, 1142, 194, 613, 191, 127, 138, 1138,
	1145, 225, 259, 263, 0, 0, 0, 153, 0, 261,
	237, 304, 0, 241, 260, 199, 293, 252, 303, 315,
	316, 158, 219, 309, 289, 312, 324, 277, 131, 287,
	301, 147, 271, 0, 0, 0, 133, 299, 284, 213,
	188, 189, 132, 0, 257, 159, 171, 155, 228, 296,
	297, 154, 327, 139, 311, 135, 140, 310, 221, 292,
	300, 214, 206, 134, 298, 212, 205, 193, 165, 179,
	249, 202, 250, 180, 217, 216, 218, 0, 0, 0,
	282, 307, 328, 144, 0, 0, 290, 320, 323, 0,
	253, 145, 172, 164, 248, 170, 196, 319, 321, 322,
	220, 141, 182, 278, 192, 200, 256, 326, 236, 262,
	148, 306, 279, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 136, 197, 325, 254, 169, 308, 0,
	0, 157, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 129, 137, 143, 149, 156,
	163, 167, 174, 178, 181, 184, 185, 186, 190, 204,
	208, 209, 210, 211, 222, 223, 224, 227, 230, 231,
	232, 234, 235, 238, 242, 243, 244, 245, 246, 247,
	255, 258, 264, 265, 266, 267, 268, 269, 270, 273,
	274, 275, 276, 283, 286, 294, 295, 305, 313, 317,
	176, 302, 318, 31, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 195, 0, 0, 240, 0, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	0, 198, 0, 0, 280, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 150, 130, 226, 281, 168, 64, 0, 452,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 314, 0, 0, 0, 0, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 0, 0, 0, 153, 0, 261, 237, 304,
	0, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 301, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 140, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 0, 0, 282, 307,
	328, 144, 0, 0, 290, 320, 323, 0, 253, 145,
	172, 164, 248, 170, 196, 319, 321, 322, 220, 141,
	182, 278, 192, 200, 256, 326, 236, 262, 148, 306,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 136, 197, 325, 254, 169, 308, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 129, 137, 143, 149, 156, 163, 167,
	174, 178, 181, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 222, 223, 224, 227, 230, 231, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 283, 286, 294, 295, 305, 313, 317, 176, 302,
	318, 229, 0, 0, 0, 1105, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 195, 0, 0, 240,
	0, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 0, 198, 0, 0, 280,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 150, 130, 226,
	281, 168, 0, 0, 0, 112, 113, 114, 0, 1107,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 314, 0,
	0, 0, 0, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 0, 0, 0,
	153, 0, 261, 237, 304, 0, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 0, 0, 282, 307, 328, 144, 0, 0, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 136, 197, 325, 254,
	169, 308, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 31, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	64, 0, 0, 112, 113, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 229, 0, 0, 0, 1105, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 0, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 1107, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 314, 0, 0, 0, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 1103,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	0, 0, 0, 112, 113, 114, 0, 0, 1070, 0,
	0, 1071, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 841, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 0, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 840, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 314, 0, 0, 0, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	0, 0, 0, 112, 113, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 607,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 613, 191, 127, 138,
	611, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 0, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 0, 0, 452, 112, 113,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 314, 0, 0, 0, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	64, 0, 0, 112, 113, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 161, 0, 0, 0, 0, 0, 195,
	0, 0, 240, 0, 272, 152, 203, 201, 291, 166,
	162, 160, 151, 183, 207, 239, 288, 233, 0, 198,
	0, 0, 280, 215, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 187,
	150, 130, 226, 281, 168, 0, 0, 0, 112, 113,
	114, 0, 1107, 0, 0, 0, 0, 0, 0, 146,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 0, 0,
	0, 314, 0, 0, 0, 0, 251, 0, 285, 177,
	194, 142, 191, 127, 138, 0, 175, 225, 259, 263,
	0, 0, 0, 153, 0, 261, 237, 304, 0, 241,
	260, 199, 293, 252, 303, 315, 316, 158, 219, 309,
	289, 312, 324, 277, 131, 287, 301, 147, 271, 0,
	0, 0, 133, 299, 284, 213, 188, 189, 132, 0,
	257, 159, 171, 155, 228, 296, 297, 154, 327, 139,
	311, 135, 140, 310, 221, 292, 300, 214, 206, 134,
	298, 212, 205, 193, 165, 179, 249, 202, 250, 180,
	217, 216, 218, 0, 0, 0, 282, 307, 328, 144,
	0, 0, 290, 320, 323, 0, 253, 145, 172, 164,
	248, 170, 196, 319, 321, 322, 220, 141, 182, 278,
	192, 200, 256, 326, 236, 262, 148, 306, 279, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 136,
	197, 325, 254, 169, 308, 0, 0, 157, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 129, 137, 143, 149, 156, 163, 167, 174, 178,
	181, 184, 185, 186, 190, 204, 208, 209, 210, 211,
	222, 223, 224, 227, 230, 231, 232, 234, 235, 238,
	242, 243, 244, 245, 246, 247, 255, 258, 264, 265,
	266, 267, 268, 269, 270, 273, 274, 275, 276, 283,
	286, 294, 295, 305, 313, 317, 176, 302, 318, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 161, 0,
	0, 0, 0, 0, 195, 0, 0, 240, 0, 272,
	152, 203, 201, 291, 166, 162, 160, 151, 183, 207,
	239, 288, 233, 0, 198, 0, 0, 280, 215, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 187, 150, 130, 226, 281, 168,
	0, 0, 0, 112, 113, 114, 0, 809, 0, 0,
	0, 0, 0, 0, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 0, 0, 0, 314, 0, 0, 0,
	0, 251, 0, 285, 177, 194, 142, 191, 127, 138,
	0, 175, 225, 259, 263, 0, 0, 0, 153, 0,
	261, 237, 304, 0, 241, 260, 199, 293, 252, 303,
	315, 316, 158, 219, 309, 289, 312, 324, 277, 131,
	287, 301, 147, 271, 0, 0, 0, 133, 299, 284,
	213, 188, 189, 132, 0, 257, 159, 171, 155, 228,
	296, 297, 154, 327, 139, 311, 135, 140, 310, 221,
	292, 300, 214, 206, 134, 298, 212, 205, 193, 165,
	179, 249, 202, 250, 180, 217, 216, 218, 0, 0,
	0, 282, 307, 328, 144, 0, 0, 290, 320, 323,
	0, 253, 145, 172, 164, 248, 170, 196, 319, 321,
	322, 220, 141, 182, 278, 192, 200, 256, 326, 236,
	262, 148, 306, 279, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 136, 197, 325, 254, 169, 308,
	0, 0, 157, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 129, 137, 143, 149,
	156, 163, 167, 174, 178, 181, 184, 185, 186, 190,
	204, 208, 209, 210, 211, 222, 223, 224, 227, 230,
	231, 232, 234, 235, 238, 242, 243, 244, 245, 246,
	247, 255, 258, 264, 265, 266, 267, 268, 269, 270,
	273, 274, 275, 276, 283, 286, 294, 295, 305, 313,
	317, 176, 302, 318, 823, 0, 0, 0, 0, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 195, 0, 0, 240,
	0, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 0, 198, 0, 0, 280,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 150, 130, 226,
	281, 168, 0, 0, 0, 112, 113, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 314, 0,
	0, 0, 0, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 0, 0, 0,
	153, 0, 261, 237, 304, 0, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 0, 0, 282, 307, 328, 144, 0, 0, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 136, 197, 325, 254,
	169, 308, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 229, 0, 0, 0,
	0, 0, 0, 0, 813, 161, 0, 0, 0, 0,
	0, 195, 0, 0, 240, 0, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	0, 198, 0, 0, 280, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 150, 130, 226, 281, 168, 0, 0, 0,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 314, 0, 0, 0, 0, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 0, 0, 0, 153, 0, 261, 237, 304,
	0, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 301, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 140, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 0, 0, 282, 307,
	328, 144, 0, 0, 290, 320, 323, 0, 253, 145,
	172, 164, 248, 170, 196, 319, 321, 322, 220, 141,
	182, 278, 192, 200, 256, 326, 236, 262, 148, 306,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 136, 197, 325, 254, 169, 308, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 129, 137, 143, 149, 156, 163, 167,
	174, 178, 181, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 222, 223, 224, 227, 230, 231, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 283, 286, 294, 295, 305, 313, 317, 176, 302,
	318, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 195, 0, 0, 240,
	0, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 0, 198, 0, 0, 280,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 150, 130, 226,
	281, 168, 0, 0, 0, 112, 113, 114, 0, 689,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 314, 0,
	0, 0, 0, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 0, 0, 0,
	153, 0, 261, 237, 304, 0, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 0, 0, 282, 307, 328, 144, 0, 0, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 136, 197, 325, 254,
	169, 308, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 195, 0, 0, 240, 0, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	0, 198, 0, 0, 280, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 150, 130, 226, 281, 168, 0, 0, 0,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 368, 0, 173,
	0, 0, 0, 314, 0, 0, 0, 0, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 0, 0, 0, 153, 0, 261, 237, 304,
	0, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 301, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 140, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 0, 0, 282, 307,
	328, 144, 0, 0, 290, 320, 323, 0, 253, 145,
	172, 164, 248, 170, 196, 319, 321, 322, 220, 141,
	182, 278, 192, 200, 256, 326, 236, 262, 148, 306,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 136, 197, 325, 254, 169, 308, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 129, 137, 143, 149, 156, 163, 167,
	174, 178, 181, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 222, 223, 224, 227, 230, 231, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 283, 286, 294, 295, 305, 313, 317, 367, 302,
	318, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	161, 0, 0, 0, 0, 0, 195, 0, 0, 240,
	0, 272, 152, 203, 201, 291, 166, 162, 160, 151,
	183, 207, 239, 288, 233, 0, 198, 0, 0, 280,
	215, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 187, 150, 130, 226,
	281, 168, 0, 0, 0, 112, 113, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 146, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 121, 0, 314, 0,
	0, 0, 0, 251, 0, 285, 177, 194, 142, 191,
	127, 138, 0, 175, 225, 259, 263, 0, 0, 0,
	153, 0, 261, 237, 304, 0, 241, 260, 199, 293,
	252, 303, 315, 316, 158, 219, 309, 289, 312, 324,
	277, 131, 287, 301, 147, 271, 0, 0, 0, 133,
	299, 284, 213, 188, 189, 132, 0, 257, 159, 171,
	155, 228, 296, 297, 154, 327, 139, 311, 135, 140,
	310, 221, 292, 300, 214, 206, 134, 298, 212, 205,
	193, 165, 179, 249, 202, 250, 180, 217, 216, 218,
	0, 0, 0, 282, 307, 328, 144, 0, 0, 290,
	320, 323, 0, 253, 145, 172, 164, 248, 170, 196,
	319, 321, 322, 220, 141, 182, 278, 192, 200, 256,
	326, 236, 262, 148, 306, 279, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 136, 197, 325, 254,
	169, 308, 0, 0, 157, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 129, 137,
	143, 149, 156, 163, 167, 174, 178, 181, 184, 185,
	186, 190, 204, 208, 209, 210, 211, 222, 223, 224,
	227, 230, 231, 232, 234, 235, 238, 242, 243, 244,
	245, 246, 247, 255, 258, 264, 265, 266, 267, 268,
	269, 270, 273, 274, 275, 276, 283, 286, 294, 295,
	305, 313, 317, 176, 302, 318, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 161, 0, 0, 0, 0,
	0, 195, 0, 0, 240, 0, 272, 152, 203, 201,
	291, 166, 162, 160, 151, 183, 207, 239, 288, 233,
	0, 198, 0, 0, 280, 215, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 187, 150, 130, 226, 281, 168, 0, 0, 0,
	112, 113, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	0, 0, 0, 314, 0, 0, 0, 0, 251, 0,
	285, 177, 194, 142, 191, 127, 138, 0, 175, 225,
	259, 263, 0, 0, 0, 153, 0, 261, 237, 304,
	0, 241, 260, 199, 293, 252, 303, 315, 316, 158,
	219, 309, 289, 312, 324, 277, 131, 287, 301, 147,
	271, 0, 0, 0, 133, 299, 284, 213, 188, 189,
	132, 0, 257, 159, 171, 155, 228, 296, 297, 154,
	327, 139, 311, 135, 140, 310, 221, 292, 300, 214,
	206, 134, 298, 212, 205, 193, 165, 179, 249, 202,
	250, 180, 217, 216, 218, 0, 0, 0, 282, 307,
	328, 144, 0, 0, 290, 320, 323, 0, 253, 145,
	172, 164, 248, 170, 196, 319, 321, 322, 220, 141,
	182, 278, 192, 200, 256, 326, 236, 262, 148, 306,
	279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 136, 197, 325, 254, 169, 308, 0, 0, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 129, 137, 143, 149, 156, 163, 167,
	174, 178, 181, 184, 185, 186, 190, 204, 208, 209,
	210, 211, 222, 223, 224, 227, 230, 231, 232, 234,
	235, 238, 242, 243, 244, 245, 246, 247, 255, 258,
	264, 265, 266, 267, 268, 269, 270, 273, 274, 275,
	276, 283, 286, 294, 295, 305, 313, 317, 176, 302,
	318,
}

var yyPact = [...]int{
	2812, -1000, -290, 1214, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1167,
	915, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 307, 893,
	71, 1094, 67, 526, 183, -3, 19062, 182, 1917, 19437,
	-1000, 31, -1000, 13, 19437, 22, 18687, -1000, -1000, -63,
	-75, -1000, 10779, 1055, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 898, 1132, 1137, 1164, 669, 1212, -1000, 9266,
	9266, 116, 116, 116, 7766, -1000, -1000, 15680, 19437, 19437,
	19437, -151, 111, 178, 111, -1000, -1000, -1000, -1000, -1000,
	-1000, 1094, -1000, -1000, 100, -1000, -1000, 19437, 19437, 303,
	1094, 48, -1000, -1000, -1000, 19437, 108, 526, 108, 108,
	108, 19437, -1000, 219, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19437,
	526, 1090, 364, 91, 259, 259, 259, 259, -1000, 241,
	-1000, 5432, 44, 46, -47, 1184, 41, -19, -1000, 364,
	5432, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 124,
	-1000, -1000, -1000, -1000, 19437, 18312, 138, 295, -1000, -1000,
	-1000, -1000, -1000, -1000, 652, 504, -1000, 10779, 1764, 835,
	835, -1000, -1000, 195, -1000, -1000, 11904, 11904, 11904, 11904,
	11904, 11904, 11904, 11904, 11904, 11904, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	835, 218, -1000, 10404, 835, 835, 835, 835, 835, 835,
	835, 835, 10779, 835, 835, 835, 835, 835, 835, 835,
	835, 835, 835, 835, 835, 835, 835, 835, 835, -1000,
	-1000, -1000, 1167, -1000, 915, -1000, -1000, -1000, 1081, 10779,
	10779, 1167, -1000, 967, 9266, -1000, -1000, 1022, -1000, -1000,
	-1000, -1000, 360, 1195, -1000, 12654, 217, 1194, 17937, -1000,
	16430, 17562, 833, 7377, -132, -1000, -1000, -1000, 286, 15305,
	-1000, -1000, -1000, 1083, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 811, 19437, -1000, -1000,
	76, 526, -1000, 869, -1000, 808, -1000, 847, 5432, 117,
	19437, 326, 526, 526, -1000, -1000, 1077, 274, 308, 5432,
	59, 115, 79, 19437, 1094, 1054, 829, 121, 19437, 1127,
	933, 19437, 526, 526, -1000, 6599, -1000, 5432, 364, -1000,
	554, 10779, 5432, 5432, 5432, 19437, 5432, 5432, -1000, 553,
	-1000, -1000, -1000, 402, -1000, -1000, -1000, -1000, -1000, -1000,
	5432, 5432, 370, 402, 370, -1000, -1000, -1000, -1000, 10779,
	259, -1000, 930, -1000, -1000, 18, -1000, -1000, -1000, -1000,
	-1000, 1214, -1000, -1000, -1000, -137, -1000, -1000, 10779, 10779,
	10779, 10779, 529, 265, 11904, 410, 300, 11904, 11904, 11904,
	11904, 11904, 11904, 11904, 11904, 11904, 11904, 11904, 11904, 11904,
	11904, 11904, 594, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 526, -1000, 1208, 765, 765, 234, 234, 234, 234,
	234, 234, 234, 234, 234, 12279, 8141, 6599, 669, 790,
	1167, 9266, 9266, 10779, 10779, 10016, 9641, 9266, 1087, 321,
	504, 19437, -1000, -1000, 11529, -1000, -1000, -1000, -1000, -1000,
	534, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19437, 19437,
	9266, 9266, 9266, 9266, 9266, -1000, 1137, 669, 1022, 1111,
	1203, 252, 709, 826, -1000, 624, 1137, 14930, 725, -1000,
	1022, -1000, -1000, -1000, 19437, -1000, -1000, 17180, -1000, -1000,
	6210, 19437, 69, 19437, -1000, 865, 1106, -1000, -1000, -1000,
	1129, 14180, 14555, 19437, 879, 777, -1000, -1000, 212, 6988,
	-132, -1000, 6988, 813, -1000, -97, -88, 8516, 233, -1000,
	-1000, -1000, -1000, 4654, 13029, 609, 374, -52, -1000, -1000,
	-1000, 847, -1000, 847, 847, 847, 847, -18, -18, -18,
	-18, -1000, -1000, -1000, -1000, -1000, 891, 882, -1000, 847,
	847, 847, 847, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	881, 881, 881, 854, 854, 99, 10779, 52, 19437, 1115,
	419, -1000, 19437, -1000, 1119, 909, -1000, 274, 712, -1000,
	-1000, 403, 403, 306, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 74, -1000, 19437, 19437, 19437,
	19437, 19437, 197, 54, 19437, 19437, 825, -1000, 19437, 5432,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 504, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19437, -1000, -1000, -1000,
	-1000, 364, 19437, 19437, 19437, 364, 504, -1000, 19437, 19437,
	-1000, -1000, -1000, -1000, -1000, 504, 265, 408, 350, -1000,
	-1000, 539, -1000, -1000, 902, -1000, -1000, -1000, -1000, 410,
	11904, 11904, 11904, 389, 902, 1724, 1218, 1510, 234, 557,
	557, 231, 231, 231, 231, 231, 450, 450, -1000, -1000,
	-1000, 534, -1000, -1000, -1000, 534, 9266, 9266, 824, 835,
	211, -1000, 898, -1000, -1000, 1137, 760, 760, 427, 513,
	351, 1193, 760, 334, 1189, 760, 760, 9266, -1000, -1000,
	318, -1000, 10779, 534, -1000, 210, -1000, 467, 817, 816,
	760, 534, 534, 760, 760, 1081, -1000, -1000, 1038, -1000,
	964, 10779, 10779, 10779, -1000, -1000, -1000, 1081, 1144, -1000,
	990, 989, 1181, 9266, 16430, 1022, -1000, -1000, -1000, 207,
	1181, 815, 835, -1000, 19437, 16430, 16430, 16430, 16430, 16430,
	-1000, 952, 950, -1000, 946, 944, 1009, 19437, -1000, 767,
	669, 14180, 201, 835, -1000, 16805, -1000, -1000, 69, 701,
	16430, 19437, -1000, -1000, 16430, 19437, 5821, -1000, 813, -132,
	-76, -1000, -1000, -1000, -1000, 504, -1000, 665, 738, 4265,
	-1000, -1000, -1000, -1000, 96, -1000, -1000, 870, 526, -1000,
	1104, 261, 261, 339, 526, 1102, -1000, -1000, -1000, -1000,
	1088, -1000, 349, -54, -1000, -1000, -18, -18, -1000, -1000,
	233, 1074, 233, 233, 233, 551, 551, -1000, -1000, -1000,
	-1000, -1000, 417, -1000, -1000, -1000, 413, -1000, -1000, 869,
	702, 927, 52, -1000, 526, 274, 546, 1059, -1000, -1000,
	602, 5432, -1000, 929, 19437, 660, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19437, -1000, -1000, -1000, -1000,
	-1000, 19437, 872, -1000, -1000, -1000, -1000, 12, 58, 50,
	119, -1000, 5432, -1000, 370, -1000, -1000, -1000, 370, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 389, 902, 573, -1000,
	11904, 11904, -1000, -1000, 760, 760, 9266, 6599, 1167, 1081,
	-1000, -1000, 166, 594, 166, 11904, 11904, -1000, 11904, 11904,
	-1000, -163, 827, 299, -1000, 10779, 454, -1000, 6599, -1000,
	11904, 11904, -1000, -1000, -1000, -1000, -1000, -1000, 465, 541,
	960, 504, 504, -1000, -1000, 19437, -1000, -1000, -1000, -1000,
	1179, 10779, -1000, 719, -1000, 5043, 1137, 928, 19437, 835,
	1214, 13417, 19437, 873, -1000, 278, 1106, 904, 926, 991,
	-1000, -1000, -1000, -1000, 937, -1000, 925, -1000, -1000, -1000,
	-1000, -1000, 669, -1000, 177, 173, 170, 19437, -1000, 1181,
	16430, 852, -1000, 852, -1000, 206, -1000, -1000, -1000, -123,
	-104, -1000, -1000, -1000, 4654, -1000, 4654, -1000, 19437, 93,
	-1000, 526, 526, 526, -1000, -1000, -1000, 863, 924, 11904,
	-1000, -1000, -1000, 233, 233, -1000, 327, -1000, -1000, -1000,
	747, -1000, 744, 690, 734, 16, -1000, 877, 1071, 274,
	274, -1000, -1000, 411, -1000, 533, -1000, -1000, 19437, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1109, -175, 526, 19437,
	19437, 19437, -1000, 19437, -1000, 364, 364, -1000, 11904, 902,
	902, -1000, -1000, 534, -1000, 1137, -1000, 534, 847, 847,
	-1000, 847, 854, -1000, 847, 0, 847, -4, 534, 534,
	1688, 1665, 1348, 752, 835, -158, -1000, 504, 10779, -1000,
	1301, 537, 520, -18, -1000, -1000, -1000, 1169, 1163, 504,
	-1000, -1000, -1000, 1107, 648, 646, -1000, -1000, 8891, 711,
	984, 204, 706, -1000, 1167, 19437, 10779, -1000, -1000, 10779,
	840, -1000, 10779, -1000, -1000, -1000, 1167, 835, 835, 835,
	706, 1167, 852, -1000, -1000, 243, -1000, -1000, -1000, 4265,
	-1000, 696, -1000, 1102, -1000, -1000, -1000, 19437, -46, 1202,
	902, -1000, -1000, -1000, -1000, -18, 514, -18, 385, -1000,
	379, -1000, -1000, -217, -1000, -1000, 889, 945, -1000, -1000,
	-1000, 835, -1000, 6599, -1000, -1000, 837, 908, -1000, -1000,
	-1000, -1000, 902, -1000, 1081, -1000, -1000, 145, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11904, 11904, 11904, 11904,
	11904, 1137, 501, 504, 11904, 11904, -18, -70, -1000, 10779,
	10779, 1098, -1000, 835, -1000, 894, 19437, 835, 19437, -1000,
	19437, 1137, -1000, 504, 504, 19437, 504, 16055, 19437, 19437,
	13792, 1137, -1000, 52, 673, -1000, 239, -1000, -103, 233,
	-1000, 233, 600, 565, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 68, 659, -1000, 268, 19437, 19437, -1000, -1000,
	-1000, 467, 467, 467, 467, 37, 534, -1000, 467, 467,
	-285, -1000, 1051, 1036, 504, 652, 1201, -1000, 835, 1214,
	198, 646, -1000, -1000, -1000, 634, 632, -1000, 632, 632,
	201, -1000, -1000, 78, 19437, 336, 1097, -1000, 1096, -1000,
	-1000, -1000, -1000, -1000, 629, -1000, 19437, 6599, 4654, 626,
	-1000, -1000, -1000, -1000, -1000, 534, 70, -178, -1000, -1000,
	-1000, -70, 164, -1000, 997, 993, 1160, 19437, 646, 19437,
	-1000, -1000, -1000, -1000, -1000, 19437, -1000, -1000, 497, -1000,
	-1000, -1000, 68, 983, -1000, -1000, 872, -1000, 958, -173,
	-181, 1013, 1024, 1024, 1036, 1149, 1034, 1032, -1000, 488,
	595, -1000, 836, -1000, -1000, 64, -175, -1000, 949, -1000,
	1011, 425, -1000, -1000, -1000, -1000, 483, -1000, 1143, 1140,
	-1000, 19437, 57, -1000, -176, -1000, 390, -1000, -1000, -1000,
	473, 472, 570, 835, -179, -1000, -1000, -1000, -1000, 916,
	11154, -182, 912, -1000, 1188, 467, 534, -1000, -1000, 1198,
	229, 229, -1000, -1000, -1000, -1000, -1000, 95, 435, -1000,
	-1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1513, 1512, 40, 84, 74, 1511, 1510, 1505, 1504,
	117, 115, 114, 1503, 1502, 1501, 1499, 1498, 1497, 1496,
	1491, 1490, 1489, 1488, 1486, 1485, 1483, 104, 103, 450,
	1482, 1469, 1465, 1464, 1463, 1462, 1460, 1458, 1457, 1456,
	1455, 1454, 100, 1453, 1452, 1451, 1450, 1449, 1445, 1444,
	1443, 1442, 98, 39, 82, 54, 75, 1441, 72, 1979,
	1440, 35, 76, 71, 1439, 36, 1438, 1436, 102, 1435,
	1422, 70, 1415, 1413, 1129, 1408, 66, 1407, 12, 51,
	1406, 1405, 1404, 1394, 96, 48, 1388, 1387, 21, 1386,
	1385, 121, 1384, 80, 14, 15, 25, 23, 1380, 79,
	1379, 19, 1378, 78, 1371, 1361, 1360, 1358, 32, 1353,
	73, 83, 20, 1352, 7, 9, 1340, 1339, 1337, 1336,
	1334, 1333, 4, 1331, 1326, 1324, 1323, 1322, 24, 1321,
	6, 69, 45, 22, 10, 1316, 1310, 18, 95, 68,
	93, 1309, 1308, 1307, 786, 1304, 59, 1302, 113, 1301,
	31, 110, 413, 476, 1295, 1293, 1292, 1290, 1288, 46,
	901, 1615, 111, 94, 1287, 1285, 2577, 53, 67, 13,
	1283, 1282, 1281, 61, 64, 56, 645, 1280, 38, 1279,
	1277, 1274, 1270, 1269, 1268, 1265, 195, 1263, 1262, 1260,
	52, 26, 87, 28, 1259, 1257, 1255, 1254, 58, 97,
	1253, 1250, 65, 60, 1249, 99, 34, 29, 1247, 1244,
	1242, 1240, 37, 17, 1239, 86, 30, 63, 27, 33,
	1236, 16, 1235, 43, 42, 1232, 8, 1230, 11, 1229,
	3, 0, 1228, 5, 1227, 81, 1091, 1, 1226, 2,
	1224, 1223, 1221, 1492, 1289, 92, 1217, 112,
}

var yyR1 = [...]int{
	0, 241, 242, 242, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 231, 231, 231, 234, 234, 21, 41, 3, 3,
	3, 3, 2, 2, 8, 9, 4, 5, 5, 10,
	10, 46, 46, 11, 12, 12, 12, 12, 245, 245,
	68, 68, 69, 69, 131, 131, 13, 14, 14, 140,
	140, 139, 139, 139, 141, 141, 141, 141, 176, 176,
	15, 15, 15, 15, 15, 15, 233, 233, 232, 230,
	230, 229, 229, 228, 22, 24, 25, 26, 236, 236,
	208, 30, 30, 29, 29, 29, 29, 31, 31, 28,
	28, 27, 27, 210, 210, 209, 209, 209, 209, 209,
	209, 199, 179, 179, 179, 179, 182, 182, 180, 180,
	180, 180, 180, 180, 180, 180, 180, 181, 181, 181,
	181, 181, 183, 183, 183, 183, 183, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 184,
	184, 184, 185, 185, 185, 185, 185, 185, 185, 185,
	198, 198, 186, 186, 192, 192, 193, 193, 193, 195,
	195, 196, 196, 154, 154, 154, 188, 188, 189, 189,
	194, 194, 190, 190, 190, 191, 191, 191, 197, 197,
	197, 197, 197, 187, 187, 200, 221, 221, 220, 220,
	217, 217, 217, 217, 207, 207, 214, 214, 214, 214,
	214, 214, 204, 204, 204, 205, 205, 203, 203, 206,
	206, 216, 216, 215, 201, 201, 202, 202, 223, 223,
	223, 223, 223, 224, 238, 239, 237, 237, 237, 237,
	237, 155, 155, 155, 211, 211, 211, 212, 212, 212,
	213, 213, 213, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	235, 235, 235, 235, 235, 235, 235, 235, 235, 235,
	235, 235, 235, 235, 227, 225, 225, 226, 226, 17,
	23, 23, 18, 18, 18, 18, 18, 19, 19, 32,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 147, 147, 240, 240, 149, 149, 145, 145, 148,
	148, 146, 146, 146, 150, 150, 150, 151, 151, 177,
	177, 177, 34, 34, 36, 36, 37, 38, 38, 171,
	171, 172, 172, 39, 40, 45, 45, 45, 45, 45,
	45, 47, 47, 47, 7, 7, 7, 7, 44, 44,
	44, 6, 6, 35, 35, 35, 35, 20, 246, 42,
	43, 43, 52, 52, 52, 48, 48, 48, 51, 51,
	51, 55, 55, 57, 57, 57, 57, 57, 58, 58,
	58, 58, 58, 58, 54, 54, 56, 56, 56, 56,
	164, 164, 164, 163, 163, 60, 60, 61, 61, 62,
	62, 63, 63, 63, 100, 77, 77, 130, 130, 132,
	132, 64, 64, 64, 64, 65, 65, 66, 66, 67,
	67, 170, 170, 169, 169, 169, 168, 168, 70, 70,
	70, 72, 71, 71, 71, 71, 73, 73, 75, 75,
	74, 74, 76, 78, 78, 78, 78, 78, 79, 79,
	59, 59, 59, 59, 59, 59, 59, 59, 143, 143,
	81, 81, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 92, 92, 92, 92, 92, 92, 82, 82,
	82, 82, 82, 82, 82, 53, 53, 93, 93, 93,
	99, 94, 94, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 89, 89, 89,
	89, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 88, 88, 88, 88, 88, 88,
	88, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	247, 247, 91, 90, 90, 90, 90, 90, 90, 90,
	50, 50, 50, 50, 50, 175, 175, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	104, 104, 49, 49, 102, 102, 103, 105, 105, 101,
	101, 101, 84, 84, 84, 84, 84, 84, 84, 84,
	86, 86, 86, 106, 106, 107, 107, 108, 108, 109,
	109, 110, 111, 111, 111, 112, 112, 112, 112, 222,
	222, 222, 222, 222, 218, 218, 218, 218, 219, 219,
	219, 128, 128, 128, 113, 113, 113, 113, 118, 118,
	118, 114, 114, 116, 116, 116, 117, 117, 117, 115,
	121, 121, 123, 123, 122, 122, 120, 120, 125, 125,
	124, 124, 119, 119, 83, 83, 83, 83, 83, 129,
	129, 129, 129, 133, 133, 95, 95, 97, 97, 96,
	98, 134, 134, 137, 135, 135, 138, 138, 138, 138,
	138, 136, 136, 136, 165, 165, 165, 142, 142, 152,
	152, 153, 153, 144, 144, 156, 156, 156, 156, 156,
	156, 156, 156, 156, 156, 157, 157, 157, 158, 158,
	126, 126, 126, 126, 127, 127, 161, 161, 162, 162,
	166, 166, 167, 167, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 243, 244,
	173, 174, 174, 174,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 1, 2, 3, 5, 6,
	6, 7, 4, 6, 5, 7, 8, 1, 3, 7,
	8, 1, 1, 9, 9, 8, 7, 7, 1, 1,
	1, 3, 1, 3, 0, 4, 3, 5, 4, 1,
	3, 3, 2, 2, 2, 2, 2, 1, 1, 1,
	2, 2, 6, 4, 6, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 4, 7, 4, 2, 1, 1,
	4, 0, 1, 1, 1, 2, 2, 0, 1, 5,
	5, 4, 4, 2, 4, 1, 1, 3, 4, 3,
	3, 8, 3, 1, 1, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 2,
	2, 2, 1, 2, 2, 2, 2, 4, 4, 2,
	2, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	6, 6, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 3, 0, 5, 0, 3, 5, 0,
	1, 0, 1, 0, 1, 2, 0, 2, 0, 3,
	0, 1, 0, 3, 3, 0, 2, 2, 0, 2,
	1, 2, 1, 0, 2, 5, 0, 1, 1, 2,
	2, 3, 2, 3, 0, 1, 2, 3, 3, 3,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 1, 5, 3, 3, 1, 1, 2, 2,
	2, 0, 1, 2, 0, 1, 3, 1, 2, 3,
	1, 1, 1, 5, 6, 6, 6, 6, 4, 4,
	3, 6, 7, 5, 5, 5, 12, 7, 5, 9,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 7, 1, 3, 8, 8, 3,
	3, 5, 4, 6, 5, 4, 4, 3, 2, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 4, 3,
	3, 3, 3, 2, 7, 2, 3, 4, 5, 7,
	5, 4, 2, 4, 4, 3, 3, 5, 2, 3,
	3, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	1, 0, 2, 2, 0, 2, 2, 0, 2, 0,
	1, 1, 2, 1, 1, 2, 1, 1, 5, 0,
	1, 0, 1, 2, 3, 0, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 1,
	1, 3, 3, 2, 2, 3, 3, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 5,
	6, 4, 4, 6, 6, 6, 8, 8, 8, 8,
	9, 8, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 2, 4, 0, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 4, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -241, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -32, -33, -34, -36,
	-37, -38, -39, -40, -6, -35, -20, -21, -41, -4,
	-243, 6, 7, 8, -46, 10, 11, 31, -22, -24,
	146, -25, 147, -26, 149, 148, 182, 150, 175, 70,
	199, 200, 202, 203, 204, 205, -47, 180, 181, 32,
	33, 152, 35, 41, 80, 9, 293, 177, 176, 26,
	-242, 395, -52, 5, -108, 16, -3, -42, -246, -42,
	-42, -42, -42, -42, -42, -208, -210, 80, 119, 80,
	156, 100, 154, -126, -236, 160, 163, 164, 285, 153,
	-30, -29, -28, -27, -31, 30, -236, 154, 156, 259,
	-234, -231, 83, 84, 85, 154, 154, 155, 156, 285,
	153, 154, -74, -166, -231, -160, 303, 168, 335, 336,
	76, 199, 213, 207, 234, 226, 304, 337, 169, 224,
	227, 272, 166, 338, 254, 262, 94, 202, 281, 339,
	75, 47, 40, 178, 222, 218, 340, 312, 192, 216,
	46, 28, 45, 341, 264, 239, 44, 342, 79, 308,
	266, 217, 263, 152, 343, 171, 391, 164, 344, 240,
	244, 345, 273, 48, 346, 347, 348, 74, 211, 212,
	349, 167, 275, 238, 165, 34, 267, 305, 54, 186,
	276, 42, 242, 41, 350, 237, 233, 49, 351, 352,
	353, 354, 236, 210, 232, 58, 246, 245, 247, 193,
	271, 229, 355, 356, 357, 172, 77, 358, 219, 19,
	359, 360, 361, 52, 362, 363, 279, 181, 364, 50,
	37, 184, 365, 366, 367, 368, 369, 370, 265, 241,
	243, 161, 188, 261, 307, 371, 277, 215, 372, 173,
	185, 180, 280, 174, 373, 374, 375, 376, 377, 378,
	379, 203, 39, 380, 381, 382, 383, 198, 274, 283,
	57, 78, 251, 384, 209, 163, 385, 200, 51, 195,
	257, 43, 230, 187, 386, 387, 220, 221, 235, 208,
	231, 201, 392, 189, 182, 388, 282, 252, 309, 194,
	228, 225, 196, 389, 156, 190, 191, 390, 393, 268,
	258, 269, 270, 259, 197, 306, 278, 223, 253, 154,
	137, 227, 272, 146, 255, 256, 267, 268, 264, -149,
	265, 188, -177, 154, -145, 254, 258, 259, 197, -240,
	-231, 266, 274, 273, 260, 270, 269, -166, 201, -171,
	206, -161, -231, -160, 204, -74, -45, 391, 150, -173,
	-173, 257, 257, -173, -94, -59, -80, 103, -85, 30,
	24, -84, -81, -101, -98, -99, 137, 138, 140, 139,
	141, 126, 127, 134, 104, 142, -89, -87, -88, -90,
	87, 86, 95, 88, 89, 90, 91, 96, 97, 98,
	-161, -166, -96, -243, 64, 65, 294, 295, 296, 297,
	302, 298, 106, 53, 284, 292, 291, 290, 288, 289,
	286, 287, 300, 301, 159, 285, 153, 132, 293, -231,
	-160, 40, -5, -4, -243, 6, 21, 22, -112, 18,
	17, -244, 82, -48, -57, 59, 60, -58, 22, 36,
	63, 61, -43, -56, 128, -59, -166, -56, -144, 158,
	-144, -144, -135, -176, 201, -138, 274, 273, -162, -136,
	-161, -159, 272, 227, 271, 151, 310, 102, 23, 25,
	249, 105, 137, 17, 106, 136, 294, 146, 68, 311,
	286, 287, 284, 296, 297, 285, 255, 30, 11, 313,
	26, 176, 22, 36, 130, 148, 109, 110, 179, 24,
	177, 98, 316, 20, 71, 12, 14, 317, 318, 15,
	159, 158, 121, 155, 66, 9, 142, 27, 118, 62,
	319, 29, 320, 321, 322, 323, 64, 119, 18, 288,
	289, 32, 324, 302, 183, 132, 69, 55, 103, 325,
	326, 96, 327, 99, 72, 100, 16, 67, 38, 328,
	329, 330, 331, 120, 149, 293, 65, 332, 153, 256,
	6, 299, 31, 175, 63, 333, 154, 108, 300, 301,
	157, 97, 5, 160, 33, 10, 70, 73, 290, 291,
	292, 53, 107, 13, 334, 101, -209, 119, -199, -202,
	-161, 170, -224, 166, -74, -216, -215, -161, -74, 293,
	-153, 159, 155, -153, -27, -28, 227, 136, -74, -74,
	146, 148, 151, 72, -29, 194, -23, -74, -152, 159,
	-231, -152, -152, -152, -74, 143, -74, -231, 31, -150,
	119, 13, 285, -231, 188, 154, 189, 156, -151, 119,
	-151, -151, -151, -204, 155, 34, 167, -174, -243, -162,
	195, 196, 195, -148, -147, 262, 263, 257, 261, 13,
	196, 257, 191, -150, -174, 157, -161, -44, -161, 87,
	-7, -3, -11, -10, -12, 111, -173, -173, 81, 102,
	100, 101, 118, -59, -82, 121, 103, 119, 120, 105,
	123, 122, 133, 126, 127, 128, 129, 130, 131, 132,
	124, 125, 136, 111, 112, 113, 114, 115, 116, 117,
	-143, -243, -99, -243, 144, 145, -85, -85, -85, -85,
	-85, -85, -85, -85, -85, -85, -243, 143, -2, -94,
	-4, -243, -243, -243, -243, -243, -243, -243, -243, -104,
	-59, -243, -247, -91, -243, -247, -91, -247, -91, -247,
	-243, -247, -91, -247, -91, -247, -247, -91, -243, -243,
	-243, -243, -243, -243, -243, -173, -108, -3, -42, -128,
	20, 32, -59, -109, -110, -59, -108, 55, -54, -56,
	-58, 59, 60, 93, 12, -164, -163, 23, -161, 87,
	143, 12, -75, 27, -74, -61, -62, -63, -64, -77,
	-100, -243, -74, 12, -68, -69, -74, -76, -166, 81,
	201, -138, -176, -140, -139, 275, 277, 111, -165, -161,
	87, 30, 31, 82, 81, -74, -179, -182, -184, -183,
	-185, -180, -181, 224, 225, 137, 228, 230, 231, 232,
	233, 234, 235, 236, 237, 238, 239, 31, 178, 220,
	221, 222, 223, 240, 241, 242, 243, 244, 245, 246,
	247, 207, 226, 304, 208, 209, 210, 211, 212, 213,
	215, 216, 217, 218, 219, -231, 80, 82, 81, -186,
	80, -174, 156, -74, 103, -231, -231, 31, -207, 111,
	-156, 151, 148, 149, -227, 147, 249, 227, 94, 30,
	16, 294, 184, 309, -231, 185, -174, 190, 190, 154,
	154, 198, -74, 40, 81, 157, -68, 24, 72, -74,
	-231, -231, -167, -166, -159, -174, -150, 87, -59, -174,
	-174, -174, -74, -174, -174, 87, -205, 12, 121, -174,
	-174, -146, 12, 121, -205, -146, -59, -151, 72, -172,
	204, 238, 392, 393, 394, -59, -59, -59, -59, -92,
	96, 103, 97, 98, -85, -93, -96, -99, 92, 121,
	119, 120, 105, -85, -85, -85, -85, -85, -85, -85,
	-85, -85, -85, -85, -85, -85, -85, -85, -175, -231,
	87, -231, -84, -84, -161, -55, 22, 36, -54, -162,
	-167, -159, -52, -244, -244, -108, -54, -54, -59, -59,
	-101, 87, -54, -101, 87, -54, -54, -51, 22, 36,
	-102, -103, 107, -101, -161, -166, -244, -85, -161, -161,
	-54, -55, -55, -54, -54, -112, -244, -113, 27, 10,
	121, 81, 19, 81, -111, 25, 26, -112, -86, -161,
	88, 91, -60, 81, 12, -58, -74, -163, 128, -167,
	-74, -131, 184, -74, 31, 81, -70, -72, -71, -73,
	62, 66, 68, 63, 64, 65, 69, -170, 23, -61,
	-3, -243, -169, 184, -168, 23, -166, 87, -74, -68,
	-245, 81, 12, 73, -245, 81, 143, -138, -140, 81,
	276, 278, 279, 72, 99, -59, -191, 136, -211, -212,
	-213, -162, 87, 88, -199, -200, -201, -214, 170, -223,
	161, 163, 164, 160, -203, 171, -224, 155, 29, 82,
	-154, 96, 103, -195, 252, -186, -186, -186, -186, -186,
	-190, 227, -190, -190, -190, 80, 80, -186, -186, -186,
	-186, -192, 80, -192, -192, -193, 80, -193, -224, 166,
	-59, -221, -220, -217, 73, 165, 94, 306, -215, -111,
	88, -74, 24, -127, 73, -207, -231, 87, -173, -235,
	166, 162, 170, 171, 164, 83, 84, 85, 155, 29,
	161, 163, 184, 160, -235, -157, -158, 157, 23, 155,
	29, 184, -74, -74, -74, -74, -74, 151, 148, 192,
	-74, -74, -74, -174, -74, -150, -166, -166, -74, -150,
	-74, -161, 96, 97, 98, -93, -85, -85, -85, -53,
	179, 102, -244, -244, -54, -54, -243, 143, -5, -112,
	-244, -244, 81, 73, 23, 12, 12, -244, 12, 12,
	-244, -244, -54, -105, -103, 109, -59, -244, 143, -244,
	81, 81, -244, -244, -244, -244, -244, -128, 38, 46,
	57, -59, -59, -110, -128, -142, 20, 12, 53, 53,
	-79, 13, -56, -61, -58, 143, -79, -83, 31, 53,
	-3, -243, -243, -134, -137, -101, -62, -63, -63, -62,
	-63, 62, 62, 62, 67, 62, 67, 62, -71, -166,
	-244, -244, -3, -78, 70, 158, 71, -243, -168, -131,
	73, -61, -74, -61, -76, -166, 128, -139, -141, 280,
	277, 283, -231, 87, 81, -213, 111, -202, 80, -231,
	29, -203, -203, -203, -206, -231, -206, 29, -188, 30,
	96, -196, 253, -190, -190, -191, 31, -191, -191, -191,
	-198, 87, -198, 88, 88, 82, -222, -218, -219, 32,
	76, -217, -231, -207, 87, 37, 82, -174, 72, -161,
	-231, 87, -173, -173, -74, -173, -161, -233, 73, 190,
	249, 190, 193, 157, -174, -146, -146, -53, 102, -85,
	-85, -244, -244, -55, -162, -108, -128, -178, 137, 224,
	178, 222, 218, 238, 229, 251, 220, 252, -175, -178,
	-85, -85, -85, -85, 303, -108, 110, -59, 108, -162,
	-85, -85, 39, 87, 87, 58, -74, -106, 14, -59,
	128, -112, -133, 72, -134, -95, -97, -96, -243, -129,
	-244, -161, -132, -161, -79, 81, 111, -66, -65, 72,
	73, -67, 72, -65, 62, 62, -244, 155, 155, 155,
	-132, -79, -61, -79, -79, 143, 277, 281, 282, -212,
	-213, -216, -223, 171, -206, -206, -206, 80, -189, 72,
	-85, -191, -191, -231, 137, 82, 81, 82, 81, 82,
	81, -155, 341, 103, -219, -218, -207, -207, 88, 87,
	-74, 27, -230, 306, -232, -231, -161, -161, -161, -74,
	-150, -150, -85, -244, -112, -244, -186, -186, -186, -193,
	-186, 212, -186, 212, -244, -244, 20, 20, 20, 20,
	-243, -49, 299, -59, 81, 81, 87, -190, -107, 15,
	17, 28, -133, 81, -244, -244, 81, 53, 143, -244,
	81, -108, -137, -59, -59, 80, -59, -243, -243, -243,
	-244, -108, -79, 82, -130, -161, -194, 249, 10, -190,
	87, -190, 88, 88, 341, 30, 77, 78, 79, 30,
	74, 75, -243, -229, -228, -162, 80, 73, -128, -190,
	-231, -85, -85, -85, -85, -85, -112, 87, -85, -85,
	-190, -115, -120, -148, -59, -94, 29, -97, 53, -3,
	-161, -95, -161, -161, -112, -130, -130, -244, -130, -130,
	-169, -112, -221, 82, 81, -197, 161, 29, 160, -88,
	-191, -191, 82, 82, -225, -226, 184, 81, 111, -130,
	-74, -244, -244, -244, -244, -50, 121, 306, -244, -244,
	-244, -118, 391, -121, 42, -122, 43, 10, -95, 143,
	82, -244, -244, -244, -78, 173, -161, -187, 94, 29,
	29, -244, 81, -161, -228, -213, 82, -244, 304, 69,
	307, -115, 47, 230, -123, 51, -124, -119, 52, 17,
	-134, -161, -74, 87, -226, 53, -233, 58, 305, 308,
	-116, 49, -114, 48, -114, -122, 17, -125, 44, 45,
	87, 80, 186, -230, 58, -117, 50, 72, 99, 87,
	17, 17, -130, 187, 306, 72, 99, 87, 87, 82,
	-243, 307, -238, -239, 72, -85, 183, 308, -239, 72,
	11, 10, -244, -244, -237, 174, 169, 172, 31, -237,
	168, 30, 96,
}

var yyDef = [...]int{
	30, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 657,
	0, 398, 398, 398, 398, 398, 398, 398, 0, 0,
	770, -2, 0, 34, 0, 0, 0, 0, -2, 363,
	364, 0, 366, -2, 0, 0, 375, 1110, 1110, 0,
	0, 1110, 0, 0, 1108, 51, 52, 381, 382, 383,
	1, 3, 0, 402, 665, 0, 0, -2, 400, 0,
	0, 753, 753, 753, 0, 80, 81, 0, 0, 0,
	0, 0, 751, 0, 751, 771, 772, 773, 98, 99,
	85, -2, 103, 104, 0, 108, 97, 0, 0, 0,
	107, 35, 31, 32, 33, 0, 749, 0, 749, 749,
	749, 0, 308, 480, 780, 781, 905, 906, 907, 908,
	909, 910, 911, 912, 913, 914, 915, 916, 917, 918,
	919, 920, 921, 922, 923, 924, 925, 926, 927, 928,
	929, 930, 931, 932, 933, 934, 935, 936, 937, 938,
	939, 940, 941, 942, 943, 944, 945, 946, 947, 948,
	949, 950, 951, 952, 953, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
	1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 0,
	0, 0, 354, 0, 357, 357, 357, 357, 323, 0,
	325, 1111, 0, 0, 0, 332, 0, 0, 338, 354,
	1111, 346, 360, 361, 348, 343, 344, 362, 365, 0,
	370, 373, 776, 777, 0, 388, 0, 955, 380, 393,
	394, 1110, 1110, 397, 36, 531, 490, 0, 496, 498,
	0, 533, 534, 535, 536, 537, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	642, 643, 644, 645, 646, 647, 648, 649, 500, 501,
	639, 0, 730, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 630, 0, 600, 600, 600, 600, 600, 600,
	600, 600, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 1110, 657, 47, 0, 398, 403, 404, 681, 0,
	0, 657, 1109, 0, 0, -2, -2, 414, 420, 421,
	422, 423, 399, 0, 426, 430, 0, 0, 0, 754,
	0, 0, 66, 0, 1080, 734, -2, -2, 0, 0,
	778, 779, -2, 919, -2, 784, 785, 786, 787, 788,
	789, 790, 791, 792, 793, 794, 795, 796, 797, 798,
	799, 800, 801, 802, 803, 804, 805, 806, 807, 808,
	809, 810, 811, 812, 813, 814, 815, 816, 817, 818,
	819, 820, 821, 822, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 866, 867, 868,
	869, 870, 871, 872, 873, 874, 875, 876, 877, 878,
	879, 880, 881, 882, 883, 884, 885, 886, 887, 888,
	889, 890, 891, 892, 893, 894, 895, 896, 897, 898,
	899, 900, 901, 902, 903, 904, 0, 0, 115, 116,
	0, 0, 237, 921, 113, 0, 231, 172, 1111, 0,
	0, 0, 0, 0, 105, 106, 0, 214, 0, 1111,
	0, 0, 0, 0, -2, 0, 299, 0, 0, 0,
	0, 0, 0, 0, 307, 0, 309, 1111, 354, 312,
	0, 0, 1111, 1111, 1111, 0, 1111, 1111, 319, 0,
	320, 321, 322, 0, 222, 223, 224, 326, 1112, 1113,
	1111, 1111, 351, 0, 351, 349, 350, 341, 342, 0,
	357, 335, 336, 339, 340, 371, 374, 391, 389, 390,
	392, 384, 385, 386, 387, 0, 395, 396, 0, 0,
	0, 0, 0, 494, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 518, 519, 520, 521, 522, 523, 524,
	497, 0, 511, 0, 0, 0, 553, 554, 555, 556,
	557, 558, 559, 560, 561, 0, 411, 0, 0, 0,
	657, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	631, 0, 584, 592, 0, 585, 593, 586, 594, 587,
	0, 588, 595, 589, 596, 590, 591, 597, 0, 0,
	0, 411, 411, 0, 0, 37, 665, 0, 413, 684,
	0, 0, 666, 658, 659, 662, 665, 0, 435, 424,
	415, 418, 419, 401, 0, 427, 431, 0, 433, 434,
	0, 0, 64, 0, 479, 0, 437, 439, 440, 441,
	461, 0, 463, 0, 0, 0, 60, 62, 480, 0,
	1080, 740, 0, 68, 69, 0, 0, 0, 195, 744,
	745, 746, 742, 254, 0, 0, 183, 179, 123, 124,
	125, 172, 127, 172, 172, 172, 172, 192, 192, 192,
	192, 155, 156, 157, 158, 159, 0, 0, 142, 172,
	172, 172, 172, 162, 163, 164, 165, 166, 167, 168,
	169, 128, 129, 130, 131, 132, 133, 134, 135, 136,
	174, 174, 174, 176, 176, 0, 0, 206, 0, 662,
	0, 83, 0, 94, 0, 774, 96, 214, 0, 215,
	1110, 0, 0, 765, 269, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 764, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 302, 750, 0, 1111,
	305, 306, 481, 782, 783, 310, 311, 355, 356, 313,
	314, 315, 316, 317, 318, 358, 0, 225, 226, 327,
	331, 354, 0, 0, 0, 354, 333, 334, 0, 0,
	372, 376, 377, 378, 379, 532, 491, 492, 493, 495,
	512, 0, 514, 516, 502, 503, 527, 528, 529, 0,
	0, 0, 0, 525, 507, 0, 538, 539, 540, 541,
	542, 543, 544, 545, 546, 547, 548, 549, 552, 615,
	616, 0, 550, 551, 562, 0, 0, 0, 412, 640,
	0, -2, 0, 530, 729, 665, 0, 0, 0, 0,
	535, 642, 0, 535, 642, 0, 0, 0, 409, 410,
	637, 634, 0, 0, 639, 0, 601, 0, 0, 0,
	0, 0, 0, 0, 0, 681, 48, 38, 0, 682,
	0, 0, 0, 0, 661, 663, 664, 681, 0, 650,
	0, 0, 488, 0, 0, 416, 44, 432, 428, 0,
	488, 0, 0, 478, 0, 0, 0, 0, 0, 0,
	468, 0, 0, 471, 0, 0, 0, 0, 462, 0,
	0, 0, 483, 1020, 464, 0, 466, 467, -2, 0,
	0, 0, 58, 59, 0, 0, 0, 735, 67, 0,
	0, 72, 73, 736, 737, 738, 739, 0, 100, 255,
	257, 260, 261, 262, 117, 119, 120, 0, 0, 235,
	1030, 1064, 956, 229, 229, 954, 242, 227, 228, 114,
	186, 184, 0, 181, 180, 126, 192, 192, 149, 150,
	195, 0, 195, 195, 195, 0, 0, 143, 144, 145,
	146, 137, 0, 138, 139, 140, 0, 141, 236, 0,
	0, 669, 207, 208, 0, 214, 0, 0, 232, 233,
	0, 1111, 752, 0, 0, 0, 111, 112, 263, 1110,
	280, 281, 282, 283, 284, 285, 286, 287, 288, 289,
	290, 291, 292, 293, 1110, 0, 1110, 766, 767, 768,
	769, 0, 86, 273, 275, 274, 278, 0, 0, 0,
	0, 300, 1111, 304, 351, 328, 352, 353, 351, 330,
	337, 368, 513, 515, 517, 504, 525, 508, 0, 505,
	0, 0, 499, 567, 0, 0, 411, 0, 657, 681,
	571, 572, 0, 0, 0, 0, 0, 608, 0, 0,
	609, 0, 657, 0, 635, 0, 0, 583, 0, 602,
	0, 0, 603, 604, 605, 606, 607, 40, 0, 0,
	0, 667, 668, 660, 39, 0, 747, 748, 651, 652,
	653, 0, 425, 436, 417, 0, 665, 723, 0, 0,
	715, 0, 0, 488, 731, 0, 438, 457, 459, 0,
	454, 469, 470, 472, 0, 474, 0, 476, 477, 442,
	443, 444, 0, 445, 0, 0, 0, 0, 465, 488,
	0, 488, 61, 488, 63, 0, 482, 70, 71, 0,
	0, 77, 196, 197, 0, 258, 0, 118, 0, 0,
	216, 229, 229, 229, 220, 230, 221, 0, 188, 0,
	185, 122, 182, 195, 195, 151, 0, 152, 153, 154,
	0, 170, 0, 0, 0, 251, 82, 673, 672, 214,
	214, 209, 210, 0, 212, 0, 173, 84, 0, 775,
	109, 110, 264, 265, 266, 267, 0, 89, 0, 0,
	0, 0, 271, 0, 303, 354, 354, 506, 0, 526,
	509, 568, 569, 0, 641, 665, 42, 0, 172, 172,
	620, 172, 176, 623, 172, 625, 172, 628, 0, 0,
	0, 0, 0, 0, 0, 632, 582, 638, 0, 640,
	0, 0, 0, 192, 686, 683, 41, 655, 0, 489,
	429, 45, 49, 0, 723, 714, 725, 727, 0, 0,
	0, 719, 0, 449, 657, 0, 0, 451, 458, 0,
	0, 452, 0, 453, 473, 475, -2, 0, 0, 0,
	0, 657, 488, 56, 57, 0, 74, 75, 76, 256,
	259, 0, 234, 0, 217, 218, 219, 0, 190, 0,
	187, 147, 148, 193, 194, 192, 0, 192, 0, 177,
	0, 243, 252, 0, 670, 671, 0, 0, 211, 213,
	95, 0, 272, 0, 87, 88, 0, 0, 277, 301,
	324, 329, 510, 570, 681, 573, 617, 192, 621, 622,
	624, 626, 627, 629, 575, 574, 0, 0, 0, 0,
	0, 665, 0, 636, 0, 0, 192, 706, 46, 0,
	0, 0, 50, 0, 728, 0, 0, 0, 0, 65,
	0, 665, 732, 733, 455, 0, 460, 0, 0, 0,
	463, 665, 55, 206, 0, 447, 198, 191, 0, 195,
	171, 195, 0, 0, 253, 674, 675, 676, 677, 678,
	679, 680, 0, 90, 91, 0, 0, 0, 43, 618,
	619, 0, 0, 0, 0, 610, 0, 633, 0, 0,
	688, 687, 700, 704, 656, 654, 0, 726, 0, 718,
	721, 717, 720, 450, 53, 0, 0, 485, 0, 0,
	483, 54, 205, 0, 0, 203, 0, 200, 202, 189,
	160, 161, 175, 178, 0, 295, 0, 0, 0, 0,
	279, 576, 578, 577, 579, 0, 0, 0, 581, 598,
	599, 706, 0, 699, 702, -2, 0, 0, 716, 0,
	456, 484, 486, 487, 446, 0, 448, 121, 0, 199,
	201, 294, 0, 0, 92, 93, 86, 580, 0, 0,
	0, 693, 691, 691, 704, 0, 708, 0, 713, 0,
	724, 722, 0, 204, 296, 0, 89, 611, 0, 614,
	696, 0, 689, 692, 690, 701, 0, 707, 0, 0,
	705, 0, 0, 276, 612, 685, 0, 694, 695, 703,
	0, 0, 0, 0, 0, 697, 698, 709, 711, 238,
	0, 0, 239, 240, 0, 0, 0, 613, 241, 0,
	0, 0, 297, 298, 244, 246, 247, 0, 0, 245,
	248, 249, 250,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 395,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:374
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:379
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:380
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:384
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:413
		{
			setParseTree(yylex, nil)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:419
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:423
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:427
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:432
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:436
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 36:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:442
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 37:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:448
		{
			yyVAL.statement = &Load{}
		}
	case 38:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:454
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 39:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:463
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 40:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:467
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 41:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:471
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 42:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:494
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:502
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 44:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:508
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:514
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 46:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:522
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:528
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 48:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:532
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:539
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:551
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.insertAction = InsertAct
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:567
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 53:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:573
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 54:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:579
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 55:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:583
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:587
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 57:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:591
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:596
		{
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:597
		{
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:605
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:611
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:615
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:620
		{
			yyVAL.partitions = nil
		}
	case 65:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:624
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:630
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:636
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 68:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:640
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 71:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:660
		{
			yyVAL.characteristic = ReadWrite
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:664
		{
			yyVAL.characteristic = ReadOnly
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:670
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:674
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:678
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:682
		{
			yyVAL.isolationLevel = Serializable
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:688
		{
			yyVAL.scope = SessionScope
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:692
		{
			yyVAL.scope = GlobalScope
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:698
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:703
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:709
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:716
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:720
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:731
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:735
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:741
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:746
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:751
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:757
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:762
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:768
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:774
		{
			yyVAL.ddl = &DDL{Action: CreateDDLAction, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:781
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, IndexType: yyDollar[5].str, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:788
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:806
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:812
		{
			yyVAL.collateAndCharsets = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:816
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:822
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:826
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:830
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:834
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:839
		{
			yyVAL.boolean = false
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:843
		{
			yyVAL.boolean = true
		}
	case 109:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:849
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 110:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:853
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:859
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 112:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:863
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 113:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:870
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:874
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:880
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:890
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:894
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:899
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:903
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:909
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:920
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:931
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:950
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 148:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1066
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1070
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1074
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1078
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1082
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1086
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 161:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1097
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1136
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1141
		{
			yyVAL.literal = nil
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1145
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1150
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1154
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1166
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 178:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1172
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1180
		{
			yyVAL.boolean = false
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1184
		{
			yyVAL.boolean = true
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1189
		{
			yyVAL.boolean = false
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1193
		{
			yyVAL.boolean = true
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1199
		{
			yyVAL.boolean = false
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1203
		{
			yyVAL.boolean = false
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1207
		{
			yyVAL.boolean = true
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1212
		{
			yyVAL.optVal = nil
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1216
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.optVal = nil
		}
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.boolean = true
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1239
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1247
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1252
		{
			yyVAL.str = ""
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1256
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1260
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1265
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1269
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.colKeyOpt = colKey
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1277
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1286
		{
			yyVAL.literal = nil
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1296
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1301
		{
			yyVAL.indexOptions = nil
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1311
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1315
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1321
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1330
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1334
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1340
		{
			yyVAL.str = ""
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1344
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1350
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1354
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1358
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1362
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1376
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1380
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1384
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1391
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1395
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1401
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1405
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = ""
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1420
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1424
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1430
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1436
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1440
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1446
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1450
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1456
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 239:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1460
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 240:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1464
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 241:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1468
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1472
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 243:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1478
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1484
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1490
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1496
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1500
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1504
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1508
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1512
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1517
		{
			yyVAL.boolean = true
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.boolean = true
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1525
		{
			yyVAL.boolean = false
		}
	case 254:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1530
		{
			yyVAL.str = ""
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1538
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = yyDollar[1].str
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1554
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1560
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1574
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1586
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1591
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1596
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1600
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1604
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 271:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1611
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 272:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1618
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 273:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1630
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 274:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1640
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1644
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1648
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 277:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1661
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 278:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1671
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 279:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1675
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 294:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1704
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1710
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 297:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1720
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 298:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1724
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1730
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1736
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1740
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1748
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 303:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1752
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1757
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 305:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1761
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 306:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1765
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1771
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1775
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1780
		{
			yyVAL.statement = &OtherRead{}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1786
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1791
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1796
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1801
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1806
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1810
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1822
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1826
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1831
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1836
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1841
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1846
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 324:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1850
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1855
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1859
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1863
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1867
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 329:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1871
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 330:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1875
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1893
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1897
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1902
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1906
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1914
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1919
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1933
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1939
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1943
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1953
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1959
		{
			yyVAL.str = ""
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1963
		{
			yyVAL.str = "extended "
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1969
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1973
		{
			yyVAL.str = "full "
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1979
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1983
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1989
		{
			yyVAL.str = ""
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1993
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2003
		{
			yyVAL.showFilter = nil
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2007
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2011
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2017
		{
			yyVAL.showFilter = nil
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2021
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2027
		{
			yyVAL.scope = ImplicitScope
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2031
		{
			yyVAL.scope = SessionScope
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2035
		{
			yyVAL.scope = GlobalScope
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2041
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2045
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2051
		{
			yyVAL.statement = &Begin{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2055
		{
			yyVAL.statement = &Begin{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = &Commit{}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &Rollback{}
		}
	case 368:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 369:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2076
		{
			yyVAL.empty = struct{}{}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.empty = struct{}{}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2081
		{
			yyVAL.empty = struct{}{}
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2083
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2099
		{
			yyVAL.explainType = EmptyType
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2103
		{
			yyVAL.explainType = JSONType
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2107
		{
			yyVAL.explainType = TreeType
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2111
		{
			yyVAL.explainType = VitessType
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.explainType = TraditionalType
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.explainType = AnalyzeType
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2125
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2133
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2139
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2143
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2147
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 388:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2156
		{
			yyVAL.str = ""
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2160
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2164
		{
			yyVAL.str = ""
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2170
		{
			yyVAL.statement = &OtherRead{}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2174
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2180
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2184
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2188
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2192
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2198
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2202
		{
			setAllowComments(yylex, true)
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2206
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2212
		{
			yyVAL.bytes2 = nil
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.boolean = true
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2226
		{
			yyVAL.boolean = false
		}
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2230
		{
			yyVAL.boolean = true
		}
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2235
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2243
		{
			yyVAL.str = SQLCacheStr
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2248
		{
			yyVAL.boolean = false
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2252
		{
			yyVAL.boolean = true
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2256
		{
			yyVAL.boolean = true
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2261
		{
			yyVAL.selectExprs = nil
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2265
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2270
		{
			yyVAL.strs = nil
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2278
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2282
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 417:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2286
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.str = SQLCacheStr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2300
		{
			yyVAL.str = DistinctStr
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2304
		{
			yyVAL.str = DistinctStr
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2308
		{
			yyVAL.str = StraightJoinHint
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2312
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2322
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2328
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 427:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2332
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2336
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2340
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2345
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2353
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2365
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2369
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2375
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2379
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2393
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 443:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2397
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2403
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2409
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 446:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2413
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2419
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2423
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 449:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2429
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2446
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2450
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2454
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2458
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2464
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2466
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2470
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2476
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2478
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2481
		{
			yyVAL.empty = struct{}{}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.empty = struct{}{}
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2486
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2490
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2494
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2507
		{
			yyVAL.joinType = NormalJoinType
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2511
		{
			yyVAL.joinType = NormalJoinType
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.joinType = NormalJoinType
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.joinType = StraightJoinType
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2527
		{
			yyVAL.joinType = LeftJoinType
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2531
		{
			yyVAL.joinType = LeftJoinType
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2535
		{
			yyVAL.joinType = RightJoinType
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2539
		{
			yyVAL.joinType = RightJoinType
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2549
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2559
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2569
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 481:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2573
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2579
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 483:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2584
		{
			yyVAL.indexHints = nil
		}
	case 484:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2588
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 485:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2592
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 486:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2596
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 487:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2600
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2605
		{
			yyVAL.expr = nil
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2609
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2615
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2619
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2623
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2627
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2631
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2635
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2639
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2643
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2649
		{
			yyVAL.str = ""
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2653
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2669
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2673
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2677
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2681
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 506:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2685
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2689
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2693
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 509:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2697
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 510:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2701
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2705
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2711
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2715
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2719
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2723
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2727
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2731
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2737
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2741
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2745
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2757
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2761
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2766
		{
			yyVAL.expr = nil
		}
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2770
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2776
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2784
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2790
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2796
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2818
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2822
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2826
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2830
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2834
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2838
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2846
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2850
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2854
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2858
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2862
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2866
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2870
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2886
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2890
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2894
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2898
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2902
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2906
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2914
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2928
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2932
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2936
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2954
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 568:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2958
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 569:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2962
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2966
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2976
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2980
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 573:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2984
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 574:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2988
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 575:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2992
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 576:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2996
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3000
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 578:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3004
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 579:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3008
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 580:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3012
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 581:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3016
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 582:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3020
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3024
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3063
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3068
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3081
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3086
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3096
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 598:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3100
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 599:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3104
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3114
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3124
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 606:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3136
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3140
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3144
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3148
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3154
		{
			yyVAL.matchExprOption = NoOption
		}
	case 611:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3158
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 612:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3162
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 613:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3166
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3170
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3176
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3180
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3186
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3190
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 619:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3194
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3198
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 621:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3202
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3206
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3212
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 624:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3216
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3220
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3228
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3236
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 630:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3241
		{
			yyVAL.expr = nil
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3245
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 632:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3250
		{
			yyVAL.str = string("")
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3260
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3264
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 636:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3270
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3275
		{
			yyVAL.expr = nil
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3279
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3289
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 641:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3293
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3299
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3303
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3307
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3311
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3315
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3319
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3327
		{
			yyVAL.expr = &NullVal{}
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3333
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3342
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3351
		{
			yyVAL.exprs = nil
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3355
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 655:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3360
		{
			yyVAL.expr = nil
		}
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3364
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 657:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3369
		{
			yyVAL.orderBy = nil
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3379
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3389
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 662:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3394
		{
			yyVAL.orderDirection = AscOrder
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3398
		{
			yyVAL.orderDirection = AscOrder
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3402
		{
			yyVAL.orderDirection = DescOrder
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3407
		{
			yyVAL.limit = nil
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3411
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3415
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 668:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3419
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3424
		{
			yyVAL.indexOptions = nil
		}
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3428
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3432
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3436
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3440
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3455
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3459
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3465
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3469
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 680:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3478
		{
			yyVAL.lock = NoLock
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3482
		{
			yyVAL.lock = ForUpdateLock
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3486
		{
			yyVAL.lock = ShareModeLock
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3491
		{
			yyVAL.selectInto = nil
		}
	case 685:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3495
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3499
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3503
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3508
		{
			yyVAL.str = ""
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3516
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3521
		{
			yyVAL.str = ""
		}
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3525
		{
			yyVAL.str = " header"
		}
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3530
		{
			yyVAL.str = ""
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = " manifest on"
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3538
		{
			yyVAL.str = " manifest off"
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3547
		{
			yyVAL.str = " overwrite on"
		}
	case 698:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = " overwrite off"
		}
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3562
		{
			yyVAL.str = ""
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3566
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3571
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3589
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3598
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3602
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3607
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3611
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3616
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3620
		{
			yyVAL.str = " optionally"
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3633
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3637
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3641
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3645
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3649
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3655
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3659
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3667
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3672
		{
			yyVAL.updateExprs = nil
		}
	case 724:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3676
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3682
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 726:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3686
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3692
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3696
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3702
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3718
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3722
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3728
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 734:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3734
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3738
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3744
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3748
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3752
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3756
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3760
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3768
		{
			yyVAL.bytes = []byte("charset")
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 745:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.expr = &Default{}
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3792
		{
			yyVAL.boolean = false
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3794
		{
			yyVAL.boolean = true
		}
	case 751:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3797
		{
			yyVAL.boolean = false
		}
	case 752:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3799
		{
			yyVAL.boolean = true
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3802
		{
			yyVAL.ignore = false
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3804
		{
			yyVAL.ignore = true
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3808
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3810
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3814
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3816
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3820
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3822
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3824
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3826
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3830
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = ""
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3845
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 774:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3852
		{
			yyVAL.str = ""
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3854
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3862
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3886
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4236
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4245
		{
			decNesting(yylex)
		}
	case 1110:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4250
		{
			skipToEnd(yylex)
		}
	case 1111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4255
		{
			skipToEnd(yylex)
		}
	case 1112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			skipToEnd(yylex)
		}
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4263
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
