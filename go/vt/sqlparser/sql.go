// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const CANCEL = 57553
const RETRY = 57554
const COMPLETE = 57555
const BEGIN = 57556
const START = 57557
const TRANSACTION = 57558
const COMMIT = 57559
const ROLLBACK = 57560
const SAVEPOINT = 57561
const RELEASE = 57562
const WORK = 57563
const BIT = 57564
const TINYINT = 57565
const SMALLINT = 57566
const MEDIUMINT = 57567
const INT = 57568
const INTEGER = 57569
const BIGINT = 57570
const INTNUM = 57571
const REAL = 57572
const DOUBLE = 57573
const FLOAT_TYPE = 57574
const DECIMAL = 57575
const NUMERIC = 57576
const TIME = 57577
const TIMESTAMP = 57578
const DATETIME = 57579
const YEAR = 57580
const CHAR = 57581
const VARCHAR = 57582
const BOOL = 57583
const CHARACTER = 57584
const VARBINARY = 57585
const NCHAR = 57586
const TEXT = 57587
const TINYTEXT = 57588
const MEDIUMTEXT = 57589
const LONGTEXT = 57590
const BLOB = 57591
const TINYBLOB = 57592
const MEDIUMBLOB = 57593
const LONGBLOB = 57594
const JSON = 57595
const ENUM = 57596
const GEOMETRY = 57597
const POINT = 57598
const LINESTRING = 57599
const POLYGON = 57600
const GEOMETRYCOLLECTION = 57601
const MULTIPOINT = 57602
const MULTILINESTRING = 57603
const MULTIPOLYGON = 57604
const NULLX = 57605
const AUTO_INCREMENT = 57606
const APPROXNUM = 57607
const SIGNED = 57608
const UNSIGNED = 57609
const ZEROFILL = 57610
const COLLATION = 57611
const DATABASES = 57612
const SCHEMAS = 57613
const TABLES = 57614
const VITESS_METADATA = 57615
const VSCHEMA = 57616
const FULL = 57617
const PROCESSLIST = 57618
const COLUMNS = 57619
const FIELDS = 57620
const ENGINES = 57621
const PLUGINS = 57622
const EXTENDED = 57623
const KEYSPACES = 57624
const VITESS_KEYSPACES = 57625
const VITESS_SHARDS = 57626
const VITESS_TABLETS = 57627
const VITESS_MIGRATIONS = 57628
const CODE = 57629
const PRIVILEGES = 57630
const FUNCTION = 57631
const OPEN = 57632
const TRIGGERS = 57633
const EVENT = 57634
const USER = 57635
const NAMES = 57636
const CHARSET = 57637
const GLOBAL = 57638
const SESSION = 57639
const ISOLATION = 57640
const LEVEL = 57641
const READ = 57642
const WRITE = 57643
const ONLY = 57644
const REPEATABLE = 57645
const COMMITTED = 57646
const UNCOMMITTED = 57647
const SERIALIZABLE = 57648
const CURRENT_TIMESTAMP = 57649
const DATABASE = 57650
const CURRENT_DATE = 57651
const CURRENT_TIME = 57652
const LOCALTIME = 57653
const LOCALTIMESTAMP = 57654
const CURRENT_USER = 57655
const UTC_DATE = 57656
const UTC_TIME = 57657
const UTC_TIMESTAMP = 57658
const REPLACE = 57659
const CONVERT = 57660
const CAST = 57661
const SUBSTR = 57662
const SUBSTRING = 57663
const GROUP_CONCAT = 57664
const SEPARATOR = 57665
const TIMESTAMPADD = 57666
const TIMESTAMPDIFF = 57667
const MATCH = 57668
const AGAINST = 57669
const BOOLEAN = 57670
const LANGUAGE = 57671
const WITH = 57672
const QUERY = 57673
const EXPANSION = 57674
const WITHOUT = 57675
const VALIDATION = 57676
const UNUSED = 57677
const ARRAY = 57678
const CUME_DIST = 57679
const DESCRIPTION = 57680
const DENSE_RANK = 57681
const EMPTY = 57682
const EXCEPT = 57683
const FIRST_VALUE = 57684
const GROUPING = 57685
const GROUPS = 57686
const JSON_TABLE = 57687
const LAG = 57688
const LAST_VALUE = 57689
const LATERAL = 57690
const LEAD = 57691
const MEMBER = 57692
const NTH_VALUE = 57693
const NTILE = 57694
const OF = 57695
const OVER = 57696
const PERCENT_RANK = 57697
const RANK = 57698
const RECURSIVE = 57699
const ROW_NUMBER = 57700
const SYSTEM = 57701
const WINDOW = 57702
const ACTIVE = 57703
const ADMIN = 57704
const BUCKETS = 57705
const CLONE = 57706
const COMPONENT = 57707
const DEFINITION = 57708
const ENFORCED = 57709
const EXCLUDE = 57710
const FOLLOWING = 57711
const GEOMCOLLECTION = 57712
const GET_MASTER_PUBLIC_KEY = 57713
const HISTOGRAM = 57714
const HISTORY = 57715
const INACTIVE = 57716
const INVISIBLE = 57717
const LOCKED = 57718
const MASTER_COMPRESSION_ALGORITHMS = 57719
const MASTER_PUBLIC_KEY_PATH = 57720
const MASTER_TLS_CIPHERSUITES = 57721
const MASTER_ZSTD_COMPRESSION_LEVEL = 57722
const NESTED = 57723
const NETWORK_NAMESPACE = 57724
const NOWAIT = 57725
const NULLS = 57726
const OJ = 57727
const OLD = 57728
const OPTIONAL = 57729
const ORDINALITY = 57730
const ORGANIZATION = 57731
const OTHERS = 57732
const PATH = 57733
const PERSIST = 57734
const PERSIST_ONLY = 57735
const PRECEDING = 57736
const PRIVILEGE_CHECKS_USER = 57737
const PROCESS = 57738
const RANDOM = 57739
const REFERENCE = 57740
const REQUIRE_ROW_FORMAT = 57741
const RESOURCE = 57742
const RESPECT = 57743
const RESTART = 57744
const RETAIN = 57745
const REUSE = 57746
const ROLE = 57747
const SECONDARY = 57748
const SECONDARY_ENGINE = 57749
const SECONDARY_LOAD = 57750
const SECONDARY_UNLOAD = 57751
const SKIP = 57752
const SRID = 57753
const THREAD_PRIORITY = 57754
const TIES = 57755
const UNBOUNDED = 57756
const VCPU = 57757
const VISIBLE = 57758
const FORMAT = 57759
const TREE = 57760
const VITESS = 57761
const TRADITIONAL = 57762
const LOCAL = 57763
const LOW_PRIORITY = 57764
const NO_WRITE_TO_BINLOG = 57765
const LOGS = 57766
const ERROR = 57767
const GENERAL = 57768
const HOSTS = 57769
const OPTIMIZER_COSTS = 57770
const USER_RESOURCES = 57771
const SLOW = 57772
const CHANNEL = 57773
const RELAY = 57774
const EXPORT = 57775
const AVG_ROW_LENGTH = 57776
const CONNECTION = 57777
const CHECKSUM = 57778
const DELAY_KEY_WRITE = 57779
const ENCRYPTION = 57780
const ENGINE = 57781
const INSERT_METHOD = 57782
const MAX_ROWS = 57783
const MIN_ROWS = 57784
const PACK_KEYS = 57785
const PASSWORD = 57786
const FIXED = 57787
const DYNAMIC = 57788
const COMPRESSED = 57789
const REDUNDANT = 57790
const COMPACT = 57791
const ROW_FORMAT = 57792
const STATS_AUTO_RECALC = 57793
const STATS_PERSISTENT = 57794
const STATS_SAMPLE_PAGES = 57795
const STORAGE = 57796
const MEMORY = 57797
const DISK = 57798

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"COMPLETE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	164, 933,
	-2, 91,
	-1, 45,
	1, 112,
	474, 112,
	-2, 118,
	-1, 46,
	143, 118,
	259, 118,
	312, 118,
	-2, 326,
	-1, 53,
	34, 472,
	165, 472,
	177, 472,
	210, 486,
	211, 486,
	-2, 474,
	-1, 58,
	167, 496,
	-2, 494,
	-1, 84,
	56, 564,
	-2, 572,
	-1, 109,
	1, 113,
	474, 113,
	-2, 118,
	-1, 119,
	170, 231,
	171, 231,
	-2, 320,
	-1, 138,
	143, 118,
	259, 118,
	312, 118,
	-2, 335,
	-1, 579,
	150, 954,
	-2, 950,
	-1, 580,
	150, 955,
	-2, 951,
	-1, 599,
	56, 565,
	-2, 577,
	-1, 600,
	56, 566,
	-2, 578,
	-1, 621,
	118, 1296,
	-2, 84,
	-1, 622,
	118, 1178,
	-2, 85,
	-1, 628,
	118, 1228,
	-2, 927,
	-1, 765,
	118, 1115,
	-2, 924,
	-1, 799,
	176, 38,
	181, 38,
	-2, 242,
	-1, 880,
	1, 373,
	474, 373,
	-2, 118,
	-1, 1118,
	1, 269,
	474, 269,
	-2, 118,
	-1, 1196,
	170, 231,
	171, 231,
	-2, 320,
	-1, 1205,
	176, 39,
	181, 39,
	-2, 243,
	-1, 1418,
	150, 957,
	-2, 953,
	-1, 1510,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1531,
	1, 270,
	474, 270,
	-2, 118,
	-1, 1943,
	5, 820,
	18, 820,
	20, 820,
	32, 820,
	83, 820,
	-2, 604,
	-1, 2155,
	46, 895,
	-2, 889,
}

const yyPrivate = 57344

const yyLast = 27995

var yyAct = [...]int{
	579, 2240, 2184, 2229, 2206, 2168, 1995, 1856, 523, 1546,
	1744, 2156, 1711, 2084, 2106, 939, 552, 1923, 1924, 1992,
	1528, 538, 1455, 1561, 1829, 1595, 1731, 1066, 1020, 1920,
	1810, 521, 83, 3, 1566, 892, 1181, 1745, 769, 1809,
	147, 829, 1507, 1073, 1882, 1935, 1671, 919, 1808, 179,
	1404, 1412, 191, 1645, 486, 191, 1203, 133, 1593, 1318,
	502, 1568, 191, 1802, 794, 1110, 1103, 626, 1489, 1496,
	191, 1093, 1071, 601, 1457, 1825, 1076, 81, 1096, 586,
	1094, 1058, 1438, 956, 1381, 1221, 525, 33, 592, 776,
	1100, 1180, 502, 1293, 514, 502, 191, 502, 777, 1175,
	781, 773, 800, 1472, 797, 795, 1107, 623, 1109, 1210,
	1083, 1323, 1415, 1557, 796, 1512, 886, 79, 110, 150,
	178, 111, 1195, 509, 937, 116, 1547, 807, 871, 1033,
	8, 1178, 7, 6, 1848, 1847, 1624, 1034, 78, 1280,
	2108, 1870, 117, 1871, 1452, 1453, 1370, 180, 181, 182,
	1369, 1368, 1367, 1366, 1365, 512, 2198, 513, 1709, 770,
	2152, 1969, 2063, 608, 612, 112, 957, 587, 1358, 118,
	2130, 2129, 2079, 191, 833, 2080, 2239, 831, 2246, 834,
	461, 832, 84, 2203, 191, 80, 885, 510, 2179, 191,
	845, 846, 2232, 849, 850, 851, 852, 1996, 620, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 957, 1612, 171, 1182, 627, 86,
	87, 88, 89, 90, 91, 810, 2202, 1661, 788, 112,
	1899, 787, 967, 2178, 2027, 786, 1631, 1710, 1571, 789,
	1630, 113, 1949, 135, 835, 836, 837, 1869, 811, 1950,
	1951, 1659, 155, 2142, 982, 981, 991, 992, 984, 985,
	986, 987, 988, 989, 990, 983, 1454, 35, 993, 1522,
	72, 39, 40, 1775, 842, 490, 1774, 847, 911, 1776,
	967, 104, 848, 145, 1523, 1524, 785, 171, 134, 1513,
	912, 926, 564, 928, 570, 571, 568, 569, 112, 567,
	566, 565, 905, 1111, 177, 1112, 152, 790, 153, 572,
	573, 955, 113, 122, 123, 144, 143, 170, 1570, 180,
	181, 182, 583, 155, 899, 900, 935, 963, 489, 582,
	925, 927, 1792, 1359, 1360, 1361, 1540, 107, 1858, 99,
	1441, 2181, 71, 2018, 102, 897, 2016, 101, 100, 898,
	899, 900, 500, 1357, 504, 498, 877, 585, 107, 1830,
	185, 186, 1594, 1627, 1779, 139, 120, 146, 127, 119,
	888, 140, 141, 1294, 1852, 963, 156, 152, 1299, 153,
	2231, 2199, 1853, 1270, 913, 872, 161, 128, 170, 932,
	107, 172, 918, 1306, 105, 1307, 906, 1308, 490, 916,
	917, 131, 129, 124, 125, 126, 130, 914, 915, 934,
	1861, 121, 881, 1639, 1859, 105, 1304, 1302, 1303, 854,
	132, 1298, 853, 490, 595, 1271, 1860, 1272, 1296, 818,
	2126, 2074, 1300, 924, 791, 1968, 923, 929, 816, 1596,
	1490, 827, 826, 825, 824, 809, 823, 156, 822, 821,
	820, 489, 922, 815, 176, 1189, 828, 161, 2075, 2247,
	1513, 191, 1297, 962, 959, 960, 961, 966, 968, 965,
	774, 964, 2143, 774, 109, 803, 489, 772, 958, 930,
	2244, 2218, 1629, 774, 1883, 1209, 1208, 502, 502, 502,
	1572, 802, 148, 809, 490, 887, 878, 1179, 895, 106,
	901, 902, 903, 904, 931, 502, 502, 614, 2177, 1712,
	1714, 962, 959, 960, 961, 966, 968, 965, 175, 964,
	106, 936, 819, 1862, 1618, 1311, 958, 2169, 1885, 943,
	933, 817, 838, 1818, 1626, 1908, 1907, 809, 1906, 949,
	809, 1644, 784, 909, 783, 782, 142, 489, 1840, 884,
	780, 460, 106, 183, 1660, 2182, 1638, 1647, 136, 1637,
	2163, 137, 1646, 148, 1614, 2047, 876, 1529, 1005, 1006,
	844, 1282, 1281, 1283, 1284, 1285, 809, 1948, 1789, 1784,
	809, 808, 1690, 191, 1736, 1679, 1604, 812, 802, 1687,
	1887, 1518, 1891, 1087, 1886, 73, 1884, 813, 1018, 993,
	890, 1889, 983, 1771, 896, 993, 1713, 1003, 1468, 94,
	1888, 502, 940, 941, 191, 814, 191, 191, 1353, 502,
	973, 1064, 1785, 1890, 1892, 502, 970, 1901, 2242, 808,
	1063, 2243, 920, 2241, 623, 812, 802, 952, 1647, 950,
	951, 1021, 973, 1646, 1787, 813, 873, 1782, 874, 1324,
	2134, 875, 830, 880, 95, 894, 1933, 1295, 1092, 1783,
	1113, 1059, 149, 154, 151, 157, 158, 159, 160, 162,
	163, 164, 165, 808, 908, 1077, 808, 953, 166, 167,
	168, 169, 879, 802, 805, 806, 910, 774, 1613, 1439,
	1578, 799, 803, 1606, 1606, 1036, 1038, 1040, 1042, 1044,
	1046, 1047, 1611, 1037, 1039, 1056, 1043, 1045, 1609, 1048,
	798, 1075, 808, 1439, 843, 1697, 808, 1610, 1608, 1790,
	1788, 1005, 1006, 802, 805, 806, 1953, 774, 1005, 1006,
	1080, 799, 803, 149, 154, 151, 157, 158, 159, 160,
	162, 163, 164, 165, 818, 627, 816, 2062, 921, 166,
	167, 168, 169, 982, 981, 991, 992, 984, 985, 986,
	987, 988, 989, 990, 983, 1325, 1470, 993, 893, 191,
	174, 1108, 1065, 1171, 986, 987, 988, 989, 990, 983,
	972, 970, 993, 1183, 1184, 1185, 981, 991, 992, 984,
	985, 986, 987, 988, 989, 990, 983, 973, 502, 993,
	1205, 180, 181, 182, 2061, 1406, 1685, 2233, 1214, 2223,
	71, 1289, 1218, 1672, 1684, 502, 502, 1974, 502, 1215,
	502, 502, 1384, 502, 502, 502, 502, 502, 502, 1469,
	1786, 1187, 1188, 1388, 2248, 2234, 1201, 2224, 502, 971,
	972, 970, 191, 1254, 1249, 1250, 613, 1386, 1387, 1385,
	1806, 1194, 1910, 1805, 971, 972, 970, 973, 1267, 1575,
	1287, 1407, 1290, 618, 1213, 1664, 1665, 1666, 779, 502,
	1288, 1275, 973, 1274, 1273, 1265, 1251, 191, 984, 985,
	986, 987, 988, 989, 990, 983, 1259, 191, 993, 1257,
	1258, 191, 1256, 1170, 1255, 1263, 1264, 1230, 1277, 2227,
	1911, 1223, 2249, 1224, 2226, 1226, 1228, 191, 1177, 1232,
	1234, 1236, 1238, 1240, 191, 1191, 1212, 1186, 1192, 1286,
	1204, 191, 191, 191, 191, 191, 191, 191, 191, 191,
	502, 502, 502, 1211, 1211, 1190, 615, 616, 180, 181,
	182, 1328, 1797, 1473, 1474, 1326, 1327, 1686, 1332, 2225,
	1334, 1335, 1336, 1337, 2214, 1339, 191, 1276, 1320, 1331,
	2212, 2097, 977, 1855, 980, 1252, 1338, 2059, 2035, 1354,
	994, 995, 996, 997, 998, 999, 1000, 1956, 978, 979,
	976, 982, 981, 991, 992, 984, 985, 986, 987, 988,
	989, 990, 983, 1382, 1405, 993, 1912, 1815, 1798, 788,
	112, 1312, 787, 1408, 1803, 1317, 991, 992, 984, 985,
	986, 987, 988, 989, 990, 983, 1655, 502, 993, 1330,
	1622, 971, 972, 970, 1621, 971, 972, 970, 1321, 1903,
	1278, 971, 972, 970, 1416, 1427, 1430, 1409, 1410, 973,
	1266, 1440, 1807, 973, 1262, 1261, 1364, 1932, 1260, 973,
	502, 502, 1062, 596, 1349, 1350, 1351, 2124, 971, 972,
	970, 191, 2123, 1383, 80, 1422, 971, 972, 970, 1376,
	1378, 1379, 180, 181, 182, 502, 973, 1732, 1417, 1981,
	2217, 1377, 191, 1994, 973, 502, 1418, 1981, 2175, 191,
	1462, 191, 1021, 180, 181, 182, 1832, 1778, 1817, 191,
	191, 1981, 2164, 1416, 1446, 1447, 502, 1981, 596, 502,
	1981, 2132, 2077, 596, 541, 540, 543, 544, 545, 546,
	502, 623, 1537, 542, 623, 547, 180, 181, 182, 1921,
	1588, 1508, 1606, 596, 2042, 1423, 1424, 1419, 1932, 1429,
	1432, 1433, 596, 1548, 1549, 1550, 1493, 1487, 2045, 596,
	1482, 1483, 1463, 1981, 1986, 1418, 1966, 1965, 1533, 1532,
	1962, 1963, 1475, 35, 1445, 1962, 1961, 1448, 1449, 180,
	181, 182, 1732, 1586, 35, 502, 180, 181, 182, 191,
	1268, 1481, 596, 502, 1536, 1513, 1849, 1584, 1585, 1587,
	1511, 1174, 1834, 1563, 82, 1485, 1827, 1828, 1493, 596,
	1514, 502, 969, 596, 1174, 1173, 1765, 502, 35, 1607,
	1569, 1214, 1519, 1214, 1513, 1520, 1514, 1516, 1119, 1118,
	1481, 1605, 2113, 969, 2133, 1535, 1541, 1981, 1542, 1543,
	1544, 1545, 627, 1739, 1534, 627, 1492, 1964, 71, 1592,
	1493, 1932, 2064, 1521, 1553, 1554, 1555, 1556, 1702, 71,
	589, 502, 1701, 1405, 1481, 1606, 1740, 1589, 1405, 1405,
	1481, 1471, 1515, 1450, 1606, 1362, 1310, 1602, 1105, 1603,
	1517, 1576, 1564, 1573, 580, 1581, 1582, 1583, 1515, 1574,
	1559, 1560, 793, 71, 1857, 792, 1513, 1493, 2167, 1615,
	2065, 2066, 2067, 191, 71, 2086, 1598, 191, 191, 191,
	191, 191, 1245, 1617, 810, 1993, 1564, 1597, 1619, 1620,
	1616, 191, 191, 191, 191, 2053, 1176, 1562, 1648, 1601,
	1854, 1599, 1558, 1552, 191, 71, 192, 811, 1551, 192,
	1292, 191, 1206, 1202, 503, 1172, 192, 1211, 96, 2068,
	1812, 177, 1811, 2087, 192, 1182, 1242, 1936, 1937, 2236,
	1246, 1247, 1248, 2230, 1939, 1942, 191, 502, 1921, 1823,
	1420, 1421, 1650, 1651, 1822, 596, 503, 1653, 1821, 503,
	192, 503, 1579, 1355, 1654, 1313, 1756, 1754, 1941, 2030,
	1753, 1757, 1755, 1625, 2069, 2070, 1752, 1812, 2220, 553,
	34, 1243, 1244, 1498, 1501, 1502, 1503, 1499, 2201, 1500,
	1504, 1913, 1382, 1642, 1758, 1464, 1502, 1503, 1721, 1074,
	2046, 982, 981, 991, 992, 984, 985, 986, 987, 988,
	989, 990, 983, 1984, 34, 993, 982, 981, 991, 992,
	984, 985, 986, 987, 988, 989, 990, 983, 1730, 1729,
	993, 2157, 2159, 2222, 2186, 2205, 1658, 192, 2207, 98,
	2160, 191, 2185, 1719, 103, 2189, 2154, 1309, 192, 191,
	581, 1720, 1816, 192, 1435, 840, 839, 2005, 1811, 588,
	1667, 1868, 1383, 1842, 1498, 1501, 1502, 1503, 1499, 1436,
	1500, 1504, 942, 191, 1936, 1937, 1841, 113, 2111, 1958,
	610, 1718, 1067, 1957, 191, 191, 191, 191, 191, 1680,
	184, 1746, 173, 1725, 1068, 187, 191, 587, 1600, 1220,
	191, 1681, 1219, 191, 191, 1737, 1207, 191, 191, 191,
	1696, 2040, 1741, 606, 602, 1734, 1676, 1677, 1466, 1059,
	1777, 1819, 1708, 1716, 1473, 1474, 1316, 2125, 2081, 603,
	1506, 1728, 1763, 1305, 1724, 590, 591, 1694, 1796, 1727,
	1663, 593, 1793, 1794, 2213, 1766, 515, 1735, 1733, 1768,
	2211, 2210, 1078, 1079, 605, 1747, 604, 1795, 1750, 1799,
	1800, 1801, 1780, 2190, 1759, 1748, 1749, 2188, 1751, 1764,
	191, 2039, 1980, 1590, 1769, 594, 1320, 1772, 82, 2038,
	1916, 502, 606, 602, 1732, 2238, 2237, 502, 1781, 1691,
	502, 1688, 1214, 1831, 1569, 1088, 1081, 502, 603, 2238,
	2161, 1955, 1814, 1467, 589, 80, 1804, 85, 77, 1846,
	1837, 1, 473, 1451, 1057, 485, 2228, 191, 1279, 1813,
	1269, 599, 600, 605, 1997, 604, 2083, 1987, 1845, 1567,
	801, 1844, 138, 1530, 1531, 191, 2171, 1194, 93, 767,
	92, 804, 907, 1591, 2078, 1791, 1539, 1125, 1836, 1123,
	1124, 1122, 1127, 1126, 1417, 1121, 1356, 499, 1505, 1114,
	1082, 841, 1418, 463, 1843, 1835, 1967, 1352, 1623, 469,
	502, 1001, 1726, 1773, 624, 617, 1405, 1927, 2183, 2153,
	2155, 2107, 1864, 2158, 2151, 1879, 1863, 1866, 2221, 2204,
	1867, 1538, 1465, 1070, 2037, 1915, 1695, 1030, 1437, 1881,
	1097, 524, 1461, 1375, 539, 1872, 502, 536, 537, 1476,
	1738, 975, 522, 516, 1880, 1089, 1497, 191, 1495, 1494,
	1878, 1894, 1314, 1101, 1938, 192, 1893, 502, 1900, 1934,
	1095, 1480, 1628, 502, 502, 1851, 954, 598, 1746, 1674,
	1922, 511, 1879, 1675, 97, 1434, 2141, 1925, 1662, 2026,
	597, 503, 503, 503, 1682, 1683, 191, 61, 38, 506,
	1689, 1931, 2197, 1692, 1693, 945, 607, 32, 31, 503,
	503, 1699, 30, 1700, 29, 28, 1703, 1704, 1705, 1706,
	1707, 1944, 23, 1946, 22, 1947, 1940, 21, 20, 19,
	25, 1909, 1717, 18, 17, 16, 108, 48, 1945, 45,
	43, 115, 114, 46, 1959, 1960, 42, 1975, 882, 191,
	1952, 27, 191, 191, 191, 26, 1919, 15, 502, 1930,
	14, 13, 12, 11, 10, 9, 5, 4, 948, 1983,
	1970, 191, 24, 1019, 2, 0, 0, 0, 1761, 1762,
	1971, 0, 0, 1972, 1973, 0, 0, 192, 1998, 502,
	502, 502, 0, 191, 0, 1988, 1982, 0, 1991, 1985,
	0, 1569, 2006, 0, 1990, 2029, 938, 938, 938, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 192, 0,
	192, 192, 0, 503, 0, 0, 34, 0, 0, 503,
	0, 0, 2003, 2004, 0, 0, 0, 0, 0, 1002,
	1004, 2014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2036, 982, 981, 991, 992, 984, 985, 986, 987,
	988, 989, 990, 983, 0, 0, 993, 0, 0, 0,
	1017, 1746, 0, 0, 1022, 1023, 1024, 1025, 1026, 1027,
	1028, 1029, 2041, 1032, 1035, 1035, 1035, 1041, 1035, 1035,
	1041, 1035, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 2009,
	2050, 2058, 2056, 2060, 1061, 2049, 0, 2057, 34, 0,
	0, 502, 502, 2011, 2012, 0, 2013, 0, 2055, 2015,
	0, 2017, 0, 0, 502, 0, 2071, 502, 0, 0,
	0, 0, 0, 0, 0, 1098, 0, 0, 974, 0,
	0, 0, 2085, 2090, 0, 0, 0, 1876, 1877, 0,
	0, 0, 2089, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 502, 502, 502, 191, 0, 2088, 0, 0,
	0, 0, 0, 192, 515, 2105, 502, 0, 502, 0,
	0, 0, 0, 1031, 502, 0, 2072, 2104, 551, 1925,
	0, 2112, 0, 1925, 2116, 0, 0, 0, 2110, 2082,
	0, 0, 503, 0, 0, 0, 191, 2114, 0, 2121,
	518, 2122, 0, 1928, 1069, 1072, 0, 502, 191, 503,
	503, 0, 503, 0, 503, 503, 0, 503, 503, 503,
	503, 503, 503, 2128, 1943, 0, 0, 2100, 2102, 2103,
	190, 0, 503, 497, 2131, 2096, 192, 2150, 0, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 190, 2119,
	1925, 2162, 0, 0, 502, 502, 0, 0, 2118, 0,
	0, 0, 0, 503, 2120, 611, 611, 2170, 0, 2085,
	2172, 192, 0, 0, 190, 0, 0, 0, 2165, 0,
	0, 192, 2135, 0, 502, 192, 2180, 2187, 502, 2024,
	1746, 2193, 2191, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 2200, 2023, 0, 2209, 2208, 192, 0,
	0, 0, 0, 0, 0, 192, 192, 192, 192, 192,
	192, 192, 192, 192, 503, 503, 503, 2219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2008,
	0, 0, 0, 2010, 0, 0, 0, 0, 0, 0,
	192, 190, 2235, 0, 2019, 2020, 0, 171, 0, 0,
	2245, 0, 190, 2196, 0, 0, 0, 190, 0, 0,
	2034, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 2043, 2044, 0,
	0, 2048, 0, 155, 0, 0, 0, 0, 982, 981,
	991, 992, 984, 985, 986, 987, 988, 989, 990, 983,
	0, 503, 993, 982, 981, 991, 992, 984, 985, 986,
	987, 988, 989, 990, 983, 2022, 0, 993, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 938,
	938, 938, 0, 0, 503, 503, 0, 152, 2076, 153,
	0, 0, 0, 0, 0, 192, 0, 0, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 503,
	0, 0, 0, 0, 0, 0, 192, 0, 0, 503,
	0, 0, 0, 192, 0, 192, 0, 0, 0, 0,
	0, 0, 2101, 192, 192, 0, 0, 0, 0, 0,
	503, 0, 0, 503, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 503, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 550, 0, 0, 161, 0, 0,
	0, 0, 0, 0, 982, 981, 991, 992, 984, 985,
	986, 987, 988, 989, 990, 983, 0, 0, 993, 0,
	2021, 0, 2137, 2138, 2139, 2140, 0, 2144, 0, 2145,
	2146, 2147, 0, 2148, 2149, 0, 0, 0, 0, 503,
	0, 0, 0, 192, 0, 0, 0, 503, 0, 0,
	1371, 1372, 1373, 1374, 501, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 503, 2176, 0, 0, 0, 0, 0, 1509, 0,
	0, 0, 0, 0, 0, 0, 625, 0, 0, 771,
	0, 778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 148, 0, 1425, 1426, 0, 0, 190,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 2215, 2216, 0, 0, 982,
	981, 991, 992, 984, 985, 986, 987, 988, 989, 990,
	983, 0, 515, 993, 982, 981, 991, 992, 984, 985,
	986, 987, 988, 989, 990, 983, 0, 192, 993, 0,
	0, 192, 192, 192, 192, 192, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 192, 192, 192, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 0, 1527, 192, 0, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 0, 0, 0,
	0, 0, 1673, 0, 0, 0, 0, 0, 0, 0,
	192, 503, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 982, 981, 991, 992, 984, 985, 986, 987,
	988, 989, 990, 983, 0, 0, 993, 611, 0, 0,
	0, 0, 0, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 190, 1104, 0, 0, 0, 0,
	0, 0, 0, 149, 154, 151, 157, 158, 159, 160,
	162, 163, 164, 165, 0, 0, 0, 0, 0, 166,
	167, 168, 169, 982, 981, 991, 992, 984, 985, 986,
	987, 988, 989, 990, 983, 0, 0, 993, 0, 0,
	0, 0, 0, 0, 0, 192, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 192,
	192, 192, 192, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 192, 0, 0, 192, 192, 0,
	0, 192, 192, 192, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1678, 0, 0, 588,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1715, 0, 0, 0,
	0, 0, 0, 0, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 0, 0, 0, 1217,
	0, 503, 1098, 0, 503, 0, 0, 0, 0, 1742,
	1743, 503, 0, 1098, 1098, 1098, 1098, 1098, 0, 0,
	0, 625, 625, 625, 1217, 1217, 0, 0, 0, 1509,
	190, 192, 1098, 0, 0, 0, 1098, 0, 0, 944,
	946, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 1319,
	0, 0, 0, 0, 503, 0, 0, 0, 0, 0,
	1722, 1723, 1072, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 1340,
	1341, 190, 190, 190, 190, 190, 190, 190, 0, 0,
	503, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 192, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 503, 0, 0, 190, 1085, 0, 503, 503, 0,
	0, 0, 0, 625, 0, 0, 0, 0, 0, 1115,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1380, 0, 0, 1389,
	1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399,
	1400, 1401, 1402, 1403, 0, 0, 611, 1319, 0, 0,
	0, 611, 611, 0, 0, 611, 611, 611, 0, 0,
	0, 1217, 0, 192, 0, 0, 192, 192, 192, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	611, 611, 611, 611, 611, 192, 1442, 0, 0, 1459,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1926, 0, 34, 503, 503, 503, 0, 192, 0, 0,
	190, 0, 1060, 0, 0, 0, 1319, 190, 0, 190,
	0, 0, 0, 0, 0, 1098, 0, 190, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 771, 0, 505, 0, 0, 0, 0, 0,
	0, 0, 584, 0, 0, 1216, 0, 0, 0, 1222,
	1222, 0, 1222, 1917, 1222, 1222, 0, 1231, 1222, 1222,
	1222, 1222, 1222, 0, 0, 0, 0, 190, 775, 0,
	1216, 1216, 771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 503, 503, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 0,
	0, 503, 0, 1291, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2025,
	0, 0, 0, 0, 0, 0, 2031, 2032, 2033, 0,
	0, 0, 0, 0, 0, 0, 503, 503, 503, 192,
	0, 0, 0, 0, 0, 870, 0, 0, 0, 0,
	503, 0, 503, 0, 0, 0, 883, 0, 503, 0,
	0, 889, 0, 0, 625, 625, 625, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 190, 0, 0, 0, 190, 190, 190, 190, 190,
	0, 503, 192, 0, 0, 0, 0, 0, 0, 190,
	190, 190, 190, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 0, 0, 190,
	0, 0, 0, 0, 2028, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 503, 503,
	0, 0, 0, 0, 190, 0, 0, 515, 0, 0,
	0, 1411, 0, 625, 2051, 0, 0, 2052, 0, 0,
	2054, 0, 1926, 0, 34, 0, 1926, 1216, 503, 0,
	0, 0, 503, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1443, 1444, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1668, 1669, 1670,
	0, 34, 611, 611, 0, 0, 0, 0, 0, 1477,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1085,
	0, 0, 625, 611, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1926, 0, 0, 0, 0, 0, 190,
	625, 0, 0, 625, 0, 34, 2166, 1459, 0, 0,
	0, 0, 0, 0, 771, 0, 0, 0, 0, 2109,
	515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	611, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1217, 190, 190, 190, 190, 190, 0, 0, 0,
	0, 0, 0, 0, 1760, 0, 0, 0, 190, 0,
	0, 190, 190, 0, 0, 190, 1770, 1319, 0, 778,
	0, 0, 0, 0, 0, 0, 0, 1580, 0, 0,
	171, 0, 0, 0, 0, 0, 0, 0, 180, 181,
	182, 1824, 0, 891, 0, 771, 0, 0, 0, 0,
	0, 778, 0, 0, 0, 113, 0, 135, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1217, 0, 771, 0, 145, 478, 0,
	0, 0, 134, 1319, 0, 0, 0, 477, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 475, 0,
	152, 0, 153, 0, 0, 190, 0, 1197, 1198, 144,
	143, 170, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 0, 0, 0, 484, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 611, 0, 139,
	1199, 146, 0, 1196, 0, 140, 141, 0, 0, 0,
	156, 0, 0, 1874, 1875, 0, 1091, 0, 0, 1102,
	161, 1657, 0, 0, 0, 0, 0, 0, 1895, 1896,
	0, 1897, 1898, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 1904, 1905, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1217, 0,
	462, 464, 465, 0, 481, 483, 491, 0, 0, 0,
	479, 480, 492, 466, 467, 496, 495, 482, 0, 471,
	468, 470, 476, 0, 190, 0, 489, 474, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1193, 0,
	0, 0, 0, 0, 0, 1954, 148, 0, 0, 0,
	0, 0, 113, 0, 135, 0, 0, 190, 0, 0,
	190, 190, 190, 155, 0, 0, 0, 0, 0, 1217,
	0, 0, 0, 0, 0, 0, 0, 1216, 0, 190,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1120, 0, 0, 145, 0, 0, 0, 0, 134,
	142, 190, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 137, 0, 152, 0, 153,
	0, 0, 0, 0, 1197, 1198, 144, 143, 170, 0,
	0, 0, 494, 0, 2007, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	487, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1253, 488, 0, 0, 0, 0,
	0, 1217, 0, 0, 0, 1826, 139, 1199, 146, 1216,
	1196, 1833, 140, 141, 1826, 0, 0, 156, 0, 625,
	0, 1838, 0, 0, 0, 0, 0, 161, 0, 1301,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	0, 0, 0, 0, 0, 0, 149, 154, 151, 157,
	158, 159, 160, 162, 163, 164, 165, 0, 0, 1329,
	0, 0, 166, 167, 168, 169, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 1342, 1343, 1344, 1345, 1346,
	1347, 1348, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 625, 0, 0, 0, 0, 0,
	0, 0, 0, 1459, 0, 0, 0, 0, 1102, 0,
	0, 0, 2091, 2092, 2093, 2094, 2095, 0, 0, 0,
	2098, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 148, 0, 0, 0, 0, 0, 0,
	1142, 0, 0, 0, 190, 0, 0, 0, 0, 0,
	0, 625, 0, 0, 1216, 0, 190, 1929, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 136,
	0, 0, 137, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1217, 0, 0, 0, 1484, 0, 0, 0, 0, 0,
	0, 1488, 771, 1491, 0, 1216, 0, 0, 0, 0,
	0, 0, 1510, 1130, 0, 0, 0, 2194, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1999, 2000, 2001, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1143, 0, 0,
	0, 0, 0, 149, 154, 151, 157, 158, 159, 160,
	162, 163, 164, 165, 0, 0, 0, 0, 0, 166,
	167, 168, 169, 0, 0, 0, 0, 0, 0, 0,
	0, 1577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1216, 1156, 1159,
	1160, 1161, 1162, 1163, 1164, 0, 1165, 1166, 1167, 1168,
	1169, 1144, 1145, 1146, 1147, 1128, 1129, 1157, 0, 1131,
	0, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 0,
	0, 0, 0, 0, 0, 1826, 2073, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1826, 0,
	0, 625, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 1826, 1826, 1826, 1632,
	1633, 1634, 1635, 1636, 1158, 0, 0, 0, 0, 0,
	2115, 0, 2117, 1640, 1641, 1102, 1643, 0, 1826, 0,
	35, 36, 37, 72, 39, 40, 1649, 0, 0, 0,
	0, 0, 0, 1652, 0, 0, 0, 0, 0, 0,
	76, 0, 0, 0, 0, 41, 67, 68, 0, 65,
	69, 1826, 0, 0, 0, 0, 66, 0, 1656, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 54, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 71, 0, 0, 625, 625,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1216, 0, 2192, 0,
	0, 0, 1826, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 44, 47, 50,
	49, 52, 0, 64, 0, 0, 70, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 53,
	75, 74, 0, 0, 62, 63, 51, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 55, 56, 0, 57, 58,
	59, 60, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1914,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1976, 0, 0, 1977, 1978, 1979, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1989, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2002, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 749, 736, 0, 0, 685, 752, 656,
	674, 761, 676, 679, 719, 636, 698, 336, 671, 0,
	660, 632, 667, 633, 658, 687, 246, 691, 655, 738,
	701, 751, 294, 0, 638, 661, 350, 721, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 758, 298, 708, 0, 397, 321, 0, 0,
	0, 689, 741, 696, 732, 684, 720, 645, 707, 753,
	672, 716, 754, 284, 230, 198, 333, 398, 260, 0,
	0, 0, 180, 181, 182, 0, 2173, 2174, 0, 0,
	0, 0, 0, 221, 0, 228, 713, 748, 669, 715,
	242, 282, 248, 241, 413, 718, 764, 631, 710, 0,
	634, 637, 760, 744, 664, 665, 0, 0, 0, 0,
	0, 0, 0, 688, 697, 729, 682, 0, 0, 0,
	0, 0, 0, 0, 0, 662, 0, 706, 0, 0,
	0, 641, 635, 0, 0, 0, 0, 686, 2127, 0,
	0, 644, 0, 663, 730, 0, 629, 268, 639, 322,
	2136, 734, 743, 683, 444, 747, 681, 680, 750, 725,
	642, 740, 675, 293, 640, 290, 194, 209, 0, 673,
	332, 371, 377, 739, 659, 668, 233, 666, 375, 346,
	430, 217, 258, 368, 351, 373, 705, 723, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 654, 735, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 727, 763, 345, 376, 223,
	432, 396, 649, 653, 647, 648, 699, 700, 650, 755,
	756, 757, 731, 643, 0, 651, 652, 0, 737, 745,
	746, 704, 193, 206, 296, 759, 365, 261, 457, 439,
	435, 630, 646, 239, 657, 0, 0, 670, 677, 678,
	690, 692, 693, 694, 695, 703, 711, 712, 714, 722,
	724, 726, 728, 733, 742, 762, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 702, 709, 306,
	255, 272, 281, 717, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 749, 736, 0, 0, 685, 752, 656, 674,
	761, 676, 679, 719, 636, 698, 336, 671, 0, 660,
	632, 667, 633, 658, 687, 246, 691, 655, 738, 701,
	751, 294, 0, 638, 661, 350, 721, 388, 232, 303,
	301, 416, 256, 249, 245, 231, 278, 309, 348, 406,
	342, 758, 298, 708, 0, 397, 321, 0, 0, 0,
	689, 741, 696, 732, 684, 720, 645, 707, 753, 672,
	716, 754, 284, 230, 198, 333, 398, 260, 0, 0,
	0, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 221, 0, 228, 713, 748, 669, 715, 242,
	282, 248, 241, 413, 718, 764, 631, 710, 0, 634,
	637, 760, 744, 664, 665, 0, 0, 0, 0, 0,
	0, 0, 688, 697, 729, 682, 0, 0, 0, 0,
	0, 0, 1918, 0, 662, 0, 706, 0, 0, 0,
	641, 635, 0, 0, 0, 0, 686, 0, 0, 0,
	644, 0, 663, 730, 0, 629, 268, 639, 322, 0,
	734, 743, 683, 444, 747, 681, 680, 750, 725, 642,
	740, 675, 293, 640, 290, 194, 209, 0, 673, 332,
	371, 377, 739, 659, 668, 233, 666, 375, 346, 430,
	217, 258, 368, 351, 373, 705, 723, 374, 299, 418,
	363, 428, 445, 446, 240, 326, 436, 410, 442, 456,
	210, 237, 340, 403, 433, 394, 319, 414, 415, 289,
	393, 266, 197, 297, 453, 208, 383, 225, 201, 405,
	426, 222, 386, 0, 0, 0, 203, 424, 402, 316,
	286, 287, 202, 0, 367, 244, 264, 235, 335, 421,
	422, 234, 458, 212, 441, 205, 213, 440, 328, 417,
	425, 317, 308, 204, 423, 315, 307, 292, 254, 274,
	361, 302, 362, 275, 324, 323, 325, 0, 199, 0,
	399, 434, 459, 219, 654, 735, 412, 450, 455, 0,
	364, 220, 265, 253, 360, 263, 295, 449, 451, 452,
	454, 218, 358, 271, 339, 429, 257, 437, 327, 214,
	277, 395, 291, 300, 727, 763, 345, 376, 223, 432,
	396, 649, 653, 647, 648, 699, 700, 650, 755, 756,
	757, 731, 643, 0, 651, 652, 0, 737, 745, 746,
	704, 193, 206, 296, 759, 365, 261, 457, 439, 435,
	630, 646, 239, 657, 0, 0, 670, 677, 678, 690,
	692, 693, 694, 695, 703, 711, 712, 714, 722, 724,
	726, 728, 733, 742, 762, 195, 196, 207, 216, 226,
	238, 251, 259, 269, 273, 276, 279, 280, 283, 288,
	305, 310, 311, 312, 313, 329, 330, 331, 334, 337,
	338, 341, 343, 344, 347, 353, 354, 355, 356, 357,
	359, 366, 370, 378, 379, 380, 381, 382, 384, 385,
	389, 390, 391, 392, 400, 404, 419, 420, 431, 443,
	447, 270, 427, 448, 0, 304, 702, 709, 306, 255,
	272, 281, 717, 438, 401, 211, 372, 262, 200, 229,
	215, 236, 250, 252, 285, 314, 320, 349, 352, 267,
	247, 227, 369, 224, 387, 407, 408, 409, 411, 318,
	243, 749, 736, 0, 0, 685, 752, 656, 674, 761,
	676, 679, 719, 636, 698, 336, 671, 0, 660, 632,
	667, 633, 658, 687, 246, 691, 655, 738, 701, 751,
	294, 0, 638, 661, 350, 721, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	758, 298, 708, 0, 397, 321, 0, 0, 0, 689,
	741, 696, 732, 684, 720, 645, 707, 753, 672, 716,
	754, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 713, 748, 669, 715, 242, 282,
	248, 241, 413, 718, 764, 631, 710, 0, 634, 637,
	760, 744, 664, 665, 0, 0, 0, 0, 0, 0,
	0, 688, 697, 729, 682, 0, 0, 0, 0, 0,
	0, 1771, 0, 662, 0, 706, 0, 0, 0, 641,
	635, 0, 0, 0, 0, 686, 0, 0, 0, 644,
	0, 663, 730, 0, 629, 268, 639, 322, 0, 734,
	743, 683, 444, 747, 681, 680, 750, 725, 642, 740,
	675, 293, 640, 290, 194, 209, 0, 673, 332, 371,
	377, 739, 659, 668, 233, 666, 375, 346, 430, 217,
	258, 368, 351, 373, 705, 723, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 654, 735, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 727, 763, 345, 376, 223, 432, 396,
	649, 653, 647, 648, 699, 700, 650, 755, 756, 757,
	731, 643, 0, 651, 652, 0, 737, 745, 746, 704,
	193, 206, 296, 759, 365, 261, 457, 439, 435, 630,
	646, 239, 657, 0, 0, 670, 677, 678, 690, 692,
	693, 694, 695, 703, 711, 712, 714, 722, 724, 726,
	728, 733, 742, 762, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 702, 709, 306, 255, 272,
	281, 717, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	749, 736, 0, 0, 685, 752, 656, 674, 761, 676,
	679, 719, 636, 698, 336, 671, 0, 660, 632, 667,
	633, 658, 687, 246, 691, 655, 738, 701, 751, 294,
	0, 638, 661, 350, 721, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 758,
	298, 708, 0, 397, 321, 0, 0, 0, 689, 741,
	696, 732, 684, 720, 645, 707, 753, 672, 716, 754,
	284, 230, 198, 333, 398, 260, 0, 0, 0, 180,
	181, 182, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 0, 228, 713, 748, 669, 715, 242, 282, 248,
	241, 413, 718, 764, 631, 710, 0, 634, 637, 760,
	744, 664, 665, 0, 0, 0, 0, 0, 0, 0,
	688, 697, 729, 682, 0, 0, 0, 0, 0, 0,
	1486, 0, 662, 0, 706, 0, 0, 0, 641, 635,
	0, 0, 0, 0, 686, 0, 0, 0, 644, 0,
	663, 730, 0, 629, 268, 639, 322, 0, 734, 743,
	683, 444, 747, 681, 680, 750, 725, 642, 740, 675,
	293, 640, 290, 194, 209, 0, 673, 332, 371, 377,
	739, 659, 668, 233, 666, 375, 346, 430, 217, 258,
	368, 351, 373, 705, 723, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 654, 735, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 727, 763, 345, 376, 223, 432, 396, 649,
	653, 647, 648, 699, 700, 650, 755, 756, 757, 731,
	643, 0, 651, 652, 0, 737, 745, 746, 704, 193,
	206, 296, 759, 365, 261, 457, 439, 435, 630, 646,
	239, 657, 0, 0, 670, 677, 678, 690, 692, 693,
	694, 695, 703, 711, 712, 714, 722, 724, 726, 728,
	733, 742, 762, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 702, 709, 306, 255, 272, 281,
	717, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 749,
	736, 0, 0, 685, 752, 656, 674, 761, 676, 679,
	719, 636, 698, 336, 671, 0, 660, 632, 667, 633,
	658, 687, 246, 691, 655, 738, 701, 751, 294, 0,
	638, 661, 350, 721, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 758, 298,
	708, 0, 397, 321, 0, 0, 0, 689, 741, 696,
	732, 684, 720, 645, 707, 753, 672, 716, 754, 284,
	230, 198, 333, 398, 260, 71, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 713, 748, 669, 715, 242, 282, 248, 241,
	413, 718, 764, 631, 710, 0, 634, 637, 760, 744,
	664, 665, 0, 0, 0, 0, 0, 0, 0, 688,
	697, 729, 682, 0, 0, 0, 0, 0, 0, 0,
	0, 662, 0, 706, 0, 0, 0, 641, 635, 0,
	0, 0, 0, 686, 0, 0, 0, 644, 0, 663,
	730, 0, 629, 268, 639, 322, 0, 734, 743, 683,
	444, 747, 681, 680, 750, 725, 642, 740, 675, 293,
	640, 290, 194, 209, 0, 673, 332, 371, 377, 739,
	659, 668, 233, 666, 375, 346, 430, 217, 258, 368,
	351, 373, 705, 723, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 654, 735, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 727, 763, 345, 376, 223, 432, 396, 649, 653,
	647, 648, 699, 700, 650, 755, 756, 757, 731, 643,
	0, 651, 652, 0, 737, 745, 746, 704, 193, 206,
	296, 759, 365, 261, 457, 439, 435, 630, 646, 239,
	657, 0, 0, 670, 677, 678, 690, 692, 693, 694,
	695, 703, 711, 712, 714, 722, 724, 726, 728, 733,
	742, 762, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 702, 709, 306, 255, 272, 281, 717,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 749, 736,
	0, 0, 685, 752, 656, 674, 761, 676, 679, 719,
	636, 698, 336, 671, 0, 660, 632, 667, 633, 658,
	687, 246, 691, 655, 738, 701, 751, 294, 0, 638,
	661, 350, 721, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 758, 298, 708,
	0, 397, 321, 0, 0, 0, 689, 741, 696, 732,
	684, 720, 645, 707, 753, 672, 716, 754, 284, 230,
	198, 333, 398, 260, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 713, 748, 669, 715, 242, 282, 248, 241, 413,
	718, 764, 631, 710, 0, 634, 637, 760, 744, 664,
	665, 0, 0, 0, 0, 0, 0, 0, 688, 697,
	729, 682, 0, 0, 0, 0, 0, 0, 0, 0,
	662, 0, 706, 0, 0, 0, 641, 635, 0, 0,
	0, 0, 686, 0, 0, 0, 644, 0, 663, 730,
	0, 629, 268, 639, 322, 0, 734, 743, 683, 444,
	747, 681, 680, 750, 725, 642, 740, 675, 293, 640,
	290, 194, 209, 0, 673, 332, 371, 377, 739, 659,
	668, 233, 666, 375, 346, 430, 217, 258, 368, 351,
	373, 705, 723, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	654, 735, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	727, 763, 345, 376, 223, 432, 396, 649, 653, 647,
	648, 699, 700, 650, 755, 756, 757, 731, 643, 0,
	651, 652, 0, 737, 745, 746, 704, 193, 206, 296,
	759, 365, 261, 457, 439, 435, 630, 646, 239, 657,
	0, 0, 670, 677, 678, 690, 692, 693, 694, 695,
	703, 711, 712, 714, 722, 724, 726, 728, 733, 742,
	762, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 702, 709, 306, 255, 272, 281, 717, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 749, 736, 0,
	0, 685, 752, 656, 674, 761, 676, 679, 719, 636,
	698, 336, 671, 0, 660, 632, 667, 633, 658, 687,
	246, 691, 655, 738, 701, 751, 294, 0, 638, 661,
	350, 721, 388, 232, 303, 301, 416, 256, 249, 245,
	231, 278, 309, 348, 406, 342, 758, 298, 708, 0,
	397, 321, 0, 0, 0, 689, 741, 696, 732, 684,
	720, 645, 707, 753, 672, 716, 754, 284, 230, 198,
	333, 398, 260, 0, 0, 0, 180, 181, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 221, 0, 228,
	713, 748, 669, 715, 242, 282, 248, 241, 413, 718,
	764, 631, 710, 0, 634, 637, 760, 744, 664, 665,
	0, 0, 0, 0, 0, 0, 0, 688, 697, 729,
	682, 0, 0, 0, 0, 0, 0, 0, 0, 662,
	0, 706, 0, 0, 0, 641, 635, 0, 0, 0,
	0, 686, 0, 0, 0, 644, 0, 663, 730, 0,
	629, 268, 639, 322, 0, 734, 743, 683, 444, 747,
	681, 680, 750, 725, 642, 740, 675, 293, 640, 290,
	194, 209, 0, 673, 332, 371, 377, 739, 659, 668,
	233, 666, 375, 346, 430, 217, 258, 368, 351, 373,
	705, 723, 374, 299, 418, 363, 428, 445, 446, 240,
	326, 436, 410, 442, 456, 210, 237, 340, 403, 433,
	394, 319, 414, 415, 289, 393, 266, 197, 297, 453,
	208, 383, 225, 201, 405, 426, 222, 386, 0, 0,
	0, 203, 424, 402, 316, 286, 287, 202, 0, 367,
	244, 264, 235, 335, 421, 422, 234, 458, 212, 441,
	205, 766, 440, 328, 417, 425, 317, 308, 204, 423,
	315, 307, 292, 254, 274, 361, 302, 362, 275, 324,
	323, 325, 0, 199, 0, 399, 434, 459, 219, 654,
	735, 412, 450, 455, 0, 364, 220, 265, 253, 360,
	263, 295, 449, 451, 452, 454, 218, 358, 271, 339,
	429, 257, 437, 628, 765, 622, 621, 291, 300, 727,
	763, 345, 376, 223, 432, 396, 649, 653, 647, 648,
	699, 700, 650, 755, 756, 757, 731, 643, 0, 651,
	652, 0, 737, 745, 746, 704, 193, 206, 296, 759,
	365, 261, 457, 439, 435, 630, 646, 239, 657, 0,
	0, 670, 677, 678, 690, 692, 693, 694, 695, 703,
	711, 712, 714, 722, 724, 726, 728, 733, 742, 762,
	195, 196, 207, 216, 226, 238, 251, 259, 269, 273,
	276, 279, 280, 283, 288, 305, 310, 311, 312, 313,
	329, 330, 331, 334, 337, 338, 341, 343, 344, 347,
	353, 354, 355, 356, 357, 359, 366, 370, 378, 379,
	380, 381, 382, 384, 385, 389, 390, 391, 392, 400,
	404, 419, 420, 431, 443, 447, 270, 427, 448, 0,
	304, 702, 709, 306, 255, 272, 281, 717, 438, 401,
	211, 372, 262, 200, 229, 215, 236, 250, 252, 285,
	314, 320, 349, 352, 267, 247, 227, 369, 224, 387,
	407, 408, 409, 411, 318, 243, 749, 736, 0, 0,
	685, 752, 656, 674, 761, 676, 679, 719, 636, 698,
	336, 671, 0, 660, 632, 667, 633, 658, 687, 246,
	691, 655, 738, 701, 751, 294, 0, 638, 661, 350,
	721, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 758, 298, 708, 0, 397,
	321, 0, 0, 0, 689, 741, 696, 732, 684, 720,
	645, 707, 753, 672, 716, 754, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 713,
	748, 669, 715, 242, 282, 248, 241, 413, 718, 764,
	631, 710, 0, 634, 637, 760, 744, 664, 665, 0,
	0, 0, 0, 0, 0, 0, 688, 697, 729, 682,
	0, 0, 0, 0, 0, 0, 0, 0, 662, 0,
	706, 0, 0, 0, 641, 635, 0, 0, 0, 0,
	686, 0, 0, 0, 644, 0, 663, 730, 0, 629,
	268, 639, 322, 0, 734, 743, 683, 444, 747, 681,
	680, 750, 725, 642, 740, 675, 293, 640, 290, 194,
	209, 0, 673, 332, 371, 377, 739, 659, 668, 233,
	666, 375, 346, 430, 217, 258, 368, 351, 373, 705,
	723, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 1106, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	766, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 654, 735,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 628, 765, 622, 621, 291, 300, 727, 763,
	345, 376, 223, 432, 396, 649, 653, 647, 648, 699,
	700, 650, 755, 756, 757, 731, 643, 0, 651, 652,
	0, 737, 745, 746, 704, 193, 206, 296, 759, 365,
	261, 457, 439, 435, 630, 646, 239, 657, 0, 0,
	670, 677, 678, 690, 692, 693, 694, 695, 703, 711,
	712, 714, 722, 724, 726, 728, 733, 742, 762, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	702, 709, 306, 255, 272, 281, 717, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 749, 736, 0, 0, 685,
	752, 656, 674, 761, 676, 679, 719, 636, 698, 336,
	671, 0, 660, 632, 667, 633, 658, 687, 246, 691,
	655, 738, 701, 751, 294, 0, 638, 661, 350, 721,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 758, 298, 708, 0, 397, 321,
	0, 0, 0, 689, 741, 696, 732, 684, 720, 645,
	707, 753, 672, 716, 754, 284, 230, 198, 333, 398,
	260, 0, 0, 0, 180, 181, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 221, 0, 228, 713, 748,
	669, 715, 242, 282, 248, 241, 413, 718, 764, 631,
	710, 0, 634, 637, 760, 744, 664, 665, 0, 0,
	0, 0, 0, 0, 0, 688, 697, 729, 682, 0,
	0, 0, 0, 0, 0, 0, 0, 662, 0, 706,
	0, 0, 0, 641, 635, 0, 0, 0, 0, 686,
	0, 0, 0, 644, 0, 663, 730, 0, 629, 268,
	639, 322, 0, 734, 743, 683, 444, 747, 681, 680,
	750, 725, 642, 740, 675, 293, 640, 290, 194, 209,
	0, 673, 332, 371, 377, 739, 659, 668, 233, 666,
	375, 346, 430, 217, 258, 368, 351, 373, 705, 723,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 619, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 766,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 654, 735, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 628, 765, 622, 621, 291, 300, 727, 763, 345,
	376, 223, 432, 396, 649, 653, 647, 648, 699, 700,
	650, 755, 756, 757, 731, 643, 0, 651, 652, 0,
	737, 745, 746, 704, 193, 206, 296, 759, 365, 261,
	457, 439, 435, 630, 646, 239, 657, 0, 0, 670,
	677, 678, 690, 692, 693, 694, 695, 703, 711, 712,
	714, 722, 724, 726, 728, 733, 742, 762, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 702,
	709, 306, 255, 272, 281, 717, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 336, 0, 0, 1413, 0, 520,
	0, 0, 0, 246, 0, 519, 0, 0, 0, 294,
	0, 0, 1414, 350, 0, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 563,
	298, 0, 0, 397, 321, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 230, 198, 333, 398, 260, 71, 0, 0, 180,
	181, 182, 541, 540, 543, 544, 545, 546, 0, 0,
	221, 542, 228, 547, 548, 549, 0, 242, 282, 248,
	241, 413, 0, 0, 0, 517, 534, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	609, 0, 0, 0, 577, 0, 533, 0, 0, 526,
	527, 529, 528, 530, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 322, 0, 576, 0,
	0, 444, 0, 0, 574, 0, 0, 0, 0, 0,
	293, 0, 290, 194, 209, 0, 0, 332, 371, 377,
	0, 0, 0, 233, 0, 375, 346, 430, 217, 258,
	368, 351, 373, 0, 0, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 0, 0, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 0, 0, 345, 376, 223, 432, 396, 564,
	575, 570, 571, 568, 569, 0, 567, 566, 565, 578,
	556, 557, 558, 559, 561, 0, 572, 573, 560, 193,
	206, 296, 0, 365, 261, 457, 439, 435, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 0, 0, 306, 255, 272, 281,
	0, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 336,
	0, 0, 0, 0, 520, 0, 0, 0, 246, 0,
	519, 0, 0, 0, 294, 0, 0, 0, 350, 0,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 563, 298, 0, 0, 397, 321,
	0, 0, 0, 0, 0, 554, 555, 0, 0, 0,
	0, 0, 0, 1525, 0, 284, 230, 198, 333, 398,
	260, 71, 0, 0, 180, 181, 182, 541, 540, 543,
	544, 545, 546, 0, 0, 221, 542, 228, 547, 548,
	549, 1526, 242, 282, 248, 241, 413, 0, 0, 0,
	517, 534, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 0, 0, 0, 0, 577,
	0, 533, 0, 0, 526, 527, 529, 528, 530, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 322, 0, 576, 0, 0, 444, 0, 0, 574,
	0, 0, 0, 0, 0, 293, 0, 290, 194, 209,
	0, 0, 332, 371, 377, 0, 0, 0, 233, 0,
	375, 346, 430, 217, 258, 368, 351, 373, 0, 0,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 426, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 213,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 0, 0, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 327, 214, 277, 395, 291, 300, 0, 0, 345,
	376, 223, 432, 396, 564, 575, 570, 571, 568, 569,
	0, 567, 566, 565, 578, 556, 557, 558, 559, 561,
	0, 572, 573, 560, 193, 206, 296, 0, 365, 261,
	457, 439, 435, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 0,
	0, 306, 255, 272, 281, 0, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 336, 0, 0, 0, 0, 520,
	0, 0, 0, 246, 0, 519, 0, 0, 0, 294,
	0, 0, 0, 350, 0, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 563,
	298, 0, 0, 397, 321, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 230, 198, 333, 398, 260, 71, 0, 596, 180,
	181, 182, 541, 540, 543, 544, 545, 546, 0, 0,
	221, 542, 228, 547, 548, 549, 0, 242, 282, 248,
	241, 413, 0, 0, 0, 517, 534, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	0, 0, 0, 0, 577, 0, 533, 0, 0, 526,
	527, 529, 528, 530, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 322, 0, 576, 0,
	0, 444, 0, 0, 574, 0, 0, 0, 0, 0,
	293, 0, 290, 194, 209, 0, 0, 332, 371, 377,
	0, 0, 0, 233, 0, 375, 346, 430, 217, 258,
	368, 351, 373, 0, 0, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 0, 0, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 0, 0, 345, 376, 223, 432, 396, 564,
	575, 570, 571, 568, 569, 0, 567, 566, 565, 578,
	556, 557, 558, 559, 561, 0, 572, 573, 560, 193,
	206, 296, 0, 365, 261, 457, 439, 435, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 0, 0, 306, 255, 272, 281,
	0, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 336,
	0, 0, 0, 0, 520, 0, 0, 0, 246, 0,
	519, 0, 0, 0, 294, 0, 0, 0, 350, 0,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 563, 298, 0, 0, 397, 321,
	0, 0, 0, 0, 0, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 230, 198, 333, 398,
	260, 71, 0, 0, 180, 181, 182, 541, 540, 543,
	544, 545, 546, 0, 0, 221, 542, 228, 547, 548,
	549, 0, 242, 282, 248, 241, 413, 0, 0, 0,
	517, 534, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 609, 0, 0, 0, 577,
	0, 533, 0, 0, 526, 527, 529, 528, 530, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 322, 0, 576, 0, 0, 444, 0, 0, 574,
	0, 0, 0, 0, 0, 293, 0, 290, 194, 209,
	0, 0, 332, 371, 377, 0, 0, 0, 233, 0,
	375, 346, 430, 217, 258, 368, 351, 373, 0, 0,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 426, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 213,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 0, 0, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 327, 214, 277, 395, 291, 300, 0, 0, 345,
	376, 223, 432, 396, 564, 575, 570, 571, 568, 569,
	0, 567, 566, 565, 578, 556, 557, 558, 559, 561,
	0, 572, 573, 560, 193, 206, 296, 0, 365, 261,
	457, 439, 435, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 0,
	0, 306, 255, 272, 281, 0, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 336, 0, 0, 0, 0, 520,
	0, 0, 0, 246, 0, 519, 0, 0, 0, 294,
	0, 0, 0, 350, 0, 388, 232, 303, 301, 416,
	256, 249, 245, 231, 278, 309, 348, 406, 342, 563,
	298, 0, 0, 397, 321, 0, 0, 0, 0, 0,
	554, 555, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 230, 198, 333, 398, 260, 71, 0, 0, 180,
	181, 182, 541, 1431, 543, 544, 545, 546, 0, 0,
	221, 542, 228, 547, 548, 549, 0, 242, 282, 248,
	241, 413, 0, 0, 0, 517, 534, 0, 562, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 531, 532,
	609, 0, 0, 0, 577, 0, 533, 0, 0, 526,
	527, 529, 528, 530, 535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 322, 0, 576, 0,
	0, 444, 0, 0, 574, 0, 0, 0, 0, 0,
	293, 0, 290, 194, 209, 0, 0, 332, 371, 377,
	0, 0, 0, 233, 0, 375, 346, 430, 217, 258,
	368, 351, 373, 0, 0, 374, 299, 418, 363, 428,
	445, 446, 240, 326, 436, 410, 442, 456, 210, 237,
	340, 403, 433, 394, 319, 414, 415, 289, 393, 266,
	197, 297, 453, 208, 383, 225, 201, 405, 426, 222,
	386, 0, 0, 0, 203, 424, 402, 316, 286, 287,
	202, 0, 367, 244, 264, 235, 335, 421, 422, 234,
	458, 212, 441, 205, 213, 440, 328, 417, 425, 317,
	308, 204, 423, 315, 307, 292, 254, 274, 361, 302,
	362, 275, 324, 323, 325, 0, 199, 0, 399, 434,
	459, 219, 0, 0, 412, 450, 455, 0, 364, 220,
	265, 253, 360, 263, 295, 449, 451, 452, 454, 218,
	358, 271, 339, 429, 257, 437, 327, 214, 277, 395,
	291, 300, 0, 0, 345, 376, 223, 432, 396, 564,
	575, 570, 571, 568, 569, 0, 567, 566, 565, 578,
	556, 557, 558, 559, 561, 0, 572, 573, 560, 193,
	206, 296, 0, 365, 261, 457, 439, 435, 0, 0,
	239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 195, 196, 207, 216, 226, 238, 251,
	259, 269, 273, 276, 279, 280, 283, 288, 305, 310,
	311, 312, 313, 329, 330, 331, 334, 337, 338, 341,
	343, 344, 347, 353, 354, 355, 356, 357, 359, 366,
	370, 378, 379, 380, 381, 382, 384, 385, 389, 390,
	391, 392, 400, 404, 419, 420, 431, 443, 447, 270,
	427, 448, 0, 304, 0, 0, 306, 255, 272, 281,
	0, 438, 401, 211, 372, 262, 200, 229, 215, 236,
	250, 252, 285, 314, 320, 349, 352, 267, 247, 227,
	369, 224, 387, 407, 408, 409, 411, 318, 243, 336,
	0, 0, 0, 0, 520, 0, 0, 0, 246, 0,
	519, 0, 0, 0, 294, 0, 0, 0, 350, 0,
	388, 232, 303, 301, 416, 256, 249, 245, 231, 278,
	309, 348, 406, 342, 563, 298, 0, 0, 397, 321,
	0, 0, 0, 0, 0, 554, 555, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 230, 198, 333, 398,
	260, 71, 0, 0, 180, 181, 182, 541, 1428, 543,
	544, 545, 546, 0, 0, 221, 542, 228, 547, 548,
	549, 0, 242, 282, 248, 241, 413, 0, 0, 0,
	517, 534, 0, 562, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 531, 532, 609, 0, 0, 0, 577,
	0, 533, 0, 0, 526, 527, 529, 528, 530, 535,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 322, 0, 576, 0, 0, 444, 0, 0, 574,
	0, 0, 0, 0, 0, 293, 0, 290, 194, 209,
	0, 0, 332, 371, 377, 0, 0, 0, 233, 0,
	375, 346, 430, 217, 258, 368, 351, 373, 0, 0,
	374, 299, 418, 363, 428, 445, 446, 240, 326, 436,
	410, 442, 456, 210, 237, 340, 403, 433, 394, 319,
	414, 415, 289, 393, 266, 197, 297, 453, 208, 383,
	225, 201, 405, 426, 222, 386, 0, 0, 0, 203,
	424, 402, 316, 286, 287, 202, 0, 367, 244, 264,
	235, 335, 421, 422, 234, 458, 212, 441, 205, 213,
	440, 328, 417, 425, 317, 308, 204, 423, 315, 307,
	292, 254, 274, 361, 302, 362, 275, 324, 323, 325,
	0, 199, 0, 399, 434, 459, 219, 0, 0, 412,
	450, 455, 0, 364, 220, 265, 253, 360, 263, 295,
	449, 451, 452, 454, 218, 358, 271, 339, 429, 257,
	437, 327, 214, 277, 395, 291, 300, 0, 0, 345,
	376, 223, 432, 396, 564, 575, 570, 571, 568, 569,
	0, 567, 566, 565, 578, 556, 557, 558, 559, 561,
	0, 572, 573, 560, 193, 206, 296, 0, 365, 261,
	457, 439, 435, 0, 0, 239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 195, 196,
	207, 216, 226, 238, 251, 259, 269, 273, 276, 279,
	280, 283, 288, 305, 310, 311, 312, 313, 329, 330,
	331, 334, 337, 338, 341, 343, 344, 347, 353, 354,
	355, 356, 357, 359, 366, 370, 378, 379, 380, 381,
	382, 384, 385, 389, 390, 391, 392, 400, 404, 419,
	420, 431, 443, 447, 270, 427, 448, 0, 304, 0,
	0, 306, 255, 272, 281, 0, 438, 401, 211, 372,
	262, 200, 229, 215, 236, 250, 252, 285, 314, 320,
	349, 352, 267, 247, 227, 369, 224, 387, 407, 408,
	409, 411, 318, 243, 589, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 520, 0, 0, 0, 246, 0, 519, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 517, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 577, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 576, 0, 0, 444, 0, 0, 574, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 564, 575, 570, 571, 568, 569, 0, 567,
	566, 565, 578, 556, 557, 558, 559, 561, 0, 572,
	573, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 520, 0, 0,
	0, 246, 0, 519, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 563, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 71, 0, 0, 180, 181, 182,
	541, 540, 543, 544, 545, 546, 0, 0, 221, 542,
	228, 547, 548, 549, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 517, 534, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 577, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 576, 0, 0, 444,
	0, 0, 574, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 564, 575, 570,
	571, 568, 569, 0, 567, 566, 565, 578, 556, 557,
	558, 559, 561, 0, 572, 573, 560, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 0, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 577, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 576, 0, 0, 444, 0, 0, 574, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 2195, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 564, 575, 570, 571, 568, 569, 0, 567,
	566, 565, 578, 556, 557, 558, 559, 561, 0, 572,
	573, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 563, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 554, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 71, 0, 596, 180, 181, 182,
	541, 540, 543, 544, 545, 546, 0, 0, 221, 542,
	228, 547, 548, 549, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 0, 534, 0, 562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 531, 532, 0, 0,
	0, 0, 577, 0, 533, 0, 0, 526, 527, 529,
	528, 530, 535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 576, 0, 0, 444,
	0, 0, 574, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 564, 575, 570,
	571, 568, 569, 0, 567, 566, 565, 578, 556, 557,
	558, 559, 561, 0, 572, 573, 560, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 0, 0, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 563, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 554, 555, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 71,
	0, 0, 180, 181, 182, 541, 540, 543, 544, 545,
	546, 0, 0, 221, 542, 228, 547, 548, 549, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 0, 534,
	0, 562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 531, 532, 0, 0, 0, 0, 577, 0, 533,
	0, 0, 526, 527, 529, 528, 530, 535, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 576, 0, 0, 444, 0, 0, 574, 0, 0,
	0, 0, 0, 293, 0, 290, 194, 209, 0, 0,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 564, 575, 570, 571, 568, 569, 0, 567,
	566, 565, 578, 556, 557, 558, 559, 561, 0, 572,
	573, 560, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 0, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 0, 0, 0, 180, 181, 182,
	0, 0, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 0, 0, 0, 0, 242, 282, 248, 241, 413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 982, 981, 991, 992, 984, 985, 986, 987,
	988, 989, 990, 983, 0, 0, 993, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 0, 0, 0, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 336, 0, 0,
	0, 0, 0, 0, 0, 0, 246, 809, 0, 0,
	0, 0, 294, 0, 0, 0, 350, 0, 388, 232,
	303, 301, 416, 256, 249, 245, 231, 278, 309, 348,
	406, 342, 0, 298, 0, 0, 397, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 230, 198, 333, 398, 260, 0,
	0, 0, 180, 181, 182, 0, 0, 0, 0, 0,
	0, 0, 0, 221, 0, 228, 0, 0, 0, 0,
	242, 282, 248, 241, 413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 322,
	0, 0, 0, 808, 444, 0, 0, 0, 0, 0,
	0, 805, 806, 293, 774, 290, 194, 209, 799, 803,
	332, 371, 377, 0, 0, 0, 233, 0, 375, 346,
	430, 217, 258, 368, 351, 373, 0, 0, 374, 299,
	418, 363, 428, 445, 446, 240, 326, 436, 410, 442,
	456, 210, 237, 340, 403, 433, 394, 319, 414, 415,
	289, 393, 266, 197, 297, 453, 208, 383, 225, 201,
	405, 426, 222, 386, 0, 0, 0, 203, 424, 402,
	316, 286, 287, 202, 0, 367, 244, 264, 235, 335,
	421, 422, 234, 458, 212, 441, 205, 213, 440, 328,
	417, 425, 317, 308, 204, 423, 315, 307, 292, 254,
	274, 361, 302, 362, 275, 324, 323, 325, 0, 199,
	0, 399, 434, 459, 219, 0, 0, 412, 450, 455,
	0, 364, 220, 265, 253, 360, 263, 295, 449, 451,
	452, 454, 218, 358, 271, 339, 429, 257, 437, 327,
	214, 277, 395, 291, 300, 0, 0, 345, 376, 223,
	432, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 206, 296, 0, 365, 261, 457, 439,
	435, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 195, 196, 207, 216,
	226, 238, 251, 259, 269, 273, 276, 279, 280, 283,
	288, 305, 310, 311, 312, 313, 329, 330, 331, 334,
	337, 338, 341, 343, 344, 347, 353, 354, 355, 356,
	357, 359, 366, 370, 378, 379, 380, 381, 382, 384,
	385, 389, 390, 391, 392, 400, 404, 419, 420, 431,
	443, 447, 270, 427, 448, 0, 304, 0, 0, 306,
	255, 272, 281, 0, 438, 401, 211, 372, 262, 200,
	229, 215, 236, 250, 252, 285, 314, 320, 349, 352,
	267, 247, 227, 369, 224, 387, 407, 408, 409, 411,
	318, 243, 336, 0, 0, 0, 1084, 0, 0, 0,
	0, 246, 0, 0, 0, 0, 0, 294, 0, 0,
	0, 350, 0, 388, 232, 303, 301, 416, 256, 249,
	245, 231, 278, 309, 348, 406, 342, 0, 298, 0,
	0, 397, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 230,
	198, 333, 398, 260, 0, 0, 0, 180, 181, 182,
	0, 1086, 0, 0, 0, 0, 0, 0, 221, 0,
	228, 0, 0, 0, 0, 242, 282, 248, 241, 413,
	971, 972, 970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 973, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 322, 0, 0, 0, 0, 444,
	0, 0, 0, 0, 0, 0, 0, 0, 293, 0,
	290, 194, 209, 0, 0, 332, 371, 377, 0, 0,
	0, 233, 0, 375, 346, 430, 217, 258, 368, 351,
	373, 0, 0, 374, 299, 418, 363, 428, 445, 446,
	240, 326, 436, 410, 442, 456, 210, 237, 340, 403,
	433, 394, 319, 414, 415, 289, 393, 266, 197, 297,
	453, 208, 383, 225, 201, 405, 426, 222, 386, 0,
	0, 0, 203, 424, 402, 316, 286, 287, 202, 0,
	367, 244, 264, 235, 335, 421, 422, 234, 458, 212,
	441, 205, 213, 440, 328, 417, 425, 317, 308, 204,
	423, 315, 307, 292, 254, 274, 361, 302, 362, 275,
	324, 323, 325, 0, 199, 0, 399, 434, 459, 219,
	0, 0, 412, 450, 455, 0, 364, 220, 265, 253,
	360, 263, 295, 449, 451, 452, 454, 218, 358, 271,
	339, 429, 257, 437, 327, 214, 277, 395, 291, 300,
	0, 0, 345, 376, 223, 432, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 206, 296,
	0, 365, 261, 457, 439, 435, 0, 0, 239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 195, 196, 207, 216, 226, 238, 251, 259, 269,
	273, 276, 279, 280, 283, 288, 305, 310, 311, 312,
	313, 329, 330, 331, 334, 337, 338, 341, 343, 344,
	347, 353, 354, 355, 356, 357, 359, 366, 370, 378,
	379, 380, 381, 382, 384, 385, 389, 390, 391, 392,
	400, 404, 419, 420, 431, 443, 447, 270, 427, 448,
	0, 304, 0, 0, 306, 255, 272, 281, 0, 438,
	401, 211, 372, 262, 200, 229, 215, 236, 250, 252,
	285, 314, 320, 349, 352, 267, 247, 227, 369, 224,
	387, 407, 408, 409, 411, 318, 243, 35, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 71, 0, 596, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 1458,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 1460, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 1456, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 774, 290, 194,
	209, 772, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 1458,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 1460, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 71, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 1478, 0,
	0, 1479, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 1117, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 1116, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 596, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 71, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 1460, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 1086, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 1363, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1241, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1239, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1237, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1235, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1233, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1229, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 1227, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 0, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 336, 0,
	1225, 0, 0, 0, 0, 0, 0, 246, 0, 0,
	0, 0, 0, 294, 0, 0, 0, 350, 0, 388,
	232, 303, 301, 416, 256, 249, 245, 231, 278, 309,
	348, 406, 342, 0, 298, 0, 0, 397, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 230, 198, 333, 398, 260,
	0, 0, 0, 180, 181, 182, 0, 0, 0, 0,
	0, 0, 0, 0, 221, 0, 228, 0, 0, 0,
	0, 242, 282, 248, 241, 413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	322, 0, 0, 0, 0, 444, 0, 0, 0, 0,
	0, 0, 0, 0, 293, 0, 290, 194, 209, 0,
	0, 332, 371, 377, 0, 0, 0, 233, 0, 375,
	346, 430, 217, 258, 368, 351, 373, 0, 0, 374,
	299, 418, 363, 428, 445, 446, 240, 326, 436, 410,
	442, 456, 210, 237, 340, 403, 433, 394, 319, 414,
	415, 289, 393, 266, 197, 297, 453, 208, 383, 225,
	201, 405, 426, 222, 386, 0, 0, 0, 203, 424,
	402, 316, 286, 287, 202, 0, 367, 244, 264, 235,
	335, 421, 422, 234, 458, 212, 441, 205, 213, 440,
	328, 417, 425, 317, 308, 204, 423, 315, 307, 292,
	254, 274, 361, 302, 362, 275, 324, 323, 325, 0,
	199, 0, 399, 434, 459, 219, 0, 0, 412, 450,
	455, 0, 364, 220, 265, 253, 360, 263, 295, 449,
	451, 452, 454, 218, 358, 271, 339, 429, 257, 437,
	327, 214, 277, 395, 291, 300, 0, 0, 345, 376,
	223, 432, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 206, 296, 0, 365, 261, 457,
	439, 435, 0, 0, 239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 195, 196, 207,
	216, 226, 238, 251, 259, 269, 273, 276, 279, 280,
	283, 288, 305, 310, 311, 312, 313, 329, 330, 331,
	334, 337, 338, 341, 343, 344, 347, 353, 354, 355,
	356, 357, 359, 366, 370, 378, 379, 380, 381, 382,
	384, 385, 389, 390, 391, 392, 400, 404, 419, 420,
	431, 443, 447, 270, 427, 448, 0, 304, 0, 0,
	306, 255, 272, 281, 0, 438, 401, 211, 372, 262,
	200, 229, 215, 236, 250, 252, 285, 314, 320, 349,
	352, 267, 247, 227, 369, 224, 387, 407, 408, 409,
	411, 318, 243, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 246, 0, 0, 0, 0, 0, 294, 0,
	0, 0, 350, 0, 388, 232, 303, 301, 416, 256,
	249, 245, 231, 278, 309, 348, 406, 342, 0, 298,
	0, 0, 397, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	230, 198, 333, 398, 260, 1200, 0, 0, 180, 181,
	182, 0, 0, 0, 0, 0, 0, 0, 0, 221,
	0, 228, 0, 0, 0, 0, 242, 282, 248, 241,
	413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 322, 0, 0, 0, 0,
	444, 0, 0, 0, 0, 0, 0, 0, 0, 293,
	0, 290, 194, 209, 0, 0, 332, 371, 377, 0,
	0, 0, 233, 0, 375, 346, 430, 217, 258, 368,
	351, 373, 0, 0, 374, 299, 418, 363, 428, 445,
	446, 240, 326, 436, 410, 442, 456, 210, 237, 340,
	403, 433, 394, 319, 414, 415, 289, 393, 266, 197,
	297, 453, 208, 383, 225, 201, 405, 426, 222, 386,
	0, 0, 0, 203, 424, 402, 316, 286, 287, 202,
	0, 367, 244, 264, 235, 335, 421, 422, 234, 458,
	212, 441, 205, 213, 440, 328, 417, 425, 317, 308,
	204, 423, 315, 307, 292, 254, 274, 361, 302, 362,
	275, 324, 323, 325, 0, 199, 0, 399, 434, 459,
	219, 0, 0, 412, 450, 455, 0, 364, 220, 265,
	253, 360, 263, 295, 449, 451, 452, 454, 218, 358,
	271, 339, 429, 257, 437, 327, 214, 277, 395, 291,
	300, 0, 0, 345, 376, 223, 432, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 206,
	296, 0, 365, 261, 457, 439, 435, 0, 0, 239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 195, 196, 207, 216, 226, 238, 251, 259,
	269, 273, 276, 279, 280, 283, 288, 305, 310, 311,
	312, 313, 329, 330, 331, 334, 337, 338, 341, 343,
	344, 347, 353, 354, 355, 356, 357, 359, 366, 370,
	378, 379, 380, 381, 382, 384, 385, 389, 390, 391,
	392, 400, 404, 419, 420, 431, 443, 447, 270, 427,
	448, 0, 304, 0, 0, 306, 255, 272, 281, 0,
	438, 401, 211, 372, 262, 200, 229, 215, 236, 250,
	252, 285, 314, 320, 349, 352, 267, 247, 227, 369,
	224, 387, 407, 408, 409, 411, 318, 243, 1099, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 1090, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 947, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	0, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 508, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 507, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 246, 0, 0, 0, 0, 0,
	294, 0, 0, 0, 350, 0, 388, 232, 303, 301,
	416, 256, 249, 245, 231, 278, 309, 348, 406, 342,
	0, 298, 0, 0, 397, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 230, 198, 333, 398, 260, 0, 0, 0,
	180, 181, 182, 0, 0, 0, 0, 0, 0, 0,
	0, 221, 0, 228, 0, 0, 0, 0, 242, 282,
	248, 241, 413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 322, 0, 0,
	188, 0, 444, 0, 0, 0, 0, 0, 0, 0,
	0, 293, 0, 290, 194, 209, 0, 0, 332, 371,
	377, 0, 0, 0, 233, 0, 375, 346, 430, 217,
	258, 368, 351, 373, 0, 0, 374, 299, 418, 363,
	428, 445, 446, 240, 326, 436, 410, 442, 456, 210,
	237, 340, 403, 433, 394, 319, 414, 415, 289, 393,
	266, 197, 297, 453, 208, 383, 225, 201, 405, 426,
	222, 386, 0, 0, 0, 203, 424, 402, 316, 286,
	287, 202, 0, 367, 244, 264, 235, 335, 421, 422,
	234, 458, 212, 441, 205, 213, 440, 328, 417, 425,
	317, 308, 204, 423, 315, 307, 292, 254, 274, 361,
	302, 362, 275, 324, 323, 325, 0, 199, 0, 399,
	434, 459, 219, 0, 0, 412, 450, 455, 0, 364,
	220, 265, 253, 360, 263, 295, 449, 451, 452, 454,
	218, 358, 271, 339, 429, 257, 437, 327, 214, 277,
	395, 291, 300, 0, 0, 345, 376, 223, 432, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 206, 296, 0, 365, 261, 457, 439, 435, 0,
	0, 239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 195, 196, 207, 216, 226, 238,
	251, 259, 269, 273, 276, 279, 280, 283, 288, 305,
	310, 311, 312, 313, 329, 330, 331, 334, 337, 338,
	341, 343, 344, 347, 353, 354, 355, 356, 357, 359,
	366, 370, 378, 379, 380, 381, 382, 384, 385, 389,
	390, 391, 392, 400, 404, 419, 420, 431, 443, 447,
	270, 427, 448, 0, 304, 0, 0, 306, 255, 272,
	281, 0, 438, 401, 211, 372, 262, 200, 229, 215,
	236, 250, 252, 285, 314, 320, 349, 352, 267, 247,
	227, 369, 224, 387, 407, 408, 409, 411, 318, 243,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 246,
	0, 0, 0, 0, 0, 294, 0, 0, 0, 350,
	0, 388, 232, 303, 301, 416, 256, 249, 245, 231,
	278, 309, 348, 406, 342, 0, 298, 0, 0, 397,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 230, 198, 333,
	398, 260, 0, 0, 0, 180, 181, 182, 0, 0,
	0, 0, 0, 0, 0, 0, 221, 0, 228, 0,
	0, 0, 0, 242, 282, 248, 241, 413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 322, 0, 0, 0, 0, 444, 0, 0,
	0, 0, 0, 0, 0, 0, 293, 0, 290, 194,
	209, 0, 0, 332, 371, 377, 0, 0, 0, 233,
	0, 375, 346, 430, 217, 258, 368, 351, 373, 0,
	0, 374, 299, 418, 363, 428, 445, 446, 240, 326,
	436, 410, 442, 456, 210, 237, 340, 403, 433, 394,
	319, 414, 415, 289, 393, 266, 197, 297, 453, 208,
	383, 225, 201, 405, 426, 222, 386, 0, 0, 0,
	203, 424, 402, 316, 286, 287, 202, 0, 367, 244,
	264, 235, 335, 421, 422, 234, 458, 212, 441, 205,
	213, 440, 328, 417, 425, 317, 308, 204, 423, 315,
	307, 292, 254, 274, 361, 302, 362, 275, 324, 323,
	325, 0, 199, 0, 399, 434, 459, 219, 0, 0,
	412, 450, 455, 0, 364, 220, 265, 253, 360, 263,
	295, 449, 451, 452, 454, 218, 358, 271, 339, 429,
	257, 437, 327, 214, 277, 395, 291, 300, 0, 0,
	345, 376, 223, 432, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 206, 296, 0, 365,
	261, 457, 439, 435, 0, 0, 239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 195,
	196, 207, 216, 226, 238, 251, 259, 269, 273, 276,
	279, 280, 283, 288, 305, 310, 311, 312, 313, 329,
	330, 331, 334, 337, 338, 341, 343, 344, 347, 353,
	354, 355, 356, 357, 359, 366, 370, 378, 379, 380,
	381, 382, 384, 385, 389, 390, 391, 392, 400, 404,
	419, 420, 431, 443, 447, 270, 427, 448, 0, 304,
	0, 0, 306, 255, 272, 281, 0, 438, 401, 211,
	372, 262, 200, 229, 215, 236, 250, 252, 285, 314,
	320, 349, 352, 267, 247, 227, 369, 224, 387, 407,
	408, 409, 411, 318, 243,
}

var yyPact = [...]int{
	4454, -1000, -336, 1610, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1572, 1157, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 528, 1257, 174, 1457, 211, 227, 988, 389,
	195, 27066, 387, 3514, 27521, -1000, 122, -1000, 114, 27521,
	118, 26611, -1000, -1000, -283, 12473, 1419, 40, 33, 27521,
	130, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1244,
	1524, 1533, 1568, 1059, 1571, -1000, 10640, 10640, 339, 339,
	339, 8820, -1000, -1000, 16581, 27521, 27521, 1264, 386, 988,
	380, 379, 377, -1000, -99, -1000, -1000, -1000, -1000, 1457,
	-1000, -1000, 164, -1000, 237, 1203, -1000, 1200, -1000, 511,
	416, 254, 332, 323, 251, 250, 249, 247, 245, 244,
	243, 242, 260, -1000, 534, 534, -170, -177, 2232, 319,
	319, 319, 365, 1432, 1431, -1000, 547, -1000, 534, 534,
	139, 534, 534, 534, 534, 215, 212, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 27521, -1000, 171, 493, 268, 564, 1457, 203,
	-1000, -1000, -1000, 27521, 385, 988, 326, -1000, 27521, -1000,
	450, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	27521, 642, 642, 56, 642, 642, 642, 642, 92, 509,
	-11, -1000, 80, 197, 189, 182, 620, 127, 63, -1000,
	-1000, 178, 620, 120, -1000, 642, 6944, 6944, 6944, -1000,
	1451, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 362,
	-1000, -1000, -1000, -1000, 27521, 26156, 261, 559, -1000, -1000,
	-1000, 22, -1000, -1000, 1141, 951, -1000, 12473, 852, 1213,
	1213, -1000, -1000, 417, -1000, -1000, 13838, 13838, 13838, 13838,
	13838, 13838, 13838, 13838, 13838, 13838, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1213, 448, -1000, 12018, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 12473, 1213, 1213, 1213, 1213, 1213, 1213, 1213,
	1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, 1213, -1000,
	-1000, -1000, 27521, -1000, 1213, 964, 1572, -1000, 1157, -1000,
	-1000, -1000, 1472, 12473, 12473, 1572, -1000, 1353, 10640, -1000,
	-1000, 1502, -1000, -1000, -1000, -1000, -1000, 636, 1594, -1000,
	15203, 443, 1593, 25701, -1000, 19324, 25246, 1186, 8351, -12,
	-1000, -1000, -1000, 542, 18414, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1451, 1136, 27521, -1000,
	-1000, 4099, 988, -1000, 1254, -1000, 1122, -1000, 1235, 171,
	328, 1271, 988, 988, 988, 328, -1000, -1000, -1000, 534,
	534, 259, 211, 3842, -1000, -1000, -1000, 24784, 1252, 988,
	-1000, 1251, -1000, 1487, 315, 508, 508, 988, -1000, -1000,
	27521, 988, 1483, 1480, 27521, 27521, -1000, 24329, -1000, 23874,
	23419, 808, 27521, 22964, 22509, 22054, 21599, 21144, -1000, 1316,
	-1000, 1272, -1000, -1000, -1000, 27521, 27521, 27521, 16, -1000,
	-1000, 27521, 988, -1000, -1000, 805, 803, 534, 534, 797,
	960, 957, 956, 534, 534, 786, 952, 1092, 201, 785,
	784, 782, 868, 942, 109, 830, 781, 773, 27521, 1249,
	-1000, 157, 539, 223, 257, 214, 27521, 188, 1522, 176,
	1457, 1416, 1184, 358, 326, 1302, 27521, 1512, 326, -1000,
	7413, -1000, -1000, 940, 12473, -1000, 637, 620, 620, -1000,
	-1000, -1000, -1000, -1000, -1000, 642, 27521, 637, -1000, -1000,
	-1000, 620, 642, 27521, 642, 642, 642, 642, 620, 642,
	27521, 27521, 27521, 27521, 27521, 27521, 27521, 27521, 27521, 6944,
	6944, 6944, 492, 642, -1000, 1300, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 117, -1000, -1000, -1000, -1000, -1000, 1610,
	-1000, -1000, -1000, -102, 1183, 20689, -1000, -287, -288, -289,
	-290, -1000, -1000, -1000, -291, -295, -1000, -1000, -1000, 12473,
	12473, 12473, 12473, 971, 495, 13838, 729, 721, 13838, 13838,
	13838, 13838, 13838, 13838, 13838, 13838, 13838, 13838, 13838, 13838,
	13838, 13838, 13838, 717, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 988, -1000, 1608, 1027, 1027, 456, 456, 456,
	456, 456, 456, 456, 456, 456, 14293, 9275, 7413, 1059,
	1120, 1572, 10640, 10640, 12473, 12473, 11550, 11095, 10640, 1442,
	575, 951, 27521, -1000, -1000, 13383, -1000, -1000, -1000, -1000,
	-1000, 970, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 27521,
	27521, 10640, 10640, 10640, 10640, 10640, -1000, 1181, -1000, -173,
	16126, 12473, -1000, 1533, 1059, 1502, 1501, 1603, 480, 747,
	1179, -1000, 918, 1533, 17959, 1138, -1000, 1502, -1000, -1000,
	-1000, 27521, -1000, -1000, 20234, -1000, -1000, 6475, 27521, 241,
	27521, -1000, 1205, 1330, -1000, -1000, -1000, 1517, 17504, 27521,
	1204, 1188, -1000, -1000, 441, 7882, -12, -1000, 7882, 1161,
	-1000, -47, -34, 9730, 424, -1000, -1000, -1000, 2232, 14748,
	1039, -1000, 52, -1000, -1000, -1000, 1235, -1000, 1235, 1235,
	1235, 1235, 16, 16, 16, 16, -1000, -1000, -1000, -1000,
	-1000, 1247, 1242, -1000, 1235, 1235, 1235, 1235, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1241, 1241, 1241, 1236, 1236,
	307, -1000, 12473, 143, 27521, 1509, 770, 157, 27521, 580,
	1299, -1000, 27521, 1271, 1271, 1271, 988, 1085, 1042, -1000,
	1175, -1000, -1000, 1566, -1000, -1000, 551, 640, 638, 464,
	27521, 138, 240, -1000, 294, -1000, 27521, 1240, 1479, 508,
	988, -1000, 988, -1000, -1000, -1000, -1000, 436, -1000, -1000,
	988, 1173, -1000, 1182, 612, 602, 611, 596, 1173, -1000,
	-1000, -132, 1173, -1000, 1173, -1000, 1173, -1000, 1173, -1000,
	1173, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 533,
	27521, 138, 717, -1000, 357, -1000, -1000, 717, 717, -1000,
	-1000, -1000, -1000, 936, 932, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -335, 27521, 368, 140, 152, 27521, 27521, 27521, 27521,
	27521, 401, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 206,
	27521, 27521, 27521, 27521, 459, -1000, -1000, 988, -1000, -1000,
	-1000, -1000, 951, 27521, -1000, -1000, 642, 642, -1000, -1000,
	27521, 642, -1000, -1000, -1000, -1000, -1000, -1000, 642, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 928, -1000, 27521, 27521, -1000, -1000, -1000,
	-1000, -1000, 70, -66, 207, -1000, -1000, -1000, -1000, 1530,
	-1000, 951, 495, 672, 517, -1000, -1000, 767, -1000, -1000,
	2574, -1000, -1000, -1000, -1000, 729, 13838, 13838, 13838, 624,
	2574, 2513, 875, 656, 456, 639, 639, 462, 462, 462,
	462, 462, 745, 745, -1000, -1000, -1000, -1000, 970, -1000,
	-1000, -1000, 970, 10640, 10640, 1172, 1213, 435, -1000, 1244,
	-1000, -1000, 1533, 1099, 1099, 732, 924, 577, 1589, 1099,
	570, 1587, 1099, 1099, 10640, -1000, -1000, 599, -1000, 12473,
	970, -1000, 1282, 1170, 1166, 1099, 970, 970, 1099, 1099,
	27521, -1000, -280, -1000, -81, 438, 1213, -1000, 19779, -1000,
	-1000, 970, 1141, 1472, -1000, -1000, 1414, -1000, 1350, 12473,
	12473, 12473, -1000, -1000, -1000, 1472, 1529, -1000, 1385, 1384,
	1581, 10640, 19324, 1502, -1000, -1000, -1000, 434, 1581, 1202,
	1213, -1000, 27521, 19324, 19324, 19324, 19324, 19324, -1000, 1323,
	1317, -1000, 1314, 1313, 1341, 27521, -1000, 1116, 1059, 17504,
	241, 1132, 19324, 27521, -1000, -1000, 19324, 27521, 6006, -1000,
	1161, -12, -44, -1000, -1000, -1000, -1000, 951, -1000, 1009,
	-1000, 282, -1000, 297, -1000, -1000, -1000, -1000, 549, 47,
	-1000, -1000, 16, 16, -1000, -1000, 424, 854, 424, 424,
	424, 916, 916, -1000, -1000, -1000, -1000, -1000, 764, -1000,
	-1000, -1000, 761, -1000, -1000, 959, 1310, 143, -1000, -1000,
	534, 909, 1424, -1000, -1000, 1015, 367, -1000, 1507, 27521,
	-1000, 1295, 1291, 1286, -1000, -1000, -1000, -1000, -1000, 3585,
	27521, 1114, -1000, 134, 27521, 1013, 27521, -1000, 1109, 27521,
	-1000, 988, -1000, -1000, 7413, -1000, 27521, 1213, -1000, -1000,
	-1000, -1000, 384, 1456, 1443, 138, 134, 424, 988, -1000,
	-1000, -1000, -1000, -1000, -338, 1103, 27521, 160, -1000, 1239,
	878, -1000, 1210, -1000, -1000, -1000, -1000, 133, 221, 202,
	356, -1000, 378, 1310, 27521, -1000, -1000, -1000, -1000, 620,
	-1000, -1000, 620, -1000, -1000, -1000, -1000, -1000, -1000, 1439,
	-70, -309, -1000, -305, -1000, -1000, -1000, -1000, 624, 2574,
	2425, -1000, 13838, 13838, -1000, -1000, 1099, 1099, 10640, 7413,
	1572, 1472, -1000, -1000, 340, 717, 340, 13838, 13838, -1000,
	13838, 13838, -1000, -114, 1178, 510, -1000, 12473, 914, -1000,
	-1000, 13838, 13838, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 373, 371, 370, 27521, -1000, -1000, -1000, 812,
	908, 1342, 951, 951, -1000, -1000, 27521, -1000, -1000, -1000,
	-1000, 1576, 12473, -1000, 1158, -1000, 5537, 1533, 1285, 27521,
	1213, 1610, 15671, 27521, 1159, -1000, 538, 1330, 1274, 1281,
	1411, -1000, -1000, -1000, -1000, 1315, -1000, 1292, -1000, -1000,
	-1000, -1000, -1000, 1059, 1581, 19324, 1064, -1000, 1064, -1000,
	427, -1000, -1000, -1000, -75, -72, -1000, -1000, -1000, 2232,
	-1000, -1000, -1000, 628, 13838, 1601, -1000, 889, 1464, -1000,
	1460, -1000, -1000, 424, 424, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1083, -1000, 1078, 1155, 1074, 51, -1000, 1263,
	1436, 534, 534, -1000, 728, -1000, 988, -1000, 27521, -1000,
	-1000, 27521, 27521, 27521, 1565, 1145, -1000, 27521, -1000, -1000,
	27521, -1000, -1000, 1369, 143, 1071, -1000, -1000, -1000, 240,
	27521, -1000, 1027, 134, -1000, -1000, -1000, -1000, -1000, -1000,
	1224, -1000, -1000, -1000, 1000, -1000, -150, 988, 27521, 27521,
	27521, -1000, 27521, -1000, -1000, -1000, 642, 642, -1000, 1435,
	-1000, 988, -1000, 13838, 2574, 2574, -1000, -1000, 970, -1000,
	1533, -1000, 970, 1235, 1235, -1000, 1235, 1236, -1000, 1235,
	102, 1235, 99, 970, 970, 2410, 2285, 2164, 2149, 1213,
	-106, -1000, 951, 12473, 1793, 1297, 1213, 1213, 1213, 1050,
	880, 16, -1000, -1000, -1000, 1574, 1564, 951, -1000, -1000,
	-1000, 1493, 1056, 1052, -1000, -1000, 10185, 1066, 1356, 415,
	1050, 1572, 27521, 12473, -1000, -1000, 12473, 1234, -1000, 12473,
	-1000, -1000, -1000, 1572, 1572, 1064, -1000, -1000, 468, -1000,
	-1000, -1000, -1000, -1000, 2574, -32, -1000, -1000, -1000, -1000,
	-1000, 16, 879, 16, 715, -1000, 658, -1000, -1000, -222,
	-1000, -1000, 1212, 1309, -1000, -1000, 1224, -1000, -1000, -1000,
	27521, 27521, -1000, -1000, 230, -1000, 275, 1030, -1000, -175,
	-1000, -1000, 1515, 27521, -1000, -1000, 7413, -1000, -1000, 1214,
	1269, -1000, -1000, -1000, -1000, -1000, -1000, 2574, -1000, 1472,
	-1000, -1000, 235, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 13838, 13838, 13838, 13838, 13838, 1533, 873, 951, 13838,
	13838, 18869, 27521, 27521, 17036, 16, 30, -1000, 12473, 12473,
	1459, -1000, 1213, -1000, 1168, 27521, 1213, 27521, -1000, 1533,
	-1000, 951, 951, 27521, 951, 1533, -1000, -1000, 424, -1000,
	424, 979, 974, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1514, 1145, -1000, 228, 27521, -1000, 240, -1000, -180,
	-181, 1157, 1028, 1142, -1000, 532, 27521, 27521, -1000, -1000,
	-1000, 1282, 1282, 1282, 1282, 125, 970, -1000, 1282, 1282,
	1025, -1000, 1025, 1025, 438, -274, -1000, 1413, 1397, 951,
	1141, 1600, -1000, 1213, 1610, 410, 1052, -1000, -1000, 1019,
	-1000, -1000, -1000, -1000, -1000, 1157, 1213, 1207, -1000, -1000,
	-1000, 180, -1000, 7413, 5068, 1005, -1000, -1000, -1000, -1000,
	-1000, 970, 163, -160, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 30, 293, -1000, 1400, 1397, -1000, 1560, 1409, 1556,
	-1000, 27521, 1052, 27521, -1000, 180, 12928, 27521, -1000, -57,
	-1000, -1000, -1000, -1000, -1000, 1210, -1000, 1339, -120, -166,
	1395, 1399, 1399, 1400, -1000, 1544, 1543, -1000, 872, 1537,
	866, 965, -1000, -1000, 1282, 970, 997, 305, -1000, -1000,
	-150, -1000, 1329, -1000, 1392, 736, -1000, -1000, -1000, -1000,
	861, 816, -1000, 811, -1000, -1000, -1000, 1280, 165, -1000,
	-155, -1000, 734, -1000, -1000, -1000, -1000, -1000, 1276, -1000,
	1585, -1000, -172, -1000, -1000, -1000, 1599, 449, 449, -171,
	-1000, -1000, -1000, 281, 804, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1844, 1843, 32, 87, 79, 1842, 1838, 1837, 1836,
	133, 132, 130, 1835, 1834, 1833, 1832, 1831, 1830, 1827,
	1825, 1821, 1818, 1816, 1813, 57, 122, 39, 30, 142,
	1812, 1811, 48, 1810, 1809, 1807, 121, 118, 474, 1806,
	119, 1805, 1804, 1803, 1800, 1799, 1798, 1797, 1794, 1792,
	1785, 1784, 1782, 1778, 1777, 182, 1776, 1775, 5, 1772,
	53, 1769, 1768, 1767, 1760, 1759, 83, 1758, 1756, 1755,
	117, 1754, 1751, 46, 112, 51, 76, 1747, 1746, 73,
	770, 1745, 93, 128, 1742, 1490, 1741, 42, 71, 80,
	1740, 45, 1739, 1734, 90, 1733, 1732, 1729, 69, 1728,
	1726, 3142, 1725, 66, 78, 12, 26, 1723, 1722, 1721,
	1720, 31, 2080, 1719, 1718, 21, 1717, 1714, 137, 1713,
	84, 28, 1712, 17, 16, 18, 1711, 86, 1710, 8,
	58, 24, 1708, 82, 1707, 1706, 1705, 1704, 43, 1703,
	72, 103, 88, 1702, 1701, 4, 14, 1699, 1698, 1694,
	1693, 1691, 1690, 11, 1689, 2, 1688, 27, 1687, 75,
	19, 68, 85, 29, 10, 1685, 126, 1684, 37, 106,
	65, 108, 1683, 1682, 1681, 846, 47, 140, 1679, 1678,
	35, 1677, 116, 131, 1676, 1449, 1673, 1671, 67, 1274,
	2404, 15, 110, 1670, 1669, 2058, 59, 74, 22, 1668,
	1667, 1666, 123, 124, 50, 771, 44, 1665, 1663, 1662,
	1661, 1660, 1659, 1657, 99, 9, 20, 113, 23, 1656,
	1655, 1654, 63, 38, 1653, 114, 105, 64, 127, 1652,
	111, 109, 56, 1651, 41, 1650, 1649, 1648, 1646, 40,
	1644, 1643, 1642, 1640, 98, 89, 61, 36, 1639, 34,
	91, 102, 101, 1637, 25, 125, 13, 1636, 6, 0,
	1634, 7, 120, 1454, 104, 1630, 1628, 1, 1626, 3,
	1625, 1624, 81, 1623, 1622, 1621, 1618, 1389, 340, 115,
	1617, 129,
}

//line sql.y:5178
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 275, 276, 276, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 259, 259, 259, 262, 262,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 279, 279, 96, 96, 94, 94, 95, 95,
	161, 161, 13, 14, 14, 171, 171, 170, 170, 170,
	172, 172, 172, 172, 205, 205, 15, 15, 15, 15,
	15, 71, 71, 261, 261, 260, 258, 258, 257, 257,
	256, 23, 24, 33, 33, 33, 33, 34, 35, 263,
	263, 235, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 237, 237, 224, 224, 236, 236,
	236, 236, 236, 236, 236, 223, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 207, 207, 207,
	207, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 209, 209, 209, 209, 209, 211, 211, 211,
	211, 211, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 213,
	213, 213, 213, 213, 213, 222, 222, 214, 214, 217,
	217, 218, 218, 218, 219, 219, 220, 220, 215, 215,
	215, 215, 216, 216, 216, 225, 249, 249, 248, 248,
	246, 246, 246, 246, 234, 234, 243, 243, 243, 243,
	243, 233, 233, 229, 229, 229, 230, 230, 231, 231,
	228, 228, 232, 232, 245, 245, 244, 226, 226, 227,
	227, 251, 251, 251, 251, 252, 268, 269, 267, 267,
	267, 267, 267, 60, 60, 60, 184, 184, 184, 241,
	241, 240, 240, 240, 242, 242, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 179, 179, 179, 266, 266,
	266, 266, 266, 266, 265, 265, 265, 238, 238, 238,
	264, 264, 130, 130, 131, 131, 30, 30, 30, 30,
	30, 30, 29, 29, 29, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 31, 31, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 221,
	221, 221, 253, 253, 254, 254, 17, 22, 22, 18,
	18, 18, 18, 19, 19, 41, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	270, 270, 178, 178, 186, 186, 177, 177, 176, 176,
	176, 180, 180, 180, 181, 181, 274, 274, 274, 43,
	43, 45, 45, 46, 47, 47, 200, 200, 201, 201,
	48, 49, 61, 61, 61, 61, 61, 61, 63, 63,
	63, 7, 7, 7, 7, 57, 57, 57, 6, 6,
	44, 44, 51, 271, 271, 272, 273, 273, 273, 273,
	52, 54, 20, 20, 20, 20, 20, 20, 78, 78,
	66, 66, 66, 66, 66, 66, 66, 66, 66, 66,
	66, 66, 72, 72, 72, 67, 67, 280, 55, 56,
	56, 70, 70, 70, 64, 64, 64, 69, 69, 69,
	75, 75, 77, 77, 77, 77, 77, 79, 79, 79,
	79, 79, 79, 79, 74, 74, 76, 76, 76, 76,
	193, 193, 193, 192, 192, 86, 86, 87, 87, 88,
	88, 89, 89, 89, 128, 104, 104, 160, 160, 159,
	159, 162, 162, 90, 90, 90, 90, 91, 91, 92,
	92, 93, 93, 199, 199, 198, 198, 198, 197, 197,
	97, 97, 97, 99, 98, 98, 98, 98, 100, 100,
	102, 102, 101, 101, 103, 105, 105, 105, 105, 105,
	106, 106, 85, 85, 85, 85, 85, 85, 85, 85,
	174, 174, 108, 108, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 119, 119, 119, 119, 119, 119,
	109, 109, 109, 109, 109, 109, 109, 73, 73, 120,
	120, 120, 127, 121, 121, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 116,
	116, 116, 116, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 114, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 281, 281, 118, 117, 117, 117, 117, 117,
	117, 117, 68, 68, 68, 68, 68, 204, 204, 204,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 206,
	206, 206, 206, 134, 134, 65, 65, 132, 132, 133,
	135, 135, 129, 129, 129, 111, 111, 111, 111, 111,
	111, 111, 111, 113, 113, 113, 136, 136, 137, 137,
	138, 138, 139, 139, 140, 141, 141, 141, 142, 142,
	142, 142, 32, 32, 32, 32, 32, 27, 27, 27,
	27, 28, 28, 28, 80, 80, 80, 80, 82, 82,
	81, 81, 58, 58, 59, 59, 59, 83, 83, 84,
	84, 84, 84, 157, 157, 157, 143, 143, 143, 143,
	149, 149, 149, 145, 145, 147, 147, 147, 148, 148,
	148, 146, 154, 154, 156, 156, 155, 155, 151, 151,
	152, 152, 153, 153, 153, 150, 150, 110, 110, 110,
	110, 110, 158, 158, 158, 158, 163, 163, 123, 123,
	125, 125, 124, 126, 164, 164, 168, 165, 165, 169,
	169, 169, 169, 169, 166, 166, 167, 167, 194, 194,
	194, 173, 173, 185, 185, 182, 182, 183, 183, 175,
	175, 187, 187, 187, 53, 122, 122, 250, 250, 247,
	190, 190, 191, 191, 195, 195, 196, 196, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 277, 278, 202, 203, 203, 203,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 11,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 5, 3, 6, 7, 7, 7, 5, 2, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 10, 3, 6, 7, 5, 5, 5, 12,
	7, 5, 9, 4, 4, 4, 4, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 6,
	6, 5, 5, 3, 2, 3, 3, 3, 7, 3,
	3, 3, 3, 4, 7, 5, 2, 4, 4, 4,
	4, 4, 5, 5, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 2, 4, 2, 4, 5,
	4, 4, 3, 3, 5, 2, 3, 3, 3, 3,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 3, 3, 3, 6, 4, 7, 6, 1, 3,
	2, 2, 2, 2, 1, 1, 1, 3, 2, 1,
	1, 1, 0, 1, 1, 0, 3, 0, 2, 0,
	2, 1, 2, 2, 0, 1, 1, 0, 1, 1,
	0, 1, 0, 1, 2, 3, 4, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 2, 1, 2, 3, 3, 0, 2,
	1, 2, 3, 4, 3, 0, 1, 2, 1, 5,
	4, 4, 1, 3, 3, 5, 0, 5, 1, 3,
	1, 2, 3, 1, 1, 3, 3, 1, 3, 3,
	3, 3, 3, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 0, 2, 0, 3, 0,
	1, 0, 1, 1, 5, 0, 1, 0, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -275, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -277, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 231, 232, 234, 235, 236,
	237, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 334, 187, 186, 26, -276, 474, -70,
	5, -138, 16, -3, -55, -280, -55, -55, -55, -55,
	-55, -55, -235, -237, 81, 126, 81, -71, -185, 165,
	174, 173, 170, -263, 107, 220, 325, 163, -39, -38,
	-37, -36, -40, 30, -30, -31, -255, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 347, 350, -242, 154,
	160, 161, 335, 105, 104, 72, 156, -239, 281, 451,
	-40, 453, 95, 97, 452, 41, 165, 454, 455, 456,
	457, 175, 458, 459, 460, 461, 467, 468, 469, 470,
	106, 5, 164, -263, -80, 291, 227, 77, -262, -259,
	84, 85, 86, 164, -185, 165, 166, -263, 164, -101,
	-195, -259, -189, 344, 178, 378, 379, 225, 77, 281,
	451, 231, 245, 239, 266, 258, 345, 380, 228, 179,
	213, 448, 256, 259, 312, 453, 381, 193, 304, 286,
	294, 95, 234, 321, 466, 230, 382, 464, 97, 452,
	76, 48, 41, 188, 254, 250, 454, 214, 383, 355,
	207, 105, 102, 473, 248, 47, 28, 463, 104, 46,
	455, 384, 456, 296, 271, 442, 45, 309, 194, 385,
	80, 349, 450, 298, 249, 295, 224, 462, 159, 386,
	434, 306, 443, 387, 272, 276, 388, 313, 49, 389,
	390, 444, 103, 391, 75, 457, 243, 244, 392, 222,
	177, 315, 270, 175, 34, 299, 346, 226, 55, 201,
	316, 43, 274, 42, 438, 393, 441, 269, 265, 50,
	394, 395, 396, 397, 458, 268, 242, 264, 472, 219,
	459, 59, 161, 278, 277, 279, 208, 311, 261, 398,
	399, 400, 182, 78, 401, 251, 19, 402, 403, 307,
	215, 404, 53, 405, 406, 319, 191, 407, 51, 460,
	38, 196, 461, 408, 409, 410, 411, 412, 305, 413,
	297, 273, 275, 203, 293, 348, 414, 247, 195, 465,
	415, 183, 449, 197, 200, 190, 320, 184, 416, 417,
	418, 419, 420, 229, 421, 422, 235, 467, 40, 423,
	424, 425, 426, 223, 218, 314, 323, 58, 79, 283,
	427, 447, 241, 216, 428, 232, 52, 468, 469, 470,
	210, 471, 289, 106, 220, 221, 44, 262, 202, 429,
	430, 252, 253, 267, 240, 263, 233, 435, 204, 308,
	192, 431, 322, 217, 284, 352, 209, 310, 446, 351,
	260, 257, 211, 432, 166, 205, 206, 433, 436, 300,
	290, 301, 302, 227, 303, 291, 212, 350, 255, 285,
	164, -166, 286, -186, 287, 288, 299, 300, 306, -178,
	307, 305, 203, -274, 313, 164, 308, 153, 144, 296,
	297, 290, 303, 291, 212, -270, -259, 456, 471, 312,
	259, 292, 298, 314, 438, 302, 301, -195, 233, -200,
	238, -190, -259, -189, 236, -101, -61, 434, 157, -202,
	-202, -72, 438, 440, -121, -85, -107, 110, -112, 30,
	24, -111, -108, -129, -126, -127, 144, 145, 147, 146,
	148, 133, 134, 141, 111, 149, -116, -114, -115, -117,
	88, 87, 96, 89, 90, 91, 92, 98, 99, 100,
	-190, -195, -124, -277, 65, 66, 335, 336, 337, 338,
	343, 339, 113, 54, 324, 333, 332, 331, 328, 329,
	326, 327, 341, 342, 169, 325, 163, 139, 334, -259,
	-189, 41, 289, 289, -101, 227, -5, -4, -277, 6,
	21, 22, -142, 18, 17, -278, 83, -64, -77, 60,
	61, -79, 22, 37, 64, 62, 21, -56, -76, 135,
	-85, -195, -76, -175, 168, -175, -175, -165, -205, 233,
	-169, 314, 313, -191, -167, -190, -188, -166, 311, 158,
	353, 109, 23, 25, 112, 144, 17, 113, 36, 160,
	176, 143, 172, 335, 153, 69, 354, 326, 327, 324,
	330, 337, 338, 325, 287, 30, 11, 356, 26, 186,
	22, 37, 137, 155, 116, 117, 189, 24, 187, 100,
	359, 20, 72, 181, 12, 174, 14, 360, 361, 15,
	169, 168, 128, 165, 67, 9, 149, 27, 125, 63,
	362, 29, 363, 364, 365, 366, 65, 126, 18, 328,
	329, 32, 439, 367, 343, 198, 139, 70, 56, 440,
	110, 368, 369, 98, 370, 101, 73, 445, 107, 16,
	68, 39, 371, 199, 372, 171, 373, 317, 374, 127,
	156, 334, 66, 375, 163, 288, 6, 340, 31, 185,
	173, 64, 376, 164, 115, 341, 342, 167, 99, 5,
	170, 33, 10, 71, 74, 331, 332, 333, 54, 347,
	114, 13, 377, 318, 108, 312, 259, -236, 126, -223,
	-227, -190, 180, -252, 176, -101, -245, -244, -190, -80,
	164, -259, 165, 165, 165, -55, 334, -36, -37, -166,
	143, 197, 82, 82, -227, -226, -225, -264, 199, 180,
	-251, -243, 172, 181, -233, 173, 174, -228, 165, 29,
	-264, -228, 171, 181, 199, 199, 106, 199, 106, 199,
	199, 199, 199, 199, 199, 199, 199, 199, 196, -234,
	118, -234, 351, 351, -239, -264, -264, -264, 167, 34,
	34, -187, -228, 167, 23, -234, -234, -166, 143, -234,
	-234, -234, -234, 207, 207, -234, -234, -234, -234, -234,
	-234, -234, -234, -234, -234, -234, -234, -234, -234, -234,
	-101, -83, 214, 153, 155, 158, 73, 88, 228, 118,
	-38, 209, -22, -101, 164, -259, -182, 169, -55, -101,
	150, -101, -180, 126, 13, -180, -177, 289, 293, 294,
	295, -180, -180, -180, -180, 210, 304, -229, 165, 34,
	177, 289, 210, 304, 210, 211, 210, 211, 210, -176,
	12, 128, 325, 309, 306, 203, 164, 204, 166, 310,
	-259, 441, 211, -176, 289, 206, -180, -203, -277, -191,
	-203, -203, 31, 167, -190, -57, -190, 88, -7, -3,
	-11, -10, -12, 118, -78, 289, -66, 144, 456, 442,
	443, 444, 441, 305, 449, 447, 445, 210, 446, 82,
	109, 107, 108, 125, -85, -109, 128, 110, 126, 127,
	112, 130, 129, 140, 133, 134, 135, 136, 137, 138,
	139, 131, 132, 143, 118, 119, 120, 121, 122, 123,
	124, -174, -277, -127, -277, 151, 152, -112, -112, -112,
	-112, -112, -112, -112, -112, -112, -112, -277, 150, -2,
	-121, -4, -277, -277, -277, -277, -277, -277, -277, -277,
	-134, -85, -277, -281, -118, -277, -281, -118, -281, -118,
	-281, -277, -281, -118, -281, -118, -281, -281, -118, -277,
	-277, -277, -277, -277, -277, -277, -202, -271, -272, -104,
	-101, -277, 88, -138, -3, -55, -157, 20, 32, -85,
	-139, -140, -85, -138, 56, -74, -76, -79, 60, 61,
	94, 12, -193, -192, 23, -190, 88, 150, 12, -102,
	27, -101, -87, -88, -89, -90, -104, -128, -277, 12,
	-94, -95, -101, -103, -195, 82, 233, -169, -205, -171,
	-170, 315, 317, 118, -194, -190, 88, 30, 83, 82,
	-101, -207, -210, -212, -211, -213, -208, -209, 256, 257,
	144, 260, 262, 263, 264, 265, 266, 267, 268, 269,
	270, 271, 31, 188, 252, 253, 254, 255, 272, 273,
	274, 275, 276, 277, 278, 279, 239, 258, 345, 240,
	241, 242, 243, 244, 245, 247, 248, 249, 250, 251,
	-262, -259, 81, 83, 82, -214, 81, -83, -183, 169,
	-250, -247, 74, -259, -259, -259, -183, -234, -234, 196,
	-29, -26, -255, 16, -25, -26, 158, 102, 103, 155,
	81, -223, 81, -232, -262, -259, 81, 29, 171, 170,
	-231, -228, -231, -232, -259, -129, -190, -195, -259, 29,
	29, -162, -190, -162, -162, 21, -162, 21, -162, 21,
	89, -190, -162, 21, -162, 21, -162, 21, -162, 21,
	-162, 21, 30, 75, 76, 30, 78, 79, 80, -129,
	-129, -223, -166, -101, -259, 89, 89, -234, -234, 89,
	88, 88, 88, -234, -234, 89, 88, -259, 88, -265,
	182, 224, 226, 89, 89, 89, 89, 30, 88, -266,
	30, 463, 462, 464, 465, 466, 89, 30, 89, 30,
	89, -190, 81, -82, 216, 118, 205, 205, 164, 164,
	218, -101, 229, 230, 228, 21, 217, 219, 221, 41,
	82, 167, -182, 73, -96, -101, 24, -182, -196, -195,
	-188, 88, -85, -230, 12, 128, -176, -176, -180, -101,
	-230, -176, -180, -101, -180, -180, -180, -180, -176, -180,
	-195, -195, -101, -101, -101, -101, -101, -101, -101, -203,
	-203, -203, -181, 126, -180, 73, -201, 236, 270, 435,
	436, 437, 82, 347, -94, 441, 441, 441, 441, 441,
	441, -85, -85, -85, -85, -119, 98, 110, 99, 100,
	-112, -120, -124, -127, 93, 128, 126, 127, 112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -204, -259, 88, 144, -259, -111,
	-111, -190, -75, 22, 37, -74, -191, -196, -188, -70,
	-278, -278, -138, -74, -74, -85, -85, -129, 88, -74,
	-129, 88, -74, -74, -69, 22, 37, -132, -133, 114,
	-129, -278, -112, -190, -190, -74, -75, -75, -74, -74,
	82, -273, 317, 318, 439, -198, 199, -197, 23, -195,
	88, -122, -121, -142, -278, -143, 27, 10, 128, 82,
	19, 82, -141, 25, 26, -142, -113, -190, 89, 92,
	-86, 82, 12, -79, -101, -192, 135, -196, -101, -161,
	199, -101, 31, 82, -97, -99, -98, -100, 63, 67,
	69, 64, 65, 66, 70, -199, 23, -87, -3, -277,
	-101, -94, -279, 82, 12, 74, -279, 82, 150, -169,
	-171, 82, 316, 318, 319, 73, 101, -85, -216, 143,
	-241, -240, -239, -223, -225, -226, -227, 83, -144, -219,
	284, -214, -214, -214, -214, -214, -215, -166, -215, -215,
	-215, 81, 81, -214, -214, -214, -214, -217, 81, -217,
	-217, -218, 81, -218, -252, -85, -249, -248, -246, -247,
	175, 95, 347, -244, -141, 89, -82, -101, 110, 73,
	-190, -250, -250, -250, -259, -259, 88, -259, 88, 82,
	17, -224, -223, -130, 224, -254, 199, -251, -245, 81,
	29, -231, -232, -232, 150, -259, 82, 27, 106, 106,
	106, 106, 347, 155, 31, -223, -130, -204, 167, -204,
	-204, 88, 88, -179, 471, -94, 166, 223, -84, 330,
	88, 84, -101, -101, -101, -101, -101, 158, 155, 207,
	-101, -101, -94, -101, 82, -60, 184, 179, -259, -101,
	-180, -180, -101, -180, -180, 88, -101, -190, -66, 317,
	347, 20, -67, 20, 98, 99, 100, -120, -112, -112,
	-112, -73, 189, 109, -278, -278, -74, -74, -277, 150,
	-5, -142, -278, -278, 82, 74, 23, 12, 12, -278,
	12, 12, -278, -278, -74, -135, -133, 116, -85, -278,
	-278, 82, 82, -278, -278, -278, -278, -278, -272, 438,
	318, -105, 71, 168, 72, -277, -197, -278, -157, 39,
	47, 58, -85, -85, -140, -157, -173, 20, 12, 54,
	54, -106, 13, -76, -87, -79, 150, -106, -110, 31,
	54, -3, -277, -277, -164, -168, -129, -88, -89, -89,
	-88, -89, 63, 63, 63, 68, 63, 68, 63, -98,
	-195, -278, -278, -3, -161, 74, -87, -101, -87, -103,
	-195, 135, -170, -172, 320, 317, 323, -259, 88, 82,
	-239, -227, 98, 110, 30, 73, 281, 95, 171, 29,
	170, -220, 285, -215, -215, -216, -259, 88, 144, -216,
	-216, -216, -222, 88, -222, 89, 89, 83, -32, -27,
	-28, 32, 77, -246, -234, 88, 38, 83, 166, 24,
	-101, 73, 73, 73, 16, -159, -190, 82, 83, -131,
	225, -129, 83, -190, 83, -159, -232, -191, -190, -277,
	164, 30, 30, -130, -131, -216, -259, 473, 472, 83,
	-101, -81, 214, 222, 81, 85, -261, 74, 205, 281,
	205, 208, 167, -60, -32, -101, -176, -176, 32, 317,
	450, 448, -73, 109, -112, -112, -278, -278, -75, -191,
	-138, -157, -206, 144, 256, 188, 254, 250, 270, 261,
	283, 252, 284, -204, -206, -112, -112, -112, -112, 344,
	-138, 117, -85, 115, -112, -112, 165, 165, 165, -162,
	40, 88, 88, 59, -101, -136, 14, -85, 135, -142,
	-163, 73, -164, -123, -125, -124, -277, -158, -278, -190,
	-162, -106, 82, 118, -92, -91, 73, 74, -93, 73,
	-91, 63, 63, -278, -106, -87, -106, -106, 150, 317,
	321, 322, -239, 98, -112, 10, 88, 29, 29, -216,
	-216, 83, 82, 83, 82, 83, 82, -184, 384, 110,
	-28, -27, -234, -234, 89, -259, -101, -101, -101, -101,
	17, 82, -223, -129, 54, -249, 83, -253, -254, -101,
	-111, -131, -160, 81, 83, -258, 347, -260, -259, -190,
	-190, -190, -101, -180, -180, 32, -259, -112, -278, -142,
	-278, -214, -214, -214, -218, -214, 244, -214, 244, -278,
	-278, 20, 20, 20, 20, -277, -65, 340, -85, 82,
	82, -277, -277, -277, -278, 88, -215, -137, 15, 17,
	28, -163, 82, -278, -278, 82, 54, 150, -278, -138,
	-168, -85, -85, 81, -85, -138, -106, -115, -215, 88,
	-215, 89, 89, 384, 30, 78, 79, 80, 30, 75,
	76, -160, -159, -190, 201, 183, -278, 82, -221, 347,
	350, 23, -159, -257, -256, -191, 81, 74, -157, -215,
	-259, -112, -112, -112, -112, -112, -142, 88, -112, -112,
	-159, -278, -159, -159, -198, -215, -146, -151, -177, -85,
	-121, 29, -125, 54, -3, -190, -123, -190, -142, -159,
	-142, -216, -216, 83, 83, 23, 202, -101, -254, 351,
	351, -3, 83, 82, 118, -159, -101, -278, -278, -278,
	-278, -68, 128, 347, -278, -278, -278, -278, -278, -278,
	-105, -149, 434, -154, 43, -152, -153, 44, -150, 45,
	53, 10, -123, 150, 83, -3, -277, 81, -58, 347,
	-256, -238, -191, 88, 89, 83, -278, 345, 70, 348,
	-146, 48, 262, -156, -155, 52, 44, -153, 17, 46,
	17, -164, -190, -58, -112, 198, -159, -59, 213, 438,
	-261, 59, 346, 349, -147, 50, -145, 49, -145, -155,
	17, 17, 88, 17, 88, -278, -278, 83, 176, -258,
	59, -148, 51, 73, 101, 88, 88, 88, -268, -269,
	73, 215, 347, 73, 101, -269, 73, 11, 10, 348,
	-267, 184, 179, 182, 31, -267, 349, 178, 30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 820, 0, 557, 557, 557, 557, 557,
	557, 557, 0, 0, -2, -2, -2, 844, 38, 0,
	933, 0, 0, -2, 490, 491, 0, 493, -2, 0,
	0, 502, 1363, 1363, 552, 0, 0, 0, 0, 0,
	0, 1361, 55, 56, 508, 509, 510, 1, 3, 0,
	561, 828, 0, 0, -2, 559, 0, 0, 939, 939,
	939, 0, 86, 87, 0, 0, 0, 844, 0, 0,
	0, 0, 0, 557, 0, 934, 109, 110, 90, -2,
	114, 115, 0, 119, 368, 329, 371, 327, 357, -2,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 224, 224, 0, 0, -2, 320,
	320, 320, 0, 0, 0, 354, 941, 274, 224, 224,
	0, 224, 224, 224, 224, 0, 0, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 0, 108, 857, 0, 0, 0, 118, 39,
	35, 36, 37, 0, 0, 0, 935, 557, 0, 424,
	642, 954, 955, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110,
	1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130,
	1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140,
	1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150,
	1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160,
	1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170,
	1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190,
	1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200,
	1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210,
	1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220,
	1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230,
	1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240,
	1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250,
	1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260,
	1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270,
	1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280,
	1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290,
	1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300,
	1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310,
	1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330,
	1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340,
	1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350,
	1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360,
	0, 481, 481, 0, 481, 481, 481, 481, 0, 0,
	0, 436, 0, 0, 0, 0, 478, 0, 0, 455,
	457, 0, 478, 0, 465, 481, 1364, 1364, 1364, 924,
	0, 475, 473, 487, 488, 470, 471, 489, 492, 0,
	497, 500, 950, 951, 0, 515, 0, 1171, 507, 520,
	521, 0, 553, 554, 40, 693, 652, 0, 658, 660,
	0, 695, 696, 697, 698, 699, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 725, 726, 727, 728,
	805, 806, 807, 808, 809, 810, 811, 812, 662, 663,
	802, 0, 913, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 793, 0, 762, 762, 762, 762, 762, 762,
	762, 762, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 1363, 0, 530, 0, 0, 820, 51, 0, 557,
	562, 563, 863, 0, 0, 820, 1362, 0, 0, -2,
	-2, 573, 579, 580, 581, 582, 583, 558, 0, 586,
	590, 0, 0, 0, 940, 0, 0, 72, 0, 1327,
	917, -2, -2, 0, 0, 952, 953, 926, -2, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, 1090, 1091, 1092, 1093, -2, 1114, 0, 0, 128,
	129, 0, 38, 250, 0, 124, 0, 244, 197, 857,
	937, 947, 0, 0, 0, 937, 92, 116, 117, 224,
	224, 0, 118, 118, 336, 337, 338, 0, 0, -2,
	248, 0, 321, 0, 0, 238, 238, 242, 240, 241,
	0, 0, 0, 0, 0, 0, 348, 0, 349, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 408, 0,
	225, 0, 366, 367, 275, 0, 0, 0, 0, 346,
	347, 0, 0, 942, 943, 0, 0, 224, 224, 0,
	0, 0, 0, 224, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 848, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 416, 0, 935, 0, 0, 0, 935, 423,
	0, 425, 426, 0, 0, 427, 0, 478, 478, 476,
	477, 429, 430, 431, 432, 481, 0, 0, 233, 234,
	235, 478, 481, 0, 481, 481, 481, 481, 478, 481,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1364,
	1364, 1364, 484, 481, 462, 463, 466, 467, 1365, 1366,
	468, 469, 925, 498, 501, 518, 516, 517, 519, 511,
	512, 513, 514, 0, 532, 533, 538, 0, 0, 0,
	0, 544, 545, 546, 0, 0, 549, 550, 551, 0,
	0, 0, 0, 0, 656, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 680, 681, 682, 683, 684, 685,
	686, 659, 0, 673, 0, 0, 0, 715, 716, 717,
	718, 719, 720, 721, 722, 723, 0, 570, 0, 0,
	0, 820, 0, 0, 0, 0, 0, 0, 0, 567,
	0, 794, 0, 746, 754, 0, 747, 755, 748, 756,
	749, 0, 750, 757, 751, 758, 752, 753, 759, 0,
	0, 0, 570, 570, 0, 0, 41, 522, 523, 0,
	625, 945, 531, 828, 0, 572, 866, 0, 0, 829,
	821, 822, 825, 828, 0, 595, 584, 574, 577, 578,
	560, 0, 587, 591, 0, 593, 594, 0, 0, 70,
	0, 641, 0, 597, 599, 600, 601, 623, 0, 0,
	0, 0, 66, 68, 642, 0, 1327, 923, 0, 74,
	75, 0, 0, 0, 212, 928, 929, 930, -2, 231,
	0, 136, 204, 148, 149, 150, 197, 152, 197, 197,
	197, 197, 208, 208, 208, 208, 180, 181, 182, 183,
	184, 0, 0, 167, 197, 197, 197, 197, 187, 188,
	189, 190, 191, 192, 193, 194, 153, 154, 155, 156,
	157, 158, 159, 160, 161, 199, 199, 199, 201, 201,
	0, 39, 0, 216, 0, 825, 0, 848, 0, 0,
	0, 948, 0, 947, 947, 947, 0, 0, 0, 369,
	330, 358, 370, 0, 333, 334, -2, 0, 0, 320,
	0, 322, 0, 232, 0, -2, 0, 0, 0, 238,
	242, 239, 242, 230, 243, 350, 802, 0, 351, 352,
	0, 388, 611, 0, 0, 0, 0, 0, 394, 395,
	396, 0, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 359, 360, 361, 362, 363, 364, 365, 0,
	0, 322, 0, 355, 0, 276, 277, 0, 0, 280,
	281, 282, 283, 0, 0, 286, 287, 288, 289, 290,
	314, 315, 316, 291, 292, 293, 294, 295, 296, 297,
	308, 309, 310, 311, 312, 313, 298, 299, 300, 301,
	302, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 385, 386, 845, 846, 847, 0,
	0, 0, 0, 0, 263, 64, 936, 0, 643, 956,
	957, 482, 483, 0, 236, 237, 481, 481, 433, 456,
	0, 481, 437, 458, 438, 440, 439, 441, 481, 444,
	479, 480, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 460, 0, 461, 0, 0, 499, 503, 504,
	505, 506, 0, 0, 535, 540, 541, 542, 543, 555,
	548, 694, 653, 654, 655, 657, 674, 0, 676, 678,
	664, 665, 689, 690, 691, 0, 0, 0, 0, 687,
	669, 0, 700, 701, 702, 703, 704, 705, 706, 707,
	708, 709, 710, 711, 714, 777, 778, 779, 0, 712,
	713, 724, 0, 0, 0, 571, 803, 0, -2, 0,
	692, 912, 828, 0, 0, 0, 0, 697, 805, 0,
	697, 805, 0, 0, 0, 568, 569, 800, 797, 0,
	0, 763, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 525, 526, 528, 0, 645, 0, 626, 0, 628,
	629, 0, 946, 863, 52, 42, 0, 864, 0, 0,
	0, 0, 824, 826, 827, 863, 0, 813, 0, 0,
	650, 0, 0, 575, 48, 592, 588, 0, 650, 0,
	0, 640, 0, 0, 0, 0, 0, 0, 630, 0,
	0, 633, 0, 0, 0, 0, 624, 0, 0, 0,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 918,
	73, 0, 0, 78, 79, 919, 920, 921, 922, 0,
	111, -2, 271, 130, 132, 133, 134, 125, 135, 206,
	205, 151, 208, 208, 174, 175, 212, 0, 212, 212,
	212, 0, 0, 168, 169, 170, 171, 162, 0, 163,
	164, 165, 0, 166, 249, 0, 832, 217, 218, 220,
	224, 0, 0, 245, 246, 0, 0, 101, 0, 0,
	949, 0, 0, 0, 107, 120, 121, 122, 123, 118,
	0, 0, 126, 324, 0, 0, 0, 247, 0, 0,
	226, 242, 227, 228, 0, 353, 0, 0, 390, 391,
	392, 393, 0, 0, 0, 322, 324, 212, 0, 278,
	279, 284, 285, 303, 0, 0, 0, 0, 858, 859,
	0, 862, 93, 376, 378, 377, 381, 0, 0, 0,
	0, 417, 263, 832, 0, 421, 264, 265, 422, 478,
	443, 459, 478, 435, 442, 485, 464, 495, 539, 0,
	0, 0, 547, 0, 675, 677, 679, 666, 687, 670,
	0, 667, 0, 0, 661, 729, 0, 0, 570, 0,
	820, 863, 733, 734, 0, 0, 0, 0, 0, 770,
	0, 0, 771, 0, 820, 0, 798, 0, 0, 745,
	764, 0, 0, 765, 766, 767, 768, 769, 524, 527,
	529, 605, 0, 0, 0, 0, 627, 944, 44, 0,
	0, 0, 830, 831, 823, 43, 0, 931, 932, 814,
	815, 816, 0, 585, 596, 576, 0, 828, 906, 0,
	0, 898, 0, 0, 650, 914, 0, 598, 619, 621,
	0, 616, 631, 632, 634, 0, 636, 0, 638, 639,
	602, 603, 604, 0, 650, 0, 650, 67, 650, 69,
	0, 644, 76, 77, 0, 0, 83, 213, 214, 118,
	273, 131, 137, 0, 0, 0, 141, 0, 0, 144,
	146, 147, 207, 212, 212, 176, 209, 210, 211, 177,
	178, 179, 0, 195, 0, 0, 0, 266, 88, 836,
	835, 224, 224, 219, 0, 222, 0, 198, 0, 938,
	103, 0, 0, 0, 0, 328, 609, 0, 339, 340,
	0, 323, 387, 0, 216, 0, 229, 803, 612, 0,
	0, 341, 0, 324, 344, 345, 356, 306, 307, 304,
	607, 849, 850, 851, 0, 861, 96, 0, 0, 0,
	0, 374, 0, 419, 420, 65, 481, 481, 534, 0,
	537, 0, 668, 0, 688, 671, 730, 731, 0, 804,
	828, 46, 0, 197, 197, 783, 197, 201, 786, 197,
	788, 197, 791, 0, 0, 0, 0, 0, 0, 0,
	795, 744, 801, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 868, 865, 45, 818, 0, 651, 589, 49,
	53, 0, 906, 897, 908, 910, 0, 0, 0, 902,
	0, 820, 0, 0, 613, 620, 0, 0, 614, 0,
	615, 635, 637, -2, 820, 650, 60, 61, 0, 80,
	81, 82, 272, 138, 139, 0, 142, 143, 145, 172,
	173, 208, 0, 208, 0, 202, 0, 255, 267, 0,
	833, 834, 0, 0, 221, 223, 607, 104, 105, 106,
	0, 0, 127, 325, 0, 215, 0, 0, 412, 409,
	342, 343, 0, 0, 860, 375, 0, 94, 95, 0,
	0, 380, 418, 428, 434, 536, 556, 672, 732, 863,
	735, 780, 208, 784, 785, 787, 789, 790, 792, 737,
	736, 0, 0, 0, 0, 0, 828, 0, 799, 0,
	0, 0, 0, 0, 625, 208, 888, 50, 0, 0,
	0, 54, 0, 911, 0, 0, 0, 0, 71, 828,
	915, 916, 617, 0, 622, 828, 59, 140, 212, 196,
	212, 0, 0, 268, 837, 838, 839, 840, 841, 842,
	843, 0, 331, 610, 0, 0, 389, 0, 397, 0,
	0, 0, 0, 97, 98, 0, 0, 0, 47, 781,
	782, 0, 0, 0, 0, 772, 0, 796, 0, 0,
	0, 647, 0, 0, 645, 870, 869, 882, 895, 819,
	817, 0, 909, 0, 901, 904, 900, 903, 57, 0,
	58, 185, 186, 200, 203, 0, 0, 0, 413, 410,
	411, 852, 608, 0, 0, 0, 382, 738, 740, 739,
	741, 0, 0, 0, 743, 760, 761, 646, 648, 649,
	606, 888, 0, 881, 0, -2, 890, 0, 0, 0,
	896, 0, 899, 0, 618, 852, 0, 0, 372, 854,
	99, 100, 317, 318, 319, 93, 742, 0, 0, 0,
	875, 873, 873, 883, 884, 0, 0, 891, 0, 0,
	0, 907, 905, 89, 0, 0, 0, 0, 855, 856,
	96, 773, 0, 776, 878, 0, 871, 874, 872, 885,
	0, 0, 892, 0, 894, 414, 415, 251, 0, 379,
	774, 867, 0, 876, 877, 886, 887, 893, 252, 253,
	0, 853, 0, 879, 880, 254, 0, 0, 0, 0,
	256, 258, 259, 0, 0, 257, 775, 260, 261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 474,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:420
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:425
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:426
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:430
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:463
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:469
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:473
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:477
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:482
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:486
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:492
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:498
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:504
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:513
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:517
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:521
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:544
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:552
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:558
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:564
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:572
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:578
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:582
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:589
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:601
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:613
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:617
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:623
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:629
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:633
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:637
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:641
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:647
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:651
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:655
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:661
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:665
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:671
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:675
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:684
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:690
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:696
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:700
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:706
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:710
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:716
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:720
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:724
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:730
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:734
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:738
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:742
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:748
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:752
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:758
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:764
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:771
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:780
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].booleanUnion(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:784
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:791
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:795
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:800
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:804
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:815
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:820
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:826
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:831
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:837
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:843
		{
			yyLOCAL = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:850
		{
			yyLOCAL = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:857
		{
			yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].str)}, Options: yyDollar[4].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:862
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Fulltext: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:867
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Spatial: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:872
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Unique: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:879
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:886
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:897
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:903
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:907
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:913
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:917
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:921
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:925
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:930
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:934
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:940
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:944
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:950
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:954
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:961
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:965
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:971
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:975
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:981
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:986
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:991
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:995
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1000
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1004
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1008
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1014
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1024
		{
			yyLOCAL = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1028
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = false
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1033
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1038
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1043
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1048
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1053
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1058
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1063
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1068
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1073
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1140
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1152
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1158
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1164
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1172
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1176
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1180
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1184
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1188
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1194
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1198
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1206
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1210
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1214
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1218
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1222
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1226
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1234
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1238
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1242
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1246
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1251
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1261
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1265
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1273
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1277
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1281
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1285
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1296
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1301
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1305
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1310
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1314
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1322
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1326
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1332
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1340
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1344
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1349
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1353
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1370
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1375
		{
			yyVAL.str = ""
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1383
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1390
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1395
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1399
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1405
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1409
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1415
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1419
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1424
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1428
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1434
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1444
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1448
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1452
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1456
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1460
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1465
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1494
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1499
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1509
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1513
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1518
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1522
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1528
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1532
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1538
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1544
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1548
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1554
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1558
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1564
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1568
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1572
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnUpdate: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1576
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1582
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1588
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1594
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1600
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1604
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1608
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1612
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1616
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1621
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1625
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1634
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1638
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1642
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1647
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1651
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1657
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1661
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1665
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1671
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1675
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1689
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1705
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1709
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1713
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1717
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1753
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1757
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1761
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1765
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1769
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1773
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1777
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1781
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1785
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1789
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1793
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1798
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1802
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1806
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1838
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1848
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1853
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1857
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1862
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1866
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1870
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1874
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1878
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1882
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1888
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1892
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1896
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1902
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1906
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1910
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1914
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1918
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1922
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1926
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1930
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1934
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1938
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1942
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1946
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1950
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1954
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1958
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1962
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1966
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1970
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1974
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1978
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1982
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1986
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1992
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1996
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2002
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2006
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2010
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2014
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2018
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2022
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2026
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2030
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2034
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2040
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2046
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2053
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2060
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2066
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columnsUnion(), Select: yyDollar[9].selStmtUnion(), CheckOption: yyDollar[10].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2070
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2077
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2084
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2096
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2106
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2110
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2114
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParamsUnion(),
				},
				VindexCols: yyDollar[9].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2127
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2137
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2141
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2152
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2159
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2166
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[3].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2173
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2181
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2185
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2189
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2193
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2197
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2201
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2205
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2209
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2213
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2217
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2221
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2225
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2229
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2233
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2237
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2241
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2245
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2249
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2253
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2257
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2261
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2265
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2270
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2274
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2278
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2285
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2289
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 414:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2295
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2299
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2305
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2311
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2315
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 419:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2321
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2325
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2334
		{
			yyLOCAL = &DropView{FromTables: yyDollar[4].tableNamesUnion(), IfExists: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2338
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2344
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2348
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2353
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2359
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2363
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2367
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2371
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2375
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2379
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2383
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2387
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2391
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2395
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2399
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2403
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2407
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2411
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2415
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2419
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2423
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2427
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2431
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2435
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2439
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2443
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2447
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2451
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2455
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2459
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2463
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2467
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2471
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2475
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2479
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2483
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2487
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2491
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2495
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2500
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].str}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2504
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2508
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2512
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2516
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2521
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2535
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2539
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2543
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2549
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2559
		{
			yyVAL.str = ""
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = "extended "
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2569
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2573
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2579
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2589
		{
			yyVAL.str = ""
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2593
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2597
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2603
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2607
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2611
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2617
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2621
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2627
		{
			yyVAL.empty = struct{}{}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2631
		{
			yyVAL.empty = struct{}{}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2635
		{
			yyVAL.empty = struct{}{}
		}
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2641
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2645
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2651
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2655
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2661
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2667
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2671
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 496:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2676
		{
			yyVAL.empty = struct{}{}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2678
		{
			yyVAL.empty = struct{}{}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2681
		{
			yyVAL.empty = struct{}{}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2683
		{
			yyVAL.empty = struct{}{}
		}
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2688
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2694
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2699
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2703
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2707
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2711
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2715
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2719
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2725
		{
			yyVAL.str = yyDollar[1].str
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.str = yyDollar[1].str
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2733
		{
			yyVAL.str = yyDollar[1].str
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2739
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2743
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2747
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2751
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2756
		{
			yyVAL.str = ""
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2760
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2770
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2774
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2780
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2784
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2790
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2796
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2800
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2806
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2812
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2816
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2820
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2824
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2830
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2836
		{
			yyLOCAL = &RevertMigration{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2842
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2846
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2850
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2854
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2858
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2862
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2872
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2898
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2902
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2906
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2910
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2914
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2918
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2922
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2927
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2931
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2935
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2940
		{
			yyVAL.str = ""
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2944
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 557:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2949
		{
			setAllowComments(yylex, true)
		}
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2953
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 559:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2959
		{
			yyVAL.strs = nil
		}
	case 560:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2963
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2969
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2973
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2977
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2982
		{
			yyVAL.str = ""
		}
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2986
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2990
		{
			yyVAL.str = SQLCacheStr
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2995
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2999
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3003
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3008
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3012
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3017
		{
			yyVAL.strs = nil
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3021
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3025
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3029
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 576:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3039
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3043
		{
			yyVAL.str = SQLCacheStr
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3047
		{
			yyVAL.str = DistinctStr
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3051
		{
			yyVAL.str = DistinctStr
		}
	case 581:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3055
		{
			yyVAL.str = StraightJoinHint
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 583:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3063
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3069
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3073
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3079
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3083
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3087
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3091
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3096
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 591:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3100
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3104
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 594:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3111
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3116
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3120
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3126
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3130
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3140
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3144
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3148
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3154
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3160
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3164
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3169
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3173
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3179
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3183
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3189
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3193
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3206
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3210
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3214
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3218
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3224
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3226
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3230
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3236
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3238
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 623:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3241
		{
			yyVAL.empty = struct{}{}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3243
		{
			yyVAL.empty = struct{}{}
		}
	case 625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3246
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3250
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3254
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3261
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3267
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3271
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3275
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3281
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3287
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3291
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3295
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3299
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3305
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3309
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3319
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3323
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3329
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3333
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3339
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 645:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3348
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3352
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3356
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3360
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3365
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3369
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3375
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3379
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3383
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3387
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3391
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3395
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3399
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3403
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = ""
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3419
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3423
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3429
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3433
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3437
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3441
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3445
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3449
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3453
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3457
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3461
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3465
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3471
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3475
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3479
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3483
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3487
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3491
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3497
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3501
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3505
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3509
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3513
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3517
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3521
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3526
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3530
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3536
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3540
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3544
		{
			yyLOCAL = ListArg(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3550
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3556
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3560
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3566
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3570
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3574
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3578
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3582
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3586
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3590
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3594
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3598
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3602
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3606
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3610
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3614
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3618
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3622
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3626
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3630
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3634
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3638
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3642
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3646
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3650
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3654
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3658
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3662
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3666
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3670
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3674
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3678
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3682
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3700
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3704
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3708
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3712
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3746
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3750
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3754
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3758
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3762
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3766
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3770
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3780
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3784
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3788
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3793
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3798
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3803
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3819
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3823
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3827
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3832
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3837
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3842
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3850
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3860
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3870
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3874
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3878
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3882
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3886
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3890
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3894
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3900
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3904
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3908
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3912
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3916
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3926
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3930
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3936
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3940
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3944
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3948
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3952
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3956
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3962
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3966
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3970
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3974
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3978
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3982
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3986
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3991
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3995
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4000
		{
			yyVAL.str = string("")
		}
	case 796:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4004
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:4010
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4014
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 799:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:4020
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4029
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4035
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4039
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4043
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4049
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4053
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4057
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4061
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4065
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4069
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4073
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4077
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4083
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4092
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4096
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4101
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4105
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4110
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4114
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4119
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4123
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4129
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4133
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4139
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4144
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4148
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4152
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4157
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4161
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4165
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4169
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4174
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4178
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4182
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4186
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4190
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4197
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4201
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4205
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4209
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4215
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4219
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4223
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4228
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4232
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = yyDollar[3].str
		}
	case 850:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4255
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4259
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4264
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4268
		{
			yyVAL.str = yyDollar[2].str
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4273
		{
			yyVAL.str = "cascaded"
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4277
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4281
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 857:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4286
		{
			yyVAL.str = ""
		}
	case 858:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4290
		{
			yyVAL.str = yyDollar[3].str
		}
	case 859:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4296
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 860:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4300
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 861:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4304
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4308
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 863:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4313
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4317
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4321
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4326
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4330
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4334
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 869:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4338
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4343
		{
			yyVAL.str = ""
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4347
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 872:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4351
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 873:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4356
		{
			yyVAL.str = ""
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4360
		{
			yyVAL.str = " header"
		}
	case 875:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4365
		{
			yyVAL.str = ""
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = " manifest on"
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = " manifest off"
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4378
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4382
		{
			yyVAL.str = " overwrite on"
		}
	case 880:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4386
		{
			yyVAL.str = " overwrite off"
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4392
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4397
		{
			yyVAL.str = ""
		}
	case 883:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4401
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 884:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4407
		{
			yyVAL.str = yyDollar[1].str
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4411
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 886:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4417
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 887:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4421
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 888:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4426
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4430
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 890:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.str = yyDollar[1].str
		}
	case 891:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4440
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 892:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4446
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 893:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4450
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 894:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4454
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 895:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4459
		{
			yyVAL.str = ""
		}
	case 896:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4463
		{
			yyVAL.str = " optionally"
		}
	case 897:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4476
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4480
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4484
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4488
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4492
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4498
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4502
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4506
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 905:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4510
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 906:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4515
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4519
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4525
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4529
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4535
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4539
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4545
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4551
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4561
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4565
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4571
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4577
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4581
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 919:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4587
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4591
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4595
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4599
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4603
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4611
		{
			yyVAL.str = "charset"
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4621
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4625
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4629
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4638
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4640
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4643
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4645
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4648
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4650
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4653
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4655
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4658
		{
			yyVAL.empty = struct{}{}
		}
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.empty = struct{}{}
		}
	case 943:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4662
		{
			yyVAL.empty = struct{}{}
		}
	case 944:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4666
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4671
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4675
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4682
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 949:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4686
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4696
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4703
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4709
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4713
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 957:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4720
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5148
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5157
		{
			decNesting(yylex)
		}
	case 1363:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5162
		{
			skipToEnd(yylex)
		}
	case 1364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5167
		{
			skipToEnd(yylex)
		}
	case 1365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5171
		{
			skipToEnd(yylex)
		}
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5175
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
