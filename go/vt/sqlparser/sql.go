// Code generated by goyacc -fast-append -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const CALL = 57378
const DISTINCTROW = 57379
const PARSER = 57380
const OUTFILE = 57381
const S3 = 57382
const DATA = 57383
const LOAD = 57384
const LINES = 57385
const TERMINATED = 57386
const ESCAPED = 57387
const ENCLOSED = 57388
const DUMPFILE = 57389
const CSV = 57390
const HEADER = 57391
const MANIFEST = 57392
const OVERWRITE = 57393
const STARTING = 57394
const OPTIONALLY = 57395
const VALUES = 57396
const LAST_INSERT_ID = 57397
const NEXT = 57398
const VALUE = 57399
const SHARE = 57400
const MODE = 57401
const SQL_NO_CACHE = 57402
const SQL_CACHE = 57403
const SQL_CALC_FOUND_ROWS = 57404
const JOIN = 57405
const STRAIGHT_JOIN = 57406
const LEFT = 57407
const RIGHT = 57408
const INNER = 57409
const OUTER = 57410
const CROSS = 57411
const NATURAL = 57412
const USE = 57413
const FORCE = 57414
const ON = 57415
const USING = 57416
const INPLACE = 57417
const COPY = 57418
const ALGORITHM = 57419
const NONE = 57420
const SHARED = 57421
const EXCLUSIVE = 57422
const ID = 57423
const AT_ID = 57424
const AT_AT_ID = 57425
const HEX = 57426
const STRING = 57427
const INTEGRAL = 57428
const FLOAT = 57429
const HEXNUM = 57430
const VALUE_ARG = 57431
const LIST_ARG = 57432
const COMMENT = 57433
const COMMENT_KEYWORD = 57434
const BIT_LITERAL = 57435
const COMPRESSION = 57436
const NULL = 57437
const TRUE = 57438
const FALSE = 57439
const OFF = 57440
const DISCARD = 57441
const IMPORT = 57442
const ENABLE = 57443
const DISABLE = 57444
const TABLESPACE = 57445
const OR = 57446
const XOR = 57447
const AND = 57448
const NOT = 57449
const BETWEEN = 57450
const CASE = 57451
const WHEN = 57452
const THEN = 57453
const ELSE = 57454
const END = 57455
const LE = 57456
const GE = 57457
const NE = 57458
const NULL_SAFE_EQUAL = 57459
const IS = 57460
const LIKE = 57461
const REGEXP = 57462
const IN = 57463
const SHIFT_LEFT = 57464
const SHIFT_RIGHT = 57465
const DIV = 57466
const MOD = 57467
const UNARY = 57468
const COLLATE = 57469
const BINARY = 57470
const UNDERSCORE_BINARY = 57471
const UNDERSCORE_UTF8MB4 = 57472
const UNDERSCORE_UTF8 = 57473
const UNDERSCORE_LATIN1 = 57474
const INTERVAL = 57475
const JSON_EXTRACT_OP = 57476
const JSON_UNQUOTE_EXTRACT_OP = 57477
const CREATE = 57478
const ALTER = 57479
const DROP = 57480
const RENAME = 57481
const ANALYZE = 57482
const ADD = 57483
const FLUSH = 57484
const CHANGE = 57485
const MODIFY = 57486
const REVERT = 57487
const SCHEMA = 57488
const TABLE = 57489
const INDEX = 57490
const VIEW = 57491
const TO = 57492
const IGNORE = 57493
const IF = 57494
const UNIQUE = 57495
const PRIMARY = 57496
const COLUMN = 57497
const SPATIAL = 57498
const FULLTEXT = 57499
const KEY_BLOCK_SIZE = 57500
const CHECK = 57501
const INDEXES = 57502
const ACTION = 57503
const CASCADE = 57504
const CONSTRAINT = 57505
const FOREIGN = 57506
const NO = 57507
const REFERENCES = 57508
const RESTRICT = 57509
const SHOW = 57510
const DESCRIBE = 57511
const EXPLAIN = 57512
const DATE = 57513
const ESCAPE = 57514
const REPAIR = 57515
const OPTIMIZE = 57516
const TRUNCATE = 57517
const COALESCE = 57518
const EXCHANGE = 57519
const REBUILD = 57520
const PARTITIONING = 57521
const REMOVE = 57522
const MAXVALUE = 57523
const PARTITION = 57524
const REORGANIZE = 57525
const LESS = 57526
const THAN = 57527
const PROCEDURE = 57528
const TRIGGER = 57529
const VINDEX = 57530
const VINDEXES = 57531
const DIRECTORY = 57532
const NAME = 57533
const UPGRADE = 57534
const STATUS = 57535
const VARIABLES = 57536
const WARNINGS = 57537
const CASCADED = 57538
const DEFINER = 57539
const OPTION = 57540
const SQL = 57541
const UNDEFINED = 57542
const SEQUENCE = 57543
const MERGE = 57544
const TEMPORARY = 57545
const TEMPTABLE = 57546
const INVOKER = 57547
const SECURITY = 57548
const FIRST = 57549
const AFTER = 57550
const LAST = 57551
const VITESS_MIGRATION = 57552
const BEGIN = 57553
const START = 57554
const TRANSACTION = 57555
const COMMIT = 57556
const ROLLBACK = 57557
const SAVEPOINT = 57558
const RELEASE = 57559
const WORK = 57560
const BIT = 57561
const TINYINT = 57562
const SMALLINT = 57563
const MEDIUMINT = 57564
const INT = 57565
const INTEGER = 57566
const BIGINT = 57567
const INTNUM = 57568
const REAL = 57569
const DOUBLE = 57570
const FLOAT_TYPE = 57571
const DECIMAL = 57572
const NUMERIC = 57573
const TIME = 57574
const TIMESTAMP = 57575
const DATETIME = 57576
const YEAR = 57577
const CHAR = 57578
const VARCHAR = 57579
const BOOL = 57580
const CHARACTER = 57581
const VARBINARY = 57582
const NCHAR = 57583
const TEXT = 57584
const TINYTEXT = 57585
const MEDIUMTEXT = 57586
const LONGTEXT = 57587
const BLOB = 57588
const TINYBLOB = 57589
const MEDIUMBLOB = 57590
const LONGBLOB = 57591
const JSON = 57592
const ENUM = 57593
const GEOMETRY = 57594
const POINT = 57595
const LINESTRING = 57596
const POLYGON = 57597
const GEOMETRYCOLLECTION = 57598
const MULTIPOINT = 57599
const MULTILINESTRING = 57600
const MULTIPOLYGON = 57601
const NULLX = 57602
const AUTO_INCREMENT = 57603
const APPROXNUM = 57604
const SIGNED = 57605
const UNSIGNED = 57606
const ZEROFILL = 57607
const COLLATION = 57608
const DATABASES = 57609
const SCHEMAS = 57610
const TABLES = 57611
const VITESS_METADATA = 57612
const VSCHEMA = 57613
const FULL = 57614
const PROCESSLIST = 57615
const COLUMNS = 57616
const FIELDS = 57617
const ENGINES = 57618
const PLUGINS = 57619
const EXTENDED = 57620
const KEYSPACES = 57621
const VITESS_KEYSPACES = 57622
const VITESS_SHARDS = 57623
const VITESS_TABLETS = 57624
const VITESS_MIGRATIONS = 57625
const CODE = 57626
const PRIVILEGES = 57627
const FUNCTION = 57628
const OPEN = 57629
const TRIGGERS = 57630
const EVENT = 57631
const USER = 57632
const NAMES = 57633
const CHARSET = 57634
const GLOBAL = 57635
const SESSION = 57636
const ISOLATION = 57637
const LEVEL = 57638
const READ = 57639
const WRITE = 57640
const ONLY = 57641
const REPEATABLE = 57642
const COMMITTED = 57643
const UNCOMMITTED = 57644
const SERIALIZABLE = 57645
const CURRENT_TIMESTAMP = 57646
const DATABASE = 57647
const CURRENT_DATE = 57648
const CURRENT_TIME = 57649
const LOCALTIME = 57650
const LOCALTIMESTAMP = 57651
const CURRENT_USER = 57652
const UTC_DATE = 57653
const UTC_TIME = 57654
const UTC_TIMESTAMP = 57655
const REPLACE = 57656
const CONVERT = 57657
const CAST = 57658
const SUBSTR = 57659
const SUBSTRING = 57660
const GROUP_CONCAT = 57661
const SEPARATOR = 57662
const TIMESTAMPADD = 57663
const TIMESTAMPDIFF = 57664
const MATCH = 57665
const AGAINST = 57666
const BOOLEAN = 57667
const LANGUAGE = 57668
const WITH = 57669
const QUERY = 57670
const EXPANSION = 57671
const WITHOUT = 57672
const VALIDATION = 57673
const UNUSED = 57674
const ARRAY = 57675
const CUME_DIST = 57676
const DESCRIPTION = 57677
const DENSE_RANK = 57678
const EMPTY = 57679
const EXCEPT = 57680
const FIRST_VALUE = 57681
const GROUPING = 57682
const GROUPS = 57683
const JSON_TABLE = 57684
const LAG = 57685
const LAST_VALUE = 57686
const LATERAL = 57687
const LEAD = 57688
const MEMBER = 57689
const NTH_VALUE = 57690
const NTILE = 57691
const OF = 57692
const OVER = 57693
const PERCENT_RANK = 57694
const RANK = 57695
const RECURSIVE = 57696
const ROW_NUMBER = 57697
const SYSTEM = 57698
const WINDOW = 57699
const ACTIVE = 57700
const ADMIN = 57701
const BUCKETS = 57702
const CLONE = 57703
const COMPONENT = 57704
const DEFINITION = 57705
const ENFORCED = 57706
const EXCLUDE = 57707
const FOLLOWING = 57708
const GEOMCOLLECTION = 57709
const GET_MASTER_PUBLIC_KEY = 57710
const HISTOGRAM = 57711
const HISTORY = 57712
const INACTIVE = 57713
const INVISIBLE = 57714
const LOCKED = 57715
const MASTER_COMPRESSION_ALGORITHMS = 57716
const MASTER_PUBLIC_KEY_PATH = 57717
const MASTER_TLS_CIPHERSUITES = 57718
const MASTER_ZSTD_COMPRESSION_LEVEL = 57719
const NESTED = 57720
const NETWORK_NAMESPACE = 57721
const NOWAIT = 57722
const NULLS = 57723
const OJ = 57724
const OLD = 57725
const OPTIONAL = 57726
const ORDINALITY = 57727
const ORGANIZATION = 57728
const OTHERS = 57729
const PATH = 57730
const PERSIST = 57731
const PERSIST_ONLY = 57732
const PRECEDING = 57733
const PRIVILEGE_CHECKS_USER = 57734
const PROCESS = 57735
const RANDOM = 57736
const REFERENCE = 57737
const REQUIRE_ROW_FORMAT = 57738
const RESOURCE = 57739
const RESPECT = 57740
const RESTART = 57741
const RETAIN = 57742
const REUSE = 57743
const ROLE = 57744
const SECONDARY = 57745
const SECONDARY_ENGINE = 57746
const SECONDARY_LOAD = 57747
const SECONDARY_UNLOAD = 57748
const SKIP = 57749
const SRID = 57750
const THREAD_PRIORITY = 57751
const TIES = 57752
const UNBOUNDED = 57753
const VCPU = 57754
const VISIBLE = 57755
const FORMAT = 57756
const TREE = 57757
const VITESS = 57758
const TRADITIONAL = 57759
const LOCAL = 57760
const LOW_PRIORITY = 57761
const NO_WRITE_TO_BINLOG = 57762
const LOGS = 57763
const ERROR = 57764
const GENERAL = 57765
const HOSTS = 57766
const OPTIMIZER_COSTS = 57767
const USER_RESOURCES = 57768
const SLOW = 57769
const CHANNEL = 57770
const RELAY = 57771
const EXPORT = 57772
const AVG_ROW_LENGTH = 57773
const CONNECTION = 57774
const CHECKSUM = 57775
const DELAY_KEY_WRITE = 57776
const ENCRYPTION = 57777
const ENGINE = 57778
const INSERT_METHOD = 57779
const MAX_ROWS = 57780
const MIN_ROWS = 57781
const PACK_KEYS = 57782
const PASSWORD = 57783
const FIXED = 57784
const DYNAMIC = 57785
const COMPRESSED = 57786
const REDUNDANT = 57787
const COMPACT = 57788
const ROW_FORMAT = 57789
const STATS_AUTO_RECALC = 57790
const STATS_PERSISTENT = 57791
const STATS_SAMPLE_PAGES = 57792
const STORAGE = 57793
const MEMORY = 57794
const DISK = 57795

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_MIGRATIONS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"OPEN",
	"TRIGGERS",
	"EVENT",
	"USER",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 44,
	164, 929,
	-2, 91,
	-1, 45,
	1, 112,
	471, 112,
	-2, 118,
	-1, 46,
	143, 118,
	256, 118,
	309, 118,
	-2, 326,
	-1, 53,
	34, 468,
	165, 468,
	177, 468,
	210, 482,
	211, 482,
	-2, 470,
	-1, 58,
	167, 492,
	-2, 490,
	-1, 84,
	56, 560,
	-2, 568,
	-1, 109,
	1, 113,
	471, 113,
	-2, 118,
	-1, 119,
	170, 231,
	171, 231,
	-2, 320,
	-1, 138,
	143, 118,
	256, 118,
	309, 118,
	-2, 335,
	-1, 575,
	150, 950,
	-2, 946,
	-1, 576,
	150, 951,
	-2, 947,
	-1, 595,
	56, 561,
	-2, 573,
	-1, 596,
	56, 562,
	-2, 574,
	-1, 617,
	118, 1289,
	-2, 84,
	-1, 618,
	118, 1172,
	-2, 85,
	-1, 624,
	118, 1222,
	-2, 923,
	-1, 761,
	118, 1110,
	-2, 920,
	-1, 795,
	176, 38,
	181, 38,
	-2, 242,
	-1, 874,
	1, 373,
	471, 373,
	-2, 118,
	-1, 1112,
	1, 269,
	471, 269,
	-2, 118,
	-1, 1190,
	170, 231,
	171, 231,
	-2, 320,
	-1, 1199,
	176, 39,
	181, 39,
	-2, 243,
	-1, 1408,
	150, 953,
	-2, 949,
	-1, 1500,
	74, 66,
	82, 66,
	-2, 70,
	-1, 1521,
	1, 270,
	471, 270,
	-2, 118,
	-1, 1933,
	5, 816,
	18, 816,
	20, 816,
	32, 816,
	83, 816,
	-2, 600,
	-1, 2145,
	46, 891,
	-2, 885,
}

const yyPrivate = 57344

const yyLast = 28056

var yyAct = [...]int{
	575, 2230, 2219, 1985, 2174, 1815, 1846, 2196, 2158, 2146,
	1734, 2096, 1701, 548, 2074, 1585, 1913, 83, 3, 1518,
	1445, 1914, 1735, 1982, 534, 1014, 1910, 1721, 517, 1551,
	1819, 1536, 886, 1556, 1799, 1925, 1800, 1497, 519, 1060,
	1175, 1872, 1661, 1402, 825, 933, 1798, 588, 1635, 178,
	147, 1583, 190, 765, 482, 190, 1197, 1308, 133, 1792,
	498, 1558, 190, 1394, 1067, 790, 1097, 1104, 1479, 622,
	190, 1486, 1065, 1447, 597, 1070, 521, 1090, 1052, 913,
	582, 1371, 1094, 772, 1087, 1428, 950, 796, 33, 769,
	1215, 510, 498, 1174, 1287, 498, 190, 498, 81, 1462,
	777, 773, 1204, 791, 792, 1103, 1547, 1405, 1502, 1101,
	931, 793, 1077, 1313, 110, 1088, 880, 79, 150, 111,
	1189, 867, 505, 1027, 8, 803, 7, 1537, 6, 78,
	1028, 1838, 1837, 1614, 177, 1274, 1860, 619, 2098, 1861,
	116, 1360, 117, 179, 180, 181, 1442, 1443, 1359, 1358,
	1357, 1172, 1356, 1355, 508, 1699, 509, 1348, 2188, 2142,
	766, 2053, 604, 608, 112, 1959, 2120, 118, 583, 2119,
	829, 2069, 828, 190, 2070, 2236, 2193, 80, 2229, 2169,
	827, 457, 1651, 190, 2222, 879, 506, 1986, 190, 830,
	1602, 2192, 1889, 841, 842, 2017, 845, 846, 847, 848,
	782, 616, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 865, 84, 560, 623,
	566, 567, 564, 565, 784, 563, 562, 561, 112, 783,
	1621, 951, 806, 2168, 1620, 568, 569, 1940, 1941, 1176,
	785, 1169, 1700, 176, 1503, 35, 807, 1939, 72, 39,
	40, 831, 832, 833, 86, 87, 88, 89, 90, 91,
	1561, 107, 1859, 184, 185, 1513, 1514, 920, 1444, 922,
	1765, 1649, 838, 1764, 1512, 104, 1766, 171, 843, 1105,
	844, 1106, 486, 179, 180, 181, 929, 951, 906, 891,
	786, 899, 905, 892, 893, 894, 112, 961, 893, 894,
	171, 579, 113, 578, 135, 1782, 919, 921, 1530, 2008,
	2171, 1848, 2006, 155, 496, 1347, 500, 1264, 105, 494,
	71, 781, 1349, 1350, 1351, 113, 581, 1431, 1584, 107,
	172, 107, 1820, 99, 1617, 485, 155, 1842, 102, 2221,
	1560, 101, 100, 1293, 145, 1843, 1296, 1288, 1297, 134,
	1298, 926, 868, 961, 910, 911, 2116, 1851, 912, 1265,
	875, 1266, 908, 909, 1629, 850, 928, 152, 849, 153,
	2064, 1292, 1850, 949, 122, 123, 144, 143, 170, 907,
	2189, 1290, 900, 814, 1849, 812, 1586, 1480, 105, 957,
	152, 823, 153, 486, 822, 821, 820, 1294, 1183, 819,
	818, 170, 817, 486, 882, 816, 918, 811, 787, 917,
	923, 591, 1291, 824, 2065, 1503, 1634, 805, 770, 2237,
	106, 109, 2208, 799, 770, 916, 139, 120, 146, 127,
	119, 770, 140, 141, 881, 768, 1958, 156, 1873, 1203,
	1202, 610, 798, 1173, 1808, 957, 485, 161, 128, 903,
	514, 1852, 2234, 1608, 175, 486, 485, 190, 1702, 1704,
	156, 805, 131, 129, 124, 125, 126, 130, 1301, 937,
	161, 834, 121, 1619, 1616, 924, 815, 1898, 813, 1897,
	840, 132, 1875, 498, 498, 498, 805, 1896, 106, 805,
	106, 889, 780, 895, 896, 897, 898, 925, 2153, 2037,
	779, 498, 498, 778, 1830, 2167, 1650, 878, 485, 1562,
	805, 776, 1637, 1637, 930, 456, 2159, 1636, 1636, 182,
	943, 2172, 805, 1938, 1680, 956, 953, 954, 955, 960,
	962, 959, 1628, 958, 1726, 1627, 1677, 1604, 1519, 1669,
	952, 1877, 1594, 1881, 1508, 1876, 1081, 1874, 999, 1000,
	148, 1012, 1879, 804, 884, 1703, 987, 1761, 927, 808,
	798, 1878, 1458, 914, 1276, 1275, 1277, 1278, 1279, 809,
	73, 1343, 94, 148, 1880, 1882, 1779, 1774, 1314, 190,
	902, 956, 953, 954, 955, 960, 962, 959, 977, 958,
	967, 987, 904, 997, 934, 935, 952, 804, 890, 874,
	2232, 2124, 1058, 2233, 142, 2231, 826, 498, 1923, 1891,
	190, 1429, 190, 190, 964, 498, 136, 95, 888, 137,
	1775, 498, 804, 872, 839, 804, 1289, 946, 1107, 944,
	967, 945, 798, 801, 802, 947, 770, 873, 1015, 1568,
	795, 799, 1777, 1601, 1599, 1772, 804, 1057, 1429, 1086,
	1687, 814, 808, 798, 966, 964, 1053, 1773, 804, 794,
	619, 1603, 809, 999, 1000, 798, 801, 802, 1378, 770,
	812, 967, 1071, 795, 799, 999, 1000, 1596, 1943, 915,
	810, 1074, 1376, 1377, 1375, 1030, 1032, 1034, 1036, 1038,
	1040, 1041, 1031, 1033, 1315, 1037, 1039, 2052, 1042, 1283,
	1050, 1600, 1069, 869, 2223, 870, 2213, 2051, 871, 978,
	979, 980, 981, 982, 983, 984, 977, 1780, 1778, 987,
	149, 154, 151, 157, 158, 159, 160, 162, 163, 164,
	165, 887, 2224, 1596, 2214, 174, 166, 167, 168, 169,
	1102, 2238, 623, 149, 154, 151, 157, 158, 159, 160,
	162, 163, 164, 165, 1366, 1368, 1369, 1598, 1282, 166,
	167, 168, 169, 1964, 71, 190, 1367, 1463, 1464, 1165,
	980, 981, 982, 983, 984, 977, 1374, 1796, 987, 1177,
	1178, 1179, 975, 985, 986, 978, 979, 980, 981, 982,
	983, 984, 977, 609, 498, 987, 1199, 179, 180, 181,
	1281, 1396, 1675, 1059, 1208, 1654, 1655, 1656, 1212, 2239,
	1674, 498, 498, 1271, 498, 1795, 498, 498, 1900, 498,
	498, 498, 498, 498, 498, 1776, 1565, 1284, 1269, 1268,
	1181, 1182, 614, 775, 498, 965, 966, 964, 190, 1248,
	179, 180, 181, 2217, 1787, 1209, 1267, 1195, 1188, 965,
	966, 964, 1259, 967, 1261, 1253, 2216, 1397, 1250, 1280,
	1207, 965, 966, 964, 1249, 498, 1901, 967, 1224, 1893,
	1243, 1244, 1270, 190, 965, 966, 964, 1460, 2215, 967,
	2204, 190, 2202, 611, 612, 190, 2087, 1245, 1251, 1252,
	2049, 2025, 967, 1946, 1257, 1258, 1902, 1171, 1805, 1793,
	1788, 190, 1217, 1164, 1218, 1206, 1220, 1222, 190, 1185,
	1226, 1228, 1230, 1232, 1234, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 498, 498, 498, 1205, 1205, 1186,
	1198, 1184, 1318, 1180, 179, 180, 181, 1645, 1768, 1322,
	1459, 1324, 1325, 1326, 1327, 1612, 1329, 179, 180, 181,
	190, 1578, 1611, 1311, 1310, 179, 180, 181, 1272, 1576,
	1344, 1260, 1246, 1256, 1676, 965, 966, 964, 1255, 1254,
	592, 1316, 1317, 1001, 1002, 1003, 1004, 1005, 1006, 1007,
	1008, 1009, 1010, 967, 1372, 1321, 1056, 1845, 1395, 784,
	1971, 2207, 1328, 112, 783, 1302, 80, 1398, 592, 1307,
	985, 986, 978, 979, 980, 981, 982, 983, 984, 977,
	2114, 498, 987, 2113, 1797, 1320, 976, 975, 985, 986,
	978, 979, 980, 981, 982, 983, 984, 977, 1399, 1400,
	987, 1984, 1354, 82, 1339, 1340, 1341, 1911, 965, 966,
	964, 179, 180, 181, 498, 498, 1922, 1373, 965, 966,
	964, 1971, 2165, 1971, 2154, 190, 967, 1722, 1406, 1417,
	1420, 1971, 592, 1971, 2122, 1430, 967, 2067, 592, 498,
	1407, 179, 180, 181, 592, 1262, 190, 1596, 592, 498,
	1412, 1452, 1408, 190, 1822, 190, 1722, 1015, 2035, 592,
	1436, 1437, 576, 190, 190, 1971, 1976, 1956, 1955, 1471,
	498, 1952, 1953, 498, 1807, 1453, 1952, 1951, 1471, 592,
	1498, 1503, 1839, 1597, 498, 1465, 1168, 1824, 1817, 1818,
	1483, 592, 963, 592, 1413, 1414, 1483, 1406, 1419, 1422,
	1423, 1409, 537, 536, 539, 540, 541, 542, 35, 1477,
	1504, 538, 1527, 543, 191, 619, 1473, 191, 619, 35,
	1504, 1408, 499, 1435, 191, 1922, 1438, 1439, 1755, 1538,
	1539, 1540, 191, 1522, 1168, 1167, 1503, 1523, 1596, 498,
	1113, 1112, 1482, 190, 1729, 1922, 1501, 498, 2032, 1526,
	1472, 1574, 1575, 1577, 499, 35, 2103, 499, 191, 499,
	963, 1475, 2123, 1553, 1971, 498, 1954, 1730, 1483, 1511,
	1692, 498, 1505, 1691, 1506, 1208, 1510, 1208, 1559, 1509,
	1507, 1471, 1505, 71, 585, 1595, 1596, 1525, 1524, 1579,
	1503, 1461, 1440, 1483, 71, 1802, 1352, 623, 2054, 1300,
	623, 2132, 976, 975, 985, 986, 978, 979, 980, 981,
	982, 983, 984, 977, 1099, 498, 987, 1395, 1582, 789,
	1471, 788, 1395, 1395, 1554, 2157, 71, 2076, 1983, 2043,
	71, 1592, 1170, 1593, 1552, 191, 1566, 1549, 1550, 1564,
	1563, 1571, 1572, 1573, 1239, 191, 2055, 2056, 2057, 1847,
	191, 1844, 1589, 1548, 1588, 1542, 1587, 190, 1554, 71,
	1541, 190, 190, 190, 190, 190, 1286, 1606, 1605, 1200,
	1196, 190, 190, 190, 190, 806, 1591, 1166, 1638, 96,
	1607, 2058, 176, 2077, 190, 1609, 1610, 1176, 1801, 807,
	2226, 190, 1240, 1241, 1242, 1236, 1926, 1927, 2220, 1205,
	1929, 1911, 1813, 1488, 1491, 1492, 1493, 1489, 1812, 1490,
	1494, 1410, 1411, 1926, 1927, 1811, 190, 498, 1569, 1640,
	1641, 1345, 2014, 1303, 1643, 1746, 2059, 2060, 2020, 1932,
	1747, 1644, 1531, 1802, 1532, 1533, 1534, 1535, 1744, 1615,
	1237, 1238, 1748, 1745, 1492, 1493, 1931, 1743, 606, 1742,
	1543, 1544, 1545, 1546, 2210, 1632, 1454, 2191, 1903, 1372,
	976, 975, 985, 986, 978, 979, 980, 981, 982, 983,
	984, 977, 1711, 1068, 987, 976, 975, 985, 986, 978,
	979, 980, 981, 982, 983, 984, 977, 2036, 1974, 987,
	1370, 1720, 1719, 1379, 1380, 1381, 1382, 1383, 1384, 1385,
	1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 2176, 1648,
	2212, 190, 2147, 2149, 511, 2195, 2175, 2133, 98, 190,
	1662, 2150, 1373, 2197, 2179, 2144, 1299, 1657, 577, 1806,
	1671, 976, 975, 985, 986, 978, 979, 980, 981, 982,
	983, 984, 977, 190, 1709, 987, 836, 1425, 835, 1995,
	1432, 1801, 1710, 1061, 190, 190, 190, 190, 190, 1858,
	1670, 103, 1426, 1708, 1832, 1062, 190, 1731, 583, 183,
	190, 936, 1831, 190, 190, 1715, 1727, 190, 190, 190,
	1724, 1666, 1667, 1686, 113, 2101, 1948, 1753, 1053, 1698,
	1767, 1736, 1706, 1488, 1491, 1492, 1493, 1489, 1947, 1490,
	1494, 1590, 1684, 1214, 1714, 1213, 1201, 2030, 1786, 173,
	1756, 1456, 186, 1809, 1758, 602, 598, 1723, 1725, 191,
	1463, 1464, 1306, 2115, 2071, 1496, 1785, 1653, 1789, 1790,
	1791, 599, 586, 587, 1783, 1784, 1749, 589, 1737, 1754,
	190, 1740, 1770, 2203, 1759, 499, 499, 499, 1310, 1762,
	2201, 498, 2200, 1718, 1072, 1073, 601, 498, 600, 1771,
	498, 1717, 1208, 499, 499, 1825, 2180, 498, 1559, 2178,
	1738, 1739, 1794, 1741, 2029, 1804, 602, 598, 1970, 1836,
	1580, 590, 82, 2028, 1906, 1722, 1681, 190, 1678, 1803,
	2228, 2227, 599, 1821, 1082, 1075, 2228, 1835, 2151, 1945,
	1457, 585, 80, 85, 77, 190, 2019, 1834, 1188, 1,
	1827, 469, 1441, 1051, 481, 595, 596, 601, 1826, 600,
	2218, 1273, 1407, 1263, 1987, 2073, 1977, 1833, 1557, 797,
	138, 1520, 1521, 2161, 1408, 93, 763, 92, 800, 901,
	498, 191, 1581, 2068, 1781, 1529, 1395, 1119, 1117, 1118,
	1854, 1853, 1116, 976, 975, 985, 986, 978, 979, 980,
	981, 982, 983, 984, 977, 1121, 1120, 987, 1115, 499,
	1346, 1862, 191, 495, 191, 191, 498, 499, 1495, 1108,
	1076, 1871, 1868, 499, 837, 1869, 459, 190, 1884, 1856,
	1957, 1342, 1857, 1613, 465, 995, 1664, 498, 1716, 1763,
	1665, 620, 613, 498, 498, 1870, 1917, 2173, 2143, 1883,
	1912, 1672, 1673, 2145, 1915, 2097, 2148, 1679, 2141, 1890,
	1682, 1683, 2211, 2194, 1528, 1455, 190, 1064, 1689, 2027,
	1690, 1905, 1921, 1693, 1694, 1695, 1696, 1697, 1736, 1685,
	1024, 1427, 1869, 1091, 520, 1909, 1930, 1451, 1365, 1707,
	535, 532, 1934, 533, 1936, 1466, 1937, 1728, 969, 518,
	512, 1083, 1487, 1935, 1485, 1484, 1899, 1304, 1095, 1928,
	1924, 1089, 1470, 1949, 1950, 1618, 1841, 1965, 948, 190,
	594, 507, 190, 190, 190, 97, 1424, 2131, 498, 1652,
	1942, 2016, 593, 61, 1920, 1751, 1752, 1658, 1659, 1660,
	38, 190, 502, 2187, 939, 1961, 1960, 603, 32, 31,
	30, 29, 28, 23, 22, 1978, 1962, 1963, 1988, 498,
	498, 498, 21, 190, 1863, 20, 19, 191, 1975, 1973,
	25, 1980, 1996, 18, 1981, 1559, 17, 16, 108, 48,
	45, 1972, 43, 115, 976, 975, 985, 986, 978, 979,
	980, 981, 982, 983, 984, 977, 499, 114, 987, 1993,
	1994, 46, 968, 42, 876, 27, 26, 15, 14, 13,
	12, 11, 10, 499, 499, 9, 499, 2004, 499, 499,
	5, 499, 499, 499, 499, 499, 499, 4, 1999, 942,
	24, 1013, 2, 0, 0, 0, 499, 0, 511, 0,
	191, 0, 0, 2026, 0, 0, 0, 1025, 0, 2031,
	0, 0, 0, 0, 0, 2040, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 1736, 0, 2046, 0, 191, 0, 0, 1063, 1066,
	2047, 498, 498, 191, 0, 0, 2062, 191, 0, 0,
	0, 0, 0, 2048, 498, 2050, 2039, 498, 0, 2072,
	2061, 0, 0, 191, 1866, 1867, 0, 0, 0, 2045,
	191, 0, 0, 2080, 0, 0, 0, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 499, 499, 499, 0,
	0, 0, 498, 498, 498, 190, 0, 2090, 2092, 2093,
	0, 0, 2075, 0, 2079, 0, 498, 0, 498, 2078,
	0, 0, 191, 0, 498, 2094, 1915, 0, 0, 2109,
	1915, 0, 2104, 2106, 2102, 2100, 0, 2095, 0, 0,
	1918, 0, 0, 0, 2086, 0, 190, 0, 2111, 0,
	2112, 0, 0, 0, 0, 0, 0, 498, 190, 0,
	0, 1933, 2125, 2118, 0, 0, 0, 2108, 0, 2121,
	0, 0, 0, 2110, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 499, 0, 0, 0, 2140, 0, 0,
	0, 0, 0, 1864, 1865, 2001, 2002, 1915, 2003, 0,
	2152, 2005, 0, 2007, 498, 498, 0, 547, 1885, 1886,
	0, 1887, 1888, 2155, 0, 0, 499, 499, 2160, 0,
	2013, 0, 1894, 1895, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 2170, 498, 2177, 0, 0, 498, 0,
	0, 499, 2181, 2186, 2183, 0, 0, 0, 191, 2075,
	2162, 499, 2190, 0, 0, 191, 0, 191, 2199, 189,
	2198, 0, 493, 0, 0, 191, 191, 0, 0, 189,
	1736, 0, 499, 0, 2209, 499, 1998, 189, 0, 0,
	2000, 0, 0, 0, 0, 0, 499, 171, 2012, 0,
	0, 2009, 2010, 0, 607, 607, 0, 0, 0, 0,
	0, 2225, 0, 189, 0, 1944, 0, 2024, 0, 0,
	2235, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	0, 2011, 0, 155, 2033, 2034, 0, 0, 2038, 976,
	975, 985, 986, 978, 979, 980, 981, 982, 983, 984,
	977, 499, 0, 987, 0, 191, 0, 1312, 0, 499,
	0, 976, 975, 985, 986, 978, 979, 980, 981, 982,
	983, 984, 977, 0, 1769, 987, 0, 499, 0, 0,
	0, 0, 0, 499, 0, 0, 0, 152, 0, 153,
	189, 0, 0, 0, 0, 2066, 0, 0, 170, 0,
	189, 0, 0, 0, 1997, 189, 0, 976, 975, 985,
	986, 978, 979, 980, 981, 982, 983, 984, 977, 0,
	0, 987, 0, 0, 0, 0, 0, 499, 0, 0,
	0, 0, 1361, 1362, 1363, 1364, 0, 0, 0, 2091,
	976, 975, 985, 986, 978, 979, 980, 981, 982, 983,
	984, 977, 0, 0, 987, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 0, 191,
	0, 0, 0, 191, 191, 191, 191, 191, 0, 0,
	0, 0, 0, 191, 191, 191, 191, 1415, 1416, 0,
	0, 0, 1663, 0, 0, 0, 191, 0, 0, 2127,
	2128, 2129, 2130, 191, 2134, 0, 2135, 2136, 2137, 0,
	2138, 2139, 976, 975, 985, 986, 978, 979, 980, 981,
	982, 983, 984, 977, 511, 0, 987, 0, 191, 499,
	0, 0, 0, 0, 0, 0, 0, 546, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2166,
	0, 0, 2081, 2082, 2083, 2084, 2085, 0, 0, 0,
	2088, 2089, 0, 0, 0, 0, 0, 0, 0, 0,
	148, 0, 0, 0, 0, 0, 1517, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, 2205, 2206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 171, 0, 621,
	0, 191, 767, 0, 774, 1555, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 113, 0, 135, 191, 0, 0, 0, 0,
	0, 0, 0, 155, 0, 0, 191, 191, 191, 191,
	191, 0, 0, 0, 189, 0, 0, 0, 191, 0,
	0, 0, 191, 0, 0, 191, 191, 0, 0, 191,
	191, 191, 0, 0, 145, 0, 0, 2184, 0, 134,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 152, 0, 153,
	0, 0, 0, 0, 1191, 1192, 144, 143, 170, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 154, 151, 157, 158, 159, 160, 162, 163, 164,
	165, 0, 191, 0, 0, 0, 166, 167, 168, 169,
	0, 0, 0, 499, 0, 0, 0, 0, 0, 499,
	0, 0, 499, 0, 0, 0, 139, 1193, 146, 499,
	1190, 0, 140, 141, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 161, 0, 191,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 607, 0, 0, 0, 0, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 189,
	1098, 0, 0, 0, 0, 0, 0, 971, 0, 974,
	0, 0, 0, 0, 0, 988, 989, 990, 991, 992,
	993, 994, 499, 972, 973, 970, 976, 975, 985, 986,
	978, 979, 980, 981, 982, 983, 984, 977, 0, 0,
	987, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1688, 191,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	0, 0, 0, 0, 0, 499, 499, 0, 0, 0,
	0, 549, 34, 0, 0, 0, 0, 0, 1712, 1713,
	1066, 0, 0, 0, 0, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 34, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 137,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 0, 0, 191, 191, 191, 0, 0, 0,
	499, 584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 0, 0, 0, 0, 0, 0,
	621, 621, 621, 0, 1211, 0, 0, 0, 0, 0,
	0, 499, 499, 499, 0, 191, 0, 0, 938, 940,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1211,
	1211, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 154, 151, 157, 158, 159, 160, 162, 163, 164,
	165, 0, 0, 0, 0, 0, 166, 167, 168, 169,
	189, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 1330, 1331, 189, 189, 189, 189, 189, 189,
	189, 0, 0, 0, 1079, 0, 0, 0, 0, 0,
	0, 0, 621, 499, 499, 0, 1892, 0, 1109, 0,
	0, 0, 0, 0, 0, 0, 499, 189, 0, 499,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1907, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 499, 499, 499, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 499, 0,
	499, 0, 0, 0, 0, 0, 499, 0, 0, 607,
	1309, 0, 0, 0, 607, 607, 0, 0, 607, 607,
	607, 0, 0, 0, 1211, 0, 0, 0, 191, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 499,
	191, 0, 0, 607, 607, 607, 607, 607, 0, 0,
	0, 0, 1449, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 1309,
	189, 0, 189, 0, 0, 0, 499, 499, 0, 0,
	189, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 0, 0, 499, 0, 0, 0,
	499, 0, 0, 0, 1210, 0, 0, 0, 1216, 1216,
	0, 1216, 0, 1216, 1216, 0, 1225, 1216, 1216, 1216,
	1216, 1216, 2018, 0, 0, 0, 0, 0, 0, 1210,
	1210, 767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 511, 0, 0, 0, 0,
	189, 0, 2041, 0, 0, 2042, 0, 0, 2044, 0,
	0, 0, 1285, 0, 932, 932, 932, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 34, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 996, 998, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	0, 621, 621, 621, 0, 0, 0, 0, 1011, 0,
	0, 0, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
	0, 1026, 1029, 1029, 1029, 1035, 1029, 1029, 1035, 1029,
	1043, 1044, 1045, 1046, 1047, 1048, 1049, 2099, 511, 0,
	0, 0, 1055, 0, 189, 188, 34, 0, 189, 189,
	189, 189, 189, 0, 0, 501, 0, 0, 189, 189,
	189, 189, 0, 580, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 1092, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1401, 771,
	621, 0, 0, 0, 0, 0, 0, 0, 179, 180,
	181, 0, 0, 189, 1210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1433, 1434, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1467, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1079, 0, 474, 621,
	0, 607, 607, 0, 0, 0, 866, 473, 0, 0,
	0, 0, 0, 0, 0, 0, 877, 621, 471, 0,
	621, 883, 607, 171, 0, 0, 0, 0, 0, 0,
	0, 767, 0, 0, 1187, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 0, 1449, 0, 113, 0,
	135, 0, 0, 0, 0, 0, 0, 468, 0, 155,
	0, 0, 0, 0, 0, 0, 480, 0, 0, 607,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1211, 189, 189, 189, 189, 189, 774, 0, 0, 0,
	145, 0, 0, 1750, 1570, 134, 0, 189, 0, 0,
	189, 189, 0, 0, 189, 1760, 1309, 0, 0, 0,
	486, 0, 767, 152, 0, 153, 0, 0, 774, 0,
	1191, 1192, 144, 143, 170, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 460, 461,
	0, 477, 479, 487, 0, 0, 0, 475, 476, 488,
	462, 463, 492, 491, 478, 0, 467, 464, 466, 472,
	0, 0, 767, 485, 470, 489, 0, 189, 0, 0,
	0, 0, 139, 1193, 146, 0, 1190, 0, 140, 141,
	0, 0, 1211, 156, 0, 0, 0, 0, 0, 0,
	0, 0, 1309, 161, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 932, 932, 932, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1647, 0, 607, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 490,
	885, 0, 0, 0, 0, 0, 148, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	1136, 0, 484, 0, 0, 0, 0, 1211, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 0, 136, 0, 0, 137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1499, 0, 0, 0, 0, 0,
	1210, 0, 0, 0, 0, 0, 189, 0, 0, 189,
	189, 189, 0, 0, 0, 0, 0, 0, 1211, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 1124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1085, 0, 0, 1096, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 154, 151, 157,
	158, 159, 160, 162, 163, 164, 165, 1137, 0, 0,
	0, 0, 166, 167, 168, 169, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1816, 0,
	0, 0, 1210, 0, 1823, 0, 0, 1816, 0, 0,
	0, 0, 621, 0, 1828, 0, 0, 0, 0, 0,
	1211, 0, 0, 0, 0, 1150, 1153, 1154, 1155, 1156,
	1157, 1158, 0, 1159, 1160, 1161, 1162, 1163, 1138, 1139,
	1140, 1141, 1122, 1123, 1151, 0, 1125, 0, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1142, 1143,
	1144, 1145, 1146, 1147, 1148, 1149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 621, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1449, 1216, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 621, 0, 0, 1210, 0, 0,
	1919, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	0, 1247, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 35, 36, 37,
	72, 39, 40, 0, 0, 0, 1295, 0, 1668, 0,
	0, 584, 0, 0, 1305, 0, 0, 76, 0, 0,
	0, 0, 41, 67, 68, 0, 65, 69, 0, 0,
	0, 0, 0, 66, 1319, 767, 0, 0, 1210, 0,
	0, 1323, 0, 0, 0, 0, 0, 0, 1705, 1211,
	1332, 1333, 1334, 1335, 1336, 1337, 1338, 0, 0, 0,
	0, 0, 54, 0, 0, 0, 1989, 1990, 1991, 0,
	0, 0, 71, 0, 1092, 0, 0, 0, 0, 0,
	0, 1732, 1733, 1096, 0, 1092, 1092, 1092, 1092, 1092,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1499, 0, 0, 1092, 0, 0, 0, 1092, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1210, 0, 0, 0, 44, 47, 50, 49, 52, 0,
	64, 0, 0, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 53, 75, 74, 0,
	0, 62, 63, 51, 0, 0, 0, 0, 1816, 2063,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 1816, 0, 0, 621, 0, 0, 0, 0, 1474,
	0, 0, 0, 0, 0, 0, 1478, 0, 1481, 55,
	56, 0, 57, 58, 59, 60, 0, 1500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1816,
	1816, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2105, 0, 2107, 0, 0, 0, 0,
	0, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1816, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1567, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1916, 0, 34, 0, 0, 0, 0, 0,
	0, 621, 621, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1092, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1210,
	0, 2182, 0, 0, 0, 1816, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 0, 0, 0, 1622, 1623, 1624, 1625, 1626, 0,
	0, 0, 0, 0, 1630, 1631, 1096, 1633, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1639, 0, 0,
	0, 0, 0, 0, 1642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1646,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2015, 0, 0, 0, 0, 0, 0, 2021, 2022,
	2023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1916, 0, 34, 1757, 1916, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 34, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1810, 0, 1916, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 34, 2156, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1904, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1966, 0, 0, 1967, 1968, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1979, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1992, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 745, 732, 0, 0, 681, 748,
	652, 670, 757, 672, 675, 715, 632, 694, 333, 667,
	0, 656, 628, 663, 629, 654, 683, 243, 687, 651,
	734, 697, 747, 291, 0, 634, 657, 347, 717, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 754, 295, 704, 0, 393, 318, 0,
	0, 0, 685, 737, 692, 728, 680, 716, 641, 703,
	749, 668, 712, 750, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 2163, 2164, 0,
	0, 0, 0, 0, 219, 0, 225, 709, 744, 665,
	711, 239, 279, 245, 238, 409, 714, 760, 627, 706,
	0, 630, 633, 756, 740, 660, 661, 0, 0, 0,
	0, 0, 0, 0, 684, 693, 725, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 702, 0,
	0, 0, 637, 631, 0, 0, 0, 0, 682, 2117,
	0, 0, 640, 0, 659, 726, 0, 625, 265, 635,
	319, 2126, 730, 739, 679, 440, 743, 677, 676, 746,
	721, 638, 736, 671, 290, 636, 287, 193, 207, 0,
	669, 329, 368, 374, 735, 655, 664, 230, 662, 372,
	343, 426, 215, 255, 365, 348, 370, 701, 719, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 650, 731, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 723, 759, 342, 373, 221, 428, 392,
	645, 649, 643, 644, 695, 696, 646, 751, 752, 753,
	727, 639, 0, 647, 648, 0, 733, 741, 742, 700,
	192, 205, 293, 755, 362, 258, 453, 435, 431, 626,
	642, 236, 653, 0, 0, 666, 673, 674, 686, 688,
	689, 690, 691, 699, 707, 708, 710, 718, 720, 722,
	724, 729, 738, 758, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 698, 705, 303, 252, 269,
	278, 713, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	745, 732, 0, 0, 681, 748, 652, 670, 757, 672,
	675, 715, 632, 694, 333, 667, 0, 656, 628, 663,
	629, 654, 683, 243, 687, 651, 734, 697, 747, 291,
	0, 634, 657, 347, 717, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 754,
	295, 704, 0, 393, 318, 0, 0, 0, 685, 737,
	692, 728, 680, 716, 641, 703, 749, 668, 712, 750,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 709, 744, 665, 711, 239, 279, 245,
	238, 409, 714, 760, 627, 706, 0, 630, 633, 756,
	740, 660, 661, 0, 0, 0, 0, 0, 0, 0,
	684, 693, 725, 678, 0, 0, 0, 0, 0, 0,
	1908, 0, 658, 0, 702, 0, 0, 0, 637, 631,
	0, 0, 0, 0, 682, 0, 0, 0, 640, 0,
	659, 726, 0, 625, 265, 635, 319, 0, 730, 739,
	679, 440, 743, 677, 676, 746, 721, 638, 736, 671,
	290, 636, 287, 193, 207, 0, 669, 329, 368, 374,
	735, 655, 664, 230, 662, 372, 343, 426, 215, 255,
	365, 348, 370, 701, 719, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 650,
	731, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 723,
	759, 342, 373, 221, 428, 392, 645, 649, 643, 644,
	695, 696, 646, 751, 752, 753, 727, 639, 0, 647,
	648, 0, 733, 741, 742, 700, 192, 205, 293, 755,
	362, 258, 453, 435, 431, 626, 642, 236, 653, 0,
	0, 666, 673, 674, 686, 688, 689, 690, 691, 699,
	707, 708, 710, 718, 720, 722, 724, 729, 738, 758,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 698, 705, 303, 252, 269, 278, 713, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 745, 732, 0, 0,
	681, 748, 652, 670, 757, 672, 675, 715, 632, 694,
	333, 667, 0, 656, 628, 663, 629, 654, 683, 243,
	687, 651, 734, 697, 747, 291, 0, 634, 657, 347,
	717, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 754, 295, 704, 0, 393,
	318, 0, 0, 0, 685, 737, 692, 728, 680, 716,
	641, 703, 749, 668, 712, 750, 281, 227, 197, 330,
	394, 257, 0, 0, 0, 179, 180, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 225, 709,
	744, 665, 711, 239, 279, 245, 238, 409, 714, 760,
	627, 706, 0, 630, 633, 756, 740, 660, 661, 0,
	0, 0, 0, 0, 0, 0, 684, 693, 725, 678,
	0, 0, 0, 0, 0, 0, 1761, 0, 658, 0,
	702, 0, 0, 0, 637, 631, 0, 0, 0, 0,
	682, 0, 0, 0, 640, 0, 659, 726, 0, 625,
	265, 635, 319, 0, 730, 739, 679, 440, 743, 677,
	676, 746, 721, 638, 736, 671, 290, 636, 287, 193,
	207, 0, 669, 329, 368, 374, 735, 655, 664, 230,
	662, 372, 343, 426, 215, 255, 365, 348, 370, 701,
	719, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 422, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 211, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 650, 731, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 324,
	212, 274, 391, 288, 297, 723, 759, 342, 373, 221,
	428, 392, 645, 649, 643, 644, 695, 696, 646, 751,
	752, 753, 727, 639, 0, 647, 648, 0, 733, 741,
	742, 700, 192, 205, 293, 755, 362, 258, 453, 435,
	431, 626, 642, 236, 653, 0, 0, 666, 673, 674,
	686, 688, 689, 690, 691, 699, 707, 708, 710, 718,
	720, 722, 724, 729, 738, 758, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 267, 423, 444, 0, 301, 698, 705, 303,
	252, 269, 278, 713, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 745, 732, 0, 0, 681, 748, 652, 670,
	757, 672, 675, 715, 632, 694, 333, 667, 0, 656,
	628, 663, 629, 654, 683, 243, 687, 651, 734, 697,
	747, 291, 0, 634, 657, 347, 717, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 754, 295, 704, 0, 393, 318, 0, 0, 0,
	685, 737, 692, 728, 680, 716, 641, 703, 749, 668,
	712, 750, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 709, 744, 665, 711, 239,
	279, 245, 238, 409, 714, 760, 627, 706, 0, 630,
	633, 756, 740, 660, 661, 0, 0, 0, 0, 0,
	0, 0, 684, 693, 725, 678, 0, 0, 0, 0,
	0, 0, 1476, 0, 658, 0, 702, 0, 0, 0,
	637, 631, 0, 0, 0, 0, 682, 0, 0, 0,
	640, 0, 659, 726, 0, 625, 265, 635, 319, 0,
	730, 739, 679, 440, 743, 677, 676, 746, 721, 638,
	736, 671, 290, 636, 287, 193, 207, 0, 669, 329,
	368, 374, 735, 655, 664, 230, 662, 372, 343, 426,
	215, 255, 365, 348, 370, 701, 719, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 650, 731, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 723, 759, 342, 373, 221, 428, 392, 645, 649,
	643, 644, 695, 696, 646, 751, 752, 753, 727, 639,
	0, 647, 648, 0, 733, 741, 742, 700, 192, 205,
	293, 755, 362, 258, 453, 435, 431, 626, 642, 236,
	653, 0, 0, 666, 673, 674, 686, 688, 689, 690,
	691, 699, 707, 708, 710, 718, 720, 722, 724, 729,
	738, 758, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 698, 705, 303, 252, 269, 278, 713,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 745, 732,
	0, 0, 681, 748, 652, 670, 757, 672, 675, 715,
	632, 694, 333, 667, 0, 656, 628, 663, 629, 654,
	683, 243, 687, 651, 734, 697, 747, 291, 0, 634,
	657, 347, 717, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 754, 295, 704,
	0, 393, 318, 0, 0, 0, 685, 737, 692, 728,
	680, 716, 641, 703, 749, 668, 712, 750, 281, 227,
	197, 330, 394, 257, 71, 0, 0, 179, 180, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	225, 709, 744, 665, 711, 239, 279, 245, 238, 409,
	714, 760, 627, 706, 0, 630, 633, 756, 740, 660,
	661, 0, 0, 0, 0, 0, 0, 0, 684, 693,
	725, 678, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 702, 0, 0, 0, 637, 631, 0, 0,
	0, 0, 682, 0, 0, 0, 640, 0, 659, 726,
	0, 625, 265, 635, 319, 0, 730, 739, 679, 440,
	743, 677, 676, 746, 721, 638, 736, 671, 290, 636,
	287, 193, 207, 0, 669, 329, 368, 374, 735, 655,
	664, 230, 662, 372, 343, 426, 215, 255, 365, 348,
	370, 701, 719, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 650, 731, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 723, 759, 342,
	373, 221, 428, 392, 645, 649, 643, 644, 695, 696,
	646, 751, 752, 753, 727, 639, 0, 647, 648, 0,
	733, 741, 742, 700, 192, 205, 293, 755, 362, 258,
	453, 435, 431, 626, 642, 236, 653, 0, 0, 666,
	673, 674, 686, 688, 689, 690, 691, 699, 707, 708,
	710, 718, 720, 722, 724, 729, 738, 758, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 698,
	705, 303, 252, 269, 278, 713, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 745, 732, 0, 0, 681, 748,
	652, 670, 757, 672, 675, 715, 632, 694, 333, 667,
	0, 656, 628, 663, 629, 654, 683, 243, 687, 651,
	734, 697, 747, 291, 0, 634, 657, 347, 717, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 754, 295, 704, 0, 393, 318, 0,
	0, 0, 685, 737, 692, 728, 680, 716, 641, 703,
	749, 668, 712, 750, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 225, 709, 744, 665,
	711, 239, 279, 245, 238, 409, 714, 760, 627, 706,
	0, 630, 633, 756, 740, 660, 661, 0, 0, 0,
	0, 0, 0, 0, 684, 693, 725, 678, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 702, 0,
	0, 0, 637, 631, 0, 0, 0, 0, 682, 0,
	0, 0, 640, 0, 659, 726, 0, 625, 265, 635,
	319, 0, 730, 739, 679, 440, 743, 677, 676, 746,
	721, 638, 736, 671, 290, 636, 287, 193, 207, 0,
	669, 329, 368, 374, 735, 655, 664, 230, 662, 372,
	343, 426, 215, 255, 365, 348, 370, 701, 719, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 650, 731, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 723, 759, 342, 373, 221, 428, 392,
	645, 649, 643, 644, 695, 696, 646, 751, 752, 753,
	727, 639, 0, 647, 648, 0, 733, 741, 742, 700,
	192, 205, 293, 755, 362, 258, 453, 435, 431, 626,
	642, 236, 653, 0, 0, 666, 673, 674, 686, 688,
	689, 690, 691, 699, 707, 708, 710, 718, 720, 722,
	724, 729, 738, 758, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 698, 705, 303, 252, 269,
	278, 713, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	745, 732, 0, 0, 681, 748, 652, 670, 757, 672,
	675, 715, 632, 694, 333, 667, 0, 656, 628, 663,
	629, 654, 683, 243, 687, 651, 734, 697, 747, 291,
	0, 634, 657, 347, 717, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 754,
	295, 704, 0, 393, 318, 0, 0, 0, 685, 737,
	692, 728, 680, 716, 641, 703, 749, 668, 712, 750,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 709, 744, 665, 711, 239, 279, 245,
	238, 409, 714, 760, 627, 706, 0, 630, 633, 756,
	740, 660, 661, 0, 0, 0, 0, 0, 0, 0,
	684, 693, 725, 678, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 702, 0, 0, 0, 637, 631,
	0, 0, 0, 0, 682, 0, 0, 0, 640, 0,
	659, 726, 0, 625, 265, 635, 319, 0, 730, 739,
	679, 440, 743, 677, 676, 746, 721, 638, 736, 671,
	290, 636, 287, 193, 207, 0, 669, 329, 368, 374,
	735, 655, 664, 230, 662, 372, 343, 426, 215, 255,
	365, 348, 370, 701, 719, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 762, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 650,
	731, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 624, 761, 618, 617, 288, 297, 723,
	759, 342, 373, 221, 428, 392, 645, 649, 643, 644,
	695, 696, 646, 751, 752, 753, 727, 639, 0, 647,
	648, 0, 733, 741, 742, 700, 192, 205, 293, 755,
	362, 258, 453, 435, 431, 626, 642, 236, 653, 0,
	0, 666, 673, 674, 686, 688, 689, 690, 691, 699,
	707, 708, 710, 718, 720, 722, 724, 729, 738, 758,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 698, 705, 303, 252, 269, 278, 713, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 745, 732, 0, 0,
	681, 748, 652, 670, 757, 672, 675, 715, 632, 694,
	333, 667, 0, 656, 628, 663, 629, 654, 683, 243,
	687, 651, 734, 697, 747, 291, 0, 634, 657, 347,
	717, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 754, 295, 704, 0, 393,
	318, 0, 0, 0, 685, 737, 692, 728, 680, 716,
	641, 703, 749, 668, 712, 750, 281, 227, 197, 330,
	394, 257, 0, 0, 0, 179, 180, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 225, 709,
	744, 665, 711, 239, 279, 245, 238, 409, 714, 760,
	627, 706, 0, 630, 633, 756, 740, 660, 661, 0,
	0, 0, 0, 0, 0, 0, 684, 693, 725, 678,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	702, 0, 0, 0, 637, 631, 0, 0, 0, 0,
	682, 0, 0, 0, 640, 0, 659, 726, 0, 625,
	265, 635, 319, 0, 730, 739, 679, 440, 743, 677,
	676, 746, 721, 638, 736, 671, 290, 636, 287, 193,
	207, 0, 669, 329, 368, 374, 735, 655, 664, 230,
	662, 372, 343, 426, 215, 255, 365, 348, 370, 701,
	719, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 1100, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 762, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 650, 731, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 624,
	761, 618, 617, 288, 297, 723, 759, 342, 373, 221,
	428, 392, 645, 649, 643, 644, 695, 696, 646, 751,
	752, 753, 727, 639, 0, 647, 648, 0, 733, 741,
	742, 700, 192, 205, 293, 755, 362, 258, 453, 435,
	431, 626, 642, 236, 653, 0, 0, 666, 673, 674,
	686, 688, 689, 690, 691, 699, 707, 708, 710, 718,
	720, 722, 724, 729, 738, 758, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 267, 423, 444, 0, 301, 698, 705, 303,
	252, 269, 278, 713, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 745, 732, 0, 0, 681, 748, 652, 670,
	757, 672, 675, 715, 632, 694, 333, 667, 0, 656,
	628, 663, 629, 654, 683, 243, 687, 651, 734, 697,
	747, 291, 0, 634, 657, 347, 717, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 754, 295, 704, 0, 393, 318, 0, 0, 0,
	685, 737, 692, 728, 680, 716, 641, 703, 749, 668,
	712, 750, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 709, 744, 665, 711, 239,
	279, 245, 238, 409, 714, 760, 627, 706, 0, 630,
	633, 756, 740, 660, 661, 0, 0, 0, 0, 0,
	0, 0, 684, 693, 725, 678, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 702, 0, 0, 0,
	637, 631, 0, 0, 0, 0, 682, 0, 0, 0,
	640, 0, 659, 726, 0, 625, 265, 635, 319, 0,
	730, 739, 679, 440, 743, 677, 676, 746, 721, 638,
	736, 671, 290, 636, 287, 193, 207, 0, 669, 329,
	368, 374, 735, 655, 664, 230, 662, 372, 343, 426,
	215, 255, 365, 348, 370, 701, 719, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 615, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 762, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 650, 731, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 624, 761, 618, 617, 288,
	297, 723, 759, 342, 373, 221, 428, 392, 645, 649,
	643, 644, 695, 696, 646, 751, 752, 753, 727, 639,
	0, 647, 648, 0, 733, 741, 742, 700, 192, 205,
	293, 755, 362, 258, 453, 435, 431, 626, 642, 236,
	653, 0, 0, 666, 673, 674, 686, 688, 689, 690,
	691, 699, 707, 708, 710, 718, 720, 722, 724, 729,
	738, 758, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 698, 705, 303, 252, 269, 278, 713,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 1403, 0, 516, 0, 0, 0, 243, 0, 515,
	0, 0, 0, 291, 0, 0, 1404, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 559, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 550, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	71, 0, 0, 179, 180, 181, 537, 536, 539, 540,
	541, 542, 0, 0, 219, 538, 225, 543, 544, 545,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 513,
	530, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 605, 0, 0, 0, 573, 0,
	529, 0, 0, 522, 523, 525, 524, 526, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 572, 0, 0, 440, 0, 0, 570, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	560, 571, 566, 567, 564, 565, 0, 563, 562, 561,
	574, 552, 553, 554, 555, 557, 0, 568, 569, 556,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	333, 0, 0, 0, 0, 516, 0, 0, 0, 243,
	0, 515, 0, 0, 0, 291, 0, 0, 0, 347,
	0, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 559, 295, 0, 0, 393,
	318, 0, 0, 0, 0, 0, 550, 551, 0, 0,
	0, 0, 0, 0, 1515, 0, 281, 227, 197, 330,
	394, 257, 71, 0, 0, 179, 180, 181, 537, 536,
	539, 540, 541, 542, 0, 0, 219, 538, 225, 543,
	544, 545, 1516, 239, 279, 245, 238, 409, 0, 0,
	0, 513, 530, 0, 558, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 527, 528, 0, 0, 0, 0,
	573, 0, 529, 0, 0, 522, 523, 525, 524, 526,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 319, 0, 572, 0, 0, 440, 0, 0,
	570, 0, 0, 0, 0, 0, 290, 0, 287, 193,
	207, 0, 0, 329, 368, 374, 0, 0, 0, 230,
	0, 372, 343, 426, 215, 255, 365, 348, 370, 0,
	0, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 422, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 211, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 0, 0, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 324,
	212, 274, 391, 288, 297, 0, 0, 342, 373, 221,
	428, 392, 560, 571, 566, 567, 564, 565, 0, 563,
	562, 561, 574, 552, 553, 554, 555, 557, 0, 568,
	569, 556, 192, 205, 293, 0, 362, 258, 453, 435,
	431, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 267, 423, 444, 0, 301, 0, 0, 303,
	252, 269, 278, 0, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 333, 0, 0, 0, 0, 516, 0, 0,
	0, 243, 0, 515, 0, 0, 0, 291, 0, 0,
	0, 347, 0, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 559, 295, 0,
	0, 393, 318, 0, 0, 0, 0, 0, 550, 551,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 227,
	197, 330, 394, 257, 71, 0, 592, 179, 180, 181,
	537, 536, 539, 540, 541, 542, 0, 0, 219, 538,
	225, 543, 544, 545, 0, 239, 279, 245, 238, 409,
	0, 0, 0, 513, 530, 0, 558, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 527, 528, 0, 0,
	0, 0, 573, 0, 529, 0, 0, 522, 523, 525,
	524, 526, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 319, 0, 572, 0, 0, 440,
	0, 0, 570, 0, 0, 0, 0, 0, 290, 0,
	287, 193, 207, 0, 0, 329, 368, 374, 0, 0,
	0, 230, 0, 372, 343, 426, 215, 255, 365, 348,
	370, 0, 0, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 0, 0, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 0, 0, 342,
	373, 221, 428, 392, 560, 571, 566, 567, 564, 565,
	0, 563, 562, 561, 574, 552, 553, 554, 555, 557,
	0, 568, 569, 556, 192, 205, 293, 0, 362, 258,
	453, 435, 431, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 0,
	0, 303, 252, 269, 278, 0, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 333, 0, 0, 0, 0, 516,
	0, 0, 0, 243, 0, 515, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 559,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	550, 551, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 71, 0, 0, 179,
	180, 181, 537, 536, 539, 540, 541, 542, 0, 0,
	219, 538, 225, 543, 544, 545, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 513, 530, 0, 558, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 527, 528,
	605, 0, 0, 0, 573, 0, 529, 0, 0, 522,
	523, 525, 524, 526, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 572, 0,
	0, 440, 0, 0, 570, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 560, 571, 566, 567,
	564, 565, 0, 563, 562, 561, 574, 552, 553, 554,
	555, 557, 0, 568, 569, 556, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 516, 0, 0, 0, 243, 0, 515, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 559, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 550, 551, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 71, 0,
	0, 179, 180, 181, 537, 1421, 539, 540, 541, 542,
	0, 0, 219, 538, 225, 543, 544, 545, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 513, 530, 0,
	558, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	527, 528, 605, 0, 0, 0, 573, 0, 529, 0,
	0, 522, 523, 525, 524, 526, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	572, 0, 0, 440, 0, 0, 570, 0, 0, 0,
	0, 0, 290, 0, 287, 193, 207, 0, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 560, 571,
	566, 567, 564, 565, 0, 563, 562, 561, 574, 552,
	553, 554, 555, 557, 0, 568, 569, 556, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 0, 0, 516, 0, 0, 0, 243, 0, 515,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 559, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 550, 551, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	71, 0, 0, 179, 180, 181, 537, 1418, 539, 540,
	541, 542, 0, 0, 219, 538, 225, 543, 544, 545,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 513,
	530, 0, 558, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 527, 528, 605, 0, 0, 0, 573, 0,
	529, 0, 0, 522, 523, 525, 524, 526, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 572, 0, 0, 440, 0, 0, 570, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	560, 571, 566, 567, 564, 565, 0, 563, 562, 561,
	574, 552, 553, 554, 555, 557, 0, 568, 569, 556,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 516, 0,
	0, 0, 243, 0, 515, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 559, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 550,
	551, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 71, 0, 0, 179, 180,
	181, 537, 536, 539, 540, 541, 542, 0, 0, 219,
	538, 225, 543, 544, 545, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 513, 530, 0, 558, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 527, 528, 0,
	0, 0, 0, 573, 0, 529, 0, 0, 522, 523,
	525, 524, 526, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 572, 0, 0,
	440, 0, 0, 570, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 560, 571, 566, 567, 564,
	565, 0, 563, 562, 561, 574, 552, 553, 554, 555,
	557, 0, 568, 569, 556, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 0,
	516, 0, 0, 0, 243, 0, 515, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	559, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 550, 551, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 71, 0, 0,
	179, 180, 181, 537, 536, 539, 540, 541, 542, 0,
	0, 219, 538, 225, 543, 544, 545, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 513, 530, 0, 558,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 527,
	528, 0, 0, 0, 0, 573, 0, 529, 0, 0,
	522, 523, 525, 524, 526, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 572,
	0, 0, 440, 0, 0, 570, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 560, 571, 566,
	567, 564, 565, 0, 563, 562, 561, 574, 552, 553,
	554, 555, 557, 0, 568, 569, 556, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 559, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 550, 551, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 71,
	0, 0, 179, 180, 181, 537, 536, 539, 540, 541,
	542, 0, 0, 219, 538, 225, 543, 544, 545, 0,
	239, 279, 245, 238, 409, 0, 0, 0, 0, 530,
	0, 558, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 527, 528, 0, 0, 0, 0, 573, 0, 529,
	0, 0, 522, 523, 525, 524, 526, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 572, 0, 0, 440, 0, 0, 570, 0, 0,
	0, 0, 0, 290, 0, 287, 193, 207, 0, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 2185, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 560,
	571, 566, 567, 564, 565, 0, 563, 562, 561, 574,
	552, 553, 554, 555, 557, 0, 568, 569, 556, 192,
	205, 293, 0, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 559, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 550, 551, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 71, 0, 592, 179, 180, 181, 537, 536, 539,
	540, 541, 542, 0, 0, 219, 538, 225, 543, 544,
	545, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	0, 530, 0, 558, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 527, 528, 0, 0, 0, 0, 573,
	0, 529, 0, 0, 522, 523, 525, 524, 526, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 572, 0, 0, 440, 0, 0, 570,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 560, 571, 566, 567, 564, 565, 0, 563, 562,
	561, 574, 552, 553, 554, 555, 557, 0, 568, 569,
	556, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	347, 0, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 559, 295, 0, 0,
	393, 318, 0, 0, 0, 0, 0, 550, 551, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 227, 197,
	330, 394, 257, 71, 0, 0, 179, 180, 181, 537,
	536, 539, 540, 541, 542, 0, 0, 219, 538, 225,
	543, 544, 545, 0, 239, 279, 245, 238, 409, 0,
	0, 0, 0, 530, 0, 558, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 527, 528, 0, 0, 0,
	0, 573, 0, 529, 0, 0, 522, 523, 525, 524,
	526, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 319, 0, 572, 0, 0, 440, 0,
	0, 570, 0, 0, 0, 0, 0, 290, 0, 287,
	193, 207, 0, 0, 329, 368, 374, 0, 0, 0,
	230, 0, 372, 343, 426, 215, 255, 365, 348, 370,
	0, 0, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 422, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 211, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 0, 0, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	324, 212, 274, 391, 288, 297, 0, 0, 342, 373,
	221, 428, 392, 560, 571, 566, 567, 564, 565, 0,
	563, 562, 561, 574, 552, 553, 554, 555, 557, 0,
	568, 569, 556, 192, 205, 293, 0, 362, 258, 453,
	435, 431, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 267, 423, 444, 0, 301, 0, 0,
	303, 252, 269, 278, 0, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 0, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 0, 0, 0, 179, 180,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 0, 0, 0, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 975, 985, 986, 978, 979, 980,
	981, 982, 983, 984, 977, 0, 0, 987, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 805, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 804, 440, 0, 0, 0, 0, 0, 0, 801,
	802, 290, 770, 287, 193, 207, 795, 799, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 0,
	0, 1078, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 0, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 1080, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 0, 0, 0, 0,
	239, 279, 245, 238, 409, 965, 966, 964, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 967, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 287, 193, 207, 0, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 0, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	205, 293, 0, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 35,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 347, 0, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 0, 295, 0,
	0, 393, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 227,
	197, 330, 394, 257, 71, 0, 592, 179, 180, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	225, 0, 0, 0, 0, 239, 279, 245, 238, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 319, 0, 0, 0, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 193, 207, 0, 0, 329, 368, 374, 0, 0,
	0, 230, 0, 372, 343, 426, 215, 255, 365, 348,
	370, 0, 0, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 0, 0, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 0, 0, 342,
	373, 221, 428, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 205, 293, 0, 362, 258,
	453, 435, 431, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 0,
	0, 303, 252, 269, 278, 0, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 333, 0, 0, 0, 1448, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 1450, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 1446, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 0, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 0, 0, 0, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 770, 287, 193, 207, 768, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 0, 1448, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 0, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 1450, 0, 0,
	0, 0, 0, 0, 219, 0, 225, 0, 0, 0,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 0, 0, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	35, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 0, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 71, 0, 0, 179, 180,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 0, 0, 0, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 0, 1468, 0, 0, 1469, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 1111, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 0, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 1110, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 0, 0, 0, 0,
	239, 279, 245, 238, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 287, 193, 207, 0, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 0, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	205, 293, 0, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 0, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 0, 0, 592, 179, 180, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 225, 0, 0,
	0, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 0, 0, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 333, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	347, 0, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 0, 295, 0, 0,
	393, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 227, 197,
	330, 394, 257, 71, 0, 0, 179, 180, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 225,
	0, 0, 0, 0, 239, 279, 245, 238, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 319, 0, 0, 0, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 287,
	193, 207, 0, 0, 329, 368, 374, 0, 0, 0,
	230, 0, 372, 343, 426, 215, 255, 365, 348, 370,
	0, 0, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 422, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 211, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 0, 0, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	324, 212, 274, 391, 288, 297, 0, 0, 342, 373,
	221, 428, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 205, 293, 0, 362, 258, 453,
	435, 431, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 267, 423, 444, 0, 301, 0, 0,
	303, 252, 269, 278, 0, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 333, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 0, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 0, 0, 0, 179, 180,
	181, 0, 1450, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 0, 0, 0, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 1080, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 0, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 0, 0, 0, 0,
	239, 279, 245, 238, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 287, 193, 207, 0, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 0, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	205, 293, 1353, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 1235, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 0, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 0, 0, 0, 179, 180, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 225, 0, 0,
	0, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 0, 0, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 333, 0, 1233, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	347, 0, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 0, 295, 0, 0,
	393, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 227, 197,
	330, 394, 257, 0, 0, 0, 179, 180, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 225,
	0, 0, 0, 0, 239, 279, 245, 238, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 319, 0, 0, 0, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 287,
	193, 207, 0, 0, 329, 368, 374, 0, 0, 0,
	230, 0, 372, 343, 426, 215, 255, 365, 348, 370,
	0, 0, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 422, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 211, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 0, 0, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	324, 212, 274, 391, 288, 297, 0, 0, 342, 373,
	221, 428, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 205, 293, 0, 362, 258, 453,
	435, 431, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 267, 423, 444, 0, 301, 0, 0,
	303, 252, 269, 278, 0, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 333, 0, 1231, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 0, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 0, 0, 0, 179, 180,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 0, 0, 0, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 1229, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 0, 0, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 333, 0, 1227,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 0, 291, 0, 0, 0, 347, 0, 384, 229,
	300, 298, 412, 253, 246, 242, 228, 275, 306, 345,
	402, 339, 0, 295, 0, 0, 393, 318, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 281, 227, 197, 330, 394, 257, 0,
	0, 0, 179, 180, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 225, 0, 0, 0, 0,
	239, 279, 245, 238, 409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 319,
	0, 0, 0, 0, 440, 0, 0, 0, 0, 0,
	0, 0, 0, 290, 0, 287, 193, 207, 0, 0,
	329, 368, 374, 0, 0, 0, 230, 0, 372, 343,
	426, 215, 255, 365, 348, 370, 0, 0, 371, 296,
	414, 360, 424, 441, 442, 237, 323, 432, 406, 438,
	452, 208, 234, 337, 399, 429, 390, 316, 410, 411,
	286, 389, 263, 196, 294, 449, 200, 401, 422, 220,
	382, 0, 0, 0, 202, 420, 398, 313, 283, 284,
	201, 0, 364, 241, 261, 232, 332, 417, 418, 231,
	454, 210, 437, 204, 211, 436, 325, 413, 421, 314,
	305, 203, 419, 312, 304, 289, 251, 271, 358, 299,
	359, 272, 321, 320, 322, 0, 198, 0, 395, 430,
	455, 217, 0, 0, 408, 446, 451, 0, 361, 218,
	262, 250, 357, 260, 292, 445, 447, 448, 450, 216,
	355, 268, 336, 425, 254, 433, 324, 212, 274, 391,
	288, 297, 0, 0, 342, 373, 221, 428, 392, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	205, 293, 0, 362, 258, 453, 435, 431, 0, 0,
	236, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 195, 206, 214, 223, 235, 248,
	256, 266, 270, 273, 276, 277, 280, 285, 302, 307,
	308, 309, 310, 326, 327, 328, 331, 334, 335, 338,
	340, 341, 344, 350, 351, 352, 353, 354, 356, 363,
	367, 375, 376, 377, 378, 379, 380, 381, 385, 386,
	387, 388, 396, 400, 415, 416, 427, 439, 443, 267,
	423, 444, 0, 301, 0, 0, 303, 252, 269, 278,
	0, 434, 397, 209, 369, 259, 199, 226, 213, 233,
	247, 249, 282, 311, 317, 346, 349, 264, 244, 224,
	366, 222, 383, 403, 404, 405, 407, 315, 240, 333,
	0, 1223, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 291, 0, 0, 0, 347, 0,
	384, 229, 300, 298, 412, 253, 246, 242, 228, 275,
	306, 345, 402, 339, 0, 295, 0, 0, 393, 318,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 281, 227, 197, 330, 394,
	257, 0, 0, 0, 179, 180, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 225, 0, 0,
	0, 0, 239, 279, 245, 238, 409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 319, 0, 0, 0, 0, 440, 0, 0, 0,
	0, 0, 0, 0, 0, 290, 0, 287, 193, 207,
	0, 0, 329, 368, 374, 0, 0, 0, 230, 0,
	372, 343, 426, 215, 255, 365, 348, 370, 0, 0,
	371, 296, 414, 360, 424, 441, 442, 237, 323, 432,
	406, 438, 452, 208, 234, 337, 399, 429, 390, 316,
	410, 411, 286, 389, 263, 196, 294, 449, 200, 401,
	422, 220, 382, 0, 0, 0, 202, 420, 398, 313,
	283, 284, 201, 0, 364, 241, 261, 232, 332, 417,
	418, 231, 454, 210, 437, 204, 211, 436, 325, 413,
	421, 314, 305, 203, 419, 312, 304, 289, 251, 271,
	358, 299, 359, 272, 321, 320, 322, 0, 198, 0,
	395, 430, 455, 217, 0, 0, 408, 446, 451, 0,
	361, 218, 262, 250, 357, 260, 292, 445, 447, 448,
	450, 216, 355, 268, 336, 425, 254, 433, 324, 212,
	274, 391, 288, 297, 0, 0, 342, 373, 221, 428,
	392, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 205, 293, 0, 362, 258, 453, 435, 431,
	0, 0, 236, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 195, 206, 214, 223,
	235, 248, 256, 266, 270, 273, 276, 277, 280, 285,
	302, 307, 308, 309, 310, 326, 327, 328, 331, 334,
	335, 338, 340, 341, 344, 350, 351, 352, 353, 354,
	356, 363, 367, 375, 376, 377, 378, 379, 380, 381,
	385, 386, 387, 388, 396, 400, 415, 416, 427, 439,
	443, 267, 423, 444, 0, 301, 0, 0, 303, 252,
	269, 278, 0, 434, 397, 209, 369, 259, 199, 226,
	213, 233, 247, 249, 282, 311, 317, 346, 349, 264,
	244, 224, 366, 222, 383, 403, 404, 405, 407, 315,
	240, 333, 0, 1221, 0, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 291, 0, 0, 0,
	347, 0, 384, 229, 300, 298, 412, 253, 246, 242,
	228, 275, 306, 345, 402, 339, 0, 295, 0, 0,
	393, 318, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 281, 227, 197,
	330, 394, 257, 0, 0, 0, 179, 180, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 225,
	0, 0, 0, 0, 239, 279, 245, 238, 409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 319, 0, 0, 0, 0, 440, 0,
	0, 0, 0, 0, 0, 0, 0, 290, 0, 287,
	193, 207, 0, 0, 329, 368, 374, 0, 0, 0,
	230, 0, 372, 343, 426, 215, 255, 365, 348, 370,
	0, 0, 371, 296, 414, 360, 424, 441, 442, 237,
	323, 432, 406, 438, 452, 208, 234, 337, 399, 429,
	390, 316, 410, 411, 286, 389, 263, 196, 294, 449,
	200, 401, 422, 220, 382, 0, 0, 0, 202, 420,
	398, 313, 283, 284, 201, 0, 364, 241, 261, 232,
	332, 417, 418, 231, 454, 210, 437, 204, 211, 436,
	325, 413, 421, 314, 305, 203, 419, 312, 304, 289,
	251, 271, 358, 299, 359, 272, 321, 320, 322, 0,
	198, 0, 395, 430, 455, 217, 0, 0, 408, 446,
	451, 0, 361, 218, 262, 250, 357, 260, 292, 445,
	447, 448, 450, 216, 355, 268, 336, 425, 254, 433,
	324, 212, 274, 391, 288, 297, 0, 0, 342, 373,
	221, 428, 392, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 205, 293, 0, 362, 258, 453,
	435, 431, 0, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 194, 195, 206,
	214, 223, 235, 248, 256, 266, 270, 273, 276, 277,
	280, 285, 302, 307, 308, 309, 310, 326, 327, 328,
	331, 334, 335, 338, 340, 341, 344, 350, 351, 352,
	353, 354, 356, 363, 367, 375, 376, 377, 378, 379,
	380, 381, 385, 386, 387, 388, 396, 400, 415, 416,
	427, 439, 443, 267, 423, 444, 0, 301, 0, 0,
	303, 252, 269, 278, 0, 434, 397, 209, 369, 259,
	199, 226, 213, 233, 247, 249, 282, 311, 317, 346,
	349, 264, 244, 224, 366, 222, 383, 403, 404, 405,
	407, 315, 240, 333, 0, 1219, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 291, 0,
	0, 0, 347, 0, 384, 229, 300, 298, 412, 253,
	246, 242, 228, 275, 306, 345, 402, 339, 0, 295,
	0, 0, 393, 318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 281,
	227, 197, 330, 394, 257, 0, 0, 0, 179, 180,
	181, 0, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 225, 0, 0, 0, 0, 239, 279, 245, 238,
	409, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 319, 0, 0, 0, 0,
	440, 0, 0, 0, 0, 0, 0, 0, 0, 290,
	0, 287, 193, 207, 0, 0, 329, 368, 374, 0,
	0, 0, 230, 0, 372, 343, 426, 215, 255, 365,
	348, 370, 0, 0, 371, 296, 414, 360, 424, 441,
	442, 237, 323, 432, 406, 438, 452, 208, 234, 337,
	399, 429, 390, 316, 410, 411, 286, 389, 263, 196,
	294, 449, 200, 401, 422, 220, 382, 0, 0, 0,
	202, 420, 398, 313, 283, 284, 201, 0, 364, 241,
	261, 232, 332, 417, 418, 231, 454, 210, 437, 204,
	211, 436, 325, 413, 421, 314, 305, 203, 419, 312,
	304, 289, 251, 271, 358, 299, 359, 272, 321, 320,
	322, 0, 198, 0, 395, 430, 455, 217, 0, 0,
	408, 446, 451, 0, 361, 218, 262, 250, 357, 260,
	292, 445, 447, 448, 450, 216, 355, 268, 336, 425,
	254, 433, 324, 212, 274, 391, 288, 297, 0, 0,
	342, 373, 221, 428, 392, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 205, 293, 0, 362,
	258, 453, 435, 431, 0, 0, 236, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 194,
	195, 206, 214, 223, 235, 248, 256, 266, 270, 273,
	276, 277, 280, 285, 302, 307, 308, 309, 310, 326,
	327, 328, 331, 334, 335, 338, 340, 341, 344, 350,
	351, 352, 353, 354, 356, 363, 367, 375, 376, 377,
	378, 379, 380, 381, 385, 386, 387, 388, 396, 400,
	415, 416, 427, 439, 443, 267, 423, 444, 0, 301,
	0, 0, 303, 252, 269, 278, 0, 434, 397, 209,
	369, 259, 199, 226, 213, 233, 247, 249, 282, 311,
	317, 346, 349, 264, 244, 224, 366, 222, 383, 403,
	404, 405, 407, 315, 240, 333, 0, 0, 0, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 0, 0,
	291, 0, 0, 0, 347, 0, 384, 229, 300, 298,
	412, 253, 246, 242, 228, 275, 306, 345, 402, 339,
	0, 295, 0, 0, 393, 318, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 281, 227, 197, 330, 394, 257, 1194, 0, 0,
	179, 180, 181, 0, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 225, 0, 0, 0, 0, 239, 279,
	245, 238, 409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 319, 0, 0,
	0, 0, 440, 0, 0, 0, 0, 0, 0, 0,
	0, 290, 0, 287, 193, 207, 0, 0, 329, 368,
	374, 0, 0, 0, 230, 0, 372, 343, 426, 215,
	255, 365, 348, 370, 0, 0, 371, 296, 414, 360,
	424, 441, 442, 237, 323, 432, 406, 438, 452, 208,
	234, 337, 399, 429, 390, 316, 410, 411, 286, 389,
	263, 196, 294, 449, 200, 401, 422, 220, 382, 0,
	0, 0, 202, 420, 398, 313, 283, 284, 201, 0,
	364, 241, 261, 232, 332, 417, 418, 231, 454, 210,
	437, 204, 211, 436, 325, 413, 421, 314, 305, 203,
	419, 312, 304, 289, 251, 271, 358, 299, 359, 272,
	321, 320, 322, 0, 198, 0, 395, 430, 455, 217,
	0, 0, 408, 446, 451, 0, 361, 218, 262, 250,
	357, 260, 292, 445, 447, 448, 450, 216, 355, 268,
	336, 425, 254, 433, 324, 212, 274, 391, 288, 297,
	0, 0, 342, 373, 221, 428, 392, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 205, 293,
	0, 362, 258, 453, 435, 431, 0, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 194, 195, 206, 214, 223, 235, 248, 256, 266,
	270, 273, 276, 277, 280, 285, 302, 307, 308, 309,
	310, 326, 327, 328, 331, 334, 335, 338, 340, 341,
	344, 350, 351, 352, 353, 354, 356, 363, 367, 375,
	376, 377, 378, 379, 380, 381, 385, 386, 387, 388,
	396, 400, 415, 416, 427, 439, 443, 267, 423, 444,
	0, 301, 0, 0, 303, 252, 269, 278, 0, 434,
	397, 209, 369, 259, 199, 226, 213, 233, 247, 249,
	282, 311, 317, 346, 349, 264, 244, 224, 366, 222,
	383, 403, 404, 405, 407, 315, 240, 1093, 0, 0,
	0, 0, 0, 0, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240, 333, 0, 0, 0,
	0, 0, 0, 0, 1084, 243, 0, 0, 0, 0,
	0, 291, 0, 0, 0, 347, 0, 384, 229, 300,
	298, 412, 253, 246, 242, 228, 275, 306, 345, 402,
	339, 0, 295, 0, 0, 393, 318, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 281, 227, 197, 330, 394, 257, 0, 0,
	0, 179, 180, 181, 0, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 225, 0, 0, 0, 0, 239,
	279, 245, 238, 409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 319, 0,
	0, 0, 0, 440, 0, 0, 0, 0, 0, 0,
	0, 0, 290, 0, 287, 193, 207, 0, 0, 329,
	368, 374, 0, 0, 0, 230, 0, 372, 343, 426,
	215, 255, 365, 348, 370, 0, 0, 371, 296, 414,
	360, 424, 441, 442, 237, 323, 432, 406, 438, 452,
	208, 234, 337, 399, 429, 390, 316, 410, 411, 286,
	389, 263, 196, 294, 449, 200, 401, 422, 220, 382,
	0, 0, 0, 202, 420, 398, 313, 283, 284, 201,
	0, 364, 241, 261, 232, 332, 417, 418, 231, 454,
	210, 437, 204, 211, 436, 325, 413, 421, 314, 305,
	203, 419, 312, 304, 289, 251, 271, 358, 299, 359,
	272, 321, 320, 322, 0, 198, 0, 395, 430, 455,
	217, 0, 0, 408, 446, 451, 0, 361, 218, 262,
	250, 357, 260, 292, 445, 447, 448, 450, 216, 355,
	268, 336, 425, 254, 433, 324, 212, 274, 391, 288,
	297, 0, 0, 342, 373, 221, 428, 392, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 205,
	293, 0, 362, 258, 453, 435, 431, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 194, 195, 206, 214, 223, 235, 248, 256,
	266, 270, 273, 276, 277, 280, 285, 302, 307, 308,
	309, 310, 326, 327, 328, 331, 334, 335, 338, 340,
	341, 344, 350, 351, 352, 353, 354, 356, 363, 367,
	375, 376, 377, 378, 379, 380, 381, 385, 386, 387,
	388, 396, 400, 415, 416, 427, 439, 443, 267, 423,
	444, 0, 301, 0, 0, 303, 252, 269, 278, 0,
	434, 397, 209, 369, 259, 199, 226, 213, 233, 247,
	249, 282, 311, 317, 346, 349, 264, 244, 224, 366,
	222, 383, 403, 404, 405, 407, 315, 240, 333, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	0, 0, 0, 291, 0, 0, 0, 347, 0, 384,
	229, 300, 298, 412, 253, 246, 242, 228, 275, 306,
	345, 402, 339, 0, 295, 0, 0, 393, 318, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 281, 227, 197, 330, 394, 257,
	0, 0, 0, 179, 180, 181, 0, 941, 0, 0,
	0, 0, 0, 0, 219, 0, 225, 0, 0, 0,
	0, 239, 279, 245, 238, 409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	319, 0, 0, 0, 0, 440, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 287, 193, 207, 0,
	0, 329, 368, 374, 0, 0, 0, 230, 0, 372,
	343, 426, 215, 255, 365, 348, 370, 0, 0, 371,
	296, 414, 360, 424, 441, 442, 237, 323, 432, 406,
	438, 452, 208, 234, 337, 399, 429, 390, 316, 410,
	411, 286, 389, 263, 196, 294, 449, 200, 401, 422,
	220, 382, 0, 0, 0, 202, 420, 398, 313, 283,
	284, 201, 0, 364, 241, 261, 232, 332, 417, 418,
	231, 454, 210, 437, 204, 211, 436, 325, 413, 421,
	314, 305, 203, 419, 312, 304, 289, 251, 271, 358,
	299, 359, 272, 321, 320, 322, 0, 198, 0, 395,
	430, 455, 217, 0, 0, 408, 446, 451, 0, 361,
	218, 262, 250, 357, 260, 292, 445, 447, 448, 450,
	216, 355, 268, 336, 425, 254, 433, 324, 212, 274,
	391, 288, 297, 0, 0, 342, 373, 221, 428, 392,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 205, 293, 0, 362, 258, 453, 435, 431, 0,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 195, 206, 214, 223, 235,
	248, 256, 266, 270, 273, 276, 277, 280, 285, 302,
	307, 308, 309, 310, 326, 327, 328, 331, 334, 335,
	338, 340, 341, 344, 350, 351, 352, 353, 354, 356,
	363, 367, 375, 376, 377, 378, 379, 380, 381, 385,
	386, 387, 388, 396, 400, 415, 416, 427, 439, 443,
	267, 423, 444, 0, 301, 0, 0, 303, 252, 269,
	278, 0, 434, 397, 209, 369, 259, 199, 226, 213,
	233, 247, 249, 282, 311, 317, 346, 349, 264, 244,
	224, 366, 222, 383, 403, 404, 405, 407, 315, 240,
	333, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 291, 0, 0, 0, 347,
	0, 384, 229, 300, 298, 412, 253, 246, 242, 228,
	275, 306, 345, 402, 339, 0, 295, 0, 0, 393,
	318, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 281, 227, 197, 330,
	394, 257, 0, 0, 0, 179, 180, 181, 0, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 225, 0,
	0, 0, 0, 239, 279, 245, 238, 409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 504, 0,
	265, 0, 319, 0, 0, 0, 0, 440, 0, 0,
	0, 0, 0, 0, 0, 0, 290, 0, 287, 193,
	207, 0, 0, 329, 368, 374, 0, 0, 0, 230,
	0, 372, 343, 426, 215, 255, 365, 348, 370, 0,
	0, 371, 296, 414, 360, 424, 441, 442, 237, 323,
	432, 406, 438, 452, 208, 234, 337, 399, 429, 390,
	316, 410, 411, 286, 389, 263, 196, 294, 449, 200,
	401, 422, 220, 382, 0, 0, 0, 202, 420, 398,
	313, 283, 284, 201, 0, 364, 241, 261, 232, 332,
	417, 418, 231, 454, 210, 437, 204, 211, 436, 325,
	413, 421, 314, 305, 203, 419, 312, 304, 289, 251,
	271, 358, 299, 359, 272, 321, 320, 322, 0, 198,
	0, 395, 430, 455, 217, 0, 0, 408, 446, 451,
	0, 361, 218, 262, 250, 357, 260, 292, 445, 447,
	448, 450, 216, 355, 268, 336, 425, 254, 433, 324,
	212, 274, 391, 288, 297, 0, 0, 342, 373, 221,
	428, 392, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 205, 293, 0, 362, 258, 453, 435,
	431, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 194, 195, 206, 214,
	223, 235, 248, 256, 266, 270, 273, 276, 277, 280,
	285, 302, 307, 308, 309, 310, 326, 327, 328, 331,
	334, 335, 338, 340, 341, 344, 350, 351, 352, 353,
	354, 356, 363, 367, 375, 376, 377, 378, 379, 380,
	381, 385, 386, 387, 388, 396, 400, 415, 416, 427,
	439, 443, 503, 423, 444, 0, 301, 0, 0, 303,
	252, 269, 278, 0, 434, 397, 209, 369, 259, 199,
	226, 213, 233, 247, 249, 282, 311, 317, 346, 349,
	264, 244, 224, 366, 222, 383, 403, 404, 405, 407,
	315, 240, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 291, 0, 0,
	0, 347, 0, 384, 229, 300, 298, 412, 253, 246,
	242, 228, 275, 306, 345, 402, 339, 0, 295, 0,
	0, 393, 318, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 281, 227,
	197, 330, 394, 257, 0, 0, 0, 179, 180, 181,
	0, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	225, 0, 0, 0, 0, 239, 279, 245, 238, 409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 319, 0, 0, 187, 0, 440,
	0, 0, 0, 0, 0, 0, 0, 0, 290, 0,
	287, 193, 207, 0, 0, 329, 368, 374, 0, 0,
	0, 230, 0, 372, 343, 426, 215, 255, 365, 348,
	370, 0, 0, 371, 296, 414, 360, 424, 441, 442,
	237, 323, 432, 406, 438, 452, 208, 234, 337, 399,
	429, 390, 316, 410, 411, 286, 389, 263, 196, 294,
	449, 200, 401, 422, 220, 382, 0, 0, 0, 202,
	420, 398, 313, 283, 284, 201, 0, 364, 241, 261,
	232, 332, 417, 418, 231, 454, 210, 437, 204, 211,
	436, 325, 413, 421, 314, 305, 203, 419, 312, 304,
	289, 251, 271, 358, 299, 359, 272, 321, 320, 322,
	0, 198, 0, 395, 430, 455, 217, 0, 0, 408,
	446, 451, 0, 361, 218, 262, 250, 357, 260, 292,
	445, 447, 448, 450, 216, 355, 268, 336, 425, 254,
	433, 324, 212, 274, 391, 288, 297, 0, 0, 342,
	373, 221, 428, 392, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 205, 293, 0, 362, 258,
	453, 435, 431, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 194, 195,
	206, 214, 223, 235, 248, 256, 266, 270, 273, 276,
	277, 280, 285, 302, 307, 308, 309, 310, 326, 327,
	328, 331, 334, 335, 338, 340, 341, 344, 350, 351,
	352, 353, 354, 356, 363, 367, 375, 376, 377, 378,
	379, 380, 381, 385, 386, 387, 388, 396, 400, 415,
	416, 427, 439, 443, 267, 423, 444, 0, 301, 0,
	0, 303, 252, 269, 278, 0, 434, 397, 209, 369,
	259, 199, 226, 213, 233, 247, 249, 282, 311, 317,
	346, 349, 264, 244, 224, 366, 222, 383, 403, 404,
	405, 407, 315, 240, 333, 0, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 347, 0, 384, 229, 300, 298, 412,
	253, 246, 242, 228, 275, 306, 345, 402, 339, 0,
	295, 0, 0, 393, 318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	281, 227, 197, 330, 394, 257, 0, 0, 0, 179,
	180, 181, 0, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 225, 0, 0, 0, 0, 239, 279, 245,
	238, 409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 319, 0, 0, 0,
	0, 440, 0, 0, 0, 0, 0, 0, 0, 0,
	290, 0, 287, 193, 207, 0, 0, 329, 368, 374,
	0, 0, 0, 230, 0, 372, 343, 426, 215, 255,
	365, 348, 370, 0, 0, 371, 296, 414, 360, 424,
	441, 442, 237, 323, 432, 406, 438, 452, 208, 234,
	337, 399, 429, 390, 316, 410, 411, 286, 389, 263,
	196, 294, 449, 200, 401, 422, 220, 382, 0, 0,
	0, 202, 420, 398, 313, 283, 284, 201, 0, 364,
	241, 261, 232, 332, 417, 418, 231, 454, 210, 437,
	204, 211, 436, 325, 413, 421, 314, 305, 203, 419,
	312, 304, 289, 251, 271, 358, 299, 359, 272, 321,
	320, 322, 0, 198, 0, 395, 430, 455, 217, 0,
	0, 408, 446, 451, 0, 361, 218, 262, 250, 357,
	260, 292, 445, 447, 448, 450, 216, 355, 268, 336,
	425, 254, 433, 324, 212, 274, 391, 288, 297, 0,
	0, 342, 373, 221, 428, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 205, 293, 0,
	362, 258, 453, 435, 431, 0, 0, 236, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	194, 195, 206, 214, 223, 235, 248, 256, 266, 270,
	273, 276, 277, 280, 285, 302, 307, 308, 309, 310,
	326, 327, 328, 331, 334, 335, 338, 340, 341, 344,
	350, 351, 352, 353, 354, 356, 363, 367, 375, 376,
	377, 378, 379, 380, 381, 385, 386, 387, 388, 396,
	400, 415, 416, 427, 439, 443, 267, 423, 444, 0,
	301, 0, 0, 303, 252, 269, 278, 0, 434, 397,
	209, 369, 259, 199, 226, 213, 233, 247, 249, 282,
	311, 317, 346, 349, 264, 244, 224, 366, 222, 383,
	403, 404, 405, 407, 315, 240,
}

var yyPact = [...]int{
	4221, -1000, -342, 1627, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1596, 1179, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 491, 1228, 168, 1484, 272, 166, 957, 355,
	98, 27133, 351, 3384, 27585, -1000, 89, -1000, 79, 27585,
	83, 26681, -1000, -1000, -281, 12636, 1417, 17, 15, 27585,
	99, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1208,
	1541, 1549, 1594, 991, 1585, -1000, 10815, 10815, 273, 273,
	273, 9007, -1000, -1000, 16717, 27585, 27585, 1235, 347, 957,
	338, 335, 327, -1000, -131, -1000, -1000, -1000, -1000, 1484,
	-1000, -1000, 147, -1000, 211, 1169, -1000, 1167, -1000, 460,
	481, 208, 279, 277, 206, 203, 201, 200, 197, 196,
	195, 192, 217, -1000, 488, 488, -176, -178, 295, 270,
	270, 270, 304, 1444, 1442, -1000, 457, -1000, 488, 488,
	137, 488, 488, 488, 488, 161, 158, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 27585, -1000, 138, 550, 519, 1484, 151, -1000,
	-1000, -1000, 27585, 343, 957, 265, -1000, 27585, -1000, 404,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 27585, 605, 605, 3,
	605, 605, 605, 605, 81, 415, 6, -1000, 78, 152,
	144, 148, 551, 103, 59, -1000, -1000, 140, 551, 80,
	-1000, 605, 7143, 7143, 7143, -1000, 1470, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 302, -1000, -1000, -1000, -1000,
	27585, 26229, 239, 517, -1000, -1000, -1000, 87, -1000, -1000,
	1108, 767, -1000, 12636, 2637, 1175, 1175, -1000, -1000, 397,
	-1000, -1000, 13992, 13992, 13992, 13992, 13992, 13992, 13992, 13992,
	13992, 13992, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1175, 401, -1000, 12184,
	1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 12636, 1175,
	1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175, 1175,
	1175, 1175, 1175, 1175, 1175, -1000, -1000, -1000, 27585, -1000,
	1175, 898, 1596, -1000, 1179, -1000, -1000, -1000, 1463, 12636,
	12636, 1596, -1000, 1347, 10815, -1000, -1000, 1524, -1000, -1000,
	-1000, -1000, -1000, 587, 1613, -1000, 15348, 396, 1612, 25777,
	-1000, 19442, 25325, 1162, 8541, -33, -1000, -1000, -1000, 510,
	18538, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1470, 1088, 27585, -1000, -1000, 3819, 957, -1000,
	1226, -1000, 1082, -1000, 1181, 138, 274, 1243, 957, 957,
	957, 274, -1000, -1000, -1000, 488, 488, 202, 272, 3548,
	-1000, -1000, -1000, 24866, 1219, 957, -1000, 1218, -1000, 1507,
	269, 432, 432, 957, -1000, -1000, 27585, 957, 1506, 1504,
	27585, 27585, -1000, 24414, -1000, 23962, 23510, 779, 27585, 23058,
	22606, 22154, 21702, 21250, -1000, 1295, -1000, 1244, -1000, -1000,
	-1000, 27585, 27585, 27585, 26, -1000, -1000, 27585, 957, -1000,
	-1000, 775, 769, 488, 488, 766, 881, 880, 875, 488,
	488, 763, 873, 987, 135, 757, 740, 739, 783, 870,
	105, 770, 669, 738, 27585, 1215, -1000, 131, 508, 176,
	207, 179, 27585, 129, 1484, 1415, 1147, 301, 265, 1280,
	27585, 1528, 265, -1000, 7609, -1000, -1000, 865, 12636, -1000,
	566, 551, 551, -1000, -1000, -1000, -1000, -1000, -1000, 605,
	27585, 566, -1000, -1000, -1000, 551, 605, 27585, 605, 605,
	605, 605, 551, 605, 27585, 27585, 27585, 27585, 27585, 27585,
	27585, 27585, 27585, 7143, 7143, 7143, 445, 605, -1000, 1278,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 82, -1000, -1000,
	-1000, -1000, -1000, 1627, -1000, -1000, -1000, -110, 1144, 20798,
	-1000, -285, -286, -288, -289, -1000, -1000, -1000, -290, -297,
	-1000, -1000, -1000, 12636, 12636, 12636, 12636, 656, 465, 13992,
	683, 556, 13992, 13992, 13992, 13992, 13992, 13992, 13992, 13992,
	13992, 13992, 13992, 13992, 13992, 13992, 13992, 713, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 957, -1000, 1625, 1045,
	1045, 413, 413, 413, 413, 413, 413, 413, 413, 413,
	14444, 9459, 7609, 991, 1040, 1596, 10815, 10815, 12636, 12636,
	11719, 11267, 10815, 1455, 497, 767, 27585, -1000, -1000, 13540,
	-1000, -1000, -1000, -1000, -1000, 915, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 27585, 27585, 10815, 10815, 10815, 10815, 10815,
	-1000, 1140, -1000, -168, 16265, 12636, -1000, 1549, 991, 1524,
	1514, 1620, 434, 858, 1139, -1000, 742, 1549, 18086, 1168,
	-1000, 1524, -1000, -1000, -1000, 27585, -1000, -1000, 20346, -1000,
	-1000, 6677, 27585, 188, 27585, -1000, 1141, 1460, -1000, -1000,
	-1000, 1532, 17634, 27585, 1138, 1128, -1000, -1000, 394, 8075,
	-33, -1000, 8075, 1117, -1000, -39, -50, 9911, 395, -1000,
	-1000, -1000, 295, 14896, 1059, -1000, 27, -1000, -1000, -1000,
	1181, -1000, 1181, 1181, 1181, 1181, 26, 26, 26, 26,
	-1000, -1000, -1000, -1000, -1000, 1209, 1204, -1000, 1181, 1181,
	1181, 1181, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1202,
	1202, 1202, 1183, 1183, 248, -1000, 12636, 165, 27585, 1525,
	737, 131, 27585, 529, 1275, -1000, 27585, 1243, 1243, 1243,
	957, 871, 863, -1000, 1137, -1000, -1000, 1593, -1000, -1000,
	493, 564, 545, 388, 27585, 104, 187, -1000, 242, -1000,
	27585, 1201, 1502, 432, 957, -1000, 957, -1000, -1000, -1000,
	-1000, 392, -1000, -1000, 957, 1134, -1000, 1086, 651, 538,
	595, 537, 1134, -1000, -1000, -154, 1134, -1000, 1134, -1000,
	1134, -1000, 1134, -1000, 1134, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 506, 27585, 104, 713, -1000, 286, -1000,
	-1000, 713, 713, -1000, -1000, -1000, -1000, 864, 857, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -335, 27585, 308, 111, 146,
	27585, 27585, 27585, 27585, 27585, 377, -1000, -1000, -1000, 157,
	27585, 27585, 27585, 27585, 334, -1000, -1000, 957, -1000, -1000,
	-1000, -1000, 767, 27585, -1000, -1000, 605, 605, -1000, -1000,
	27585, 605, -1000, -1000, -1000, -1000, -1000, -1000, 605, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 849, -1000, 27585, 27585, -1000, -1000, -1000,
	-1000, -1000, 143, -43, 162, -1000, -1000, -1000, -1000, 1537,
	-1000, 767, 465, 546, 505, -1000, -1000, 707, -1000, -1000,
	2142, -1000, -1000, -1000, -1000, 683, 13992, 13992, 13992, 1261,
	2142, 2293, 869, 652, 413, 635, 635, 448, 448, 448,
	448, 448, 576, 576, -1000, -1000, -1000, -1000, 915, -1000,
	-1000, -1000, 915, 10815, 10815, 1129, 1175, 389, -1000, 1208,
	-1000, -1000, 1549, 1026, 1026, 728, 941, 524, 1606, 1026,
	512, 1604, 1026, 1026, 10815, -1000, -1000, 534, -1000, 12636,
	915, -1000, 887, 1121, 1118, 1026, 915, 915, 1026, 1026,
	27585, -1000, -280, -1000, -73, 387, 1175, -1000, 19894, -1000,
	-1000, 915, 1108, 1463, -1000, -1000, 1435, -1000, 1344, 12636,
	12636, 12636, -1000, -1000, -1000, 1463, 1571, -1000, 1368, 1367,
	1602, 10815, 19442, 1524, -1000, -1000, -1000, 384, 1602, 1143,
	1175, -1000, 27585, 19442, 19442, 19442, 19442, 19442, -1000, 1316,
	1314, -1000, 1305, 1292, 1309, 27585, -1000, 1038, 991, 17634,
	188, 1084, 19442, 27585, -1000, -1000, 19442, 27585, 6211, -1000,
	1117, -33, -44, -1000, -1000, -1000, -1000, 767, -1000, 850,
	-1000, 2202, -1000, 255, -1000, -1000, -1000, -1000, 547, 23,
	-1000, -1000, 26, 26, -1000, -1000, 395, 756, 395, 395,
	395, 811, 811, -1000, -1000, -1000, -1000, -1000, 726, -1000,
	-1000, -1000, 688, -1000, -1000, 931, 1286, 165, -1000, -1000,
	488, 810, 1421, -1000, -1000, 1021, 278, -1000, 1519, 27585,
	-1000, 1272, 1265, 1259, -1000, -1000, -1000, -1000, -1000, 2532,
	27585, 1036, -1000, 107, 27585, 1001, 27585, -1000, 1034, 27585,
	-1000, 957, -1000, -1000, 7609, -1000, 27585, 1175, -1000, -1000,
	-1000, -1000, 340, 1472, 1464, 104, 107, 395, 957, -1000,
	-1000, -1000, -1000, -1000, -338, 1029, 27585, 123, -1000, 1200,
	902, -1000, 1205, -1000, -1000, -1000, -1000, 106, 167, 149,
	284, -1000, 333, 1286, 27585, -1000, -1000, -1000, -1000, 551,
	-1000, -1000, 551, -1000, -1000, -1000, -1000, -1000, -1000, 1457,
	-52, -311, -1000, -306, -1000, -1000, -1000, -1000, 1261, 2142,
	1745, -1000, 13992, 13992, -1000, -1000, 1026, 1026, 10815, 7609,
	1596, 1463, -1000, -1000, 294, 713, 294, 13992, 13992, -1000,
	13992, 13992, -1000, -149, 1017, 492, -1000, 12636, 754, -1000,
	-1000, 13992, 13992, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 322, 314, 312, 27585, -1000, -1000, -1000, 778,
	808, 1329, 767, 767, -1000, -1000, 27585, -1000, -1000, -1000,
	-1000, 1600, 12636, -1000, 1116, -1000, 5745, 1549, 1258, 27585,
	1175, 1627, 15813, 27585, 1073, -1000, 490, 1460, 1253, 1257,
	1270, -1000, -1000, -1000, -1000, 1313, -1000, 1296, -1000, -1000,
	-1000, -1000, -1000, 991, 1602, 19442, 1044, -1000, 1044, -1000,
	373, -1000, -1000, -1000, -67, -81, -1000, -1000, -1000, 295,
	-1000, -1000, -1000, 580, 13992, 1619, -1000, 805, 1499, -1000,
	1487, -1000, -1000, 395, 395, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1024, -1000, 1019, 1114, 1015, 55, -1000, 1148,
	1449, 488, 488, -1000, 674, -1000, 957, -1000, 27585, -1000,
	-1000, 27585, 27585, 27585, 1591, 1112, -1000, 27585, -1000, -1000,
	27585, -1000, -1000, 1364, 165, 1013, -1000, -1000, -1000, 187,
	27585, -1000, 1045, 107, -1000, -1000, -1000, -1000, -1000, -1000,
	1177, -1000, -1000, -1000, 948, -1000, -157, 957, 27585, 27585,
	27585, -1000, 27585, -1000, -1000, -1000, 605, 605, -1000, 1447,
	-1000, 957, -1000, 13992, 2142, 2142, -1000, -1000, 915, -1000,
	1549, -1000, 915, 1181, 1181, -1000, 1181, 1183, -1000, 1181,
	71, 1181, 68, 915, 915, 2221, 2188, 2120, 1332, 1175,
	-142, -1000, 767, 12636, 1554, 1276, 1175, 1175, 1175, 995,
	803, 26, -1000, -1000, -1000, 1598, 1587, 767, -1000, -1000,
	-1000, 1509, 964, 1096, -1000, -1000, 10363, 1006, 1363, 349,
	995, 1596, 27585, 12636, -1000, -1000, 12636, 1178, -1000, 12636,
	-1000, -1000, -1000, 1596, 1596, 1044, -1000, -1000, 422, -1000,
	-1000, -1000, -1000, -1000, 2142, -103, -1000, -1000, -1000, -1000,
	-1000, 26, 802, 26, 618, -1000, 608, -1000, -1000, -220,
	-1000, -1000, 1198, 1281, -1000, -1000, 1177, -1000, -1000, -1000,
	27585, 27585, -1000, -1000, 169, -1000, 231, 985, -1000, -173,
	-1000, -1000, 1531, 27585, -1000, -1000, 7609, -1000, -1000, 1176,
	1239, -1000, -1000, -1000, -1000, -1000, -1000, 2142, -1000, 1463,
	-1000, -1000, 199, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 13992, 13992, 13992, 13992, 13992, 1549, 798, 767, 13992,
	13992, 18990, 27585, 27585, 17169, 26, 7, -1000, 12636, 12636,
	1486, -1000, 1175, -1000, 1132, 27585, 1175, 27585, -1000, 1549,
	-1000, 767, 767, 27585, 767, 1549, -1000, -1000, 395, -1000,
	395, 930, 927, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1530, 1112, -1000, 154, 27585, -1000, 187, -1000, -179,
	-182, 1179, 981, 1110, -1000, 483, 27585, 27585, -1000, -1000,
	-1000, 887, 887, 887, 887, 1103, 915, -1000, 887, 887,
	979, -1000, 979, 979, 387, -272, -1000, 1412, 1398, 767,
	1108, 1618, -1000, 1175, 1627, 348, 1096, -1000, -1000, 971,
	-1000, -1000, -1000, -1000, -1000, 1179, 1175, 1174, -1000, -1000,
	-1000, 172, -1000, 7609, 5279, 969, -1000, -1000, -1000, -1000,
	-1000, 915, 163, -166, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 7, 262, -1000, 1394, 1398, -1000, 1582, 1408, 1579,
	-1000, 27585, 1096, 27585, -1000, 172, 13088, 27585, -1000, -55,
	-1000, -1000, -1000, -1000, -1000, 1205, -1000, 1328, -152, -170,
	1395, 1404, 1404, 1394, -1000, 1565, 1563, -1000, 794, 1556,
	792, 1093, -1000, -1000, 887, 915, 908, 246, -1000, -1000,
	-157, -1000, 1325, -1000, 1389, 633, -1000, -1000, -1000, -1000,
	790, 768, -1000, 755, -1000, -1000, -1000, 1255, 124, -1000,
	-160, -1000, 631, -1000, -1000, -1000, -1000, -1000, 1247, -1000,
	1610, -1000, -167, -1000, -1000, -1000, 1616, 421, 421, -171,
	-1000, -1000, -1000, 241, 711, -1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1922, 1921, 17, 88, 80, 1920, 1919, 1917, 1910,
	128, 126, 124, 1905, 1902, 1901, 1900, 1899, 1898, 1897,
	1896, 1895, 1894, 1893, 1891, 58, 120, 34, 36, 142,
	1887, 1873, 46, 1872, 1870, 1869, 119, 114, 421, 1868,
	118, 1867, 1866, 1863, 1860, 1856, 1855, 1852, 1844, 1843,
	1842, 1841, 1840, 1839, 1838, 217, 1837, 1834, 8, 1833,
	48, 1832, 1830, 1823, 1822, 1821, 86, 1819, 1817, 1816,
	117, 1815, 1811, 42, 107, 43, 75, 1810, 1808, 74,
	735, 1806, 94, 121, 1805, 1378, 1802, 37, 84, 115,
	1801, 35, 1800, 1799, 82, 1798, 1797, 1795, 71, 1794,
	1792, 3363, 1791, 66, 77, 12, 27, 1790, 1789, 1788,
	1787, 28, 450, 1785, 1783, 24, 1781, 1780, 130, 1778,
	81, 25, 1777, 16, 13, 21, 1774, 76, 1773, 38,
	51, 30, 1771, 85, 1770, 1769, 1761, 1759, 64, 1757,
	72, 99, 47, 1755, 1754, 7, 11, 1753, 1752, 1748,
	1746, 1745, 1743, 9, 1738, 4, 1737, 39, 1736, 5,
	23, 68, 90, 26, 10, 1732, 127, 1731, 22, 109,
	67, 105, 1729, 1728, 1725, 793, 79, 138, 1724, 1723,
	32, 1721, 116, 151, 1720, 1448, 1716, 1714, 69, 1092,
	2447, 45, 112, 1710, 1709, 2127, 57, 73, 20, 1708,
	1703, 1700, 122, 110, 63, 740, 41, 1698, 1696, 1695,
	1682, 1679, 1678, 1677, 241, 31, 19, 106, 29, 1675,
	1674, 1673, 59, 53, 1672, 104, 103, 65, 125, 1669,
	113, 102, 56, 1668, 44, 1667, 1666, 1665, 1663, 50,
	1662, 1661, 1660, 1659, 101, 83, 61, 40, 1658, 33,
	93, 87, 89, 1656, 15, 140, 14, 1655, 3, 0,
	1654, 6, 134, 1491, 111, 1653, 1651, 1, 1650, 2,
	1644, 1643, 78, 1642, 1641, 1639, 1634, 2831, 327, 108,
	1633, 123,
}

//line sql.y:5147
type yySymType struct {
	union             interface{}
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	tableIdent        TableIdent
	str               string
	strs              []string
	vindexParam       VindexParam
	colIdent          ColIdent
	joinCondition     JoinCondition
	collateAndCharset CollateAndCharset
	columnType        ColumnType
	yys               int
}

func (st *yySymType) ReferenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) collateAndCharsetsUnion() []CollateAndCharset {
	v, _ := st.union.([]CollateAndCharset)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintsUnion() *IndexHints {
	v, _ := st.union.(*IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

var yyR1 = [...]int{
	0, 275, 276, 276, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 259, 259, 259, 262, 262,
	21, 50, 3, 3, 3, 3, 2, 2, 8, 9,
	4, 5, 5, 10, 10, 62, 62, 11, 12, 12,
	12, 12, 279, 279, 96, 96, 94, 94, 95, 95,
	161, 161, 13, 14, 14, 171, 171, 170, 170, 170,
	172, 172, 172, 172, 205, 205, 15, 15, 15, 15,
	15, 71, 71, 261, 261, 260, 258, 258, 257, 257,
	256, 23, 24, 33, 33, 33, 33, 34, 35, 263,
	263, 235, 39, 39, 38, 38, 38, 38, 40, 40,
	37, 37, 36, 36, 237, 237, 224, 224, 236, 236,
	236, 236, 236, 236, 236, 223, 144, 144, 144, 144,
	144, 144, 144, 144, 144, 144, 144, 207, 207, 207,
	207, 210, 210, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 209, 209, 209, 209, 209, 211, 211, 211,
	211, 211, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 213, 213, 213,
	213, 213, 213, 213, 213, 222, 222, 214, 214, 217,
	217, 218, 218, 218, 219, 219, 220, 220, 215, 215,
	215, 215, 216, 216, 216, 225, 249, 249, 248, 248,
	246, 246, 246, 246, 234, 234, 243, 243, 243, 243,
	243, 233, 233, 229, 229, 229, 230, 230, 231, 231,
	228, 228, 232, 232, 245, 245, 244, 226, 226, 227,
	227, 251, 251, 251, 251, 252, 268, 269, 267, 267,
	267, 267, 267, 60, 60, 60, 184, 184, 184, 241,
	241, 240, 240, 240, 242, 242, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 239, 239, 239, 239, 239,
	239, 239, 239, 239, 239, 179, 179, 179, 266, 266,
	266, 266, 266, 266, 265, 265, 265, 238, 238, 238,
	264, 264, 130, 130, 131, 131, 30, 30, 30, 30,
	30, 30, 29, 29, 29, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 31, 31, 26,
	26, 26, 26, 26, 26, 26, 26, 26, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 221, 221, 221, 253, 253,
	254, 254, 17, 22, 22, 18, 18, 18, 18, 19,
	19, 41, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 270, 270, 178, 178,
	186, 186, 177, 177, 176, 176, 176, 180, 180, 180,
	181, 181, 274, 274, 274, 43, 43, 45, 45, 46,
	47, 47, 200, 200, 201, 201, 48, 49, 61, 61,
	61, 61, 61, 61, 63, 63, 63, 7, 7, 7,
	7, 57, 57, 57, 6, 6, 44, 44, 51, 271,
	271, 272, 273, 273, 273, 273, 52, 54, 20, 20,
	20, 20, 20, 20, 78, 78, 66, 66, 66, 66,
	66, 66, 66, 66, 66, 66, 66, 66, 72, 72,
	72, 67, 67, 280, 55, 56, 56, 70, 70, 70,
	64, 64, 64, 69, 69, 69, 75, 75, 77, 77,
	77, 77, 77, 79, 79, 79, 79, 79, 79, 79,
	74, 74, 76, 76, 76, 76, 193, 193, 193, 192,
	192, 86, 86, 87, 87, 88, 88, 89, 89, 89,
	128, 104, 104, 160, 160, 159, 159, 162, 162, 90,
	90, 90, 90, 91, 91, 92, 92, 93, 93, 199,
	199, 198, 198, 198, 197, 197, 97, 97, 97, 99,
	98, 98, 98, 98, 100, 100, 102, 102, 101, 101,
	103, 105, 105, 105, 105, 105, 106, 106, 85, 85,
	85, 85, 85, 85, 85, 85, 174, 174, 108, 108,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	119, 119, 119, 119, 119, 119, 109, 109, 109, 109,
	109, 109, 109, 73, 73, 120, 120, 120, 127, 121,
	121, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 112, 112, 116, 116, 116, 116, 114,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 114,
	114, 114, 115, 115, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 115, 115, 281, 281,
	118, 117, 117, 117, 117, 117, 117, 117, 68, 68,
	68, 68, 68, 204, 204, 204, 206, 206, 206, 206,
	206, 206, 206, 206, 206, 206, 206, 206, 206, 134,
	134, 65, 65, 132, 132, 133, 135, 135, 129, 129,
	129, 111, 111, 111, 111, 111, 111, 111, 111, 113,
	113, 113, 136, 136, 137, 137, 138, 138, 139, 139,
	140, 141, 141, 141, 142, 142, 142, 142, 32, 32,
	32, 32, 32, 27, 27, 27, 27, 28, 28, 28,
	80, 80, 80, 80, 82, 82, 81, 81, 58, 58,
	59, 59, 59, 83, 83, 84, 84, 84, 84, 157,
	157, 157, 143, 143, 143, 143, 149, 149, 149, 145,
	145, 147, 147, 147, 148, 148, 148, 146, 154, 154,
	156, 156, 155, 155, 151, 151, 152, 152, 153, 153,
	153, 150, 150, 110, 110, 110, 110, 110, 158, 158,
	158, 158, 163, 163, 123, 123, 125, 125, 124, 126,
	164, 164, 168, 165, 165, 169, 169, 169, 169, 169,
	166, 166, 167, 167, 194, 194, 194, 173, 173, 185,
	185, 182, 182, 183, 183, 175, 175, 187, 187, 187,
	53, 122, 122, 250, 250, 247, 190, 190, 191, 191,
	195, 195, 196, 196, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 189, 189, 189, 189, 189,
	189, 189, 189, 189, 277, 278, 202, 203, 203, 203,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 0, 1,
	2, 3, 5, 6, 6, 7, 4, 6, 5, 7,
	8, 1, 3, 7, 8, 1, 1, 9, 9, 8,
	7, 7, 1, 1, 1, 3, 1, 3, 1, 3,
	0, 4, 3, 5, 4, 1, 3, 3, 2, 2,
	2, 2, 2, 1, 1, 1, 2, 2, 6, 11,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 5, 3, 6, 7, 7, 7, 5, 2, 1,
	1, 4, 0, 1, 1, 1, 2, 2, 0, 1,
	4, 4, 4, 4, 2, 4, 1, 3, 1, 1,
	3, 4, 3, 3, 3, 3, 0, 2, 3, 3,
	4, 2, 3, 3, 2, 3, 2, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 2,
	2, 2, 0, 2, 2, 5, 0, 1, 1, 2,
	1, 3, 2, 3, 0, 1, 3, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 3, 1, 3,
	1, 10, 11, 11, 12, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 1, 0, 1, 2, 0,
	1, 1, 3, 2, 1, 2, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 4, 5, 0, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 0, 2, 0, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 6, 5, 5, 2, 2, 2, 2,
	3, 3, 3, 4, 1, 3, 5, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 4,
	4, 2, 10, 3, 6, 7, 5, 5, 5, 12,
	7, 5, 9, 5, 3, 7, 4, 4, 4, 4,
	3, 3, 3, 7, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 0, 2, 2, 1, 3,
	8, 8, 3, 3, 5, 6, 6, 5, 5, 3,
	2, 3, 3, 3, 7, 3, 3, 3, 3, 4,
	7, 5, 2, 4, 4, 4, 4, 4, 5, 5,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 2, 4, 2, 4, 5, 4, 4, 3, 3,
	5, 2, 3, 3, 3, 3, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	6, 4, 7, 6, 1, 3, 2, 2, 2, 2,
	1, 1, 1, 3, 2, 1, 1, 1, 0, 1,
	1, 0, 3, 0, 2, 0, 2, 1, 2, 2,
	0, 1, 1, 0, 1, 1, 0, 1, 0, 1,
	2, 3, 4, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 2, 1, 3, 1, 1, 1, 3, 3,
	3, 3, 7, 0, 3, 1, 3, 1, 3, 4,
	4, 4, 3, 2, 4, 0, 1, 0, 2, 0,
	1, 0, 1, 2, 1, 1, 1, 2, 2, 1,
	2, 3, 2, 3, 2, 2, 2, 1, 1, 3,
	3, 0, 5, 4, 5, 5, 0, 2, 1, 3,
	3, 3, 2, 3, 1, 2, 0, 3, 1, 1,
	3, 3, 4, 4, 5, 3, 4, 5, 6, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 0, 2, 1, 1, 1, 3, 1,
	3, 1, 1, 1, 1, 1, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 1, 1, 1, 1, 4, 5, 5, 6, 4,
	4, 6, 6, 6, 8, 8, 8, 8, 9, 8,
	5, 4, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 8, 8, 0, 2,
	3, 4, 4, 4, 4, 4, 4, 4, 0, 3,
	4, 7, 3, 1, 1, 1, 2, 3, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 0,
	1, 0, 2, 1, 2, 4, 0, 2, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 0, 3, 1, 3,
	2, 0, 1, 1, 0, 2, 4, 4, 0, 2,
	2, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	0, 3, 3, 3, 0, 3, 1, 1, 0, 4,
	0, 1, 1, 0, 3, 1, 3, 2, 1, 0,
	2, 4, 0, 9, 3, 5, 0, 3, 3, 0,
	1, 0, 2, 2, 0, 2, 2, 2, 0, 2,
	1, 2, 3, 3, 0, 2, 1, 2, 3, 4,
	3, 0, 1, 2, 1, 5, 4, 4, 1, 3,
	3, 5, 0, 5, 1, 3, 1, 2, 3, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 0, 2, 0, 3, 0, 1, 0, 1, 1,
	5, 0, 1, 0, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -275, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -41, -42, -43, -45,
	-46, -47, -48, -49, -6, -44, -20, -21, -50, -51,
	-52, -53, -54, -4, -277, 6, 7, 8, -62, 10,
	11, 31, -23, -33, 153, -34, -24, 154, -35, 156,
	155, 192, 157, 185, 71, 228, 229, 231, 232, 233,
	234, -63, 190, 191, 159, 35, 42, 32, 33, 36,
	162, 81, 9, 331, 187, 186, 26, -276, 471, -70,
	5, -138, 16, -3, -55, -280, -55, -55, -55, -55,
	-55, -55, -235, -237, 81, 126, 81, -71, -185, 165,
	174, 173, 170, -263, 107, 220, 322, 163, -39, -38,
	-37, -36, -40, 30, -30, -31, -255, -29, -26, 158,
	155, 200, 102, 103, 192, 193, 194, 157, 176, 191,
	195, 190, 209, -25, 77, 32, 344, 347, -242, 154,
	160, 161, 332, 105, 104, 72, 156, -239, 278, 448,
	-40, 450, 95, 97, 449, 41, 165, 451, 452, 453,
	454, 175, 455, 456, 457, 458, 464, 465, 466, 467,
	106, 5, 164, -263, -80, 288, 77, -262, -259, 84,
	85, 86, 164, -185, 165, 166, -263, 164, -101, -195,
	-259, -189, 341, 178, 375, 376, 225, 77, 278, 448,
	228, 242, 236, 263, 255, 342, 377, 179, 213, 445,
	253, 256, 309, 450, 378, 193, 301, 283, 291, 95,
	231, 318, 463, 379, 461, 97, 449, 76, 48, 41,
	188, 251, 247, 451, 214, 380, 352, 207, 105, 102,
	470, 245, 47, 28, 460, 104, 46, 452, 381, 453,
	293, 268, 439, 45, 306, 194, 382, 80, 346, 447,
	295, 246, 292, 224, 459, 159, 383, 431, 303, 440,
	384, 269, 273, 385, 310, 49, 386, 387, 441, 103,
	388, 75, 454, 240, 241, 389, 222, 177, 312, 267,
	175, 34, 296, 343, 226, 55, 201, 313, 43, 271,
	42, 435, 390, 438, 266, 262, 50, 391, 392, 393,
	394, 455, 265, 239, 261, 469, 219, 456, 59, 161,
	275, 274, 276, 208, 308, 258, 395, 396, 397, 182,
	78, 398, 248, 19, 399, 400, 304, 215, 401, 53,
	402, 403, 316, 191, 404, 51, 457, 38, 196, 458,
	405, 406, 407, 408, 409, 302, 410, 294, 270, 272,
	203, 290, 345, 411, 244, 195, 462, 412, 183, 446,
	197, 200, 190, 317, 184, 413, 414, 415, 416, 417,
	418, 419, 232, 464, 40, 420, 421, 422, 423, 223,
	218, 311, 320, 58, 79, 280, 424, 444, 238, 216,
	425, 229, 52, 465, 466, 467, 210, 468, 286, 106,
	220, 221, 44, 259, 202, 426, 427, 249, 250, 264,
	237, 260, 230, 432, 204, 305, 192, 428, 319, 217,
	281, 349, 209, 307, 443, 348, 257, 254, 211, 429,
	166, 205, 206, 430, 433, 297, 287, 298, 299, 227,
	300, 288, 212, 347, 252, 282, 164, -166, 283, -186,
	284, 285, 296, 297, 303, -178, 304, 302, 203, -274,
	310, 164, 305, 153, 144, 293, 294, 287, 300, 288,
	212, -270, -259, 453, 468, 309, 256, 289, 295, 311,
	435, 299, 298, -195, 230, -200, 235, -190, -259, -189,
	233, -101, -61, 431, 157, -202, -202, -72, 435, 437,
	-121, -85, -107, 110, -112, 30, 24, -111, -108, -129,
	-126, -127, 144, 145, 147, 146, 148, 133, 134, 141,
	111, 149, -116, -114, -115, -117, 88, 87, 96, 89,
	90, 91, 92, 98, 99, 100, -190, -195, -124, -277,
	65, 66, 332, 333, 334, 335, 340, 336, 113, 54,
	321, 330, 329, 328, 325, 326, 323, 324, 338, 339,
	169, 322, 163, 139, 331, -259, -189, 41, 286, 286,
	-101, 227, -5, -4, -277, 6, 21, 22, -142, 18,
	17, -278, 83, -64, -77, 60, 61, -79, 22, 37,
	64, 62, 21, -56, -76, 135, -85, -195, -76, -175,
	168, -175, -175, -165, -205, 230, -169, 311, 310, -191,
	-167, -190, -188, -166, 308, 158, 350, 109, 23, 25,
	112, 144, 17, 113, 36, 160, 176, 143, 172, 332,
	153, 69, 351, 323, 324, 321, 327, 334, 335, 322,
	284, 30, 11, 353, 26, 186, 22, 37, 137, 155,
	116, 117, 189, 24, 187, 100, 356, 20, 72, 181,
	12, 174, 14, 357, 358, 15, 169, 168, 128, 165,
	67, 9, 149, 27, 125, 63, 359, 29, 360, 361,
	362, 363, 65, 126, 18, 325, 326, 32, 436, 364,
	340, 198, 139, 70, 56, 437, 110, 365, 366, 98,
	367, 101, 73, 442, 107, 16, 68, 39, 368, 199,
	369, 171, 370, 314, 371, 127, 156, 331, 66, 372,
	163, 285, 6, 337, 31, 185, 173, 64, 373, 164,
	115, 338, 339, 167, 99, 5, 170, 33, 10, 71,
	74, 328, 329, 330, 54, 344, 114, 13, 374, 315,
	108, 309, 256, -236, 126, -223, -227, -190, 180, -252,
	176, -101, -245, -244, -190, -80, 164, -259, 165, 165,
	165, -55, 331, -36, -37, -166, 143, 197, 82, 82,
	-227, -226, -225, -264, 199, 180, -251, -243, 172, 181,
	-233, 173, 174, -228, 165, 29, -264, -228, 171, 181,
	199, 199, 106, 199, 106, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 196, -234, 118, -234, 348, 348,
	-239, -264, -264, -264, 167, 34, 34, -187, -228, 167,
	23, -234, -234, -166, 143, -234, -234, -234, -234, 207,
	207, -234, -234, -234, -234, -234, -234, -234, -234, -234,
	-234, -234, -234, -234, -234, -234, -101, -83, 214, 153,
	155, 158, 73, 118, -38, 209, -22, -101, 164, -259,
	-182, 169, -55, -101, 150, -101, -180, 126, 13, -180,
	-177, 286, 290, 291, 292, -180, -180, -180, -180, 210,
	301, -229, 165, 34, 177, 286, 210, 301, 210, 211,
	210, 211, 210, -176, 12, 128, 322, 306, 303, 203,
	164, 204, 166, 307, -259, 438, 211, -176, 286, 206,
	-180, -203, -277, -191, -203, -203, 31, 167, -190, -57,
	-190, 88, -7, -3, -11, -10, -12, 118, -78, 286,
	-66, 144, 453, 439, 440, 441, 438, 302, 446, 444,
	442, 210, 443, 82, 109, 107, 108, 125, -85, -109,
	128, 110, 126, 127, 112, 130, 129, 140, 133, 134,
	135, 136, 137, 138, 139, 131, 132, 143, 118, 119,
	120, 121, 122, 123, 124, -174, -277, -127, -277, 151,
	152, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -277, 150, -2, -121, -4, -277, -277, -277, -277,
	-277, -277, -277, -277, -134, -85, -277, -281, -118, -277,
	-281, -118, -281, -118, -281, -277, -281, -118, -281, -118,
	-281, -281, -118, -277, -277, -277, -277, -277, -277, -277,
	-202, -271, -272, -104, -101, -277, 88, -138, -3, -55,
	-157, 20, 32, -85, -139, -140, -85, -138, 56, -74,
	-76, -79, 60, 61, 94, 12, -193, -192, 23, -190,
	88, 150, 12, -102, 27, -101, -87, -88, -89, -90,
	-104, -128, -277, 12, -94, -95, -101, -103, -195, 82,
	230, -169, -205, -171, -170, 312, 314, 118, -194, -190,
	88, 30, 83, 82, -101, -207, -210, -212, -211, -213,
	-208, -209, 253, 254, 144, 257, 259, 260, 261, 262,
	263, 264, 265, 266, 267, 268, 31, 188, 249, 250,
	251, 252, 269, 270, 271, 272, 273, 274, 275, 276,
	236, 255, 342, 237, 238, 239, 240, 241, 242, 244,
	245, 246, 247, 248, -262, -259, 81, 83, 82, -214,
	81, -83, -183, 169, -250, -247, 74, -259, -259, -259,
	-183, -234, -234, 196, -29, -26, -255, 16, -25, -26,
	158, 102, 103, 155, 81, -223, 81, -232, -262, -259,
	81, 29, 171, 170, -231, -228, -231, -232, -259, -129,
	-190, -195, -259, 29, 29, -162, -190, -162, -162, 21,
	-162, 21, -162, 21, 89, -190, -162, 21, -162, 21,
	-162, 21, -162, 21, -162, 21, 30, 75, 76, 30,
	78, 79, 80, -129, -129, -223, -166, -101, -259, 89,
	89, -234, -234, 89, 88, 88, 88, -234, -234, 89,
	88, -259, 88, -265, 182, 224, 226, 89, 89, 89,
	89, 30, 88, -266, 30, 460, 459, 461, 462, 463,
	89, 30, 89, 30, 89, -190, 81, -82, 216, 118,
	205, 205, 164, 164, 218, -101, 217, 219, 221, 41,
	82, 167, -182, 73, -96, -101, 24, -182, -196, -195,
	-188, 88, -85, -230, 12, 128, -176, -176, -180, -101,
	-230, -176, -180, -101, -180, -180, -180, -180, -176, -180,
	-195, -195, -101, -101, -101, -101, -101, -101, -101, -203,
	-203, -203, -181, 126, -180, 73, -201, 233, 267, 432,
	433, 434, 82, 344, -94, 438, 438, 438, 438, 438,
	438, -85, -85, -85, -85, -119, 98, 110, 99, 100,
	-112, -120, -124, -127, 93, 128, 126, 127, 112, -112,
	-112, -112, -112, -112, -112, -112, -112, -112, -112, -112,
	-112, -112, -112, -112, -204, -259, 88, 144, -259, -111,
	-111, -190, -75, 22, 37, -74, -191, -196, -188, -70,
	-278, -278, -138, -74, -74, -85, -85, -129, 88, -74,
	-129, 88, -74, -74, -69, 22, 37, -132, -133, 114,
	-129, -278, -112, -190, -190, -74, -75, -75, -74, -74,
	82, -273, 314, 315, 436, -198, 199, -197, 23, -195,
	88, -122, -121, -142, -278, -143, 27, 10, 128, 82,
	19, 82, -141, 25, 26, -142, -113, -190, 89, 92,
	-86, 82, 12, -79, -101, -192, 135, -196, -101, -161,
	199, -101, 31, 82, -97, -99, -98, -100, 63, 67,
	69, 64, 65, 66, 70, -199, 23, -87, -3, -277,
	-101, -94, -279, 82, 12, 74, -279, 82, 150, -169,
	-171, 82, 313, 315, 316, 73, 101, -85, -216, 143,
	-241, -240, -239, -223, -225, -226, -227, 83, -144, -219,
	281, -214, -214, -214, -214, -214, -215, -166, -215, -215,
	-215, 81, 81, -214, -214, -214, -214, -217, 81, -217,
	-217, -218, 81, -218, -252, -85, -249, -248, -246, -247,
	175, 95, 344, -244, -141, 89, -82, -101, 110, 73,
	-190, -250, -250, -250, -259, -259, 88, -259, 88, 82,
	17, -224, -223, -130, 224, -254, 199, -251, -245, 81,
	29, -231, -232, -232, 150, -259, 82, 27, 106, 106,
	106, 106, 344, 155, 31, -223, -130, -204, 167, -204,
	-204, 88, 88, -179, 468, -94, 166, 223, -84, 327,
	88, 84, -101, -101, -101, -101, -101, 158, 155, 207,
	-101, -101, -94, -101, 82, -60, 184, 179, -259, -101,
	-180, -180, -101, -180, -180, 88, -101, -190, -66, 314,
	344, 20, -67, 20, 98, 99, 100, -120, -112, -112,
	-112, -73, 189, 109, -278, -278, -74, -74, -277, 150,
	-5, -142, -278, -278, 82, 74, 23, 12, 12, -278,
	12, 12, -278, -278, -74, -135, -133, 116, -85, -278,
	-278, 82, 82, -278, -278, -278, -278, -278, -272, 435,
	315, -105, 71, 168, 72, -277, -197, -278, -157, 39,
	47, 58, -85, -85, -140, -157, -173, 20, 12, 54,
	54, -106, 13, -76, -87, -79, 150, -106, -110, 31,
	54, -3, -277, -277, -164, -168, -129, -88, -89, -89,
	-88, -89, 63, 63, 63, 68, 63, 68, 63, -98,
	-195, -278, -278, -3, -161, 74, -87, -101, -87, -103,
	-195, 135, -170, -172, 317, 314, 320, -259, 88, 82,
	-239, -227, 98, 110, 30, 73, 278, 95, 171, 29,
	170, -220, 282, -215, -215, -216, -259, 88, 144, -216,
	-216, -216, -222, 88, -222, 89, 89, 83, -32, -27,
	-28, 32, 77, -246, -234, 88, 38, 83, 166, 24,
	-101, 73, 73, 73, 16, -159, -190, 82, 83, -131,
	225, -129, 83, -190, 83, -159, -232, -191, -190, -277,
	164, 30, 30, -130, -131, -216, -259, 470, 469, 83,
	-101, -81, 214, 222, 81, 85, -261, 74, 205, 278,
	205, 208, 167, -60, -32, -101, -176, -176, 32, 314,
	447, 445, -73, 109, -112, -112, -278, -278, -75, -191,
	-138, -157, -206, 144, 253, 188, 251, 247, 267, 258,
	280, 249, 281, -204, -206, -112, -112, -112, -112, 341,
	-138, 117, -85, 115, -112, -112, 165, 165, 165, -162,
	40, 88, 88, 59, -101, -136, 14, -85, 135, -142,
	-163, 73, -164, -123, -125, -124, -277, -158, -278, -190,
	-162, -106, 82, 118, -92, -91, 73, 74, -93, 73,
	-91, 63, 63, -278, -106, -87, -106, -106, 150, 314,
	318, 319, -239, 98, -112, 10, 88, 29, 29, -216,
	-216, 83, 82, 83, 82, 83, 82, -184, 381, 110,
	-28, -27, -234, -234, 89, -259, -101, -101, -101, -101,
	17, 82, -223, -129, 54, -249, 83, -253, -254, -101,
	-111, -131, -160, 81, 83, -258, 344, -260, -259, -190,
	-190, -190, -101, -180, -180, 32, -259, -112, -278, -142,
	-278, -214, -214, -214, -218, -214, 241, -214, 241, -278,
	-278, 20, 20, 20, 20, -277, -65, 337, -85, 82,
	82, -277, -277, -277, -278, 88, -215, -137, 15, 17,
	28, -163, 82, -278, -278, 82, 54, 150, -278, -138,
	-168, -85, -85, 81, -85, -138, -106, -115, -215, 88,
	-215, 89, 89, 381, 30, 78, 79, 80, 30, 75,
	76, -160, -159, -190, 201, 183, -278, 82, -221, 344,
	347, 23, -159, -257, -256, -191, 81, 74, -157, -215,
	-259, -112, -112, -112, -112, -112, -142, 88, -112, -112,
	-159, -278, -159, -159, -198, -215, -146, -151, -177, -85,
	-121, 29, -125, 54, -3, -190, -123, -190, -142, -159,
	-142, -216, -216, 83, 83, 23, 202, -101, -254, 348,
	348, -3, 83, 82, 118, -159, -101, -278, -278, -278,
	-278, -68, 128, 344, -278, -278, -278, -278, -278, -278,
	-105, -149, 431, -154, 43, -152, -153, 44, -150, 45,
	53, 10, -123, 150, 83, -3, -277, 81, -58, 344,
	-256, -238, -191, 88, 89, 83, -278, 342, 70, 345,
	-146, 48, 259, -156, -155, 52, 44, -153, 17, 46,
	17, -164, -190, -58, -112, 198, -159, -59, 213, 435,
	-261, 59, 343, 346, -147, 50, -145, 49, -145, -155,
	17, 17, 88, 17, 88, -278, -278, 83, 176, -258,
	59, -148, 51, 73, 101, 88, 88, 88, -268, -269,
	73, 215, 344, 73, 101, -269, 73, 11, 10, 345,
	-267, 184, 179, 182, 31, -267, 346, 178, 30, 98,
}

var yyDef = [...]int{
	34, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 32, 33, 816, 0, 553, 553, 553, 553, 553,
	553, 553, 0, 0, -2, -2, -2, 840, 38, 0,
	929, 0, 0, -2, 486, 487, 0, 489, -2, 0,
	0, 498, 1356, 1356, 548, 0, 0, 0, 0, 0,
	0, 1354, 55, 56, 504, 505, 506, 1, 3, 0,
	557, 824, 0, 0, -2, 555, 0, 0, 935, 935,
	935, 0, 86, 87, 0, 0, 0, 840, 0, 0,
	0, 0, 0, 553, 0, 930, 109, 110, 90, -2,
	114, 115, 0, 119, 368, 329, 371, 327, 357, -2,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 332, 224, 224, 0, 0, -2, 320,
	320, 320, 0, 0, 0, 354, 937, 274, 224, 224,
	0, 224, 224, 224, 224, 0, 0, 224, 224, 224,
	224, 224, 224, 224, 224, 224, 224, 224, 224, 224,
	224, 224, 0, 108, 853, 0, 0, 118, 39, 35,
	36, 37, 0, 0, 0, 931, 553, 0, 420, 638,
	950, 951, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097,
	1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107,
	1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117,
	1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127,
	1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137,
	1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147,
	1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157,
	1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167,
	1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177,
	1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187,
	1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197,
	1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207,
	1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217,
	1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227,
	1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237,
	1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247,
	1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257,
	1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267,
	1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277,
	1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287,
	1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297,
	1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307,
	1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317,
	1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327,
	1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337,
	1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347,
	1348, 1349, 1350, 1351, 1352, 1353, 0, 477, 477, 0,
	477, 477, 477, 477, 0, 0, 0, 432, 0, 0,
	0, 0, 474, 0, 0, 451, 453, 0, 474, 0,
	461, 477, 1357, 1357, 1357, 920, 0, 471, 469, 483,
	484, 466, 467, 485, 488, 0, 493, 496, 946, 947,
	0, 511, 0, 1165, 503, 516, 517, 0, 549, 550,
	40, 689, 648, 0, 654, 656, 0, 691, 692, 693,
	694, 695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 721, 722, 723, 724, 801, 802, 803, 804,
	805, 806, 807, 808, 658, 659, 798, 0, 909, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 789, 0,
	758, 758, 758, 758, 758, 758, 758, 758, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 1356, 0, 526,
	0, 0, 816, 51, 0, 553, 558, 559, 859, 0,
	0, 816, 1355, 0, 0, -2, -2, 569, 575, 576,
	577, 578, 579, 554, 0, 582, 586, 0, 0, 0,
	936, 0, 0, 72, 0, 1320, 913, -2, -2, 0,
	0, 948, 949, 922, -2, 954, 955, 956, 957, 958,
	959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 973, 974, 975, 976, 977, 978,
	979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998,
	999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
	1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028,
	1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038,
	1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048,
	1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058,
	1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068,
	1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078,
	1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088,
	1089, -2, 1109, 0, 0, 128, 129, 0, 38, 250,
	0, 124, 0, 244, 197, 853, 933, 943, 0, 0,
	0, 933, 92, 116, 117, 224, 224, 0, 118, 118,
	336, 337, 338, 0, 0, -2, 248, 0, 321, 0,
	0, 238, 238, 242, 240, 241, 0, 0, 0, 0,
	0, 0, 348, 0, 349, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 404, 0, 225, 0, 366, 367,
	275, 0, 0, 0, 0, 346, 347, 0, 0, 938,
	939, 0, 0, 224, 224, 0, 0, 0, 0, 224,
	224, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 844, 0, 0,
	0, 0, 0, 0, -2, 0, 412, 0, 931, 0,
	0, 0, 931, 419, 0, 421, 422, 0, 0, 423,
	0, 474, 474, 472, 473, 425, 426, 427, 428, 477,
	0, 0, 233, 234, 235, 474, 477, 0, 477, 477,
	477, 477, 474, 477, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1357, 1357, 1357, 480, 477, 458, 459,
	462, 463, 1358, 1359, 464, 465, 921, 494, 497, 514,
	512, 513, 515, 507, 508, 509, 510, 0, 528, 529,
	534, 0, 0, 0, 0, 540, 541, 542, 0, 0,
	545, 546, 547, 0, 0, 0, 0, 0, 652, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 676, 677,
	678, 679, 680, 681, 682, 655, 0, 669, 0, 0,
	0, 711, 712, 713, 714, 715, 716, 717, 718, 719,
	0, 566, 0, 0, 0, 816, 0, 0, 0, 0,
	0, 0, 0, 563, 0, 790, 0, 742, 750, 0,
	743, 751, 744, 752, 745, 0, 746, 753, 747, 754,
	748, 749, 755, 0, 0, 0, 566, 566, 0, 0,
	41, 518, 519, 0, 621, 941, 527, 824, 0, 568,
	862, 0, 0, 825, 817, 818, 821, 824, 0, 591,
	580, 570, 573, 574, 556, 0, 583, 587, 0, 589,
	590, 0, 0, 70, 0, 637, 0, 593, 595, 596,
	597, 619, 0, 0, 0, 0, 66, 68, 638, 0,
	1320, 919, 0, 74, 75, 0, 0, 0, 212, 924,
	925, 926, -2, 231, 0, 136, 204, 148, 149, 150,
	197, 152, 197, 197, 197, 197, 208, 208, 208, 208,
	180, 181, 182, 183, 184, 0, 0, 167, 197, 197,
	197, 197, 187, 188, 189, 190, 191, 192, 193, 194,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 199,
	199, 199, 201, 201, 0, 39, 0, 216, 0, 821,
	0, 844, 0, 0, 0, 944, 0, 943, 943, 943,
	0, 0, 0, 369, 330, 358, 370, 0, 333, 334,
	-2, 0, 0, 320, 0, 322, 0, 232, 0, -2,
	0, 0, 0, 238, 242, 239, 242, 230, 243, 350,
	798, 0, 351, 352, 0, 384, 607, 0, 0, 0,
	0, 0, 390, 391, 392, 0, 394, 395, 396, 397,
	398, 399, 400, 401, 402, 403, 359, 360, 361, 362,
	363, 364, 365, 0, 0, 322, 0, 355, 0, 276,
	277, 0, 0, 280, 281, 282, 283, 0, 0, 286,
	287, 288, 289, 290, 314, 315, 316, 291, 292, 293,
	294, 295, 296, 297, 308, 309, 310, 311, 312, 313,
	298, 299, 300, 301, 302, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 841, 842, 843, 0,
	0, 0, 0, 0, 263, 64, 932, 0, 639, 952,
	953, 478, 479, 0, 236, 237, 477, 477, 429, 452,
	0, 477, 433, 454, 434, 436, 435, 437, 477, 440,
	475, 476, 441, 442, 443, 444, 445, 446, 447, 448,
	449, 450, 456, 0, 457, 0, 0, 495, 499, 500,
	501, 502, 0, 0, 531, 536, 537, 538, 539, 551,
	544, 690, 649, 650, 651, 653, 670, 0, 672, 674,
	660, 661, 685, 686, 687, 0, 0, 0, 0, 683,
	665, 0, 696, 697, 698, 699, 700, 701, 702, 703,
	704, 705, 706, 707, 710, 773, 774, 775, 0, 708,
	709, 720, 0, 0, 0, 567, 799, 0, -2, 0,
	688, 908, 824, 0, 0, 0, 0, 693, 801, 0,
	693, 801, 0, 0, 0, 564, 565, 796, 793, 0,
	0, 759, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 521, 522, 524, 0, 641, 0, 622, 0, 624,
	625, 0, 942, 859, 52, 42, 0, 860, 0, 0,
	0, 0, 820, 822, 823, 859, 0, 809, 0, 0,
	646, 0, 0, 571, 48, 588, 584, 0, 646, 0,
	0, 636, 0, 0, 0, 0, 0, 0, 626, 0,
	0, 629, 0, 0, 0, 0, 620, 0, 0, 0,
	-2, 0, 0, 0, 62, 63, 0, 0, 0, 914,
	73, 0, 0, 78, 79, 915, 916, 917, 918, 0,
	111, -2, 271, 130, 132, 133, 134, 125, 135, 206,
	205, 151, 208, 208, 174, 175, 212, 0, 212, 212,
	212, 0, 0, 168, 169, 170, 171, 162, 0, 163,
	164, 165, 0, 166, 249, 0, 828, 217, 218, 220,
	224, 0, 0, 245, 246, 0, 0, 101, 0, 0,
	945, 0, 0, 0, 107, 120, 121, 122, 123, 118,
	0, 0, 126, 324, 0, 0, 0, 247, 0, 0,
	226, 242, 227, 228, 0, 353, 0, 0, 386, 387,
	388, 389, 0, 0, 0, 322, 324, 212, 0, 278,
	279, 284, 285, 303, 0, 0, 0, 0, 854, 855,
	0, 858, 93, 376, 378, 377, 381, 0, 0, 0,
	0, 413, 263, 828, 0, 417, 264, 265, 418, 474,
	439, 455, 474, 431, 438, 481, 460, 491, 535, 0,
	0, 0, 543, 0, 671, 673, 675, 662, 683, 666,
	0, 663, 0, 0, 657, 725, 0, 0, 566, 0,
	816, 859, 729, 730, 0, 0, 0, 0, 0, 766,
	0, 0, 767, 0, 816, 0, 794, 0, 0, 741,
	760, 0, 0, 761, 762, 763, 764, 765, 520, 523,
	525, 601, 0, 0, 0, 0, 623, 940, 44, 0,
	0, 0, 826, 827, 819, 43, 0, 927, 928, 810,
	811, 812, 0, 581, 592, 572, 0, 824, 902, 0,
	0, 894, 0, 0, 646, 910, 0, 594, 615, 617,
	0, 612, 627, 628, 630, 0, 632, 0, 634, 635,
	598, 599, 600, 0, 646, 0, 646, 67, 646, 69,
	0, 640, 76, 77, 0, 0, 83, 213, 214, 118,
	273, 131, 137, 0, 0, 0, 141, 0, 0, 144,
	146, 147, 207, 212, 212, 176, 209, 210, 211, 177,
	178, 179, 0, 195, 0, 0, 0, 266, 88, 832,
	831, 224, 224, 219, 0, 222, 0, 198, 0, 934,
	103, 0, 0, 0, 0, 328, 605, 0, 339, 340,
	0, 323, 383, 0, 216, 0, 229, 799, 608, 0,
	0, 341, 0, 324, 344, 345, 356, 306, 307, 304,
	603, 845, 846, 847, 0, 857, 96, 0, 0, 0,
	0, 374, 0, 415, 416, 65, 477, 477, 530, 0,
	533, 0, 664, 0, 684, 667, 726, 727, 0, 800,
	824, 46, 0, 197, 197, 779, 197, 201, 782, 197,
	784, 197, 787, 0, 0, 0, 0, 0, 0, 0,
	791, 740, 797, 0, 0, 0, 0, 0, 0, 0,
	0, 208, 864, 861, 45, 814, 0, 647, 585, 49,
	53, 0, 902, 893, 904, 906, 0, 0, 0, 898,
	0, 816, 0, 0, 609, 616, 0, 0, 610, 0,
	611, 631, 633, -2, 816, 646, 60, 61, 0, 80,
	81, 82, 272, 138, 139, 0, 142, 143, 145, 172,
	173, 208, 0, 208, 0, 202, 0, 255, 267, 0,
	829, 830, 0, 0, 221, 223, 603, 104, 105, 106,
	0, 0, 127, 325, 0, 215, 0, 0, 408, 405,
	342, 343, 0, 0, 856, 375, 0, 94, 95, 0,
	0, 380, 414, 424, 430, 532, 552, 668, 728, 859,
	731, 776, 208, 780, 781, 783, 785, 786, 788, 733,
	732, 0, 0, 0, 0, 0, 824, 0, 795, 0,
	0, 0, 0, 0, 621, 208, 884, 50, 0, 0,
	0, 54, 0, 907, 0, 0, 0, 0, 71, 824,
	911, 912, 613, 0, 618, 824, 59, 140, 212, 196,
	212, 0, 0, 268, 833, 834, 835, 836, 837, 838,
	839, 0, 331, 606, 0, 0, 385, 0, 393, 0,
	0, 0, 0, 97, 98, 0, 0, 0, 47, 777,
	778, 0, 0, 0, 0, 768, 0, 792, 0, 0,
	0, 643, 0, 0, 641, 866, 865, 878, 891, 815,
	813, 0, 905, 0, 897, 900, 896, 899, 57, 0,
	58, 185, 186, 200, 203, 0, 0, 0, 409, 406,
	407, 848, 604, 0, 0, 0, 382, 734, 736, 735,
	737, 0, 0, 0, 739, 756, 757, 642, 644, 645,
	602, 884, 0, 877, 0, -2, 886, 0, 0, 0,
	892, 0, 895, 0, 614, 848, 0, 0, 372, 850,
	99, 100, 317, 318, 319, 93, 738, 0, 0, 0,
	871, 869, 869, 879, 880, 0, 0, 887, 0, 0,
	0, 903, 901, 89, 0, 0, 0, 0, 851, 852,
	96, 769, 0, 772, 874, 0, 867, 870, 868, 881,
	0, 0, 888, 0, 890, 410, 411, 251, 0, 379,
	770, 863, 0, 872, 873, 882, 883, 889, 252, 253,
	0, 849, 0, 875, 876, 254, 0, 0, 0, 0,
	256, 258, 259, 0, 0, 257, 771, 260, 261, 262,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 111, 3, 3, 3, 138, 130, 3,
	81, 83, 135, 133, 82, 134, 150, 136, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 471,
	119, 118, 120, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 129, 3, 141,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 112, 113, 114, 115,
	116, 117, 121, 122, 123, 124, 125, 126, 127, 128,
	131, 132, 137, 139, 142, 143, 144, 145, 146, 147,
	148, 149, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:419
		{
			setParseTree(yylex, yyDollar[1].statementUnion())
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:424
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:425
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:429
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 34:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:462
		{
			setParseTree(yylex, nil)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:468
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), NoAt)
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:472
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), SingleAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:476
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].str), DoubleAt)
		}
	case 38:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:481
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:485
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:491
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 41:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:497
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:503
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			sel.Into = yyDollar[5].selectIntoUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:512
		{
			yyLOCAL = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmtUnion()}, OrderBy: yyDollar[4].orderByUnion(), Limit: yyDollar[5].limitUnion(), Lock: yyDollar[6].lockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:516
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:520
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:543
		{
			sel := yyDollar[1].selStmtUnion().(*Select)
			sel.OrderBy = yyDollar[2].orderByUnion()
			sel.Limit = yyDollar[3].limitUnion()
			sel.Lock = yyDollar[4].lockUnion()
			yyLOCAL = sel
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:551
		{
			yyLOCAL = Unionize(yyDollar[1].selStmtUnion(), yyDollar[3].selStmtUnion(), yyDollar[2].booleanUnion(), yyDollar[4].orderByUnion(), yyDollar[5].limitUnion(), yyDollar[6].lockUnion())
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:557
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:563
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:571
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:577
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:581
		{
			yyLOCAL = &ParenSelect{Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:588
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = yyDollar[2].strs
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:600
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:612
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:616
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:622
		{
			yyLOCAL = &Update{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: yyDollar[4].tableExprsUnion(), Exprs: yyDollar[6].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:628
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion()), OrderBy: yyDollar[8].orderByUnion(), Limit: yyDollar[9].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:632
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:636
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:640
		{
			yyLOCAL = &Delete{Comments: Comments(yyDollar[2].strs), Ignore: yyDollar[3].ignoreUnion(), Targets: yyDollar[4].tableNamesUnion(), TableExprs: yyDollar[6].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[7].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:645
		{
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:650
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:654
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:660
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:664
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:670
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:674
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 70:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:679
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:683
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:689
		{
			yyLOCAL = &Set{Comments: Comments(yyDollar[2].strs), Exprs: yyDollar[3].setExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:695
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:699
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs), Characteristics: yyDollar[4].characteristicsUnion(), Scope: ImplicitScope}
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:705
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 77:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:715
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:719
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:723
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:729
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:733
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:737
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:741
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:747
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:751
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:757
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:763
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:770
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:779
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].booleanUnion(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:783
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:790
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:794
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:799
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:803
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:809
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 96:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:814
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:819
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:825
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:830
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:836
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 101:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:842
		{
			yyLOCAL = &CreateTable{Table: yyDollar[5].tableName, IfNotExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:849
		{
			yyLOCAL = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:856
		{
			yyLOCAL = &AlterTable{Table: yyDollar[6].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[3].colIdent, Type: string(yyDollar[2].str)}, Options: yyDollar[4].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:861
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Fulltext: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:866
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Spatial: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:871
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].colIdent, Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Unique: true}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:878
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfNotExists: yyDollar[4].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:885
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:896
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:902
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:906
		{
			yyLOCAL = yyDollar[1].collateAndCharsetsUnion()
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:912
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []CollateAndCharset
//line sql.y:916
		{
			yyLOCAL = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:924
		{
			yySLICE := (*[]CollateAndCharset)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].collateAndCharset)
		}
	case 118:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:929
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:933
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:939
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:943
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:949
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:953
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (encodeSQLString(yyDollar[4].str)), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:960
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:964
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:970
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:974
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:980
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:985
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:990
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:994
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:999
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1003
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1007
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1013
		{
			yyDollar[2].columnType.Options = yyDollar[3].columnTypeOptionsUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1023
		{
			yyLOCAL = &ColumnTypeOptions{NotNull: false, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil}
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1027
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = false
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1032
		{
			yyDollar[1].columnTypeOptionsUnion().NotNull = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1037
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1042
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1047
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1052
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1057
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyPrimary
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1062
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1067
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUniqueKey
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1072
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = colKeyUnique
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1090
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1101
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1105
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1117
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1129
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1133
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1145
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1157
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1163
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1171
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 168:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1175
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1179
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1183
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1187
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 172:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1193
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 173:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1197
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 174:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1201
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1205
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1213
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1217
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1221
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1225
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1229
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1233
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1237
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1241
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 185:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1245
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 186:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1250
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1256
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1260
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1264
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1272
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1276
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1280
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 194:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1284
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1290
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1295
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1300
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:1304
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1309
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1313
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1321
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1325
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 203:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1331
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 204:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1339
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1343
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1348
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1352
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1357
		{
			yyVAL.str = ""
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1361
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1365
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1369
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 212:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1374
		{
			yyVAL.str = ""
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1378
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1382
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 215:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:1389
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1394
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1398
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:1404
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1408
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1414
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1418
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1423
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:1427
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1433
		{
			yyVAL.str = ""
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1437
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 226:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1443
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1447
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1451
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1455
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:1459
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1468
		{
			yyVAL.str = yyDollar[2].str
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 238:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1498
		{
			yyVAL.str = "key"
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1502
		{
			yyVAL.str = yyDollar[1].str
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1508
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1517
		{
			yyVAL.str = ""
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1521
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:1527
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1531
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:1537
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1543
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1547
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1553
		{
			yyLOCAL = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:1557
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1563
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1567
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1571
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnUpdate: yyDollar[11].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1575
		{
			yyLOCAL = &ForeignKeyDefinition{Source: yyDollar[4].columnsUnion(), ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columnsUnion(), OnDelete: yyDollar[11].ReferenceActionUnion(), OnUpdate: yyDollar[12].ReferenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:1581
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1587
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1593
		{
			yyLOCAL = yyDollar[3].ReferenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1599
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1603
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1607
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1611
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:1615
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1620
		{
			yyVAL.str = ""
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1624
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1633
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1637
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1641
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1650
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1656
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1660
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1664
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:1670
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1674
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1680
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1684
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1688
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1692
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1696
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1700
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1704
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1708
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1712
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1716
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1720
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1724
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1728
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1732
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1736
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1740
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1744
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1748
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1752
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1756
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1760
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1764
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1768
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1772
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1776
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1780
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1784
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1788
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:1792
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = ""
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 317:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1824
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 318:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1828
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 319:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1832
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = ""
		}
	case 322:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1843
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1847
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 324:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1852
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:1856
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1861
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1865
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1869
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1873
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1881
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1887
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1891
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1895
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1901
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1905
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1909
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1913
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1917
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1921
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1925
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1929
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 343:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1933
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].colNameUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1937
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].colNameUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1941
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1945
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1949
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1953
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1957
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1961
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1965
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1969
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1973
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1977
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1981
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:1985
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:1991
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1995
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2001
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2005
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2009
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2013
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2017
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2021
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2025
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2029
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2033
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2039
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2045
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2052
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2059
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2065
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columnsUnion(), Select: yyDollar[9].selStmtUnion(), CheckOption: yyDollar[10].str}
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2069
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].collateAndCharsetsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2076
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2083
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2095
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2105
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2109
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2113
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParamsUnion(),
				},
				VindexCols: yyDollar[9].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2126
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2136
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2140
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2153
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2157
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2161
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2165
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2169
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2173
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2177
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2181
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2185
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2189
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 393:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2193
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2197
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2201
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2205
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2209
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2213
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2217
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2221
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2225
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2229
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2233
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 404:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:2237
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2246
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2250
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:2257
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2261
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 410:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2267
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:2271
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2277
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:2283
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2287
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 415:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2293
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[5].tableNamesUnion(), IfExists: yyDollar[4].booleanUnion(), Temp: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2297
		{
			// Change this to an alter statement
			if yyDollar[3].colIdent.Lowered() == "primary" {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[6].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{Table: yyDollar[5].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}}, yyDollar[6].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2306
		{
			yyLOCAL = &DropView{FromTables: yyDollar[4].tableNamesUnion(), IfExists: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2310
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[3].strs), DBName: string(yyDollar[5].colIdent.String()), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2316
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2320
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2325
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2331
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2335
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2339
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2343
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2347
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2351
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2355
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2359
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2363
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2367
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2371
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2375
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2379
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2383
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2387
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2391
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2395
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2399
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].str, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2403
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].str, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2407
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2411
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2415
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2419
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2423
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2427
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2431
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2435
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2439
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2443
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2447
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2451
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2455
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2459
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2463
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2467
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2472
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].str}}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2476
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2480
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2484
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2488
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2493
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilterUnion()}
			yyLOCAL = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2507
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2511
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2515
		{
			yyLOCAL = &Show{&ShowLegacy{Type: string(yyDollar[2].str), Scope: ImplicitScope}}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2521
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2525
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2531
		{
			yyVAL.str = ""
		}
	case 469:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2535
		{
			yyVAL.str = "extended "
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2541
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2545
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2551
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2555
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2561
		{
			yyVAL.str = ""
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2565
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2569
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2575
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2579
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2583
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2589
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:2593
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2599
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2603
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2607
		{
			yyVAL.empty = struct{}{}
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2613
		{
			yyLOCAL = &Use{DBName: yyDollar[2].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2617
		{
			yyLOCAL = &Use{DBName: TableIdent{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2623
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2627
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2633
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2639
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2643
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2648
		{
			yyVAL.empty = struct{}{}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2650
		{
			yyVAL.empty = struct{}{}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2653
		{
			yyVAL.empty = struct{}{}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.empty = struct{}{}
		}
	case 496:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2660
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2666
		{
			yyLOCAL = &Release{Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2671
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2675
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2679
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2683
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2687
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:2691
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2697
		{
			yyVAL.str = yyDollar[1].str
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2701
		{
			yyVAL.str = yyDollar[1].str
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.str = yyDollar[1].str
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2711
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2715
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2719
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2723
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2728
		{
			yyVAL.str = ""
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.str = yyDollar[1].colIdent.val
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2742
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[2].tableName, Wild: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2746
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[2].explainTypeUnion(), Statement: yyDollar[3].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2752
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2756
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2762
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:2768
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:2778
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2784
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2788
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2792
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:2796
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2802
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2808
		{
			yyLOCAL = &RevertMigration{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2814
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2818
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2822
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2826
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2830
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:2834
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2840
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2844
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2850
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2854
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2858
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2862
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2882
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2890
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2894
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 548:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2899
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2903
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2907
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2912
		{
			yyVAL.str = ""
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2916
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].colIdent.String()
		}
	case 553:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2921
		{
			setAllowComments(yylex, true)
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2925
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2931
		{
			yyVAL.strs = nil
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2935
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2941
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2945
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2949
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2954
		{
			yyVAL.str = ""
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2958
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2962
		{
			yyVAL.str = SQLCacheStr
		}
	case 563:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2967
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2971
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2975
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:2980
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:2984
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2989
		{
			yyVAL.strs = nil
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2993
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2997
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 571:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3001
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 572:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3005
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 573:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3011
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3015
		{
			yyVAL.str = SQLCacheStr
		}
	case 575:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3019
		{
			yyVAL.str = DistinctStr
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3023
		{
			yyVAL.str = DistinctStr
		}
	case 577:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3027
		{
			yyVAL.str = StraightJoinHint
		}
	case 578:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3031
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 579:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3035
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:3041
		{
			yyLOCAL = SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3045
		{
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].selectExprUnion())
		}
	case 582:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3051
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3055
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3059
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:3063
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3068
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 587:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3072
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3076
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3083
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 591:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3088
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3092
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:3098
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3102
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3112
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3116
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].tableIdent}
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3120
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:3126
		{
			yyLOCAL = &DerivedTable{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3132
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:3136
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3141
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3145
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:3151
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3155
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:3161
		{
			yyLOCAL = Partitions{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3178
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3182
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3186
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3190
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3196
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3198
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 615:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3202
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3204
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3208
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3210
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3213
		{
			yyVAL.empty = struct{}{}
		}
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3215
		{
			yyVAL.empty = struct{}{}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3218
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3222
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3226
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3239
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3243
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3247
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3253
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3259
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3263
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3267
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3271
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3277
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:3281
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3291
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 637:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3295
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3301
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3305
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3311
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3316
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3320
		{
			yyLOCAL = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3324
		{
			yyLOCAL = &IndexHints{Type: UseOp}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3328
		{
			yyLOCAL = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHints
//line sql.y:3332
		{
			yyLOCAL = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3337
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3341
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3347
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3351
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3355
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3359
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3363
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 653:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3367
		{
			yyLOCAL = &IsExpr{Operator: yyDollar[3].isExprOperatorUnion(), Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3371
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3375
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3381
		{
			yyVAL.str = ""
		}
	case 657:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3385
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3391
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:3395
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3401
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3405
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3409
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3413
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3417
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3421
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3425
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3429
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: BetweenOp, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3433
		{
			yyLOCAL = &RangeCond{Left: yyDollar[1].exprUnion(), Operator: NotBetweenOp, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3437
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3443
		{
			yyLOCAL = IsNullOp
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3447
		{
			yyLOCAL = IsNotNullOp
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3451
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3455
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3459
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:3463
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3469
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3473
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3477
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3481
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3485
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3489
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:3493
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3498
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3502
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3508
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3512
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:3516
		{
			yyLOCAL = ListArg(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:3522
		{
			yyLOCAL = &Subquery{yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:3528
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3532
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 691:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3538
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3542
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3546
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3550
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3554
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3558
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3562
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3566
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3570
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3574
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3578
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3582
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3586
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3590
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3594
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3598
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3602
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3606
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3610
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].colNameUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3614
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Charset: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3618
		{
			yyLOCAL = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3622
		{
			yyLOCAL = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3626
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3630
		{
			yyLOCAL = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3634
		{
			yyLOCAL = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3638
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3642
		{
			yyLOCAL = handleUnaryMinus(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3646
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3650
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3654
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].colIdent.String()}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3672
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3676
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3680
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3684
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3694
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3698
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3702
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3706
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3710
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3714
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3718
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].colNameUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3722
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3726
		{
			yyLOCAL = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].str), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3730
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[3].selectExprsUnion(), Expr: yyDollar[7].exprUnion(), Option: yyDollar[8].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3734
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].selectExprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3738
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3742
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3752
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3756
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3760
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_time")}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3765
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3770
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtime")}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3775
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3781
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3786
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("current_time")}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3791
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3795
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3799
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3804
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3809
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3814
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3818
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3822
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3832
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 761:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3842
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3846
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3850
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3854
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3858
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3862
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3866
		{
			yyLOCAL = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3872
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 769:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3876
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 770:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3880
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 771:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3884
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:3888
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3894
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 776:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3908
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3912
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3916
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: string(yyDollar[3].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3920
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3924
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3928
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3934
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3938
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3942
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3946
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3950
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3954
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:3958
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3963
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3967
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3972
		{
			yyVAL.str = string("")
		}
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3976
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:3982
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3986
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:3992
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:3997
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4001
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4007
		{
			yyLOCAL = &ColName{Name: yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4011
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:4015
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4021
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4025
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4029
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4033
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4037
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4041
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4045
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4049
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4055
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4064
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4068
		{
			yyLOCAL = NewArgument(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4073
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4077
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4086
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4091
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4095
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:4101
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4105
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 820:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:4111
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4116
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4120
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:4124
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4129
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4133
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4137
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 827:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:4141
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 828:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4150
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4154
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 831:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4158
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:4162
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 833:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4169
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 834:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4173
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4177
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 836:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4181
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 837:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4187
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 838:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4191
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 839:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:4195
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4200
		{
			yyVAL.str = ""
		}
	case 841:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4204
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 842:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4208
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4212
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4217
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4221
		{
			yyVAL.str = yyDollar[3].str
		}
	case 846:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4227
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 847:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4231
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4236
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4240
		{
			yyVAL.str = yyDollar[2].str
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4245
		{
			yyVAL.str = "cascaded"
		}
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4249
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 852:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4253
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4258
		{
			yyVAL.str = ""
		}
	case 854:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4262
		{
			yyVAL.str = yyDollar[3].str
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4268
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 856:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4272
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 857:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4276
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str) + "@" + string(yyDollar[2].str)
		}
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4280
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 859:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4285
		{
			yyLOCAL = NoLock
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4289
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:4293
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4298
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4302
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4306
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:4310
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4315
		{
			yyVAL.str = ""
		}
	case 867:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4319
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4323
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 869:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4328
		{
			yyVAL.str = ""
		}
	case 870:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4332
		{
			yyVAL.str = " header"
		}
	case 871:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4337
		{
			yyVAL.str = ""
		}
	case 872:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4341
		{
			yyVAL.str = " manifest on"
		}
	case 873:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4345
		{
			yyVAL.str = " manifest off"
		}
	case 874:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4350
		{
			yyVAL.str = ""
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.str = " overwrite on"
		}
	case 876:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4358
		{
			yyVAL.str = " overwrite off"
		}
	case 877:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4364
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 878:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4369
		{
			yyVAL.str = ""
		}
	case 879:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4373
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 880:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4379
		{
			yyVAL.str = yyDollar[1].str
		}
	case 881:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4383
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 882:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4389
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 883:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4393
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 884:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4398
		{
			yyVAL.str = ""
		}
	case 885:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4402
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 886:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4408
		{
			yyVAL.str = yyDollar[1].str
		}
	case 887:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4412
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 888:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4418
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 889:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4422
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 890:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4426
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 891:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4431
		{
			yyVAL.str = ""
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4435
		{
			yyVAL.str = " optionally"
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4448
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4452
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4456
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4460
		{
			yyLOCAL = &Insert{Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:4464
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4470
		{
			yyLOCAL = Columns{yyDollar[1].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4474
		{
			yyLOCAL = Columns{yyDollar[3].colIdent}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4478
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colIdent)
		}
	case 901:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4482
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].colIdent)
		}
	case 902:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4487
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4491
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:4497
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4501
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4507
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4511
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:4517
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4523
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:4533
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4537
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:4543
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:4549
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4553
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4559
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4563
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4567
		{
			yyLOCAL = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4571
		{
			yyLOCAL = &SetExpr{Name: NewColIdent(string(yyDollar[1].str)), Scope: ImplicitScope, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 919:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:4575
		{
			yyDollar[2].setExprUnion().Scope = yyDollar[1].scopeUnion()
			yyLOCAL = yyDollar[2].setExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 921:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4583
		{
			yyVAL.str = "charset"
		}
	case 924:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4593
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].colIdent.String())
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4597
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:4601
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4610
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4612
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4615
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4617
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4620
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:4622
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4625
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:4627
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4630
		{
			yyVAL.empty = struct{}{}
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4632
		{
			yyVAL.empty = struct{}{}
		}
	case 939:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4634
		{
			yyVAL.empty = struct{}{}
		}
	case 940:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4638
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4643
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:4647
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4652
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:4654
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:4658
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].colIdent.String())}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 947:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4675
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].str))
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4681
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4685
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4692
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].str))
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5117
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5126
		{
			decNesting(yylex)
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5131
		{
			skipToEnd(yylex)
		}
	case 1357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5136
		{
			skipToEnd(yylex)
		}
	case 1358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5140
		{
			skipToEnd(yylex)
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5144
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
