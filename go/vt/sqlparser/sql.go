// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	columnDefinitions      []*ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	partSpecs              []*PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
	alterTable             *AlterTable
	alterOption            AlterOption
	alterOptions           []AlterOption
	tableOption            *TableOption
	tableOptions           TableOptions
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const COMPRESSION = 57435
const NULL = 57436
const TRUE = 57437
const FALSE = 57438
const OFF = 57439
const DISCARD = 57440
const IMPORT = 57441
const ENABLE = 57442
const DISABLE = 57443
const TABLESPACE = 57444
const OR = 57445
const XOR = 57446
const AND = 57447
const NOT = 57448
const BETWEEN = 57449
const CASE = 57450
const WHEN = 57451
const THEN = 57452
const ELSE = 57453
const END = 57454
const LE = 57455
const GE = 57456
const NE = 57457
const NULL_SAFE_EQUAL = 57458
const IS = 57459
const LIKE = 57460
const REGEXP = 57461
const IN = 57462
const SHIFT_LEFT = 57463
const SHIFT_RIGHT = 57464
const DIV = 57465
const MOD = 57466
const UNARY = 57467
const COLLATE = 57468
const BINARY = 57469
const UNDERSCORE_BINARY = 57470
const UNDERSCORE_UTF8MB4 = 57471
const UNDERSCORE_UTF8 = 57472
const UNDERSCORE_LATIN1 = 57473
const INTERVAL = 57474
const JSON_EXTRACT_OP = 57475
const JSON_UNQUOTE_EXTRACT_OP = 57476
const CREATE = 57477
const ALTER = 57478
const DROP = 57479
const RENAME = 57480
const ANALYZE = 57481
const ADD = 57482
const FLUSH = 57483
const CHANGE = 57484
const MODIFY = 57485
const SCHEMA = 57486
const TABLE = 57487
const INDEX = 57488
const VIEW = 57489
const TO = 57490
const IGNORE = 57491
const IF = 57492
const UNIQUE = 57493
const PRIMARY = 57494
const COLUMN = 57495
const SPATIAL = 57496
const FULLTEXT = 57497
const KEY_BLOCK_SIZE = 57498
const CHECK = 57499
const INDEXES = 57500
const ACTION = 57501
const CASCADE = 57502
const CONSTRAINT = 57503
const FOREIGN = 57504
const NO = 57505
const REFERENCES = 57506
const RESTRICT = 57507
const SHOW = 57508
const DESCRIBE = 57509
const EXPLAIN = 57510
const DATE = 57511
const ESCAPE = 57512
const REPAIR = 57513
const OPTIMIZE = 57514
const TRUNCATE = 57515
const COALESCE = 57516
const EXCHANGE = 57517
const REBUILD = 57518
const PARTITIONING = 57519
const REMOVE = 57520
const MAXVALUE = 57521
const PARTITION = 57522
const REORGANIZE = 57523
const LESS = 57524
const THAN = 57525
const PROCEDURE = 57526
const TRIGGER = 57527
const VINDEX = 57528
const VINDEXES = 57529
const DIRECTORY = 57530
const NAME = 57531
const UPGRADE = 57532
const STATUS = 57533
const VARIABLES = 57534
const WARNINGS = 57535
const CASCADED = 57536
const DEFINER = 57537
const OPTION = 57538
const SQL = 57539
const UNDEFINED = 57540
const SEQUENCE = 57541
const MERGE = 57542
const TEMPTABLE = 57543
const INVOKER = 57544
const SECURITY = 57545
const FIRST = 57546
const AFTER = 57547
const LAST = 57548
const BEGIN = 57549
const START = 57550
const TRANSACTION = 57551
const COMMIT = 57552
const ROLLBACK = 57553
const SAVEPOINT = 57554
const RELEASE = 57555
const WORK = 57556
const BIT = 57557
const TINYINT = 57558
const SMALLINT = 57559
const MEDIUMINT = 57560
const INT = 57561
const INTEGER = 57562
const BIGINT = 57563
const INTNUM = 57564
const REAL = 57565
const DOUBLE = 57566
const FLOAT_TYPE = 57567
const DECIMAL = 57568
const NUMERIC = 57569
const TIME = 57570
const TIMESTAMP = 57571
const DATETIME = 57572
const YEAR = 57573
const CHAR = 57574
const VARCHAR = 57575
const BOOL = 57576
const CHARACTER = 57577
const VARBINARY = 57578
const NCHAR = 57579
const TEXT = 57580
const TINYTEXT = 57581
const MEDIUMTEXT = 57582
const LONGTEXT = 57583
const BLOB = 57584
const TINYBLOB = 57585
const MEDIUMBLOB = 57586
const LONGBLOB = 57587
const JSON = 57588
const ENUM = 57589
const GEOMETRY = 57590
const POINT = 57591
const LINESTRING = 57592
const POLYGON = 57593
const GEOMETRYCOLLECTION = 57594
const MULTIPOINT = 57595
const MULTILINESTRING = 57596
const MULTIPOLYGON = 57597
const NULLX = 57598
const AUTO_INCREMENT = 57599
const APPROXNUM = 57600
const SIGNED = 57601
const UNSIGNED = 57602
const ZEROFILL = 57603
const COLLATION = 57604
const DATABASES = 57605
const SCHEMAS = 57606
const TABLES = 57607
const VITESS_METADATA = 57608
const VSCHEMA = 57609
const FULL = 57610
const PROCESSLIST = 57611
const COLUMNS = 57612
const FIELDS = 57613
const ENGINES = 57614
const PLUGINS = 57615
const EXTENDED = 57616
const KEYSPACES = 57617
const VITESS_KEYSPACES = 57618
const VITESS_SHARDS = 57619
const VITESS_TABLETS = 57620
const CODE = 57621
const PRIVILEGES = 57622
const FUNCTION = 57623
const NAMES = 57624
const CHARSET = 57625
const GLOBAL = 57626
const SESSION = 57627
const ISOLATION = 57628
const LEVEL = 57629
const READ = 57630
const WRITE = 57631
const ONLY = 57632
const REPEATABLE = 57633
const COMMITTED = 57634
const UNCOMMITTED = 57635
const SERIALIZABLE = 57636
const CURRENT_TIMESTAMP = 57637
const DATABASE = 57638
const CURRENT_DATE = 57639
const CURRENT_TIME = 57640
const LOCALTIME = 57641
const LOCALTIMESTAMP = 57642
const CURRENT_USER = 57643
const UTC_DATE = 57644
const UTC_TIME = 57645
const UTC_TIMESTAMP = 57646
const REPLACE = 57647
const CONVERT = 57648
const CAST = 57649
const SUBSTR = 57650
const SUBSTRING = 57651
const GROUP_CONCAT = 57652
const SEPARATOR = 57653
const TIMESTAMPADD = 57654
const TIMESTAMPDIFF = 57655
const MATCH = 57656
const AGAINST = 57657
const BOOLEAN = 57658
const LANGUAGE = 57659
const WITH = 57660
const QUERY = 57661
const EXPANSION = 57662
const WITHOUT = 57663
const VALIDATION = 57664
const UNUSED = 57665
const ARRAY = 57666
const CUME_DIST = 57667
const DESCRIPTION = 57668
const DENSE_RANK = 57669
const EMPTY = 57670
const EXCEPT = 57671
const FIRST_VALUE = 57672
const GROUPING = 57673
const GROUPS = 57674
const JSON_TABLE = 57675
const LAG = 57676
const LAST_VALUE = 57677
const LATERAL = 57678
const LEAD = 57679
const MEMBER = 57680
const NTH_VALUE = 57681
const NTILE = 57682
const OF = 57683
const OVER = 57684
const PERCENT_RANK = 57685
const RANK = 57686
const RECURSIVE = 57687
const ROW_NUMBER = 57688
const SYSTEM = 57689
const WINDOW = 57690
const ACTIVE = 57691
const ADMIN = 57692
const BUCKETS = 57693
const CLONE = 57694
const COMPONENT = 57695
const DEFINITION = 57696
const ENFORCED = 57697
const EXCLUDE = 57698
const FOLLOWING = 57699
const GEOMCOLLECTION = 57700
const GET_MASTER_PUBLIC_KEY = 57701
const HISTOGRAM = 57702
const HISTORY = 57703
const INACTIVE = 57704
const INVISIBLE = 57705
const LOCKED = 57706
const MASTER_COMPRESSION_ALGORITHMS = 57707
const MASTER_PUBLIC_KEY_PATH = 57708
const MASTER_TLS_CIPHERSUITES = 57709
const MASTER_ZSTD_COMPRESSION_LEVEL = 57710
const NESTED = 57711
const NETWORK_NAMESPACE = 57712
const NOWAIT = 57713
const NULLS = 57714
const OJ = 57715
const OLD = 57716
const OPTIONAL = 57717
const ORDINALITY = 57718
const ORGANIZATION = 57719
const OTHERS = 57720
const PATH = 57721
const PERSIST = 57722
const PERSIST_ONLY = 57723
const PRECEDING = 57724
const PRIVILEGE_CHECKS_USER = 57725
const PROCESS = 57726
const RANDOM = 57727
const REFERENCE = 57728
const REQUIRE_ROW_FORMAT = 57729
const RESOURCE = 57730
const RESPECT = 57731
const RESTART = 57732
const RETAIN = 57733
const REUSE = 57734
const ROLE = 57735
const SECONDARY = 57736
const SECONDARY_ENGINE = 57737
const SECONDARY_LOAD = 57738
const SECONDARY_UNLOAD = 57739
const SKIP = 57740
const SRID = 57741
const THREAD_PRIORITY = 57742
const TIES = 57743
const UNBOUNDED = 57744
const VCPU = 57745
const VISIBLE = 57746
const FORMAT = 57747
const TREE = 57748
const VITESS = 57749
const TRADITIONAL = 57750
const LOCAL = 57751
const LOW_PRIORITY = 57752
const AVG_ROW_LENGTH = 57753
const CONNECTION = 57754
const CHECKSUM = 57755
const DELAY_KEY_WRITE = 57756
const ENCRYPTION = 57757
const ENGINE = 57758
const INSERT_METHOD = 57759
const MAX_ROWS = 57760
const MIN_ROWS = 57761
const PACK_KEYS = 57762
const PASSWORD = 57763
const FIXED = 57764
const DYNAMIC = 57765
const COMPRESSED = 57766
const REDUNDANT = 57767
const COMPACT = 57768
const ROW_FORMAT = 57769
const STATS_AUTO_RECALC = 57770
const STATS_PERSISTENT = 57771
const STATS_SAMPLE_PAGES = 57772
const STORAGE = 57773
const MEMORY = 57774
const DISK = 57775

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"COMPRESSION",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"PRIVILEGES",
	"FUNCTION",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	163, 901,
	-2, 87,
	-1, 43,
	1, 105,
	451, 105,
	-2, 111,
	-1, 44,
	142, 111,
	252, 111,
	300, 111,
	-2, 320,
	-1, 51,
	34, 458,
	163, 458,
	175, 458,
	208, 472,
	209, 472,
	-2, 460,
	-1, 56,
	165, 482,
	-2, 480,
	-1, 80,
	55, 525,
	-2, 533,
	-1, 104,
	1, 106,
	451, 106,
	-2, 111,
	-1, 114,
	168, 228,
	169, 228,
	-2, 314,
	-1, 133,
	142, 111,
	252, 111,
	300, 111,
	-2, 329,
	-1, 548,
	149, 912,
	-2, 908,
	-1, 549,
	149, 913,
	-2, 909,
	-1, 566,
	55, 526,
	-2, 538,
	-1, 567,
	55, 527,
	-2, 539,
	-1, 587,
	117, 1239,
	-2, 80,
	-1, 588,
	117, 1126,
	-2, 81,
	-1, 594,
	117, 1174,
	-2, 886,
	-1, 728,
	117, 1068,
	-2, 883,
	-1, 761,
	174, 36,
	179, 36,
	-2, 239,
	-1, 838,
	1, 367,
	451, 367,
	-2, 111,
	-1, 1053,
	1, 263,
	451, 263,
	-2, 111,
	-1, 1128,
	168, 228,
	169, 228,
	-2, 314,
	-1, 1137,
	174, 37,
	179, 37,
	-2, 240,
	-1, 1325,
	149, 915,
	-2, 911,
	-1, 1415,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1436,
	1, 264,
	451, 264,
	-2, 111,
	-1, 1816,
	5, 780,
	18, 780,
	20, 780,
	32, 780,
	82, 780,
	-2, 564,
	-1, 2029,
	45, 854,
	-2, 852,
}

const yyPrivate = 57344

const yyLast = 26163

var yyAct = [...]int{
	548, 2115, 2102, 2029, 1865, 2076, 1710, 1976, 1954, 891,
	1735, 1796, 1634, 1602, 79, 3, 507, 957, 521, 1503,
	1797, 1793, 1635, 1468, 490, 1473, 1001, 1362, 1714, 559,
	1692, 142, 1008, 1621, 1693, 1110, 1433, 1453, 1412, 128,
	1562, 850, 1808, 1755, 1253, 1475, 592, 172, 1501, 1319,
	184, 1685, 457, 184, 1038, 1240, 756, 1045, 473, 1394,
	184, 1311, 1401, 1135, 77, 1011, 492, 732, 568, 889,
	1006, 1364, 1031, 1029, 995, 494, 1288, 31, 553, 1142,
	1028, 483, 736, 1345, 769, 739, 762, 1476, 473, 740,
	1377, 473, 184, 473, 1035, 1464, 757, 589, 1044, 1322,
	758, 759, 1256, 1042, 1417, 1018, 105, 970, 1454, 75,
	480, 1127, 8, 145, 106, 971, 111, 791, 112, 7,
	171, 6, 1733, 1732, 173, 174, 175, 74, 1532, 1212,
	1978, 1359, 1360, 2086, 1153, 1274, 1600, 2026, 1933, 2006,
	2005, 1951, 795, 794, 1952, 2121, 2073, 733, 574, 578,
	80, 2114, 1839, 554, 76, 2052, 113, 107, 2104, 1866,
	435, 1895, 1520, 2072, 1772, 796, 748, 1601, 184, 97,
	184, 1822, 481, 482, 1427, 2051, 1046, 184, 1047, 844,
	1823, 1824, 184, 552, 448, 82, 83, 84, 85, 86,
	87, 586, 1077, 449, 33, 810, 593, 68, 37, 38,
	773, 1480, 461, 446, 860, 102, 177, 178, 179, 1707,
	1348, 750, 858, 1706, 1428, 1429, 751, 772, 107, 749,
	869, 870, 1478, 551, 102, 94, 804, 1676, 1447, 102,
	167, 98, 169, 887, 99, 100, 797, 798, 799, 1737,
	1665, 1926, 443, 1664, 2054, 1886, 1666, 1884, 793, 471,
	460, 455, 871, 1361, 809, 1273, 872, 869, 870, 475,
	469, 807, 808, 1502, 811, 812, 813, 814, 67, 1715,
	817, 818, 819, 820, 821, 822, 823, 824, 825, 826,
	827, 828, 829, 830, 831, 107, 1703, 1848, 166, 2109,
	562, 1229, 861, 461, 1849, 1275, 1276, 1277, 1485, 1709,
	859, 1477, 1113, 1202, 1065, 461, 173, 174, 175, 885,
	1738, 886, 866, 108, 839, 130, 1487, 1740, 1488, 1489,
	436, 437, 438, 150, 453, 454, 464, 864, 865, 1541,
	450, 452, 465, 439, 440, 467, 466, 752, 442, 441,
	816, 460, 445, 462, 1203, 1230, 1204, 1078, 2087, 862,
	863, 815, 170, 460, 140, 1739, 1226, 101, 2002, 129,
	2016, 919, 918, 928, 929, 921, 922, 923, 924, 925,
	926, 927, 920, 1946, 780, 930, 101, 147, 1504, 148,
	778, 101, 753, 1395, 1129, 1130, 139, 138, 165, 173,
	174, 175, 1121, 1091, 1094, 1095, 1096, 1097, 1098, 1099,
	1228, 1100, 1101, 1102, 1103, 1104, 1079, 1080, 1081, 1082,
	1063, 1064, 1092, 771, 1066, 1838, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 789, 184, 134, 1131, 141, 2050,
	1128, 1227, 135, 136, 1705, 788, 151, 461, 787, 873,
	876, 786, 2055, 785, 784, 783, 156, 782, 473, 473,
	473, 777, 790, 1479, 2119, 1947, 781, 463, 878, 737,
	880, 2100, 779, 735, 458, 461, 473, 473, 853, 854,
	855, 856, 857, 2122, 2066, 737, 737, 842, 771, 459,
	765, 771, 901, 764, 1093, 460, 843, 533, 888, 539,
	540, 537, 538, 745, 536, 535, 534, 877, 879, 580,
	69, 104, 1141, 1140, 541, 542, 1603, 1605, 1741, 1526,
	1234, 895, 800, 460, 1702, 1781, 1780, 1779, 892, 893,
	746, 1993, 771, 1725, 434, 176, 942, 943, 1214, 1213,
	1215, 1216, 1217, 883, 2033, 806, 771, 770, 1915, 1821,
	1626, 771, 184, 774, 764, 1570, 1540, 143, 1756, 1539,
	1512, 1423, 1022, 775, 1434, 940, 1522, 955, 2017, 848,
	999, 1581, 930, 920, 1661, 1254, 930, 473, 867, 1373,
	184, 776, 184, 184, 1578, 473, 998, 908, 909, 907,
	904, 473, 1270, 1295, 589, 1776, 910, 902, 907, 903,
	958, 1758, 2008, 792, 875, 910, 137, 1293, 1294, 1292,
	2117, 1806, 1604, 2118, 910, 2116, 1486, 1114, 131, 874,
	1027, 132, 770, 1257, 996, 770, 1774, 852, 774, 764,
	1048, 90, 764, 767, 768, 905, 737, 1012, 775, 1346,
	761, 765, 973, 975, 977, 979, 981, 983, 984, 1116,
	974, 976, 1519, 980, 982, 837, 985, 1517, 1760, 760,
	1764, 993, 1759, 780, 1757, 1010, 770, 845, 846, 1762,
	1994, 1992, 882, 764, 767, 768, 91, 737, 1761, 778,
	770, 761, 765, 838, 884, 770, 1346, 805, 1588, 1521,
	1255, 1763, 1765, 593, 919, 918, 928, 929, 921, 922,
	923, 924, 925, 926, 927, 920, 1674, 1000, 930, 942,
	943, 144, 149, 146, 152, 153, 154, 155, 157, 158,
	159, 160, 942, 943, 173, 174, 175, 161, 162, 163,
	164, 1690, 184, 909, 907, 834, 1106, 835, 1258, 851,
	836, 2036, 173, 174, 175, 184, 1313, 1117, 1118, 1015,
	910, 1514, 1514, 1563, 1932, 908, 909, 907, 744, 1851,
	473, 563, 1137, 923, 924, 925, 926, 927, 920, 1444,
	1146, 930, 1931, 910, 1150, 1518, 1516, 473, 473, 1221,
	473, 1445, 473, 473, 1681, 473, 473, 473, 473, 473,
	473, 1576, 1219, 1844, 2105, 1126, 1375, 1783, 1689, 1575,
	473, 549, 1314, 1688, 184, 1186, 2108, 919, 918, 928,
	929, 921, 922, 923, 924, 925, 926, 927, 920, 2107,
	1199, 930, 2106, 2123, 908, 909, 907, 1133, 1283, 1285,
	1286, 473, 67, 1145, 473, 2095, 1483, 1220, 184, 1147,
	1284, 1222, 910, 184, 1291, 1784, 184, 1239, 1144, 184,
	1218, 185, 1143, 1143, 185, 747, 1105, 1209, 1374, 474,
	184, 185, 184, 2096, 1181, 1182, 1123, 1183, 1207, 1119,
	1120, 1124, 1206, 1122, 473, 473, 184, 473, 473, 184,
	473, 473, 1136, 908, 909, 907, 1555, 1556, 1557, 474,
	2124, 1577, 474, 185, 474, 1242, 1205, 1197, 1378, 1379,
	1245, 910, 1247, 1225, 1249, 1250, 1251, 1252, 1191, 1184,
	1188, 1187, 1155, 1259, 1156, 1208, 1158, 1160, 1162, 2097,
	1164, 1166, 1168, 1170, 1172, 2084, 1043, 1189, 1190, 2064,
	1967, 1312, 1289, 1195, 1196, 1929, 1903, 1235, 1785, 1698,
	1315, 1686, 1552, 1260, 1261, 750, 1263, 1264, 1530, 1266,
	1267, 1529, 107, 749, 473, 1805, 921, 922, 923, 924,
	925, 926, 927, 920, 1243, 1323, 930, 1316, 1317, 185,
	579, 185, 1210, 1198, 908, 909, 907, 1194, 185, 908,
	909, 907, 1193, 185, 1268, 1192, 563, 473, 473, 1290,
	1999, 1329, 910, 1998, 908, 909, 907, 910, 184, 173,
	174, 175, 1325, 1668, 510, 509, 512, 513, 514, 515,
	473, 1324, 910, 511, 584, 516, 1943, 184, 1794, 958,
	473, 173, 174, 175, 184, 1496, 184, 1805, 1368, 1717,
	1334, 1337, 1323, 78, 184, 184, 1347, 76, 1380, 1353,
	1354, 473, 1854, 2090, 473, 173, 174, 175, 1413, 1494,
	589, 1854, 2048, 589, 1701, 473, 581, 582, 33, 1330,
	1331, 1854, 2040, 1336, 1339, 1340, 1326, 1854, 2034, 1325,
	173, 174, 175, 1442, 1200, 173, 174, 175, 1392, 1854,
	563, 1388, 1949, 563, 1515, 1437, 1514, 563, 1352, 1913,
	563, 1355, 1356, 1854, 1859, 1836, 1835, 1448, 1386, 1449,
	1450, 1451, 1452, 1832, 1833, 1983, 1455, 1456, 1457, 1910,
	473, 1441, 1832, 1831, 563, 1460, 1461, 1462, 1463, 906,
	1493, 1495, 1438, 1898, 1622, 1390, 1386, 563, 1470, 1416,
	1418, 1734, 67, 473, 1109, 1719, 1712, 1713, 1514, 473,
	1425, 1421, 1419, 1146, 1424, 1146, 1398, 563, 1419, 593,
	2007, 1440, 593, 1513, 1622, 1439, 918, 928, 929, 921,
	922, 923, 924, 925, 926, 927, 920, 1327, 1328, 930,
	919, 918, 928, 929, 921, 922, 923, 924, 925, 926,
	927, 920, 1854, 473, 930, 1312, 906, 563, 1471, 1387,
	1312, 1312, 1398, 33, 1109, 1108, 1934, 1466, 1467, 1481,
	1500, 1482, 33, 1420, 1397, 1492, 1510, 1655, 1511, 1420,
	1369, 1422, 1054, 1053, 1834, 1418, 773, 1418, 1629, 1471,
	1398, 1509, 1805, 1505, 1506, 184, 1143, 184, 184, 184,
	184, 184, 1524, 772, 184, 184, 185, 1426, 184, 473,
	1630, 1593, 1592, 1935, 1936, 1937, 1525, 1695, 1386, 1177,
	1523, 1527, 1528, 1418, 1398, 184, 184, 184, 1386, 474,
	474, 474, 556, 1514, 1497, 1376, 1357, 67, 2042, 184,
	1233, 1040, 184, 473, 755, 754, 67, 474, 474, 919,
	918, 928, 929, 921, 922, 923, 924, 925, 926, 927,
	920, 1897, 67, 930, 1956, 1546, 1178, 1179, 1180, 1736,
	1942, 1550, 1921, 1111, 914, 1469, 917, 1850, 1545, 1507,
	1465, 1289, 931, 932, 933, 934, 935, 936, 937, 1533,
	915, 916, 913, 919, 918, 928, 929, 921, 922, 923,
	924, 925, 926, 927, 920, 1459, 67, 930, 919, 918,
	928, 929, 921, 922, 923, 924, 925, 926, 927, 920,
	1458, 1224, 930, 185, 1138, 1134, 1107, 92, 184, 1572,
	743, 1957, 1694, 1809, 1810, 1480, 184, 2111, 1290, 1558,
	2103, 1827, 1938, 1403, 1406, 1407, 1408, 1404, 474, 1405,
	1409, 185, 1812, 185, 185, 1794, 474, 1708, 184, 1174,
	1271, 1237, 474, 1646, 1648, 1608, 1407, 1408, 1647, 184,
	184, 184, 184, 184, 554, 1571, 1695, 1615, 1644, 1631,
	1815, 184, 1814, 1645, 1643, 184, 1939, 1940, 184, 184,
	1567, 1568, 184, 184, 184, 1642, 1624, 1627, 1587, 1653,
	996, 2092, 1599, 1175, 1176, 1667, 2071, 1607, 1786, 1611,
	1009, 1585, 1914, 1857, 1620, 1619, 2060, 1614, 2057, 2094,
	2075, 96, 1623, 2077, 1609, 1680, 1656, 1625, 2083, 2082,
	1658, 519, 1610, 2030, 1636, 2028, 1232, 550, 1670, 1699,
	1242, 1342, 1649, 1638, 1639, 1654, 1641, 1659, 802, 1637,
	801, 473, 1640, 1694, 1662, 1343, 1002, 1677, 1678, 894,
	1679, 1727, 1682, 1683, 1684, 1671, 2038, 168, 1003, 473,
	180, 1726, 1673, 108, 2037, 473, 1981, 1508, 473, 1152,
	1146, 1687, 1151, 1139, 1720, 473, 1908, 1378, 1379, 472,
	1696, 1371, 1722, 1490, 1236, 2000, 1565, 1731, 1411, 560,
	1566, 557, 558, 185, 2099, 1618, 2098, 1126, 2080, 2061,
	78, 1573, 1574, 1617, 1907, 473, 185, 1580, 1853, 591,
	1583, 1584, 734, 1729, 741, 1498, 561, 1906, 1590, 1325,
	1591, 474, 1730, 1594, 1595, 1596, 1597, 1598, 1324, 1716,
	1789, 473, 1728, 1721, 1622, 2113, 2112, 1312, 474, 474,
	1752, 474, 1582, 474, 474, 1579, 474, 474, 474, 474,
	474, 474, 1023, 1016, 1743, 1697, 1744, 2113, 2031, 1754,
	1745, 474, 1927, 1372, 1753, 185, 556, 473, 76, 81,
	73, 1, 444, 1358, 1742, 994, 456, 184, 1773, 1751,
	2101, 1767, 1211, 1651, 1652, 1201, 1867, 473, 1953, 1860,
	1491, 1691, 474, 473, 473, 474, 1752, 1474, 1766, 185,
	763, 133, 1795, 1435, 185, 1436, 2044, 185, 569, 1798,
	185, 89, 730, 88, 766, 881, 184, 1792, 1499, 1991,
	1950, 185, 570, 185, 1675, 1446, 1925, 1826, 1804, 1672,
	2035, 1060, 1058, 1059, 1057, 474, 474, 185, 474, 474,
	185, 474, 474, 1813, 569, 1013, 1014, 572, 1817, 571,
	1819, 1062, 1820, 1061, 1818, 1056, 1636, 1272, 570, 470,
	1845, 1825, 1410, 184, 1049, 1017, 803, 1837, 1443, 184,
	1269, 1531, 451, 473, 1829, 1830, 868, 447, 938, 1616,
	1663, 566, 567, 572, 1841, 571, 184, 1840, 590, 583,
	1941, 1800, 95, 2081, 2058, 2056, 2027, 1868, 473, 473,
	473, 1782, 184, 1977, 1861, 1858, 2059, 2025, 2093, 2074,
	1370, 1005, 1863, 1905, 1788, 474, 1586, 1864, 928, 929,
	921, 922, 923, 924, 925, 926, 927, 920, 1803, 967,
	930, 1344, 1032, 493, 1282, 1892, 508, 505, 1749, 1750,
	1855, 506, 1856, 1877, 1882, 1873, 1874, 1381, 474, 474,
	1628, 912, 1879, 1880, 491, 1881, 485, 1024, 1883, 185,
	1885, 1402, 1400, 1399, 1036, 1811, 1807, 1030, 1385, 1704,
	1112, 474, 1842, 1843, 1484, 1847, 742, 1909, 185, 565,
	93, 474, 1904, 1341, 2015, 185, 1894, 185, 1918, 564,
	59, 36, 576, 477, 2085, 185, 185, 1917, 2065, 897,
	573, 30, 474, 1801, 29, 474, 28, 23, 22, 21,
	1923, 20, 1924, 19, 473, 473, 474, 25, 18, 17,
	1944, 16, 103, 46, 1816, 43, 41, 473, 110, 1928,
	109, 1930, 1636, 44, 40, 840, 1955, 27, 26, 15,
	14, 1960, 13, 919, 918, 928, 929, 921, 922, 923,
	924, 925, 926, 927, 920, 12, 484, 930, 11, 10,
	473, 473, 473, 184, 1958, 9, 1970, 1972, 1973, 5,
	4, 474, 900, 24, 473, 956, 473, 2, 1959, 591,
	591, 591, 473, 0, 1966, 1980, 1986, 1984, 1989, 1798,
	1974, 1982, 0, 1798, 474, 0, 0, 896, 898, 0,
	474, 1975, 0, 473, 1995, 0, 0, 1988, 184, 2001,
	0, 0, 0, 1990, 0, 0, 0, 473, 184, 0,
	0, 0, 1876, 2009, 0, 1996, 1878, 1997, 1891, 2004,
	0, 0, 0, 0, 0, 0, 0, 1887, 1888, 0,
	0, 0, 0, 0, 474, 0, 0, 0, 2024, 0,
	487, 0, 0, 1902, 0, 2032, 0, 0, 0, 0,
	0, 0, 1798, 0, 0, 0, 0, 0, 473, 473,
	1911, 1912, 0, 0, 1916, 2039, 2043, 1955, 2045, 1890,
	0, 0, 0, 0, 0, 0, 185, 0, 185, 185,
	185, 185, 185, 2053, 473, 185, 185, 0, 1020, 185,
	474, 0, 0, 473, 2062, 0, 591, 0, 0, 2069,
	0, 0, 1050, 0, 0, 0, 185, 185, 185, 2070,
	2079, 2078, 0, 0, 0, 0, 0, 0, 0, 0,
	185, 1948, 0, 185, 474, 2091, 919, 918, 928, 929,
	921, 922, 923, 924, 925, 926, 927, 920, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 1636, 0,
	0, 0, 0, 0, 2110, 0, 0, 0, 0, 0,
	1971, 0, 0, 0, 0, 2120, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 919, 918, 928,
	929, 921, 922, 923, 924, 925, 926, 927, 920, 0,
	0, 930, 1403, 1406, 1407, 1408, 1404, 108, 1405, 1409,
	0, 0, 1809, 1810, 0, 0, 0, 150, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 2011, 2012, 2013, 2014, 0, 2018, 0, 2019,
	2020, 2021, 0, 2022, 2023, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 0, 0, 0, 1669, 0,
	185, 185, 185, 185, 185, 520, 0, 0, 0, 0,
	0, 147, 185, 148, 0, 1889, 185, 0, 0, 185,
	185, 734, 165, 185, 185, 185, 2049, 0, 0, 0,
	0, 0, 0, 0, 1148, 0, 0, 0, 1154, 1154,
	0, 1154, 0, 1154, 1154, 0, 1163, 1154, 1154, 1154,
	1154, 1154, 0, 0, 0, 183, 0, 0, 468, 1148,
	1148, 734, 0, 0, 0, 183, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2088, 2089,
	151, 0, 474, 0, 0, 0, 0, 0, 577, 577,
	156, 0, 1223, 0, 0, 591, 0, 183, 0, 0,
	474, 0, 0, 0, 0, 0, 474, 0, 0, 474,
	0, 0, 0, 0, 0, 0, 474, 0, 0, 911,
	0, 0, 0, 919, 918, 928, 929, 921, 922, 923,
	924, 925, 926, 927, 920, 591, 591, 930, 591, 591,
	0, 591, 591, 0, 0, 0, 474, 0, 0, 0,
	0, 0, 0, 0, 0, 484, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 474, 183, 0, 183, 1746, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 183, 0, 0,
	0, 143, 0, 1004, 1007, 0, 919, 918, 928, 929,
	921, 922, 923, 924, 925, 926, 927, 920, 474, 0,
	930, 0, 0, 0, 0, 1318, 0, 591, 185, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	0, 1148, 0, 0, 474, 474, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1350, 1351,
	0, 0, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 108, 0, 130, 0, 0, 0, 0, 0,
	0, 1382, 150, 0, 0, 0, 0, 0, 0, 0,
	0, 1020, 0, 0, 591, 0, 944, 945, 946, 947,
	948, 949, 950, 951, 952, 953, 0, 0, 0, 0,
	0, 0, 591, 140, 185, 591, 0, 0, 129, 0,
	185, 0, 0, 0, 474, 0, 734, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 147, 185, 148, 0,
	0, 0, 0, 117, 118, 139, 138, 165, 0, 474,
	474, 474, 0, 185, 0, 144, 149, 146, 152, 153,
	154, 155, 157, 158, 159, 160, 0, 0, 166, 0,
	0, 161, 162, 163, 164, 0, 0, 0, 0, 0,
	0, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 108, 0, 134, 115, 141, 122, 114,
	0, 135, 136, 150, 734, 151, 0, 0, 0, 0,
	741, 0, 0, 0, 0, 156, 123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	126, 124, 119, 120, 121, 125, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	183, 0, 0, 0, 734, 0, 0, 147, 0, 148,
	1564, 0, 0, 0, 0, 474, 474, 0, 165, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 474, 0,
	919, 918, 928, 929, 921, 922, 923, 924, 925, 926,
	927, 920, 0, 0, 930, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	591, 474, 474, 474, 185, 0, 143, 0, 0, 0,
	0, 0, 0, 0, 0, 474, 151, 474, 0, 0,
	0, 0, 0, 474, 0, 0, 156, 0, 0, 0,
	0, 0, 0, 0, 1554, 0, 0, 0, 0, 1278,
	1279, 1280, 1281, 0, 474, 0, 0, 0, 0, 185,
	0, 0, 0, 0, 0, 137, 0, 183, 474, 185,
	0, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	132, 577, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 183, 1039, 0,
	0, 0, 0, 0, 1332, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 474,
	474, 0, 522, 32, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 143, 0, 0,
	0, 0, 0, 0, 0, 474, 0, 0, 0, 0,
	0, 0, 0, 0, 474, 32, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1148,
	144, 149, 146, 152, 153, 154, 155, 157, 158, 159,
	160, 0, 0, 0, 0, 0, 161, 162, 163, 164,
	0, 1432, 0, 0, 0, 0, 0, 0, 555, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1287, 0, 0, 1296, 1297, 1298, 1299,
	1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309,
	1310, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	1472, 0, 1700, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 997, 0, 0, 0, 0, 0, 0, 0,
	1711, 0, 0, 1349, 1148, 0, 1718, 0, 0, 1711,
	0, 0, 0, 0, 591, 0, 1723, 0, 1149, 0,
	0, 144, 149, 146, 152, 153, 154, 155, 157, 158,
	159, 160, 0, 0, 0, 0, 0, 161, 162, 163,
	164, 0, 182, 1149, 1149, 0, 591, 0, 0, 183,
	0, 0, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 183, 738, 0, 0, 0, 183, 0,
	0, 183, 0, 0, 1241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 183, 0, 183, 1154, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 183, 0, 0, 0, 591, 0,
	0, 1148, 0, 0, 1802, 1154, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	832, 0, 833, 0, 0, 0, 0, 0, 0, 841,
	0, 0, 0, 0, 847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	577, 1241, 0, 0, 0, 577, 577, 0, 0, 577,
	577, 577, 0, 0, 734, 1149, 0, 1148, 0, 1589,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 577, 577, 577, 577, 577, 1869,
	1870, 1871, 0, 1366, 0, 0, 0, 1612, 1613, 1007,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 1241, 183,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 183,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1148, 0, 0,
	890, 890, 890, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1559, 1560, 1561, 0, 0, 0,
	32, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 939, 941, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1711, 1945, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 591, 0,
	0, 0, 954, 0, 0, 0, 959, 960, 961, 962,
	963, 964, 965, 966, 0, 969, 972, 972, 972, 978,
	972, 972, 978, 972, 986, 987, 988, 989, 990, 991,
	992, 1711, 1711, 1711, 0, 0, 0, 0, 32, 0,
	0, 0, 0, 0, 0, 1985, 0, 1987, 0, 0,
	0, 0, 0, 1711, 0, 0, 0, 849, 0, 0,
	0, 0, 0, 0, 1033, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1711, 0,
	0, 1775, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 183, 183, 183, 183, 183, 0, 0, 183,
	183, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	1547, 1548, 183, 0, 0, 0, 0, 0, 0, 591,
	591, 0, 0, 0, 183, 0, 0, 183, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1148, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 1711, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 577, 577, 0, 0,
	0, 0, 1026, 0, 0, 1037, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 577, 0, 0,
	0, 0, 0, 0, 1747, 1748, 0, 0, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 1768,
	1769, 1366, 1770, 1771, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 1778, 0, 0, 0, 0, 0,
	0, 0, 577, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1149, 183, 183, 183, 183, 183, 1896,
	0, 0, 0, 0, 0, 0, 1650, 0, 0, 0,
	183, 0, 0, 183, 183, 0, 0, 183, 1660, 1241,
	0, 0, 484, 166, 0, 0, 0, 0, 0, 1919,
	0, 0, 1920, 0, 1125, 1922, 890, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 108, 0,
	130, 0, 0, 0, 1828, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1055, 0, 890, 890, 0, 890,
	890, 0, 890, 890, 0, 0, 0, 1115, 0, 140,
	0, 0, 0, 0, 129, 0, 0, 0, 1149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1241, 0,
	0, 0, 147, 0, 148, 0, 0, 0, 0, 1129,
	1130, 139, 138, 165, 0, 0, 0, 1875, 0, 1979,
	484, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1185, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 577, 0, 0, 0, 0,
	0, 134, 1131, 141, 0, 1128, 0, 135, 136, 0,
	1231, 151, 0, 0, 0, 1037, 0, 0, 1238, 0,
	0, 156, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1246, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 183, 0, 0, 0, 0, 0, 1262, 0,
	0, 1265, 0, 0, 0, 1149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1961, 1962, 1963, 1964, 1965, 0, 0, 0, 1968, 1969,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 143, 0, 0, 0, 0, 0, 183, 0,
	0, 0, 0, 0, 183, 0, 0, 0, 0, 0,
	0, 1149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 183, 0, 33, 34, 35, 68, 37, 38, 0,
	0, 0, 0, 0, 0, 0, 0, 183, 0, 0,
	0, 137, 0, 72, 0, 0, 0, 0, 39, 65,
	66, 0, 63, 131, 0, 0, 132, 0, 64, 1389,
	0, 0, 0, 0, 0, 0, 1393, 0, 1396, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 67, 0, 0,
	0, 1149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2067, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 890, 0, 0, 0, 0, 144, 149, 146, 152,
	153, 154, 155, 157, 158, 159, 160, 0, 0, 0,
	0, 0, 161, 162, 163, 164, 0, 0, 0, 42,
	45, 48, 47, 50, 0, 62, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1366, 0,
	51, 71, 70, 0, 0, 60, 61, 49, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1569, 0, 0, 555,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 53, 54, 183, 55, 56, 57, 58, 0, 0,
	0, 0, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1606, 1037, 0, 1534,
	1535, 1536, 1537, 1538, 0, 0, 1542, 1543, 0, 0,
	1544, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1033, 0, 0, 0, 0, 0, 0, 1632, 1633, 1549,
	0, 1033, 1033, 1033, 1033, 1033, 0, 0, 0, 0,
	0, 1551, 0, 0, 1553, 0, 0, 1414, 0, 0,
	1033, 0, 0, 0, 1033, 0, 0, 1149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 890, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 32, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1033, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1893, 0, 0, 0, 0,
	0, 0, 1899, 1900, 1901, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1846, 0, 0, 0, 0,
	0, 1852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1799, 0, 32, 0, 1799, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 32, 0, 2041, 0, 0, 0, 0,
	0, 0, 0, 712, 699, 0, 0, 650, 715, 621,
	639, 724, 641, 644, 682, 602, 663, 320, 636, 0,
	625, 598, 632, 599, 623, 652, 236, 656, 620, 701,
	666, 714, 279, 0, 626, 333, 684, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 721, 283, 673, 0, 378, 305, 0, 0, 0,
	654, 704, 661, 695, 649, 683, 610, 672, 716, 637,
	680, 717, 269, 220, 191, 317, 379, 248, 0, 0,
	2003, 173, 174, 175, 0, 2046, 2047, 0, 0, 0,
	2010, 0, 212, 0, 218, 677, 711, 634, 679, 232,
	267, 238, 231, 393, 681, 727, 597, 674, 0, 600,
	603, 723, 707, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 653, 662, 692, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 671, 0, 0, 0,
	606, 601, 0, 0, 0, 0, 651, 0, 0, 0,
	609, 0, 628, 693, 0, 595, 255, 604, 306, 697,
	706, 648, 420, 710, 646, 645, 713, 688, 607, 703,
	640, 278, 605, 275, 187, 201, 0, 638, 316, 354,
	359, 702, 624, 633, 223, 631, 357, 329, 408, 208,
	246, 351, 334, 355, 670, 686, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 619, 698,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 690, 726, 328, 358, 214, 410, 377,
	614, 618, 612, 613, 664, 665, 615, 718, 719, 720,
	694, 608, 0, 616, 617, 0, 700, 708, 709, 669,
	186, 199, 281, 722, 348, 249, 431, 415, 413, 596,
	611, 229, 622, 0, 0, 635, 642, 643, 655, 657,
	658, 659, 660, 668, 675, 676, 678, 685, 687, 689,
	691, 696, 705, 725, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 667, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 712,
	699, 0, 0, 650, 715, 621, 639, 724, 641, 644,
	682, 602, 663, 320, 636, 0, 625, 598, 632, 599,
	623, 652, 236, 656, 620, 701, 666, 714, 279, 0,
	626, 333, 684, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 721, 283, 673,
	0, 378, 305, 0, 0, 0, 654, 704, 661, 695,
	649, 683, 610, 672, 716, 637, 680, 717, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 677, 711, 634, 679, 232, 267, 238, 231, 393,
	681, 727, 597, 674, 0, 600, 603, 723, 707, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 653, 662,
	692, 647, 0, 0, 0, 0, 0, 0, 1791, 0,
	627, 0, 671, 0, 0, 0, 606, 601, 0, 0,
	0, 0, 651, 0, 0, 0, 609, 0, 628, 693,
	0, 595, 255, 604, 306, 697, 706, 648, 420, 710,
	646, 645, 713, 688, 607, 703, 640, 278, 605, 275,
	187, 201, 0, 638, 316, 354, 359, 702, 624, 633,
	223, 631, 357, 329, 408, 208, 246, 351, 334, 355,
	670, 686, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 619, 698, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 690,
	726, 328, 358, 214, 410, 377, 614, 618, 612, 613,
	664, 665, 615, 718, 719, 720, 694, 608, 0, 616,
	617, 0, 700, 708, 709, 669, 186, 199, 281, 722,
	348, 249, 431, 415, 413, 596, 611, 229, 622, 0,
	0, 635, 642, 643, 655, 657, 658, 659, 660, 668,
	675, 676, 678, 685, 687, 689, 691, 696, 705, 725,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 667, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 712, 699, 0, 0, 650,
	715, 621, 639, 724, 641, 644, 682, 602, 663, 320,
	636, 0, 625, 598, 632, 599, 623, 652, 236, 656,
	620, 701, 666, 714, 279, 0, 626, 333, 684, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 721, 283, 673, 0, 378, 305, 0,
	0, 0, 654, 704, 661, 695, 649, 683, 610, 672,
	716, 637, 680, 717, 269, 220, 191, 317, 379, 248,
	67, 0, 0, 173, 174, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 218, 677, 711, 634,
	679, 232, 267, 238, 231, 393, 681, 727, 597, 674,
	0, 600, 603, 723, 707, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 653, 662, 692, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 671, 0,
	0, 0, 606, 601, 0, 0, 0, 0, 651, 0,
	0, 0, 609, 0, 628, 693, 0, 595, 255, 604,
	306, 697, 706, 648, 420, 710, 646, 645, 713, 688,
	607, 703, 640, 278, 605, 275, 187, 201, 0, 638,
	316, 354, 359, 702, 624, 633, 223, 631, 357, 329,
	408, 208, 246, 351, 334, 355, 670, 686, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 405, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 204, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	619, 698, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 311,
	205, 263, 376, 276, 285, 690, 726, 328, 358, 214,
	410, 377, 614, 618, 612, 613, 664, 665, 615, 718,
	719, 720, 694, 608, 0, 616, 617, 0, 700, 708,
	709, 669, 186, 199, 281, 722, 348, 249, 431, 415,
	413, 596, 611, 229, 622, 0, 0, 635, 642, 643,
	655, 657, 658, 659, 660, 668, 675, 676, 678, 685,
	687, 689, 691, 696, 705, 725, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 667, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 712, 699, 0, 0, 650, 715, 621, 639, 724,
	641, 644, 682, 602, 663, 320, 636, 0, 625, 598,
	632, 599, 623, 652, 236, 656, 620, 701, 666, 714,
	279, 0, 626, 333, 684, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 721,
	283, 673, 0, 378, 305, 0, 0, 0, 654, 704,
	661, 695, 649, 683, 610, 672, 716, 637, 680, 717,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 677, 711, 634, 679, 232, 267, 238,
	231, 393, 681, 727, 597, 674, 0, 600, 603, 723,
	707, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	653, 662, 692, 647, 0, 0, 0, 0, 0, 0,
	1661, 0, 627, 0, 671, 0, 0, 0, 606, 601,
	0, 0, 0, 0, 651, 0, 0, 0, 609, 0,
	628, 693, 0, 595, 255, 604, 306, 697, 706, 648,
	420, 710, 646, 645, 713, 688, 607, 703, 640, 278,
	605, 275, 187, 201, 0, 638, 316, 354, 359, 702,
	624, 633, 223, 631, 357, 329, 408, 208, 246, 351,
	334, 355, 670, 686, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 619, 698, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 690, 726, 328, 358, 214, 410, 377, 614, 618,
	612, 613, 664, 665, 615, 718, 719, 720, 694, 608,
	0, 616, 617, 0, 700, 708, 709, 669, 186, 199,
	281, 722, 348, 249, 431, 415, 413, 596, 611, 229,
	622, 0, 0, 635, 642, 643, 655, 657, 658, 659,
	660, 668, 675, 676, 678, 685, 687, 689, 691, 696,
	705, 725, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 667, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 712, 699, 0,
	0, 650, 715, 621, 639, 724, 641, 644, 682, 602,
	663, 320, 636, 0, 625, 598, 632, 599, 623, 652,
	236, 656, 620, 701, 666, 714, 279, 0, 626, 333,
	684, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 721, 283, 673, 0, 378,
	305, 0, 0, 0, 654, 704, 661, 695, 649, 683,
	610, 672, 716, 637, 680, 717, 269, 220, 191, 317,
	379, 248, 0, 0, 0, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 677,
	711, 634, 679, 232, 267, 238, 231, 393, 681, 727,
	597, 674, 0, 600, 603, 723, 707, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 653, 662, 692, 647,
	0, 0, 0, 0, 0, 0, 1391, 0, 627, 0,
	671, 0, 0, 0, 606, 601, 0, 0, 0, 0,
	651, 0, 0, 0, 609, 0, 628, 693, 0, 595,
	255, 604, 306, 697, 706, 648, 420, 710, 646, 645,
	713, 688, 607, 703, 640, 278, 605, 275, 187, 201,
	0, 638, 316, 354, 359, 702, 624, 633, 223, 631,
	357, 329, 408, 208, 246, 351, 334, 355, 670, 686,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 619, 698, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 690, 726, 328,
	358, 214, 410, 377, 614, 618, 612, 613, 664, 665,
	615, 718, 719, 720, 694, 608, 0, 616, 617, 0,
	700, 708, 709, 669, 186, 199, 281, 722, 348, 249,
	431, 415, 413, 596, 611, 229, 622, 0, 0, 635,
	642, 643, 655, 657, 658, 659, 660, 668, 675, 676,
	678, 685, 687, 689, 691, 696, 705, 725, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 667,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 712, 699, 0, 0, 650, 715, 621,
	639, 724, 641, 644, 682, 602, 663, 320, 636, 0,
	625, 598, 632, 599, 623, 652, 236, 656, 620, 701,
	666, 714, 279, 0, 626, 333, 684, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 721, 283, 673, 0, 378, 305, 0, 0, 0,
	654, 704, 661, 695, 649, 683, 610, 672, 716, 637,
	680, 717, 269, 220, 191, 317, 379, 248, 0, 0,
	0, 173, 174, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 218, 677, 711, 634, 679, 232,
	267, 238, 231, 393, 681, 727, 597, 674, 0, 600,
	603, 723, 707, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 653, 662, 692, 647, 0, 0, 0, 0,
	0, 0, 0, 0, 627, 0, 671, 0, 0, 0,
	606, 601, 0, 0, 0, 0, 651, 0, 0, 0,
	609, 0, 628, 693, 0, 595, 255, 604, 306, 697,
	706, 648, 420, 710, 646, 645, 713, 688, 607, 703,
	640, 278, 605, 275, 187, 201, 0, 638, 316, 354,
	359, 702, 624, 633, 223, 631, 357, 329, 408, 208,
	246, 351, 334, 355, 670, 686, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 619, 698,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 690, 726, 328, 358, 214, 410, 377,
	614, 618, 612, 613, 664, 665, 615, 718, 719, 720,
	694, 608, 0, 616, 617, 0, 700, 708, 709, 669,
	186, 199, 281, 722, 348, 249, 431, 415, 413, 596,
	611, 229, 622, 0, 0, 635, 642, 643, 655, 657,
	658, 659, 660, 668, 675, 676, 678, 685, 687, 689,
	691, 696, 705, 725, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 667, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 712,
	699, 0, 0, 650, 715, 621, 639, 724, 641, 644,
	682, 602, 663, 320, 636, 0, 625, 598, 632, 599,
	623, 652, 236, 656, 620, 701, 666, 714, 279, 0,
	626, 333, 684, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 721, 283, 673,
	0, 378, 305, 0, 0, 0, 654, 704, 661, 695,
	649, 683, 610, 672, 716, 637, 680, 717, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 677, 711, 634, 679, 232, 267, 238, 231, 393,
	681, 727, 597, 674, 0, 600, 603, 723, 707, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 653, 662,
	692, 647, 0, 0, 0, 0, 0, 0, 0, 0,
	627, 0, 671, 0, 0, 0, 606, 601, 0, 0,
	0, 0, 651, 0, 0, 0, 609, 0, 628, 693,
	0, 595, 255, 604, 306, 697, 706, 648, 420, 710,
	646, 645, 713, 688, 607, 703, 640, 278, 605, 275,
	187, 201, 0, 638, 316, 354, 359, 702, 624, 633,
	223, 631, 357, 329, 408, 208, 246, 351, 334, 355,
	670, 686, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 729, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 619, 698, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 594, 728, 588, 587, 276, 285, 690,
	726, 328, 358, 214, 410, 377, 614, 618, 612, 613,
	664, 665, 615, 718, 719, 720, 694, 608, 0, 616,
	617, 0, 700, 708, 709, 669, 186, 199, 281, 722,
	348, 249, 431, 415, 413, 596, 611, 229, 622, 0,
	0, 635, 642, 643, 655, 657, 658, 659, 660, 668,
	675, 676, 678, 685, 687, 689, 691, 696, 705, 725,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 667, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 712, 699, 0, 0, 650,
	715, 621, 639, 724, 641, 644, 682, 602, 663, 320,
	636, 0, 625, 598, 632, 599, 623, 652, 236, 656,
	620, 701, 666, 714, 279, 0, 626, 333, 684, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 721, 283, 673, 0, 378, 305, 0,
	0, 0, 654, 704, 661, 695, 649, 683, 610, 672,
	716, 637, 680, 717, 269, 220, 191, 317, 379, 248,
	0, 0, 0, 173, 174, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 218, 677, 711, 634,
	679, 232, 267, 238, 231, 393, 681, 727, 597, 674,
	0, 600, 603, 723, 707, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 653, 662, 692, 647, 0, 0,
	0, 0, 0, 0, 0, 0, 627, 0, 671, 0,
	0, 0, 606, 601, 0, 0, 0, 0, 651, 0,
	0, 0, 609, 0, 628, 693, 0, 595, 255, 604,
	306, 697, 706, 648, 420, 710, 646, 645, 713, 688,
	607, 703, 640, 278, 605, 275, 187, 201, 0, 638,
	316, 354, 359, 702, 624, 633, 223, 631, 357, 329,
	408, 208, 246, 351, 334, 355, 670, 686, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 1041, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 729, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	619, 698, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 594,
	728, 588, 587, 276, 285, 690, 726, 328, 358, 214,
	410, 377, 614, 618, 612, 613, 664, 665, 615, 718,
	719, 720, 694, 608, 0, 616, 617, 0, 700, 708,
	709, 669, 186, 199, 281, 722, 348, 249, 431, 415,
	413, 596, 611, 229, 622, 0, 0, 635, 642, 643,
	655, 657, 658, 659, 660, 668, 675, 676, 678, 685,
	687, 689, 691, 696, 705, 725, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 667, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 712, 699, 0, 0, 650, 715, 621, 639, 724,
	641, 644, 682, 602, 663, 320, 636, 0, 625, 598,
	632, 599, 623, 652, 236, 656, 620, 701, 666, 714,
	279, 0, 626, 333, 684, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 721,
	283, 673, 0, 378, 305, 0, 0, 0, 654, 704,
	661, 695, 649, 683, 610, 672, 716, 637, 680, 717,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 677, 711, 634, 679, 232, 267, 238,
	231, 393, 681, 727, 597, 674, 0, 600, 603, 723,
	707, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	653, 662, 692, 647, 0, 0, 0, 0, 0, 0,
	0, 0, 627, 0, 671, 0, 0, 0, 606, 601,
	0, 0, 0, 0, 651, 0, 0, 0, 609, 0,
	628, 693, 0, 595, 255, 604, 306, 697, 706, 648,
	420, 710, 646, 645, 713, 688, 607, 703, 640, 278,
	605, 275, 187, 201, 0, 638, 316, 354, 359, 702,
	624, 633, 223, 631, 357, 329, 408, 208, 246, 351,
	334, 355, 670, 686, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 585, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 729, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 619, 698, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 594, 728, 588, 587, 276,
	285, 690, 726, 328, 358, 214, 410, 377, 614, 618,
	612, 613, 664, 665, 615, 718, 719, 720, 694, 608,
	0, 616, 617, 0, 700, 708, 709, 669, 186, 199,
	281, 722, 348, 249, 431, 415, 413, 596, 611, 229,
	622, 0, 0, 635, 642, 643, 655, 657, 658, 659,
	660, 668, 675, 676, 678, 685, 687, 689, 691, 696,
	705, 725, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 667, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	1320, 0, 489, 0, 0, 0, 236, 0, 488, 0,
	0, 0, 279, 0, 1321, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 532, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 67, 0,
	0, 173, 174, 175, 510, 509, 512, 513, 514, 515,
	0, 0, 212, 511, 218, 516, 517, 518, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 486, 503, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 501, 575, 0, 0, 0, 546, 0, 502, 0,
	0, 495, 496, 498, 497, 499, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 306, 545,
	0, 0, 420, 0, 0, 543, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	533, 544, 539, 540, 537, 538, 0, 536, 535, 534,
	547, 525, 526, 527, 528, 530, 0, 541, 542, 529,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 320,
	0, 0, 0, 0, 489, 0, 0, 0, 236, 0,
	488, 0, 0, 0, 279, 0, 0, 333, 0, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 532, 283, 0, 0, 378, 305, 0,
	0, 0, 0, 0, 523, 524, 0, 0, 0, 0,
	0, 0, 1430, 0, 269, 220, 191, 317, 379, 248,
	67, 0, 0, 173, 174, 175, 510, 509, 512, 513,
	514, 515, 0, 0, 212, 511, 218, 516, 517, 518,
	1431, 232, 267, 238, 231, 393, 0, 0, 0, 486,
	503, 0, 531, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 500, 501, 0, 0, 0, 0, 546, 0,
	502, 0, 0, 495, 496, 498, 497, 499, 504, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	306, 545, 0, 0, 420, 0, 0, 543, 0, 0,
	0, 0, 0, 278, 0, 275, 187, 201, 0, 0,
	316, 354, 359, 0, 0, 0, 223, 0, 357, 329,
	408, 208, 246, 351, 334, 355, 0, 0, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 405, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 204, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	0, 0, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 311,
	205, 263, 376, 276, 285, 0, 0, 328, 358, 214,
	410, 377, 533, 544, 539, 540, 537, 538, 0, 536,
	535, 534, 547, 525, 526, 527, 528, 530, 0, 541,
	542, 529, 186, 199, 281, 0, 348, 249, 431, 415,
	413, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 0, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 320, 0, 0, 0, 0, 489, 0, 0, 0,
	236, 0, 488, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 532, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 523, 524, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 67, 0, 563, 173, 174, 175, 510, 509,
	512, 513, 514, 515, 0, 0, 212, 511, 218, 516,
	517, 518, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 486, 503, 0, 531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 500, 501, 0, 0, 0, 0,
	546, 0, 502, 0, 0, 495, 496, 498, 497, 499,
	504, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 545, 0, 0, 420, 0, 0, 543,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 533, 544, 539, 540, 537, 538,
	0, 536, 535, 534, 547, 525, 526, 527, 528, 530,
	0, 541, 542, 529, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 320, 0, 0, 0, 0, 489, 0,
	0, 0, 236, 0, 488, 0, 0, 0, 279, 0,
	0, 333, 0, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 532, 283, 0,
	0, 378, 305, 0, 0, 0, 0, 0, 523, 524,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 220,
	191, 317, 379, 248, 67, 0, 0, 173, 174, 175,
	510, 509, 512, 513, 514, 515, 0, 0, 212, 511,
	218, 516, 517, 518, 0, 232, 267, 238, 231, 393,
	0, 0, 0, 486, 503, 0, 531, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 500, 501, 575, 0,
	0, 0, 546, 0, 502, 0, 0, 495, 496, 498,
	497, 499, 504, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 306, 545, 0, 0, 420, 0,
	0, 543, 0, 0, 0, 0, 0, 278, 0, 275,
	187, 201, 0, 0, 316, 354, 359, 0, 0, 0,
	223, 0, 357, 329, 408, 208, 246, 351, 334, 355,
	0, 0, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 0, 0, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 0,
	0, 328, 358, 214, 410, 377, 533, 544, 539, 540,
	537, 538, 0, 536, 535, 534, 547, 525, 526, 527,
	528, 530, 0, 541, 542, 529, 186, 199, 281, 0,
	348, 249, 431, 415, 413, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 0, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 320, 0, 0, 0, 0,
	489, 0, 0, 0, 236, 0, 488, 0, 0, 0,
	279, 0, 0, 333, 0, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 532,
	283, 0, 0, 378, 305, 0, 0, 0, 0, 0,
	523, 524, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 220, 191, 317, 379, 248, 67, 0, 0, 173,
	174, 175, 510, 1338, 512, 513, 514, 515, 0, 0,
	212, 511, 218, 516, 517, 518, 0, 232, 267, 238,
	231, 393, 0, 0, 0, 486, 503, 0, 531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 500, 501,
	575, 0, 0, 0, 546, 0, 502, 0, 0, 495,
	496, 498, 497, 499, 504, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 306, 545, 0, 0,
	420, 0, 0, 543, 0, 0, 0, 0, 0, 278,
	0, 275, 187, 201, 0, 0, 316, 354, 359, 0,
	0, 0, 223, 0, 357, 329, 408, 208, 246, 351,
	334, 355, 0, 0, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 0, 0, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 0, 0, 328, 358, 214, 410, 377, 533, 544,
	539, 540, 537, 538, 0, 536, 535, 534, 547, 525,
	526, 527, 528, 530, 0, 541, 542, 529, 186, 199,
	281, 0, 348, 249, 431, 415, 413, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 0, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	0, 0, 489, 0, 0, 0, 236, 0, 488, 0,
	0, 0, 279, 0, 0, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 532, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 523, 524, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 67, 0,
	0, 173, 174, 175, 510, 1335, 512, 513, 514, 515,
	0, 0, 212, 511, 218, 516, 517, 518, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 486, 503, 0,
	531, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 501, 575, 0, 0, 0, 546, 0, 502, 0,
	0, 495, 496, 498, 497, 499, 504, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 306, 545,
	0, 0, 420, 0, 0, 543, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	533, 544, 539, 540, 537, 538, 0, 536, 535, 534,
	547, 525, 526, 527, 528, 530, 0, 541, 542, 529,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 489, 0, 0,
	0, 236, 0, 488, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 532, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 523, 524, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 67, 0, 0, 173, 174, 175, 510,
	509, 512, 513, 514, 515, 0, 0, 212, 511, 218,
	516, 517, 518, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 486, 503, 0, 531, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 500, 501, 0, 0, 0,
	0, 546, 0, 502, 0, 0, 495, 496, 498, 497,
	499, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 545, 0, 0, 420, 0, 0,
	543, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 533, 544, 539, 540, 537,
	538, 0, 536, 535, 534, 547, 525, 526, 527, 528,
	530, 0, 541, 542, 529, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 489,
	0, 0, 0, 236, 0, 488, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 532, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 523,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 67, 0, 0, 173, 174,
	175, 510, 509, 512, 513, 514, 515, 0, 0, 212,
	511, 218, 516, 517, 518, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 486, 503, 0, 531, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 500, 501, 0,
	0, 0, 0, 546, 0, 502, 0, 0, 495, 496,
	498, 497, 499, 504, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 545, 0, 0, 420,
	0, 0, 543, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 533, 544, 539,
	540, 537, 538, 0, 536, 535, 534, 547, 525, 526,
	527, 528, 530, 0, 541, 542, 529, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	532, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 523, 524, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 67, 0, 0,
	173, 174, 175, 510, 509, 512, 513, 514, 515, 0,
	0, 212, 511, 218, 516, 517, 518, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 503, 0, 531,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 500,
	501, 0, 0, 0, 0, 546, 0, 502, 0, 0,
	495, 496, 498, 497, 499, 504, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 545, 0,
	0, 420, 0, 0, 543, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 2068, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 533,
	544, 539, 540, 537, 538, 0, 536, 535, 534, 547,
	525, 526, 527, 528, 530, 0, 541, 542, 529, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 532, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 523, 524, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 67,
	0, 563, 173, 174, 175, 510, 509, 512, 513, 514,
	515, 0, 0, 212, 511, 218, 516, 517, 518, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 503,
	0, 531, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 500, 501, 0, 0, 0, 0, 546, 0, 502,
	0, 0, 495, 496, 498, 497, 499, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	545, 0, 0, 420, 0, 0, 543, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 533, 544, 539, 540, 537, 538, 0, 536, 535,
	534, 547, 525, 526, 527, 528, 530, 0, 541, 542,
	529, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 532, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 523, 524, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 67, 0, 0, 173, 174, 175, 510, 509, 512,
	513, 514, 515, 0, 0, 212, 511, 218, 516, 517,
	518, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 503, 0, 531, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 500, 501, 0, 0, 0, 0, 546,
	0, 502, 0, 0, 495, 496, 498, 497, 499, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 545, 0, 0, 420, 0, 0, 543, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 533, 544, 539, 540, 537, 538, 0,
	536, 535, 534, 547, 525, 526, 527, 528, 530, 0,
	541, 542, 529, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 0, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 919, 918, 928, 929, 921, 922, 923, 924, 925,
	926, 927, 920, 0, 0, 930, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 771, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 770, 420,
	0, 0, 0, 0, 0, 0, 767, 768, 278, 737,
	275, 187, 201, 761, 765, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 0, 0,
	1019, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 1021, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 908, 909, 907, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 910, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 33, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 0, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 67, 0, 563, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 0,
	0, 0, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 320, 0, 0, 0, 1365, 0, 0,
	0, 0, 236, 0, 0, 0, 0, 0, 279, 0,
	0, 333, 0, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 0, 283, 0,
	0, 378, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 1367, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 0, 0, 0, 0, 232, 267, 238, 231, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 306, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 275,
	187, 201, 0, 0, 316, 354, 359, 0, 0, 0,
	223, 0, 357, 329, 408, 208, 246, 351, 334, 355,
	0, 1363, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 0, 0, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 0,
	0, 328, 358, 214, 410, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 199, 281, 0,
	348, 249, 431, 415, 413, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 0, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	279, 0, 0, 333, 0, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 0,
	283, 0, 0, 378, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 0, 0, 0, 0, 232, 267, 238,
	231, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 731, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 306, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	737, 275, 187, 201, 735, 0, 316, 354, 359, 0,
	0, 0, 223, 0, 357, 329, 408, 208, 246, 351,
	334, 355, 0, 0, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 0, 0, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 0, 0, 328, 358, 214, 410, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 199,
	281, 0, 348, 249, 431, 415, 413, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 0, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	0, 1365, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 279, 0, 0, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 0, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 0, 0,
	0, 173, 174, 175, 0, 1367, 0, 0, 0, 0,
	0, 0, 212, 0, 218, 0, 0, 0, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 255, 0, 306, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	257, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 33,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 67, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 0, 1383, 0, 0, 1384, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 0, 0,
	0, 0, 0, 0, 0, 236, 0, 1052, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 1051, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 0, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 0,
	0, 563, 173, 174, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 218, 0, 0, 0, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 0, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 0, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 67, 0, 0, 173, 174, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 218, 0, 0,
	0, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 0, 0, 0, 173, 174, 175, 0,
	1367, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 1021, 0, 0, 0, 0, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 1173, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	1171, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 0, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 0,
	0, 0, 173, 174, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 218, 0, 0, 0, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 1169, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 0, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 0, 0, 0, 173, 174, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 218, 0, 0,
	0, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 1167, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 0, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 320, 0, 1165, 0, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 279,
	0, 0, 333, 0, 369, 222, 288, 286, 395, 245,
	239, 235, 221, 264, 293, 331, 386, 325, 0, 283,
	0, 0, 378, 305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	220, 191, 317, 379, 248, 0, 0, 0, 173, 174,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 218, 0, 0, 0, 0, 232, 267, 238, 231,
	393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 0, 306, 0, 0, 0, 420,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	275, 187, 201, 0, 0, 316, 354, 359, 0, 0,
	0, 223, 0, 357, 329, 408, 208, 246, 351, 334,
	355, 0, 0, 356, 284, 397, 346, 407, 421, 422,
	230, 310, 414, 390, 418, 430, 202, 227, 323, 383,
	411, 375, 303, 394, 274, 374, 253, 190, 282, 194,
	385, 405, 213, 367, 0, 0, 0, 196, 403, 382,
	300, 271, 272, 195, 0, 350, 234, 251, 225, 319,
	400, 401, 224, 432, 203, 417, 198, 204, 416, 312,
	396, 404, 301, 292, 197, 402, 299, 291, 277, 244,
	260, 344, 287, 345, 261, 308, 307, 309, 0, 192,
	0, 380, 412, 433, 210, 0, 0, 392, 426, 429,
	0, 347, 211, 252, 243, 343, 250, 280, 425, 427,
	428, 209, 341, 258, 311, 205, 263, 376, 276, 285,
	0, 0, 328, 358, 214, 410, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 186, 199, 281,
	0, 348, 249, 431, 415, 413, 0, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 188, 189, 200, 207, 216, 228, 241, 247, 256,
	259, 262, 265, 266, 268, 273, 290, 294, 295, 296,
	297, 313, 314, 315, 318, 321, 322, 324, 326, 327,
	330, 336, 337, 338, 339, 340, 342, 349, 353, 360,
	361, 362, 363, 364, 365, 366, 370, 371, 372, 373,
	381, 384, 398, 399, 409, 419, 423, 257, 406, 424,
	0, 289, 0, 193, 219, 206, 226, 240, 242, 270,
	298, 304, 332, 335, 254, 237, 217, 352, 215, 368,
	387, 388, 389, 391, 302, 233, 320, 0, 1161, 0,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 279, 0, 0, 333, 0, 369, 222, 288, 286,
	395, 245, 239, 235, 221, 264, 293, 331, 386, 325,
	0, 283, 0, 0, 378, 305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 220, 191, 317, 379, 248, 0, 0, 0,
	173, 174, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 212, 0, 218, 0, 0, 0, 0, 232, 267,
	238, 231, 393, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 0, 306, 0, 0,
	0, 420, 0, 0, 0, 0, 0, 0, 0, 0,
	278, 0, 275, 187, 201, 0, 0, 316, 354, 359,
	0, 0, 0, 223, 0, 357, 329, 408, 208, 246,
	351, 334, 355, 0, 0, 356, 284, 397, 346, 407,
	421, 422, 230, 310, 414, 390, 418, 430, 202, 227,
	323, 383, 411, 375, 303, 394, 274, 374, 253, 190,
	282, 194, 385, 405, 213, 367, 0, 0, 0, 196,
	403, 382, 300, 271, 272, 195, 0, 350, 234, 251,
	225, 319, 400, 401, 224, 432, 203, 417, 198, 204,
	416, 312, 396, 404, 301, 292, 197, 402, 299, 291,
	277, 244, 260, 344, 287, 345, 261, 308, 307, 309,
	0, 192, 0, 380, 412, 433, 210, 0, 0, 392,
	426, 429, 0, 347, 211, 252, 243, 343, 250, 280,
	425, 427, 428, 209, 341, 258, 311, 205, 263, 376,
	276, 285, 0, 0, 328, 358, 214, 410, 377, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	199, 281, 0, 348, 249, 431, 415, 413, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 188, 189, 200, 207, 216, 228, 241,
	247, 256, 259, 262, 265, 266, 268, 273, 290, 294,
	295, 296, 297, 313, 314, 315, 318, 321, 322, 324,
	326, 327, 330, 336, 337, 338, 339, 340, 342, 349,
	353, 360, 361, 362, 363, 364, 365, 366, 370, 371,
	372, 373, 381, 384, 398, 399, 409, 419, 423, 257,
	406, 424, 0, 289, 0, 193, 219, 206, 226, 240,
	242, 270, 298, 304, 332, 335, 254, 237, 217, 352,
	215, 368, 387, 388, 389, 391, 302, 233, 320, 0,
	1159, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 279, 0, 0, 333, 0, 369, 222,
	288, 286, 395, 245, 239, 235, 221, 264, 293, 331,
	386, 325, 0, 283, 0, 0, 378, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 220, 191, 317, 379, 248, 0,
	0, 0, 173, 174, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 218, 0, 0, 0, 0,
	232, 267, 238, 231, 393, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 255, 0, 306,
	0, 0, 0, 420, 0, 0, 0, 0, 0, 0,
	0, 0, 278, 0, 275, 187, 201, 0, 0, 316,
	354, 359, 0, 0, 0, 223, 0, 357, 329, 408,
	208, 246, 351, 334, 355, 0, 0, 356, 284, 397,
	346, 407, 421, 422, 230, 310, 414, 390, 418, 430,
	202, 227, 323, 383, 411, 375, 303, 394, 274, 374,
	253, 190, 282, 194, 385, 405, 213, 367, 0, 0,
	0, 196, 403, 382, 300, 271, 272, 195, 0, 350,
	234, 251, 225, 319, 400, 401, 224, 432, 203, 417,
	198, 204, 416, 312, 396, 404, 301, 292, 197, 402,
	299, 291, 277, 244, 260, 344, 287, 345, 261, 308,
	307, 309, 0, 192, 0, 380, 412, 433, 210, 0,
	0, 392, 426, 429, 0, 347, 211, 252, 243, 343,
	250, 280, 425, 427, 428, 209, 341, 258, 311, 205,
	263, 376, 276, 285, 0, 0, 328, 358, 214, 410,
	377, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 186, 199, 281, 0, 348, 249, 431, 415, 413,
	0, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 188, 189, 200, 207, 216,
	228, 241, 247, 256, 259, 262, 265, 266, 268, 273,
	290, 294, 295, 296, 297, 313, 314, 315, 318, 321,
	322, 324, 326, 327, 330, 336, 337, 338, 339, 340,
	342, 349, 353, 360, 361, 362, 363, 364, 365, 366,
	370, 371, 372, 373, 381, 384, 398, 399, 409, 419,
	423, 257, 406, 424, 0, 289, 0, 193, 219, 206,
	226, 240, 242, 270, 298, 304, 332, 335, 254, 237,
	217, 352, 215, 368, 387, 388, 389, 391, 302, 233,
	320, 0, 1157, 0, 0, 0, 0, 0, 0, 236,
	0, 0, 0, 0, 0, 279, 0, 0, 333, 0,
	369, 222, 288, 286, 395, 245, 239, 235, 221, 264,
	293, 331, 386, 325, 0, 283, 0, 0, 378, 305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 220, 191, 317, 379,
	248, 0, 0, 0, 173, 174, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 212, 0, 218, 0, 0,
	0, 0, 232, 267, 238, 231, 393, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	0, 306, 0, 0, 0, 420, 0, 0, 0, 0,
	0, 0, 0, 0, 278, 0, 275, 187, 201, 0,
	0, 316, 354, 359, 0, 0, 0, 223, 0, 357,
	329, 408, 208, 246, 351, 334, 355, 0, 0, 356,
	284, 397, 346, 407, 421, 422, 230, 310, 414, 390,
	418, 430, 202, 227, 323, 383, 411, 375, 303, 394,
	274, 374, 253, 190, 282, 194, 385, 405, 213, 367,
	0, 0, 0, 196, 403, 382, 300, 271, 272, 195,
	0, 350, 234, 251, 225, 319, 400, 401, 224, 432,
	203, 417, 198, 204, 416, 312, 396, 404, 301, 292,
	197, 402, 299, 291, 277, 244, 260, 344, 287, 345,
	261, 308, 307, 309, 0, 192, 0, 380, 412, 433,
	210, 0, 0, 392, 426, 429, 0, 347, 211, 252,
	243, 343, 250, 280, 425, 427, 428, 209, 341, 258,
	311, 205, 263, 376, 276, 285, 0, 0, 328, 358,
	214, 410, 377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 199, 281, 0, 348, 249, 431,
	415, 413, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 188, 189, 200,
	207, 216, 228, 241, 247, 256, 259, 262, 265, 266,
	268, 273, 290, 294, 295, 296, 297, 313, 314, 315,
	318, 321, 322, 324, 326, 327, 330, 336, 337, 338,
	339, 340, 342, 349, 353, 360, 361, 362, 363, 364,
	365, 366, 370, 371, 372, 373, 381, 384, 398, 399,
	409, 419, 423, 257, 406, 424, 0, 289, 0, 193,
	219, 206, 226, 240, 242, 270, 298, 304, 332, 335,
	254, 237, 217, 352, 215, 368, 387, 388, 389, 391,
	302, 233, 320, 0, 0, 0, 0, 0, 0, 0,
	0, 236, 0, 0, 0, 0, 0, 279, 0, 0,
	333, 0, 369, 222, 288, 286, 395, 245, 239, 235,
	221, 264, 293, 331, 386, 325, 0, 283, 0, 0,
	378, 305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 269, 220, 191,
	317, 379, 248, 1132, 0, 0, 173, 174, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 218,
	0, 0, 0, 0, 232, 267, 238, 231, 393, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 0, 306, 0, 0, 0, 420, 0, 0,
	0, 0, 0, 0, 0, 0, 278, 0, 275, 187,
	201, 0, 0, 316, 354, 359, 0, 0, 0, 223,
	0, 357, 329, 408, 208, 246, 351, 334, 355, 0,
	0, 356, 284, 397, 346, 407, 421, 422, 230, 310,
	414, 390, 418, 430, 202, 227, 323, 383, 411, 375,
	303, 394, 274, 374, 253, 190, 282, 194, 385, 405,
	213, 367, 0, 0, 0, 196, 403, 382, 300, 271,
	272, 195, 0, 350, 234, 251, 225, 319, 400, 401,
	224, 432, 203, 417, 198, 204, 416, 312, 396, 404,
	301, 292, 197, 402, 299, 291, 277, 244, 260, 344,
	287, 345, 261, 308, 307, 309, 0, 192, 0, 380,
	412, 433, 210, 0, 0, 392, 426, 429, 0, 347,
	211, 252, 243, 343, 250, 280, 425, 427, 428, 209,
	341, 258, 311, 205, 263, 376, 276, 285, 0, 0,
	328, 358, 214, 410, 377, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 186, 199, 281, 0, 348,
	249, 431, 415, 413, 0, 0, 229, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 188,
	189, 200, 207, 216, 228, 241, 247, 256, 259, 262,
	265, 266, 268, 273, 290, 294, 295, 296, 297, 313,
	314, 315, 318, 321, 322, 324, 326, 327, 330, 336,
	337, 338, 339, 340, 342, 349, 353, 360, 361, 362,
	363, 364, 365, 366, 370, 371, 372, 373, 381, 384,
	398, 399, 409, 419, 423, 257, 406, 424, 0, 289,
	0, 193, 219, 206, 226, 240, 242, 270, 298, 304,
	332, 335, 254, 237, 217, 352, 215, 368, 387, 388,
	389, 391, 302, 233, 1034, 0, 0, 0, 0, 0,
	0, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 0, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 0, 0, 0, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 0,
	0, 0, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233, 320, 0, 0, 0, 0, 0, 0,
	0, 1025, 236, 0, 0, 0, 0, 0, 279, 0,
	0, 333, 0, 369, 222, 288, 286, 395, 245, 239,
	235, 221, 264, 293, 331, 386, 325, 0, 283, 0,
	0, 378, 305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 220,
	191, 317, 379, 248, 0, 0, 0, 173, 174, 175,
	0, 0, 0, 0, 0, 0, 0, 0, 212, 0,
	218, 0, 0, 0, 0, 232, 267, 238, 231, 393,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 0, 306, 0, 0, 0, 420, 0,
	0, 0, 0, 0, 0, 0, 0, 278, 0, 275,
	187, 201, 0, 0, 316, 354, 359, 0, 0, 0,
	223, 0, 357, 329, 408, 208, 246, 351, 334, 355,
	0, 0, 356, 284, 397, 346, 407, 421, 422, 230,
	310, 414, 390, 418, 430, 202, 227, 323, 383, 411,
	375, 303, 394, 274, 374, 253, 190, 282, 194, 385,
	405, 213, 367, 0, 0, 0, 196, 403, 382, 300,
	271, 272, 195, 0, 350, 234, 251, 225, 319, 400,
	401, 224, 432, 203, 417, 198, 204, 416, 312, 396,
	404, 301, 292, 197, 402, 299, 291, 277, 244, 260,
	344, 287, 345, 261, 308, 307, 309, 0, 192, 0,
	380, 412, 433, 210, 0, 0, 392, 426, 429, 0,
	347, 211, 252, 243, 343, 250, 280, 425, 427, 428,
	209, 341, 258, 311, 205, 263, 376, 276, 285, 0,
	0, 328, 358, 214, 410, 377, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 186, 199, 281, 0,
	348, 249, 431, 415, 413, 0, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	188, 189, 200, 207, 216, 228, 241, 247, 256, 259,
	262, 265, 266, 268, 273, 290, 294, 295, 296, 297,
	313, 314, 315, 318, 321, 322, 324, 326, 327, 330,
	336, 337, 338, 339, 340, 342, 349, 353, 360, 361,
	362, 363, 364, 365, 366, 370, 371, 372, 373, 381,
	384, 398, 399, 409, 419, 423, 257, 406, 424, 0,
	289, 0, 193, 219, 206, 226, 240, 242, 270, 298,
	304, 332, 335, 254, 237, 217, 352, 215, 368, 387,
	388, 389, 391, 302, 233, 320, 0, 0, 0, 0,
	0, 0, 0, 0, 236, 0, 0, 0, 0, 0,
	279, 0, 0, 333, 0, 369, 222, 288, 286, 395,
	245, 239, 235, 221, 264, 293, 331, 386, 325, 0,
	283, 0, 0, 378, 305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 220, 191, 317, 379, 248, 0, 0, 0, 173,
	174, 175, 0, 899, 0, 0, 0, 0, 0, 0,
	212, 0, 218, 0, 0, 0, 0, 232, 267, 238,
	231, 393, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 0, 306, 0, 0, 0,
	420, 0, 0, 0, 0, 0, 0, 0, 0, 278,
	0, 275, 187, 201, 0, 0, 316, 354, 359, 0,
	0, 0, 223, 0, 357, 329, 408, 208, 246, 351,
	334, 355, 0, 0, 356, 284, 397, 346, 407, 421,
	422, 230, 310, 414, 390, 418, 430, 202, 227, 323,
	383, 411, 375, 303, 394, 274, 374, 253, 190, 282,
	194, 385, 405, 213, 367, 0, 0, 0, 196, 403,
	382, 300, 271, 272, 195, 0, 350, 234, 251, 225,
	319, 400, 401, 224, 432, 203, 417, 198, 204, 416,
	312, 396, 404, 301, 292, 197, 402, 299, 291, 277,
	244, 260, 344, 287, 345, 261, 308, 307, 309, 0,
	192, 0, 380, 412, 433, 210, 0, 0, 392, 426,
	429, 0, 347, 211, 252, 243, 343, 250, 280, 425,
	427, 428, 209, 341, 258, 311, 205, 263, 376, 276,
	285, 0, 0, 328, 358, 214, 410, 377, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 186, 199,
	281, 0, 348, 249, 431, 415, 413, 0, 0, 229,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 188, 189, 200, 207, 216, 228, 241, 247,
	256, 259, 262, 265, 266, 268, 273, 290, 294, 295,
	296, 297, 313, 314, 315, 318, 321, 322, 324, 326,
	327, 330, 336, 337, 338, 339, 340, 342, 349, 353,
	360, 361, 362, 363, 364, 365, 366, 370, 371, 372,
	373, 381, 384, 398, 399, 409, 419, 423, 257, 406,
	424, 0, 289, 0, 193, 219, 206, 226, 240, 242,
	270, 298, 304, 332, 335, 254, 237, 217, 352, 215,
	368, 387, 388, 389, 391, 302, 233, 320, 0, 0,
	0, 0, 0, 0, 0, 0, 236, 0, 0, 0,
	0, 0, 279, 0, 0, 333, 0, 369, 222, 288,
	286, 395, 245, 239, 235, 221, 264, 293, 331, 386,
	325, 0, 283, 0, 0, 378, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 220, 191, 317, 379, 248, 0, 0,
	0, 173, 174, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 212, 0, 218, 0, 0, 0, 0, 232,
	267, 238, 231, 393, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 479, 0, 255, 0, 306, 0,
	0, 0, 420, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 275, 187, 201, 0, 0, 316, 354,
	359, 0, 0, 0, 223, 0, 357, 329, 408, 208,
	246, 351, 334, 355, 0, 0, 356, 284, 397, 346,
	407, 421, 422, 230, 310, 414, 390, 418, 430, 202,
	227, 323, 383, 411, 375, 303, 394, 274, 374, 253,
	190, 282, 194, 385, 405, 213, 367, 0, 0, 0,
	196, 403, 382, 300, 271, 272, 195, 0, 350, 234,
	251, 225, 319, 400, 401, 224, 432, 203, 417, 198,
	204, 416, 312, 396, 404, 301, 292, 197, 402, 299,
	291, 277, 244, 260, 344, 287, 345, 261, 308, 307,
	309, 0, 192, 0, 380, 412, 433, 210, 0, 0,
	392, 426, 429, 0, 347, 211, 252, 243, 343, 250,
	280, 425, 427, 428, 209, 341, 258, 311, 205, 263,
	376, 276, 285, 0, 0, 328, 358, 214, 410, 377,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	186, 199, 281, 0, 348, 249, 431, 415, 413, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 188, 189, 200, 207, 216, 228,
	241, 247, 256, 259, 262, 265, 266, 268, 273, 290,
	294, 295, 296, 297, 313, 314, 315, 318, 321, 322,
	324, 326, 327, 330, 336, 337, 338, 339, 340, 342,
	349, 353, 360, 361, 362, 363, 364, 365, 366, 370,
	371, 372, 373, 381, 384, 398, 399, 409, 419, 423,
	478, 406, 424, 0, 289, 0, 193, 219, 206, 226,
	240, 242, 270, 298, 304, 332, 335, 254, 237, 217,
	352, 215, 368, 387, 388, 389, 391, 302, 233, 320,
	0, 0, 0, 0, 0, 0, 0, 0, 236, 0,
	0, 0, 0, 0, 279, 0, 0, 333, 0, 369,
	222, 288, 286, 395, 245, 239, 235, 221, 264, 293,
	331, 386, 325, 0, 283, 0, 0, 378, 305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 220, 191, 317, 379, 248,
	0, 0, 0, 173, 174, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 212, 0, 218, 0, 0, 0,
	0, 232, 267, 238, 231, 393, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 255, 0,
	306, 0, 181, 0, 420, 0, 0, 0, 0, 0,
	0, 0, 0, 278, 0, 275, 187, 201, 0, 0,
	316, 354, 359, 0, 0, 0, 223, 0, 357, 329,
	408, 208, 246, 351, 334, 355, 0, 0, 356, 284,
	397, 346, 407, 421, 422, 230, 310, 414, 390, 418,
	430, 202, 227, 323, 383, 411, 375, 303, 394, 274,
	374, 253, 190, 282, 194, 385, 405, 213, 367, 0,
	0, 0, 196, 403, 382, 300, 271, 272, 195, 0,
	350, 234, 251, 225, 319, 400, 401, 224, 432, 203,
	417, 198, 204, 416, 312, 396, 404, 301, 292, 197,
	402, 299, 291, 277, 244, 260, 344, 287, 345, 261,
	308, 307, 309, 0, 192, 0, 380, 412, 433, 210,
	0, 0, 392, 426, 429, 0, 347, 211, 252, 243,
	343, 250, 280, 425, 427, 428, 209, 341, 258, 311,
	205, 263, 376, 276, 285, 0, 0, 328, 358, 214,
	410, 377, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 186, 199, 281, 0, 348, 249, 431, 415,
	413, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 188, 189, 200, 207,
	216, 228, 241, 247, 256, 259, 262, 265, 266, 268,
	273, 290, 294, 295, 296, 297, 313, 314, 315, 318,
	321, 322, 324, 326, 327, 330, 336, 337, 338, 339,
	340, 342, 349, 353, 360, 361, 362, 363, 364, 365,
	366, 370, 371, 372, 373, 381, 384, 398, 399, 409,
	419, 423, 257, 406, 424, 0, 289, 0, 193, 219,
	206, 226, 240, 242, 270, 298, 304, 332, 335, 254,
	237, 217, 352, 215, 368, 387, 388, 389, 391, 302,
	233, 320, 0, 0, 0, 0, 0, 0, 0, 0,
	236, 0, 0, 0, 0, 0, 279, 0, 0, 333,
	0, 369, 222, 288, 286, 395, 245, 239, 235, 221,
	264, 293, 331, 386, 325, 0, 283, 0, 0, 378,
	305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 220, 191, 317,
	379, 248, 0, 0, 0, 173, 174, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 212, 0, 218, 0,
	0, 0, 0, 232, 267, 238, 231, 393, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	255, 0, 306, 0, 0, 0, 420, 0, 0, 0,
	0, 0, 0, 0, 0, 278, 0, 275, 187, 201,
	0, 0, 316, 354, 359, 0, 0, 0, 223, 0,
	357, 329, 408, 208, 246, 351, 334, 355, 0, 0,
	356, 284, 397, 346, 407, 421, 422, 230, 310, 414,
	390, 418, 430, 202, 227, 323, 383, 411, 375, 303,
	394, 274, 374, 253, 190, 282, 194, 385, 405, 213,
	367, 0, 0, 0, 196, 403, 382, 300, 271, 272,
	195, 0, 350, 234, 251, 225, 319, 400, 401, 224,
	432, 203, 417, 198, 204, 416, 312, 396, 404, 301,
	292, 197, 402, 299, 291, 277, 244, 260, 344, 287,
	345, 261, 308, 307, 309, 0, 192, 0, 380, 412,
	433, 210, 0, 0, 392, 426, 429, 0, 347, 211,
	252, 243, 343, 250, 280, 425, 427, 428, 209, 341,
	258, 311, 205, 263, 376, 276, 285, 0, 0, 328,
	358, 214, 410, 377, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 199, 281, 0, 348, 249,
	431, 415, 413, 0, 0, 229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 188, 189,
	200, 207, 216, 228, 241, 247, 256, 259, 262, 265,
	266, 268, 273, 290, 294, 295, 296, 297, 313, 314,
	315, 318, 321, 322, 324, 326, 327, 330, 336, 337,
	338, 339, 340, 342, 349, 353, 360, 361, 362, 363,
	364, 365, 366, 370, 371, 372, 373, 381, 384, 398,
	399, 409, 419, 423, 257, 406, 424, 0, 289, 0,
	193, 219, 206, 226, 240, 242, 270, 298, 304, 332,
	335, 254, 237, 217, 352, 215, 368, 387, 388, 389,
	391, 302, 233,
}

var yyPact = [...]int{
	3927, -1000, -324, 1603, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1524, 1196, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	551, 1277, 63, 1473, 2432, 68, 992, 373, 44, 25280,
	372, 41, 25712, -1000, 34, -1000, 18, 25712, 30, 24848,
	-1000, -1000, -1000, 11855, 1427, -59, -99, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1256, 1510, 1511, 1539, 1032,
	1662, -1000, 10114, 10114, 343, 343, 343, 8386, -1000, -1000,
	15756, 25712, 25712, 1284, 336, 367, 336, -156, -1000, -1000,
	-1000, -1000, -1000, -1000, 1473, -1000, -1000, 195, -1000, 187,
	1194, -1000, 1193, -1000, 462, 384, 264, 275, 269, 260,
	258, 257, 256, 254, 251, 248, 237, 268, -1000, 486,
	486, -196, -197, 2553, 323, 323, 323, 357, 1446, 1444,
	-1000, 522, -1000, 486, 486, 53, 486, 486, 486, 486,
	146, 135, 486, 486, 486, 486, 486, 486, 486, 486,
	486, 486, 486, 486, 486, 486, 486, 25712, -1000, 25712,
	583, 1473, 107, -1000, -1000, -1000, 25712, 329, 992, 329,
	329, 25712, -1000, 420, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 25712, 614, 614, 614, 614, 614,
	614, 4, -1000, -4, 141, 119, 104, -30, 992, 306,
	-1000, 509, -1000, 100, 29, -1000, 614, 5710, 5710, 5710,
	-1000, 1458, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	356, -1000, -1000, -1000, -1000, 25712, 24416, 188, 518, -1000,
	-1000, -1000, -1000, 1038, 888, -1000, 11855, 1195, 1212, 1212,
	-1000, -1000, 386, -1000, -1000, 13151, 13151, 13151, 13151, 13151,
	13151, 13151, 13151, 13151, 13151, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1212,
	418, -1000, 11423, 1212, 1212, 1212, 1212, 1212, 1212, 1212,
	1212, 11855, 1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212,
	1212, 1212, 1212, 1212, 1212, 1212, 1212, 1212, -1000, -1000,
	-1000, 25712, -1000, 1524, -1000, 1196, -1000, -1000, -1000, 1466,
	11855, 11855, 1524, -1000, 1385, 10114, -1000, -1000, 1626, -1000,
	-1000, -1000, -1000, 656, 1581, -1000, 14447, 413, 1580, 23984,
	-1000, 18361, 23552, 1190, 7940, -127, -1000, -1000, -1000, 513,
	17497, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1458,
	1131, 25712, -1000, -1000, 161, 992, -1000, 1276, -1000, 1113,
	-1000, 1223, 90, 500, 25712, 540, 992, 992, -1000, -1000,
	-1000, 486, 486, 198, 2432, 3628, -1000, -1000, -1000, 23113,
	1275, 992, -1000, 1274, -1000, 1484, 344, 517, 517, 992,
	-1000, -1000, 25712, 992, 1483, 1480, 25712, 25712, -1000, 22681,
	-1000, 22249, 21817, 830, 25712, 21385, 20953, 20521, 20089, 19657,
	-1000, 1359, -1000, 1219, -1000, -1000, -1000, 25712, 25712, 25712,
	-50, -1000, -1000, 25712, 992, -1000, -1000, 823, 822, 486,
	486, 820, 898, 895, 890, 486, 486, 809, 886, 987,
	123, 808, 784, 780, 827, 885, 99, 762, 749, 753,
	25712, 1271, -1000, 5710, 153, 238, 129, 25712, 1473, 1426,
	1189, 355, 25712, 1500, 1319, 25712, 992, -1000, 7048, -1000,
	-1000, 877, 11855, -1000, -1000, -1000, -1000, -1000, 614, 25712,
	614, 25712, 614, 614, 614, 614, 563, 611, 563, -1000,
	-1000, -1000, -1000, 5710, 5710, 25712, 5710, 5710, 25712, 5710,
	5710, 611, -1000, -1000, -1000, 467, -1000, 1318, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 26, -1000, -1000, -1000, -1000,
	-1000, 1603, -1000, -1000, -1000, -128, 11855, 11855, 11855, 11855,
	731, 472, 13151, 752, 482, 13151, 13151, 13151, 13151, 13151,
	13151, 13151, 13151, 13151, 13151, 13151, 13151, 13151, 13151, 13151,
	659, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 992,
	-1000, 1600, 918, 918, 430, 430, 430, 430, 430, 430,
	430, 430, 430, 13583, 8818, 7048, 1032, 1105, 1524, 10114,
	10114, 11855, 11855, 10978, 10546, 10114, 1449, 526, 888, 25712,
	-1000, -1000, 12719, -1000, -1000, -1000, -1000, -1000, 904, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 25712, 25712, 10114, 10114,
	10114, 10114, 10114, -1000, 1185, -1000, -174, 15324, 1511, 1032,
	1626, 1494, 1593, 452, 777, 1184, -1000, 873, 1511, 17065,
	1177, -1000, 1626, -1000, -1000, -1000, 25712, -1000, -1000, 19225,
	-1000, -1000, 6602, 25712, 186, 25712, -1000, 1173, 1311, -1000,
	-1000, -1000, 1505, 16633, 25712, 1136, 1130, -1000, -1000, 412,
	7494, -127, -1000, 7494, 1156, -1000, -130, -92, 9250, 422,
	-1000, -1000, -1000, 2553, 14015, 991, 672, -49, -1000, -1000,
	-1000, 1223, -1000, 1223, 1223, 1223, 1223, -50, -50, -50,
	-50, -1000, -1000, -1000, -1000, -1000, 1270, 1255, -1000, 1223,
	1223, 1223, 1223, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1230, 1230, 1230, 1225, 1225, 312, -1000, 11855, 128, 25712,
	1492, 748, 84, 499, 101, -1000, 1499, 1292, -1000, 962,
	938, -1000, 1183, -1000, -1000, 1538, -1000, -1000, 503, 574,
	558, 459, 25712, 42, 181, -1000, 311, -1000, 25712, 1229,
	1478, 517, 992, -1000, 992, -1000, -1000, -1000, -1000, 411,
	-1000, -1000, 992, 1182, -1000, 1057, 671, 552, 670, 547,
	1182, -1000, -1000, -173, 1182, -1000, 1182, -1000, 1182, -1000,
	1182, -1000, 1182, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 535, 25712, 42, 659, -1000, 354, -1000, -1000, 659,
	659, -1000, -1000, -1000, -1000, 864, 861, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -320, 25712, -1000, 25712, 25712, 25712, 25712,
	25712, 402, 124, 25712, 25712, 1172, -1000, 25712, 5710, -1000,
	-1000, -1000, -1000, -1000, 888, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 614, 25712, 25712, 25712, -1000, -1000, 614,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 25712, -1000,
	855, 25712, 25712, -1000, -1000, -1000, -1000, -1000, 888, 472,
	626, 490, -1000, -1000, 789, -1000, -1000, 1151, -1000, -1000,
	-1000, -1000, 752, 13151, 13151, 13151, 566, 1151, 2542, 1628,
	1027, 430, 629, 629, 434, 434, 434, 434, 434, 824,
	824, -1000, -1000, -1000, -1000, 904, -1000, -1000, -1000, 904,
	10114, 10114, 1167, 1212, 406, -1000, 1256, -1000, -1000, 1511,
	1045, 1045, 718, 868, 572, 1573, 1045, 559, 1570, 1045,
	1045, 10114, -1000, -1000, 573, -1000, 11855, 904, -1000, 679,
	1161, 1160, 1045, 904, 904, 1045, 1045, 25712, -1000, -290,
	-1000, -139, 446, 1212, -1000, 18793, -1000, -1000, 1466, -1000,
	-1000, 1416, -1000, 1382, 11855, 11855, 11855, -1000, -1000, -1000,
	1466, 1523, -1000, 1392, 1391, 1561, 10114, 18361, 1626, -1000,
	-1000, -1000, 401, 1561, 1187, 1212, -1000, 25712, 18361, 18361,
	18361, 18361, 18361, -1000, 1363, 1352, -1000, 1346, 1331, 1332,
	25712, -1000, 1065, 1032, 16633, 186, 1134, 18361, 25712, -1000,
	-1000, 18361, 25712, 6156, -1000, 1156, -127, -65, -1000, -1000,
	-1000, -1000, 888, -1000, 916, -1000, 2117, -1000, 295, -1000,
	-1000, -1000, -1000, 1472, -1000, 609, -51, -1000, -1000, -50,
	-50, -1000, -1000, 422, 641, 422, 422, 422, 854, 854,
	-1000, -1000, -1000, -1000, -1000, 715, -1000, -1000, -1000, 710,
	-1000, -1000, 649, 1330, 128, -1000, -1000, 486, 852, 1432,
	25712, -1000, -1000, 972, 360, 66, 126, -1000, -1000, -1000,
	-1000, 1315, -1000, -1000, -1000, -1000, -1000, 283, 25712, 1055,
	-1000, 47, 25712, 947, 25712, -1000, 1053, 25712, -1000, 992,
	-1000, -1000, 7048, -1000, 25712, 1212, -1000, -1000, -1000, -1000,
	371, 1471, 1461, 42, 47, 422, 992, -1000, -1000, -1000,
	-1000, -1000, -327, 1049, 1226, -1000, -1000, -1000, -1000, 36,
	152, 111, 353, -1000, 5710, -1000, -1000, -1000, -1000, 563,
	-1000, 563, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 566,
	1151, 2268, -1000, 13151, 13151, -1000, -1000, 1045, 1045, 10114,
	7048, 1524, 1466, -1000, -1000, 415, 659, 415, 13151, 13151,
	-1000, 13151, 13151, -1000, -168, 1017, 510, -1000, 11855, 481,
	-1000, -1000, 13151, 13151, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 364, 363, 362, 25712, -1000, -1000, 758,
	851, 1380, 888, 888, -1000, -1000, 25712, -1000, -1000, -1000,
	-1000, 1556, 11855, -1000, 1139, -1000, 5264, 1511, 1313, 25712,
	1212, 1603, 14892, 25712, 1141, -1000, 494, 1311, 1291, 1310,
	2080, -1000, -1000, -1000, -1000, 1350, -1000, 1348, -1000, -1000,
	-1000, -1000, -1000, 1032, 1561, 18361, 1111, -1000, 1111, -1000,
	400, -1000, -1000, -1000, -134, -129, -1000, -1000, -1000, 2553,
	-1000, -1000, 1299, 13151, -1000, -1000, -1000, 422, 422, -1000,
	-1000, -1000, -1000, -1000, -1000, 1031, -1000, 1022, 1133, 1014,
	43, -1000, 1171, 1451, 486, 486, -1000, 705, -1000, 992,
	-1000, -1000, 25712, 75, -1000, 1227, 675, -1000, 25712, 1531,
	1101, -1000, 25712, -1000, -1000, 25712, -1000, -1000, 1390, 128,
	1012, -1000, -1000, -1000, 181, 25712, -1000, 918, 47, -1000,
	-1000, -1000, -1000, -1000, -1000, -176, 992, 25712, 25712, 25712,
	-1000, 25712, -1000, 614, 614, -1000, 13151, 1151, 1151, -1000,
	-1000, 904, -1000, 1511, -1000, 904, 1223, 1223, -1000, 1223,
	1225, -1000, 1223, 10, 1223, 8, 904, 904, 2195, 1999,
	1948, 1755, 1212, -167, -1000, 888, 11855, 1210, 1042, 1212,
	1212, 1212, 1005, 849, -50, -1000, -1000, -1000, 1542, 1527,
	888, -1000, -1000, -1000, 1488, 946, 1028, -1000, -1000, 9682,
	1008, 1389, 399, 1005, 1524, 25712, 11855, -1000, -1000, 11855,
	1222, -1000, 11855, -1000, -1000, -1000, 1524, 1524, 1111, -1000,
	-1000, 440, -1000, -1000, -1000, -1000, -33, 1592, 1151, -1000,
	-1000, -50, 848, -50, 684, -1000, 666, -1000, -1000, -234,
	-1000, -1000, 1166, 1342, -1000, -1000, 1220, -1000, -1000, -1000,
	934, -1000, -1000, 25712, 25712, -1000, -1000, 174, -1000, 284,
	1001, -1000, -194, -1000, -1000, -1000, 7048, -1000, -1000, 1214,
	1288, -1000, -1000, -1000, -1000, 1151, -1000, 1466, -1000, -1000,
	223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 13151,
	13151, 13151, 13151, 13151, 1511, 843, 888, 13151, 13151, 17929,
	25712, 25712, 16188, -50, -67, -1000, 11855, 11855, 1477, -1000,
	1212, -1000, 1052, 25712, 1212, 25712, -1000, 1511, -1000, 888,
	888, 25712, 888, 1511, -1000, 502, -1000, 185, 422, -1000,
	422, 911, 908, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1502, 25712, -1000, 1101, -1000, 158, 25712, -1000, 181,
	-1000, -199, -200, 1069, -1000, 485, 25712, 25712, -1000, -1000,
	-1000, 679, 679, 679, 679, 233, 904, -1000, 679, 679,
	998, -1000, 998, 998, 446, -285, -1000, 1423, 1420, 888,
	1038, 1588, -1000, 1212, 1603, 395, 1028, -1000, -1000, 986,
	-1000, 647, 1475, -1000, 1467, -1000, -1000, -1000, -1000, -1000,
	1196, 980, 1212, 1188, -1000, -1000, -1000, 7048, 4818, 970,
	-1000, -1000, -1000, -1000, -1000, 904, 106, -181, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -67, 197, -1000, 1397, 1394,
	1522, 25712, 1028, 25712, -1000, -1000, 842, -1000, -1000, 149,
	-1000, 12287, 25712, -1000, -1000, -1000, -1000, -1000, 1226, -1000,
	1378, -171, -191, 1401, 1405, 1405, 1420, 1521, 1415, 1413,
	-1000, 838, 874, -1000, -1000, -1000, -78, 679, 904, 961,
	-176, -1000, 1373, -1000, 1399, 763, -1000, -1000, -1000, -1000,
	832, -1000, 1519, 1517, -1000, 297, -1000, -1000, -1000, -1000,
	1298, -1000, -177, -1000, 722, -1000, -1000, -1000, 732, 719,
	76, 1295, -1000, 1565, -185, -1000, -1000, -1000, -1000, -1000,
	-1000, 1587, 433, 433, -192, -1000, -1000, -1000, 307, 793,
	-1000, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1917, 1915, 14, 77, 78, 1913, 1912, 1910, 1909,
	121, 119, 112, 1905, 1899, 1898, 1895, 1882, 1880, 1879,
	1878, 1877, 1875, 1874, 1873, 39, 111, 118, 1870, 1868,
	1866, 1865, 1863, 114, 106, 511, 1862, 113, 1861, 1859,
	1858, 1857, 1853, 1851, 1849, 1848, 1847, 1846, 1844, 1841,
	150, 1840, 1839, 1838, 1834, 1833, 1831, 1830, 1829, 1826,
	1824, 1823, 109, 1820, 40, 99, 49, 65, 1819, 68,
	1816, 1815, 1814, 1810, 1809, 1832, 1808, 38, 80, 73,
	1807, 42, 1806, 1805, 94, 1804, 1803, 62, 1802, 1801,
	2952, 1797, 54, 72, 13, 33, 1796, 1794, 1791, 1790,
	24, 1990, 1787, 1781, 16, 1777, 1776, 115, 1774, 76,
	17, 11, 18, 20, 1773, 75, 1772, 66, 48, 28,
	1771, 83, 1769, 1756, 1754, 1753, 32, 1751, 70, 90,
	29, 1750, 5, 7, 1749, 1748, 1747, 1746, 1743, 1736,
	3, 1735, 1734, 1733, 1732, 26, 1731, 6, 1730, 59,
	134, 21, 12, 1729, 108, 1728, 22, 103, 57, 98,
	1720, 1719, 1718, 970, 1717, 44, 1716, 130, 1712, 1711,
	41, 1710, 487, 758, 1708, 1707, 1706, 46, 801, 1461,
	9, 105, 1705, 1704, 2205, 55, 71, 27, 1702, 1699,
	1697, 110, 69, 61, 926, 43, 1695, 1693, 1691, 1674,
	1673, 1672, 1671, 35, 1670, 1669, 1667, 37, 36, 95,
	23, 1666, 1665, 1664, 1660, 1659, 51, 67, 1658, 100,
	96, 56, 84, 1655, 102, 79, 63, 1654, 117, 1653,
	1652, 1651, 1646, 31, 1645, 1643, 1641, 1640, 89, 85,
	45, 30, 34, 87, 1637, 25, 1631, 1630, 86, 82,
	1629, 19, 116, 8, 1628, 4, 0, 1626, 10, 120,
	1451, 101, 1625, 1622, 1, 1620, 2, 1616, 1615, 74,
	1613, 1612, 1611, 1610, 2812, 210, 104, 1609, 107,
}

var yyR1 = [...]int{
	0, 272, 273, 273, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 256, 256, 256, 259, 259, 21, 47,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 56, 56, 11, 12, 12, 12, 12,
	276, 276, 84, 84, 85, 85, 149, 149, 13, 14,
	14, 159, 159, 158, 158, 158, 160, 160, 160, 160,
	194, 194, 15, 15, 15, 15, 15, 63, 63, 258,
	258, 257, 255, 255, 254, 254, 253, 23, 24, 30,
	31, 32, 260, 260, 229, 36, 36, 35, 35, 35,
	35, 37, 37, 34, 34, 33, 33, 231, 231, 218,
	218, 230, 230, 230, 230, 230, 230, 230, 217, 196,
	196, 196, 196, 199, 199, 197, 197, 197, 197, 197,
	197, 197, 197, 197, 198, 198, 198, 198, 198, 200,
	200, 200, 200, 200, 201, 201, 201, 201, 201, 201,
	201, 201, 201, 201, 201, 201, 201, 201, 201, 202,
	202, 202, 202, 202, 202, 202, 202, 216, 216, 203,
	203, 209, 209, 210, 210, 210, 212, 212, 213, 213,
	174, 174, 174, 205, 205, 206, 206, 211, 211, 207,
	207, 207, 208, 208, 208, 215, 215, 215, 215, 215,
	204, 204, 219, 245, 245, 244, 244, 240, 240, 240,
	240, 228, 228, 237, 237, 237, 237, 237, 227, 227,
	223, 223, 223, 224, 224, 225, 225, 222, 222, 226,
	226, 239, 239, 238, 220, 220, 221, 221, 248, 248,
	248, 248, 249, 265, 266, 264, 264, 264, 264, 264,
	175, 175, 175, 235, 235, 234, 234, 234, 236, 236,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 169,
	169, 169, 263, 263, 263, 263, 263, 263, 262, 262,
	262, 232, 232, 232, 261, 261, 118, 118, 119, 119,
	28, 28, 28, 28, 28, 28, 27, 27, 27, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 25, 25, 25, 25, 25, 25, 25, 25, 25,
	25, 29, 29, 26, 26, 26, 26, 26, 26, 26,
	26, 26, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 214,
	214, 214, 250, 250, 251, 251, 17, 22, 22, 18,
	18, 18, 18, 19, 19, 38, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 39, 39, 39, 39, 39, 39,
	39, 39, 39, 39, 166, 166, 267, 267, 168, 168,
	164, 164, 167, 167, 165, 165, 165, 170, 170, 170,
	171, 171, 271, 271, 271, 40, 40, 42, 42, 43,
	44, 44, 189, 189, 190, 190, 45, 46, 55, 55,
	55, 55, 55, 55, 57, 57, 57, 7, 7, 7,
	7, 52, 52, 52, 6, 6, 41, 41, 48, 268,
	268, 269, 270, 270, 270, 270, 49, 20, 277, 50,
	51, 51, 62, 62, 62, 58, 58, 58, 61, 61,
	61, 66, 66, 68, 68, 68, 68, 68, 69, 69,
	69, 69, 69, 69, 65, 65, 67, 67, 67, 67,
	182, 182, 182, 181, 181, 76, 76, 77, 77, 78,
	78, 79, 79, 79, 116, 93, 93, 148, 148, 147,
	147, 150, 150, 80, 80, 80, 80, 81, 81, 82,
	82, 83, 83, 188, 188, 187, 187, 187, 186, 186,
	86, 86, 86, 88, 87, 87, 87, 87, 89, 89,
	91, 91, 90, 90, 92, 94, 94, 94, 94, 94,
	95, 95, 75, 75, 75, 75, 75, 75, 75, 75,
	162, 162, 97, 97, 96, 96, 96, 96, 96, 96,
	96, 96, 96, 96, 108, 108, 108, 108, 108, 108,
	98, 98, 98, 98, 98, 98, 98, 64, 64, 109,
	109, 109, 115, 110, 110, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 105,
	105, 105, 105, 103, 103, 103, 103, 103, 103, 103,
	103, 103, 103, 103, 103, 103, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 278, 278, 107, 106, 106, 106, 106, 106,
	106, 106, 60, 60, 60, 60, 60, 193, 193, 193,
	195, 195, 195, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 122, 122, 59, 59, 120, 120, 121,
	123, 123, 117, 117, 117, 100, 100, 100, 100, 100,
	100, 100, 100, 102, 102, 102, 124, 124, 125, 125,
	126, 126, 127, 127, 128, 129, 129, 129, 130, 130,
	130, 130, 246, 246, 246, 246, 246, 241, 241, 241,
	241, 242, 242, 242, 70, 70, 70, 70, 72, 72,
	71, 71, 53, 53, 54, 54, 54, 73, 73, 74,
	74, 74, 74, 145, 145, 145, 131, 131, 131, 131,
	136, 136, 136, 132, 132, 134, 134, 134, 135, 135,
	135, 133, 139, 139, 141, 141, 140, 140, 138, 138,
	143, 143, 142, 142, 137, 137, 99, 99, 99, 99,
	99, 146, 146, 146, 146, 151, 151, 111, 111, 113,
	113, 112, 114, 152, 152, 156, 153, 153, 157, 157,
	157, 157, 157, 154, 154, 155, 155, 183, 183, 183,
	161, 161, 172, 172, 173, 173, 163, 163, 176, 176,
	176, 144, 144, 144, 144, 247, 247, 243, 179, 179,
	180, 180, 184, 184, 185, 185, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 177, 177, 177, 177, 177, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 178, 274, 275, 191,
	192, 192, 192,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 11, 2, 0, 2, 0,
	2, 1, 0, 2, 1, 3, 3, 4, 3, 7,
	4, 2, 1, 1, 4, 0, 1, 1, 1, 2,
	2, 0, 1, 4, 4, 4, 4, 2, 4, 1,
	3, 1, 1, 3, 4, 3, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 1, 3, 2,
	3, 0, 1, 3, 3, 3, 4, 2, 0, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 1, 3, 3, 3, 1, 3, 1, 10, 11,
	11, 12, 5, 3, 3, 1, 1, 2, 2, 2,
	0, 1, 2, 0, 1, 1, 3, 2, 1, 2,
	3, 3, 4, 4, 3, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 0, 2, 0, 2,
	0, 1, 5, 1, 3, 7, 1, 3, 3, 1,
	2, 2, 2, 5, 5, 5, 6, 6, 5, 5,
	2, 2, 2, 2, 3, 3, 3, 4, 1, 3,
	5, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 4, 4, 2, 4, 3, 6, 7,
	5, 5, 5, 12, 7, 5, 9, 5, 3, 7,
	4, 4, 4, 4, 3, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 0,
	2, 2, 1, 3, 8, 8, 3, 3, 5, 4,
	6, 5, 4, 3, 2, 3, 3, 3, 3, 3,
	3, 3, 4, 2, 4, 4, 4, 4, 4, 5,
	7, 4, 4, 4, 4, 4, 4, 4, 4, 2,
	4, 7, 2, 4, 5, 4, 3, 3, 5, 2,
	3, 3, 3, 3, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 0, 3, 1,
	3, 1, 3, 4, 4, 4, 3, 2, 4, 0,
	1, 0, 2, 0, 1, 0, 1, 2, 1, 1,
	1, 2, 2, 1, 2, 3, 2, 3, 2, 2,
	2, 1, 1, 3, 3, 0, 5, 4, 5, 5,
	0, 2, 1, 3, 3, 3, 2, 3, 1, 2,
	0, 3, 1, 1, 3, 3, 4, 4, 5, 3,
	4, 5, 6, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 1, 1, 1, 4,
	5, 5, 6, 4, 4, 6, 6, 6, 8, 8,
	8, 8, 9, 8, 5, 4, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	8, 8, 0, 2, 3, 4, 4, 4, 4, 4,
	4, 4, 0, 3, 4, 7, 3, 1, 1, 1,
	2, 3, 3, 1, 2, 2, 1, 2, 1, 2,
	2, 1, 2, 0, 1, 0, 2, 1, 2, 4,
	0, 2, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 0, 2,
	0, 3, 1, 3, 2, 0, 1, 1, 0, 2,
	4, 4, 0, 2, 2, 1, 1, 3, 3, 3,
	3, 3, 3, 3, 0, 3, 3, 3, 0, 3,
	1, 1, 0, 4, 0, 1, 1, 0, 3, 1,
	3, 2, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 4, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 0, 3, 0, 1, 0, 1,
	1, 0, 1, 1, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	0, 1, 1,
}

var yyChk = [...]int{
	-1000, -272, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -38, -39, -40, -42,
	-43, -44, -45, -46, -6, -41, -20, -21, -47, -48,
	-49, -4, -274, 6, 7, 8, -56, 10, 11, 31,
	-23, -30, 152, -31, -24, 153, -32, 155, 154, 190,
	156, 183, 70, 224, 225, 227, 228, 229, 230, -57,
	188, 189, 158, 35, 41, 32, 33, 80, 9, 322,
	185, 184, 26, -273, 451, -62, 5, -126, 16, -3,
	-50, -277, -50, -50, -50, -50, -50, -50, -229, -231,
	80, 125, 80, -63, 162, -144, -260, 106, 168, 171,
	172, 313, 161, -36, -35, -34, -33, -37, 30, -28,
	-29, -252, -27, -26, 157, 154, 198, 101, 102, 190,
	191, 192, 156, 174, 189, 193, 188, 207, -25, 76,
	32, 335, 338, -236, 153, 159, 160, 323, 104, 103,
	71, 155, -233, 274, 428, -37, 430, 94, 96, 429,
	40, 163, 431, 432, 433, 434, 173, 435, 436, 437,
	438, 444, 445, 446, 447, 105, 5, 162, -260, 164,
	284, -259, -256, 83, 84, 85, 162, 162, 163, 164,
	-260, 162, -90, -184, -256, -178, 332, 176, 366, 367,
	222, 76, 274, 428, 224, 238, 232, 259, 251, 333,
	368, 177, 211, 249, 252, 300, 430, 369, 191, 296,
	279, 287, 94, 227, 309, 443, 370, 441, 96, 429,
	75, 47, 40, 186, 247, 243, 431, 212, 371, 343,
	205, 104, 101, 450, 241, 46, 28, 440, 103, 45,
	432, 372, 433, 289, 264, 44, 192, 373, 79, 337,
	291, 242, 288, 221, 439, 158, 374, 422, 298, 375,
	265, 269, 376, 301, 48, 377, 378, 102, 379, 74,
	434, 236, 237, 380, 219, 175, 303, 263, 173, 34,
	292, 334, 223, 54, 199, 304, 42, 267, 41, 426,
	381, 262, 258, 49, 382, 383, 384, 385, 435, 261,
	235, 257, 449, 217, 436, 58, 160, 271, 270, 272,
	206, 299, 254, 386, 387, 388, 180, 77, 389, 244,
	19, 390, 391, 213, 392, 52, 393, 394, 307, 189,
	395, 50, 437, 37, 194, 438, 396, 397, 398, 399,
	400, 297, 401, 290, 266, 268, 201, 286, 336, 402,
	240, 193, 442, 403, 181, 195, 198, 188, 308, 182,
	404, 405, 406, 407, 408, 409, 410, 228, 444, 39,
	411, 412, 413, 414, 220, 216, 302, 311, 57, 78,
	276, 415, 234, 214, 416, 225, 51, 445, 446, 447,
	208, 448, 282, 105, 218, 43, 255, 200, 417, 418,
	245, 246, 260, 233, 256, 226, 423, 202, 190, 419,
	310, 215, 277, 340, 207, 339, 253, 250, 209, 420,
	164, 203, 204, 421, 424, 293, 283, 294, 295, 284,
	210, 338, 248, 278, 162, -154, 279, 280, 281, 292,
	293, 298, 297, 201, -271, 301, 162, -164, 143, 152,
	289, -168, 290, 283, 284, 210, -267, -256, 433, 448,
	300, 252, 302, 426, 285, 291, 295, 294, -184, 226,
	-189, 231, -179, -256, -178, 229, -90, -55, 422, 156,
	-191, -191, -191, -110, -75, -96, 109, -101, 30, 24,
	-100, -97, -117, -114, -115, 143, 144, 146, 145, 147,
	132, 133, 140, 110, 148, -105, -103, -104, -106, 87,
	86, 95, 88, 89, 90, 91, 97, 98, 99, -179,
	-184, -112, -274, 64, 65, 323, 324, 325, 326, 331,
	327, 112, 53, 312, 321, 320, 319, 316, 317, 314,
	315, 329, 330, 167, 313, 161, 138, 322, -256, -178,
	40, 282, 282, -5, -4, -274, 6, 21, 22, -130,
	18, 17, -275, 82, -58, -68, 59, 60, -69, 22,
	36, 63, 61, -51, -67, 134, -75, -184, -67, -163,
	166, -163, -163, -153, -194, 226, -157, 302, 301, -180,
	-155, -179, -177, -154, 299, 157, 341, 108, 23, 25,
	111, 143, 17, 112, 159, 174, 142, 170, 323, 152,
	68, 342, 314, 315, 312, 318, 325, 326, 313, 280,
	30, 11, 344, 26, 184, 22, 36, 136, 154, 115,
	116, 187, 24, 185, 99, 347, 20, 71, 179, 12,
	172, 14, 348, 349, 15, 167, 166, 127, 163, 66,
	9, 148, 27, 124, 62, 350, 29, 351, 352, 353,
	354, 64, 125, 18, 316, 317, 32, 427, 355, 331,
	196, 138, 69, 55, 109, 356, 357, 97, 358, 100,
	72, 106, 16, 67, 38, 359, 197, 360, 169, 361,
	305, 362, 126, 155, 322, 65, 363, 161, 281, 6,
	328, 31, 183, 171, 63, 364, 162, 114, 329, 330,
	165, 98, 5, 168, 33, 10, 70, 73, 319, 320,
	321, 53, 335, 113, 13, 365, 306, 107, 300, 252,
	-230, 125, -217, -221, -179, 178, -249, 174, -90, -239,
	-238, -179, -70, 76, -173, 167, 163, -173, 322, -33,
	-34, -154, 142, 195, 81, 81, -221, -220, -219, -261,
	197, 178, -248, -237, 170, 179, -227, 171, 172, -222,
	163, 29, -261, -222, 169, 179, 197, 197, 105, 197,
	105, 197, 197, 197, 197, 197, 197, 197, 197, 197,
	194, -228, 117, -228, 339, 339, -233, -261, -261, -261,
	165, 34, 34, -176, -222, 165, 23, -228, -228, -154,
	142, -228, -228, -228, -228, 205, 205, -228, -228, -228,
	-228, -228, -228, -228, -228, -228, -228, -228, -228, -228,
	-228, -228, -90, -90, 152, 154, 157, 72, -35, 207,
	-22, -90, -172, 167, -256, -172, -172, -90, 149, -90,
	-170, 125, 13, -170, -170, -170, -170, -170, 208, 296,
	208, 296, 208, 209, 208, 209, 208, -167, -166, 287,
	288, 282, 286, -256, 313, 298, -256, 201, 162, 202,
	164, -223, 163, 34, 175, 209, 282, 204, -170, -192,
	-274, -180, -192, -192, 31, 165, -179, -52, -179, 87,
	-7, -3, -11, -10, -12, 117, 81, 108, 106, 107,
	124, -75, -98, 127, 109, 125, 126, 111, 129, 128,
	139, 132, 133, 134, 135, 136, 137, 138, 130, 131,
	142, 117, 118, 119, 120, 121, 122, 123, -162, -274,
	-115, -274, 150, 151, -101, -101, -101, -101, -101, -101,
	-101, -101, -101, -101, -274, 149, -2, -110, -4, -274,
	-274, -274, -274, -274, -274, -274, -274, -122, -75, -274,
	-278, -107, -274, -278, -107, -278, -107, -278, -274, -278,
	-107, -278, -107, -278, -278, -107, -274, -274, -274, -274,
	-274, -274, -274, -191, -268, -269, -93, -90, -126, -3,
	-50, -145, 20, 32, -75, -127, -128, -75, -126, 55,
	-65, -67, -69, 59, 60, 93, 12, -182, -181, 23,
	-179, 87, 149, 12, -91, 27, -90, -77, -78, -79,
	-80, -93, -116, -274, 12, -84, -85, -90, -92, -184,
	81, 226, -157, -194, -159, -158, 303, 305, 117, -183,
	-179, 87, 30, 82, 81, -90, -196, -199, -201, -200,
	-202, -197, -198, 249, 250, 143, 253, 255, 256, 257,
	258, 259, 260, 261, 262, 263, 264, 31, 186, 245,
	246, 247, 248, 265, 266, 267, 268, 269, 270, 271,
	272, 232, 251, 333, 233, 234, 235, 236, 237, 238,
	240, 241, 242, 243, 244, -259, -256, 80, 82, 81,
	-203, 80, -73, 212, 117, -90, 109, -256, -256, -228,
	-228, 194, -27, -26, -252, 16, -25, -26, 157, 101,
	102, 154, 80, -217, 80, -226, -259, -256, 80, 29,
	169, 168, -225, -222, -225, -226, -256, -117, -179, -184,
	-256, 29, 29, -150, -179, -150, -150, 21, -150, 21,
	-150, 21, 88, -179, -150, 21, -150, 21, -150, 21,
	-150, 21, -150, 21, 30, 74, 75, 30, 77, 78,
	79, -117, -117, -217, -154, -90, -256, 88, 88, -228,
	-228, 88, 87, 87, 87, -228, -228, 88, 87, -256,
	87, -262, 180, 221, 223, 88, 88, 88, 88, 30,
	87, -263, 30, 440, 439, 441, 442, 443, 88, 30,
	88, 30, 88, -179, 80, -192, 203, 203, 162, 162,
	216, -90, 40, 81, 165, -84, 24, 72, -90, -256,
	-185, -184, -177, 87, -75, -170, -90, -170, -90, -170,
	-170, -170, -170, -165, 12, 127, -224, 12, 127, -165,
	-192, -192, -90, -192, -192, -90, -192, -192, -224, -171,
	125, 72, -190, 229, 263, 423, 424, 425, -75, -75,
	-75, -75, -108, 97, 109, 98, 99, -101, -109, -112,
	-115, 92, 127, 125, 126, 111, -101, -101, -101, -101,
	-101, -101, -101, -101, -101, -101, -101, -101, -101, -101,
	-101, -193, -256, 87, 143, -256, -100, -100, -179, -66,
	22, 36, -65, -180, -185, -177, -62, -275, -275, -126,
	-65, -65, -75, -75, -117, 87, -65, -117, 87, -65,
	-65, -61, 22, 36, -120, -121, 113, -117, -275, -101,
	-179, -179, -65, -66, -66, -65, -65, 81, -270, 305,
	306, 427, -187, 197, -186, 23, -184, 87, -130, -275,
	-131, 27, 10, 127, 81, 19, 81, -129, 25, 26,
	-130, -102, -179, 88, 91, -76, 81, 12, -69, -90,
	-181, 134, -185, -90, -149, 197, -90, 31, 81, -86,
	-88, -87, -89, 62, 66, 68, 63, 64, 65, 69,
	-188, 23, -77, -3, -274, -90, -84, -276, 81, 12,
	73, -276, 81, 149, -157, -159, 81, 304, 306, 307,
	72, 100, -75, -208, 142, -235, -234, -233, -217, -219,
	-220, -221, 82, -174, 97, 109, -212, 277, -203, -203,
	-203, -203, -203, -207, -154, -207, -207, -207, 80, 80,
	-203, -203, -203, -203, -209, 80, -209, -209, -210, 80,
	-210, -249, -75, -245, -244, -240, -243, 173, 94, 335,
	73, -238, -129, 88, -72, 214, 117, 215, 217, 218,
	24, -247, -243, -256, 87, -256, 87, 81, 17, -218,
	-217, -118, 221, -251, 197, -248, -239, 80, 29, -225,
	-226, -226, 149, -256, 81, 27, 105, 105, 105, 105,
	335, 154, 31, -217, -118, -193, 165, -193, -193, 87,
	87, -169, 448, -84, -90, -90, -90, -90, -90, 157,
	154, 205, -90, -90, -90, -192, -170, -184, -184, -90,
	-170, -90, 87, -90, -179, 97, 98, 99, -109, -101,
	-101, -101, -64, 187, 108, -275, -275, -65, -65, -274,
	149, -5, -130, -275, -275, 81, 73, 23, 12, 12,
	-275, 12, 12, -275, -275, -65, -123, -121, 115, -75,
	-275, -275, 81, 81, -275, -275, -275, -275, -275, -269,
	426, 306, -94, 70, 166, 71, -274, -186, -145, 38,
	46, 57, -75, -75, -128, -145, -161, 20, 12, 53,
	53, -95, 13, -67, -77, -69, 149, -95, -99, 31,
	53, -3, -274, -274, -152, -156, -117, -78, -79, -79,
	-78, -79, 62, 62, 62, 67, 62, 67, 62, -87,
	-184, -275, -275, -3, -149, 73, -77, -90, -77, -92,
	-184, 134, -158, -160, 308, 305, 311, -256, 87, 81,
	-233, -221, -205, 30, 97, -213, 278, -207, -207, -208,
	-256, 143, -208, -208, -208, -216, 87, -216, 88, 88,
	82, -246, -241, -242, 32, 76, -240, -228, 87, 37,
	-179, 82, 164, 220, -74, 318, 87, 83, 72, 16,
	-147, -179, 81, 82, -119, 222, -117, 82, -179, 82,
	-147, -226, -180, -179, -274, 162, 30, 30, -118, -119,
	-208, -256, 450, 449, 82, -258, 73, 203, 274, 203,
	206, 165, -192, -165, -165, -64, 108, -101, -101, -275,
	-275, -66, -180, -126, -145, -195, 143, 249, 186, 247,
	243, 263, 254, 276, 245, 277, -193, -195, -101, -101,
	-101, -101, 332, -126, 116, -75, 114, -101, -101, 163,
	163, 163, -150, 39, 87, 87, 58, -90, -124, 14,
	-75, 134, -130, -151, 72, -152, -111, -113, -112, -274,
	-146, -275, -179, -150, -95, 81, 117, -82, -81, 72,
	73, -83, 72, -81, 62, 62, -275, -95, -77, -95,
	-95, 149, 305, 309, 310, -233, -206, 72, -101, -208,
	-208, 82, 81, 82, 81, 82, 81, -175, 372, 109,
	-242, -241, -228, -228, 88, -256, -90, -71, 212, 219,
	80, 84, -90, 17, 81, -217, -117, 53, -245, 82,
	-250, -251, -90, -100, -119, -255, 335, -257, -256, -179,
	-179, -179, -90, -170, -170, -101, -275, -130, -275, -203,
	-203, -203, -210, -203, 237, -203, 237, -275, -275, 20,
	20, 20, 20, -274, -59, 328, -75, 81, 81, -274,
	-274, -274, -275, 87, -207, -125, 15, 17, 28, -151,
	81, -275, -275, 81, 53, 149, -275, -126, -156, -75,
	-75, 80, -75, -126, -95, -211, 274, 10, -207, 87,
	-207, 88, 88, 372, 30, 77, 78, 79, 30, 74,
	75, -148, 80, 82, -147, -179, 199, 181, -275, 81,
	-214, 335, 338, -254, -253, -180, 80, 73, -145, -207,
	-256, -101, -101, -101, -101, -101, -130, 87, -101, -101,
	-147, -275, -147, -147, -187, -207, -133, -138, -167, -75,
	-110, 29, -113, 53, -3, -179, -111, -179, -130, -147,
	-130, -215, 169, 29, 168, -104, -208, -208, 82, 82,
	23, -147, 200, -90, -251, 339, 339, 81, 117, -147,
	-90, -275, -275, -275, -275, -60, 127, 335, -275, -275,
	-275, -275, -275, -275, -94, -136, 422, -139, 42, -140,
	43, 10, -111, 149, 82, -204, 94, 29, 29, -3,
	82, -274, 80, -253, -232, -180, 87, 88, 82, -275,
	333, 69, 336, -133, 47, 255, -141, 51, -142, -137,
	52, 17, -152, -179, 87, -53, 335, -101, 196, -147,
	-258, 58, 334, 337, -134, 49, -132, 48, -132, -140,
	17, -143, 44, 45, 87, -54, 211, 426, -275, -275,
	82, -255, 58, -135, 50, 72, 100, 87, 17, 17,
	174, -265, -266, 72, 335, 72, 100, 87, 87, 213,
	-266, 72, 11, 10, 336, -264, 182, 177, 180, 31,
	-264, 337, 176, 30, 97,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 780, 0, 518, 518, 518, 518, 518, 518, 518,
	0, 0, -2, -2, -2, 0, 36, 0, 0, 0,
	0, -2, 476, 477, 0, 479, -2, 0, 0, 488,
	1299, 1299, 1299, 0, 0, 0, 0, 1297, 53, 54,
	494, 495, 496, 1, 3, 0, 522, 788, 0, 0,
	-2, 520, 0, 0, 896, 896, 896, 0, 82, 83,
	0, 0, 0, 804, 894, 0, 894, 0, 902, 903,
	904, 102, 103, 86, -2, 107, 108, 0, 112, 362,
	323, 365, 321, 351, -2, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 221,
	221, 0, 0, -2, 314, 314, 314, 0, 0, 0,
	348, 898, 268, 221, 221, 0, 221, 221, 221, 221,
	0, 0, 221, 221, 221, 221, 221, 221, 221, 221,
	221, 221, 221, 221, 221, 221, 221, 0, 101, 0,
	0, 111, 37, 33, 34, 35, 0, 892, 0, 892,
	892, 0, 414, 602, 912, 913, 1049, 1050, 1051, 1052,
	1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
	1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
	1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
	1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
	1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
	1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
	1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
	1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162,
	1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172,
	1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182,
	1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192,
	1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202,
	1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212,
	1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222,
	1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232,
	1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242,
	1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252,
	1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262,
	1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272,
	1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282,
	1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 0, 467, 467, 467, 467, 467,
	467, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	439, 0, 442, 0, 0, 449, 467, 1300, 1300, 1300,
	883, 0, 473, 474, 461, 459, 456, 457, 475, 478,
	0, 483, 486, 908, 909, 0, 501, 0, 1120, 493,
	506, 507, 517, 38, 653, 612, 0, 618, 620, 0,
	655, 656, 657, 658, 659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 685, 686, 687, 688, 765,
	766, 767, 768, 769, 770, 771, 772, 622, 623, 762,
	0, 872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 753, 0, 722, 722, 722, 722, 722, 722, 722,
	722, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	1299, 0, 516, 780, 49, 0, 518, 523, 524, 823,
	0, 0, 780, 1298, 0, 0, -2, -2, 534, 540,
	541, 542, 543, 519, 0, 546, 550, 0, 0, 0,
	897, 0, 0, 68, 0, 1268, 876, -2, -2, 0,
	0, 910, 911, 885, -2, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, -2, 1067,
	0, 0, 121, 122, 0, 36, 247, 0, 117, 0,
	241, 179, 817, 0, 0, 0, 0, 0, 88, 109,
	110, 221, 221, 0, 111, 111, 330, 331, 332, 0,
	0, -2, 245, 0, 315, 0, 0, 235, 235, 239,
	237, 238, 0, 0, 0, 0, 0, 0, 342, 0,
	343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	398, 0, 222, 0, 360, 361, 269, 0, 0, 0,
	0, 340, 341, 0, 0, 899, 900, 0, 0, 221,
	221, 0, 0, 0, 0, 221, 221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 98, 1300, 0, 0, 0, 0, -2, 0,
	406, 0, 0, 0, 0, 0, 0, 413, 0, 415,
	416, 0, 0, 417, 418, 419, 420, 421, 467, 0,
	467, 0, 467, 467, 467, 467, 464, 0, 464, 462,
	463, 454, 455, 1300, 1300, 0, 1300, 1300, 0, 1300,
	1300, 0, 230, 231, 232, 470, 446, 447, 450, 451,
	1301, 1302, 452, 453, 884, 484, 487, 504, 502, 503,
	505, 497, 498, 499, 500, 0, 0, 0, 0, 0,
	0, 616, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 640, 641, 642, 643, 644, 645, 646, 619, 0,
	633, 0, 0, 0, 675, 676, 677, 678, 679, 680,
	681, 682, 683, 0, 531, 0, 0, 0, 780, 0,
	0, 0, 0, 0, 0, 0, 528, 0, 754, 0,
	706, 714, 0, 707, 715, 708, 716, 709, 0, 710,
	717, 711, 718, 712, 713, 719, 0, 0, 0, 531,
	531, 0, 0, 39, 508, 509, 0, 585, 788, 0,
	533, 826, 0, 0, 789, 781, 782, 785, 788, 0,
	555, 544, 535, 538, 539, 521, 0, 547, 551, 0,
	553, 554, 0, 0, 66, 0, 601, 0, 557, 559,
	560, 561, 583, 0, 0, 0, 0, 62, 64, 602,
	0, 1268, 882, 0, 70, 71, 0, 0, 0, 202,
	887, 888, 889, -2, 228, 0, 190, 186, 130, 131,
	132, 179, 134, 179, 179, 179, 179, 199, 199, 199,
	199, 162, 163, 164, 165, 166, 0, 0, 149, 179,
	179, 179, 179, 169, 170, 171, 172, 173, 174, 175,
	176, 135, 136, 137, 138, 139, 140, 141, 142, 143,
	181, 181, 181, 183, 183, 0, 37, 0, 213, 0,
	785, 0, 808, 0, 0, 97, 0, 905, 100, 0,
	0, 363, 324, 352, 364, 0, 327, 328, -2, 0,
	0, 314, 0, 316, 0, 229, 0, -2, 0, 0,
	0, 235, 239, 236, 239, 227, 240, 344, 762, 0,
	345, 346, 0, 378, 571, 0, 0, 0, 0, 0,
	384, 385, 386, 0, 388, 389, 390, 391, 392, 393,
	394, 395, 396, 397, 353, 354, 355, 356, 357, 358,
	359, 0, 0, 316, 0, 349, 0, 270, 271, 0,
	0, 274, 275, 276, 277, 0, 0, 280, 281, 282,
	283, 284, 308, 309, 310, 285, 286, 287, 288, 289,
	290, 291, 302, 303, 304, 305, 306, 307, 292, 293,
	294, 295, 296, 299, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 409, 893, 0, 1300, 412,
	603, 914, 915, 468, 469, 422, 440, 424, 443, 425,
	427, 426, 428, 467, 0, 0, 0, 233, 234, 467,
	431, 432, 433, 434, 435, 436, 437, 438, 0, 445,
	0, 0, 0, 485, 489, 490, 491, 492, 654, 613,
	614, 615, 617, 634, 0, 636, 638, 624, 625, 649,
	650, 651, 0, 0, 0, 0, 647, 629, 0, 660,
	661, 662, 663, 664, 665, 666, 667, 668, 669, 670,
	671, 674, 737, 738, 739, 0, 672, 673, 684, 0,
	0, 0, 532, 763, 0, -2, 0, 652, 871, 788,
	0, 0, 0, 0, 657, 765, 0, 657, 765, 0,
	0, 0, 529, 530, 760, 757, 0, 0, 723, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 511, 512,
	514, 0, 605, 0, 586, 0, 588, 589, 823, 50,
	40, 0, 824, 0, 0, 0, 0, 784, 786, 787,
	823, 0, 773, 0, 0, 610, 0, 0, 536, 46,
	552, 548, 0, 610, 0, 0, 600, 0, 0, 0,
	0, 0, 0, 590, 0, 0, 593, 0, 0, 0,
	0, 584, 0, 0, 0, -2, 0, 0, 0, 60,
	61, 0, 0, 0, 877, 69, 0, 0, 74, 75,
	878, 879, 880, 881, 0, 104, -2, 265, 123, 125,
	126, 127, 118, 193, 191, 0, 188, 187, 133, 199,
	199, 156, 157, 202, 0, 202, 202, 202, 0, 0,
	150, 151, 152, 153, 144, 0, 145, 146, 147, 0,
	148, 246, 0, 792, 214, 215, 217, 221, 0, 0,
	0, 242, 243, 0, 0, 0, 0, 805, 806, 807,
	895, 0, 906, 113, 114, 115, 116, 111, 0, 0,
	119, 318, 0, 0, 0, 244, 0, 0, 223, 239,
	224, 225, 0, 347, 0, 0, 380, 381, 382, 383,
	0, 0, 0, 316, 318, 202, 0, 272, 273, 278,
	279, 297, 0, 0, 89, 370, 372, 371, 375, 0,
	0, 0, 0, 407, 1300, 411, 429, 465, 466, 464,
	444, 464, 471, 448, 481, 635, 637, 639, 626, 647,
	630, 0, 627, 0, 0, 621, 689, 0, 0, 531,
	0, 780, 823, 693, 694, 0, 0, 0, 0, 0,
	730, 0, 0, 731, 0, 780, 0, 758, 0, 0,
	705, 724, 0, 0, 725, 726, 727, 728, 729, 510,
	513, 515, 565, 0, 0, 0, 0, 587, 42, 0,
	0, 0, 790, 791, 783, 41, 0, 890, 891, 774,
	775, 776, 0, 545, 556, 537, 0, 788, 865, 0,
	0, 857, 0, 0, 610, 873, 0, 558, 579, 581,
	0, 576, 591, 592, 594, 0, 596, 0, 598, 599,
	562, 563, 564, 0, 610, 0, 610, 63, 610, 65,
	0, 604, 72, 73, 0, 0, 79, 203, 204, 111,
	267, 124, 195, 0, 192, 129, 189, 202, 202, 158,
	200, 201, 159, 160, 161, 0, 177, 0, 0, 0,
	260, 84, 796, 795, 221, 221, 216, 0, 219, 0,
	907, 180, 0, 0, 818, 819, 0, 822, 0, 0,
	322, 569, 0, 333, 334, 0, 317, 377, 0, 213,
	0, 226, 763, 572, 0, 0, 335, 0, 318, 338,
	339, 350, 300, 301, 298, 92, 0, 0, 0, 0,
	368, 0, 410, 467, 467, 628, 0, 648, 631, 690,
	691, 0, 764, 788, 44, 0, 179, 179, 743, 179,
	183, 746, 179, 748, 179, 751, 0, 0, 0, 0,
	0, 0, 0, 755, 704, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 199, 828, 825, 43, 778, 0,
	611, 549, 47, 51, 0, 865, 856, 867, 869, 0,
	0, 0, 861, 0, 780, 0, 0, 573, 580, 0,
	0, 574, 0, 575, 595, 597, -2, 780, 610, 58,
	59, 0, 76, 77, 78, 266, 197, 0, 194, 154,
	155, 199, 0, 199, 0, 184, 0, 252, 261, 0,
	793, 794, 0, 0, 218, 220, 567, 809, 810, 811,
	0, 821, 99, 0, 0, 120, 319, 0, 212, 0,
	0, 402, 399, 336, 337, 369, 0, 90, 91, 0,
	0, 374, 408, 430, 441, 632, 692, 823, 695, 740,
	199, 744, 745, 747, 749, 750, 752, 697, 696, 0,
	0, 0, 0, 0, 788, 0, 759, 0, 0, 0,
	0, 0, 585, 199, 848, 48, 0, 0, 0, 52,
	0, 870, 0, 0, 0, 0, 67, 788, 874, 875,
	577, 0, 582, 788, 57, 205, 198, 0, 202, 178,
	202, 0, 0, 262, 797, 798, 799, 800, 801, 802,
	803, 0, 0, 820, 325, 570, 0, 0, 379, 0,
	387, 0, 0, 93, 94, 0, 0, 0, 45, 741,
	742, 0, 0, 0, 0, 732, 0, 756, 0, 0,
	0, 607, 0, 0, 605, 830, 829, 842, 846, 779,
	777, 0, 868, 0, 860, 863, 859, 862, 55, 0,
	56, 210, 0, 207, 209, 196, 167, 168, 182, 185,
	0, 0, 0, 0, 403, 400, 401, 0, 0, 0,
	376, 698, 700, 699, 701, 0, 0, 0, 703, 720,
	721, 606, 608, 609, 566, 848, 0, 841, 844, -2,
	0, 0, 858, 0, 578, 128, 0, 206, 208, 812,
	568, 0, 0, 95, 96, 311, 312, 313, 89, 702,
	0, 0, 0, 835, 833, 833, 846, 0, 850, 0,
	855, 0, 866, 864, 211, 85, 814, 0, 0, 0,
	92, 733, 0, 736, 838, 0, 831, 834, 832, 843,
	0, 849, 0, 0, 847, 0, 815, 816, 404, 405,
	248, 373, 734, 827, 0, 836, 837, 845, 0, 0,
	0, 249, 250, 0, 0, 839, 840, 851, 853, 813,
	251, 0, 0, 0, 0, 253, 255, 256, 0, 0,
	254, 735, 257, 258, 259,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 110, 3, 3, 3, 137, 129, 3,
	80, 82, 134, 132, 81, 133, 149, 135, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 451,
	118, 117, 119, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 139, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 128, 3, 140,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 111, 112, 113, 114, 115,
	116, 120, 121, 122, 123, 124, 125, 126, 127, 130,
	131, 136, 138, 141, 142, 143, 144, 145, 146, 147,
	148, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:407
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:412
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:413
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:454
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:458
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:462
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:467
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:471
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:477
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:483
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:489
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:498
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:502
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:506
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:529
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:537
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:543
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:549
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:557
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:563
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:567
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:574
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:586
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:598
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:602
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:608
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:614
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:618
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:622
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:626
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:631
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:632
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:636
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:646
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:650
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:655
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:659
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:665
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:671
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:675
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:685
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:691
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:695
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:699
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:705
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:709
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:713
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:717
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:723
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:727
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:733
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:739
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:746
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:754
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:758
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:765
		{
			yyVAL.boolean = false
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.boolean = true
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:774
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:778
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:784
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 92:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:789
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 93:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:794
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:800
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:805
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:811
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:817
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyVAL.alterTable = &AlterTable{Table: yyDollar[3].tableName}
			setDDL(yylex, yyVAL.alterTable)
		}
	case 99:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:831
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:838
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:845
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 104:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:856
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].tableOptions
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:862
		{
			yyVAL.collateAndCharsets = nil
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:866
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:872
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:876
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:880
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:884
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:889
		{
			yyVAL.boolean = false
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:893
		{
			yyVAL.boolean = true
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:899
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:903
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:909
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:913
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:920
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 118:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:924
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:930
		{
			yyVAL.columnDefinitions = []*ColumnDefinition{yyDollar[1].columnDefinition}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:934
		{
			yyVAL.columnDefinitions = append(yyDollar[1].columnDefinitions, yyDollar[3].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:945
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:950
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:954
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:959
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:963
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:967
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 128:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:973
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:995
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1018
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1098
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 155:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1102
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1106
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1110
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1114
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1122
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 161:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1126
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1130
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1134
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1138
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1142
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1146
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1150
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 168:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1161
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1169
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1173
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1177
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1181
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1189
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1195
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1205
		{
			yyVAL.literal = nil
		}
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1209
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1214
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1218
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1226
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1230
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 185:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1236
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1244
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1248
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1253
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1257
		{
			yyVAL.boolean = true
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1263
		{
			yyVAL.boolean = false
		}
	case 191:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1267
		{
			yyVAL.boolean = false
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1271
		{
			yyVAL.boolean = true
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1276
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1280
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1285
		{
			yyVAL.optVal = nil
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1289
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1294
		{
			yyVAL.boolean = false
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1298
		{
			yyVAL.boolean = true
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1303
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1307
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = ""
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1329
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1337
		{
			yyVAL.colKeyOpt = colKey
		}
	case 208:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1341
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1345
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1350
		{
			yyVAL.literal = nil
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1354
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1360
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1365
		{
			yyVAL.indexOptions = nil
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1369
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1379
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1385
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1389
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1394
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1398
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 221:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1404
		{
			yyVAL.str = ""
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1408
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1414
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1422
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1426
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].str), ConstraintName: NewColIdent(yyDollar[1].str), Name: NewColIdent(yyDollar[4].str), Unique: true}
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1430
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = ""
		}
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = yyDollar[2].str
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1445
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1449
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1453
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1460
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1464
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 235:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1469
		{
			yyVAL.str = "key"
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1473
		{
			yyVAL.str = yyDollar[1].str
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1483
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1488
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1492
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1498
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1514
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 248:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1534
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 249:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1538
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 250:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1542
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 251:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1546
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 252:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1552
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1558
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1564
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1570
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1574
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 257:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1578
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 258:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1582
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 259:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1586
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 260:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1591
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1595
		{
			yyVAL.boolean = true
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1599
		{
			yyVAL.boolean = false
		}
	case 263:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1604
		{
			yyVAL.tableOptions = nil
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1608
		{
			yyVAL.tableOptions = yyDollar[1].tableOptions
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1614
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1618
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[3].tableOption)
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1622
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1628
		{
			yyVAL.tableOptions = TableOptions{yyDollar[1].tableOption}
		}
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1632
		{
			yyVAL.tableOptions = append(yyDollar[1].tableOptions, yyDollar[2].tableOption)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1638
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1642
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1646
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[2].bytes)), String: yyDollar[4].str}
		}
	case 273:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1650
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[2].bytes), String: yyDollar[4].str}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1654
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1658
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1662
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1666
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 278:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1670
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 279:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1674
		{
			yyVAL.tableOption = &TableOption{Name: (string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)), Value: NewStrLiteral(yyDollar[4].bytes)}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1678
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1682
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1686
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1694
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1698
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1702
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1710
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1714
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 290:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1718
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1722
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1726
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1730
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1734
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1738
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1742
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1746
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), String: (yyDollar[3].colIdent.String() + yyDollar[4].str)}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1750
		{
			yyVAL.tableOption = &TableOption{Name: string(yyDollar[1].bytes), Tables: yyDollar[4].tableNames}
		}
	case 299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1755
		{
			yyVAL.str = ""
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1759
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1763
		{
			yyVAL.str = " " + string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes)
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1782
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 312:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1786
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1790
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 314:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1795
		{
			yyVAL.bytes = []byte("")
		}
	case 316:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1801
		{
			yyVAL.colName = nil
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1805
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 318:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1810
		{
			yyVAL.colName = nil
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1814
		{
			yyVAL.colName = yyDollar[2].colName
		}
	case 320:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1819
		{
			yyVAL.alterOptions = nil
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1823
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1827
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, &OrderByOption{Cols: yyDollar[5].columns})
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1831
		{
			yyVAL.alterOptions = yyDollar[1].alterOptions
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1835
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...)
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1839
		{
			yyVAL.alterOptions = append(append(yyDollar[1].alterOptions, yyDollar[3].alterOptions...), &OrderByOption{Cols: yyDollar[7].columns})
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1849
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1853
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1859
		{
			yyVAL.alterOption = yyDollar[1].tableOptions
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1863
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1867
		{
			yyVAL.alterOption = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinition}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1871
		{
			yyVAL.alterOption = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinition}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1875
		{
			yyVAL.alterOption = &AddColumns{Columns: yyDollar[4].columnDefinitions}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1879
		{
			yyVAL.alterOption = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinition}, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1883
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: true}
		}
	case 336:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1887
		{
			yyVAL.alterOption = &AlterColumn{Column: yyDollar[3].colName, DropDefault: false, DefaultVal: yyDollar[6].expr}
		}
	case 337:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1891
		{
			yyVAL.alterOption = &ChangeColumn{OldColumn: yyDollar[3].colName, NewColDefinition: yyDollar[4].columnDefinition, First: yyDollar[5].colName, After: yyDollar[6].colName}
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1895
		{
			yyVAL.alterOption = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinition, First: yyDollar[4].colName, After: yyDollar[5].colName}
		}
	case 339:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1899
		{
			yyVAL.alterOption = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1903
		{
			yyVAL.alterOption = &KeyState{Enable: false}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yyVAL.alterOption = &KeyState{Enable: true}
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.alterOption = &TablespaceOperation{Import: false}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1915
		{
			yyVAL.alterOption = &TablespaceOperation{Import: true}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1919
		{
			yyVAL.alterOption = &DropColumn{Name: yyDollar[3].colName}
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1923
		{
			yyVAL.alterOption = &DropKey{Type: NormalKeyType, Name: yyDollar[3].colIdent.String()}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1927
		{
			yyVAL.alterOption = &DropKey{Type: PrimaryKeyType}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1931
		{
			yyVAL.alterOption = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].colIdent.String()}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1935
		{
			yyVAL.alterOption = &Force{}
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1939
		{
			yyVAL.alterOption = &RenameTable{Table: yyDollar[3].tableName}
		}
	case 350:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1943
		{
			yyVAL.alterOption = &RenameIndex{OldName: yyDollar[3].colIdent.String(), NewName: yyDollar[5].colIdent.String()}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.alterOptions = []AlterOption{yyDollar[1].alterOption}
		}
	case 352:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1953
		{
			yyVAL.alterOptions = append(yyDollar[1].alterOptions, yyDollar[3].alterOption)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1959
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 354:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1963
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 355:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1967
		{
			yyVAL.alterOption = AlgorithmValue(string(yyDollar[3].bytes))
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1971
		{
			yyVAL.alterOption = &LockOption{Type: DefaultType}
		}
	case 357:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1975
		{
			yyVAL.alterOption = &LockOption{Type: NoneType}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1979
		{
			yyVAL.alterOption = &LockOption{Type: SharedType}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1983
		{
			yyVAL.alterOption = &LockOption{Type: ExclusiveType}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1987
		{
			yyVAL.alterOption = &Validation{With: true}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1991
		{
			yyVAL.alterOption = &Validation{With: false}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1997
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 363:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2003
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2010
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.AlterOptions = yyDollar[2].alterOptions
			yyDollar[1].alterTable.PartitionSpec = yyDollar[4].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2017
		{
			yyDollar[1].alterTable.FullyParsed = true
			yyDollar[1].alterTable.PartitionSpec = yyDollar[2].partSpec
			yyVAL.statement = yyDollar[1].alterTable
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2023
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 367:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2027
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2034
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 369:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2041
		{
			yyVAL.statement = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2063
		{
			yyVAL.statement = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2067
		{
			yyVAL.statement = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 373:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:2071
		{
			yyVAL.statement = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 374:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 376:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 377:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2111
		{
			yyVAL.partSpec = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDef}}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2115
		{
			yyVAL.partSpec = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitions}
		}
	case 379:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2119
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitions, Definitions: yyDollar[6].partDefs}
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2123
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitions}
		}
	case 381:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2127
		{
			yyVAL.partSpec = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2131
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitions}
		}
	case 383:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2135
		{
			yyVAL.partSpec = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2139
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitions}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2143
		{
			yyVAL.partSpec = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2147
		{
			yyVAL.partSpec = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 387:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2151
		{
			yyVAL.partSpec = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].colIdent}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].boolean}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2155
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitions}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.partSpec = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitions}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2167
		{
			yyVAL.partSpec = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2171
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitions}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2175
		{
			yyVAL.partSpec = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2179
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitions}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2183
		{
			yyVAL.partSpec = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2187
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitions}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2191
		{
			yyVAL.partSpec = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yyVAL.partSpec = &PartitionSpec{Action: UpgradeAction}
		}
	case 399:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.boolean = false
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2204
		{
			yyVAL.boolean = false
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2208
		{
			yyVAL.boolean = true
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2215
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2219
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 404:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2225
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 405:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2229
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2235
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2241
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2245
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 409:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2253
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 410:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2257
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2262
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2266
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2272
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[3].tableName}
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2276
		{
			yyVAL.statement = &TruncateTable{Table: yyDollar[2].tableName}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2281
		{
			yyVAL.statement = &OtherRead{}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2287
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2291
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2295
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2299
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2303
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 422:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2311
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilter}}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2315
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Privilege}}
		}
	case 424:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2319
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 425:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2323
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2327
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2331
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 428:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2335
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 429:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2339
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2343
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2347
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 432:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2351
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2355
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2360
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2364
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2372
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 438:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2376
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2380
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2384
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 441:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2388
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2393
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2397
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2401
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 445:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2411
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2416
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 447:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2420
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2424
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2428
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2433
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2447
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2451
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2455
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2465
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2471
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2475
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2481
		{
			yyVAL.str = ""
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2485
		{
			yyVAL.str = "extended "
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2491
		{
			yyVAL.str = ""
		}
	case 461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2495
		{
			yyVAL.str = "full "
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2501
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2505
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2511
		{
			yyVAL.str = ""
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2515
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2519
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2525
		{
			yyVAL.showFilter = nil
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2529
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2533
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.showFilter = nil
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2543
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2549
		{
			yyVAL.empty = struct{}{}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.empty = struct{}{}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2557
		{
			yyVAL.empty = struct{}{}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2563
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.statement = &Begin{}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2577
		{
			yyVAL.statement = &Begin{}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2583
		{
			yyVAL.statement = &Commit{}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2589
		{
			yyVAL.statement = &Rollback{}
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2593
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2598
		{
			yyVAL.empty = struct{}{}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2600
		{
			yyVAL.empty = struct{}{}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2603
		{
			yyVAL.empty = struct{}{}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2605
		{
			yyVAL.empty = struct{}{}
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2610
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2616
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 488:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2621
		{
			yyVAL.explainType = EmptyType
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2625
		{
			yyVAL.explainType = JSONType
		}
	case 490:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.explainType = TreeType
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2633
		{
			yyVAL.explainType = VitessType
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2637
		{
			yyVAL.explainType = TraditionalType
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.explainType = AnalyzeType
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2647
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2661
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2665
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2669
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2673
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2678
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.str = ""
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2686
		{
			yyVAL.str = ""
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2692
		{
			yyVAL.statement = &OtherRead{}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2696
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 506:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2706
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2712
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2718
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2728
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2734
		{
			yyVAL.lockType = Read
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2738
		{
			yyVAL.lockType = ReadLocal
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2742
		{
			yyVAL.lockType = Write
		}
	case 515:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2746
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2752
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2762
		{
			setAllowComments(yylex, true)
		}
	case 519:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2766
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 520:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2772
		{
			yyVAL.bytes2 = nil
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2782
		{
			yyVAL.boolean = true
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2786
		{
			yyVAL.boolean = false
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2790
		{
			yyVAL.boolean = true
		}
	case 525:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2795
		{
			yyVAL.str = ""
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2799
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2803
		{
			yyVAL.str = SQLCacheStr
		}
	case 528:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2808
		{
			yyVAL.boolean = false
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2812
		{
			yyVAL.boolean = true
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2816
		{
			yyVAL.boolean = true
		}
	case 531:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2821
		{
			yyVAL.selectExprs = nil
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2825
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 533:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2830
		{
			yyVAL.strs = nil
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2834
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2838
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2842
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 537:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2846
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2852
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2856
		{
			yyVAL.str = SQLCacheStr
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2860
		{
			yyVAL.str = DistinctStr
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2864
		{
			yyVAL.str = DistinctStr
		}
	case 542:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2868
		{
			yyVAL.str = StraightJoinHint
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2872
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2878
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2882
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2888
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2892
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2896
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 549:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2900
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 550:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2905
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2909
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2913
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 554:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2920
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 555:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2925
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2929
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 557:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2935
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2939
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2949
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2953
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2957
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2963
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2969
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 566:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2973
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 567:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2978
		{
			yyVAL.columns = nil
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2982
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 569:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2988
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 570:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2992
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 571:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2998
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3002
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 573:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3015
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 574:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3019
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 575:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3023
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 576:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3027
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3033
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3035
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 579:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3039
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 580:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3041
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 581:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3045
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3047
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 583:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3050
		{
			yyVAL.empty = struct{}{}
		}
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3052
		{
			yyVAL.empty = struct{}{}
		}
	case 585:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3055
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3059
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3063
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 589:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3070
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 590:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3076
		{
			yyVAL.joinType = NormalJoinType
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3080
		{
			yyVAL.joinType = NormalJoinType
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3084
		{
			yyVAL.joinType = NormalJoinType
		}
	case 593:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.joinType = StraightJoinType
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3096
		{
			yyVAL.joinType = LeftJoinType
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3100
		{
			yyVAL.joinType = LeftJoinType
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3104
		{
			yyVAL.joinType = RightJoinType
		}
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.joinType = RightJoinType
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3114
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3118
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3128
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 601:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3132
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 602:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3138
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3142
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3148
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 605:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3153
		{
			yyVAL.indexHints = nil
		}
	case 606:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3157
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 607:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3161
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 608:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3165
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 609:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3169
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3174
		{
			yyVAL.expr = nil
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3178
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3184
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 613:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3188
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3192
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3196
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 616:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3200
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 617:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3204
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3208
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3212
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3218
		{
			yyVAL.str = ""
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3222
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 622:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3228
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3232
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3238
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 625:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3242
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3246
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 627:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3250
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3254
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3258
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3262
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 631:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3266
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 632:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3280
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3284
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3292
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3296
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3300
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3306
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3310
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3314
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3318
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3326
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3330
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = nil
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3339
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3345
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3349
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3353
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3359
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3365
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3375
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3379
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3383
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3387
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3391
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3399
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3403
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3407
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3411
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 665:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3415
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3419
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3423
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3427
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 669:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3431
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3435
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3439
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3443
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3447
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3451
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3455
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3463
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3467
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 679:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3471
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3475
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3483
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3497
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 683:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3505
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 689:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3523
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 690:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3527
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 691:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3531
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3535
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3545
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 694:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3549
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 695:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3553
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3557
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 697:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3561
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 698:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3565
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 699:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3569
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 700:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3573
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 701:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3577
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 702:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3581
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 703:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3585
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 704:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3589
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 705:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3593
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3603
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3607
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3611
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3616
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3621
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3626
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 712:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3632
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3637
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3642
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 715:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3646
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 716:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3650
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3655
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 718:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3660
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 719:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3665
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 720:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3669
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 721:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3673
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3683
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3693
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3697
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3701
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3705
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3709
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3713
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3717
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 732:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3723
		{
			yyVAL.matchExprOption = NoOption
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3727
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 734:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3731
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3735
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3745
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3749
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 739:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3753
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 740:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3759
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3763
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3767
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 743:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 744:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3775
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3779
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3785
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 747:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3789
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3797
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3801
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3805
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3809
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 753:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3814
		{
			yyVAL.expr = nil
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3818
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 755:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3823
		{
			yyVAL.str = string("")
		}
	case 756:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3827
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3837
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 759:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3843
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3848
		{
			yyVAL.expr = nil
		}
	case 761:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3852
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3862
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 764:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3866
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3872
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3876
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3880
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3884
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3888
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3892
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3896
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.expr = &NullVal{}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3906
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3915
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3919
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 776:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3924
		{
			yyVAL.exprs = nil
		}
	case 777:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3928
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3933
		{
			yyVAL.expr = nil
		}
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3937
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3942
		{
			yyVAL.orderBy = nil
		}
	case 781:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3946
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3952
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 783:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3956
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 784:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3962
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3967
		{
			yyVAL.orderDirection = AscOrder
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3971
		{
			yyVAL.orderDirection = AscOrder
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3975
		{
			yyVAL.orderDirection = DescOrder
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3980
		{
			yyVAL.limit = nil
		}
	case 789:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3984
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 790:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3988
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 791:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3992
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 792:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3997
		{
			yyVAL.indexOptions = nil
		}
	case 793:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4001
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 794:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4005
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 797:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4020
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 798:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4024
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 799:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4028
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 800:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4032
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 801:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4038
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 802:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4042
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 803:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4046
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 804:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4051
		{
			yyVAL.str = ""
		}
	case 805:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4055
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 806:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4059
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4063
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4068
		{
			yyVAL.str = ""
		}
	case 809:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4072
		{
			yyVAL.str = yyDollar[3].str
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4078
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4082
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 812:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4087
		{
			yyVAL.str = ""
		}
	case 813:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4091
		{
			yyVAL.str = yyDollar[2].str
		}
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4096
		{
			yyVAL.str = "cascaded"
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4100
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4104
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 817:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4109
		{
			yyVAL.str = ""
		}
	case 818:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4113
		{
			yyVAL.str = yyDollar[3].str
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4119
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4123
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4127
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4131
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 823:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4136
		{
			yyVAL.lock = NoLock
		}
	case 824:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4140
		{
			yyVAL.lock = ForUpdateLock
		}
	case 825:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4144
		{
			yyVAL.lock = ShareModeLock
		}
	case 826:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4149
		{
			yyVAL.selectInto = nil
		}
	case 827:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:4153
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 828:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4157
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 829:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4161
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 830:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4166
		{
			yyVAL.str = ""
		}
	case 831:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 832:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 833:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4179
		{
			yyVAL.str = ""
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4183
		{
			yyVAL.str = " header"
		}
	case 835:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4188
		{
			yyVAL.str = ""
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4192
		{
			yyVAL.str = " manifest on"
		}
	case 837:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4196
		{
			yyVAL.str = " manifest off"
		}
	case 838:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4201
		{
			yyVAL.str = ""
		}
	case 839:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4205
		{
			yyVAL.str = " overwrite on"
		}
	case 840:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4209
		{
			yyVAL.str = " overwrite off"
		}
	case 841:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4215
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 842:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4220
		{
			yyVAL.str = ""
		}
	case 843:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4224
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 844:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4229
		{
			yyVAL.str = ""
		}
	case 845:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4233
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 846:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4238
		{
			yyVAL.str = ""
		}
	case 847:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4242
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 848:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4247
		{
			yyVAL.str = ""
		}
	case 849:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4251
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 850:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4256
		{
			yyVAL.str = ""
		}
	case 851:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4260
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4265
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4269
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 854:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4274
		{
			yyVAL.str = ""
		}
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4278
		{
			yyVAL.str = " optionally"
		}
	case 856:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4291
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4299
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 859:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4303
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4307
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 861:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4313
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 862:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4317
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4321
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 864:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4325
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4330
		{
			yyVAL.updateExprs = nil
		}
	case 866:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4334
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 867:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4340
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 868:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4344
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4350
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 870:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4354
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 871:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4360
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4366
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4376
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 874:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4380
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 875:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4386
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4392
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4396
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4402
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4406
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 880:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4410
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 881:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4414
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 882:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4418
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4426
		{
			yyVAL.bytes = []byte("charset")
		}
	case 887:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4436
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4440
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4444
		{
			yyVAL.expr = &Default{}
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4453
		{
			yyVAL.boolean = false
		}
	case 893:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4455
		{
			yyVAL.boolean = true
		}
	case 894:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4458
		{
			yyVAL.boolean = false
		}
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4460
		{
			yyVAL.boolean = true
		}
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4463
		{
			yyVAL.ignore = false
		}
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4465
		{
			yyVAL.ignore = true
		}
	case 898:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4468
		{
			yyVAL.empty = struct{}{}
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4470
		{
			yyVAL.empty = struct{}{}
		}
	case 900:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4472
		{
			yyVAL.empty = struct{}{}
		}
	case 901:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4475
		{
			yyVAL.str = ""
		}
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4477
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4479
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 904:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4481
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4484
		{
			yyVAL.indexOptions = nil
		}
	case 906:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4486
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 907:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4490
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 908:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4496
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 909:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4500
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4507
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 912:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4513
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4517
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4524
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4930
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4939
		{
			decNesting(yylex)
		}
	case 1299:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4944
		{
			skipToEnd(yylex)
		}
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4949
		{
			skipToEnd(yylex)
		}
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4953
		{
			skipToEnd(yylex)
		}
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4957
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
