// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const SEQUENCE = 57523
const BEGIN = 57524
const START = 57525
const TRANSACTION = 57526
const COMMIT = 57527
const ROLLBACK = 57528
const SAVEPOINT = 57529
const RELEASE = 57530
const WORK = 57531
const BIT = 57532
const TINYINT = 57533
const SMALLINT = 57534
const MEDIUMINT = 57535
const INT = 57536
const INTEGER = 57537
const BIGINT = 57538
const INTNUM = 57539
const REAL = 57540
const DOUBLE = 57541
const FLOAT_TYPE = 57542
const DECIMAL = 57543
const NUMERIC = 57544
const TIME = 57545
const TIMESTAMP = 57546
const DATETIME = 57547
const YEAR = 57548
const CHAR = 57549
const VARCHAR = 57550
const BOOL = 57551
const CHARACTER = 57552
const VARBINARY = 57553
const NCHAR = 57554
const TEXT = 57555
const TINYTEXT = 57556
const MEDIUMTEXT = 57557
const LONGTEXT = 57558
const BLOB = 57559
const TINYBLOB = 57560
const MEDIUMBLOB = 57561
const LONGBLOB = 57562
const JSON = 57563
const ENUM = 57564
const GEOMETRY = 57565
const POINT = 57566
const LINESTRING = 57567
const POLYGON = 57568
const GEOMETRYCOLLECTION = 57569
const MULTIPOINT = 57570
const MULTILINESTRING = 57571
const MULTIPOLYGON = 57572
const NULLX = 57573
const AUTO_INCREMENT = 57574
const APPROXNUM = 57575
const SIGNED = 57576
const UNSIGNED = 57577
const ZEROFILL = 57578
const COLLATION = 57579
const DATABASES = 57580
const SCHEMAS = 57581
const TABLES = 57582
const VITESS_METADATA = 57583
const VSCHEMA = 57584
const FULL = 57585
const PROCESSLIST = 57586
const COLUMNS = 57587
const FIELDS = 57588
const ENGINES = 57589
const PLUGINS = 57590
const EXTENDED = 57591
const KEYSPACES = 57592
const VITESS_KEYSPACES = 57593
const VITESS_SHARDS = 57594
const VITESS_TABLETS = 57595
const CODE = 57596
const NAMES = 57597
const CHARSET = 57598
const GLOBAL = 57599
const SESSION = 57600
const ISOLATION = 57601
const LEVEL = 57602
const READ = 57603
const WRITE = 57604
const ONLY = 57605
const REPEATABLE = 57606
const COMMITTED = 57607
const UNCOMMITTED = 57608
const SERIALIZABLE = 57609
const CURRENT_TIMESTAMP = 57610
const DATABASE = 57611
const CURRENT_DATE = 57612
const CURRENT_TIME = 57613
const LOCALTIME = 57614
const LOCALTIMESTAMP = 57615
const UTC_DATE = 57616
const UTC_TIME = 57617
const UTC_TIMESTAMP = 57618
const REPLACE = 57619
const CONVERT = 57620
const CAST = 57621
const SUBSTR = 57622
const SUBSTRING = 57623
const GROUP_CONCAT = 57624
const SEPARATOR = 57625
const TIMESTAMPADD = 57626
const TIMESTAMPDIFF = 57627
const MATCH = 57628
const AGAINST = 57629
const BOOLEAN = 57630
const LANGUAGE = 57631
const WITH = 57632
const QUERY = 57633
const EXPANSION = 57634
const UNUSED = 57635
const ARRAY = 57636
const CUME_DIST = 57637
const DESCRIPTION = 57638
const DENSE_RANK = 57639
const EMPTY = 57640
const EXCEPT = 57641
const FIRST_VALUE = 57642
const GROUPING = 57643
const GROUPS = 57644
const JSON_TABLE = 57645
const LAG = 57646
const LAST_VALUE = 57647
const LATERAL = 57648
const LEAD = 57649
const MEMBER = 57650
const NTH_VALUE = 57651
const NTILE = 57652
const OF = 57653
const OVER = 57654
const PERCENT_RANK = 57655
const RANK = 57656
const RECURSIVE = 57657
const ROW_NUMBER = 57658
const SYSTEM = 57659
const WINDOW = 57660
const ACTIVE = 57661
const ADMIN = 57662
const BUCKETS = 57663
const CLONE = 57664
const COMPONENT = 57665
const DEFINITION = 57666
const ENFORCED = 57667
const EXCLUDE = 57668
const FOLLOWING = 57669
const GEOMCOLLECTION = 57670
const GET_MASTER_PUBLIC_KEY = 57671
const HISTOGRAM = 57672
const HISTORY = 57673
const INACTIVE = 57674
const INVISIBLE = 57675
const LOCKED = 57676
const MASTER_COMPRESSION_ALGORITHMS = 57677
const MASTER_PUBLIC_KEY_PATH = 57678
const MASTER_TLS_CIPHERSUITES = 57679
const MASTER_ZSTD_COMPRESSION_LEVEL = 57680
const NESTED = 57681
const NETWORK_NAMESPACE = 57682
const NOWAIT = 57683
const NULLS = 57684
const OJ = 57685
const OLD = 57686
const OPTIONAL = 57687
const ORDINALITY = 57688
const ORGANIZATION = 57689
const OTHERS = 57690
const PATH = 57691
const PERSIST = 57692
const PERSIST_ONLY = 57693
const PRECEDING = 57694
const PRIVILEGE_CHECKS_USER = 57695
const PROCESS = 57696
const RANDOM = 57697
const REFERENCE = 57698
const REQUIRE_ROW_FORMAT = 57699
const RESOURCE = 57700
const RESPECT = 57701
const RESTART = 57702
const RETAIN = 57703
const REUSE = 57704
const ROLE = 57705
const SECONDARY = 57706
const SECONDARY_ENGINE = 57707
const SECONDARY_LOAD = 57708
const SECONDARY_UNLOAD = 57709
const SKIP = 57710
const SRID = 57711
const THREAD_PRIORITY = 57712
const TIES = 57713
const UNBOUNDED = 57714
const VCPU = 57715
const VISIBLE = 57716
const FORMAT = 57717
const TREE = 57718
const VITESS = 57719
const TRADITIONAL = 57720
const LOCAL = 57721
const LOW_PRIORITY = 57722

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"CODE",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 43,
	136, 109,
	227, 109,
	-2, 103,
	-1, 50,
	34, 348,
	155, 348,
	167, 348,
	195, 362,
	196, 362,
	-2, 350,
	-1, 55,
	157, 372,
	-2, 370,
	-1, 79,
	55, 415,
	-2, 423,
	-1, 103,
	136, 109,
	227, 109,
	-2, 104,
	-1, 440,
	143, 790,
	-2, 786,
	-1, 441,
	143, 791,
	-2, 787,
	-1, 458,
	55, 416,
	-2, 428,
	-1, 459,
	55, 417,
	-2, 429,
	-1, 479,
	111, 1071,
	-2, 80,
	-1, 480,
	111, 975,
	-2, 81,
	-1, 485,
	111, 933,
	-2, 751,
	-1, 487,
	111, 1014,
	-2, 753,
	-1, 639,
	136, 109,
	227, 109,
	-2, 272,
	-1, 1030,
	143, 793,
	-2, 789,
	-1, 1122,
	73, 62,
	81, 62,
	-2, 66,
	-1, 1508,
	5, 667,
	18, 667,
	20, 667,
	32, 667,
	82, 667,
	-2, 454,
	-1, 1707,
	45, 722,
	-2, 720,
}

const yyPrivate = 57344

const yyLast = 19679

var yyAct = [...]int{
	440, 1781, 1792, 1655, 1550, 1707, 384, 1750, 1337, 1612,
	1144, 1488, 1305, 413, 1632, 1425, 399, 1174, 1195, 753,
	1683, 1069, 1489, 1140, 804, 78, 3, 797, 1189, 1338,
	1405, 1485, 1324, 915, 1406, 1153, 1445, 620, 1382, 1143,
	1500, 1473, 1017, 1264, 484, 960, 113, 652, 1197, 125,
	841, 353, 125, 617, 1398, 1158, 76, 365, 614, 125,
	948, 1024, 451, 834, 1101, 1108, 1119, 802, 688, 827,
	807, 791, 1071, 825, 1050, 372, 386, 994, 460, 1084,
	31, 445, 375, 1213, 621, 840, 831, 365, 1185, 613,
	365, 125, 365, 125, 838, 1124, 814, 74, 104, 382,
	963, 105, 766, 79, 1066, 1067, 980, 73, 824, 1303,
	125, 125, 1704, 1657, 767, 8, 7, 6, 125, 1541,
	645, 906, 1622, 125, 1785, 1747, 1779, 1728, 114, 115,
	116, 1772, 1551, 1198, 1746, 1727, 373, 374, 81, 82,
	83, 84, 85, 86, 1462, 1580, 33, 624, 1304, 67,
	37, 38, 466, 470, 1200, 446, 1515, 1516, 425, 927,
	431, 432, 429, 430, 428, 427, 426, 1135, 1136, 842,
	1514, 843, 1134, 926, 433, 434, 114, 115, 116, 669,
	670, 478, 344, 101, 118, 119, 120, 1368, 660, 444,
	1367, 345, 93, 1369, 686, 443, 1390, 1168, 1427, 342,
	101, 109, 630, 110, 1615, 629, 1055, 1694, 715, 714,
	724, 725, 717, 718, 719, 720, 721, 722, 723, 716,
	66, 1730, 726, 1068, 1175, 1199, 114, 115, 116, 1571,
	793, 1569, 363, 339, 671, 632, 979, 925, 672, 669,
	670, 367, 351, 690, 361, 101, 94, 677, 92, 679,
	684, 937, 97, 664, 665, 98, 99, 1428, 662, 663,
	685, 981, 982, 983, 661, 666, 114, 115, 116, 640,
	1430, 1243, 332, 1429, 934, 1771, 1760, 1713, 1684, 123,
	1102, 676, 678, 1193, 1235, 454, 1796, 616, 936, 368,
	922, 919, 920, 1193, 918, 938, 1798, 1027, 1521, 334,
	335, 336, 1193, 349, 350, 356, 111, 682, 644, 346,
	348, 357, 337, 338, 359, 358, 100, 1675, 333, 341,
	354, 619, 1446, 623, 935, 626, 631, 929, 932, 1232,
	481, 472, 125, 100, 1431, 1234, 942, 1306, 1308, 691,
	633, 634, 1162, 909, 1472, 673, 675, 1471, 642, 1470,
	1162, 627, 331, 648, 365, 117, 638, 1242, 1540, 1711,
	1241, 1283, 1601, 1448, 738, 739, 1223, 1201, 365, 365,
	924, 1726, 1280, 1513, 1329, 1293, 1272, 1130, 100, 674,
	818, 751, 655, 656, 657, 658, 659, 649, 1141, 726,
	874, 716, 923, 1695, 726, 697, 114, 115, 116, 1364,
	687, 1001, 643, 1450, 1731, 1454, 961, 1449, 964, 1447,
	1175, 114, 115, 116, 1452, 999, 1000, 998, 1080, 654,
	1219, 1220, 1221, 1451, 1794, 1307, 976, 1795, 681, 1793,
	635, 703, 636, 706, 68, 637, 1453, 1455, 928, 1051,
	683, 355, 705, 703, 125, 89, 1686, 706, 1676, 1674,
	916, 103, 1464, 930, 1498, 844, 701, 667, 736, 706,
	1051, 1233, 1290, 1231, 1165, 1532, 911, 1388, 1161, 365,
	794, 1166, 125, 795, 125, 125, 1161, 365, 1716, 1773,
	1799, 811, 1278, 365, 90, 700, 698, 699, 1621, 1765,
	1277, 625, 1222, 738, 739, 754, 862, 1227, 1224, 1215,
	1225, 1218, 66, 1214, 738, 739, 1774, 1216, 1217, 704,
	705, 703, 1620, 792, 997, 962, 1766, 965, 789, 1546,
	1402, 1226, 1401, 646, 647, 653, 1204, 706, 1776, 769,
	771, 773, 775, 777, 779, 780, 1775, 875, 1475, 808,
	823, 770, 772, 1767, 776, 778, 1800, 781, 1257, 1258,
	1259, 1758, 796, 717, 718, 719, 720, 721, 722, 723,
	716, 1741, 650, 726, 639, 1645, 888, 891, 892, 893,
	894, 895, 896, 1618, 897, 898, 899, 900, 901, 876,
	877, 878, 879, 860, 861, 889, 1476, 863, 628, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 880,
	881, 882, 883, 884, 885, 886, 887, 719, 720, 721,
	722, 723, 716, 125, 839, 726, 1589, 902, 1547, 704,
	705, 703, 455, 1477, 365, 1412, 125, 1466, 912, 913,
	1399, 989, 991, 992, 931, 365, 1254, 706, 990, 125,
	1085, 1086, 952, 1681, 125, 1672, 1777, 125, 947, 1403,
	125, 724, 725, 717, 718, 719, 720, 721, 722, 723,
	716, 1680, 125, 726, 890, 1672, 1724, 704, 705, 703,
	1082, 704, 705, 703, 365, 365, 365, 365, 125, 365,
	365, 1279, 114, 115, 116, 706, 1019, 1720, 455, 706,
	1672, 1712, 908, 1414, 950, 1486, 114, 115, 116, 951,
	1419, 476, 822, 933, 1497, 833, 1672, 455, 954, 1163,
	956, 957, 958, 959, 966, 704, 705, 703, 471, 1325,
	481, 1672, 1671, 995, 114, 115, 116, 1018, 1371, 1358,
	943, 75, 1081, 706, 905, 1611, 1020, 1125, 630, 1408,
	1497, 629, 967, 968, 969, 970, 1596, 972, 973, 702,
	365, 704, 705, 703, 77, 806, 1588, 455, 704, 705,
	703, 114, 115, 116, 1126, 1211, 1039, 1042, 1325, 706,
	1599, 455, 1052, 114, 115, 116, 706, 1538, 1537, 1034,
	33, 974, 1685, 365, 365, 33, 996, 1105, 402, 401,
	404, 405, 406, 407, 125, 1104, 1030, 403, 408, 1534,
	1535, 1534, 1533, 473, 474, 1332, 365, 1094, 455, 441,
	1093, 455, 1029, 125, 1105, 455, 365, 1126, 754, 1093,
	125, 1536, 125, 702, 455, 1127, 1105, 1333, 905, 904,
	125, 125, 1662, 1129, 851, 850, 1497, 365, 1021, 1022,
	365, 1623, 1372, 852, 1133, 1105, 1296, 1060, 1061, 1295,
	1031, 365, 365, 1093, 66, 1120, 910, 1075, 126, 66,
	448, 126, 1125, 1030, 1083, 1064, 366, 1087, 126, 939,
	941, 836, 66, 1759, 833, 33, 1093, 946, 1127, 1099,
	1634, 1607, 907, 1176, 1177, 1178, 1125, 1095, 1624, 1625,
	1626, 1787, 955, 1190, 1525, 903, 366, 1376, 1186, 366,
	126, 366, 126, 1180, 1179, 1160, 365, 91, 971, 1627,
	125, 1426, 1097, 1407, 1501, 1502, 1210, 1123, 1635, 126,
	126, 1208, 1782, 1132, 1527, 1504, 1507, 126, 1128, 1486,
	1191, 1131, 126, 1416, 66, 125, 125, 125, 125, 125,
	977, 1148, 125, 125, 945, 1349, 125, 365, 1209, 66,
	1350, 1506, 1346, 1628, 1629, 1345, 1192, 1408, 1762, 1032,
	1033, 1745, 125, 125, 125, 1478, 1110, 1113, 1114, 1115,
	1111, 1314, 1112, 1116, 805, 125, 1501, 1502, 125, 365,
	1169, 1743, 1170, 1171, 1172, 1173, 1203, 1187, 1188, 1347,
	1202, 1600, 1323, 1212, 1348, 1028, 1322, 1736, 1181, 1182,
	1183, 1184, 1076, 1228, 1351, 1733, 1114, 1115, 1248, 1764,
	1749, 379, 995, 1751, 1252, 1247, 1757, 715, 714, 724,
	725, 717, 718, 719, 720, 721, 722, 723, 716, 1756,
	461, 726, 714, 724, 725, 717, 718, 719, 720, 721,
	722, 723, 716, 1096, 462, 726, 1708, 1312, 96, 1706,
	1100, 940, 1103, 1035, 1036, 1313, 442, 1041, 1044, 1045,
	1413, 1122, 1028, 1047, 1407, 125, 798, 809, 810, 464,
	1394, 463, 1387, 125, 1265, 996, 1260, 1048, 799, 914,
	481, 849, 1059, 481, 651, 1062, 1063, 107, 1718, 1717,
	1660, 1385, 1378, 108, 1145, 125, 121, 1274, 1110, 1113,
	1114, 1115, 1111, 1311, 1112, 1116, 125, 125, 125, 125,
	125, 1339, 446, 1273, 1594, 1318, 1549, 1078, 125, 1085,
	1086, 1206, 125, 944, 1289, 125, 125, 1334, 1118, 125,
	125, 125, 452, 1330, 792, 1321, 1302, 449, 450, 1769,
	1205, 126, 1370, 1320, 365, 1310, 1768, 1356, 1754, 1737,
	1593, 1317, 453, 1377, 1373, 77, 1592, 1481, 1383, 1383,
	1325, 1327, 1284, 366, 1326, 1236, 1237, 1238, 1239, 1240,
	1789, 1788, 1244, 1245, 1328, 950, 1246, 366, 366, 1281,
	1341, 1342, 1352, 1344, 1365, 819, 812, 1357, 1391, 1392,
	1789, 1359, 1709, 1362, 1251, 1361, 1616, 1384, 1393, 1410,
	1395, 1396, 1397, 1079, 448, 1253, 365, 1375, 1255, 365,
	1418, 1379, 1380, 1381, 1340, 75, 80, 1343, 72, 1,
	340, 1065, 790, 461, 352, 1780, 112, 1267, 1552, 1631,
	125, 1268, 921, 1411, 1682, 1400, 365, 462, 1404, 1196,
	1151, 1142, 1275, 1276, 88, 1409, 611, 365, 1282, 87,
	680, 1285, 1286, 126, 1150, 1149, 1673, 1389, 1167, 1292,
	458, 459, 464, 1294, 463, 1614, 1297, 1298, 1299, 1300,
	1301, 1526, 1386, 365, 1415, 1715, 857, 855, 366, 1018,
	856, 126, 854, 126, 126, 859, 366, 858, 853, 1420,
	978, 362, 366, 1117, 845, 813, 1230, 1433, 1443, 1434,
	1229, 917, 1444, 1539, 1421, 1435, 1423, 1164, 975, 347,
	365, 668, 1463, 343, 734, 1432, 1457, 1319, 1366, 482,
	125, 1456, 475, 1269, 1270, 1492, 1354, 1355, 1207, 95,
	365, 1755, 1734, 1441, 1732, 1705, 365, 365, 1030, 1339,
	1656, 1487, 1735, 1703, 1287, 1763, 1748, 1490, 1077, 801,
	1591, 1480, 1288, 763, 1029, 1049, 1360, 828, 385, 125,
	988, 400, 397, 398, 1088, 1331, 708, 383, 377, 820,
	1496, 1109, 1107, 365, 1106, 365, 832, 365, 1495, 1503,
	1383, 1383, 1383, 1499, 1505, 1518, 826, 1145, 1092, 457,
	1509, 1046, 1511, 1484, 1512, 1531, 1693, 1579, 456, 740,
	741, 742, 743, 744, 745, 746, 747, 748, 749, 411,
	58, 36, 1517, 1520, 1519, 1529, 1530, 125, 1522, 1523,
	1524, 369, 126, 693, 465, 1510, 30, 1553, 365, 365,
	365, 1160, 125, 366, 29, 126, 28, 1543, 23, 22,
	1542, 1544, 1545, 21, 366, 20, 19, 25, 126, 18,
	17, 16, 106, 126, 102, 45, 126, 43, 41, 126,
	1422, 40, 641, 27, 26, 15, 364, 14, 13, 12,
	11, 126, 10, 9, 5, 4, 1439, 1440, 696, 1567,
	24, 1558, 1559, 366, 366, 366, 366, 126, 366, 366,
	752, 2, 0, 0, 1590, 0, 483, 0, 0, 615,
	0, 622, 0, 0, 1339, 0, 1562, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1442, 0, 365, 1595,
	0, 1603, 0, 0, 0, 0, 365, 1604, 1373, 414,
	32, 0, 0, 0, 1609, 0, 0, 1467, 0, 0,
	0, 0, 1493, 1610, 0, 0, 0, 0, 0, 0,
	1479, 1617, 365, 1619, 0, 0, 0, 0, 0, 366,
	0, 0, 32, 1508, 0, 0, 1638, 0, 1564, 1565,
	0, 1566, 0, 1442, 1568, 0, 1570, 0, 0, 0,
	0, 0, 0, 1637, 0, 365, 365, 365, 125, 365,
	1636, 0, 366, 366, 1648, 1650, 1651, 0, 0, 0,
	365, 0, 365, 126, 447, 0, 0, 1654, 365, 1652,
	1490, 0, 1665, 1659, 1490, 366, 1145, 1668, 1145, 1661,
	0, 0, 126, 0, 1663, 366, 0, 0, 0, 126,
	1670, 126, 0, 1677, 0, 365, 125, 0, 0, 126,
	126, 1678, 1644, 1679, 1687, 468, 366, 1548, 1561, 366,
	0, 0, 1563, 0, 0, 0, 0, 0, 0, 0,
	366, 366, 1557, 1572, 1573, 1702, 1667, 0, 0, 0,
	0, 0, 1669, 365, 1710, 0, 1490, 0, 0, 0,
	1587, 0, 0, 0, 0, 365, 365, 365, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1723, 1597, 1598,
	1722, 0, 1602, 0, 0, 0, 0, 1729, 376, 0,
	0, 0, 365, 0, 125, 366, 1339, 0, 1738, 126,
	993, 0, 0, 1002, 1003, 1004, 1005, 1006, 1007, 1008,
	1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1753, 1752,
	1744, 1742, 0, 0, 126, 126, 126, 126, 126, 1761,
	0, 126, 126, 0, 0, 126, 366, 0, 0, 0,
	365, 1145, 0, 483, 0, 0, 0, 0, 0, 1770,
	0, 126, 126, 126, 0, 0, 0, 692, 694, 0,
	1056, 0, 1786, 0, 126, 0, 0, 126, 366, 455,
	0, 1649, 1797, 0, 710, 1633, 713, 0, 0, 0,
	0, 0, 727, 728, 729, 730, 731, 732, 733, 0,
	711, 712, 709, 715, 714, 724, 725, 717, 718, 719,
	720, 721, 722, 723, 716, 0, 0, 726, 0, 715,
	714, 724, 725, 717, 718, 719, 720, 721, 722, 723,
	716, 0, 0, 726, 0, 0, 1689, 1690, 1691, 1692,
	0, 1696, 0, 1697, 1698, 1699, 0, 1700, 1701, 0,
	0, 0, 0, 0, 0, 0, 1688, 0, 0, 0,
	0, 0, 0, 0, 126, 0, 0, 0, 816, 0,
	0, 0, 126, 689, 0, 0, 483, 0, 0, 1719,
	0, 0, 846, 0, 0, 0, 0, 0, 0, 32,
	1725, 0, 0, 0, 126, 0, 0, 0, 0, 0,
	735, 737, 0, 0, 0, 126, 126, 126, 126, 126,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 1633,
	1145, 126, 0, 0, 126, 126, 0, 1583, 126, 126,
	126, 750, 0, 0, 1740, 755, 756, 757, 758, 759,
	760, 761, 762, 366, 765, 768, 768, 768, 774, 768,
	768, 774, 768, 782, 783, 784, 785, 786, 787, 788,
	0, 0, 0, 0, 0, 0, 0, 32, 715, 714,
	724, 725, 717, 718, 719, 720, 721, 722, 723, 716,
	1790, 1791, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 829, 0, 0, 0, 0, 0, 0,
	0, 1261, 1262, 1263, 0, 366, 0, 0, 366, 0,
	0, 0, 0, 0, 707, 0, 0, 0, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 483, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 366, 0, 0, 1582,
	376, 0, 0, 0, 0, 0, 0, 0, 0, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 366, 483, 483, 483, 483, 0, 483, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 800, 803,
	715, 714, 724, 725, 717, 718, 719, 720, 721, 722,
	723, 716, 0, 0, 726, 0, 0, 0, 0, 366,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 0, 0, 0, 366, 366, 0, 0, 0,
	0, 0, 0, 689, 0, 0, 0, 0, 0, 1023,
	1577, 483, 0, 0, 689, 0, 0, 0, 126, 0,
	0, 0, 0, 0, 0, 1053, 0, 0, 1576, 0,
	0, 0, 366, 0, 366, 0, 366, 0, 0, 0,
	0, 0, 1057, 1058, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 689, 689, 689, 689, 0, 689, 689,
	0, 0, 0, 0, 0, 1089, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 816, 126, 0, 483, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 366, 366,
	0, 126, 0, 0, 0, 0, 483, 0, 0, 483,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	483, 615, 715, 714, 724, 725, 717, 718, 719, 720,
	721, 722, 723, 716, 1575, 0, 726, 1437, 1438, 0,
	715, 714, 724, 725, 717, 718, 719, 720, 721, 722,
	723, 716, 1458, 1459, 726, 1460, 1461, 0, 0, 0,
	953, 0, 0, 0, 0, 0, 0, 1468, 1469, 0,
	0, 0, 0, 0, 0, 622, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 366, 0, 0,
	0, 0, 0, 0, 0, 366, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 984, 985,
	986, 987, 0, 0, 0, 0, 483, 0, 0, 1121,
	0, 366, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 715, 714, 724, 725,
	717, 718, 719, 720, 721, 722, 723, 716, 1256, 0,
	726, 0, 0, 0, 366, 366, 366, 126, 366, 1528,
	0, 0, 0, 1037, 1038, 0, 0, 0, 0, 366,
	0, 366, 0, 0, 0, 412, 0, 366, 715, 714,
	724, 725, 717, 718, 719, 720, 721, 722, 723, 716,
	0, 1436, 726, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 366, 126, 0, 0, 1560, 0,
	0, 715, 714, 724, 725, 717, 718, 719, 720, 721,
	722, 723, 716, 0, 124, 726, 0, 360, 0, 0,
	0, 0, 0, 0, 124, 0, 689, 0, 0, 0,
	0, 0, 366, 0, 0, 0, 0, 0, 0, 0,
	1139, 0, 0, 0, 366, 366, 366, 469, 469, 0,
	0, 0, 0, 0, 0, 0, 124, 0, 124, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 366, 0, 126, 0, 124, 124, 0, 0, 0,
	0, 0, 0, 124, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1194,
	1266, 0, 0, 483, 0, 0, 0, 0, 1271, 0,
	0, 447, 0, 0, 0, 0, 0, 0, 0, 366,
	715, 714, 724, 725, 717, 718, 719, 720, 721, 722,
	723, 716, 0, 0, 726, 0, 1639, 1640, 1641, 1642,
	1643, 0, 0, 0, 1646, 1647, 0, 0, 0, 0,
	1309, 0, 715, 714, 724, 725, 717, 718, 719, 720,
	721, 722, 723, 716, 0, 483, 726, 0, 1417, 0,
	0, 0, 0, 0, 829, 0, 0, 0, 0, 0,
	0, 1335, 1336, 0, 0, 829, 829, 829, 829, 829,
	0, 0, 0, 0, 0, 1424, 0, 0, 0, 0,
	0, 1121, 0, 0, 829, 0, 483, 0, 829, 33,
	34, 35, 67, 37, 38, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 71,
	0, 0, 483, 0, 39, 64, 65, 0, 62, 0,
	0, 0, 0, 0, 63, 0, 0, 1291, 0, 0,
	0, 0, 0, 483, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1474,
	0, 0, 0, 51, 0, 0, 0, 1315, 1316, 803,
	0, 0, 0, 66, 0, 689, 0, 0, 0, 483,
	0, 0, 1053, 0, 0, 1494, 1474, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 689, 0, 0, 0,
	0, 0, 483, 0, 483, 0, 622, 0, 0, 0,
	1783, 0, 0, 0, 0, 0, 0, 0, 0, 42,
	44, 47, 46, 49, 0, 61, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 50, 70,
	69, 0, 0, 59, 60, 48, 0, 1554, 1555, 1556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 53, 0, 54, 55, 56, 57, 124,
	0, 0, 0, 1491, 0, 32, 0, 0, 0, 0,
	0, 0, 0, 469, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 829, 124,
	835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1053, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 483, 0, 0,
	0, 0, 0, 0, 0, 1613, 1465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 68, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 483, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1482, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1578, 0, 1613, 1613, 1613, 0, 1653, 0,
	1584, 1585, 1586, 0, 0, 0, 0, 0, 0, 1664,
	0, 1666, 0, 0, 0, 0, 0, 1613, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 0, 0, 1613, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 124,
	0, 0, 124, 0, 0, 949, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 1630,
	0, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 1721, 483, 483, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1581, 0, 0, 0, 0, 0, 0, 1053,
	0, 1739, 0, 0, 0, 0, 1491, 0, 32, 0,
	1491, 0, 0, 0, 0, 0, 0, 376, 0, 0,
	0, 0, 0, 0, 1605, 0, 0, 1606, 0, 0,
	1608, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 469, 949, 0, 1613,
	0, 469, 469, 0, 0, 469, 469, 469, 0, 0,
	0, 1054, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1491, 0, 0, 0, 0, 0, 0, 0,
	469, 469, 469, 469, 469, 0, 0, 0, 0, 1073,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 949, 124, 0, 124, 1658, 376,
	0, 0, 0, 0, 0, 124, 124, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1778, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 124, 124, 124, 124, 0, 0, 124, 124, 0,
	0, 124, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 1250, 124,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 124, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 469, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 469, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 0, 0, 0, 0, 0, 0, 0, 1073, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 469,
	124, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1054, 124, 124, 124, 124, 124, 0, 0, 0, 0,
	0, 0, 0, 1353, 0, 0, 0, 124, 0, 0,
	124, 124, 0, 0, 124, 1363, 949, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 469, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 949,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1054, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1054, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1073, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 596, 584,
	0, 124, 537, 599, 510, 527, 607, 528, 531, 569,
	495, 550, 233, 525, 0, 514, 491, 521, 492, 512,
	539, 164, 543, 509, 586, 553, 598, 198, 0, 515,
	244, 571, 275, 155, 206, 204, 294, 169, 165, 163,
	154, 186, 211, 243, 291, 237, 605, 201, 560, 0,
	283, 219, 0, 0, 0, 541, 588, 548, 580, 536,
	570, 500, 559, 600, 526, 567, 601, 190, 153, 131,
	230, 284, 171, 0, 0, 1054, 114, 115, 116, 124,
	1146, 1147, 0, 0, 0, 0, 0, 149, 0, 564,
	595, 523, 566, 568, 610, 490, 561, 0, 493, 496,
	606, 591, 518, 519, 1374, 0, 0, 0, 0, 0,
	0, 540, 549, 577, 534, 0, 0, 0, 0, 0,
	0, 0, 0, 516, 0, 558, 0, 0, 0, 497,
	494, 0, 0, 0, 0, 538, 0, 0, 0, 499,
	0, 517, 578, 0, 488, 176, 582, 590, 535, 317,
	594, 533, 532, 597, 255, 0, 288, 180, 197, 144,
	194, 128, 140, 0, 178, 229, 262, 266, 587, 513,
	522, 156, 520, 264, 241, 307, 557, 245, 263, 202,
	296, 256, 306, 318, 319, 161, 223, 312, 292, 315,
	327, 280, 133, 290, 304, 150, 274, 0, 0, 0,
	135, 302, 287, 217, 191, 192, 134, 0, 260, 162,
	174, 158, 232, 299, 300, 157, 329, 141, 314, 137,
	142, 313, 225, 295, 303, 218, 210, 136, 301, 216,
	209, 196, 168, 182, 253, 205, 254, 183, 221, 220,
	222, 0, 132, 0, 285, 310, 330, 147, 508, 583,
	293, 323, 326, 0, 257, 148, 175, 167, 252, 173,
	199, 322, 324, 325, 146, 224, 143, 185, 281, 195,
	203, 575, 609, 240, 265, 151, 309, 282, 504, 507,
	502, 503, 551, 552, 602, 603, 604, 579, 498, 0,
	505, 506, 0, 585, 592, 593, 556, 127, 138, 200,
	328, 258, 172, 311, 489, 501, 160, 511, 0, 0,
	524, 529, 530, 542, 544, 545, 546, 547, 555, 562,
	563, 565, 572, 573, 574, 576, 581, 589, 608, 129,
	130, 139, 145, 152, 159, 166, 170, 177, 181, 184,
	187, 188, 189, 193, 208, 212, 213, 214, 215, 226,
	227, 228, 231, 234, 235, 236, 238, 239, 242, 246,
	247, 248, 249, 250, 251, 259, 261, 267, 268, 269,
	270, 271, 272, 273, 276, 277, 278, 279, 286, 289,
	297, 298, 308, 316, 320, 179, 305, 321, 0, 207,
	554, 596, 584, 0, 0, 537, 599, 510, 527, 607,
	528, 531, 569, 495, 550, 233, 525, 0, 514, 491,
	521, 492, 512, 539, 164, 543, 509, 586, 553, 598,
	198, 0, 515, 244, 571, 275, 155, 206, 204, 294,
	169, 165, 163, 154, 186, 211, 243, 291, 237, 605,
	201, 560, 0, 283, 219, 0, 0, 0, 541, 588,
	548, 580, 536, 570, 500, 559, 600, 526, 567, 601,
	190, 153, 131, 230, 284, 171, 0, 0, 0, 114,
	115, 116, 0, 1146, 1147, 0, 0, 0, 0, 0,
	149, 0, 564, 595, 523, 566, 568, 610, 490, 561,
	0, 493, 496, 606, 591, 518, 519, 0, 0, 0,
	0, 0, 0, 0, 540, 549, 577, 534, 0, 0,
	0, 0, 0, 0, 0, 0, 516, 0, 558, 0,
	0, 0, 497, 494, 0, 0, 0, 0, 538, 0,
	0, 0, 499, 0, 517, 578, 0, 488, 176, 582,
	590, 535, 317, 594, 533, 532, 597, 255, 0, 288,
	180, 197, 144, 194, 128, 140, 0, 178, 229, 262,
	266, 587, 513, 522, 156, 520, 264, 241, 307, 557,
	245, 263, 202, 296, 256, 306, 318, 319, 161, 223,
	312, 292, 315, 327, 280, 133, 290, 304, 150, 274,
	0, 0, 0, 135, 302, 287, 217, 191, 192, 134,
	0, 260, 162, 174, 158, 232, 299, 300, 157, 329,
	141, 314, 137, 142, 313, 225, 295, 303, 218, 210,
	136, 301, 216, 209, 196, 168, 182, 253, 205, 254,
	183, 221, 220, 222, 0, 132, 0, 285, 310, 330,
	147, 508, 583, 293, 323, 326, 0, 257, 148, 175,
	167, 252, 173, 199, 322, 324, 325, 146, 224, 143,
	185, 281, 195, 203, 575, 609, 240, 265, 151, 309,
	282, 504, 507, 502, 503, 551, 552, 602, 603, 604,
	579, 498, 0, 505, 506, 0, 585, 592, 593, 556,
	127, 138, 200, 328, 258, 172, 311, 489, 501, 160,
	511, 0, 0, 524, 529, 530, 542, 544, 545, 546,
	547, 555, 562, 563, 565, 572, 573, 574, 576, 581,
	589, 608, 129, 130, 139, 145, 152, 159, 166, 170,
	177, 181, 184, 187, 188, 189, 193, 208, 212, 213,
	214, 215, 226, 227, 228, 231, 234, 235, 236, 238,
	239, 242, 246, 247, 248, 249, 250, 251, 259, 261,
	267, 268, 269, 270, 271, 272, 273, 276, 277, 278,
	279, 286, 289, 297, 298, 308, 316, 320, 179, 305,
	321, 0, 207, 554, 596, 584, 0, 0, 537, 599,
	510, 527, 607, 528, 531, 569, 495, 550, 233, 525,
	0, 514, 491, 521, 492, 512, 539, 164, 543, 509,
	586, 553, 598, 198, 0, 515, 244, 571, 275, 155,
	206, 204, 294, 169, 165, 163, 154, 186, 211, 243,
	291, 237, 605, 201, 560, 0, 283, 219, 0, 0,
	0, 541, 588, 548, 580, 536, 570, 500, 559, 600,
	526, 567, 601, 190, 153, 131, 230, 284, 171, 0,
	0, 0, 114, 115, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 149, 0, 564, 595, 523, 566, 568,
	610, 490, 561, 0, 493, 496, 606, 591, 518, 519,
	0, 0, 0, 0, 0, 0, 0, 540, 549, 577,
	534, 0, 0, 0, 0, 0, 0, 1483, 0, 516,
	0, 558, 0, 0, 0, 497, 494, 0, 0, 0,
	0, 538, 0, 0, 0, 499, 0, 517, 578, 0,
	488, 176, 582, 590, 535, 317, 594, 533, 532, 597,
	255, 0, 288, 180, 197, 144, 194, 128, 140, 0,
	178, 229, 262, 266, 587, 513, 522, 156, 520, 264,
	241, 307, 557, 245, 263, 202, 296, 256, 306, 318,
	319, 161, 223, 312, 292, 315, 327, 280, 133, 290,
	304, 150, 274, 0, 0, 0, 135, 302, 287, 217,
	191, 192, 134, 0, 260, 162, 174, 158, 232, 299,
	300, 157, 329, 141, 314, 137, 142, 313, 225, 295,
	303, 218, 210, 136, 301, 216, 209, 196, 168, 182,
	253, 205, 254, 183, 221, 220, 222, 0, 132, 0,
	285, 310, 330, 147, 508, 583, 293, 323, 326, 0,
	257, 148, 175, 167, 252, 173, 199, 322, 324, 325,
	146, 224, 143, 185, 281, 195, 203, 575, 609, 240,
	265, 151, 309, 282, 504, 507, 502, 503, 551, 552,
	602, 603, 604, 579, 498, 0, 505, 506, 0, 585,
	592, 593, 556, 127, 138, 200, 328, 258, 172, 311,
	489, 501, 160, 511, 0, 0, 524, 529, 530, 542,
	544, 545, 546, 547, 555, 562, 563, 565, 572, 573,
	574, 576, 581, 589, 608, 129, 130, 139, 145, 152,
	159, 166, 170, 177, 181, 184, 187, 188, 189, 193,
	208, 212, 213, 214, 215, 226, 227, 228, 231, 234,
	235, 236, 238, 239, 242, 246, 247, 248, 249, 250,
	251, 259, 261, 267, 268, 269, 270, 271, 272, 273,
	276, 277, 278, 279, 286, 289, 297, 298, 308, 316,
	320, 179, 305, 321, 0, 207, 554, 596, 584, 0,
	0, 537, 599, 510, 527, 607, 528, 531, 569, 495,
	550, 233, 525, 0, 514, 491, 521, 492, 512, 539,
	164, 543, 509, 586, 553, 598, 198, 0, 515, 244,
	571, 275, 155, 206, 204, 294, 169, 165, 163, 154,
	186, 211, 243, 291, 237, 605, 201, 560, 0, 283,
	219, 0, 0, 0, 541, 588, 548, 580, 536, 570,
	500, 559, 600, 526, 567, 601, 190, 153, 131, 230,
	284, 171, 66, 0, 0, 114, 115, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 564, 595,
	523, 566, 568, 610, 490, 561, 0, 493, 496, 606,
	591, 518, 519, 0, 0, 0, 0, 0, 0, 0,
	540, 549, 577, 534, 0, 0, 0, 0, 0, 0,
	0, 0, 516, 0, 558, 0, 0, 0, 497, 494,
	0, 0, 0, 0, 538, 0, 0, 0, 499, 0,
	517, 578, 0, 488, 176, 582, 590, 535, 317, 594,
	533, 532, 597, 255, 0, 288, 180, 197, 144, 194,
	128, 140, 0, 178, 229, 262, 266, 587, 513, 522,
	156, 520, 264, 241, 307, 557, 245, 263, 202, 296,
	256, 306, 318, 319, 161, 223, 312, 292, 315, 327,
	280, 133, 290, 304, 150, 274, 0, 0, 0, 135,
	302, 287, 217, 191, 192, 134, 0, 260, 162, 174,
	158, 232, 299, 300, 157, 329, 141, 314, 137, 142,
	313, 225, 295, 303, 218, 210, 136, 301, 216, 209,
	196, 168, 182, 253, 205, 254, 183, 221, 220, 222,
	0, 132, 0, 285, 310, 330, 147, 508, 583, 293,
	323, 326, 0, 257, 148, 175, 167, 252, 173, 199,
	322, 324, 325, 146, 224, 143, 185, 281, 195, 203,
	575, 609, 240, 265, 151, 309, 282, 504, 507, 502,
	503, 551, 552, 602, 603, 604, 579, 498, 0, 505,
	506, 0, 585, 592, 593, 556, 127, 138, 200, 328,
	258, 172, 311, 489, 501, 160, 511, 0, 0, 524,
	529, 530, 542, 544, 545, 546, 547, 555, 562, 563,
	565, 572, 573, 574, 576, 581, 589, 608, 129, 130,
	139, 145, 152, 159, 166, 170, 177, 181, 184, 187,
	188, 189, 193, 208, 212, 213, 214, 215, 226, 227,
	228, 231, 234, 235, 236, 238, 239, 242, 246, 247,
	248, 249, 250, 251, 259, 261, 267, 268, 269, 270,
	271, 272, 273, 276, 277, 278, 279, 286, 289, 297,
	298, 308, 316, 320, 179, 305, 321, 0, 207, 554,
	596, 584, 0, 0, 537, 599, 510, 527, 607, 528,
	531, 569, 495, 550, 233, 525, 0, 514, 491, 521,
	492, 512, 539, 164, 543, 509, 586, 553, 598, 198,
	0, 515, 244, 571, 275, 155, 206, 204, 294, 169,
	165, 163, 154, 186, 211, 243, 291, 237, 605, 201,
	560, 0, 283, 219, 0, 0, 0, 541, 588, 548,
	580, 536, 570, 500, 559, 600, 526, 567, 601, 190,
	153, 131, 230, 284, 171, 0, 0, 0, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 564, 595, 523, 566, 568, 610, 490, 561, 0,
	493, 496, 606, 591, 518, 519, 0, 0, 0, 0,
	0, 0, 0, 540, 549, 577, 534, 0, 0, 0,
	0, 0, 0, 1364, 0, 516, 0, 558, 0, 0,
	0, 497, 494, 0, 0, 0, 0, 538, 0, 0,
	0, 499, 0, 517, 578, 0, 488, 176, 582, 590,
	535, 317, 594, 533, 532, 597, 255, 0, 288, 180,
	197, 144, 194, 128, 140, 0, 178, 229, 262, 266,
	587, 513, 522, 156, 520, 264, 241, 307, 557, 245,
	263, 202, 296, 256, 306, 318, 319, 161, 223, 312,
	292, 315, 327, 280, 133, 290, 304, 150, 274, 0,
	0, 0, 135, 302, 287, 217, 191, 192, 134, 0,
	260, 162, 174, 158, 232, 299, 300, 157, 329, 141,
	314, 137, 142, 313, 225, 295, 303, 218, 210, 136,
	301, 216, 209, 196, 168, 182, 253, 205, 254, 183,
	221, 220, 222, 0, 132, 0, 285, 310, 330, 147,
	508, 583, 293, 323, 326, 0, 257, 148, 175, 167,
	252, 173, 199, 322, 324, 325, 146, 224, 143, 185,
	281, 195, 203, 575, 609, 240, 265, 151, 309, 282,
	504, 507, 502, 503, 551, 552, 602, 603, 604, 579,
	498, 0, 505, 506, 0, 585, 592, 593, 556, 127,
	138, 200, 328, 258, 172, 311, 489, 501, 160, 511,
	0, 0, 524, 529, 530, 542, 544, 545, 546, 547,
	555, 562, 563, 565, 572, 573, 574, 576, 581, 589,
	608, 129, 130, 139, 145, 152, 159, 166, 170, 177,
	181, 184, 187, 188, 189, 193, 208, 212, 213, 214,
	215, 226, 227, 228, 231, 234, 235, 236, 238, 239,
	242, 246, 247, 248, 249, 250, 251, 259, 261, 267,
	268, 269, 270, 271, 272, 273, 276, 277, 278, 279,
	286, 289, 297, 298, 308, 316, 320, 179, 305, 321,
	0, 207, 554, 596, 584, 0, 0, 537, 599, 510,
	527, 607, 528, 531, 569, 495, 550, 233, 525, 0,
	514, 491, 521, 492, 512, 539, 164, 543, 509, 586,
	553, 598, 198, 0, 515, 244, 571, 275, 155, 206,
	204, 294, 169, 165, 163, 154, 186, 211, 243, 291,
	237, 605, 201, 560, 0, 283, 219, 0, 0, 0,
	541, 588, 548, 580, 536, 570, 500, 559, 600, 526,
	567, 601, 190, 153, 131, 230, 284, 171, 0, 0,
	0, 114, 115, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 564, 595, 523, 566, 568, 610,
	490, 561, 0, 493, 496, 606, 591, 518, 519, 0,
	0, 0, 0, 0, 0, 0, 540, 549, 577, 534,
	0, 0, 0, 0, 0, 0, 1098, 0, 516, 0,
	558, 0, 0, 0, 497, 494, 0, 0, 0, 0,
	538, 0, 0, 0, 499, 0, 517, 578, 0, 488,
	176, 582, 590, 535, 317, 594, 533, 532, 597, 255,
	0, 288, 180, 197, 144, 194, 128, 140, 0, 178,
	229, 262, 266, 587, 513, 522, 156, 520, 264, 241,
	307, 557, 245, 263, 202, 296, 256, 306, 318, 319,
	161, 223, 312, 292, 315, 327, 280, 133, 290, 304,
	150, 274, 0, 0, 0, 135, 302, 287, 217, 191,
	192, 134, 0, 260, 162, 174, 158, 232, 299, 300,
	157, 329, 141, 314, 137, 142, 313, 225, 295, 303,
	218, 210, 136, 301, 216, 209, 196, 168, 182, 253,
	205, 254, 183, 221, 220, 222, 0, 132, 0, 285,
	310, 330, 147, 508, 583, 293, 323, 326, 0, 257,
	148, 175, 167, 252, 173, 199, 322, 324, 325, 146,
	224, 143, 185, 281, 195, 203, 575, 609, 240, 265,
	151, 309, 282, 504, 507, 502, 503, 551, 552, 602,
	603, 604, 579, 498, 0, 505, 506, 0, 585, 592,
	593, 556, 127, 138, 200, 328, 258, 172, 311, 489,
	501, 160, 511, 0, 0, 524, 529, 530, 542, 544,
	545, 546, 547, 555, 562, 563, 565, 572, 573, 574,
	576, 581, 589, 608, 129, 130, 139, 145, 152, 159,
	166, 170, 177, 181, 184, 187, 188, 189, 193, 208,
	212, 213, 214, 215, 226, 227, 228, 231, 234, 235,
	236, 238, 239, 242, 246, 247, 248, 249, 250, 251,
	259, 261, 267, 268, 269, 270, 271, 272, 273, 276,
	277, 278, 279, 286, 289, 297, 298, 308, 316, 320,
	179, 305, 321, 0, 207, 554, 596, 584, 0, 0,
	537, 599, 510, 527, 607, 528, 531, 569, 495, 550,
	233, 525, 0, 514, 491, 521, 492, 512, 539, 164,
	543, 509, 586, 553, 598, 198, 0, 515, 244, 571,
	275, 155, 206, 204, 294, 169, 165, 163, 154, 186,
	211, 243, 291, 237, 605, 201, 560, 0, 283, 219,
	0, 0, 0, 541, 588, 548, 580, 536, 570, 500,
	559, 600, 526, 567, 601, 190, 153, 131, 230, 284,
	171, 0, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 564, 595, 523,
	566, 568, 610, 490, 561, 0, 493, 496, 606, 591,
	518, 519, 0, 0, 0, 0, 0, 0, 0, 540,
	549, 577, 534, 0, 0, 0, 0, 0, 0, 0,
	0, 516, 0, 558, 0, 0, 0, 497, 494, 0,
	0, 0, 0, 538, 0, 0, 0, 499, 0, 517,
	578, 0, 488, 176, 582, 590, 535, 317, 594, 533,
	532, 597, 255, 0, 288, 180, 197, 144, 194, 128,
	140, 0, 178, 229, 262, 266, 587, 513, 522, 156,
	520, 264, 241, 307, 557, 245, 263, 202, 296, 256,
	306, 318, 319, 161, 223, 312, 292, 315, 327, 280,
	133, 290, 304, 150, 274, 0, 0, 0, 135, 302,
	287, 217, 191, 192, 134, 0, 260, 162, 174, 158,
	232, 299, 300, 157, 329, 141, 314, 137, 142, 313,
	225, 295, 303, 218, 210, 136, 301, 216, 209, 196,
	168, 182, 253, 205, 254, 183, 221, 220, 222, 0,
	132, 0, 285, 310, 330, 147, 508, 583, 293, 323,
	326, 0, 257, 148, 175, 167, 252, 173, 199, 322,
	324, 325, 146, 224, 143, 185, 281, 195, 203, 575,
	609, 240, 265, 151, 309, 282, 504, 507, 502, 503,
	551, 552, 602, 603, 604, 579, 498, 0, 505, 506,
	0, 585, 592, 593, 556, 127, 138, 200, 328, 258,
	172, 311, 489, 501, 160, 511, 0, 0, 524, 529,
	530, 542, 544, 545, 546, 547, 555, 562, 563, 565,
	572, 573, 574, 576, 581, 589, 608, 129, 130, 139,
	145, 152, 159, 166, 170, 177, 181, 184, 187, 188,
	189, 193, 208, 212, 213, 214, 215, 226, 227, 228,
	231, 234, 235, 236, 238, 239, 242, 246, 247, 248,
	249, 250, 251, 259, 261, 267, 268, 269, 270, 271,
	272, 273, 276, 277, 278, 279, 286, 289, 297, 298,
	308, 316, 320, 179, 305, 321, 0, 207, 554, 596,
	584, 0, 0, 537, 599, 510, 527, 607, 528, 531,
	569, 495, 550, 233, 525, 0, 514, 491, 521, 492,
	512, 539, 164, 543, 509, 586, 553, 598, 198, 0,
	515, 244, 571, 275, 155, 206, 204, 294, 169, 165,
	163, 154, 186, 211, 243, 291, 237, 605, 201, 560,
	0, 283, 219, 0, 0, 0, 541, 588, 548, 580,
	536, 570, 500, 559, 600, 526, 567, 601, 190, 153,
	131, 230, 284, 171, 0, 0, 0, 114, 115, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 0,
	564, 595, 523, 566, 568, 610, 490, 561, 0, 493,
	496, 606, 591, 518, 519, 0, 0, 0, 0, 0,
	0, 0, 540, 549, 577, 534, 0, 0, 0, 0,
	0, 0, 0, 0, 516, 0, 558, 0, 0, 0,
	497, 494, 0, 0, 0, 0, 538, 0, 0, 0,
	499, 0, 517, 578, 0, 488, 176, 582, 590, 535,
	317, 594, 533, 532, 597, 255, 0, 288, 180, 197,
	144, 194, 128, 140, 0, 178, 229, 262, 266, 587,
	513, 522, 156, 520, 264, 241, 307, 557, 245, 263,
	202, 296, 256, 306, 318, 319, 161, 223, 312, 292,
	315, 327, 280, 133, 290, 304, 150, 274, 0, 0,
	0, 135, 302, 287, 217, 191, 192, 134, 0, 260,
	162, 174, 158, 232, 299, 300, 157, 329, 141, 314,
	137, 486, 313, 225, 295, 303, 218, 210, 136, 301,
	216, 209, 196, 168, 182, 253, 205, 254, 183, 221,
	220, 222, 0, 132, 0, 285, 310, 330, 147, 508,
	583, 293, 323, 326, 0, 257, 148, 175, 167, 252,
	173, 199, 322, 324, 325, 146, 487, 485, 480, 479,
	195, 203, 575, 609, 240, 265, 151, 309, 282, 504,
	507, 502, 503, 551, 552, 602, 603, 604, 579, 498,
	0, 505, 506, 0, 585, 592, 593, 556, 127, 138,
	200, 328, 258, 172, 311, 489, 501, 160, 511, 0,
	0, 524, 529, 530, 542, 544, 545, 546, 547, 555,
	562, 563, 565, 572, 573, 574, 576, 581, 589, 608,
	129, 130, 139, 145, 152, 159, 166, 170, 177, 181,
	184, 187, 188, 189, 193, 208, 212, 213, 214, 215,
	226, 227, 228, 231, 234, 235, 236, 238, 239, 242,
	246, 247, 248, 249, 250, 251, 259, 261, 267, 268,
	269, 270, 271, 272, 273, 276, 277, 278, 279, 286,
	289, 297, 298, 308, 316, 320, 179, 305, 321, 0,
	207, 554, 596, 584, 0, 0, 537, 599, 510, 527,
	607, 528, 531, 569, 495, 550, 233, 525, 0, 514,
	491, 521, 492, 512, 539, 164, 543, 509, 586, 553,
	598, 198, 0, 515, 244, 571, 275, 155, 206, 204,
	294, 169, 165, 163, 154, 186, 211, 243, 291, 237,
	605, 201, 560, 0, 283, 219, 0, 0, 0, 541,
	588, 548, 580, 536, 570, 500, 559, 600, 526, 567,
	601, 190, 153, 131, 230, 284, 171, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 564, 595, 523, 566, 568, 610, 490,
	561, 0, 493, 496, 606, 591, 518, 519, 0, 0,
	0, 0, 0, 0, 0, 540, 549, 577, 534, 0,
	0, 0, 0, 0, 0, 0, 0, 516, 0, 558,
	0, 0, 0, 497, 494, 0, 0, 0, 0, 538,
	0, 0, 0, 499, 0, 517, 578, 0, 488, 176,
	582, 590, 535, 317, 594, 533, 532, 597, 255, 0,
	288, 180, 197, 144, 194, 128, 140, 0, 178, 229,
	262, 266, 587, 513, 522, 156, 520, 264, 241, 307,
	557, 245, 263, 202, 296, 256, 306, 318, 319, 161,
	223, 312, 292, 315, 327, 280, 133, 290, 837, 150,
	274, 0, 0, 0, 135, 302, 287, 217, 191, 192,
	134, 0, 260, 162, 174, 158, 232, 299, 300, 157,
	329, 141, 314, 137, 486, 313, 225, 295, 303, 218,
	210, 136, 301, 216, 209, 196, 168, 182, 253, 205,
	254, 183, 221, 220, 222, 0, 132, 0, 285, 310,
	330, 147, 508, 583, 293, 323, 326, 0, 257, 148,
	175, 167, 252, 173, 199, 322, 324, 325, 146, 487,
	485, 480, 479, 195, 203, 575, 609, 240, 265, 151,
	309, 282, 504, 507, 502, 503, 551, 552, 602, 603,
	604, 579, 498, 0, 505, 506, 0, 585, 592, 593,
	556, 127, 138, 200, 328, 258, 172, 311, 489, 501,
	160, 511, 0, 0, 524, 529, 530, 542, 544, 545,
	546, 547, 555, 562, 563, 565, 572, 573, 574, 576,
	581, 589, 608, 129, 130, 139, 145, 152, 159, 166,
	170, 177, 181, 184, 187, 188, 189, 193, 208, 212,
	213, 214, 215, 226, 227, 228, 231, 234, 235, 236,
	238, 239, 242, 246, 247, 248, 249, 250, 251, 259,
	261, 267, 268, 269, 270, 271, 272, 273, 276, 277,
	278, 279, 286, 289, 297, 298, 308, 316, 320, 179,
	305, 321, 0, 207, 554, 596, 584, 0, 0, 537,
	599, 510, 527, 607, 528, 531, 569, 495, 550, 233,
	525, 0, 514, 491, 521, 492, 512, 539, 164, 543,
	509, 586, 553, 598, 198, 0, 515, 244, 571, 275,
	155, 206, 204, 294, 169, 165, 163, 154, 186, 211,
	243, 291, 237, 605, 201, 560, 0, 283, 219, 0,
	0, 0, 541, 588, 548, 580, 536, 570, 500, 559,
	600, 526, 567, 601, 190, 153, 131, 230, 284, 171,
	0, 0, 0, 114, 115, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 564, 595, 523, 566,
	568, 610, 490, 561, 0, 493, 496, 606, 591, 518,
	519, 0, 0, 0, 0, 0, 0, 0, 540, 549,
	577, 534, 0, 0, 0, 0, 0, 0, 0, 0,
	516, 0, 558, 0, 0, 0, 497, 494, 0, 0,
	0, 0, 538, 0, 0, 0, 499, 0, 517, 578,
	0, 488, 176, 582, 590, 535, 317, 594, 533, 532,
	597, 255, 0, 288, 180, 197, 144, 194, 128, 140,
	0, 178, 229, 262, 266, 587, 513, 522, 156, 520,
	264, 241, 307, 557, 245, 263, 202, 296, 256, 306,
	318, 319, 161, 223, 312, 292, 315, 327, 280, 133,
	290, 477, 150, 274, 0, 0, 0, 135, 302, 287,
	217, 191, 192, 134, 0, 260, 162, 174, 158, 232,
	299, 300, 157, 329, 141, 314, 137, 486, 313, 225,
	295, 303, 218, 210, 136, 301, 216, 209, 196, 168,
	182, 253, 205, 254, 183, 221, 220, 222, 0, 132,
	0, 285, 310, 330, 147, 508, 583, 293, 323, 326,
	0, 257, 148, 175, 167, 252, 173, 199, 322, 324,
	325, 146, 487, 485, 480, 479, 195, 203, 575, 609,
	240, 265, 151, 309, 282, 504, 507, 502, 503, 551,
	552, 602, 603, 604, 579, 498, 0, 505, 506, 0,
	585, 592, 593, 556, 127, 138, 200, 328, 258, 172,
	311, 489, 501, 160, 511, 0, 0, 524, 529, 530,
	542, 544, 545, 546, 547, 555, 562, 563, 565, 572,
	573, 574, 576, 581, 589, 608, 129, 130, 139, 145,
	152, 159, 166, 170, 177, 181, 184, 187, 188, 189,
	193, 208, 212, 213, 214, 215, 226, 227, 228, 231,
	234, 235, 236, 238, 239, 242, 246, 247, 248, 249,
	250, 251, 259, 261, 267, 268, 269, 270, 271, 272,
	273, 276, 277, 278, 279, 286, 289, 297, 298, 308,
	316, 320, 179, 305, 321, 233, 207, 554, 1025, 0,
	381, 0, 0, 0, 164, 0, 380, 0, 0, 0,
	198, 0, 1026, 244, 0, 275, 155, 206, 204, 294,
	169, 165, 163, 154, 186, 211, 243, 291, 237, 424,
	201, 0, 0, 283, 219, 0, 0, 0, 0, 0,
	415, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 153, 131, 230, 284, 171, 66, 0, 0, 114,
	115, 116, 402, 401, 404, 405, 406, 407, 0, 0,
	149, 403, 408, 409, 410, 0, 0, 0, 0, 378,
	395, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 467, 0, 0, 0, 438, 0,
	394, 0, 0, 387, 388, 390, 389, 391, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 437,
	0, 0, 317, 0, 0, 435, 0, 255, 0, 288,
	180, 197, 144, 194, 128, 140, 0, 178, 229, 262,
	266, 0, 0, 0, 156, 0, 264, 241, 307, 0,
	245, 263, 202, 296, 256, 306, 318, 319, 161, 223,
	312, 292, 315, 327, 280, 133, 290, 304, 150, 274,
	0, 0, 0, 135, 302, 287, 217, 191, 192, 134,
	0, 260, 162, 174, 158, 232, 299, 300, 157, 329,
	141, 314, 137, 142, 313, 225, 295, 303, 218, 210,
	136, 301, 216, 209, 196, 168, 182, 253, 205, 254,
	183, 221, 220, 222, 0, 132, 0, 285, 310, 330,
	147, 0, 0, 293, 323, 326, 0, 257, 148, 175,
	167, 252, 173, 199, 322, 324, 325, 146, 224, 143,
	185, 281, 195, 203, 0, 0, 240, 265, 151, 309,
	282, 425, 436, 431, 432, 429, 430, 428, 427, 426,
	439, 417, 418, 419, 420, 422, 0, 433, 434, 421,
	127, 138, 200, 328, 258, 172, 311, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 145, 152, 159, 166, 170,
	177, 181, 184, 187, 188, 189, 193, 208, 212, 213,
	214, 215, 226, 227, 228, 231, 234, 235, 236, 238,
	239, 242, 246, 247, 248, 249, 250, 251, 259, 261,
	267, 268, 269, 270, 271, 272, 273, 276, 277, 278,
	279, 286, 289, 297, 298, 308, 316, 320, 179, 305,
	321, 233, 207, 0, 0, 0, 381, 0, 0, 0,
	164, 0, 380, 0, 0, 0, 198, 0, 0, 244,
	0, 275, 155, 206, 204, 294, 169, 165, 163, 154,
	186, 211, 243, 291, 237, 424, 201, 0, 0, 283,
	219, 0, 0, 0, 0, 0, 415, 416, 0, 0,
	0, 0, 0, 0, 1137, 0, 190, 153, 131, 230,
	284, 171, 66, 0, 0, 114, 115, 116, 402, 401,
	404, 405, 406, 407, 0, 0, 149, 403, 408, 409,
	410, 1138, 0, 0, 0, 378, 395, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 392, 393,
	0, 0, 0, 0, 438, 0, 394, 0, 0, 387,
	388, 390, 389, 391, 396, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 437, 0, 0, 317, 0,
	0, 435, 0, 255, 0, 288, 180, 197, 144, 194,
	128, 140, 0, 178, 229, 262, 266, 0, 0, 0,
	156, 0, 264, 241, 307, 0, 245, 263, 202, 296,
	256, 306, 318, 319, 161, 223, 312, 292, 315, 327,
	280, 133, 290, 304, 150, 274, 0, 0, 0, 135,
	302, 287, 217, 191, 192, 134, 0, 260, 162, 174,
	158, 232, 299, 300, 157, 329, 141, 314, 137, 142,
	313, 225, 295, 303, 218, 210, 136, 301, 216, 209,
	196, 168, 182, 253, 205, 254, 183, 221, 220, 222,
	0, 132, 0, 285, 310, 330, 147, 0, 0, 293,
	323, 326, 0, 257, 148, 175, 167, 252, 173, 199,
	322, 324, 325, 146, 224, 143, 185, 281, 195, 203,
	0, 0, 240, 265, 151, 309, 282, 425, 436, 431,
	432, 429, 430, 428, 427, 426, 439, 417, 418, 419,
	420, 422, 0, 433, 434, 421, 127, 138, 200, 328,
	258, 172, 311, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 145, 152, 159, 166, 170, 177, 181, 184, 187,
	188, 189, 193, 208, 212, 213, 214, 215, 226, 227,
	228, 231, 234, 235, 236, 238, 239, 242, 246, 247,
	248, 249, 250, 251, 259, 261, 267, 268, 269, 270,
	271, 272, 273, 276, 277, 278, 279, 286, 289, 297,
	298, 308, 316, 320, 179, 305, 321, 233, 207, 0,
	0, 0, 381, 0, 0, 0, 164, 0, 380, 0,
	0, 0, 198, 0, 0, 244, 0, 275, 155, 206,
	204, 294, 169, 165, 163, 154, 186, 211, 243, 291,
	237, 424, 201, 0, 0, 283, 219, 0, 0, 0,
	0, 0, 415, 416, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 153, 131, 230, 284, 171, 66, 0,
	455, 114, 115, 116, 402, 401, 404, 405, 406, 407,
	0, 0, 149, 403, 408, 409, 410, 0, 0, 0,
	0, 378, 395, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 392, 393, 0, 0, 0, 0,
	438, 0, 394, 0, 0, 387, 388, 390, 389, 391,
	396, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 437, 0, 0, 317, 0, 0, 435, 0, 255,
	0, 288, 180, 197, 144, 194, 128, 140, 0, 178,
	229, 262, 266, 0, 0, 0, 156, 0, 264, 241,
	307, 0, 245, 263, 202, 296, 256, 306, 318, 319,
	161, 223, 312, 292, 315, 327, 280, 133, 290, 304,
	150, 274, 0, 0, 0, 135, 302, 287, 217, 191,
	192, 134, 0, 260, 162, 174, 158, 232, 299, 300,
	157, 329, 141, 314, 137, 142, 313, 225, 295, 303,
	218, 210, 136, 301, 216, 209, 196, 168, 182, 253,
	205, 254, 183, 221, 220, 222, 0, 132, 0, 285,
	310, 330, 147, 0, 0, 293, 323, 326, 0, 257,
	148, 175, 167, 252, 173, 199, 322, 324, 325, 146,
	224, 143, 185, 281, 195, 203, 0, 0, 240, 265,
	151, 309, 282, 425, 436, 431, 432, 429, 430, 428,
	427, 426, 439, 417, 418, 419, 420, 422, 0, 433,
	434, 421, 127, 138, 200, 328, 258, 172, 311, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 145, 152, 159,
	166, 170, 177, 181, 184, 187, 188, 189, 193, 208,
	212, 213, 214, 215, 226, 227, 228, 231, 234, 235,
	236, 238, 239, 242, 246, 247, 248, 249, 250, 251,
	259, 261, 267, 268, 269, 270, 271, 272, 273, 276,
	277, 278, 279, 286, 289, 297, 298, 308, 316, 320,
	179, 305, 321, 233, 207, 0, 0, 0, 381, 0,
	0, 0, 164, 0, 380, 0, 0, 0, 198, 0,
	0, 244, 0, 275, 155, 206, 204, 294, 169, 165,
	163, 154, 186, 211, 243, 291, 237, 424, 201, 0,
	0, 283, 219, 0, 0, 0, 0, 0, 415, 416,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 153,
	131, 230, 284, 171, 66, 0, 0, 114, 115, 116,
	402, 401, 404, 405, 406, 407, 0, 0, 149, 403,
	408, 409, 410, 0, 0, 0, 0, 378, 395, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	392, 393, 467, 0, 0, 0, 438, 0, 394, 0,
	0, 387, 388, 390, 389, 391, 396, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 437, 0, 0,
	317, 0, 0, 435, 0, 255, 0, 288, 180, 197,
	144, 194, 128, 140, 0, 178, 229, 262, 266, 0,
	0, 0, 156, 0, 264, 241, 307, 0, 245, 263,
	202, 296, 256, 306, 318, 319, 161, 223, 312, 292,
	315, 327, 280, 133, 290, 304, 150, 274, 0, 0,
	0, 135, 302, 287, 217, 191, 192, 134, 0, 260,
	162, 174, 158, 232, 299, 300, 157, 329, 141, 314,
	137, 142, 313, 225, 295, 303, 218, 210, 136, 301,
	216, 209, 196, 168, 182, 253, 205, 254, 183, 221,
	220, 222, 0, 132, 0, 285, 310, 330, 147, 0,
	0, 293, 323, 326, 0, 257, 148, 175, 167, 252,
	173, 199, 322, 324, 325, 146, 224, 143, 185, 281,
	195, 203, 0, 0, 240, 265, 151, 309, 282, 425,
	436, 431, 432, 429, 430, 428, 427, 426, 439, 417,
	418, 419, 420, 422, 0, 433, 434, 421, 127, 138,
	200, 328, 258, 172, 311, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 130, 139, 145, 152, 159, 166, 170, 177, 181,
	184, 187, 188, 189, 193, 208, 212, 213, 214, 215,
	226, 227, 228, 231, 234, 235, 236, 238, 239, 242,
	246, 247, 248, 249, 250, 251, 259, 261, 267, 268,
	269, 270, 271, 272, 273, 276, 277, 278, 279, 286,
	289, 297, 298, 308, 316, 320, 179, 305, 321, 233,
	207, 0, 0, 0, 381, 0, 0, 0, 164, 0,
	380, 0, 0, 0, 198, 0, 0, 244, 0, 275,
	155, 206, 204, 294, 169, 165, 163, 154, 186, 211,
	243, 291, 237, 424, 201, 0, 0, 283, 219, 0,
	0, 0, 0, 0, 415, 416, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 153, 131, 230, 284, 171,
	66, 0, 0, 114, 115, 116, 402, 1043, 404, 405,
	406, 407, 0, 0, 149, 403, 408, 409, 410, 0,
	0, 0, 0, 378, 395, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 392, 393, 467, 0,
	0, 0, 438, 0, 394, 0, 0, 387, 388, 390,
	389, 391, 396, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 176, 437, 0, 0, 317, 0, 0, 435,
	0, 255, 0, 288, 180, 197, 144, 194, 128, 140,
	0, 178, 229, 262, 266, 0, 0, 0, 156, 0,
	264, 241, 307, 0, 245, 263, 202, 296, 256, 306,
	318, 319, 161, 223, 312, 292, 315, 327, 280, 133,
	290, 304, 150, 274, 0, 0, 0, 135, 302, 287,
	217, 191, 192, 134, 0, 260, 162, 174, 158, 232,
	299, 300, 157, 329, 141, 314, 137, 142, 313, 225,
	295, 303, 218, 210, 136, 301, 216, 209, 196, 168,
	182, 253, 205, 254, 183, 221, 220, 222, 0, 132,
	0, 285, 310, 330, 147, 0, 0, 293, 323, 326,
	0, 257, 148, 175, 167, 252, 173, 199, 322, 324,
	325, 146, 224, 143, 185, 281, 195, 203, 0, 0,
	240, 265, 151, 309, 282, 425, 436, 431, 432, 429,
	430, 428, 427, 426, 439, 417, 418, 419, 420, 422,
	0, 433, 434, 421, 127, 138, 200, 328, 258, 172,
	311, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 145,
	152, 159, 166, 170, 177, 181, 184, 187, 188, 189,
	193, 208, 212, 213, 214, 215, 226, 227, 228, 231,
	234, 235, 236, 238, 239, 242, 246, 247, 248, 249,
	250, 251, 259, 261, 267, 268, 269, 270, 271, 272,
	273, 276, 277, 278, 279, 286, 289, 297, 298, 308,
	316, 320, 179, 305, 321, 233, 207, 0, 0, 0,
	381, 0, 0, 0, 164, 0, 380, 0, 0, 0,
	198, 0, 0, 244, 0, 275, 155, 206, 204, 294,
	169, 165, 163, 154, 186, 211, 243, 291, 237, 424,
	201, 0, 0, 283, 219, 0, 0, 0, 0, 0,
	415, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 153, 131, 230, 284, 171, 66, 0, 0, 114,
	115, 116, 402, 1040, 404, 405, 406, 407, 0, 0,
	149, 403, 408, 409, 410, 0, 0, 0, 0, 378,
	395, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 392, 393, 467, 0, 0, 0, 438, 0,
	394, 0, 0, 387, 388, 390, 389, 391, 396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 437,
	0, 0, 317, 0, 0, 435, 0, 255, 0, 288,
	180, 197, 144, 194, 128, 140, 0, 178, 229, 262,
	266, 0, 0, 0, 156, 0, 264, 241, 307, 0,
	245, 263, 202, 296, 256, 306, 318, 319, 161, 223,
	312, 292, 315, 327, 280, 133, 290, 304, 150, 274,
	0, 0, 0, 135, 302, 287, 217, 191, 192, 134,
	0, 260, 162, 174, 158, 232, 299, 300, 157, 329,
	141, 314, 137, 142, 313, 225, 295, 303, 218, 210,
	136, 301, 216, 209, 196, 168, 182, 253, 205, 254,
	183, 221, 220, 222, 0, 132, 0, 285, 310, 330,
	147, 0, 0, 293, 323, 326, 0, 257, 148, 175,
	167, 252, 173, 199, 322, 324, 325, 146, 224, 143,
	185, 281, 195, 203, 0, 0, 240, 265, 151, 309,
	282, 425, 436, 431, 432, 429, 430, 428, 427, 426,
	439, 417, 418, 419, 420, 422, 0, 433, 434, 421,
	127, 138, 200, 328, 258, 172, 311, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 145, 152, 159, 166, 170,
	177, 181, 184, 187, 188, 189, 193, 208, 212, 213,
	214, 215, 226, 227, 228, 231, 234, 235, 236, 238,
	239, 242, 246, 247, 248, 249, 250, 251, 259, 261,
	267, 268, 269, 270, 271, 272, 273, 276, 277, 278,
	279, 286, 289, 297, 298, 308, 316, 320, 179, 305,
	321, 448, 207, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 381,
	0, 0, 0, 164, 0, 380, 0, 0, 0, 198,
	0, 0, 244, 0, 275, 155, 206, 204, 294, 169,
	165, 163, 154, 186, 211, 243, 291, 237, 424, 201,
	0, 0, 283, 219, 0, 0, 0, 0, 0, 415,
	416, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	153, 131, 230, 284, 171, 66, 0, 0, 114, 115,
	116, 402, 401, 404, 405, 406, 407, 0, 0, 149,
	403, 408, 409, 410, 0, 0, 0, 0, 378, 395,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 392, 393, 0, 0, 0, 0, 438, 0, 394,
	0, 0, 387, 388, 390, 389, 391, 396, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 437, 0,
	0, 317, 0, 0, 435, 0, 255, 0, 288, 180,
	197, 144, 194, 128, 140, 0, 178, 229, 262, 266,
	0, 0, 0, 156, 0, 264, 241, 307, 0, 245,
	263, 202, 296, 256, 306, 318, 319, 161, 223, 312,
	292, 315, 327, 280, 133, 290, 304, 150, 274, 0,
	0, 0, 135, 302, 287, 217, 191, 192, 134, 0,
	260, 162, 174, 158, 232, 299, 300, 157, 329, 141,
	314, 137, 142, 313, 225, 295, 303, 218, 210, 136,
	301, 216, 209, 196, 168, 182, 253, 205, 254, 183,
	221, 220, 222, 0, 132, 0, 285, 310, 330, 147,
	0, 0, 293, 323, 326, 0, 257, 148, 175, 167,
	252, 173, 199, 322, 324, 325, 146, 224, 143, 185,
	281, 195, 203, 0, 0, 240, 265, 151, 309, 282,
	425, 436, 431, 432, 429, 430, 428, 427, 426, 439,
	417, 418, 419, 420, 422, 0, 433, 434, 421, 127,
	138, 200, 328, 258, 172, 311, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 145, 152, 159, 166, 170, 177,
	181, 184, 187, 188, 189, 193, 208, 212, 213, 214,
	215, 226, 227, 228, 231, 234, 235, 236, 238, 239,
	242, 246, 247, 248, 249, 250, 251, 259, 261, 267,
	268, 269, 270, 271, 272, 273, 276, 277, 278, 279,
	286, 289, 297, 298, 308, 316, 320, 179, 305, 321,
	233, 207, 0, 0, 0, 381, 0, 0, 0, 164,
	0, 380, 0, 0, 0, 198, 0, 0, 244, 0,
	275, 155, 206, 204, 294, 169, 165, 163, 154, 186,
	211, 243, 291, 237, 424, 201, 0, 0, 283, 219,
	0, 0, 0, 0, 0, 415, 416, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 153, 131, 230, 284,
	171, 66, 0, 0, 114, 115, 116, 402, 401, 404,
	405, 406, 407, 0, 0, 149, 403, 408, 409, 410,
	0, 0, 0, 0, 378, 395, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 392, 393, 0,
	0, 0, 0, 438, 0, 394, 0, 0, 387, 388,
	390, 389, 391, 396, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 437, 0, 0, 317, 0, 0,
	435, 0, 255, 0, 288, 180, 197, 144, 194, 128,
	140, 0, 178, 229, 262, 266, 0, 0, 0, 156,
	0, 264, 241, 307, 0, 245, 263, 202, 296, 256,
	306, 318, 319, 161, 223, 312, 292, 315, 327, 280,
	133, 290, 304, 150, 274, 0, 0, 0, 135, 302,
	287, 217, 191, 192, 134, 0, 260, 162, 174, 158,
	232, 299, 300, 157, 329, 141, 314, 137, 142, 313,
	225, 295, 303, 218, 210, 136, 301, 216, 209, 196,
	168, 182, 253, 205, 254, 183, 221, 220, 222, 0,
	132, 0, 285, 310, 330, 147, 0, 0, 293, 323,
	326, 0, 257, 148, 175, 167, 252, 173, 199, 322,
	324, 325, 146, 224, 143, 185, 281, 195, 203, 0,
	0, 240, 265, 151, 309, 282, 425, 436, 431, 432,
	429, 430, 428, 427, 426, 439, 417, 418, 419, 420,
	422, 0, 433, 434, 421, 127, 138, 200, 328, 258,
	172, 311, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	145, 152, 159, 166, 170, 177, 181, 184, 187, 188,
	189, 193, 208, 212, 213, 214, 215, 226, 227, 228,
	231, 234, 235, 236, 238, 239, 242, 246, 247, 248,
	249, 250, 251, 259, 261, 267, 268, 269, 270, 271,
	272, 273, 276, 277, 278, 279, 286, 289, 297, 298,
	308, 316, 320, 179, 305, 321, 233, 207, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 198, 0, 0, 244, 0, 275, 155, 206, 204,
	294, 169, 165, 163, 154, 186, 211, 243, 291, 237,
	424, 201, 0, 0, 283, 219, 0, 0, 0, 0,
	0, 415, 416, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 153, 131, 230, 284, 171, 66, 0, 0,
	114, 115, 116, 402, 401, 404, 405, 406, 407, 0,
	0, 149, 403, 408, 409, 410, 0, 0, 0, 0,
	0, 395, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 392, 393, 0, 0, 0, 0, 438,
	0, 394, 0, 0, 387, 388, 390, 389, 391, 396,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	437, 0, 0, 317, 0, 0, 435, 0, 255, 0,
	288, 180, 197, 144, 194, 128, 140, 0, 178, 229,
	262, 266, 0, 0, 0, 156, 0, 264, 241, 307,
	1784, 245, 263, 202, 296, 256, 306, 318, 319, 161,
	223, 312, 292, 315, 327, 280, 133, 290, 304, 150,
	274, 0, 0, 0, 135, 302, 287, 217, 191, 192,
	134, 0, 260, 162, 174, 158, 232, 299, 300, 157,
	329, 141, 314, 137, 142, 313, 225, 295, 303, 218,
	210, 136, 301, 216, 209, 196, 168, 182, 253, 205,
	254, 183, 221, 220, 222, 0, 132, 0, 285, 310,
	330, 147, 0, 0, 293, 323, 326, 0, 257, 148,
	175, 167, 252, 173, 199, 322, 324, 325, 146, 224,
	143, 185, 281, 195, 203, 0, 0, 240, 265, 151,
	309, 282, 425, 436, 431, 432, 429, 430, 428, 427,
	426, 439, 417, 418, 419, 420, 422, 0, 433, 434,
	421, 127, 138, 200, 328, 258, 172, 311, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 145, 152, 159, 166,
	170, 177, 181, 184, 187, 188, 189, 193, 208, 212,
	213, 214, 215, 226, 227, 228, 231, 234, 235, 236,
	238, 239, 242, 246, 247, 248, 249, 250, 251, 259,
	261, 267, 268, 269, 270, 271, 272, 273, 276, 277,
	278, 279, 286, 289, 297, 298, 308, 316, 320, 179,
	305, 321, 233, 207, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 198, 0, 0,
	244, 0, 275, 155, 206, 204, 294, 169, 165, 163,
	154, 186, 211, 243, 291, 237, 424, 201, 0, 0,
	283, 219, 0, 0, 0, 0, 0, 415, 416, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 153, 131,
	230, 284, 171, 66, 0, 455, 114, 115, 116, 402,
	401, 404, 405, 406, 407, 0, 0, 149, 403, 408,
	409, 410, 0, 0, 0, 0, 0, 395, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 392,
	393, 0, 0, 0, 0, 438, 0, 394, 0, 0,
	387, 388, 390, 389, 391, 396, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 437, 0, 0, 317,
	0, 0, 435, 0, 255, 0, 288, 180, 197, 144,
	194, 128, 140, 0, 178, 229, 262, 266, 0, 0,
	0, 156, 0, 264, 241, 307, 0, 245, 263, 202,
	296, 256, 306, 318, 319, 161, 223, 312, 292, 315,
	327, 280, 133, 290, 304, 150, 274, 0, 0, 0,
	135, 302, 287, 217, 191, 192, 134, 0, 260, 162,
	174, 158, 232, 299, 300, 157, 329, 141, 314, 137,
	142, 313, 225, 295, 303, 218, 210, 136, 301, 216,
	209, 196, 168, 182, 253, 205, 254, 183, 221, 220,
	222, 0, 132, 0, 285, 310, 330, 147, 0, 0,
	293, 323, 326, 0, 257, 148, 175, 167, 252, 173,
	199, 322, 324, 325, 146, 224, 143, 185, 281, 195,
	203, 0, 0, 240, 265, 151, 309, 282, 425, 436,
	431, 432, 429, 430, 428, 427, 426, 439, 417, 418,
	419, 420, 422, 0, 433, 434, 421, 127, 138, 200,
	328, 258, 172, 311, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 145, 152, 159, 166, 170, 177, 181, 184,
	187, 188, 189, 193, 208, 212, 213, 214, 215, 226,
	227, 228, 231, 234, 235, 236, 238, 239, 242, 246,
	247, 248, 249, 250, 251, 259, 261, 267, 268, 269,
	270, 271, 272, 273, 276, 277, 278, 279, 286, 289,
	297, 298, 308, 316, 320, 179, 305, 321, 233, 207,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 198, 0, 0, 244, 0, 275, 155,
	206, 204, 294, 169, 165, 163, 154, 186, 211, 243,
	291, 237, 424, 201, 0, 0, 283, 219, 0, 0,
	0, 0, 0, 415, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 153, 131, 230, 284, 171, 66,
	0, 0, 114, 115, 116, 402, 401, 404, 405, 406,
	407, 0, 0, 149, 403, 408, 409, 410, 0, 0,
	0, 0, 0, 395, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 392, 393, 0, 0, 0,
	0, 438, 0, 394, 0, 0, 387, 388, 390, 389,
	391, 396, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 437, 0, 0, 317, 0, 0, 435, 0,
	255, 0, 288, 180, 197, 144, 194, 128, 140, 0,
	178, 229, 262, 266, 0, 0, 0, 156, 0, 264,
	241, 307, 0, 245, 263, 202, 296, 256, 306, 318,
	319, 161, 223, 312, 292, 315, 327, 280, 133, 290,
	304, 150, 274, 0, 0, 0, 135, 302, 287, 217,
	191, 192, 134, 0, 260, 162, 174, 158, 232, 299,
	300, 157, 329, 141, 314, 137, 142, 313, 225, 295,
	303, 218, 210, 136, 301, 216, 209, 196, 168, 182,
	253, 205, 254, 183, 221, 220, 222, 0, 132, 0,
	285, 310, 330, 147, 0, 0, 293, 323, 326, 0,
	257, 148, 175, 167, 252, 173, 199, 322, 324, 325,
	146, 224, 143, 185, 281, 195, 203, 0, 0, 240,
	265, 151, 309, 282, 425, 436, 431, 432, 429, 430,
	428, 427, 426, 439, 417, 418, 419, 420, 422, 0,
	433, 434, 421, 127, 138, 200, 328, 258, 172, 311,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 130, 139, 145, 152,
	159, 166, 170, 177, 181, 184, 187, 188, 189, 193,
	208, 212, 213, 214, 215, 226, 227, 228, 231, 234,
	235, 236, 238, 239, 242, 246, 247, 248, 249, 250,
	251, 259, 261, 267, 268, 269, 270, 271, 272, 273,
	276, 277, 278, 279, 286, 289, 297, 298, 308, 316,
	320, 179, 305, 321, 233, 207, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 198,
	0, 0, 244, 0, 275, 155, 206, 204, 294, 169,
	165, 163, 154, 186, 211, 243, 291, 237, 0, 201,
	0, 0, 283, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	153, 131, 230, 284, 171, 0, 0, 0, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 715, 714, 724,
	725, 717, 718, 719, 720, 721, 722, 723, 716, 0,
	0, 726, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 317, 0, 0, 0, 0, 255, 0, 288, 180,
	197, 144, 194, 128, 140, 0, 178, 229, 262, 266,
	0, 0, 0, 156, 0, 264, 241, 307, 0, 245,
	263, 202, 296, 256, 306, 318, 319, 161, 223, 312,
	292, 315, 327, 280, 133, 290, 304, 150, 274, 0,
	0, 0, 135, 302, 287, 217, 191, 192, 134, 0,
	260, 162, 174, 158, 232, 299, 300, 157, 329, 141,
	314, 137, 142, 313, 225, 295, 303, 218, 210, 136,
	301, 216, 209, 196, 168, 182, 253, 205, 254, 183,
	221, 220, 222, 0, 132, 0, 285, 310, 330, 147,
	0, 0, 293, 323, 326, 0, 257, 148, 175, 167,
	252, 173, 199, 322, 324, 325, 146, 224, 143, 185,
	281, 195, 203, 0, 0, 240, 265, 151, 309, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	138, 200, 328, 258, 172, 311, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 145, 152, 159, 166, 170, 177,
	181, 184, 187, 188, 189, 193, 208, 212, 213, 214,
	215, 226, 227, 228, 231, 234, 235, 236, 238, 239,
	242, 246, 247, 248, 249, 250, 251, 259, 261, 267,
	268, 269, 270, 271, 272, 273, 276, 277, 278, 279,
	286, 289, 297, 298, 308, 316, 320, 179, 305, 321,
	233, 207, 0, 0, 815, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 198, 0, 0, 244, 0,
	275, 155, 206, 204, 294, 169, 165, 163, 154, 186,
	211, 243, 291, 237, 0, 201, 0, 0, 283, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 153, 131, 230, 284,
	171, 0, 0, 0, 114, 115, 116, 0, 817, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 704, 705, 703, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 706,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 317, 0, 0,
	0, 0, 255, 0, 288, 180, 197, 144, 194, 128,
	140, 0, 178, 229, 262, 266, 0, 0, 0, 156,
	0, 264, 241, 307, 0, 245, 263, 202, 296, 256,
	306, 318, 319, 161, 223, 312, 292, 315, 327, 280,
	133, 290, 304, 150, 274, 0, 0, 0, 135, 302,
	287, 217, 191, 192, 134, 0, 260, 162, 174, 158,
	232, 299, 300, 157, 329, 141, 314, 137, 142, 313,
	225, 295, 303, 218, 210, 136, 301, 216, 209, 196,
	168, 182, 253, 205, 254, 183, 221, 220, 222, 0,
	132, 0, 285, 310, 330, 147, 0, 0, 293, 323,
	326, 0, 257, 148, 175, 167, 252, 173, 199, 322,
	324, 325, 146, 224, 143, 185, 281, 195, 203, 0,
	0, 240, 265, 151, 309, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 200, 328, 258,
	172, 311, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	145, 152, 159, 166, 170, 177, 181, 184, 187, 188,
	189, 193, 208, 212, 213, 214, 215, 226, 227, 228,
	231, 234, 235, 236, 238, 239, 242, 246, 247, 248,
	249, 250, 251, 259, 261, 267, 268, 269, 270, 271,
	272, 273, 276, 277, 278, 279, 286, 289, 297, 298,
	308, 316, 320, 179, 305, 321, 233, 207, 0, 0,
	0, 0, 0, 0, 0, 164, 1162, 0, 0, 0,
	0, 198, 0, 0, 244, 0, 275, 155, 206, 204,
	294, 169, 165, 163, 154, 186, 211, 243, 291, 237,
	0, 201, 0, 0, 283, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 153, 131, 230, 284, 171, 0, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 1161, 317, 0, 0, 0, 1157, 1154, 0,
	1155, 1156, 197, 618, 194, 128, 140, 1152, 1159, 229,
	262, 266, 0, 0, 0, 156, 0, 264, 241, 307,
	0, 245, 263, 202, 296, 256, 306, 318, 319, 161,
	223, 312, 292, 315, 327, 280, 133, 290, 304, 150,
	274, 0, 0, 0, 135, 302, 287, 217, 191, 192,
	134, 0, 260, 162, 174, 158, 232, 299, 300, 157,
	329, 141, 314, 137, 142, 313, 225, 295, 303, 218,
	210, 136, 301, 216, 209, 196, 168, 182, 253, 205,
	254, 183, 221, 220, 222, 0, 132, 0, 285, 310,
	330, 147, 0, 0, 293, 323, 326, 0, 257, 148,
	175, 167, 252, 173, 199, 322, 324, 325, 146, 224,
	143, 185, 281, 195, 203, 0, 0, 240, 265, 151,
	309, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 138, 200, 328, 258, 172, 311, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 145, 152, 159, 166,
	170, 177, 181, 184, 187, 188, 189, 193, 208, 212,
	213, 214, 215, 226, 227, 228, 231, 234, 235, 236,
	238, 239, 242, 246, 247, 248, 249, 250, 251, 259,
	261, 267, 268, 269, 270, 271, 272, 273, 276, 277,
	278, 279, 286, 289, 297, 298, 308, 316, 320, 179,
	305, 321, 33, 207, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	198, 0, 0, 244, 0, 275, 155, 206, 204, 294,
	169, 165, 163, 154, 186, 211, 243, 291, 237, 0,
	201, 0, 0, 283, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 153, 131, 230, 284, 171, 66, 0, 455, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 0, 317, 0, 0, 0, 0, 255, 0, 288,
	180, 197, 144, 194, 128, 140, 0, 178, 229, 262,
	266, 0, 0, 0, 156, 0, 264, 241, 307, 0,
	245, 263, 202, 296, 256, 306, 318, 319, 161, 223,
	312, 292, 315, 327, 280, 133, 290, 304, 150, 274,
	0, 0, 0, 135, 302, 287, 217, 191, 192, 134,
	0, 260, 162, 174, 158, 232, 299, 300, 157, 329,
	141, 314, 137, 142, 313, 225, 295, 303, 218, 210,
	136, 301, 216, 209, 196, 168, 182, 253, 205, 254,
	183, 221, 220, 222, 0, 132, 0, 285, 310, 330,
	147, 0, 0, 293, 323, 326, 0, 257, 148, 175,
	167, 252, 173, 199, 322, 324, 325, 146, 224, 143,
	185, 281, 195, 203, 0, 0, 240, 265, 151, 309,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 200, 328, 258, 172, 311, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 145, 152, 159, 166, 170,
	177, 181, 184, 187, 188, 189, 193, 208, 212, 213,
	214, 215, 226, 227, 228, 231, 234, 235, 236, 238,
	239, 242, 246, 247, 248, 249, 250, 251, 259, 261,
	267, 268, 269, 270, 271, 272, 273, 276, 277, 278,
	279, 286, 289, 297, 298, 308, 316, 320, 179, 305,
	321, 233, 207, 0, 0, 1072, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 198, 0, 0, 244,
	0, 275, 155, 206, 204, 294, 169, 165, 163, 154,
	186, 211, 243, 291, 237, 0, 201, 0, 0, 283,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 153, 131, 230,
	284, 171, 0, 0, 0, 114, 115, 116, 0, 1074,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 317, 0,
	0, 0, 0, 255, 0, 288, 180, 197, 144, 194,
	128, 140, 0, 178, 229, 262, 266, 0, 0, 0,
	156, 0, 264, 241, 307, 0, 245, 263, 202, 296,
	256, 306, 318, 319, 161, 223, 312, 292, 315, 327,
	280, 133, 290, 304, 150, 274, 0, 0, 0, 135,
	302, 287, 217, 191, 192, 134, 0, 260, 162, 174,
	158, 232, 299, 300, 157, 329, 141, 314, 137, 142,
	313, 225, 295, 303, 218, 210, 136, 301, 216, 209,
	196, 168, 182, 253, 205, 254, 183, 221, 220, 222,
	0, 132, 0, 285, 310, 330, 147, 0, 0, 293,
	323, 326, 0, 257, 148, 175, 167, 252, 173, 199,
	322, 324, 325, 146, 224, 143, 185, 281, 195, 203,
	0, 0, 240, 265, 151, 309, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 138, 200, 328,
	258, 172, 311, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 145, 152, 159, 166, 170, 177, 181, 184, 187,
	188, 189, 193, 208, 212, 213, 214, 215, 226, 227,
	228, 231, 234, 235, 236, 238, 239, 242, 246, 247,
	248, 249, 250, 251, 259, 261, 267, 268, 269, 270,
	271, 272, 273, 276, 277, 278, 279, 286, 289, 297,
	298, 308, 316, 320, 179, 305, 321, 33, 207, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 198, 0, 0, 244, 0,
	275, 155, 206, 204, 294, 169, 165, 163, 154, 186,
	211, 243, 291, 237, 0, 201, 0, 0, 283, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 153, 131, 230, 284,
	171, 66, 0, 0, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 317, 0, 0,
	0, 0, 255, 0, 288, 180, 197, 144, 194, 128,
	140, 0, 178, 229, 262, 266, 0, 0, 0, 156,
	0, 264, 241, 307, 0, 245, 263, 202, 296, 256,
	306, 318, 319, 161, 223, 312, 292, 315, 327, 280,
	133, 290, 304, 150, 274, 0, 0, 0, 135, 302,
	287, 217, 191, 192, 134, 0, 260, 162, 174, 158,
	232, 299, 300, 157, 329, 141, 314, 137, 142, 313,
	225, 295, 303, 218, 210, 136, 301, 216, 209, 196,
	168, 182, 253, 205, 254, 183, 221, 220, 222, 0,
	132, 0, 285, 310, 330, 147, 0, 0, 293, 323,
	326, 0, 257, 148, 175, 167, 252, 173, 199, 322,
	324, 325, 146, 224, 143, 185, 281, 195, 203, 0,
	0, 240, 265, 151, 309, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 200, 328, 258,
	172, 311, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	145, 152, 159, 166, 170, 177, 181, 184, 187, 188,
	189, 193, 208, 212, 213, 214, 215, 226, 227, 228,
	231, 234, 235, 236, 238, 239, 242, 246, 247, 248,
	249, 250, 251, 259, 261, 267, 268, 269, 270, 271,
	272, 273, 276, 277, 278, 279, 286, 289, 297, 298,
	308, 316, 320, 179, 305, 321, 233, 207, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 198, 0, 0, 244, 0, 275, 155, 206, 204,
	294, 169, 165, 163, 154, 186, 211, 243, 291, 237,
	0, 201, 0, 0, 283, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 153, 131, 230, 284, 171, 0, 0, 0,
	114, 115, 116, 0, 0, 1090, 0, 0, 1091, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 317, 0, 0, 0, 0, 255, 0,
	288, 180, 197, 144, 194, 128, 140, 0, 178, 229,
	262, 266, 0, 0, 0, 156, 0, 264, 241, 307,
	0, 245, 263, 202, 296, 256, 306, 318, 319, 161,
	223, 312, 292, 315, 327, 280, 133, 290, 304, 150,
	274, 0, 0, 0, 135, 302, 287, 217, 191, 192,
	134, 0, 260, 162, 174, 158, 232, 299, 300, 157,
	329, 141, 314, 137, 142, 313, 225, 295, 303, 218,
	210, 136, 301, 216, 209, 196, 168, 182, 253, 205,
	254, 183, 221, 220, 222, 0, 132, 0, 285, 310,
	330, 147, 0, 0, 293, 323, 326, 0, 257, 148,
	175, 167, 252, 173, 199, 322, 324, 325, 146, 224,
	143, 185, 281, 195, 203, 0, 0, 240, 265, 151,
	309, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 138, 200, 328, 258, 172, 311, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 145, 152, 159, 166,
	170, 177, 181, 184, 187, 188, 189, 193, 208, 212,
	213, 214, 215, 226, 227, 228, 231, 234, 235, 236,
	238, 239, 242, 246, 247, 248, 249, 250, 251, 259,
	261, 267, 268, 269, 270, 271, 272, 273, 276, 277,
	278, 279, 286, 289, 297, 298, 308, 316, 320, 179,
	305, 321, 233, 207, 0, 0, 1072, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 198, 0, 0,
	244, 0, 275, 155, 206, 204, 294, 169, 165, 163,
	154, 186, 211, 243, 291, 237, 0, 201, 0, 0,
	283, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 153, 131,
	230, 284, 171, 0, 0, 0, 114, 115, 116, 0,
	1074, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 317,
	0, 0, 0, 0, 255, 0, 288, 180, 197, 144,
	194, 128, 140, 0, 178, 229, 262, 266, 0, 0,
	0, 156, 0, 264, 241, 307, 0, 1070, 263, 202,
	296, 256, 306, 318, 319, 161, 223, 312, 292, 315,
	327, 280, 133, 290, 304, 150, 274, 0, 0, 0,
	135, 302, 287, 217, 191, 192, 134, 0, 260, 162,
	174, 158, 232, 299, 300, 157, 329, 141, 314, 137,
	142, 313, 225, 295, 303, 218, 210, 136, 301, 216,
	209, 196, 168, 182, 253, 205, 254, 183, 221, 220,
	222, 0, 132, 0, 285, 310, 330, 147, 0, 0,
	293, 323, 326, 0, 257, 148, 175, 167, 252, 173,
	199, 322, 324, 325, 146, 224, 143, 185, 281, 195,
	203, 0, 0, 240, 265, 151, 309, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 138, 200,
	328, 258, 172, 311, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 145, 152, 159, 166, 170, 177, 181, 184,
	187, 188, 189, 193, 208, 212, 213, 214, 215, 226,
	227, 228, 231, 234, 235, 236, 238, 239, 242, 246,
	247, 248, 249, 250, 251, 259, 261, 267, 268, 269,
	270, 271, 272, 273, 276, 277, 278, 279, 286, 289,
	297, 298, 308, 316, 320, 179, 305, 321, 233, 207,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 848,
	0, 0, 0, 198, 0, 0, 244, 0, 275, 155,
	206, 204, 294, 169, 165, 163, 154, 186, 211, 243,
	291, 237, 0, 201, 0, 0, 283, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 153, 131, 230, 284, 171, 0,
	0, 0, 114, 115, 116, 0, 847, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 317, 0, 0, 0, 0,
	255, 0, 288, 180, 197, 144, 194, 128, 140, 0,
	178, 229, 262, 266, 0, 0, 0, 156, 0, 264,
	241, 307, 0, 245, 263, 202, 296, 256, 306, 318,
	319, 161, 223, 312, 292, 315, 327, 280, 133, 290,
	304, 150, 274, 0, 0, 0, 135, 302, 287, 217,
	191, 192, 134, 0, 260, 162, 174, 158, 232, 299,
	300, 157, 329, 141, 314, 137, 142, 313, 225, 295,
	303, 218, 210, 136, 301, 216, 209, 196, 168, 182,
	253, 205, 254, 183, 221, 220, 222, 0, 132, 0,
	285, 310, 330, 147, 0, 0, 293, 323, 326, 0,
	257, 148, 175, 167, 252, 173, 199, 322, 324, 325,
	146, 224, 143, 185, 281, 195, 203, 0, 0, 240,
	265, 151, 309, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 138, 200, 328, 258, 172, 311,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 130, 139, 145, 152,
	159, 166, 170, 177, 181, 184, 187, 188, 189, 193,
	208, 212, 213, 214, 215, 226, 227, 228, 231, 234,
	235, 236, 238, 239, 242, 246, 247, 248, 249, 250,
	251, 259, 261, 267, 268, 269, 270, 271, 272, 273,
	276, 277, 278, 279, 286, 289, 297, 298, 308, 316,
	320, 179, 305, 321, 233, 207, 0, 0, 0, 0,
	0, 0, 0, 164, 0, 0, 0, 0, 0, 198,
	0, 0, 244, 0, 275, 155, 206, 204, 294, 169,
	165, 163, 154, 186, 211, 243, 291, 237, 0, 201,
	0, 0, 283, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	153, 131, 230, 284, 171, 0, 0, 0, 114, 115,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 149,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 612, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 176, 0, 0,
	0, 317, 0, 0, 0, 0, 255, 0, 288, 180,
	197, 618, 194, 128, 140, 616, 178, 229, 262, 266,
	0, 0, 0, 156, 0, 264, 241, 307, 0, 245,
	263, 202, 296, 256, 306, 318, 319, 161, 223, 312,
	292, 315, 327, 280, 133, 290, 304, 150, 274, 0,
	0, 0, 135, 302, 287, 217, 191, 192, 134, 0,
	260, 162, 174, 158, 232, 299, 300, 157, 329, 141,
	314, 137, 142, 313, 225, 295, 303, 218, 210, 136,
	301, 216, 209, 196, 168, 182, 253, 205, 254, 183,
	221, 220, 222, 0, 132, 0, 285, 310, 330, 147,
	0, 0, 293, 323, 326, 0, 257, 148, 175, 167,
	252, 173, 199, 322, 324, 325, 146, 224, 143, 185,
	281, 195, 203, 0, 0, 240, 265, 151, 309, 282,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	138, 200, 328, 258, 172, 311, 0, 0, 160, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 129, 130, 139, 145, 152, 159, 166, 170, 177,
	181, 184, 187, 188, 189, 193, 208, 212, 213, 214,
	215, 226, 227, 228, 231, 234, 235, 236, 238, 239,
	242, 246, 247, 248, 249, 250, 251, 259, 261, 267,
	268, 269, 270, 271, 272, 273, 276, 277, 278, 279,
	286, 289, 297, 298, 308, 316, 320, 179, 305, 321,
	233, 207, 0, 0, 0, 0, 0, 0, 0, 164,
	0, 0, 0, 0, 0, 198, 0, 0, 244, 0,
	275, 155, 206, 204, 294, 169, 165, 163, 154, 186,
	211, 243, 291, 237, 0, 201, 0, 0, 283, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 190, 153, 131, 230, 284,
	171, 0, 0, 455, 114, 115, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 176, 0, 0, 0, 317, 0, 0,
	0, 0, 255, 0, 288, 180, 197, 144, 194, 128,
	140, 0, 178, 229, 262, 266, 0, 0, 0, 156,
	0, 264, 241, 307, 0, 245, 263, 202, 296, 256,
	306, 318, 319, 161, 223, 312, 292, 315, 327, 280,
	133, 290, 304, 150, 274, 0, 0, 0, 135, 302,
	287, 217, 191, 192, 134, 0, 260, 162, 174, 158,
	232, 299, 300, 157, 329, 141, 314, 137, 142, 313,
	225, 295, 303, 218, 210, 136, 301, 216, 209, 196,
	168, 182, 253, 205, 254, 183, 221, 220, 222, 0,
	132, 0, 285, 310, 330, 147, 0, 0, 293, 323,
	326, 0, 257, 148, 175, 167, 252, 173, 199, 322,
	324, 325, 146, 224, 143, 185, 281, 195, 203, 0,
	0, 240, 265, 151, 309, 282, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 138, 200, 328, 258,
	172, 311, 0, 0, 160, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 129, 130, 139,
	145, 152, 159, 166, 170, 177, 181, 184, 187, 188,
	189, 193, 208, 212, 213, 214, 215, 226, 227, 228,
	231, 234, 235, 236, 238, 239, 242, 246, 247, 248,
	249, 250, 251, 259, 261, 267, 268, 269, 270, 271,
	272, 273, 276, 277, 278, 279, 286, 289, 297, 298,
	308, 316, 320, 179, 305, 321, 233, 207, 0, 0,
	0, 0, 0, 0, 0, 164, 0, 0, 0, 0,
	0, 198, 0, 0, 244, 0, 275, 155, 206, 204,
	294, 169, 165, 163, 154, 186, 211, 243, 291, 237,
	0, 201, 0, 0, 283, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 190, 153, 131, 230, 284, 171, 66, 0, 0,
	114, 115, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 176,
	0, 0, 0, 317, 0, 0, 0, 0, 255, 0,
	288, 180, 197, 144, 194, 128, 140, 0, 178, 229,
	262, 266, 0, 0, 0, 156, 0, 264, 241, 307,
	0, 245, 263, 202, 296, 256, 306, 318, 319, 161,
	223, 312, 292, 315, 327, 280, 133, 290, 304, 150,
	274, 0, 0, 0, 135, 302, 287, 217, 191, 192,
	134, 0, 260, 162, 174, 158, 232, 299, 300, 157,
	329, 141, 314, 137, 142, 313, 225, 295, 303, 218,
	210, 136, 301, 216, 209, 196, 168, 182, 253, 205,
	254, 183, 221, 220, 222, 0, 132, 0, 285, 310,
	330, 147, 0, 0, 293, 323, 326, 0, 257, 148,
	175, 167, 252, 173, 199, 322, 324, 325, 146, 224,
	143, 185, 281, 195, 203, 0, 0, 240, 265, 151,
	309, 282, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 127, 138, 200, 328, 258, 172, 311, 0, 0,
	160, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 130, 139, 145, 152, 159, 166,
	170, 177, 181, 184, 187, 188, 189, 193, 208, 212,
	213, 214, 215, 226, 227, 228, 231, 234, 235, 236,
	238, 239, 242, 246, 247, 248, 249, 250, 251, 259,
	261, 267, 268, 269, 270, 271, 272, 273, 276, 277,
	278, 279, 286, 289, 297, 298, 308, 316, 320, 179,
	305, 321, 233, 207, 0, 0, 0, 0, 0, 0,
	0, 164, 0, 0, 0, 0, 0, 198, 0, 0,
	244, 0, 275, 155, 206, 204, 294, 169, 165, 163,
	154, 186, 211, 243, 291, 237, 0, 201, 0, 0,
	283, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 190, 153, 131,
	230, 284, 171, 0, 0, 0, 114, 115, 116, 0,
	1074, 0, 0, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 176, 0, 0, 0, 317,
	0, 0, 0, 0, 255, 0, 288, 180, 197, 144,
	194, 128, 140, 0, 178, 229, 262, 266, 0, 0,
	0, 156, 0, 264, 241, 307, 0, 245, 263, 202,
	296, 256, 306, 318, 319, 161, 223, 312, 292, 315,
	327, 280, 133, 290, 304, 150, 274, 0, 0, 0,
	135, 302, 287, 217, 191, 192, 134, 0, 260, 162,
	174, 158, 232, 299, 300, 157, 329, 141, 314, 137,
	142, 313, 225, 295, 303, 218, 210, 136, 301, 216,
	209, 196, 168, 182, 253, 205, 254, 183, 221, 220,
	222, 0, 132, 0, 285, 310, 330, 147, 0, 0,
	293, 323, 326, 0, 257, 148, 175, 167, 252, 173,
	199, 322, 324, 325, 146, 224, 143, 185, 281, 195,
	203, 0, 0, 240, 265, 151, 309, 282, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 138, 200,
	328, 258, 172, 311, 0, 0, 160, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	130, 139, 145, 152, 159, 166, 170, 177, 181, 184,
	187, 188, 189, 193, 208, 212, 213, 214, 215, 226,
	227, 228, 231, 234, 235, 236, 238, 239, 242, 246,
	247, 248, 249, 250, 251, 259, 261, 267, 268, 269,
	270, 271, 272, 273, 276, 277, 278, 279, 286, 289,
	297, 298, 308, 316, 320, 179, 305, 321, 233, 207,
	0, 0, 0, 0, 0, 0, 0, 164, 0, 0,
	0, 0, 0, 198, 0, 0, 244, 0, 275, 155,
	206, 204, 294, 169, 165, 163, 154, 186, 211, 243,
	291, 237, 0, 201, 0, 0, 283, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 190, 153, 131, 230, 284, 171, 0,
	0, 0, 114, 115, 116, 0, 817, 0, 0, 0,
	0, 0, 0, 149, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 176, 0, 0, 0, 317, 0, 0, 0, 0,
	255, 0, 288, 180, 197, 144, 194, 128, 140, 0,
	178, 229, 262, 266, 0, 0, 0, 156, 0, 264,
	241, 307, 0, 245, 263, 202, 296, 256, 306, 318,
	319, 161, 223, 312, 292, 315, 327, 280, 133, 290,
	304, 150, 274, 0, 0, 0, 135, 302, 287, 217,
	191, 192, 134, 0, 260, 162, 174, 158, 232, 299,
	300, 157, 329, 141, 314, 137, 142, 313, 225, 295,
	303, 218, 210, 136, 301, 216, 209, 196, 168, 182,
	253, 205, 254, 183, 221, 220, 222, 0, 132, 0,
	285, 310, 330, 147, 0, 0, 293, 323, 326, 0,
	257, 148, 175, 167, 252, 173, 199, 322, 324, 325,
	146, 224, 143, 185, 281, 195, 203, 0, 0, 240,
	265, 151, 309, 282, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 138, 200, 328, 258, 172, 311,
	0, 0, 160, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 129, 130, 139, 145, 152,
	159, 166, 170, 177, 181, 184, 187, 188, 189, 193,
	208, 212, 213, 214, 215, 226, 227, 228, 231, 234,
	235, 236, 238, 239, 242, 246, 247, 248, 249, 250,
	251, 259, 261, 267, 268, 269, 270, 271, 272, 273,
	276, 277, 278, 279, 286, 289, 297, 298, 308, 316,
	320, 179, 305, 321, 830, 207, 0, 0, 0, 0,
	0, 233, 0, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 198, 0, 0, 244,
	0, 275, 155, 206, 204, 294, 169, 165, 163, 154,
	186, 211, 243, 291, 237, 0, 201, 0, 0, 283,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 153, 131, 230,
	284, 171, 0, 0, 0, 114, 115, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 317, 0,
	0, 0, 0, 255, 0, 288, 180, 197, 144, 194,
	128, 140, 0, 178, 229, 262, 266, 0, 0, 0,
	156, 0, 264, 241, 307, 0, 245, 263, 202, 296,
	256, 306, 318, 319, 161, 223, 312, 292, 315, 327,
	280, 133, 290, 304, 150, 274, 0, 0, 0, 135,
	302, 287, 217, 191, 192, 134, 0, 260, 162, 174,
	158, 232, 299, 300, 157, 329, 141, 314, 137, 142,
	313, 225, 295, 303, 218, 210, 136, 301, 216, 209,
	196, 168, 182, 253, 205, 254, 183, 221, 220, 222,
	0, 132, 0, 285, 310, 330, 147, 0, 0, 293,
	323, 326, 0, 257, 148, 175, 167, 252, 173, 199,
	322, 324, 325, 146, 224, 143, 185, 281, 195, 203,
	0, 0, 240, 265, 151, 309, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 138, 200, 328,
	258, 172, 311, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 145, 152, 159, 166, 170, 177, 181, 184, 187,
	188, 189, 193, 208, 212, 213, 214, 215, 226, 227,
	228, 231, 234, 235, 236, 238, 239, 242, 246, 247,
	248, 249, 250, 251, 259, 261, 267, 268, 269, 270,
	271, 272, 273, 276, 277, 278, 279, 286, 289, 297,
	298, 308, 316, 320, 179, 305, 321, 233, 207, 0,
	0, 0, 0, 0, 0, 821, 164, 0, 0, 0,
	0, 0, 198, 0, 0, 244, 0, 275, 155, 206,
	204, 294, 169, 165, 163, 154, 186, 211, 243, 291,
	237, 0, 201, 0, 0, 283, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 153, 131, 230, 284, 171, 0, 0,
	0, 114, 115, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	176, 0, 0, 0, 317, 0, 0, 0, 0, 255,
	0, 288, 180, 197, 144, 194, 128, 140, 0, 178,
	229, 262, 266, 0, 0, 0, 156, 0, 264, 241,
	307, 0, 245, 263, 202, 296, 256, 306, 318, 319,
	161, 223, 312, 292, 315, 327, 280, 133, 290, 304,
	150, 274, 0, 0, 0, 135, 302, 287, 217, 191,
	192, 134, 0, 260, 162, 174, 158, 232, 299, 300,
	157, 329, 141, 314, 137, 142, 313, 225, 295, 303,
	218, 210, 136, 301, 216, 209, 196, 168, 182, 253,
	205, 254, 183, 221, 220, 222, 0, 132, 0, 285,
	310, 330, 147, 0, 0, 293, 323, 326, 0, 257,
	148, 175, 167, 252, 173, 199, 322, 324, 325, 146,
	224, 143, 185, 281, 195, 203, 0, 0, 240, 265,
	151, 309, 282, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 138, 200, 328, 258, 172, 311, 0,
	0, 160, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 130, 139, 145, 152, 159,
	166, 170, 177, 181, 184, 187, 188, 189, 193, 208,
	212, 213, 214, 215, 226, 227, 228, 231, 234, 235,
	236, 238, 239, 242, 246, 247, 248, 249, 250, 251,
	259, 261, 267, 268, 269, 270, 271, 272, 273, 276,
	277, 278, 279, 286, 289, 297, 298, 308, 316, 320,
	179, 305, 321, 233, 207, 0, 0, 0, 0, 0,
	0, 0, 164, 0, 0, 0, 0, 0, 198, 0,
	0, 244, 0, 275, 155, 206, 204, 294, 169, 165,
	163, 154, 186, 211, 243, 291, 237, 0, 201, 0,
	0, 283, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 190, 153,
	131, 230, 284, 171, 0, 0, 0, 114, 115, 116,
	0, 695, 0, 0, 0, 0, 0, 0, 149, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 0, 0, 0,
	317, 0, 0, 0, 0, 255, 0, 288, 180, 197,
	144, 194, 128, 140, 0, 178, 229, 262, 266, 0,
	0, 0, 156, 0, 264, 241, 307, 0, 245, 263,
	202, 296, 256, 306, 318, 319, 161, 223, 312, 292,
	315, 327, 280, 133, 290, 304, 150, 274, 0, 0,
	0, 135, 302, 287, 217, 191, 192, 134, 0, 260,
	162, 174, 158, 232, 299, 300, 157, 329, 141, 314,
	137, 142, 313, 225, 295, 303, 218, 210, 136, 301,
	216, 209, 196, 168, 182, 253, 205, 254, 183, 221,
	220, 222, 0, 132, 0, 285, 310, 330, 147, 0,
	0, 293, 323, 326, 0, 257, 148, 175, 167, 252,
	173, 199, 322, 324, 325, 146, 224, 143, 185, 281,
	195, 203, 0, 0, 240, 265, 151, 309, 282, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 127, 138,
	200, 328, 258, 172, 311, 0, 0, 160, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 130, 139, 145, 152, 159, 166, 170, 177, 181,
	184, 187, 188, 189, 193, 208, 212, 213, 214, 215,
	226, 227, 228, 231, 234, 235, 236, 238, 239, 242,
	246, 247, 248, 249, 250, 251, 259, 261, 267, 268,
	269, 270, 271, 272, 273, 276, 277, 278, 279, 286,
	289, 297, 298, 308, 316, 320, 179, 305, 321, 233,
	207, 0, 0, 0, 0, 0, 0, 0, 164, 0,
	0, 0, 0, 0, 198, 0, 0, 244, 0, 275,
	155, 206, 204, 294, 169, 165, 163, 154, 186, 211,
	243, 291, 237, 0, 201, 0, 0, 283, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 190, 153, 131, 230, 284, 171,
	0, 0, 0, 114, 115, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	371, 0, 176, 0, 0, 0, 317, 0, 0, 0,
	0, 255, 0, 288, 180, 197, 144, 194, 128, 140,
	0, 178, 229, 262, 266, 0, 0, 0, 156, 0,
	264, 241, 307, 0, 245, 263, 202, 296, 256, 306,
	318, 319, 161, 223, 312, 292, 315, 327, 280, 133,
	290, 304, 150, 274, 0, 0, 0, 135, 302, 287,
	217, 191, 192, 134, 0, 260, 162, 174, 158, 232,
	299, 300, 157, 329, 141, 314, 137, 142, 313, 225,
	295, 303, 218, 210, 136, 301, 216, 209, 196, 168,
	182, 253, 205, 254, 183, 221, 220, 222, 0, 132,
	0, 285, 310, 330, 147, 0, 0, 293, 323, 326,
	0, 257, 148, 175, 167, 252, 173, 199, 322, 324,
	325, 146, 224, 143, 185, 281, 195, 203, 0, 0,
	240, 265, 151, 309, 282, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 127, 138, 200, 328, 258, 172,
	311, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 130, 139, 145,
	152, 159, 166, 170, 177, 181, 184, 187, 188, 189,
	193, 208, 212, 213, 214, 215, 226, 227, 228, 231,
	234, 235, 236, 238, 239, 242, 246, 247, 248, 249,
	250, 251, 259, 261, 267, 268, 269, 270, 271, 272,
	273, 276, 277, 278, 279, 286, 289, 297, 298, 308,
	316, 320, 370, 305, 321, 233, 207, 0, 0, 0,
	0, 0, 0, 0, 164, 0, 0, 0, 0, 0,
	198, 0, 0, 244, 0, 275, 155, 206, 204, 294,
	169, 165, 163, 154, 186, 211, 243, 291, 237, 0,
	201, 0, 0, 283, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 153, 131, 230, 284, 171, 0, 0, 0, 114,
	115, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	149, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	122, 0, 317, 0, 0, 0, 0, 255, 0, 288,
	180, 197, 144, 194, 128, 140, 0, 178, 229, 262,
	266, 0, 0, 0, 156, 0, 264, 241, 307, 0,
	245, 263, 202, 296, 256, 306, 318, 319, 161, 223,
	312, 292, 315, 327, 280, 133, 290, 304, 150, 274,
	0, 0, 0, 135, 302, 287, 217, 191, 192, 134,
	0, 260, 162, 174, 158, 232, 299, 300, 157, 329,
	141, 314, 137, 142, 313, 225, 295, 303, 218, 210,
	136, 301, 216, 209, 196, 168, 182, 253, 205, 254,
	183, 221, 220, 222, 0, 132, 0, 285, 310, 330,
	147, 0, 0, 293, 323, 326, 0, 257, 148, 175,
	167, 252, 173, 199, 322, 324, 325, 146, 224, 143,
	185, 281, 195, 203, 0, 0, 240, 265, 151, 309,
	282, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	127, 138, 200, 328, 258, 172, 311, 0, 0, 160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 130, 139, 145, 152, 159, 166, 170,
	177, 181, 184, 187, 188, 189, 193, 208, 212, 213,
	214, 215, 226, 227, 228, 231, 234, 235, 236, 238,
	239, 242, 246, 247, 248, 249, 250, 251, 259, 261,
	267, 268, 269, 270, 271, 272, 273, 276, 277, 278,
	279, 286, 289, 297, 298, 308, 316, 320, 179, 305,
	321, 233, 207, 0, 0, 0, 0, 0, 0, 0,
	164, 0, 0, 0, 0, 0, 198, 0, 0, 244,
	0, 275, 155, 206, 204, 294, 169, 165, 163, 154,
	186, 211, 243, 291, 237, 0, 201, 0, 0, 283,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 190, 153, 131, 230,
	284, 171, 0, 0, 0, 114, 115, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 0, 0, 0, 317, 0,
	0, 0, 0, 255, 0, 288, 180, 197, 144, 194,
	128, 140, 0, 178, 229, 262, 266, 0, 0, 0,
	156, 0, 264, 241, 307, 0, 245, 263, 202, 296,
	256, 306, 318, 319, 161, 223, 312, 292, 315, 327,
	280, 133, 290, 304, 150, 274, 0, 0, 0, 135,
	302, 287, 217, 191, 192, 134, 0, 260, 162, 174,
	158, 232, 299, 300, 157, 329, 141, 314, 137, 142,
	313, 225, 295, 303, 218, 210, 136, 301, 216, 209,
	196, 168, 182, 253, 205, 254, 183, 221, 220, 222,
	0, 132, 0, 285, 310, 330, 147, 0, 0, 293,
	323, 326, 0, 257, 148, 175, 167, 252, 173, 199,
	322, 324, 325, 146, 224, 143, 185, 281, 195, 203,
	0, 0, 240, 265, 151, 309, 282, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 138, 200, 328,
	258, 172, 311, 0, 0, 160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 130,
	139, 145, 152, 159, 166, 170, 177, 181, 184, 187,
	188, 189, 193, 208, 212, 213, 214, 215, 226, 227,
	228, 231, 234, 235, 236, 238, 239, 242, 246, 247,
	248, 249, 250, 251, 259, 261, 267, 268, 269, 270,
	271, 272, 273, 276, 277, 278, 279, 286, 289, 297,
	298, 308, 316, 320, 179, 305, 321, 0, 207,
}

var yyPact = [...]int{
	2653, -1000, -291, 1210, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1139, 869, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	365, 827, 92, 1057, 47, 690, 201, 30, 18906, 198,
	45, 19282, -1000, 43, -1000, 26, 19282, 37, 18530, -1000,
	-1000, -1000, 10601, 1016, -62, -68, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 854, 1116, 1114, 1135, 726, 1201,
	-1000, 9084, 9084, 173, 173, 173, 7580, -1000, -1000, 15515,
	19282, 19282, 19282, -147, 166, 196, 166, -1000, -1000, -1000,
	-1000, -1000, -1000, 1057, -1000, -1000, 99, -1000, -1000, 19282,
	19282, 284, 1057, 75, -1000, -1000, -1000, 19282, 149, 690,
	149, 149, 19282, -1000, 244, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19282, 1053, 406, 406, 406, 406, 406, 406, -7,
	63, 58, 70, -23, 690, 93, -1000, 273, -1000, 54,
	3, -1000, 406, 5222, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 182, -1000, -1000, -1000, -1000, 19282, 18154, 140,
	345, -1000, -1000, -1000, -1000, 668, 571, -1000, 10601, 1691,
	792, 792, -1000, -1000, 220, -1000, -1000, 11729, 11729, 11729,
	11729, 11729, 11729, 11729, 11729, 11729, 11729, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 792, 238, -1000, 10225, 792, 792, 792, 792, 792,
	792, 792, 792, 10601, 792, 792, 792, 792, 792, 792,
	792, 792, 792, 792, 792, 792, 792, 792, 792, 792,
	-1000, -1000, -1000, 19282, -1000, 1139, -1000, 869, -1000, -1000,
	-1000, 1046, 10601, 10601, 1139, -1000, 919, 9084, -1000, -1000,
	1008, -1000, -1000, -1000, -1000, 388, 1174, -1000, 12481, 237,
	1173, 17778, -1000, 16267, 17402, 790, 7187, -107, -1000, -1000,
	-1000, 344, 15139, -1000, -1000, -1000, 1050, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 753, 19282, -1000, -1000, 359, 690, -1000, 815, -1000,
	747, -1000, 802, 5222, 187, 19282, 363, 690, 690, -1000,
	-1000, 1048, 339, 143, 5222, 84, 134, 97, 19282, 1057,
	1011, 789, 179, 19282, 1099, 872, 19282, 690, -1000, 6401,
	-1000, 406, -1000, 555, 10601, -1000, -1000, -1000, -1000, -1000,
	406, 19282, 406, 406, 406, 406, 394, 396, 394, -1000,
	-1000, -1000, -1000, 5222, 5222, 5222, 5222, 19282, 5222, 5222,
	396, -1000, -1000, -1000, 307, -1000, 868, -1000, -1000, -1000,
	-1000, 32, -1000, -1000, -1000, -1000, -1000, 1210, -1000, -1000,
	-1000, -132, 10601, 10601, 10601, 10601, 535, 315, 11729, 422,
	296, 11729, 11729, 11729, 11729, 11729, 11729, 11729, 11729, 11729,
	11729, 11729, 11729, 11729, 11729, 11729, 599, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 690, -1000, 1198, 702, 702,
	253, 253, 253, 253, 253, 253, 253, 253, 253, 12105,
	7956, 6401, 726, 742, 1139, 9084, 9084, 10601, 10601, 9836,
	9460, 9084, 1041, 332, 571, 19282, -1000, -1000, 11353, -1000,
	-1000, -1000, -1000, -1000, 540, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19282, 19282, 9084, 9084, 9084, 9084, 9084, -1000,
	784, -1000, -174, 14763, 1114, 726, 1008, 1090, 1193, 297,
	651, 783, -1000, 615, 1114, 14387, 795, -1000, 1008, -1000,
	-1000, -1000, 19282, -1000, -1000, 17019, -1000, -1000, 6008, 19282,
	96, 19282, -1000, 764, 1036, -1000, -1000, -1000, 1105, 14011,
	19282, 805, 752, -1000, -1000, 234, 6794, -107, -1000, 6794,
	763, -1000, -105, -112, 8332, 252, -1000, -1000, -1000, -1000,
	4436, 12857, 627, 368, -55, -1000, -1000, -1000, 802, -1000,
	802, 802, 802, 802, -3, -3, -3, -3, -1000, -1000,
	-1000, -1000, -1000, 824, 823, -1000, 802, 802, 802, 802,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 818, 818, 818,
	813, 813, 136, 10601, 60, 19282, 1094, 438, -1000, 19282,
	-1000, 1097, 848, -1000, 339, 678, -1000, -1000, 337, 337,
	306, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 100, -1000, 19282, 19282, 19282, 19282, 19282, 209,
	79, 19282, 19282, 781, -1000, 19282, 5222, -1000, -1000, -1000,
	-1000, -1000, -1000, 571, -1000, -1000, -1000, -1000, -1000, -1000,
	406, 19282, 19282, 19282, -1000, -1000, 406, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 19282, -1000, 549, 19282, 19282, -1000,
	-1000, -1000, -1000, -1000, 571, 315, 341, 329, -1000, -1000,
	452, -1000, -1000, 2480, -1000, -1000, -1000, -1000, 422, 11729,
	11729, 11729, 895, 2480, 2448, 527, 909, 253, 479, 479,
	258, 258, 258, 258, 258, 427, 427, -1000, -1000, -1000,
	540, -1000, -1000, -1000, 540, 9084, 9084, 772, 792, 233,
	-1000, 854, -1000, -1000, 1114, 729, 729, 409, 658, 360,
	1167, 729, 349, 1150, 729, 729, 9084, -1000, -1000, 353,
	-1000, 10601, 540, -1000, 232, -1000, 1707, 768, 765, 729,
	540, 540, 729, 729, 19282, -1000, -287, -1000, -131, 267,
	792, -1000, 16643, -1000, -1000, 1046, -1000, -1000, 1009, -1000,
	914, 10601, 10601, 10601, -1000, -1000, -1000, 1046, 1123, -1000,
	943, 939, 1147, 9084, 16267, 1008, -1000, -1000, -1000, 231,
	1147, 774, 792, -1000, 19282, 16267, 16267, 16267, 16267, 16267,
	-1000, 893, 890, -1000, 927, 883, 942, 19282, -1000, 733,
	726, 14011, 96, 656, 16267, 19282, -1000, -1000, 16267, 19282,
	5615, -1000, 763, -107, -91, -1000, -1000, -1000, -1000, 571,
	-1000, 641, 761, 4043, -1000, -1000, -1000, -1000, 117, -1000,
	-1000, 817, 690, -1000, 1063, 321, 321, 313, 690, 1062,
	-1000, -1000, -1000, -1000, 1042, -1000, 371, -57, -1000, -1000,
	-3, -3, -1000, -1000, 252, 1039, 252, 252, 252, 543,
	543, -1000, -1000, -1000, -1000, -1000, 434, -1000, -1000, -1000,
	432, -1000, -1000, 815, 567, 881, 60, -1000, 690, 339,
	538, 1023, -1000, -1000, 611, 5222, -1000, 861, 19282, 613,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19282,
	-1000, -1000, -1000, -1000, -1000, 19282, 838, -1000, -1000, -1000,
	-1000, 8, 83, 77, 177, -1000, 5222, -1000, -1000, -1000,
	-1000, 394, -1000, 394, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 895, 2480, 2329, -1000, 11729, 11729, -1000, -1000, 729,
	729, 9084, 6401, 1139, 1046, -1000, -1000, 185, 599, 185,
	11729, 11729, -1000, 11729, 11729, -1000, -160, 738, 342, -1000,
	10601, 519, -1000, 6401, -1000, 11729, 11729, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 194, 192, 189, 19282,
	-1000, -1000, 499, 536, 907, 571, 571, -1000, -1000, 19282,
	-1000, -1000, -1000, -1000, 1143, 10601, -1000, 745, -1000, 4829,
	1114, 857, 19282, 792, 1210, 13246, 19282, 755, -1000, 343,
	1036, 842, 853, 904, -1000, -1000, -1000, -1000, 889, -1000,
	864, -1000, -1000, -1000, -1000, -1000, 726, 1147, 16267, 706,
	-1000, 706, -1000, 230, -1000, -1000, -1000, -108, -126, -1000,
	-1000, -1000, 4436, -1000, 4436, -1000, 19282, 127, -1000, 690,
	690, 690, -1000, -1000, -1000, 814, 852, 11729, -1000, -1000,
	-1000, 252, 252, -1000, 328, -1000, -1000, -1000, 720, -1000,
	718, 740, 696, 16, -1000, 663, 1032, 339, 339, -1000,
	-1000, 431, -1000, 531, -1000, -1000, 19282, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1089, -175, 690, 19282, 19282, 19282,
	-1000, 19282, -1000, 406, 406, -1000, 11729, 2480, 2480, -1000,
	-1000, 540, -1000, 1114, -1000, 540, 802, 802, -1000, 802,
	813, -1000, 802, 19, 802, 17, 540, 540, 2296, 2254,
	2158, 2140, 792, -155, -1000, 571, 10601, -1000, 1978, 1856,
	792, 792, 792, 675, -1000, 529, -3, -1000, -1000, -1000,
	1141, 1133, 571, -1000, -1000, -1000, 1086, 623, 665, -1000,
	-1000, 8708, 689, 938, 219, 675, 1139, 19282, 10601, -1000,
	-1000, 10601, 801, -1000, 10601, -1000, -1000, -1000, 1139, 1139,
	706, -1000, -1000, 271, -1000, -1000, -1000, 4043, -1000, 653,
	-1000, 1062, -1000, -1000, -1000, 19282, -45, 1186, 2480, -1000,
	-1000, -1000, -1000, -3, 486, -3, 424, -1000, 400, -1000,
	-1000, -220, -1000, -1000, 811, 879, -1000, -1000, -1000, 792,
	-1000, 6401, -1000, -1000, 800, 845, -1000, -1000, -1000, -1000,
	2480, -1000, 1046, -1000, -1000, 183, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 11729, 11729, 11729, 11729, 11729, 1114,
	478, 571, 11729, 11729, 15891, 19282, 19282, 13622, 19282, -3,
	-83, -1000, 10601, 10601, 1061, -1000, 792, -1000, 779, 19282,
	792, 19282, -1000, 1114, -1000, 571, 571, 19282, 571, 1114,
	-1000, 60, 640, -1000, 288, -1000, -127, 252, -1000, 252,
	579, 561, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	94, 701, -1000, 335, 19282, 19282, -1000, -1000, -1000, 1707,
	1707, 1707, 1707, 86, 540, -1000, 1707, 1707, 625, -1000,
	625, 625, 267, -1000, -280, -1000, 1007, 1003, 571, 668,
	1182, -1000, 792, 1210, 216, 665, -1000, -1000, 609, -1000,
	-1000, 104, 19282, 384, 1060, -1000, 1059, -1000, -1000, -1000,
	-1000, -1000, 606, -1000, 19282, 6401, 4436, 584, -1000, -1000,
	-1000, -1000, -1000, 540, 66, -181, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -83, 174, -1000, 954, 945, 1132, 19282,
	665, 19282, -1000, 19282, -1000, -1000, 474, -1000, -1000, -1000,
	94, 928, -1000, -1000, 838, -1000, 903, -172, -184, 961,
	965, 965, 1003, 1131, 985, 971, -1000, 464, 659, -1000,
	793, -1000, -1000, 90, -175, -1000, 900, -1000, 959, 417,
	-1000, -1000, -1000, -1000, 456, -1000, 1129, 1122, -1000, 19282,
	88, -1000, -176, -1000, 407, -1000, -1000, -1000, 449, 441,
	564, 792, -182, -1000, -1000, -1000, -1000, 850, 10977, -185,
	819, -1000, 1160, 1707, 540, -1000, -1000, 1180, 255, 255,
	-1000, -1000, -1000, -1000, -1000, 128, 450, -1000, -1000, -1000,
	-1000,
}

var yyPgo = [...]int{
	0, 1491, 1490, 25, 80, 81, 1480, 1478, 1475, 1474,
	117, 116, 115, 1473, 1472, 1470, 1469, 1468, 1467, 1465,
	1464, 1463, 1462, 1461, 1458, 1457, 1455, 101, 98, 451,
	1454, 1452, 1451, 1450, 1449, 1447, 1446, 1445, 1443, 1439,
	1438, 1436, 1434, 1426, 103, 1424, 1423, 1421, 1411, 1410,
	1398, 1397, 1396, 1391, 97, 43, 297, 61, 70, 1389,
	78, 1645, 1388, 66, 108, 73, 1386, 40, 1383, 1379,
	86, 1376, 1374, 65, 1372, 1371, 230, 1369, 63, 69,
	12, 32, 1368, 1367, 1366, 1365, 99, 1011, 1364, 1363,
	16, 1362, 1361, 114, 1360, 77, 19, 11, 13, 22,
	1358, 76, 1357, 6, 1355, 74, 1353, 1352, 1351, 1350,
	24, 1349, 67, 79, 62, 1348, 7, 3, 1346, 1345,
	1343, 1342, 1340, 1335, 5, 1334, 1332, 1331, 1329, 1328,
	27, 1325, 9, 64, 41, 31, 8, 1322, 1319, 29,
	94, 50, 85, 1318, 1317, 1314, 718, 1313, 45, 1311,
	113, 1309, 47, 1308, 402, 491, 1307, 1303, 1301, 1300,
	1296, 44, 809, 1409, 243, 96, 1295, 1294, 2415, 60,
	72, 21, 1293, 1291, 1290, 75, 68, 42, 614, 36,
	1288, 1287, 1285, 1282, 1280, 1277, 1276, 121, 1275, 1272,
	1271, 17, 23, 88, 28, 1265, 1258, 1257, 1256, 54,
	89, 1255, 1254, 58, 55, 1250, 100, 38, 33, 1249,
	1246, 1244, 1241, 39, 10, 1240, 84, 37, 48, 30,
	34, 1239, 18, 1238, 35, 53, 1234, 20, 1232, 14,
	1229, 4, 0, 1228, 15, 1226, 83, 1048, 2, 1225,
	1, 1224, 1222, 71, 1221, 1220, 1219, 1218, 1529, 206,
	95, 1216, 102,
}

var yyR1 = [...]int{
	0, 246, 247, 247, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 232, 232, 232, 235, 235, 21, 41,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 48, 48, 11, 12, 12, 12, 12,
	250, 250, 70, 70, 71, 71, 133, 133, 13, 14,
	14, 142, 142, 141, 141, 141, 143, 143, 143, 143,
	178, 178, 15, 15, 15, 15, 15, 15, 234, 234,
	233, 231, 231, 230, 230, 229, 23, 24, 25, 26,
	237, 237, 209, 30, 30, 29, 29, 29, 29, 31,
	31, 28, 28, 27, 27, 211, 211, 210, 210, 210,
	210, 210, 210, 200, 180, 180, 180, 180, 183, 183,
	181, 181, 181, 181, 181, 181, 181, 181, 181, 182,
	182, 182, 182, 182, 184, 184, 184, 184, 184, 185,
	185, 185, 185, 185, 185, 185, 185, 185, 185, 185,
	185, 185, 185, 185, 186, 186, 186, 186, 186, 186,
	186, 186, 199, 199, 187, 187, 193, 193, 194, 194,
	194, 196, 196, 197, 197, 156, 156, 156, 189, 189,
	190, 190, 195, 195, 191, 191, 191, 192, 192, 192,
	198, 198, 198, 198, 198, 188, 188, 201, 222, 222,
	221, 221, 218, 218, 218, 218, 208, 208, 215, 215,
	215, 215, 215, 215, 205, 205, 205, 206, 206, 204,
	204, 207, 207, 217, 217, 216, 202, 202, 203, 203,
	224, 224, 224, 224, 224, 225, 239, 240, 238, 238,
	238, 238, 238, 157, 157, 157, 212, 212, 212, 213,
	213, 213, 214, 214, 214, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 228, 226, 226, 227,
	227, 17, 22, 22, 18, 18, 18, 18, 19, 19,
	32, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 149, 149, 241, 241, 151, 151,
	147, 147, 150, 150, 148, 148, 148, 152, 152, 152,
	153, 153, 245, 245, 245, 34, 34, 36, 36, 37,
	38, 38, 173, 173, 174, 174, 39, 40, 47, 47,
	47, 47, 47, 47, 49, 49, 49, 7, 7, 7,
	7, 46, 46, 46, 6, 6, 35, 35, 42, 242,
	242, 243, 244, 244, 244, 244, 43, 20, 251, 44,
	45, 45, 54, 54, 54, 50, 50, 50, 53, 53,
	53, 57, 57, 59, 59, 59, 59, 59, 60, 60,
	60, 60, 60, 60, 56, 56, 58, 58, 58, 58,
	166, 166, 166, 165, 165, 62, 62, 63, 63, 64,
	64, 65, 65, 65, 102, 79, 79, 132, 132, 134,
	134, 66, 66, 66, 66, 67, 67, 68, 68, 69,
	69, 172, 172, 171, 171, 171, 170, 170, 72, 72,
	72, 74, 73, 73, 73, 73, 75, 75, 77, 77,
	76, 76, 78, 80, 80, 80, 80, 80, 81, 81,
	61, 61, 61, 61, 61, 61, 61, 61, 145, 145,
	83, 83, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 94, 94, 94, 94, 94, 94, 84, 84,
	84, 84, 84, 84, 84, 55, 55, 95, 95, 95,
	101, 96, 96, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 91, 91, 91,
	91, 89, 89, 89, 89, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	252, 252, 93, 92, 92, 92, 92, 92, 92, 92,
	52, 52, 52, 52, 52, 177, 177, 179, 179, 179,
	179, 179, 179, 179, 179, 179, 179, 179, 179, 179,
	106, 106, 51, 51, 104, 104, 105, 107, 107, 103,
	103, 103, 86, 86, 86, 86, 86, 86, 86, 86,
	88, 88, 88, 108, 108, 109, 109, 110, 110, 111,
	111, 112, 113, 113, 113, 114, 114, 114, 114, 223,
	223, 223, 223, 223, 219, 219, 219, 219, 220, 220,
	220, 130, 130, 130, 115, 115, 115, 115, 120, 120,
	120, 116, 116, 118, 118, 118, 119, 119, 119, 117,
	123, 123, 125, 125, 124, 124, 122, 122, 127, 127,
	126, 126, 121, 121, 85, 85, 85, 85, 85, 131,
	131, 131, 131, 135, 135, 97, 97, 99, 99, 98,
	100, 136, 136, 139, 137, 137, 140, 140, 140, 140,
	140, 138, 138, 138, 167, 167, 167, 144, 144, 154,
	154, 155, 155, 146, 146, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 159, 159, 159, 160, 160,
	128, 128, 128, 128, 129, 129, 163, 163, 164, 164,
	168, 168, 169, 169, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 248, 249, 175, 176, 176, 176,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 0, 4, 3, 5,
	4, 1, 3, 3, 2, 2, 2, 2, 2, 1,
	1, 1, 2, 2, 6, 4, 6, 2, 0, 2,
	1, 0, 2, 1, 3, 3, 4, 7, 4, 2,
	1, 1, 4, 0, 1, 1, 1, 2, 2, 0,
	1, 5, 5, 4, 4, 2, 4, 1, 1, 3,
	4, 3, 3, 8, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 4,
	4, 2, 2, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 6, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 3, 0, 5, 0, 3,
	5, 0, 1, 0, 1, 0, 1, 2, 0, 2,
	0, 3, 0, 1, 0, 3, 3, 0, 2, 2,
	0, 2, 1, 2, 1, 0, 2, 5, 0, 1,
	1, 2, 2, 3, 2, 3, 0, 1, 2, 3,
	3, 3, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 1, 3, 1,
	10, 11, 11, 12, 1, 5, 3, 3, 1, 1,
	2, 2, 2, 0, 1, 2, 0, 1, 3, 1,
	2, 3, 1, 1, 1, 5, 6, 6, 6, 6,
	4, 4, 3, 6, 7, 5, 5, 5, 12, 7,
	5, 9, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 7, 1, 3, 8,
	8, 3, 3, 5, 4, 6, 5, 4, 3, 2,
	3, 4, 3, 3, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 5, 7, 4, 4, 4, 4, 4,
	4, 4, 2, 7, 2, 4, 5, 4, 3, 3,
	5, 2, 3, 3, 1, 1, 1, 1, 0, 1,
	0, 1, 1, 1, 0, 2, 2, 0, 2, 2,
	0, 2, 0, 1, 1, 2, 1, 1, 2, 1,
	1, 5, 0, 1, 0, 1, 2, 3, 0, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 3, 2, 2, 3, 1,
	3, 2, 1, 2, 1, 2, 2, 2, 0, 2,
	0, 2, 1, 2, 2, 0, 1, 1, 0, 1,
	1, 0, 1, 0, 1, 2, 3, 4, 1, 1,
	1, 1, 1, 1, 1, 3, 1, 2, 3, 5,
	0, 1, 2, 1, 1, 0, 2, 1, 3, 1,
	1, 1, 3, 3, 3, 3, 7, 1, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 5, 4, 5, 5, 0, 2,
	1, 3, 3, 3, 2, 3, 1, 2, 0, 3,
	1, 1, 3, 3, 4, 4, 5, 3, 4, 5,
	6, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 1, 1, 1, 1, 4, 5, 5,
	6, 4, 4, 6, 6, 6, 8, 8, 8, 8,
	9, 8, 5, 4, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 8, 8,
	0, 2, 3, 4, 4, 4, 4, 4, 4, 4,
	0, 3, 4, 7, 3, 1, 1, 2, 3, 3,
	1, 2, 2, 1, 2, 1, 2, 2, 1, 2,
	0, 1, 0, 2, 1, 2, 4, 0, 2, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 0, 3, 0, 2, 0, 3, 1,
	3, 2, 0, 1, 1, 0, 2, 4, 4, 0,
	2, 2, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 0, 2, 4, 0, 9, 3, 5, 0, 3,
	3, 0, 1, 0, 2, 2, 0, 2, 2, 2,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 3,
	0, 4, 0, 1, 2, 1, 5, 4, 4, 1,
	3, 3, 5, 0, 5, 1, 3, 1, 2, 3,
	1, 1, 3, 3, 1, 3, 3, 3, 3, 3,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 0,
	2, 0, 3, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 1, 1,
	0, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -246, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -32, -33, -34, -36,
	-37, -38, -39, -40, -6, -35, -20, -21, -41, -42,
	-43, -4, -248, 6, 7, 8, -48, 10, 11, 31,
	-23, -24, 146, -25, 147, -26, 149, 148, 182, 150,
	175, 70, 199, 200, 202, 203, 204, 205, -49, 180,
	181, 152, 35, 41, 32, 33, 80, 9, 294, 177,
	176, 26, -247, 398, -54, 5, -110, 16, -3, -44,
	-251, -44, -44, -44, -44, -44, -44, -209, -211, 80,
	119, 80, 156, 100, 154, -128, -237, 160, 163, 164,
	286, 153, -30, -29, -28, -27, -31, 30, -237, 154,
	156, 259, -235, -232, 83, 84, 85, 154, 154, 155,
	156, -237, 154, -76, -168, -232, -162, 304, 168, 336,
	337, 76, 249, 199, 213, 207, 234, 226, 305, 338,
	169, 224, 227, 273, 166, 339, 271, 254, 262, 94,
	202, 282, 340, 75, 47, 40, 178, 222, 218, 341,
	313, 192, 216, 46, 28, 45, 342, 264, 239, 44,
	343, 79, 309, 266, 217, 263, 152, 344, 171, 392,
	164, 345, 240, 244, 346, 274, 48, 347, 348, 349,
	74, 211, 212, 350, 167, 276, 238, 165, 34, 267,
	306, 54, 186, 277, 42, 242, 41, 396, 351, 237,
	233, 49, 352, 353, 354, 355, 236, 210, 232, 58,
	246, 245, 247, 193, 272, 229, 356, 357, 358, 172,
	77, 359, 219, 19, 360, 361, 362, 52, 363, 364,
	280, 181, 365, 50, 37, 184, 366, 367, 368, 369,
	370, 371, 265, 241, 243, 161, 188, 261, 308, 372,
	215, 373, 173, 185, 180, 281, 174, 374, 375, 376,
	377, 378, 379, 380, 203, 39, 381, 382, 383, 384,
	198, 275, 284, 57, 78, 251, 385, 209, 163, 386,
	200, 51, 195, 257, 43, 230, 187, 387, 388, 220,
	221, 235, 208, 231, 201, 393, 189, 182, 389, 283,
	252, 310, 194, 228, 225, 196, 390, 156, 190, 191,
	391, 394, 268, 258, 269, 270, 259, 197, 307, 223,
	253, 154, 227, 273, 254, 255, 256, 267, 268, 188,
	-245, 274, 154, -147, 137, 146, 264, -151, 265, 258,
	259, 197, -241, -232, 275, 396, 260, 266, 270, 269,
	-168, 201, -173, 206, -163, -232, -162, 204, -76, -47,
	392, 150, -175, -175, -175, -96, -61, -82, 103, -87,
	30, 24, -86, -83, -103, -100, -101, 137, 138, 140,
	139, 141, 126, 127, 134, 104, 142, -91, -89, -90,
	-92, 87, 86, 95, 88, 89, 90, 91, 96, 97,
	98, -163, -168, -98, -248, 64, 65, 295, 296, 297,
	298, 303, 299, 106, 53, 285, 293, 292, 291, 289,
	290, 287, 288, 301, 302, 159, 286, 153, 132, 294,
	-232, -162, 40, 257, 257, -5, -4, -248, 6, 21,
	22, -114, 18, 17, -249, 82, -50, -59, 59, 60,
	-60, 22, 36, 63, 61, -45, -58, 128, -61, -168,
	-58, -146, 158, -146, -146, -137, -178, 201, -140, 275,
	274, -164, -138, -163, -161, 273, 227, 272, 151, 311,
	102, 23, 25, 105, 137, 17, 106, 136, 295, 146,
	68, 312, 287, 288, 285, 297, 298, 286, 255, 30,
	11, 314, 26, 176, 22, 36, 130, 148, 109, 110,
	179, 24, 177, 98, 317, 20, 71, 12, 14, 318,
	319, 15, 159, 158, 121, 155, 66, 9, 142, 27,
	118, 62, 320, 29, 321, 322, 323, 324, 64, 119,
	18, 289, 290, 32, 397, 325, 303, 183, 132, 69,
	55, 103, 326, 327, 96, 328, 99, 72, 100, 16,
	67, 38, 329, 330, 331, 278, 332, 120, 149, 294,
	65, 333, 153, 256, 6, 300, 31, 175, 63, 334,
	154, 108, 301, 302, 157, 97, 5, 160, 33, 10,
	70, 73, 291, 292, 293, 53, 107, 13, 335, 279,
	101, -210, 119, -200, -203, -163, 170, -225, 166, -76,
	-217, -216, -163, -76, 294, -155, 159, 155, -155, -27,
	-28, 227, 136, -76, -76, 146, 148, 151, 72, -29,
	194, -22, -76, -154, 159, -232, -154, -154, -76, 143,
	-76, 31, -152, 119, 13, -152, -152, -152, -152, -152,
	195, 271, 195, 196, 195, 196, 195, -150, -149, 262,
	263, 257, 261, -232, 286, -232, 188, 154, 189, 156,
	-205, 155, 34, 167, 196, 257, 191, -152, -176, -248,
	-164, 157, -163, -46, -163, 87, -7, -3, -11, -10,
	-12, 111, 81, 102, 100, 101, 118, -61, -84, 121,
	103, 119, 120, 105, 123, 122, 133, 126, 127, 128,
	129, 130, 131, 132, 124, 125, 136, 111, 112, 113,
	114, 115, 116, 117, -145, -248, -101, -248, 144, 145,
	-87, -87, -87, -87, -87, -87, -87, -87, -87, -87,
	-248, 143, -2, -96, -4, -248, -248, -248, -248, -248,
	-248, -248, -248, -106, -61, -248, -252, -93, -248, -252,
	-93, -252, -93, -252, -248, -252, -93, -252, -93, -252,
	-252, -93, -248, -248, -248, -248, -248, -248, -248, -175,
	-242, -243, -79, -76, -110, -3, -44, -130, 20, 32,
	-61, -111, -112, -61, -110, 55, -56, -58, -60, 59,
	60, 93, 12, -166, -165, 23, -163, 87, 143, 12,
	-77, 27, -76, -63, -64, -65, -66, -79, -102, -248,
	12, -70, -71, -76, -78, -168, 81, 201, -140, -178,
	-142, -141, 276, 278, 111, -167, -163, 87, 30, 31,
	82, 81, -76, -180, -183, -185, -184, -186, -181, -182,
	224, 225, 137, 228, 230, 231, 232, 233, 234, 235,
	236, 237, 238, 239, 31, 178, 220, 221, 222, 223,
	240, 241, 242, 243, 244, 245, 246, 247, 207, 226,
	305, 208, 209, 210, 211, 212, 213, 215, 216, 217,
	218, 219, -232, 80, 82, 81, -187, 80, -176, 156,
	-76, 103, -232, -232, 31, -208, 111, -158, 151, 148,
	149, -228, 147, 249, 227, 94, 30, 16, 295, 184,
	310, -232, 185, -176, 190, 190, 154, 154, 198, -76,
	40, 81, 157, -70, 24, 72, -76, -232, -169, -168,
	-161, -152, 87, -61, -152, -76, -152, -152, -152, -152,
	-148, 12, 121, -206, 12, 121, -148, -176, -176, -176,
	-176, -76, -176, -176, -206, -153, 119, 72, -174, 204,
	238, 393, 394, 395, -61, -61, -61, -61, -94, 96,
	103, 97, 98, -87, -95, -98, -101, 92, 121, 119,
	120, 105, -87, -87, -87, -87, -87, -87, -87, -87,
	-87, -87, -87, -87, -87, -87, -87, -177, -232, 87,
	-232, -86, -86, -163, -57, 22, 36, -56, -164, -169,
	-161, -54, -249, -249, -110, -56, -56, -61, -61, -103,
	87, -56, -103, 87, -56, -56, -53, 22, 36, -104,
	-105, 107, -103, -163, -168, -249, -87, -163, -163, -56,
	-57, -57, -56, -56, 81, -244, 278, 279, 397, -171,
	184, -170, 23, -168, 87, -114, -249, -115, 27, 10,
	121, 81, 19, 81, -113, 25, 26, -114, -88, -163,
	88, 91, -62, 81, 12, -60, -76, -165, 128, -169,
	-76, -133, 184, -76, 31, 81, -72, -74, -73, -75,
	62, 66, 68, 63, 64, 65, 69, -172, 23, -63,
	-3, -248, -76, -70, -250, 81, 12, 73, -250, 81,
	143, -140, -142, 81, 277, 279, 280, 72, 99, -61,
	-192, 136, -212, -213, -214, -164, 87, 88, -200, -201,
	-202, -215, 170, -224, 161, 163, 164, 160, -204, 171,
	-225, 155, 29, 82, -156, 96, 103, -196, 252, -187,
	-187, -187, -187, -187, -191, 227, -191, -191, -191, 80,
	80, -187, -187, -187, -187, -193, 80, -193, -193, -194,
	80, -194, -225, 166, -61, -222, -221, -218, 73, 165,
	94, 307, -216, -113, 88, -76, 24, -129, 73, -208,
	-232, 87, -175, -236, 166, 162, 170, 171, 164, 83,
	84, 85, 155, 29, 161, 163, 184, 160, -236, -159,
	-160, 157, 23, 155, 29, 184, -76, -76, -76, -76,
	-76, 151, 148, 192, -76, -76, -76, -176, -152, -168,
	-168, -76, -152, -76, 87, -76, -163, 96, 97, 98,
	-95, -87, -87, -87, -55, 179, 102, -249, -249, -56,
	-56, -248, 143, -5, -114, -249, -249, 81, 73, 23,
	12, 12, -249, 12, 12, -249, -249, -56, -107, -105,
	109, -61, -249, 143, -249, 81, 81, -249, -249, -249,
	-249, -249, -243, 396, 279, -80, 70, 158, 71, -248,
	-170, -130, 38, 46, 57, -61, -61, -112, -130, -144,
	20, 12, 53, 53, -81, 13, -58, -63, -60, 143,
	-81, -85, 31, 53, -3, -248, -248, -136, -139, -103,
	-64, -65, -65, -64, -65, 62, 62, 62, 67, 62,
	67, 62, -73, -168, -249, -249, -3, -133, 73, -63,
	-76, -63, -78, -168, 128, -141, -143, 281, 278, 284,
	-232, 87, 81, -214, 111, -203, 80, -232, 29, -204,
	-204, -204, -207, -232, -207, 29, -189, 30, 96, -197,
	253, -191, -191, -192, 31, -192, -192, -192, -199, 87,
	-199, 88, 88, 82, -223, -219, -220, 32, 76, -218,
	-232, -208, 87, 37, 82, -176, 72, -163, -232, 87,
	-175, -175, -76, -175, -163, -234, 73, 190, 249, 190,
	193, 157, -176, -148, -148, -55, 102, -87, -87, -249,
	-249, -57, -164, -110, -130, -179, 137, 224, 178, 222,
	218, 238, 229, 251, 220, 252, -177, -179, -87, -87,
	-87, -87, 304, -110, 110, -61, 108, -164, -87, -87,
	155, 155, 155, -134, -163, 39, 87, 87, 58, -76,
	-108, 14, -61, 128, -114, -135, 72, -136, -97, -99,
	-98, -248, -131, -249, -163, -134, -81, 81, 111, -68,
	-67, 72, 73, -69, 72, -67, 62, 62, -249, -81,
	-63, -81, -81, 143, 278, 282, 283, -213, -214, -217,
	-224, 171, -207, -207, -207, 80, -190, 72, -87, -192,
	-192, -232, 137, 82, 81, 82, 81, 82, 81, -157,
	342, 103, -220, -219, -208, -208, 88, 87, -76, 27,
	-231, 307, -233, -232, -163, -163, -163, -76, -152, -152,
	-87, -249, -114, -249, -187, -187, -187, -194, -187, 212,
	-187, 212, -249, -249, 20, 20, 20, 20, -248, -51,
	300, -61, 81, 81, -248, -248, -248, -249, 81, 87,
	-191, -109, 15, 17, 28, -135, 81, -249, -249, 81,
	53, 143, -249, -110, -139, -61, -61, 80, -61, -110,
	-81, 82, -132, -163, -195, 249, 10, -191, 87, -191,
	88, 88, 342, 30, 77, 78, 79, 30, 74, 75,
	-248, -230, -229, -164, 80, 73, -130, -191, -232, -87,
	-87, -87, -87, -87, -114, 87, -87, -87, -132, -249,
	-132, -132, -171, -163, -191, -117, -122, -150, -61, -96,
	29, -99, 53, -3, -163, -97, -163, -114, -132, -114,
	-222, 82, 81, -198, 161, 29, 160, -90, -192, -192,
	82, 82, -226, -227, 184, 81, 111, -132, -76, -249,
	-249, -249, -249, -52, 121, 307, -249, -249, -249, -249,
	-249, -249, -80, -120, 392, -123, 42, -124, 43, 10,
	-97, 143, 82, 173, -163, -188, 94, 29, 29, -249,
	81, -163, -229, -214, 82, -249, 305, 69, 308, -117,
	47, 230, -125, 51, -126, -121, 52, 17, -136, -163,
	-76, 87, -227, 53, -234, 58, 306, 309, -118, 49,
	-116, 48, -116, -124, 17, -127, 44, 45, 87, 80,
	186, -231, 58, -119, 50, 72, 99, 87, 17, 17,
	-132, 187, 307, 72, 99, 87, 87, 82, -248, 308,
	-239, -240, 72, -87, 183, 309, -240, 72, 11, 10,
	-249, -249, -238, 174, 169, 172, 31, -238, 168, 30,
	96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 667, 0, 408, 408, 408, 408, 408, 408, 408,
	0, 0, 780, -2, 0, 36, 0, 0, 0, 0,
	-2, 366, 367, 0, 369, -2, 0, 0, 378, 1123,
	1123, 1123, 0, 0, 0, 0, 1121, 53, 54, 384,
	385, 386, 1, 3, 0, 412, 675, 0, 0, -2,
	410, 0, 0, 763, 763, 763, 0, 82, 83, 0,
	0, 0, 0, 0, 761, 0, 761, 781, 782, 783,
	100, 101, 87, -2, 105, 106, 0, 110, 99, 0,
	0, 0, 109, 37, 33, 34, 35, 0, 759, 0,
	759, 759, 0, 309, 490, 790, 791, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119,
	1120, 0, 0, 357, 357, 357, 357, 357, 357, 0,
	0, 0, 0, 0, 0, 0, 332, 0, 334, 0,
	0, 341, 357, 1124, 363, 364, 351, 349, 346, 347,
	365, 368, 0, 373, 376, 786, 787, 0, 391, 0,
	969, 383, 396, 397, 407, 38, 541, 500, 0, 506,
	508, 0, 543, 544, 545, 546, 547, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 574, 575,
	576, 652, 653, 654, 655, 656, 657, 658, 659, 510,
	511, 649, 0, 740, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 640, 0, 610, 610, 610, 610, 610,
	610, 610, 610, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 1123, 0, 406, 667, 49, 0, 408, 413,
	414, 691, 0, 0, 667, 1122, 0, 0, -2, -2,
	424, 430, 431, 432, 433, 409, 0, 436, 440, 0,
	0, 0, 764, 0, 0, 68, 0, 1094, 744, -2,
	-2, 0, 0, 788, 789, -2, 932, -2, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 903, 904, 905,
	906, 907, 908, 909, 910, 911, 912, 913, 914, 915,
	916, 0, 0, 117, 118, 0, 0, 239, 934, 115,
	0, 233, 174, 1124, 0, 0, 0, 0, 0, 107,
	108, 0, 216, 0, 1124, 0, 0, 0, 0, -2,
	0, 301, 0, 0, 0, 0, 0, 0, 308, 0,
	310, 357, 312, 0, 0, 313, 314, 315, 316, 317,
	357, 0, 357, 357, 357, 357, 354, 0, 354, 352,
	353, 344, 345, 1124, 1124, 1124, 1124, 0, 1124, 1124,
	0, 224, 225, 226, 360, 338, 339, 342, 343, 1125,
	1126, 374, 377, 394, 392, 393, 395, 387, 388, 389,
	390, 0, 0, 0, 0, 0, 0, 504, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 528, 529, 530,
	531, 532, 533, 534, 507, 0, 521, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 0,
	421, 0, 0, 0, 667, 0, 0, 0, 0, 0,
	0, 0, 418, 0, 641, 0, 594, 602, 0, 595,
	603, 596, 604, 597, 0, 598, 605, 599, 606, 600,
	601, 607, 0, 0, 0, 421, 421, 0, 0, 39,
	398, 399, 0, 473, 675, 0, 423, 694, 0, 0,
	676, 668, 669, 672, 675, 0, 445, 434, 425, 428,
	429, 411, 0, 437, 441, 0, 443, 444, 0, 0,
	66, 0, 489, 0, 447, 449, 450, 451, 471, 0,
	0, 0, 0, 62, 64, 490, 0, 1094, 750, 0,
	70, 71, 0, 0, 0, 197, 754, 755, 756, 752,
	256, 0, 0, 185, 181, 125, 126, 127, 174, 129,
	174, 174, 174, 174, 194, 194, 194, 194, 157, 158,
	159, 160, 161, 0, 0, 144, 174, 174, 174, 174,
	164, 165, 166, 167, 168, 169, 170, 171, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 176, 176, 176,
	178, 178, 0, 0, 208, 0, 672, 0, 85, 0,
	96, 0, 784, 98, 216, 0, 217, 1123, 0, 0,
	775, 271, 765, 766, 767, 768, 769, 770, 771, 772,
	773, 774, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 760, 0, 1124, 307, 491, 792,
	793, 311, 358, 359, 318, 335, 319, 321, 320, 322,
	357, 0, 0, 0, 227, 228, 357, 325, 326, 327,
	328, 329, 330, 331, 0, 337, 0, 0, 0, 375,
	379, 380, 381, 382, 542, 501, 502, 503, 505, 522,
	0, 524, 526, 512, 513, 537, 538, 539, 0, 0,
	0, 0, 535, 517, 0, 548, 549, 550, 551, 552,
	553, 554, 555, 556, 557, 558, 559, 562, 625, 626,
	0, 560, 561, 572, 0, 0, 0, 422, 650, 0,
	-2, 0, 540, 739, 675, 0, 0, 0, 0, 545,
	652, 0, 545, 652, 0, 0, 0, 419, 420, 647,
	644, 0, 0, 649, 0, 611, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 401, 402, 404, 0, 493,
	1035, 474, 0, 476, 477, 691, 50, 40, 0, 692,
	0, 0, 0, 0, 671, 673, 674, 691, 0, 660,
	0, 0, 498, 0, 0, 426, 46, 442, 438, 0,
	498, 0, 0, 488, 0, 0, 0, 0, 0, 0,
	478, 0, 0, 481, 0, 0, 0, 0, 472, 0,
	0, 0, -2, 0, 0, 0, 60, 61, 0, 0,
	0, 745, 69, 0, 0, 74, 75, 746, 747, 748,
	749, 0, 102, 257, 259, 262, 263, 264, 119, 121,
	122, 0, 0, 237, 1045, 1078, 970, 231, 231, 968,
	244, 229, 230, 116, 188, 186, 0, 183, 182, 128,
	194, 194, 151, 152, 197, 0, 197, 197, 197, 0,
	0, 145, 146, 147, 148, 139, 0, 140, 141, 142,
	0, 143, 238, 0, 0, 679, 209, 210, 0, 216,
	0, 0, 234, 235, 0, 1124, 762, 0, 0, 0,
	113, 114, 265, 1123, 282, 283, 284, 285, 286, 287,
	288, 289, 290, 291, 292, 293, 294, 295, 1123, 0,
	1123, 776, 777, 778, 779, 0, 88, 275, 277, 276,
	280, 0, 0, 0, 0, 302, 1124, 306, 323, 355,
	356, 354, 336, 354, 361, 340, 371, 523, 525, 527,
	514, 535, 518, 0, 515, 0, 0, 509, 577, 0,
	0, 421, 0, 667, 691, 581, 582, 0, 0, 0,
	0, 0, 618, 0, 0, 619, 0, 667, 0, 645,
	0, 0, 593, 0, 612, 0, 0, 613, 614, 615,
	616, 617, 400, 403, 405, 455, 0, 0, 0, 0,
	475, 42, 0, 0, 0, 677, 678, 670, 41, 0,
	757, 758, 661, 662, 663, 0, 435, 446, 427, 0,
	675, 733, 0, 0, 725, 0, 0, 498, 741, 0,
	448, 467, 469, 0, 464, 479, 480, 482, 0, 484,
	0, 486, 487, 452, 453, 454, 0, 498, 0, 498,
	63, 498, 65, 0, 492, 72, 73, 0, 0, 79,
	198, 199, 0, 260, 0, 120, 0, 0, 218, 231,
	231, 231, 222, 232, 223, 0, 190, 0, 187, 124,
	184, 197, 197, 153, 0, 154, 155, 156, 0, 172,
	0, 0, 0, 253, 84, 683, 682, 216, 216, 211,
	212, 0, 214, 0, 175, 86, 0, 785, 111, 112,
	266, 267, 268, 269, 0, 91, 0, 0, 0, 0,
	273, 0, 305, 357, 357, 516, 0, 536, 519, 578,
	579, 0, 651, 675, 44, 0, 174, 174, 630, 174,
	178, 633, 174, 635, 174, 638, 0, 0, 0, 0,
	0, 0, 0, 642, 592, 648, 0, 650, 0, 0,
	0, 0, 0, 0, 459, 0, 194, 696, 693, 43,
	665, 0, 499, 439, 47, 51, 0, 733, 724, 735,
	737, 0, 0, 0, 729, 0, 667, 0, 0, 461,
	468, 0, 0, 462, 0, 463, 483, 485, -2, 667,
	498, 58, 59, 0, 76, 77, 78, 258, 261, 0,
	236, 0, 219, 220, 221, 0, 192, 0, 189, 149,
	150, 195, 196, 194, 0, 194, 0, 179, 0, 245,
	254, 0, 680, 681, 0, 0, 213, 215, 97, 0,
	274, 0, 89, 90, 0, 0, 279, 303, 324, 333,
	520, 580, 691, 583, 627, 194, 631, 632, 634, 636,
	637, 639, 585, 584, 0, 0, 0, 0, 0, 675,
	0, 646, 0, 0, 0, 0, 0, 473, 0, 194,
	716, 48, 0, 0, 0, 52, 0, 738, 0, 0,
	0, 0, 67, 675, 742, 743, 465, 0, 470, 675,
	57, 208, 0, 457, 200, 193, 0, 197, 173, 197,
	0, 0, 255, 684, 685, 686, 687, 688, 689, 690,
	0, 92, 93, 0, 0, 0, 45, 628, 629, 0,
	0, 0, 0, 620, 0, 643, 0, 0, 0, 495,
	0, 0, 493, 460, 698, 697, 710, 714, 666, 664,
	0, 736, 0, 728, 731, 727, 730, 55, 0, 56,
	207, 0, 0, 205, 0, 202, 204, 191, 162, 163,
	177, 180, 0, 297, 0, 0, 0, 0, 281, 586,
	588, 587, 589, 0, 0, 0, 591, 608, 609, 494,
	496, 497, 456, 716, 0, 709, 712, -2, 0, 0,
	726, 0, 466, 0, 458, 123, 0, 201, 203, 296,
	0, 0, 94, 95, 88, 590, 0, 0, 0, 703,
	701, 701, 714, 0, 718, 0, 723, 0, 734, 732,
	0, 206, 298, 0, 91, 621, 0, 624, 706, 0,
	699, 702, 700, 711, 0, 717, 0, 0, 715, 0,
	0, 278, 622, 695, 0, 704, 705, 713, 0, 0,
	0, 0, 0, 707, 708, 719, 721, 240, 0, 0,
	241, 242, 0, 0, 0, 623, 243, 0, 0, 0,
	299, 300, 246, 248, 249, 0, 0, 247, 250, 251,
	252,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 398,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:388
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:393
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:394
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:398
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:429
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:435
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:443
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:464
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:470
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:479
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:483
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:487
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:510
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:518
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:524
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:530
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:538
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:555
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:567
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:595
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:636
		{
			yyVAL.partitions = nil
		}
	case 67:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:640
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:646
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 69:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:652
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:656
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 72:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:666
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:672
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:676
		{
			yyVAL.characteristic = ReadWrite
		}
	case 75:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:680
		{
			yyVAL.characteristic = ReadOnly
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:686
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:690
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:694
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:698
		{
			yyVAL.isolationLevel = Serializable
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:704
		{
			yyVAL.scope = SessionScope
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.scope = GlobalScope
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:714
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:720
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 84:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:727
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 85:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:734
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:738
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:742
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 88:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:749
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 89:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:753
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:759
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:764
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:775
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:780
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 95:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:786
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 96:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:792
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 97:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:799
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, IndexType: yyDollar[5].str, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 98:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:806
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:813
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 102:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:824
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:830
		{
			yyVAL.collateAndCharsets = nil
		}
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:834
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:840
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 106:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:844
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:848
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:857
		{
			yyVAL.boolean = false
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.boolean = true
		}
	case 111:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:867
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:871
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:877
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 114:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:881
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:888
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:892
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:898
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:903
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:908
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 120:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:912
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:917
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:921
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:927
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:938
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:960
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:964
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 163:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1109
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1115
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1119
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1127
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1149
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1154
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 174:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1159
		{
			yyVAL.literal = nil
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1163
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1168
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1172
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1180
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1184
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1190
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1198
		{
			yyVAL.boolean = false
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1202
		{
			yyVAL.boolean = true
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1207
		{
			yyVAL.boolean = false
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1211
		{
			yyVAL.boolean = true
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1217
		{
			yyVAL.boolean = false
		}
	case 186:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1221
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1225
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1230
		{
			yyVAL.optVal = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1234
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1239
		{
			yyVAL.optVal = nil
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1243
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1248
		{
			yyVAL.boolean = false
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1252
		{
			yyVAL.boolean = true
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1257
		{
			yyVAL.str = ""
		}
	case 195:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1261
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1265
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1270
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1274
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1278
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1283
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1287
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1291
		{
			yyVAL.colKeyOpt = colKey
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1299
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1304
		{
			yyVAL.literal = nil
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1308
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 207:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1314
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1319
		{
			yyVAL.indexOptions = nil
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1323
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1329
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1333
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1339
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1343
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1352
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = ""
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1368
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1372
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1376
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1380
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1394
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1398
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1409
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1413
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1419
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1423
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1428
		{
			yyVAL.str = ""
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1438
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1442
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1448
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1454
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1458
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1464
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1468
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1474
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 241:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1478
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 242:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1482
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 243:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1486
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1490
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 245:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1496
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1502
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1508
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1514
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1518
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1522
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1526
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1530
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 253:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1535
		{
			yyVAL.boolean = true
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1539
		{
			yyVAL.boolean = true
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1543
		{
			yyVAL.boolean = false
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1548
		{
			yyVAL.str = ""
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1552
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1556
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1564
		{
			yyVAL.str = yyDollar[1].str
		}
	case 260:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1568
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1572
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1578
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1582
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1586
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 265:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1592
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 266:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1596
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 267:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1600
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 268:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1604
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 269:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1609
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 270:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1614
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 271:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1618
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1622
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1629
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1636
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1648
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1658
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 277:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1662
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 278:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1666
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 279:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1679
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 280:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1689
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 281:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1693
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 296:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1722
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1728
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1732
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 299:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1738
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 300:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1742
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1748
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1754
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1758
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 304:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1766
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 305:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1770
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 306:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1775
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1779
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1785
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1789
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1794
		{
			yyVAL.statement = &OtherRead{}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1800
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[4].showFilter}}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1804
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilter}}
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1808
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilter}}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1812
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1816
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1820
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1824
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilter}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilter}}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1832
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilter}}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1836
		{
			yyVAL.statement = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1840
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilter}}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1844
		{
			yyVAL.statement = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilter}}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1848
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 324:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1852
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1860
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1869
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1873
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 331:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1889
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1894
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1898
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 336:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1902
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 337:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1912
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 338:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1917
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1921
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 340:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1925
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1929
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1934
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1948
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1974
		{
			yyVAL.str = ""
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1978
		{
			yyVAL.str = "extended "
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1984
		{
			yyVAL.str = ""
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1988
		{
			yyVAL.str = "full "
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1994
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1998
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2004
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2018
		{
			yyVAL.showFilter = nil
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2022
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 360:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2032
		{
			yyVAL.showFilter = nil
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2042
		{
			yyVAL.empty = struct{}{}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2046
		{
			yyVAL.empty = struct{}{}
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2050
		{
			yyVAL.empty = struct{}{}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2060
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2066
		{
			yyVAL.statement = &Begin{}
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2070
		{
			yyVAL.statement = &Begin{}
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.statement = &Commit{}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2082
		{
			yyVAL.statement = &Rollback{}
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2086
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2091
		{
			yyVAL.empty = struct{}{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2093
		{
			yyVAL.empty = struct{}{}
		}
	case 374:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2096
		{
			yyVAL.empty = struct{}{}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2098
		{
			yyVAL.empty = struct{}{}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2103
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2109
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2114
		{
			yyVAL.explainType = EmptyType
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2118
		{
			yyVAL.explainType = JSONType
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2122
		{
			yyVAL.explainType = TreeType
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2126
		{
			yyVAL.explainType = VitessType
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2130
		{
			yyVAL.explainType = TraditionalType
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2134
		{
			yyVAL.explainType = AnalyzeType
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2140
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2144
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2148
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2154
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2158
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2171
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2175
		{
			yyVAL.str = ""
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.str = ""
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2185
		{
			yyVAL.statement = &OtherRead{}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2189
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2195
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2199
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2205
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2211
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2215
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.lockType = Read
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			yyVAL.lockType = ReadLocal
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2235
		{
			yyVAL.lockType = Write
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2239
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 406:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2245
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2251
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2255
		{
			setAllowComments(yylex, true)
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2265
		{
			yyVAL.bytes2 = nil
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2269
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.boolean = true
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.boolean = false
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2283
		{
			yyVAL.boolean = true
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2288
		{
			yyVAL.str = ""
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2292
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2296
		{
			yyVAL.str = SQLCacheStr
		}
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2301
		{
			yyVAL.boolean = false
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2305
		{
			yyVAL.boolean = true
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2309
		{
			yyVAL.boolean = true
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2314
		{
			yyVAL.selectExprs = nil
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2318
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2323
		{
			yyVAL.strs = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2327
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 425:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2331
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2335
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 427:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2339
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2345
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2349
		{
			yyVAL.str = SQLCacheStr
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2353
		{
			yyVAL.str = DistinctStr
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2357
		{
			yyVAL.str = DistinctStr
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2361
		{
			yyVAL.str = StraightJoinHint
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2365
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2371
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2375
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2385
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2389
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 439:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2393
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 440:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2398
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2402
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2406
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2413
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2418
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2422
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2428
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2432
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2442
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2446
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2450
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2456
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2462
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 456:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2466
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2476
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2482
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2486
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2499
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2503
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2507
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2511
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2517
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2519
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2523
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2525
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2529
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2531
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2534
		{
			yyVAL.empty = struct{}{}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2536
		{
			yyVAL.empty = struct{}{}
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2539
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2543
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2547
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2554
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2560
		{
			yyVAL.joinType = NormalJoinType
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2564
		{
			yyVAL.joinType = NormalJoinType
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.joinType = NormalJoinType
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2574
		{
			yyVAL.joinType = StraightJoinType
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.joinType = LeftJoinType
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2584
		{
			yyVAL.joinType = LeftJoinType
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2588
		{
			yyVAL.joinType = RightJoinType
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2592
		{
			yyVAL.joinType = RightJoinType
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2598
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2612
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2616
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2622
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2626
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2632
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2637
		{
			yyVAL.indexHints = nil
		}
	case 494:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2641
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 495:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2645
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 496:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2649
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 497:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2653
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 498:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2658
		{
			yyVAL.expr = nil
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2662
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2668
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2672
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2676
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2680
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2684
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 505:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2688
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2692
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2696
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2702
		{
			yyVAL.str = ""
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2706
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2722
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2726
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2730
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2734
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 516:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2738
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2742
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 518:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2746
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2750
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 520:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2754
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 521:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2764
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 523:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2768
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2772
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 525:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2776
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2780
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2784
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2790
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2794
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2798
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2802
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2806
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2810
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2814
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 535:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2819
		{
			yyVAL.expr = nil
		}
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2823
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2829
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2833
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2837
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2843
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2849
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2859
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2863
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2867
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2871
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2875
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2879
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2883
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2887
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2891
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2895
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2907
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2911
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2915
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2919
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2923
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2927
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2931
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2935
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 563:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2939
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 564:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2943
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 566:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 567:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2955
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2959
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2967
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2981
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2985
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2989
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 577:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3007
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3011
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3015
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 580:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3019
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3029
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3033
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 583:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3037
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 584:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3041
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 585:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3045
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 586:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3049
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 587:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3053
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 588:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 589:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3061
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 590:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3065
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 591:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3069
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 592:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3073
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3077
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 594:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3087
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 595:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3091
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 596:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 597:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 598:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3105
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 599:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3116
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3121
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3126
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3134
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3139
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3144
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3149
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 608:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3153
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3157
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 612:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 613:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3177
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 614:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 615:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3185
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 616:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3189
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 617:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3193
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 618:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3197
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3201
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3207
		{
			yyVAL.matchExprOption = NoOption
		}
	case 621:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3211
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3215
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 623:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3219
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3223
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 625:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3239
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 628:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3243
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 629:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3247
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3251
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3255
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 632:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3259
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3265
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3269
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3273
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3277
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3281
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3285
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 639:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3289
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = nil
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 642:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3303
		{
			yyVAL.str = string("")
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3307
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3313
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3317
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 646:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3323
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 647:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3328
		{
			yyVAL.expr = nil
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3332
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 649:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3338
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3342
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 651:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3346
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 652:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3352
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 653:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3356
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3360
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3364
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3368
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3372
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3376
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3380
		{
			yyVAL.expr = &NullVal{}
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3386
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3395
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3404
		{
			yyVAL.exprs = nil
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3408
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = nil
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 667:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3422
		{
			yyVAL.orderBy = nil
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3432
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3442
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3447
		{
			yyVAL.orderDirection = AscOrder
		}
	case 673:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3451
		{
			yyVAL.orderDirection = AscOrder
		}
	case 674:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3455
		{
			yyVAL.orderDirection = DescOrder
		}
	case 675:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3460
		{
			yyVAL.limit = nil
		}
	case 676:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3464
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3468
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 678:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3472
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3477
		{
			yyVAL.indexOptions = nil
		}
	case 680:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3481
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 681:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3485
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 682:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3489
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 683:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3493
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 684:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3500
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3504
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3508
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3512
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 688:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3518
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3522
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3526
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3531
		{
			yyVAL.lock = NoLock
		}
	case 692:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3535
		{
			yyVAL.lock = ForUpdateLock
		}
	case 693:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3539
		{
			yyVAL.lock = ShareModeLock
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3544
		{
			yyVAL.selectInto = nil
		}
	case 695:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3548
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3556
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3565
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3574
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = " header"
		}
	case 703:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3583
		{
			yyVAL.str = ""
		}
	case 704:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = " manifest on"
		}
	case 705:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = " manifest off"
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3596
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3600
		{
			yyVAL.str = " overwrite on"
		}
	case 708:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.str = " overwrite off"
		}
	case 709:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3615
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3619
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3624
		{
			yyVAL.str = ""
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3628
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 714:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3633
		{
			yyVAL.str = ""
		}
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3637
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3642
		{
			yyVAL.str = ""
		}
	case 717:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3646
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 718:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3651
		{
			yyVAL.str = ""
		}
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3655
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 720:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3660
		{
			yyVAL.str = ""
		}
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3664
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 722:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3669
		{
			yyVAL.str = ""
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3673
		{
			yyVAL.str = " optionally"
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3686
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3690
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 726:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3694
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 727:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3698
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 728:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3702
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 729:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3708
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3712
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3716
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 732:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3720
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 733:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3725
		{
			yyVAL.updateExprs = nil
		}
	case 734:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3729
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 735:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3735
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3739
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3745
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3749
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 739:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3755
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3761
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3771
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 742:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3775
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3781
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 744:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 745:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3791
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 746:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3797
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3801
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3805
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 749:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3809
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 750:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3813
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 752:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3821
		{
			yyVAL.bytes = []byte("charset")
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3828
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3832
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.expr = &Default{}
		}
	case 759:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3845
		{
			yyVAL.boolean = false
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3847
		{
			yyVAL.boolean = true
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3850
		{
			yyVAL.boolean = false
		}
	case 762:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3852
		{
			yyVAL.boolean = true
		}
	case 763:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3855
		{
			yyVAL.ignore = false
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.ignore = true
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3861
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3863
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3865
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3869
		{
			yyVAL.empty = struct{}{}
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3871
		{
			yyVAL.empty = struct{}{}
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3873
		{
			yyVAL.empty = struct{}{}
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.empty = struct{}{}
		}
	case 773:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3877
		{
			yyVAL.empty = struct{}{}
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3879
		{
			yyVAL.empty = struct{}{}
		}
	case 775:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3883
		{
			yyVAL.empty = struct{}{}
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3885
		{
			yyVAL.empty = struct{}{}
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3887
		{
			yyVAL.empty = struct{}{}
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3891
		{
			yyVAL.empty = struct{}{}
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.empty = struct{}{}
		}
	case 780:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3896
		{
			yyVAL.str = ""
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3898
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3900
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 783:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3902
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3905
		{
			yyVAL.str = ""
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3907
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3911
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 787:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3915
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3922
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3928
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3932
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3939
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4292
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1122:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4301
		{
			decNesting(yylex)
		}
	case 1123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4306
		{
			skipToEnd(yylex)
		}
	case 1124:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4311
		{
			skipToEnd(yylex)
		}
	case 1125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4315
		{
			skipToEnd(yylex)
		}
	case 1126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4319
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
