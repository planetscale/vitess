// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, ddl DDLStatement) {
	yylex.(*Tokenizer).partialDDL = ddl
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	OnlineDDLHint          *OnlineDDLHint
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createView             *CreateView
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const STATUS = 57517
const VARIABLES = 57518
const WARNINGS = 57519
const CASCADED = 57520
const DEFINER = 57521
const OPTION = 57522
const SQL = 57523
const UNDEFINED = 57524
const SEQUENCE = 57525
const UDEFINED = 57526
const MERGE = 57527
const TEMPTABLE = 57528
const INVOKER = 57529
const LOCAL = 57530
const SECURITY = 57531
const BEGIN = 57532
const START = 57533
const TRANSACTION = 57534
const COMMIT = 57535
const ROLLBACK = 57536
const SAVEPOINT = 57537
const RELEASE = 57538
const WORK = 57539
const BIT = 57540
const TINYINT = 57541
const SMALLINT = 57542
const MEDIUMINT = 57543
const INT = 57544
const INTEGER = 57545
const BIGINT = 57546
const INTNUM = 57547
const REAL = 57548
const DOUBLE = 57549
const FLOAT_TYPE = 57550
const DECIMAL = 57551
const NUMERIC = 57552
const TIME = 57553
const TIMESTAMP = 57554
const DATETIME = 57555
const YEAR = 57556
const CHAR = 57557
const VARCHAR = 57558
const BOOL = 57559
const CHARACTER = 57560
const VARBINARY = 57561
const NCHAR = 57562
const TEXT = 57563
const TINYTEXT = 57564
const MEDIUMTEXT = 57565
const LONGTEXT = 57566
const BLOB = 57567
const TINYBLOB = 57568
const MEDIUMBLOB = 57569
const LONGBLOB = 57570
const JSON = 57571
const ENUM = 57572
const GEOMETRY = 57573
const POINT = 57574
const LINESTRING = 57575
const POLYGON = 57576
const GEOMETRYCOLLECTION = 57577
const MULTIPOINT = 57578
const MULTILINESTRING = 57579
const MULTIPOLYGON = 57580
const NULLX = 57581
const AUTO_INCREMENT = 57582
const APPROXNUM = 57583
const SIGNED = 57584
const UNSIGNED = 57585
const ZEROFILL = 57586
const COLLATION = 57587
const DATABASES = 57588
const TABLES = 57589
const VITESS_METADATA = 57590
const VSCHEMA = 57591
const FULL = 57592
const PROCESSLIST = 57593
const COLUMNS = 57594
const FIELDS = 57595
const ENGINES = 57596
const PLUGINS = 57597
const EXTENDED = 57598
const KEYSPACES = 57599
const VITESS_KEYSPACES = 57600
const VITESS_SHARDS = 57601
const VITESS_TABLETS = 57602
const NAMES = 57603
const CHARSET = 57604
const GLOBAL = 57605
const SESSION = 57606
const ISOLATION = 57607
const LEVEL = 57608
const READ = 57609
const WRITE = 57610
const ONLY = 57611
const REPEATABLE = 57612
const COMMITTED = 57613
const UNCOMMITTED = 57614
const SERIALIZABLE = 57615
const CURRENT_TIMESTAMP = 57616
const DATABASE = 57617
const CURRENT_DATE = 57618
const CURRENT_TIME = 57619
const LOCALTIME = 57620
const LOCALTIMESTAMP = 57621
const CURRENT_USER = 57622
const UTC_DATE = 57623
const UTC_TIME = 57624
const UTC_TIMESTAMP = 57625
const REPLACE = 57626
const CONVERT = 57627
const CAST = 57628
const SUBSTR = 57629
const SUBSTRING = 57630
const GROUP_CONCAT = 57631
const SEPARATOR = 57632
const TIMESTAMPADD = 57633
const TIMESTAMPDIFF = 57634
const MATCH = 57635
const AGAINST = 57636
const BOOLEAN = 57637
const LANGUAGE = 57638
const WITH = 57639
const QUERY = 57640
const EXPANSION = 57641
const UNUSED = 57642
const ARRAY = 57643
const CUME_DIST = 57644
const DESCRIPTION = 57645
const DENSE_RANK = 57646
const EMPTY = 57647
const EXCEPT = 57648
const FIRST_VALUE = 57649
const GROUPING = 57650
const GROUPS = 57651
const JSON_TABLE = 57652
const LAG = 57653
const LAST_VALUE = 57654
const LATERAL = 57655
const LEAD = 57656
const MEMBER = 57657
const NTH_VALUE = 57658
const NTILE = 57659
const OF = 57660
const OVER = 57661
const PERCENT_RANK = 57662
const RANK = 57663
const RECURSIVE = 57664
const ROW_NUMBER = 57665
const SYSTEM = 57666
const WINDOW = 57667
const ACTIVE = 57668
const ADMIN = 57669
const BUCKETS = 57670
const CLONE = 57671
const COMPONENT = 57672
const DEFINITION = 57673
const ENFORCED = 57674
const EXCLUDE = 57675
const FOLLOWING = 57676
const GEOMCOLLECTION = 57677
const GET_MASTER_PUBLIC_KEY = 57678
const HISTOGRAM = 57679
const HISTORY = 57680
const INACTIVE = 57681
const INVISIBLE = 57682
const LOCKED = 57683
const MASTER_COMPRESSION_ALGORITHMS = 57684
const MASTER_PUBLIC_KEY_PATH = 57685
const MASTER_TLS_CIPHERSUITES = 57686
const MASTER_ZSTD_COMPRESSION_LEVEL = 57687
const NESTED = 57688
const NETWORK_NAMESPACE = 57689
const NOWAIT = 57690
const NULLS = 57691
const OJ = 57692
const OLD = 57693
const OPTIONAL = 57694
const ORDINALITY = 57695
const ORGANIZATION = 57696
const OTHERS = 57697
const PATH = 57698
const PERSIST = 57699
const PERSIST_ONLY = 57700
const PRECEDING = 57701
const PRIVILEGE_CHECKS_USER = 57702
const PROCESS = 57703
const RANDOM = 57704
const REFERENCE = 57705
const REQUIRE_ROW_FORMAT = 57706
const RESOURCE = 57707
const RESPECT = 57708
const RESTART = 57709
const RETAIN = 57710
const REUSE = 57711
const ROLE = 57712
const SECONDARY = 57713
const SECONDARY_ENGINE = 57714
const SECONDARY_LOAD = 57715
const SECONDARY_UNLOAD = 57716
const SKIP = 57717
const SRID = 57718
const THREAD_PRIORITY = 57719
const TIES = 57720
const UNBOUNDED = 57721
const VCPU = 57722
const VISIBLE = 57723
const FORMAT = 57724
const TREE = 57725
const VITESS = 57726
const TRADITIONAL = 57727

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"UDEFINED",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"LOCAL",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	76, 84,
	156, 84,
	198, 84,
	-2, 757,
	-1, 47,
	34, 329,
	155, 329,
	167, 329,
	192, 343,
	193, 343,
	-2, 331,
	-1, 52,
	157, 353,
	-2, 351,
	-1, 76,
	55, 389,
	-2, 397,
	-1, 560,
	143, 775,
	-2, 771,
	-1, 561,
	143, 776,
	-2, 772,
	-1, 576,
	55, 390,
	-2, 402,
	-1, 577,
	55, 391,
	-2, 403,
	-1, 597,
	111, 1057,
	-2, 76,
	-1, 598,
	111, 957,
	-2, 77,
	-1, 601,
	111, 916,
	-2, 733,
	-1, 603,
	111, 997,
	-2, 735,
	-1, 1004,
	143, 778,
	-2, 774,
	-1, 1091,
	73, 58,
	81, 58,
	-2, 62,
	-1, 1482,
	5, 641,
	18, 641,
	20, 641,
	32, 641,
	82, 641,
	-2, 428,
	-1, 1685,
	45, 704,
	-2, 702,
}

const yyPrivate = 57344

const yyLast = 20020

var yyAct = [...]int{

	560, 1775, 1765, 1702, 1685, 1404, 1733, 1289, 1533, 1633,
	1595, 504, 1113, 1309, 1616, 1461, 1143, 519, 1085, 1164,
	1462, 746, 1290, 569, 786, 75, 3, 649, 1158, 1458,
	533, 1363, 793, 1112, 1474, 490, 1369, 613, 1122, 925,
	991, 94, 1423, 1109, 1340, 1082, 451, 1364, 473, 451,
	1225, 1381, 610, 93, 94, 1166, 451, 1276, 998, 944,
	1356, 831, 73, 607, 1468, 1087, 824, 1127, 1064, 796,
	89, 814, 1071, 791, 563, 506, 968, 1024, 1047, 606,
	828, 29, 614, 495, 94, 71, 1093, 94, 451, 94,
	813, 502, 939, 491, 658, 1154, 494, 803, 830, 578,
	76, 8, 1635, 821, 638, 616, 7, 954, 70, 6,
	1682, 864, 896, 759, 1519, 1605, 1768, 440, 1167, 1730,
	438, 1763, 1710, 545, 760, 551, 552, 549, 550, 1756,
	548, 547, 546, 78, 79, 80, 81, 82, 83, 1169,
	553, 554, 1534, 1729, 1709, 1440, 1563, 627, 584, 588,
	1493, 1494, 31, 564, 1492, 64, 35, 36, 1103, 436,
	1326, 672, 673, 1325, 596, 493, 1327, 1104, 1105, 832,
	492, 833, 679, 499, 1348, 1137, 447, 443, 444, 445,
	91, 217, 218, 219, 674, 1598, 1406, 1712, 675, 672,
	673, 217, 218, 219, 1144, 1554, 31, 32, 33, 64,
	35, 36, 1552, 483, 953, 1001, 485, 481, 1179, 914,
	1168, 1378, 431, 432, 904, 1193, 68, 852, 669, 1379,
	677, 37, 58, 59, 1180, 61, 63, 1181, 1182, 1192,
	441, 62, 1676, 708, 707, 717, 718, 710, 711, 712,
	713, 714, 715, 716, 709, 678, 1703, 719, 667, 668,
	1408, 911, 655, 1407, 657, 915, 439, 1762, 865, 1755,
	48, 955, 956, 957, 599, 1403, 913, 1065, 1779, 1695,
	63, 1162, 664, 1162, 1783, 1162, 1499, 609, 435, 639,
	617, 1659, 217, 218, 219, 621, 654, 656, 622, 623,
	590, 1310, 1312, 1191, 1409, 878, 881, 882, 883, 884,
	885, 886, 912, 887, 888, 889, 890, 891, 866, 867,
	868, 869, 850, 851, 879, 446, 853, 918, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 870, 871,
	872, 873, 874, 875, 876, 877, 41, 42, 44, 43,
	46, 682, 60, 1144, 1131, 1178, 1188, 1185, 1186, 1400,
	1184, 430, 1485, 1424, 628, 1402, 1484, 1483, 902, 1170,
	1518, 453, 1391, 442, 1110, 47, 67, 66, 731, 732,
	56, 57, 45, 435, 1205, 1244, 1131, 1204, 1713, 1311,
	719, 945, 1241, 1195, 1198, 635, 1689, 1708, 1579, 1491,
	652, 1281, 880, 663, 1426, 1043, 1254, 49, 50, 1233,
	51, 52, 53, 54, 1099, 665, 1777, 807, 744, 1778,
	645, 1776, 1660, 1658, 1322, 659, 1387, 1388, 1389, 712,
	713, 714, 715, 716, 709, 1677, 709, 719, 651, 719,
	217, 218, 219, 940, 1190, 217, 218, 219, 699, 451,
	630, 631, 1428, 451, 1432, 640, 1427, 65, 1425, 451,
	697, 698, 696, 1430, 451, 647, 1189, 696, 653, 632,
	1668, 633, 1429, 975, 634, 94, 86, 1370, 699, 1442,
	1130, 1472, 905, 699, 94, 1431, 1433, 973, 974, 972,
	899, 1401, 834, 1399, 692, 1025, 94, 94, 1390, 1510,
	946, 65, 1346, 1395, 1392, 1383, 1393, 1386, 1698, 1382,
	680, 1194, 1130, 1384, 1385, 87, 800, 731, 732, 1025,
	1604, 1251, 1603, 688, 731, 732, 1196, 1394, 717, 718,
	710, 711, 712, 713, 714, 715, 716, 709, 693, 694,
	719, 1524, 1048, 1049, 650, 666, 1134, 618, 619, 698,
	696, 1045, 941, 1135, 681, 1757, 963, 965, 966, 1749,
	641, 642, 643, 964, 660, 661, 699, 708, 707, 717,
	718, 710, 711, 712, 713, 714, 715, 716, 709, 1360,
	670, 719, 1758, 1448, 1359, 1173, 1750, 729, 710, 711,
	712, 713, 714, 715, 716, 709, 1784, 94, 719, 691,
	451, 784, 451, 451, 689, 94, 783, 690, 782, 1760,
	1759, 94, 573, 1044, 1751, 1741, 451, 697, 698, 696,
	892, 1218, 1219, 1220, 1226, 63, 747, 898, 1240, 900,
	451, 1449, 697, 698, 696, 699, 1723, 971, 1629, 451,
	94, 94, 94, 697, 698, 696, 451, 812, 1601, 451,
	699, 1444, 451, 923, 924, 1567, 451, 1525, 94, 1450,
	1371, 699, 1785, 94, 94, 94, 451, 94, 94, 1357,
	762, 764, 766, 768, 770, 772, 773, 785, 94, 94,
	938, 763, 765, 1361, 769, 771, 929, 774, 797, 930,
	906, 733, 734, 735, 736, 737, 738, 739, 740, 741,
	742, 697, 698, 696, 626, 697, 698, 696, 829, 927,
	908, 909, 910, 1471, 217, 218, 219, 1239, 993, 699,
	1095, 589, 561, 699, 1665, 1238, 1656, 1761, 928, 1664,
	992, 1725, 573, 932, 933, 934, 1373, 936, 937, 994,
	1132, 948, 1574, 969, 697, 698, 696, 695, 942, 943,
	63, 72, 919, 94, 1667, 522, 521, 524, 525, 526,
	527, 1514, 699, 95, 523, 528, 1656, 1706, 452, 1656,
	573, 452, 1068, 947, 1013, 1016, 95, 1330, 452, 1102,
	1026, 1096, 950, 1656, 1690, 599, 94, 94, 970, 1098,
	1008, 795, 594, 1742, 1003, 217, 218, 219, 1459, 1329,
	217, 218, 219, 591, 592, 94, 95, 1471, 1004, 95,
	452, 95, 451, 1656, 1655, 94, 74, 1038, 573, 451,
	1067, 451, 747, 895, 1594, 1581, 573, 1050, 573, 451,
	451, 451, 1257, 995, 996, 1577, 573, 94, 1516, 1515,
	94, 1005, 1512, 1513, 1512, 1511, 1277, 1034, 1035, 1056,
	573, 94, 94, 1277, 1083, 1068, 573, 1062, 708, 707,
	717, 718, 710, 711, 712, 713, 714, 715, 716, 709,
	1068, 1004, 719, 695, 573, 895, 894, 1095, 841, 840,
	31, 1056, 1145, 1146, 1147, 967, 1256, 566, 976, 977,
	978, 979, 980, 981, 982, 983, 984, 985, 986, 987,
	988, 989, 990, 1057, 1129, 1284, 94, 1058, 1316, 94,
	1056, 94, 1060, 1177, 1068, 1094, 1094, 1100, 1197, 1097,
	1046, 1471, 451, 451, 451, 451, 451, 1285, 451, 451,
	1160, 1117, 451, 94, 1092, 1002, 1101, 31, 1096, 917,
	826, 31, 1618, 1586, 897, 1030, 1094, 1159, 1503, 893,
	451, 1334, 1606, 1155, 63, 1161, 451, 451, 451, 1149,
	1148, 63, 451, 94, 1009, 1010, 88, 1405, 1015, 1018,
	1019, 1138, 1056, 1139, 1140, 1141, 1142, 1610, 1366, 1174,
	1365, 1176, 1211, 625, 1640, 1172, 1215, 1619, 1171, 1150,
	1151, 1152, 1153, 1033, 1156, 1157, 1036, 1037, 1002, 1607,
	1608, 1609, 1375, 1209, 1475, 1476, 1770, 1481, 1766, 1526,
	1505, 63, 1478, 969, 1459, 63, 951, 599, 921, 1480,
	599, 1611, 1612, 1301, 1366, 1299, 1298, 703, 1302, 706,
	1300, 1114, 1297, 1746, 1728, 720, 721, 722, 723, 724,
	725, 726, 1235, 704, 705, 702, 708, 707, 717, 718,
	710, 711, 712, 713, 714, 715, 716, 709, 970, 1221,
	719, 1303, 1451, 1077, 1078, 1266, 1029, 794, 451, 1744,
	1578, 1275, 1274, 1263, 1718, 1715, 1748, 1732, 579, 451,
	451, 451, 451, 451, 1734, 1270, 1264, 579, 1740, 1291,
	1234, 451, 580, 1739, 1265, 451, 1686, 564, 433, 451,
	1286, 580, 1684, 562, 451, 451, 1372, 1365, 451, 451,
	451, 1250, 1352, 1279, 839, 798, 799, 582, 648, 581,
	1308, 1328, 787, 94, 576, 577, 582, 1345, 581, 1021,
	1269, 1282, 1335, 1700, 788, 1331, 1278, 1341, 1341, 1699,
	1638, 437, 572, 1022, 1343, 1336, 1572, 1614, 1041, 1317,
	1175, 1293, 1294, 1319, 1296, 1048, 1049, 1222, 1223, 1224,
	920, 452, 1304, 927, 1314, 452, 1349, 1350, 1280, 1292,
	1315, 452, 1295, 1081, 1323, 1320, 452, 1273, 1368, 567,
	568, 570, 1342, 1753, 1752, 1272, 1737, 95, 1719, 451,
	1571, 1333, 571, 74, 1570, 1454, 95, 1351, 1277, 1353,
	1354, 1355, 1337, 1338, 1339, 676, 1772, 1771, 95, 95,
	1566, 1245, 1242, 808, 801, 1230, 1231, 1772, 1687, 94,
	1358, 1073, 1076, 1077, 1078, 1074, 1599, 1075, 1079, 1380,
	1042, 1367, 566, 72, 77, 69, 1248, 1, 472, 1764,
	1535, 1615, 1187, 1701, 94, 1362, 1165, 1396, 1120, 1111,
	992, 708, 707, 717, 718, 710, 711, 712, 713, 714,
	715, 716, 709, 85, 604, 719, 84, 662, 1119, 1118,
	1422, 1657, 1347, 1136, 1597, 1504, 1344, 1421, 1697, 847,
	1411, 845, 451, 1413, 1412, 846, 844, 849, 848, 1410,
	1434, 1441, 94, 1435, 843, 465, 952, 482, 94, 94,
	1080, 1419, 1460, 1114, 1003, 835, 1291, 802, 1398, 95,
	1397, 1183, 452, 1517, 452, 452, 1457, 95, 1004, 1133,
	462, 671, 467, 95, 94, 727, 1463, 451, 452, 1271,
	1324, 600, 593, 1465, 1374, 620, 1738, 1716, 1714, 1683,
	1479, 94, 452, 94, 1634, 94, 1717, 1681, 1341, 1341,
	1341, 452, 95, 95, 95, 1496, 1747, 1470, 452, 1731,
	1040, 452, 790, 1509, 452, 1569, 534, 30, 452, 1453,
	95, 1249, 1488, 756, 1495, 95, 95, 95, 452, 95,
	95, 1023, 1497, 1487, 1498, 1489, 94, 1490, 1486, 817,
	95, 95, 1500, 1501, 1502, 505, 962, 30, 1129, 520,
	517, 518, 1051, 1507, 1508, 1283, 1521, 90, 451, 701,
	1415, 1416, 1522, 1523, 94, 503, 1536, 94, 94, 94,
	451, 1520, 497, 816, 1420, 1436, 1437, 1528, 1438, 1439,
	809, 1072, 1070, 1069, 822, 1477, 1565, 1473, 565, 815,
	1446, 1447, 1529, 1055, 1531, 1445, 903, 1377, 624, 1541,
	1542, 575, 434, 1020, 1675, 1545, 1562, 574, 55, 34,
	487, 684, 583, 28, 23, 95, 22, 1550, 21, 20,
	19, 25, 1420, 18, 17, 16, 1568, 708, 707, 717,
	718, 710, 711, 712, 713, 714, 715, 716, 709, 40,
	39, 719, 636, 1291, 38, 27, 26, 15, 95, 95,
	1573, 14, 13, 12, 1583, 11, 94, 10, 9, 5,
	4, 687, 24, 1582, 94, 745, 2, 95, 1331, 0,
	0, 1114, 0, 1114, 452, 0, 0, 95, 0, 1506,
	1592, 452, 0, 452, 0, 0, 0, 451, 1600, 0,
	1602, 452, 452, 452, 0, 94, 0, 1547, 1548, 95,
	1549, 0, 95, 1551, 0, 1553, 1593, 0, 0, 1622,
	0, 0, 0, 95, 95, 0, 1073, 1076, 1077, 1078,
	1074, 0, 1075, 1079, 0, 1621, 1475, 1476, 0, 0,
	1620, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	94, 0, 94, 0, 1632, 0, 1628, 94, 1543, 94,
	94, 94, 451, 1637, 1643, 1639, 0, 1647, 0, 1648,
	1650, 1651, 1641, 0, 0, 1463, 1646, 0, 95, 1463,
	1652, 95, 0, 95, 1654, 0, 1653, 1661, 0, 94,
	451, 0, 0, 0, 452, 452, 452, 452, 452, 1669,
	452, 452, 0, 0, 452, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 1662, 0, 1663, 0, 0, 0,
	0, 0, 452, 0, 0, 0, 1688, 94, 452, 452,
	452, 0, 0, 0, 452, 95, 1694, 0, 94, 94,
	0, 1463, 0, 0, 0, 0, 1114, 0, 0, 0,
	0, 1705, 1704, 217, 218, 219, 0, 0, 0, 0,
	94, 1711, 0, 0, 0, 1720, 451, 0, 0, 1291,
	586, 0, 0, 0, 94, 0, 0, 0, 0, 0,
	0, 0, 1727, 0, 0, 1617, 0, 0, 0, 1736,
	1735, 0, 0, 0, 0, 0, 0, 0, 0, 1743,
	0, 1623, 1624, 1625, 1626, 1627, 1745, 454, 0, 1630,
	1631, 0, 0, 94, 0, 0, 457, 0, 0, 0,
	0, 0, 0, 1754, 466, 0, 0, 0, 0, 0,
	0, 0, 496, 0, 0, 0, 0, 1769, 0, 0,
	452, 0, 0, 0, 1780, 0, 0, 0, 0, 0,
	0, 452, 452, 452, 452, 452, 0, 0, 464, 0,
	0, 0, 0, 452, 471, 0, 0, 452, 0, 0,
	0, 452, 1006, 1007, 0, 0, 452, 452, 0, 0,
	452, 452, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 1560, 0, 0, 95, 0, 0, 0, 0,
	90, 0, 0, 0, 0, 455, 0, 0, 0, 0,
	0, 1039, 0, 0, 30, 0, 0, 1559, 1617, 1114,
	0, 0, 0, 0, 0, 0, 0, 728, 730, 0,
	0, 0, 468, 458, 1558, 469, 470, 477, 0, 0,
	0, 461, 463, 474, 459, 460, 479, 478, 0, 456,
	476, 475, 0, 0, 0, 0, 0, 0, 743, 0,
	0, 452, 748, 749, 750, 751, 752, 753, 754, 755,
	0, 758, 761, 761, 761, 767, 761, 761, 767, 761,
	775, 776, 777, 778, 779, 780, 781, 0, 0, 0,
	0, 95, 30, 0, 708, 707, 717, 718, 710, 711,
	712, 713, 714, 715, 716, 709, 0, 0, 719, 0,
	0, 1773, 0, 0, 0, 0, 95, 0, 818, 708,
	707, 717, 718, 710, 711, 712, 713, 714, 715, 716,
	709, 0, 0, 719, 0, 0, 708, 707, 717, 718,
	710, 711, 712, 713, 714, 715, 716, 709, 0, 0,
	719, 0, 0, 0, 452, 0, 90, 90, 90, 0,
	0, 0, 0, 1557, 95, 531, 0, 0, 0, 0,
	95, 95, 0, 0, 90, 0, 0, 0, 0, 90,
	90, 90, 0, 90, 90, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 90, 90, 95, 0, 0, 452,
	0, 0, 0, 0, 0, 0, 92, 0, 0, 0,
	0, 0, 0, 95, 0, 95, 0, 95, 0, 484,
	0, 1228, 0, 0, 0, 1229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1236, 1237, 0, 0,
	0, 0, 1243, 0, 0, 1246, 1247, 0, 0, 92,
	0, 0, 608, 1253, 615, 0, 0, 1255, 95, 0,
	1258, 1259, 1260, 1261, 1262, 708, 707, 717, 718, 710,
	711, 712, 713, 714, 715, 716, 709, 1414, 0, 719,
	452, 0, 0, 0, 0, 0, 95, 0, 0, 95,
	95, 95, 452, 1227, 0, 0, 0, 708, 707, 717,
	718, 710, 711, 712, 713, 714, 715, 716, 709, 1306,
	1307, 719, 0, 708, 707, 717, 718, 710, 711, 712,
	713, 714, 715, 716, 709, 0, 0, 719, 708, 707,
	717, 718, 710, 711, 712, 713, 714, 715, 716, 709,
	0, 0, 719, 0, 0, 1084, 707, 717, 718, 710,
	711, 712, 713, 714, 715, 716, 709, 0, 0, 719,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 700,
	0, 0, 0, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 95, 0, 819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 496, 0, 0, 0, 452,
	0, 0, 0, 0, 757, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 90, 0, 90, 0, 0,
	0, 0, 0, 0, 449, 0, 0, 0, 0, 0,
	0, 789, 792, 0, 486, 0, 0, 0, 0, 90,
	0, 0, 0, 0, 0, 0, 0, 1417, 1418, 0,
	95, 0, 95, 0, 95, 0, 0, 0, 0, 95,
	0, 95, 95, 95, 452, 0, 612, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 95, 452, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1466, 0, 0, 0, 0, 0,
	0, 0, 931, 0, 0, 0, 0, 0, 0, 1232,
	0, 0, 565, 0, 0, 1482, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 949, 0, 0,
	95, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 958, 959, 960, 961,
	0, 0, 95, 0, 0, 0, 0, 0, 452, 0,
	0, 0, 0, 0, 818, 0, 95, 0, 0, 0,
	0, 1287, 1288, 0, 0, 818, 818, 818, 818, 818,
	0, 0, 0, 0, 0, 0, 0, 0, 532, 0,
	0, 1084, 0, 1313, 0, 0, 0, 0, 0, 0,
	818, 1011, 1012, 0, 818, 95, 0, 0, 0, 0,
	92, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 1544, 0, 0, 0,
	1546, 683, 685, 0, 450, 0, 0, 480, 0, 0,
	0, 1555, 1556, 0, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 587, 587, 0,
	0, 1575, 1576, 0, 0, 1580, 450, 0, 0, 0,
	0, 0, 0, 0, 0, 1108, 0, 0, 0, 0,
	0, 0, 0, 1591, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 90, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 805, 0, 0, 0, 0, 0, 0, 0,
	92, 0, 0, 0, 1163, 0, 836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 92, 92, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1464, 92, 30, 1649, 0, 0, 92, 92,
	92, 0, 92, 92, 0, 0, 0, 629, 0, 0,
	0, 637, 0, 92, 92, 0, 0, 644, 0, 0,
	0, 0, 646, 818, 0, 0, 0, 0, 0, 0,
	1671, 1672, 1673, 1674, 0, 1678, 0, 1679, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1691, 0, 1692, 1693, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1252, 0, 0, 0,
	0, 0, 1707, 0, 0, 0, 0, 0, 997, 0,
	92, 0, 0, 0, 0, 1267, 1268, 792, 0, 0,
	0, 0, 0, 0, 1027, 0, 0, 0, 1724, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1031, 1032, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1052, 0, 0, 0, 0, 0, 0, 1561, 0, 0,
	805, 0, 0, 92, 0, 0, 0, 0, 811, 0,
	0, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 0, 842, 92, 0, 0, 0, 0,
	1781, 1782, 0, 0, 0, 0, 92, 608, 901, 0,
	1588, 1589, 1590, 0, 0, 0, 0, 907, 0, 0,
	0, 0, 0, 0, 916, 0, 0, 823, 0, 0,
	922, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 935, 0, 0, 450, 0, 0,
	0, 450, 0, 0, 0, 0, 0, 450, 0, 0,
	0, 615, 450, 0, 92, 0, 92, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1464, 0, 30, 0, 1464, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1217, 0,
	0, 0, 1443, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1666, 0, 0, 0, 0, 0, 0, 1455, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1464, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 587, 0, 0, 0, 0, 0,
	1059, 0, 0, 0, 0, 0, 0, 1063, 450, 1066,
	450, 825, 0, 0, 0, 0, 0, 0, 0, 1091,
	0, 0, 0, 0, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 0, 0, 1027, 0, 0, 0, 450, 0, 0,
	0, 0, 0, 0, 450, 0, 0, 450, 0, 0,
	450, 0, 0, 0, 926, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1199, 1200, 1201, 1202, 1203, 0, 1206, 1207, 0, 0,
	1208, 0, 0, 0, 0, 1564, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1210, 0,
	0, 0, 0, 0, 0, 496, 1214, 0, 0, 0,
	1216, 0, 0, 1584, 0, 0, 1585, 0, 0, 1587,
	0, 0, 587, 926, 0, 0, 0, 587, 587, 0,
	0, 587, 587, 587, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 0, 92, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 587, 587, 587, 587,
	587, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 0, 0, 0, 0, 0, 926, 450, 0, 450,
	92, 0, 0, 0, 0, 0, 0, 450, 1089, 450,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1636, 496, 0, 0, 0, 0, 92, 0, 0,
	1027, 0, 0, 1467, 1469, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1469,
	0, 0, 0, 1318, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 0, 92, 0,
	615, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 450, 450, 450, 450, 0, 450, 450, 0, 0,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1527, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 0, 0, 0, 1212, 1213, 450, 0, 0, 0,
	450, 0, 0, 0, 0, 0, 0, 1376, 0, 1532,
	0, 0, 1537, 1538, 1539, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 587, 587,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 587,
	0, 0, 0, 0, 0, 0, 0, 1027, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1452, 92, 0, 0, 0, 587, 450, 0, 0, 1596,
	0, 0, 0, 0, 0, 0, 1028, 450, 450, 450,
	450, 450, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 450, 0, 0, 0, 1089, 0, 0,
	92, 0, 450, 450, 0, 0, 450, 1321, 926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1642, 0, 1644, 0, 1645, 0, 0,
	0, 0, 1596, 0, 1596, 1596, 1596, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1596, 0, 1530, 450, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1540, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 92, 0, 0, 0, 0, 0,
	0, 587, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1027, 0, 1721, 0, 0, 0, 0,
	0, 0, 0, 926, 0, 0, 0, 0, 0, 1726,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1596, 0,
	0, 0, 0, 0, 0, 1613, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 0, 1670, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1028, 0, 0, 0, 1722, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1028, 0, 0, 0,
	0, 203, 191, 0, 450, 147, 206, 120, 137, 214,
	138, 141, 178, 104, 160, 326, 135, 0, 124, 99,
	131, 100, 122, 149, 256, 153, 119, 193, 163, 205,
	291, 0, 125, 338, 180, 370, 247, 299, 297, 392,
	261, 257, 255, 246, 278, 304, 337, 388, 331, 212,
	294, 169, 0, 379, 313, 0, 0, 0, 151, 195,
	158, 188, 146, 179, 109, 168, 207, 136, 176, 208,
	282, 245, 224, 323, 380, 263, 0, 0, 0, 217,
	218, 219, 0, 1115, 1116, 0, 0, 0, 0, 0,
	241, 0, 173, 202, 133, 175, 177, 216, 98, 170,
	0, 102, 105, 213, 198, 128, 129, 1332, 0, 0,
	0, 0, 0, 0, 150, 159, 185, 144, 0, 0,
	0, 0, 0, 0, 0, 0, 126, 0, 167, 0,
	0, 0, 106, 103, 0, 0, 0, 0, 148, 0,
	0, 0, 108, 0, 127, 186, 0, 96, 268, 190,
	197, 145, 415, 201, 143, 142, 204, 349, 0, 384,
	272, 290, 237, 287, 221, 232, 0, 270, 322, 357,
	361, 194, 123, 132, 248, 130, 359, 335, 405, 166,
	339, 358, 295, 394, 350, 404, 416, 417, 389, 413,
	425, 233, 251, 329, 385, 408, 376, 0, 312, 391,
	286, 300, 375, 225, 387, 402, 242, 369, 0, 0,
	0, 227, 400, 383, 310, 283, 284, 226, 0, 355,
	254, 266, 250, 325, 397, 398, 249, 428, 234, 412,
	229, 235, 411, 318, 393, 401, 311, 303, 228, 399,
	309, 302, 289, 260, 274, 347, 298, 348, 275, 315,
	314, 316, 0, 101, 0, 381, 409, 429, 239, 118,
	390, 421, 424, 0, 351, 240, 267, 259, 346, 265,
	292, 420, 422, 423, 317, 236, 277, 377, 288, 296,
	354, 427, 334, 360, 243, 407, 378, 113, 117, 111,
	112, 161, 162, 114, 209, 210, 211, 187, 107, 0,
	115, 116, 0, 192, 199, 200, 165, 220, 230, 293,
	426, 352, 264, 410, 97, 110, 253, 121, 0, 0,
	134, 139, 140, 152, 154, 155, 156, 157, 164, 171,
	172, 174, 181, 182, 183, 184, 189, 196, 215, 222,
	223, 231, 238, 244, 252, 258, 262, 269, 273, 276,
	279, 280, 281, 285, 301, 305, 306, 307, 308, 319,
	320, 321, 324, 327, 328, 330, 332, 333, 336, 340,
	341, 342, 343, 344, 345, 353, 356, 362, 363, 364,
	365, 366, 367, 368, 371, 372, 373, 374, 382, 386,
	395, 396, 406, 414, 418, 271, 403, 419, 203, 191,
	0, 0, 147, 206, 120, 137, 214, 138, 141, 178,
	104, 160, 326, 135, 0, 124, 99, 131, 100, 122,
	149, 256, 153, 119, 193, 163, 205, 291, 0, 125,
	338, 180, 370, 247, 299, 297, 392, 261, 257, 255,
	246, 278, 304, 337, 388, 331, 212, 294, 169, 0,
	379, 313, 0, 0, 0, 151, 195, 158, 188, 146,
	179, 109, 168, 207, 136, 176, 208, 282, 245, 224,
	323, 380, 263, 0, 0, 0, 217, 218, 219, 0,
	1115, 1116, 0, 0, 0, 0, 0, 241, 0, 173,
	202, 133, 175, 177, 216, 98, 170, 0, 102, 105,
	213, 198, 128, 129, 0, 0, 0, 0, 0, 0,
	0, 150, 159, 185, 144, 0, 0, 0, 0, 0,
	0, 0, 0, 126, 0, 167, 0, 0, 0, 106,
	103, 0, 0, 0, 0, 148, 0, 0, 0, 108,
	0, 127, 186, 0, 96, 268, 190, 197, 145, 415,
	201, 143, 142, 204, 349, 0, 384, 272, 290, 237,
	287, 221, 232, 0, 270, 322, 357, 361, 194, 123,
	132, 248, 130, 359, 335, 405, 166, 339, 358, 295,
	394, 350, 404, 416, 417, 389, 413, 425, 233, 251,
	329, 385, 408, 376, 0, 312, 391, 286, 300, 375,
	225, 387, 402, 242, 369, 0, 0, 0, 227, 400,
	383, 310, 283, 284, 226, 0, 355, 254, 266, 250,
	325, 397, 398, 249, 428, 234, 412, 229, 235, 411,
	318, 393, 401, 311, 303, 228, 399, 309, 302, 289,
	260, 274, 347, 298, 348, 275, 315, 314, 316, 0,
	101, 0, 381, 409, 429, 239, 118, 390, 421, 424,
	0, 351, 240, 267, 259, 346, 265, 292, 420, 422,
	423, 317, 236, 277, 377, 288, 296, 354, 427, 334,
	360, 243, 407, 378, 113, 117, 111, 112, 161, 162,
	114, 209, 210, 211, 187, 107, 0, 115, 116, 0,
	192, 199, 200, 165, 220, 230, 293, 426, 352, 264,
	410, 97, 110, 253, 121, 0, 0, 134, 139, 140,
	152, 154, 155, 156, 157, 164, 171, 172, 174, 181,
	182, 183, 184, 189, 196, 215, 222, 223, 231, 238,
	244, 252, 258, 262, 269, 273, 276, 279, 280, 281,
	285, 301, 305, 306, 307, 308, 319, 320, 321, 324,
	327, 328, 330, 332, 333, 336, 340, 341, 342, 343,
	344, 345, 353, 356, 362, 363, 364, 365, 366, 367,
	368, 371, 372, 373, 374, 382, 386, 395, 396, 406,
	414, 418, 271, 403, 419, 203, 191, 0, 0, 147,
	206, 120, 137, 214, 138, 141, 178, 104, 160, 326,
	135, 0, 124, 99, 131, 100, 122, 149, 256, 153,
	119, 193, 163, 205, 291, 0, 125, 338, 180, 370,
	247, 299, 297, 392, 261, 257, 255, 246, 278, 304,
	337, 388, 331, 212, 294, 169, 0, 379, 313, 0,
	0, 0, 151, 195, 158, 188, 146, 179, 109, 168,
	207, 136, 176, 208, 282, 245, 224, 323, 380, 263,
	0, 0, 0, 217, 218, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 173, 202, 133, 175,
	177, 216, 98, 170, 0, 102, 105, 213, 198, 128,
	129, 0, 0, 0, 0, 0, 0, 0, 150, 159,
	185, 144, 0, 0, 0, 0, 0, 0, 1456, 0,
	126, 0, 167, 0, 0, 0, 106, 103, 0, 0,
	0, 0, 148, 0, 0, 0, 108, 0, 127, 186,
	0, 96, 268, 190, 197, 145, 415, 201, 143, 142,
	204, 349, 0, 384, 272, 290, 237, 287, 221, 232,
	0, 270, 322, 357, 361, 194, 123, 132, 248, 130,
	359, 335, 405, 166, 339, 358, 295, 394, 350, 404,
	416, 417, 389, 413, 425, 233, 251, 329, 385, 408,
	376, 0, 312, 391, 286, 300, 375, 225, 387, 402,
	242, 369, 0, 0, 0, 227, 400, 383, 310, 283,
	284, 226, 0, 355, 254, 266, 250, 325, 397, 398,
	249, 428, 234, 412, 229, 235, 411, 318, 393, 401,
	311, 303, 228, 399, 309, 302, 289, 260, 274, 347,
	298, 348, 275, 315, 314, 316, 0, 101, 0, 381,
	409, 429, 239, 118, 390, 421, 424, 0, 351, 240,
	267, 259, 346, 265, 292, 420, 422, 423, 317, 236,
	277, 377, 288, 296, 354, 427, 334, 360, 243, 407,
	378, 113, 117, 111, 112, 161, 162, 114, 209, 210,
	211, 187, 107, 0, 115, 116, 0, 192, 199, 200,
	165, 220, 230, 293, 426, 352, 264, 410, 97, 110,
	253, 121, 0, 0, 134, 139, 140, 152, 154, 155,
	156, 157, 164, 171, 172, 174, 181, 182, 183, 184,
	189, 196, 215, 222, 223, 231, 238, 244, 252, 258,
	262, 269, 273, 276, 279, 280, 281, 285, 301, 305,
	306, 307, 308, 319, 320, 321, 324, 327, 328, 330,
	332, 333, 336, 340, 341, 342, 343, 344, 345, 353,
	356, 362, 363, 364, 365, 366, 367, 368, 371, 372,
	373, 374, 382, 386, 395, 396, 406, 414, 418, 271,
	403, 419, 203, 191, 0, 0, 147, 206, 120, 137,
	214, 138, 141, 178, 104, 160, 326, 135, 0, 124,
	99, 131, 100, 122, 149, 256, 153, 119, 193, 163,
	205, 291, 0, 125, 338, 180, 370, 247, 299, 297,
	392, 261, 257, 255, 246, 278, 304, 337, 388, 331,
	212, 294, 169, 0, 379, 313, 0, 0, 0, 151,
	195, 158, 188, 146, 179, 109, 168, 207, 136, 176,
	208, 282, 245, 224, 323, 380, 263, 63, 0, 0,
	217, 218, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 173, 202, 133, 175, 177, 216, 98,
	170, 0, 102, 105, 213, 198, 128, 129, 0, 0,
	0, 0, 0, 0, 0, 150, 159, 185, 144, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 167,
	0, 0, 0, 106, 103, 0, 0, 0, 0, 148,
	0, 0, 0, 108, 0, 127, 186, 0, 96, 268,
	190, 197, 145, 415, 201, 143, 142, 204, 349, 0,
	384, 272, 290, 237, 287, 221, 232, 0, 270, 322,
	357, 361, 194, 123, 132, 248, 130, 359, 335, 405,
	166, 339, 358, 295, 394, 350, 404, 416, 417, 389,
	413, 425, 233, 251, 329, 385, 408, 376, 0, 312,
	391, 286, 300, 375, 225, 387, 402, 242, 369, 0,
	0, 0, 227, 400, 383, 310, 283, 284, 226, 0,
	355, 254, 266, 250, 325, 397, 398, 249, 428, 234,
	412, 229, 235, 411, 318, 393, 401, 311, 303, 228,
	399, 309, 302, 289, 260, 274, 347, 298, 348, 275,
	315, 314, 316, 0, 101, 0, 381, 409, 429, 239,
	118, 390, 421, 424, 0, 351, 240, 267, 259, 346,
	265, 292, 420, 422, 423, 317, 236, 277, 377, 288,
	296, 354, 427, 334, 360, 243, 407, 378, 113, 117,
	111, 112, 161, 162, 114, 209, 210, 211, 187, 107,
	0, 115, 116, 0, 192, 199, 200, 165, 220, 230,
	293, 426, 352, 264, 410, 97, 110, 253, 121, 0,
	0, 134, 139, 140, 152, 154, 155, 156, 157, 164,
	171, 172, 174, 181, 182, 183, 184, 189, 196, 215,
	222, 223, 231, 238, 244, 252, 258, 262, 269, 273,
	276, 279, 280, 281, 285, 301, 305, 306, 307, 308,
	319, 320, 321, 324, 327, 328, 330, 332, 333, 336,
	340, 341, 342, 343, 344, 345, 353, 356, 362, 363,
	364, 365, 366, 367, 368, 371, 372, 373, 374, 382,
	386, 395, 396, 406, 414, 418, 271, 403, 419, 203,
	191, 0, 0, 147, 206, 120, 137, 214, 138, 141,
	178, 104, 160, 326, 135, 0, 124, 99, 131, 100,
	122, 149, 256, 153, 119, 193, 163, 205, 291, 0,
	125, 338, 180, 370, 247, 299, 297, 392, 261, 257,
	255, 246, 278, 304, 337, 388, 331, 212, 294, 169,
	0, 379, 313, 0, 0, 0, 151, 195, 158, 188,
	146, 179, 109, 168, 207, 136, 176, 208, 282, 245,
	224, 323, 380, 263, 0, 0, 0, 217, 218, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	173, 202, 133, 175, 177, 216, 98, 170, 0, 102,
	105, 213, 198, 128, 129, 0, 0, 0, 0, 0,
	0, 0, 150, 159, 185, 144, 0, 0, 0, 0,
	0, 0, 1322, 0, 126, 0, 167, 0, 0, 0,
	106, 103, 0, 0, 0, 0, 148, 0, 0, 0,
	108, 0, 127, 186, 0, 96, 268, 190, 197, 145,
	415, 201, 143, 142, 204, 349, 0, 384, 272, 290,
	237, 287, 221, 232, 0, 270, 322, 357, 361, 194,
	123, 132, 248, 130, 359, 335, 405, 166, 339, 358,
	295, 394, 350, 404, 416, 417, 389, 413, 425, 233,
	251, 329, 385, 408, 376, 0, 312, 391, 286, 300,
	375, 225, 387, 402, 242, 369, 0, 0, 0, 227,
	400, 383, 310, 283, 284, 226, 0, 355, 254, 266,
	250, 325, 397, 398, 249, 428, 234, 412, 229, 235,
	411, 318, 393, 401, 311, 303, 228, 399, 309, 302,
	289, 260, 274, 347, 298, 348, 275, 315, 314, 316,
	0, 101, 0, 381, 409, 429, 239, 118, 390, 421,
	424, 0, 351, 240, 267, 259, 346, 265, 292, 420,
	422, 423, 317, 236, 277, 377, 288, 296, 354, 427,
	334, 360, 243, 407, 378, 113, 117, 111, 112, 161,
	162, 114, 209, 210, 211, 187, 107, 0, 115, 116,
	0, 192, 199, 200, 165, 220, 230, 293, 426, 352,
	264, 410, 97, 110, 253, 121, 0, 0, 134, 139,
	140, 152, 154, 155, 156, 157, 164, 171, 172, 174,
	181, 182, 183, 184, 189, 196, 215, 222, 223, 231,
	238, 244, 252, 258, 262, 269, 273, 276, 279, 280,
	281, 285, 301, 305, 306, 307, 308, 319, 320, 321,
	324, 327, 328, 330, 332, 333, 336, 340, 341, 342,
	343, 344, 345, 353, 356, 362, 363, 364, 365, 366,
	367, 368, 371, 372, 373, 374, 382, 386, 395, 396,
	406, 414, 418, 271, 403, 419, 203, 191, 0, 0,
	147, 206, 120, 137, 214, 138, 141, 178, 104, 160,
	326, 135, 0, 124, 99, 131, 100, 122, 149, 256,
	153, 119, 193, 163, 205, 291, 0, 125, 338, 180,
	370, 247, 299, 297, 392, 261, 257, 255, 246, 278,
	304, 337, 388, 331, 212, 294, 169, 0, 379, 313,
	0, 0, 0, 151, 195, 158, 188, 146, 179, 109,
	168, 207, 136, 176, 208, 282, 245, 224, 323, 380,
	263, 0, 0, 0, 217, 218, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 173, 202, 133,
	175, 177, 216, 98, 170, 0, 102, 105, 213, 198,
	128, 129, 0, 0, 0, 0, 0, 0, 0, 150,
	159, 185, 144, 0, 0, 0, 0, 0, 0, 1061,
	0, 126, 0, 167, 0, 0, 0, 106, 103, 0,
	0, 0, 0, 148, 0, 0, 0, 108, 0, 127,
	186, 0, 96, 268, 190, 197, 145, 415, 201, 143,
	142, 204, 349, 0, 384, 272, 290, 237, 287, 221,
	232, 0, 270, 322, 357, 361, 194, 123, 132, 248,
	130, 359, 335, 405, 166, 339, 358, 295, 394, 350,
	404, 416, 417, 389, 413, 425, 233, 251, 329, 385,
	408, 376, 0, 312, 391, 286, 300, 375, 225, 387,
	402, 242, 369, 0, 0, 0, 227, 400, 383, 310,
	283, 284, 226, 0, 355, 254, 266, 250, 325, 397,
	398, 249, 428, 234, 412, 229, 235, 411, 318, 393,
	401, 311, 303, 228, 399, 309, 302, 289, 260, 274,
	347, 298, 348, 275, 315, 314, 316, 0, 101, 0,
	381, 409, 429, 239, 118, 390, 421, 424, 0, 351,
	240, 267, 259, 346, 265, 292, 420, 422, 423, 317,
	236, 277, 377, 288, 296, 354, 427, 334, 360, 243,
	407, 378, 113, 117, 111, 112, 161, 162, 114, 209,
	210, 211, 187, 107, 0, 115, 116, 0, 192, 199,
	200, 165, 220, 230, 293, 426, 352, 264, 410, 97,
	110, 253, 121, 0, 0, 134, 139, 140, 152, 154,
	155, 156, 157, 164, 171, 172, 174, 181, 182, 183,
	184, 189, 196, 215, 222, 223, 231, 238, 244, 252,
	258, 262, 269, 273, 276, 279, 280, 281, 285, 301,
	305, 306, 307, 308, 319, 320, 321, 324, 327, 328,
	330, 332, 333, 336, 340, 341, 342, 343, 344, 345,
	353, 356, 362, 363, 364, 365, 366, 367, 368, 371,
	372, 373, 374, 382, 386, 395, 396, 406, 414, 418,
	271, 403, 419, 203, 191, 0, 0, 147, 206, 120,
	137, 214, 138, 141, 178, 104, 160, 326, 135, 0,
	124, 99, 131, 100, 122, 149, 256, 153, 119, 193,
	163, 205, 291, 0, 125, 338, 180, 370, 247, 299,
	297, 392, 261, 257, 255, 246, 278, 304, 337, 388,
	331, 212, 294, 169, 0, 379, 313, 0, 0, 0,
	151, 195, 158, 188, 146, 179, 109, 168, 207, 136,
	176, 208, 282, 245, 224, 323, 380, 263, 0, 0,
	0, 217, 218, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 173, 202, 133, 175, 177, 216,
	98, 170, 0, 102, 105, 213, 198, 128, 129, 0,
	0, 0, 0, 0, 0, 0, 150, 159, 185, 144,
	0, 0, 0, 0, 0, 0, 0, 0, 126, 0,
	167, 0, 0, 0, 106, 103, 0, 0, 0, 0,
	148, 0, 0, 0, 108, 0, 127, 186, 0, 96,
	268, 190, 197, 145, 415, 201, 143, 142, 204, 349,
	0, 384, 272, 290, 237, 287, 221, 232, 0, 270,
	322, 357, 361, 194, 123, 132, 248, 130, 359, 335,
	405, 166, 339, 358, 295, 394, 350, 404, 416, 417,
	389, 413, 425, 233, 251, 329, 385, 408, 376, 0,
	312, 391, 286, 300, 375, 225, 387, 402, 242, 369,
	0, 0, 0, 227, 400, 383, 310, 283, 284, 226,
	0, 355, 254, 266, 250, 325, 397, 398, 249, 428,
	234, 412, 229, 235, 411, 318, 393, 401, 311, 303,
	228, 399, 309, 302, 289, 260, 274, 347, 298, 348,
	275, 315, 314, 316, 0, 101, 0, 381, 409, 429,
	239, 118, 390, 421, 424, 0, 351, 240, 267, 259,
	346, 265, 292, 420, 422, 423, 317, 236, 277, 377,
	288, 296, 354, 427, 334, 360, 243, 407, 378, 113,
	117, 111, 112, 161, 162, 114, 209, 210, 211, 187,
	107, 0, 115, 116, 0, 192, 199, 200, 165, 220,
	230, 293, 426, 352, 264, 410, 97, 110, 253, 121,
	0, 0, 134, 139, 140, 152, 154, 155, 156, 157,
	164, 171, 172, 174, 181, 182, 183, 184, 189, 196,
	215, 222, 223, 231, 238, 244, 252, 258, 262, 269,
	273, 276, 279, 280, 281, 285, 301, 305, 306, 307,
	308, 319, 320, 321, 324, 327, 328, 330, 332, 333,
	336, 340, 341, 342, 343, 344, 345, 353, 356, 362,
	363, 364, 365, 366, 367, 368, 371, 372, 373, 374,
	382, 386, 395, 396, 406, 414, 418, 271, 403, 419,
	203, 191, 0, 0, 147, 206, 120, 137, 214, 138,
	141, 178, 104, 160, 326, 135, 0, 124, 99, 131,
	100, 122, 149, 256, 153, 119, 193, 163, 205, 291,
	0, 125, 338, 180, 370, 247, 299, 297, 392, 261,
	257, 255, 246, 278, 304, 337, 388, 331, 212, 294,
	169, 0, 379, 313, 0, 0, 0, 151, 195, 158,
	188, 146, 179, 109, 168, 207, 136, 176, 208, 282,
	245, 224, 323, 380, 263, 0, 0, 0, 217, 218,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 173, 202, 133, 175, 177, 216, 98, 170, 0,
	102, 105, 213, 198, 128, 129, 0, 0, 0, 0,
	0, 0, 0, 150, 159, 185, 144, 0, 0, 0,
	0, 0, 0, 0, 0, 126, 0, 167, 0, 0,
	0, 106, 103, 0, 0, 0, 0, 148, 0, 0,
	0, 108, 0, 127, 186, 0, 96, 268, 190, 197,
	145, 415, 201, 143, 142, 204, 349, 0, 384, 272,
	290, 237, 287, 221, 232, 0, 270, 322, 357, 361,
	194, 123, 132, 248, 130, 359, 335, 405, 166, 339,
	358, 295, 394, 350, 404, 416, 417, 389, 413, 425,
	233, 251, 329, 385, 408, 376, 0, 312, 391, 286,
	300, 375, 225, 387, 402, 242, 369, 0, 0, 0,
	227, 400, 383, 310, 283, 284, 226, 0, 355, 254,
	266, 250, 325, 397, 398, 249, 428, 234, 412, 229,
	602, 411, 318, 393, 401, 311, 303, 228, 399, 309,
	302, 289, 260, 274, 347, 298, 348, 275, 315, 314,
	316, 0, 101, 0, 381, 409, 429, 239, 118, 390,
	421, 424, 0, 351, 240, 267, 259, 346, 265, 292,
	420, 422, 423, 603, 601, 598, 597, 288, 296, 354,
	427, 334, 360, 243, 407, 378, 113, 117, 111, 112,
	161, 162, 114, 209, 210, 211, 187, 107, 0, 115,
	116, 0, 192, 199, 200, 165, 220, 230, 293, 426,
	352, 264, 410, 97, 110, 253, 121, 0, 0, 134,
	139, 140, 152, 154, 155, 156, 157, 164, 171, 172,
	174, 181, 182, 183, 184, 189, 196, 215, 222, 223,
	231, 238, 244, 252, 258, 262, 269, 273, 276, 279,
	280, 281, 285, 301, 305, 306, 307, 308, 319, 320,
	321, 324, 327, 328, 330, 332, 333, 336, 340, 341,
	342, 343, 344, 345, 353, 356, 362, 363, 364, 365,
	366, 367, 368, 371, 372, 373, 374, 382, 386, 395,
	396, 406, 414, 418, 271, 403, 419, 203, 191, 0,
	0, 147, 206, 120, 137, 214, 138, 141, 178, 104,
	160, 326, 135, 0, 124, 99, 131, 100, 122, 149,
	256, 153, 119, 193, 163, 205, 291, 0, 125, 338,
	180, 370, 247, 299, 297, 392, 261, 257, 255, 246,
	278, 304, 337, 388, 331, 212, 294, 169, 0, 379,
	313, 0, 0, 0, 151, 195, 158, 188, 146, 179,
	109, 168, 207, 136, 176, 208, 282, 245, 224, 323,
	380, 263, 0, 0, 0, 217, 218, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 173, 202,
	133, 175, 177, 216, 98, 170, 0, 102, 105, 213,
	198, 128, 129, 0, 0, 0, 0, 0, 0, 0,
	150, 159, 185, 144, 0, 0, 0, 0, 0, 0,
	0, 0, 126, 0, 167, 0, 0, 0, 106, 103,
	0, 0, 0, 0, 148, 0, 0, 0, 108, 0,
	127, 186, 0, 96, 268, 190, 197, 145, 415, 201,
	143, 142, 204, 349, 0, 384, 272, 290, 237, 287,
	221, 232, 0, 270, 322, 357, 361, 194, 123, 132,
	248, 130, 359, 335, 405, 166, 339, 358, 295, 394,
	350, 404, 416, 417, 389, 413, 425, 233, 251, 329,
	385, 408, 376, 0, 312, 391, 286, 300, 375, 225,
	387, 827, 242, 369, 0, 0, 0, 227, 400, 383,
	310, 283, 284, 226, 0, 355, 254, 266, 250, 325,
	397, 398, 249, 428, 234, 412, 229, 602, 411, 318,
	393, 401, 311, 303, 228, 399, 309, 302, 289, 260,
	274, 347, 298, 348, 275, 315, 314, 316, 0, 101,
	0, 381, 409, 429, 239, 118, 390, 421, 424, 0,
	351, 240, 267, 259, 346, 265, 292, 420, 422, 423,
	603, 601, 598, 597, 288, 296, 354, 427, 334, 360,
	243, 407, 378, 113, 117, 111, 112, 161, 162, 114,
	209, 210, 211, 187, 107, 0, 115, 116, 0, 192,
	199, 200, 165, 220, 230, 293, 426, 352, 264, 410,
	97, 110, 253, 121, 0, 0, 134, 139, 140, 152,
	154, 155, 156, 157, 164, 171, 172, 174, 181, 182,
	183, 184, 189, 196, 215, 222, 223, 231, 238, 244,
	252, 258, 262, 269, 273, 276, 279, 280, 281, 285,
	301, 305, 306, 307, 308, 319, 320, 321, 324, 327,
	328, 330, 332, 333, 336, 340, 341, 342, 343, 344,
	345, 353, 356, 362, 363, 364, 365, 366, 367, 368,
	371, 372, 373, 374, 382, 386, 395, 396, 406, 414,
	418, 271, 403, 419, 203, 191, 0, 0, 147, 206,
	120, 137, 214, 138, 141, 178, 104, 160, 326, 135,
	0, 124, 99, 131, 100, 122, 149, 256, 153, 119,
	193, 163, 205, 291, 0, 125, 338, 180, 370, 247,
	299, 297, 392, 261, 257, 255, 246, 278, 304, 337,
	388, 331, 212, 294, 169, 0, 379, 313, 0, 0,
	0, 151, 195, 158, 188, 146, 179, 109, 168, 207,
	136, 176, 208, 282, 245, 224, 323, 380, 263, 0,
	0, 0, 217, 218, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 173, 202, 133, 175, 177,
	216, 98, 170, 0, 102, 105, 213, 198, 128, 129,
	0, 0, 0, 0, 0, 0, 0, 150, 159, 185,
	144, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 167, 0, 0, 0, 106, 103, 0, 0, 0,
	0, 148, 0, 0, 0, 108, 0, 127, 186, 0,
	96, 268, 190, 197, 145, 415, 201, 143, 142, 204,
	349, 0, 384, 272, 290, 237, 287, 221, 232, 0,
	270, 322, 357, 361, 194, 123, 132, 248, 130, 359,
	335, 405, 166, 339, 358, 295, 394, 350, 404, 416,
	417, 389, 413, 425, 233, 251, 329, 385, 408, 376,
	0, 312, 391, 286, 300, 375, 225, 387, 595, 242,
	369, 0, 0, 0, 227, 400, 383, 310, 283, 284,
	226, 0, 355, 254, 266, 250, 325, 397, 398, 249,
	428, 234, 412, 229, 602, 411, 318, 393, 401, 311,
	303, 228, 399, 309, 302, 289, 260, 274, 347, 298,
	348, 275, 315, 314, 316, 0, 101, 0, 381, 409,
	429, 239, 118, 390, 421, 424, 0, 351, 240, 267,
	259, 346, 265, 292, 420, 422, 423, 603, 601, 598,
	597, 288, 296, 354, 427, 334, 360, 243, 407, 378,
	113, 117, 111, 112, 161, 162, 114, 209, 210, 211,
	187, 107, 0, 115, 116, 0, 192, 199, 200, 165,
	220, 230, 293, 426, 352, 264, 410, 97, 110, 253,
	121, 0, 0, 134, 139, 140, 152, 154, 155, 156,
	157, 164, 171, 172, 174, 181, 182, 183, 184, 189,
	196, 215, 222, 223, 231, 238, 244, 252, 258, 262,
	269, 273, 276, 279, 280, 281, 285, 301, 305, 306,
	307, 308, 319, 320, 321, 324, 327, 328, 330, 332,
	333, 336, 340, 341, 342, 343, 344, 345, 353, 356,
	362, 363, 364, 365, 366, 367, 368, 371, 372, 373,
	374, 382, 386, 395, 396, 406, 414, 418, 271, 403,
	419, 326, 0, 0, 999, 0, 501, 0, 0, 0,
	256, 0, 500, 0, 0, 0, 291, 0, 1000, 338,
	0, 370, 247, 299, 297, 392, 261, 257, 255, 246,
	278, 304, 337, 388, 331, 544, 294, 0, 0, 379,
	313, 0, 0, 0, 0, 0, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 245, 224, 323,
	380, 263, 63, 0, 0, 217, 218, 219, 522, 521,
	524, 525, 526, 527, 0, 0, 241, 523, 528, 529,
	530, 0, 0, 0, 0, 498, 515, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	585, 0, 0, 0, 558, 0, 514, 0, 0, 507,
	508, 510, 509, 511, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 557, 0, 0, 415, 0,
	0, 555, 0, 349, 0, 384, 272, 290, 237, 287,
	221, 232, 0, 270, 322, 357, 361, 0, 0, 0,
	248, 0, 359, 335, 405, 0, 339, 358, 295, 394,
	350, 404, 416, 417, 389, 413, 425, 233, 251, 329,
	385, 408, 376, 0, 312, 391, 286, 300, 375, 225,
	387, 402, 242, 369, 0, 0, 0, 227, 400, 383,
	310, 283, 284, 226, 0, 355, 254, 266, 250, 325,
	397, 398, 249, 428, 234, 412, 229, 235, 411, 318,
	393, 401, 311, 303, 228, 399, 309, 302, 289, 260,
	274, 347, 298, 348, 275, 315, 314, 316, 0, 0,
	0, 381, 409, 429, 239, 0, 390, 421, 424, 0,
	351, 240, 267, 259, 346, 265, 292, 420, 422, 423,
	317, 236, 277, 377, 288, 296, 354, 427, 334, 360,
	243, 407, 378, 545, 556, 551, 552, 549, 550, 0,
	548, 547, 546, 559, 537, 538, 539, 540, 542, 0,
	553, 554, 541, 220, 230, 293, 426, 352, 264, 410,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 231, 238, 244,
	252, 258, 262, 269, 273, 276, 279, 280, 281, 285,
	301, 305, 306, 307, 308, 319, 320, 321, 324, 327,
	328, 330, 332, 333, 336, 340, 341, 342, 343, 344,
	345, 353, 356, 362, 363, 364, 365, 366, 367, 368,
	371, 372, 373, 374, 382, 386, 395, 396, 406, 414,
	418, 271, 403, 419, 326, 0, 0, 0, 0, 501,
	0, 0, 0, 256, 0, 500, 0, 0, 0, 291,
	0, 0, 338, 0, 370, 247, 299, 297, 392, 261,
	257, 255, 246, 278, 304, 337, 388, 331, 544, 294,
	0, 0, 379, 313, 0, 0, 0, 0, 0, 535,
	536, 0, 0, 0, 0, 0, 0, 1106, 0, 282,
	245, 224, 323, 380, 263, 63, 0, 0, 217, 218,
	219, 522, 521, 524, 525, 526, 527, 0, 0, 241,
	523, 528, 529, 530, 1107, 0, 0, 0, 498, 515,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 558, 0, 514,
	0, 0, 507, 508, 510, 509, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 557, 0,
	0, 415, 0, 0, 555, 0, 349, 0, 384, 272,
	290, 237, 287, 221, 232, 0, 270, 322, 357, 361,
	0, 0, 0, 248, 0, 359, 335, 405, 0, 339,
	358, 295, 394, 350, 404, 416, 417, 389, 413, 425,
	233, 251, 329, 385, 408, 376, 0, 312, 391, 286,
	300, 375, 225, 387, 402, 242, 369, 0, 0, 0,
	227, 400, 383, 310, 283, 284, 226, 0, 355, 254,
	266, 250, 325, 397, 398, 249, 428, 234, 412, 229,
	235, 411, 318, 393, 401, 311, 303, 228, 399, 309,
	302, 289, 260, 274, 347, 298, 348, 275, 315, 314,
	316, 0, 0, 0, 381, 409, 429, 239, 0, 390,
	421, 424, 0, 351, 240, 267, 259, 346, 265, 292,
	420, 422, 423, 317, 236, 277, 377, 288, 296, 354,
	427, 334, 360, 243, 407, 378, 545, 556, 551, 552,
	549, 550, 0, 548, 547, 546, 559, 537, 538, 539,
	540, 542, 0, 553, 554, 541, 220, 230, 293, 426,
	352, 264, 410, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	231, 238, 244, 252, 258, 262, 269, 273, 276, 279,
	280, 281, 285, 301, 305, 306, 307, 308, 319, 320,
	321, 324, 327, 328, 330, 332, 333, 336, 340, 341,
	342, 343, 344, 345, 353, 356, 362, 363, 364, 365,
	366, 367, 368, 371, 372, 373, 374, 382, 386, 395,
	396, 406, 414, 418, 271, 403, 419, 326, 0, 0,
	0, 0, 501, 0, 0, 0, 256, 0, 500, 0,
	0, 0, 291, 0, 0, 338, 0, 370, 247, 299,
	297, 392, 261, 257, 255, 246, 278, 304, 337, 388,
	331, 544, 294, 0, 0, 379, 313, 0, 0, 0,
	0, 0, 535, 536, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 245, 224, 323, 380, 263, 63, 0,
	573, 217, 218, 219, 522, 521, 524, 525, 526, 527,
	0, 0, 241, 523, 528, 529, 530, 0, 0, 0,
	0, 498, 515, 0, 543, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 512, 513, 0, 0, 0, 0,
	558, 0, 514, 0, 0, 507, 508, 510, 509, 511,
	516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 557, 0, 0, 415, 0, 0, 555, 0, 349,
	0, 384, 272, 290, 237, 287, 221, 232, 0, 270,
	322, 357, 361, 0, 0, 0, 248, 0, 359, 335,
	405, 0, 339, 358, 295, 394, 350, 404, 416, 417,
	389, 413, 425, 233, 251, 329, 385, 408, 376, 0,
	312, 391, 286, 300, 375, 225, 387, 402, 242, 369,
	0, 0, 0, 227, 400, 383, 310, 283, 284, 226,
	0, 355, 254, 266, 250, 325, 397, 398, 249, 428,
	234, 412, 229, 235, 411, 318, 393, 401, 311, 303,
	228, 399, 309, 302, 289, 260, 274, 347, 298, 348,
	275, 315, 314, 316, 0, 0, 0, 381, 409, 429,
	239, 0, 390, 421, 424, 0, 351, 240, 267, 259,
	346, 265, 292, 420, 422, 423, 317, 236, 277, 377,
	288, 296, 354, 427, 334, 360, 243, 407, 378, 545,
	556, 551, 552, 549, 550, 0, 548, 547, 546, 559,
	537, 538, 539, 540, 542, 0, 553, 554, 541, 220,
	230, 293, 426, 352, 264, 410, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 231, 238, 244, 252, 258, 262, 269,
	273, 276, 279, 280, 281, 285, 301, 305, 306, 307,
	308, 319, 320, 321, 324, 327, 328, 330, 332, 333,
	336, 340, 341, 342, 343, 344, 345, 353, 356, 362,
	363, 364, 365, 366, 367, 368, 371, 372, 373, 374,
	382, 386, 395, 396, 406, 414, 418, 271, 403, 419,
	326, 0, 0, 0, 0, 501, 0, 0, 0, 256,
	0, 500, 0, 0, 0, 291, 0, 0, 338, 0,
	370, 247, 299, 297, 392, 261, 257, 255, 246, 278,
	304, 337, 388, 331, 544, 294, 0, 0, 379, 313,
	0, 0, 0, 0, 0, 535, 536, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 245, 224, 323, 380,
	263, 63, 0, 0, 217, 218, 219, 522, 521, 524,
	525, 526, 527, 0, 0, 241, 523, 528, 529, 530,
	0, 0, 0, 0, 498, 515, 0, 543, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 512, 513, 585,
	0, 0, 0, 558, 0, 514, 0, 0, 507, 508,
	510, 509, 511, 516, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 557, 0, 0, 415, 0, 0,
	555, 0, 349, 0, 384, 272, 290, 237, 287, 221,
	232, 0, 270, 322, 357, 361, 0, 0, 0, 248,
	0, 359, 335, 405, 0, 339, 358, 295, 394, 350,
	404, 416, 417, 389, 413, 425, 233, 251, 329, 385,
	408, 376, 0, 312, 391, 286, 300, 375, 225, 387,
	402, 242, 369, 0, 0, 0, 227, 400, 383, 310,
	283, 284, 226, 0, 355, 254, 266, 250, 325, 397,
	398, 249, 428, 234, 412, 229, 235, 411, 318, 393,
	401, 311, 303, 228, 399, 309, 302, 289, 260, 274,
	347, 298, 348, 275, 315, 314, 316, 0, 0, 0,
	381, 409, 429, 239, 0, 390, 421, 424, 0, 351,
	240, 267, 259, 346, 265, 292, 420, 422, 423, 317,
	236, 277, 377, 288, 296, 354, 427, 334, 360, 243,
	407, 378, 545, 556, 551, 552, 549, 550, 0, 548,
	547, 546, 559, 537, 538, 539, 540, 542, 0, 553,
	554, 541, 220, 230, 293, 426, 352, 264, 410, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 231, 238, 244, 252,
	258, 262, 269, 273, 276, 279, 280, 281, 285, 301,
	305, 306, 307, 308, 319, 320, 321, 324, 327, 328,
	330, 332, 333, 336, 340, 341, 342, 343, 344, 345,
	353, 356, 362, 363, 364, 365, 366, 367, 368, 371,
	372, 373, 374, 382, 386, 395, 396, 406, 414, 418,
	271, 403, 419, 326, 0, 0, 0, 0, 501, 0,
	0, 0, 256, 0, 500, 0, 0, 0, 291, 0,
	0, 338, 0, 370, 247, 299, 297, 392, 261, 257,
	255, 246, 278, 304, 337, 388, 331, 544, 294, 0,
	0, 379, 313, 0, 0, 0, 0, 0, 535, 536,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 245,
	224, 323, 380, 263, 63, 0, 0, 217, 218, 219,
	522, 1017, 524, 525, 526, 527, 0, 0, 241, 523,
	528, 529, 530, 0, 0, 0, 0, 498, 515, 0,
	543, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	512, 513, 585, 0, 0, 0, 558, 0, 514, 0,
	0, 507, 508, 510, 509, 511, 516, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 557, 0, 0,
	415, 0, 0, 555, 0, 349, 0, 384, 272, 290,
	237, 287, 221, 232, 0, 270, 322, 357, 361, 0,
	0, 0, 248, 0, 359, 335, 405, 0, 339, 358,
	295, 394, 350, 404, 416, 417, 389, 413, 425, 233,
	251, 329, 385, 408, 376, 0, 312, 391, 286, 300,
	375, 225, 387, 402, 242, 369, 0, 0, 0, 227,
	400, 383, 310, 283, 284, 226, 0, 355, 254, 266,
	250, 325, 397, 398, 249, 428, 234, 412, 229, 235,
	411, 318, 393, 401, 311, 303, 228, 399, 309, 302,
	289, 260, 274, 347, 298, 348, 275, 315, 314, 316,
	0, 0, 0, 381, 409, 429, 239, 0, 390, 421,
	424, 0, 351, 240, 267, 259, 346, 265, 292, 420,
	422, 423, 317, 236, 277, 377, 288, 296, 354, 427,
	334, 360, 243, 407, 378, 545, 556, 551, 552, 549,
	550, 0, 548, 547, 546, 559, 537, 538, 539, 540,
	542, 0, 553, 554, 541, 220, 230, 293, 426, 352,
	264, 410, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 223, 231,
	238, 244, 252, 258, 262, 269, 273, 276, 279, 280,
	281, 285, 301, 305, 306, 307, 308, 319, 320, 321,
	324, 327, 328, 330, 332, 333, 336, 340, 341, 342,
	343, 344, 345, 353, 356, 362, 363, 364, 365, 366,
	367, 368, 371, 372, 373, 374, 382, 386, 395, 396,
	406, 414, 418, 271, 403, 419, 326, 0, 0, 0,
	0, 501, 0, 0, 0, 256, 0, 500, 0, 0,
	0, 291, 0, 0, 338, 0, 370, 247, 299, 297,
	392, 261, 257, 255, 246, 278, 304, 337, 388, 331,
	544, 294, 0, 0, 379, 313, 0, 0, 0, 0,
	0, 535, 536, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 245, 224, 323, 380, 263, 63, 0, 0,
	217, 218, 219, 522, 1014, 524, 525, 526, 527, 0,
	0, 241, 523, 528, 529, 530, 0, 0, 0, 0,
	498, 515, 0, 543, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 513, 585, 0, 0, 0, 558,
	0, 514, 0, 0, 507, 508, 510, 509, 511, 516,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	557, 0, 0, 415, 0, 0, 555, 0, 349, 0,
	384, 272, 290, 237, 287, 221, 232, 0, 270, 322,
	357, 361, 0, 0, 0, 248, 0, 359, 335, 405,
	0, 339, 358, 295, 394, 350, 404, 416, 417, 389,
	413, 425, 233, 251, 329, 385, 408, 376, 0, 312,
	391, 286, 300, 375, 225, 387, 402, 242, 369, 0,
	0, 0, 227, 400, 383, 310, 283, 284, 226, 0,
	355, 254, 266, 250, 325, 397, 398, 249, 428, 234,
	412, 229, 235, 411, 318, 393, 401, 311, 303, 228,
	399, 309, 302, 289, 260, 274, 347, 298, 348, 275,
	315, 314, 316, 0, 0, 0, 381, 409, 429, 239,
	0, 390, 421, 424, 0, 351, 240, 267, 259, 346,
	265, 292, 420, 422, 423, 317, 236, 277, 377, 288,
	296, 354, 427, 334, 360, 243, 407, 378, 545, 556,
	551, 552, 549, 550, 0, 548, 547, 546, 559, 537,
	538, 539, 540, 542, 0, 553, 554, 541, 220, 230,
	293, 426, 352, 264, 410, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 231, 238, 244, 252, 258, 262, 269, 273,
	276, 279, 280, 281, 285, 301, 305, 306, 307, 308,
	319, 320, 321, 324, 327, 328, 330, 332, 333, 336,
	340, 341, 342, 343, 344, 345, 353, 356, 362, 363,
	364, 365, 366, 367, 368, 371, 372, 373, 374, 382,
	386, 395, 396, 406, 414, 418, 271, 403, 419, 566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 501, 0, 0,
	0, 256, 0, 500, 0, 0, 0, 291, 0, 0,
	338, 0, 370, 247, 299, 297, 392, 261, 257, 255,
	246, 278, 304, 337, 388, 331, 544, 294, 0, 0,
	379, 313, 0, 0, 0, 0, 0, 535, 536, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 245, 224,
	323, 380, 263, 63, 0, 0, 217, 218, 219, 522,
	521, 524, 525, 526, 527, 0, 0, 241, 523, 528,
	529, 530, 0, 0, 0, 0, 498, 515, 0, 543,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 512,
	513, 0, 0, 0, 0, 558, 0, 514, 0, 0,
	507, 508, 510, 509, 511, 516, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 557, 0, 0, 415,
	0, 0, 555, 0, 349, 0, 384, 272, 290, 237,
	287, 221, 232, 0, 270, 322, 357, 361, 0, 0,
	0, 248, 0, 359, 335, 405, 0, 339, 358, 295,
	394, 350, 404, 416, 417, 389, 413, 425, 233, 251,
	329, 385, 408, 376, 0, 312, 391, 286, 300, 375,
	225, 387, 402, 242, 369, 0, 0, 0, 227, 400,
	383, 310, 283, 284, 226, 0, 355, 254, 266, 250,
	325, 397, 398, 249, 428, 234, 412, 229, 235, 411,
	318, 393, 401, 311, 303, 228, 399, 309, 302, 289,
	260, 274, 347, 298, 348, 275, 315, 314, 316, 0,
	0, 0, 381, 409, 429, 239, 0, 390, 421, 424,
	0, 351, 240, 267, 259, 346, 265, 292, 420, 422,
	423, 317, 236, 277, 377, 288, 296, 354, 427, 334,
	360, 243, 407, 378, 545, 556, 551, 552, 549, 550,
	0, 548, 547, 546, 559, 537, 538, 539, 540, 542,
	0, 553, 554, 541, 220, 230, 293, 426, 352, 264,
	410, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 231, 238,
	244, 252, 258, 262, 269, 273, 276, 279, 280, 281,
	285, 301, 305, 306, 307, 308, 319, 320, 321, 324,
	327, 328, 330, 332, 333, 336, 340, 341, 342, 343,
	344, 345, 353, 356, 362, 363, 364, 365, 366, 367,
	368, 371, 372, 373, 374, 382, 386, 395, 396, 406,
	414, 418, 271, 403, 419, 326, 0, 0, 0, 0,
	501, 0, 0, 0, 256, 0, 500, 0, 0, 0,
	291, 0, 0, 338, 0, 370, 247, 299, 297, 392,
	261, 257, 255, 246, 278, 304, 337, 388, 331, 544,
	294, 0, 0, 379, 313, 0, 0, 0, 0, 0,
	535, 536, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 245, 224, 323, 380, 263, 63, 0, 0, 217,
	218, 219, 522, 521, 524, 525, 526, 527, 0, 0,
	241, 523, 528, 529, 530, 0, 0, 0, 0, 498,
	515, 0, 543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 0, 0, 0, 0, 558, 0,
	514, 0, 0, 507, 508, 510, 509, 511, 516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 557,
	0, 0, 415, 0, 0, 555, 0, 349, 0, 384,
	272, 290, 237, 287, 221, 232, 0, 270, 322, 357,
	361, 0, 0, 0, 248, 0, 359, 335, 405, 0,
	339, 358, 295, 394, 350, 404, 416, 417, 389, 413,
	425, 233, 251, 329, 385, 408, 376, 0, 312, 391,
	286, 300, 375, 225, 387, 402, 242, 369, 0, 0,
	0, 227, 400, 383, 310, 283, 284, 226, 0, 355,
	254, 266, 250, 325, 397, 398, 249, 428, 234, 412,
	229, 235, 411, 318, 393, 401, 311, 303, 228, 399,
	309, 302, 289, 260, 274, 347, 298, 348, 275, 315,
	314, 316, 0, 0, 0, 381, 409, 429, 239, 0,
	390, 421, 424, 0, 351, 240, 267, 259, 346, 265,
	292, 420, 422, 423, 317, 236, 277, 377, 288, 296,
	354, 427, 334, 360, 243, 407, 378, 545, 556, 551,
	552, 549, 550, 0, 548, 547, 546, 559, 537, 538,
	539, 540, 542, 0, 553, 554, 541, 220, 230, 293,
	426, 352, 264, 410, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	223, 231, 238, 244, 252, 258, 262, 269, 273, 276,
	279, 280, 281, 285, 301, 305, 306, 307, 308, 319,
	320, 321, 324, 327, 328, 330, 332, 333, 336, 340,
	341, 342, 343, 344, 345, 353, 356, 362, 363, 364,
	365, 366, 367, 368, 371, 372, 373, 374, 382, 386,
	395, 396, 406, 414, 418, 271, 403, 419, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 291, 0, 0, 338, 0, 370, 247,
	299, 297, 392, 261, 257, 255, 246, 278, 304, 337,
	388, 331, 544, 294, 0, 0, 379, 313, 0, 0,
	0, 0, 0, 535, 536, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 245, 224, 323, 380, 263, 63,
	0, 0, 217, 218, 219, 522, 521, 524, 525, 526,
	527, 0, 0, 241, 523, 528, 529, 530, 0, 0,
	0, 0, 0, 515, 0, 543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 512, 513, 0, 0, 0,
	0, 558, 0, 514, 0, 0, 507, 508, 510, 509,
	511, 516, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 557, 0, 0, 415, 0, 0, 555, 0,
	349, 0, 384, 272, 290, 237, 287, 221, 232, 0,
	270, 322, 357, 361, 0, 0, 0, 248, 0, 359,
	335, 405, 1774, 339, 358, 295, 394, 350, 404, 416,
	417, 389, 413, 425, 233, 251, 329, 385, 408, 376,
	0, 312, 391, 286, 300, 375, 225, 387, 402, 242,
	369, 0, 0, 0, 227, 400, 383, 310, 283, 284,
	226, 0, 355, 254, 266, 250, 325, 397, 398, 249,
	428, 234, 412, 229, 235, 411, 318, 393, 401, 311,
	303, 228, 399, 309, 302, 289, 260, 274, 347, 298,
	348, 275, 315, 314, 316, 0, 0, 0, 381, 409,
	429, 239, 0, 390, 421, 424, 0, 351, 240, 267,
	259, 346, 265, 292, 420, 422, 423, 317, 236, 277,
	377, 288, 296, 354, 427, 334, 360, 243, 407, 378,
	545, 556, 551, 552, 549, 550, 0, 548, 547, 546,
	559, 537, 538, 539, 540, 542, 0, 553, 554, 541,
	220, 230, 293, 426, 352, 264, 410, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 231, 238, 244, 252, 258, 262,
	269, 273, 276, 279, 280, 281, 285, 301, 305, 306,
	307, 308, 319, 320, 321, 324, 327, 328, 330, 332,
	333, 336, 340, 341, 342, 343, 344, 345, 353, 356,
	362, 363, 364, 365, 366, 367, 368, 371, 372, 373,
	374, 382, 386, 395, 396, 406, 414, 418, 271, 403,
	419, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 291, 0, 0, 338,
	0, 370, 247, 299, 297, 392, 261, 257, 255, 246,
	278, 304, 337, 388, 331, 544, 294, 0, 0, 379,
	313, 0, 0, 0, 0, 0, 535, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 245, 224, 323,
	380, 263, 63, 0, 573, 217, 218, 219, 522, 521,
	524, 525, 526, 527, 0, 0, 241, 523, 528, 529,
	530, 0, 0, 0, 0, 0, 515, 0, 543, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 512, 513,
	0, 0, 0, 0, 558, 0, 514, 0, 0, 507,
	508, 510, 509, 511, 516, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 557, 0, 0, 415, 0,
	0, 555, 0, 349, 0, 384, 272, 290, 237, 287,
	221, 232, 0, 270, 322, 357, 361, 0, 0, 0,
	248, 0, 359, 335, 405, 0, 339, 358, 295, 394,
	350, 404, 416, 417, 389, 413, 425, 233, 251, 329,
	385, 408, 376, 0, 312, 391, 286, 300, 375, 225,
	387, 402, 242, 369, 0, 0, 0, 227, 400, 383,
	310, 283, 284, 226, 0, 355, 254, 266, 250, 325,
	397, 398, 249, 428, 234, 412, 229, 235, 411, 318,
	393, 401, 311, 303, 228, 399, 309, 302, 289, 260,
	274, 347, 298, 348, 275, 315, 314, 316, 0, 0,
	0, 381, 409, 429, 239, 0, 390, 421, 424, 0,
	351, 240, 267, 259, 346, 265, 292, 420, 422, 423,
	317, 236, 277, 377, 288, 296, 354, 427, 334, 360,
	243, 407, 378, 545, 556, 551, 552, 549, 550, 0,
	548, 547, 546, 559, 537, 538, 539, 540, 542, 0,
	553, 554, 541, 220, 230, 293, 426, 352, 264, 410,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 231, 238, 244,
	252, 258, 262, 269, 273, 276, 279, 280, 281, 285,
	301, 305, 306, 307, 308, 319, 320, 321, 324, 327,
	328, 330, 332, 333, 336, 340, 341, 342, 343, 344,
	345, 353, 356, 362, 363, 364, 365, 366, 367, 368,
	371, 372, 373, 374, 382, 386, 395, 396, 406, 414,
	418, 271, 403, 419, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 291,
	0, 0, 338, 0, 370, 247, 299, 297, 392, 261,
	257, 255, 246, 278, 304, 337, 388, 331, 544, 294,
	0, 0, 379, 313, 0, 0, 0, 0, 0, 535,
	536, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	245, 224, 323, 380, 263, 63, 0, 0, 217, 218,
	219, 522, 521, 524, 525, 526, 527, 0, 0, 241,
	523, 528, 529, 530, 0, 0, 0, 0, 0, 515,
	0, 543, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 0, 0, 0, 558, 0, 514,
	0, 0, 507, 508, 510, 509, 511, 516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 557, 0,
	0, 415, 0, 0, 555, 0, 349, 0, 384, 272,
	290, 237, 287, 221, 232, 0, 270, 322, 357, 361,
	0, 0, 0, 248, 0, 359, 335, 405, 0, 339,
	358, 295, 394, 350, 404, 416, 417, 389, 413, 425,
	233, 251, 329, 385, 408, 376, 0, 312, 391, 286,
	300, 375, 225, 387, 402, 242, 369, 0, 0, 0,
	227, 400, 383, 310, 283, 284, 226, 0, 355, 254,
	266, 250, 325, 397, 398, 249, 428, 234, 412, 229,
	235, 411, 318, 393, 401, 311, 303, 228, 399, 309,
	302, 289, 260, 274, 347, 298, 348, 275, 315, 314,
	316, 0, 0, 0, 381, 409, 429, 239, 0, 390,
	421, 424, 0, 351, 240, 267, 259, 346, 265, 292,
	420, 422, 423, 317, 236, 277, 377, 288, 296, 354,
	427, 334, 360, 243, 407, 378, 545, 556, 551, 552,
	549, 550, 0, 548, 547, 546, 559, 537, 538, 539,
	540, 542, 0, 553, 554, 541, 220, 230, 293, 426,
	352, 264, 410, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	231, 238, 244, 252, 258, 262, 269, 273, 276, 279,
	280, 281, 285, 301, 305, 306, 307, 308, 319, 320,
	321, 324, 327, 328, 330, 332, 333, 336, 340, 341,
	342, 343, 344, 345, 353, 356, 362, 363, 364, 365,
	366, 367, 368, 371, 372, 373, 374, 382, 386, 395,
	396, 406, 414, 418, 271, 403, 419, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 291, 0, 0, 338, 0, 370, 247, 299,
	297, 392, 261, 257, 255, 246, 278, 304, 337, 388,
	331, 0, 294, 0, 0, 379, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 245, 224, 323, 380, 263, 0, 0,
	0, 217, 218, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	708, 707, 717, 718, 710, 711, 712, 713, 714, 715,
	716, 709, 0, 0, 719, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 415, 0, 0, 0, 0, 349,
	0, 384, 272, 290, 237, 287, 221, 232, 0, 270,
	322, 357, 361, 0, 0, 0, 248, 0, 359, 335,
	405, 0, 339, 358, 295, 394, 350, 404, 416, 417,
	389, 413, 425, 233, 251, 329, 385, 408, 376, 0,
	312, 391, 286, 300, 375, 225, 387, 402, 242, 369,
	0, 0, 0, 227, 400, 383, 310, 283, 284, 226,
	0, 355, 254, 266, 250, 325, 397, 398, 249, 428,
	234, 412, 229, 235, 411, 318, 393, 401, 311, 303,
	228, 399, 309, 302, 289, 260, 274, 347, 298, 348,
	275, 315, 314, 316, 0, 0, 0, 381, 409, 429,
	239, 0, 390, 421, 424, 0, 351, 240, 267, 259,
	346, 265, 292, 420, 422, 423, 317, 236, 277, 377,
	288, 296, 354, 427, 334, 360, 243, 407, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	230, 293, 426, 352, 264, 410, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 231, 238, 244, 252, 258, 262, 269,
	273, 276, 279, 280, 281, 285, 301, 305, 306, 307,
	308, 319, 320, 321, 324, 327, 328, 330, 332, 333,
	336, 340, 341, 342, 343, 344, 345, 353, 356, 362,
	363, 364, 365, 366, 367, 368, 371, 372, 373, 374,
	382, 386, 395, 396, 406, 414, 418, 271, 403, 419,
	326, 0, 0, 0, 804, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 291, 0, 0, 338, 0,
	370, 247, 299, 297, 392, 261, 257, 255, 246, 278,
	304, 337, 388, 331, 0, 294, 0, 0, 379, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 245, 224, 323, 380,
	263, 0, 0, 0, 217, 218, 219, 0, 806, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 697, 698, 696, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 415, 0, 0,
	0, 0, 349, 0, 384, 272, 290, 237, 287, 221,
	232, 0, 270, 322, 357, 361, 0, 0, 0, 248,
	0, 359, 335, 405, 0, 339, 358, 295, 394, 350,
	404, 416, 417, 389, 413, 425, 233, 251, 329, 385,
	408, 376, 0, 312, 391, 286, 300, 375, 225, 387,
	402, 242, 369, 0, 0, 0, 227, 400, 383, 310,
	283, 284, 226, 0, 355, 254, 266, 250, 325, 397,
	398, 249, 428, 234, 412, 229, 235, 411, 318, 393,
	401, 311, 303, 228, 399, 309, 302, 289, 260, 274,
	347, 298, 348, 275, 315, 314, 316, 0, 0, 0,
	381, 409, 429, 239, 0, 390, 421, 424, 0, 351,
	240, 267, 259, 346, 265, 292, 420, 422, 423, 317,
	236, 277, 377, 288, 296, 354, 427, 334, 360, 243,
	407, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 230, 293, 426, 352, 264, 410, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 231, 238, 244, 252,
	258, 262, 269, 273, 276, 279, 280, 281, 285, 301,
	305, 306, 307, 308, 319, 320, 321, 324, 327, 328,
	330, 332, 333, 336, 340, 341, 342, 343, 344, 345,
	353, 356, 362, 363, 364, 365, 366, 367, 368, 371,
	372, 373, 374, 382, 386, 395, 396, 406, 414, 418,
	271, 403, 419, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 1131, 0, 0, 0, 0, 291, 0,
	0, 338, 0, 370, 247, 299, 297, 392, 261, 257,
	255, 246, 278, 304, 337, 388, 331, 0, 294, 0,
	0, 379, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 245,
	224, 323, 380, 263, 0, 0, 0, 217, 218, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 1130,
	415, 0, 0, 0, 1126, 1123, 0, 1124, 1125, 290,
	611, 287, 221, 232, 1121, 1128, 322, 357, 361, 0,
	0, 0, 248, 0, 359, 335, 405, 0, 339, 358,
	295, 394, 350, 404, 416, 417, 389, 413, 425, 233,
	251, 329, 385, 408, 376, 0, 312, 391, 286, 300,
	375, 225, 387, 402, 242, 369, 0, 0, 0, 227,
	400, 383, 310, 283, 284, 226, 0, 355, 254, 266,
	250, 325, 397, 398, 249, 428, 234, 412, 229, 235,
	411, 318, 393, 401, 311, 303, 228, 399, 309, 302,
	289, 260, 274, 347, 298, 348, 275, 315, 314, 316,
	0, 0, 0, 381, 409, 429, 239, 0, 390, 421,
	424, 0, 351, 240, 267, 259, 346, 265, 292, 420,
	422, 423, 317, 236, 277, 377, 288, 296, 354, 427,
	334, 360, 243, 407, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 230, 293, 426, 352,
	264, 410, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 223, 231,
	238, 244, 252, 258, 262, 269, 273, 276, 279, 280,
	281, 285, 301, 305, 306, 307, 308, 319, 320, 321,
	324, 327, 328, 330, 332, 333, 336, 340, 341, 342,
	343, 344, 345, 353, 356, 362, 363, 364, 365, 366,
	367, 368, 371, 372, 373, 374, 382, 386, 395, 396,
	406, 414, 418, 271, 403, 419, 31, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 291, 0, 0, 338, 0, 370,
	247, 299, 297, 392, 261, 257, 255, 246, 278, 304,
	337, 388, 331, 0, 294, 0, 0, 379, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 245, 224, 323, 380, 263,
	63, 0, 573, 217, 218, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 415, 0, 0, 0,
	0, 349, 0, 384, 272, 290, 237, 287, 221, 232,
	0, 270, 322, 357, 361, 0, 0, 0, 248, 0,
	359, 335, 405, 0, 339, 358, 295, 394, 350, 404,
	416, 417, 389, 413, 425, 233, 251, 329, 385, 408,
	376, 0, 312, 391, 286, 300, 375, 225, 387, 402,
	242, 369, 0, 0, 0, 227, 400, 383, 310, 283,
	284, 226, 0, 355, 254, 266, 250, 325, 397, 398,
	249, 428, 234, 412, 229, 235, 411, 318, 393, 401,
	311, 303, 228, 399, 309, 302, 289, 260, 274, 347,
	298, 348, 275, 315, 314, 316, 0, 0, 0, 381,
	409, 429, 239, 0, 390, 421, 424, 0, 351, 240,
	267, 259, 346, 265, 292, 420, 422, 423, 317, 236,
	277, 377, 288, 296, 354, 427, 334, 360, 243, 407,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 230, 293, 426, 352, 264, 410, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 231, 238, 244, 252, 258,
	262, 269, 273, 276, 279, 280, 281, 285, 301, 305,
	306, 307, 308, 319, 320, 321, 324, 327, 328, 330,
	332, 333, 336, 340, 341, 342, 343, 344, 345, 353,
	356, 362, 363, 364, 365, 366, 367, 368, 371, 372,
	373, 374, 382, 386, 395, 396, 406, 414, 418, 271,
	403, 419, 326, 0, 0, 0, 1088, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 291, 0, 0,
	338, 0, 370, 247, 299, 297, 392, 261, 257, 255,
	246, 278, 304, 337, 388, 331, 0, 294, 0, 0,
	379, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 245, 224,
	323, 380, 263, 0, 0, 0, 217, 218, 219, 0,
	1090, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 415,
	0, 0, 0, 0, 349, 0, 384, 272, 290, 237,
	287, 221, 232, 0, 270, 322, 357, 361, 0, 0,
	0, 248, 0, 359, 335, 405, 0, 339, 358, 295,
	394, 350, 404, 416, 417, 389, 413, 425, 233, 251,
	329, 385, 408, 376, 0, 312, 391, 286, 300, 375,
	225, 387, 402, 242, 369, 0, 0, 0, 227, 400,
	383, 310, 283, 284, 226, 0, 355, 254, 266, 250,
	325, 397, 398, 249, 428, 234, 412, 229, 235, 411,
	318, 393, 401, 311, 303, 228, 399, 309, 302, 289,
	260, 274, 347, 298, 348, 275, 315, 314, 316, 0,
	0, 0, 381, 409, 429, 239, 0, 390, 421, 424,
	0, 351, 240, 267, 259, 346, 265, 292, 420, 422,
	423, 317, 236, 277, 377, 288, 296, 354, 427, 334,
	360, 243, 407, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 230, 293, 426, 352, 264,
	410, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 231, 238,
	244, 252, 258, 262, 269, 273, 276, 279, 280, 281,
	285, 301, 305, 306, 307, 308, 319, 320, 321, 324,
	327, 328, 330, 332, 333, 336, 340, 341, 342, 343,
	344, 345, 353, 356, 362, 363, 364, 365, 366, 367,
	368, 371, 372, 373, 374, 382, 386, 395, 396, 406,
	414, 418, 271, 403, 419, 31, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 291, 0, 0, 338, 0, 370, 247,
	299, 297, 392, 261, 257, 255, 246, 278, 304, 337,
	388, 331, 0, 294, 0, 0, 379, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 245, 224, 323, 380, 263, 63,
	0, 0, 217, 218, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 415, 0, 0, 0, 0,
	349, 0, 384, 272, 290, 237, 287, 221, 232, 0,
	270, 322, 357, 361, 0, 0, 0, 248, 0, 359,
	335, 405, 0, 339, 358, 295, 394, 350, 404, 416,
	417, 389, 413, 425, 233, 251, 329, 385, 408, 376,
	0, 312, 391, 286, 300, 375, 225, 387, 402, 242,
	369, 0, 0, 0, 227, 400, 383, 310, 283, 284,
	226, 0, 355, 254, 266, 250, 325, 397, 398, 249,
	428, 234, 412, 229, 235, 411, 318, 393, 401, 311,
	303, 228, 399, 309, 302, 289, 260, 274, 347, 298,
	348, 275, 315, 314, 316, 0, 0, 0, 381, 409,
	429, 239, 0, 390, 421, 424, 0, 351, 240, 267,
	259, 346, 265, 292, 420, 422, 423, 317, 236, 277,
	377, 288, 296, 354, 427, 334, 360, 243, 407, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 230, 293, 426, 352, 264, 410, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 231, 238, 244, 252, 258, 262,
	269, 273, 276, 279, 280, 281, 285, 301, 305, 306,
	307, 308, 319, 320, 321, 324, 327, 328, 330, 332,
	333, 336, 340, 341, 342, 343, 344, 345, 353, 356,
	362, 363, 364, 365, 366, 367, 368, 371, 372, 373,
	374, 382, 386, 395, 396, 406, 414, 418, 271, 403,
	419, 326, 0, 0, 0, 1088, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 291, 0, 0, 338,
	0, 370, 247, 299, 297, 392, 261, 257, 255, 246,
	278, 304, 337, 388, 331, 0, 294, 0, 0, 379,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 245, 224, 323,
	380, 263, 0, 0, 0, 217, 218, 219, 0, 1090,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 415, 0,
	0, 0, 0, 349, 0, 384, 272, 290, 237, 287,
	221, 232, 0, 270, 322, 357, 361, 0, 0, 0,
	248, 0, 359, 335, 405, 0, 1086, 358, 295, 394,
	350, 404, 416, 417, 389, 413, 425, 233, 251, 329,
	385, 408, 376, 0, 312, 391, 286, 300, 375, 225,
	387, 402, 242, 369, 0, 0, 0, 227, 400, 383,
	310, 283, 284, 226, 0, 355, 254, 266, 250, 325,
	397, 398, 249, 428, 234, 412, 229, 235, 411, 318,
	393, 401, 311, 303, 228, 399, 309, 302, 289, 260,
	274, 347, 298, 348, 275, 315, 314, 316, 0, 0,
	0, 381, 409, 429, 239, 0, 390, 421, 424, 0,
	351, 240, 267, 259, 346, 265, 292, 420, 422, 423,
	317, 236, 277, 377, 288, 296, 354, 427, 334, 360,
	243, 407, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 230, 293, 426, 352, 264, 410,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 231, 238, 244,
	252, 258, 262, 269, 273, 276, 279, 280, 281, 285,
	301, 305, 306, 307, 308, 319, 320, 321, 324, 327,
	328, 330, 332, 333, 336, 340, 341, 342, 343, 344,
	345, 353, 356, 362, 363, 364, 365, 366, 367, 368,
	371, 372, 373, 374, 382, 386, 395, 396, 406, 414,
	418, 271, 403, 419, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 291,
	0, 0, 338, 0, 370, 247, 299, 297, 392, 261,
	257, 255, 246, 278, 304, 337, 388, 331, 0, 294,
	0, 0, 379, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	245, 224, 323, 380, 263, 0, 0, 0, 217, 218,
	219, 0, 0, 1053, 0, 0, 1054, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 415, 0, 0, 0, 0, 349, 0, 384, 272,
	290, 237, 287, 221, 232, 0, 270, 322, 357, 361,
	0, 0, 0, 248, 0, 359, 335, 405, 0, 339,
	358, 295, 394, 350, 404, 416, 417, 389, 413, 425,
	233, 251, 329, 385, 408, 376, 0, 312, 391, 286,
	300, 375, 225, 387, 402, 242, 369, 0, 0, 0,
	227, 400, 383, 310, 283, 284, 226, 0, 355, 254,
	266, 250, 325, 397, 398, 249, 428, 234, 412, 229,
	235, 411, 318, 393, 401, 311, 303, 228, 399, 309,
	302, 289, 260, 274, 347, 298, 348, 275, 315, 314,
	316, 0, 0, 0, 381, 409, 429, 239, 0, 390,
	421, 424, 0, 351, 240, 267, 259, 346, 265, 292,
	420, 422, 423, 317, 236, 277, 377, 288, 296, 354,
	427, 334, 360, 243, 407, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 230, 293, 426,
	352, 264, 410, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	231, 238, 244, 252, 258, 262, 269, 273, 276, 279,
	280, 281, 285, 301, 305, 306, 307, 308, 319, 320,
	321, 324, 327, 328, 330, 332, 333, 336, 340, 341,
	342, 343, 344, 345, 353, 356, 362, 363, 364, 365,
	366, 367, 368, 371, 372, 373, 374, 382, 386, 395,
	396, 406, 414, 418, 271, 403, 419, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 838, 0,
	0, 0, 291, 0, 0, 338, 0, 370, 247, 299,
	297, 392, 261, 257, 255, 246, 278, 304, 337, 388,
	331, 0, 294, 0, 0, 379, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 245, 224, 323, 380, 263, 0, 0,
	0, 217, 218, 219, 0, 837, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 415, 0, 0, 0, 0, 349,
	0, 384, 272, 290, 237, 287, 221, 232, 0, 270,
	322, 357, 361, 0, 0, 0, 248, 0, 359, 335,
	405, 0, 339, 358, 295, 394, 350, 404, 416, 417,
	389, 413, 425, 233, 251, 329, 385, 408, 376, 0,
	312, 391, 286, 300, 375, 225, 387, 402, 242, 369,
	0, 0, 0, 227, 400, 383, 310, 283, 284, 226,
	0, 355, 254, 266, 250, 325, 397, 398, 249, 428,
	234, 412, 229, 235, 411, 318, 393, 401, 311, 303,
	228, 399, 309, 302, 289, 260, 274, 347, 298, 348,
	275, 315, 314, 316, 0, 0, 0, 381, 409, 429,
	239, 0, 390, 421, 424, 0, 351, 240, 267, 259,
	346, 265, 292, 420, 422, 423, 317, 236, 277, 377,
	288, 296, 354, 427, 334, 360, 243, 407, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	230, 293, 426, 352, 264, 410, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 231, 238, 244, 252, 258, 262, 269,
	273, 276, 279, 280, 281, 285, 301, 305, 306, 307,
	308, 319, 320, 321, 324, 327, 328, 330, 332, 333,
	336, 340, 341, 342, 343, 344, 345, 353, 356, 362,
	363, 364, 365, 366, 367, 368, 371, 372, 373, 374,
	382, 386, 395, 396, 406, 414, 418, 271, 403, 419,
	326, 0, 0, 0, 0, 0, 0, 0, 0, 256,
	0, 0, 0, 0, 0, 291, 0, 0, 338, 0,
	370, 247, 299, 297, 392, 261, 257, 255, 246, 278,
	304, 337, 388, 331, 0, 294, 0, 0, 379, 313,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 245, 224, 323, 380,
	263, 0, 0, 0, 217, 218, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	605, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 415, 0, 0,
	0, 0, 349, 0, 384, 272, 290, 611, 287, 221,
	232, 609, 270, 322, 357, 361, 0, 0, 0, 248,
	0, 359, 335, 405, 0, 339, 358, 295, 394, 350,
	404, 416, 417, 389, 413, 425, 233, 251, 329, 385,
	408, 376, 0, 312, 391, 286, 300, 375, 225, 387,
	402, 242, 369, 0, 0, 0, 227, 400, 383, 310,
	283, 284, 226, 0, 355, 254, 266, 250, 325, 397,
	398, 249, 428, 234, 412, 229, 235, 411, 318, 393,
	401, 311, 303, 228, 399, 309, 302, 289, 260, 274,
	347, 298, 348, 275, 315, 314, 316, 0, 0, 0,
	381, 409, 429, 239, 0, 390, 421, 424, 0, 351,
	240, 267, 259, 346, 265, 292, 420, 422, 423, 317,
	236, 277, 377, 288, 296, 354, 427, 334, 360, 243,
	407, 378, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 220, 230, 293, 426, 352, 264, 410, 0,
	0, 253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 222, 223, 231, 238, 244, 252,
	258, 262, 269, 273, 276, 279, 280, 281, 285, 301,
	305, 306, 307, 308, 319, 320, 321, 324, 327, 328,
	330, 332, 333, 336, 340, 341, 342, 343, 344, 345,
	353, 356, 362, 363, 364, 365, 366, 367, 368, 371,
	372, 373, 374, 382, 386, 395, 396, 406, 414, 418,
	271, 403, 419, 326, 0, 0, 0, 0, 0, 0,
	0, 0, 256, 0, 0, 0, 0, 0, 291, 0,
	0, 338, 0, 370, 247, 299, 297, 392, 261, 257,
	255, 246, 278, 304, 337, 388, 331, 0, 294, 0,
	0, 379, 313, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 245,
	224, 323, 380, 263, 0, 0, 573, 217, 218, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 0, 0,
	415, 0, 0, 0, 0, 349, 0, 384, 272, 290,
	237, 287, 221, 232, 0, 270, 322, 357, 361, 0,
	0, 0, 248, 0, 359, 335, 405, 0, 339, 358,
	295, 394, 350, 404, 416, 417, 389, 413, 425, 233,
	251, 329, 385, 408, 376, 0, 312, 391, 286, 300,
	375, 225, 387, 402, 242, 369, 0, 0, 0, 227,
	400, 383, 310, 283, 284, 226, 0, 355, 254, 266,
	250, 325, 397, 398, 249, 428, 234, 412, 229, 235,
	411, 318, 393, 401, 311, 303, 228, 399, 309, 302,
	289, 260, 274, 347, 298, 348, 275, 315, 314, 316,
	0, 0, 0, 381, 409, 429, 239, 0, 390, 421,
	424, 0, 351, 240, 267, 259, 346, 265, 292, 420,
	422, 423, 317, 236, 277, 377, 288, 296, 354, 427,
	334, 360, 243, 407, 378, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 220, 230, 293, 426, 352,
	264, 410, 0, 0, 253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 222, 223, 231,
	238, 244, 252, 258, 262, 269, 273, 276, 279, 280,
	281, 285, 301, 305, 306, 307, 308, 319, 320, 321,
	324, 327, 328, 330, 332, 333, 336, 340, 341, 342,
	343, 344, 345, 353, 356, 362, 363, 364, 365, 366,
	367, 368, 371, 372, 373, 374, 382, 386, 395, 396,
	406, 414, 418, 271, 403, 419, 326, 0, 0, 0,
	0, 0, 0, 0, 0, 256, 0, 0, 0, 0,
	0, 291, 0, 0, 338, 0, 370, 247, 299, 297,
	392, 261, 257, 255, 246, 278, 304, 337, 388, 331,
	0, 294, 0, 0, 379, 313, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 245, 224, 323, 380, 263, 63, 0, 0,
	217, 218, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 0, 415, 0, 0, 0, 0, 349, 0,
	384, 272, 290, 237, 287, 221, 232, 0, 270, 322,
	357, 361, 0, 0, 0, 248, 0, 359, 335, 405,
	0, 339, 358, 295, 394, 350, 404, 416, 417, 389,
	413, 425, 233, 251, 329, 385, 408, 376, 0, 312,
	391, 286, 300, 375, 225, 387, 402, 242, 369, 0,
	0, 0, 227, 400, 383, 310, 283, 284, 226, 0,
	355, 254, 266, 250, 325, 397, 398, 249, 428, 234,
	412, 229, 235, 411, 318, 393, 401, 311, 303, 228,
	399, 309, 302, 289, 260, 274, 347, 298, 348, 275,
	315, 314, 316, 0, 0, 0, 381, 409, 429, 239,
	0, 390, 421, 424, 0, 351, 240, 267, 259, 346,
	265, 292, 420, 422, 423, 317, 236, 277, 377, 288,
	296, 354, 427, 334, 360, 243, 407, 378, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 220, 230,
	293, 426, 352, 264, 410, 0, 0, 253, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	222, 223, 231, 238, 244, 252, 258, 262, 269, 273,
	276, 279, 280, 281, 285, 301, 305, 306, 307, 308,
	319, 320, 321, 324, 327, 328, 330, 332, 333, 336,
	340, 341, 342, 343, 344, 345, 353, 356, 362, 363,
	364, 365, 366, 367, 368, 371, 372, 373, 374, 382,
	386, 395, 396, 406, 414, 418, 271, 403, 419, 326,
	0, 0, 0, 0, 0, 0, 0, 0, 256, 0,
	0, 0, 0, 0, 291, 0, 0, 338, 0, 370,
	247, 299, 297, 392, 261, 257, 255, 246, 278, 304,
	337, 388, 331, 0, 294, 0, 0, 379, 313, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 245, 224, 323, 380, 263,
	0, 0, 0, 217, 218, 219, 0, 1090, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 415, 0, 0, 0,
	0, 349, 0, 384, 272, 290, 237, 287, 221, 232,
	0, 270, 322, 357, 361, 0, 0, 0, 248, 0,
	359, 335, 405, 0, 339, 358, 295, 394, 350, 404,
	416, 417, 389, 413, 425, 233, 251, 329, 385, 408,
	376, 0, 312, 391, 286, 300, 375, 225, 387, 402,
	242, 369, 0, 0, 0, 227, 400, 383, 310, 283,
	284, 226, 0, 355, 254, 266, 250, 325, 397, 398,
	249, 428, 234, 412, 229, 235, 411, 318, 393, 401,
	311, 303, 228, 399, 309, 302, 289, 260, 274, 347,
	298, 348, 275, 315, 314, 316, 0, 0, 0, 381,
	409, 429, 239, 0, 390, 421, 424, 0, 351, 240,
	267, 259, 346, 265, 292, 420, 422, 423, 317, 236,
	277, 377, 288, 296, 354, 427, 334, 360, 243, 407,
	378, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 220, 230, 293, 426, 352, 264, 410, 0, 0,
	253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 222, 223, 231, 238, 244, 252, 258,
	262, 269, 273, 276, 279, 280, 281, 285, 301, 305,
	306, 307, 308, 319, 320, 321, 324, 327, 328, 330,
	332, 333, 336, 340, 341, 342, 343, 344, 345, 353,
	356, 362, 363, 364, 365, 366, 367, 368, 371, 372,
	373, 374, 382, 386, 395, 396, 406, 414, 418, 271,
	403, 419, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 291, 0, 0,
	338, 0, 370, 247, 299, 297, 392, 261, 257, 255,
	246, 278, 304, 337, 388, 331, 0, 294, 0, 0,
	379, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 245, 224,
	323, 380, 263, 0, 0, 0, 217, 218, 219, 0,
	806, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 415,
	0, 0, 0, 0, 349, 0, 384, 272, 290, 237,
	287, 221, 232, 0, 270, 322, 357, 361, 0, 0,
	0, 248, 0, 359, 335, 405, 0, 339, 358, 295,
	394, 350, 404, 416, 417, 389, 413, 425, 233, 251,
	329, 385, 408, 376, 0, 312, 391, 286, 300, 375,
	225, 387, 402, 242, 369, 0, 0, 0, 227, 400,
	383, 310, 283, 284, 226, 0, 355, 254, 266, 250,
	325, 397, 398, 249, 428, 234, 412, 229, 235, 411,
	318, 393, 401, 311, 303, 228, 399, 309, 302, 289,
	260, 274, 347, 298, 348, 275, 315, 314, 316, 0,
	0, 0, 381, 409, 429, 239, 0, 390, 421, 424,
	0, 351, 240, 267, 259, 346, 265, 292, 420, 422,
	423, 317, 236, 277, 377, 288, 296, 354, 427, 334,
	360, 243, 407, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 230, 293, 426, 352, 264,
	410, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 231, 238,
	244, 252, 258, 262, 269, 273, 276, 279, 280, 281,
	285, 301, 305, 306, 307, 308, 319, 320, 321, 324,
	327, 328, 330, 332, 333, 336, 340, 341, 342, 343,
	344, 345, 353, 356, 362, 363, 364, 365, 366, 367,
	368, 371, 372, 373, 374, 382, 386, 395, 396, 406,
	414, 418, 271, 403, 419, 820, 0, 0, 0, 0,
	0, 0, 326, 0, 0, 0, 0, 0, 0, 0,
	0, 256, 0, 0, 0, 0, 0, 291, 0, 0,
	338, 0, 370, 247, 299, 297, 392, 261, 257, 255,
	246, 278, 304, 337, 388, 331, 0, 294, 0, 0,
	379, 313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 245, 224,
	323, 380, 263, 0, 0, 0, 217, 218, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 415,
	0, 0, 0, 0, 349, 0, 384, 272, 290, 237,
	287, 221, 232, 0, 270, 322, 357, 361, 0, 0,
	0, 248, 0, 359, 335, 405, 0, 339, 358, 295,
	394, 350, 404, 416, 417, 389, 413, 425, 233, 251,
	329, 385, 408, 376, 0, 312, 391, 286, 300, 375,
	225, 387, 402, 242, 369, 0, 0, 0, 227, 400,
	383, 310, 283, 284, 226, 0, 355, 254, 266, 250,
	325, 397, 398, 249, 428, 234, 412, 229, 235, 411,
	318, 393, 401, 311, 303, 228, 399, 309, 302, 289,
	260, 274, 347, 298, 348, 275, 315, 314, 316, 0,
	0, 0, 381, 409, 429, 239, 0, 390, 421, 424,
	0, 351, 240, 267, 259, 346, 265, 292, 420, 422,
	423, 317, 236, 277, 377, 288, 296, 354, 427, 334,
	360, 243, 407, 378, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 220, 230, 293, 426, 352, 264,
	410, 0, 0, 253, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 222, 223, 231, 238,
	244, 252, 258, 262, 269, 273, 276, 279, 280, 281,
	285, 301, 305, 306, 307, 308, 319, 320, 321, 324,
	327, 328, 330, 332, 333, 336, 340, 341, 342, 343,
	344, 345, 353, 356, 362, 363, 364, 365, 366, 367,
	368, 371, 372, 373, 374, 382, 386, 395, 396, 406,
	414, 418, 271, 403, 419, 326, 0, 0, 0, 0,
	0, 0, 0, 810, 256, 0, 0, 0, 0, 0,
	291, 0, 0, 338, 0, 370, 247, 299, 297, 392,
	261, 257, 255, 246, 278, 304, 337, 388, 331, 0,
	294, 0, 0, 379, 313, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 245, 224, 323, 380, 263, 0, 0, 0, 217,
	218, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 415, 0, 0, 0, 0, 349, 0, 384,
	272, 290, 237, 287, 221, 232, 0, 270, 322, 357,
	361, 0, 0, 0, 248, 0, 359, 335, 405, 0,
	339, 358, 295, 394, 350, 404, 416, 417, 389, 413,
	425, 233, 251, 329, 385, 408, 376, 0, 312, 391,
	286, 300, 375, 225, 387, 402, 242, 369, 0, 0,
	0, 227, 400, 383, 310, 283, 284, 226, 0, 355,
	254, 266, 250, 325, 397, 398, 249, 428, 234, 412,
	229, 235, 411, 318, 393, 401, 311, 303, 228, 399,
	309, 302, 289, 260, 274, 347, 298, 348, 275, 315,
	314, 316, 0, 0, 0, 381, 409, 429, 239, 0,
	390, 421, 424, 0, 351, 240, 267, 259, 346, 265,
	292, 420, 422, 423, 317, 236, 277, 377, 288, 296,
	354, 427, 334, 360, 243, 407, 378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 220, 230, 293,
	426, 352, 264, 410, 0, 0, 253, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 222,
	223, 231, 238, 244, 252, 258, 262, 269, 273, 276,
	279, 280, 281, 285, 301, 305, 306, 307, 308, 319,
	320, 321, 324, 327, 328, 330, 332, 333, 336, 340,
	341, 342, 343, 344, 345, 353, 356, 362, 363, 364,
	365, 366, 367, 368, 371, 372, 373, 374, 382, 386,
	395, 396, 406, 414, 418, 271, 403, 419, 326, 0,
	0, 0, 0, 0, 0, 0, 0, 256, 0, 0,
	0, 0, 0, 291, 0, 0, 338, 0, 370, 247,
	299, 297, 392, 261, 257, 255, 246, 278, 304, 337,
	388, 331, 0, 294, 0, 0, 379, 313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 245, 224, 323, 380, 263, 0,
	0, 0, 217, 218, 219, 0, 686, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 415, 0, 0, 0, 0,
	349, 0, 384, 272, 290, 237, 287, 221, 232, 0,
	270, 322, 357, 361, 0, 0, 0, 248, 0, 359,
	335, 405, 0, 339, 358, 295, 394, 350, 404, 416,
	417, 389, 413, 425, 233, 251, 329, 385, 408, 376,
	0, 312, 391, 286, 300, 375, 225, 387, 402, 242,
	369, 0, 0, 0, 227, 400, 383, 310, 283, 284,
	226, 0, 355, 254, 266, 250, 325, 397, 398, 249,
	428, 234, 412, 229, 235, 411, 318, 393, 401, 311,
	303, 228, 399, 309, 302, 289, 260, 274, 347, 298,
	348, 275, 315, 314, 316, 0, 0, 0, 381, 409,
	429, 239, 0, 390, 421, 424, 0, 351, 240, 267,
	259, 346, 265, 292, 420, 422, 423, 317, 236, 277,
	377, 288, 296, 354, 427, 334, 360, 243, 407, 378,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	220, 230, 293, 426, 352, 264, 410, 0, 0, 253,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 222, 223, 231, 238, 244, 252, 258, 262,
	269, 273, 276, 279, 280, 281, 285, 301, 305, 306,
	307, 308, 319, 320, 321, 324, 327, 328, 330, 332,
	333, 336, 340, 341, 342, 343, 344, 345, 353, 356,
	362, 363, 364, 365, 366, 367, 368, 371, 372, 373,
	374, 382, 386, 395, 396, 406, 414, 418, 271, 403,
	419, 326, 0, 0, 0, 0, 0, 0, 0, 0,
	256, 0, 0, 0, 0, 0, 291, 0, 0, 338,
	0, 370, 247, 299, 297, 392, 261, 257, 255, 246,
	278, 304, 337, 388, 331, 0, 294, 0, 0, 379,
	313, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 245, 224, 323,
	380, 263, 0, 0, 0, 217, 218, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 489, 0, 268, 0, 0, 0, 415, 0,
	0, 0, 0, 349, 0, 384, 272, 290, 237, 287,
	221, 232, 0, 270, 322, 357, 361, 0, 0, 0,
	248, 0, 359, 335, 405, 0, 339, 358, 295, 394,
	350, 404, 416, 417, 389, 413, 425, 233, 251, 329,
	385, 408, 376, 0, 312, 391, 286, 300, 375, 225,
	387, 402, 242, 369, 0, 0, 0, 227, 400, 383,
	310, 283, 284, 226, 0, 355, 254, 266, 250, 325,
	397, 398, 249, 428, 234, 412, 229, 235, 411, 318,
	393, 401, 311, 303, 228, 399, 309, 302, 289, 260,
	274, 347, 298, 348, 275, 315, 314, 316, 0, 0,
	0, 381, 409, 429, 239, 0, 390, 421, 424, 0,
	351, 240, 267, 259, 346, 265, 292, 420, 422, 423,
	317, 236, 277, 377, 288, 296, 354, 427, 334, 360,
	243, 407, 378, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 230, 293, 426, 352, 264, 410,
	0, 0, 253, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 222, 223, 231, 238, 244,
	252, 258, 262, 269, 273, 276, 279, 280, 281, 285,
	301, 305, 306, 307, 308, 319, 320, 321, 324, 327,
	328, 330, 332, 333, 336, 340, 341, 342, 343, 344,
	345, 353, 356, 362, 363, 364, 365, 366, 367, 368,
	371, 372, 373, 374, 382, 386, 395, 396, 406, 414,
	418, 488, 403, 419, 326, 0, 0, 0, 0, 0,
	0, 0, 0, 256, 0, 0, 0, 0, 0, 291,
	0, 0, 338, 0, 370, 247, 299, 297, 392, 261,
	257, 255, 246, 278, 304, 337, 388, 331, 0, 294,
	0, 0, 379, 313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	245, 224, 323, 380, 263, 0, 0, 0, 217, 218,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 448,
	0, 415, 0, 0, 0, 0, 349, 0, 384, 272,
	290, 237, 287, 221, 232, 0, 270, 322, 357, 361,
	0, 0, 0, 248, 0, 359, 335, 405, 0, 339,
	358, 295, 394, 350, 404, 416, 417, 389, 413, 425,
	233, 251, 329, 385, 408, 376, 0, 312, 391, 286,
	300, 375, 225, 387, 402, 242, 369, 0, 0, 0,
	227, 400, 383, 310, 283, 284, 226, 0, 355, 254,
	266, 250, 325, 397, 398, 249, 428, 234, 412, 229,
	235, 411, 318, 393, 401, 311, 303, 228, 399, 309,
	302, 289, 260, 274, 347, 298, 348, 275, 315, 314,
	316, 0, 0, 0, 381, 409, 429, 239, 0, 390,
	421, 424, 0, 351, 240, 267, 259, 346, 265, 292,
	420, 422, 423, 317, 236, 277, 377, 288, 296, 354,
	427, 334, 360, 243, 407, 378, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 220, 230, 293, 426,
	352, 264, 410, 0, 0, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 222, 223,
	231, 238, 244, 252, 258, 262, 269, 273, 276, 279,
	280, 281, 285, 301, 305, 306, 307, 308, 319, 320,
	321, 324, 327, 328, 330, 332, 333, 336, 340, 341,
	342, 343, 344, 345, 353, 356, 362, 363, 364, 365,
	366, 367, 368, 371, 372, 373, 374, 382, 386, 395,
	396, 406, 414, 418, 271, 403, 419, 326, 0, 0,
	0, 0, 0, 0, 0, 0, 256, 0, 0, 0,
	0, 0, 291, 0, 0, 338, 0, 370, 247, 299,
	297, 392, 261, 257, 255, 246, 278, 304, 337, 388,
	331, 0, 294, 0, 0, 379, 313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 245, 224, 323, 380, 263, 0, 0,
	0, 217, 218, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 415, 0, 0, 0, 0, 349,
	0, 384, 272, 290, 237, 287, 221, 232, 0, 270,
	322, 357, 361, 0, 0, 0, 248, 0, 359, 335,
	405, 0, 339, 358, 295, 394, 350, 404, 416, 417,
	389, 413, 425, 233, 251, 329, 385, 408, 376, 0,
	312, 391, 286, 300, 375, 225, 387, 402, 242, 369,
	0, 0, 0, 227, 400, 383, 310, 283, 284, 226,
	0, 355, 254, 266, 250, 325, 397, 398, 249, 428,
	234, 412, 229, 235, 411, 318, 393, 401, 311, 303,
	228, 399, 309, 302, 289, 260, 274, 347, 298, 348,
	275, 315, 314, 316, 0, 0, 0, 381, 409, 429,
	239, 0, 390, 421, 424, 0, 351, 240, 267, 259,
	346, 265, 292, 420, 422, 423, 317, 236, 277, 377,
	288, 296, 354, 427, 334, 360, 243, 407, 378, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 220,
	230, 293, 426, 352, 264, 410, 0, 0, 253, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 222, 223, 231, 238, 244, 252, 258, 262, 269,
	273, 276, 279, 280, 281, 285, 301, 305, 306, 307,
	308, 319, 320, 321, 324, 327, 328, 330, 332, 333,
	336, 340, 341, 342, 343, 344, 345, 353, 356, 362,
	363, 364, 365, 366, 367, 368, 371, 372, 373, 374,
	382, 386, 395, 396, 406, 414, 418, 271, 403, 419,
}
var yyPact = [...]int{

	190, -1000, -295, 1218, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1167,
	925, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 386, 876,
	5317, 59, -36, 209, 23, 19235, 207, 1600, 19618, -1000,
	-2, -1000, -11, 19618, -6, 18852, -1000, -1000, -94, -99,
	-1000, 10776, 1053, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 871, 1148, 1153, 1165, 736, 1055, -1000, 9231, 9231,
	132, 132, 132, 7699, -1000, -1000, 15781, 19618, 19618, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	121, 121, 121, 125, 897, 607, -154, 200, 19618, 707,
	707, 313, 19618, 120, 707, 120, 120, 120, 19618, -1000,
	267, -1000, -1000, 19618, 707, 1077, 415, 98, 296, 296,
	296, -1000, 238, -1000, 5317, 56, 26, -80, 1182, 27,
	-19, -1000, 415, 5317, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 184, -1000, -1000, 19618, 18469, 146, 373, -1000,
	-1000, -1000, -1000, -1000, -1000, 656, 350, -1000, 10776, 914,
	660, 660, -1000, -1000, 224, -1000, -1000, 11925, 11925, 11925,
	11925, 11925, 11925, 11925, 11925, 11925, 11925, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 660, 265, -1000, 10393, 660, 660, 660, 660, 660,
	660, 660, 660, 10776, 660, 660, 660, 660, 660, 660,
	660, 660, 660, 660, 660, 660, 660, 660, 660, 660,
	-1000, -1000, -1000, 1167, -1000, 925, -1000, -1000, -1000, 1092,
	10776, 10776, 1167, -1000, 1002, 9231, -1000, -1000, 1046, -1000,
	-1000, -1000, -1000, 413, 1192, -1000, 12691, 264, 1191, 18086,
	-1000, 16547, 17703, 849, 7302, -113, -1000, -1000, -1000, 371,
	15398, -1000, 1073, -1000, 787, 19618, -1000, -1000, 80, 707,
	-1000, 859, -1000, 784, -1000, 854, 707, 377, 707, 19618,
	203, -1000, -1000, -1000, 16, 361, 593, -1000, 19618, 5317,
	5317, 5317, 61, 112, 55, 19618, 848, 160, 19618, 1126,
	936, 19618, 707, 707, -1000, 6508, -1000, 5317, 415, -1000,
	592, 10776, 5317, 5317, 5317, 19618, 5317, 5317, -1000, 583,
	-1000, -1000, 421, -1000, -1000, -1000, -1000, 5317, 5317, 369,
	421, 369, -1000, -1000, -1000, -1000, 10776, 296, -1000, 934,
	-1000, -1000, -8, -1000, -1000, -1000, -1000, -1000, 1218, -1000,
	-1000, -1000, -139, -1000, -1000, 10776, 10776, 10776, 10776, 450,
	320, 11925, 535, 358, 11925, 11925, 11925, 11925, 11925, 11925,
	11925, 11925, 11925, 11925, 11925, 11925, 11925, 11925, 11925, 621,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 707, -1000,
	1216, 659, 659, 244, 244, 244, 244, 244, 244, 244,
	244, 244, 12308, 8082, 6508, 736, 782, 1167, 9231, 9231,
	10776, 10776, 9997, 9614, 9231, 1097, 378, 350, 19618, -1000,
	-1000, 11542, -1000, -1000, -1000, -1000, -1000, 520, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 19618, 19618, 9231, 9231, 9231,
	9231, 9231, -1000, 1153, 736, 1046, 1111, 1210, 274, 522,
	829, -1000, 507, 1153, 15015, 881, -1000, 1046, -1000, -1000,
	-1000, 19618, -1000, -1000, 17313, -1000, -1000, 6111, 19618, 83,
	19618, -1000, 779, 1149, -1000, -1000, -1000, 1140, 14249, 14632,
	19618, 855, 698, -1000, -1000, 261, 6905, -113, -1000, 6905,
	688, -1000, -125, -118, 8465, 228, -1000, -1000, -1000, -1000,
	4523, 13074, 648, 440, -85, -1000, -1000, -1000, 854, -1000,
	854, 854, 854, 854, -41, -41, -41, -41, -1000, -1000,
	-1000, -1000, -1000, 870, 869, -1000, 854, 854, 854, 854,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 863, 863, 863,
	857, 857, 109, 10776, 45, 19618, 1120, 487, 5317, 1116,
	5317, -1000, 707, 189, 2, 25, -1000, 199, -1000, -1000,
	-1000, 19618, 19618, 19618, 19618, 19618, 226, 19618, 19618, 824,
	-1000, 19618, 5317, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 350, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19618,
	-1000, -1000, -1000, -1000, 415, 19618, 19618, 19618, 415, 350,
	-1000, 19618, 19618, -1000, -1000, -1000, -1000, -1000, 350, 320,
	438, 355, -1000, -1000, 515, -1000, -1000, 2036, -1000, -1000,
	-1000, -1000, 535, 11925, 11925, 11925, 435, 2036, 2021, 394,
	2053, 244, 291, 291, 293, 293, 293, 293, 293, 452,
	452, -1000, -1000, -1000, 520, -1000, -1000, -1000, 520, 9231,
	9231, 819, 660, 256, -1000, 871, -1000, -1000, 1153, 758,
	758, 634, 595, 370, 1190, 758, 363, 1189, 758, 758,
	9231, -1000, -1000, 402, -1000, 10776, 520, -1000, 253, -1000,
	726, 795, 741, 758, 520, 520, 758, 758, 1092, -1000,
	-1000, 1038, -1000, 998, 10776, 10776, 10776, -1000, -1000, -1000,
	1092, 1155, -1000, 1009, 1008, 1175, 9231, 16547, 1046, -1000,
	-1000, -1000, 248, 1175, 864, 660, -1000, 19618, 16547, 16547,
	16547, 16547, 16547, -1000, 960, 954, -1000, 953, 951, 989,
	19618, -1000, 764, 736, 14249, 221, 660, -1000, 16930, -1000,
	-1000, 83, 825, 16547, 19618, -1000, -1000, 16547, 19618, 5714,
	-1000, 688, -113, -124, -1000, -1000, -1000, -1000, 350, -1000,
	702, 686, 4126, -1000, -1000, -1000, -1000, 107, -1000, -1000,
	861, 707, -1000, 1106, 315, 315, 347, 707, 1105, -1000,
	-1000, -1000, -1000, 1087, -1000, 396, -87, -1000, -1000, -41,
	-41, -1000, -1000, 228, 1071, 228, 228, 228, 572, 572,
	-1000, -1000, -1000, -1000, -1000, 486, -1000, -1000, -1000, 481,
	-1000, -1000, 859, 591, 938, 45, -1000, 707, 356, 563,
	1059, -1000, -1000, 644, -1000, -1000, -1000, 919, 19618, 15,
	-1000, -1000, -1000, -1000, 333, 333, 326, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 81, 884,
	-1000, -1000, -1000, -1000, -4, 60, 137, -1000, 5317, -1000,
	369, -1000, -1000, -1000, 369, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 435, 2036, 2005, -1000, 11925, 11925, -1000, -1000,
	758, 758, 9231, 6508, 1167, 1092, -1000, -1000, 216, 621,
	216, 11925, 11925, -1000, 11925, 11925, -1000, -166, 790, 359,
	-1000, 10776, 533, -1000, 6508, -1000, 11925, 11925, -1000, -1000,
	-1000, -1000, -1000, -1000, 534, 562, 994, 350, 350, -1000,
	-1000, 19618, -1000, -1000, -1000, -1000, 1171, 10776, -1000, 681,
	-1000, 4920, 1153, 932, 19618, 660, 1218, 13470, 19618, 830,
	-1000, 360, 1149, 922, 930, 1494, -1000, -1000, -1000, -1000,
	947, -1000, 935, -1000, -1000, -1000, -1000, -1000, 736, -1000,
	202, 201, 197, 19618, -1000, 1175, 16547, 823, -1000, 823,
	-1000, 246, -1000, -1000, -1000, -130, -138, -1000, -1000, -1000,
	4523, -1000, 4523, -1000, 19618, 105, -1000, 707, 707, 707,
	-1000, -1000, -1000, 858, 928, 11925, -1000, -1000, -1000, 228,
	228, -1000, 352, -1000, -1000, -1000, 753, -1000, 751, 670,
	747, 11, -1000, 892, 1065, 356, 356, -1000, -1000, 443,
	-1000, -1000, 560, -1000, 927, 19618, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19618, -1000, -1000,
	-1000, -1000, -1000, 19618, -172, 707, 19618, 19618, 19618, 19618,
	-1000, 415, 415, -1000, 11925, 2036, 2036, -1000, -1000, 520,
	-1000, 1153, -1000, 520, 854, 854, -1000, 854, 857, -1000,
	854, -18, 854, -25, 520, 520, 1973, 1844, 1827, 1802,
	660, -161, -1000, 350, 10776, -1000, 1345, 1119, 558, -41,
	-1000, -1000, -1000, 1169, 1163, 350, -1000, -1000, -1000, 1108,
	716, 651, -1000, -1000, 8848, 744, 1007, 245, 734, -1000,
	1167, 19618, 10776, -1000, -1000, 10776, 853, -1000, 10776, -1000,
	-1000, -1000, 1167, 660, 660, 660, 734, 1167, 823, -1000,
	-1000, 286, -1000, -1000, -1000, 4126, -1000, 732, -1000, 1105,
	-1000, -1000, -1000, 19618, -72, 1206, 2036, -1000, -1000, -1000,
	-1000, -41, 551, -41, 424, -1000, 422, -1000, -1000, -234,
	-1000, -1000, 912, 937, -1000, -1000, 19618, -1000, -1000, -1000,
	-1000, -1000, 1110, -1000, 6508, -1000, -1000, 852, 904, -1000,
	-1000, -1000, -1000, 2036, -1000, 1092, -1000, -1000, 108, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 11925, 11925, 11925,
	11925, 11925, 1153, 541, 350, 11925, 11925, -41, -108, -1000,
	10776, 10776, 1101, -1000, 660, -1000, 921, 19618, 660, 19618,
	-1000, 19618, 1153, -1000, 350, 350, 19618, 350, 16164, 19618,
	19618, 13853, 1153, -1000, 45, 722, -1000, 252, -1000, -168,
	228, -1000, 228, 637, 632, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 660, 663, -1000, 349, 19618, 19618,
	-1000, -1000, -1000, 726, 726, 726, 726, 111, 520, -1000,
	726, 726, -289, -1000, 1050, 1043, 350, 656, 1198, -1000,
	660, 1218, 243, 651, -1000, -1000, -1000, 692, 678, -1000,
	678, 678, 221, -1000, -1000, 96, 19618, 404, 1100, -1000,
	1094, -1000, -1000, -1000, -1000, -1000, 62, 6508, 4523, 675,
	-1000, -1000, -1000, -1000, -1000, 520, 75, -193, -1000, -1000,
	-1000, -108, 140, -1000, 1014, 1012, 1161, 19618, 651, 19618,
	-1000, -1000, -1000, -1000, -1000, 19618, -1000, -1000, 539, -1000,
	-1000, 640, -1000, 19618, -1000, -1000, 884, -1000, 966, -170,
	-197, 1018, 1026, 1026, 1043, 1159, 1039, 1033, -1000, 518,
	622, -1000, 703, -1000, -1000, 62, 1006, -172, -1000, 965,
	-1000, 1016, 477, -1000, -1000, -1000, -1000, 517, -1000, 1157,
	1156, -1000, 19618, -1000, 73, -1000, -185, -1000, 473, -1000,
	-1000, -1000, 513, 512, 635, 70, -194, -1000, -1000, -1000,
	-1000, 926, 660, -200, 924, -1000, 1186, 11159, -1000, -1000,
	1197, 237, 237, 726, 520, -1000, -1000, -1000, 106, 556,
	-1000, -1000, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1506, 1505, 25, 81, 74, 1502, 1501, 1500, 1499,
	109, 106, 101, 1498, 1497, 1495, 1493, 1492, 1491, 1487,
	1486, 1485, 1484, 1482, 1480, 1479, 1465, 1464, 1463, 1461,
	1460, 1459, 1458, 1456, 1454, 1453, 100, 1452, 1451, 1450,
	1449, 1448, 1447, 1446, 1444, 1443, 85, 1442, 50, 205,
	58, 69, 1441, 99, 1438, 1437, 1436, 1700, 1433, 45,
	90, 71, 1429, 34, 1427, 1425, 103, 1424, 1423, 72,
	1422, 1421, 2218, 1420, 66, 1413, 13, 57, 1412, 1405,
	1399, 1395, 91, 173, 1392, 1391, 17, 1390, 1389, 124,
	1386, 76, 21, 15, 30, 20, 1385, 75, 1379, 11,
	1371, 77, 1363, 1361, 1359, 1355, 32, 1352, 73, 78,
	23, 1350, 6, 9, 1349, 1346, 1337, 1336, 1334, 1329,
	4, 1328, 1327, 1326, 1325, 1324, 24, 1323, 10, 68,
	64, 29, 7, 1322, 1321, 22, 80, 61, 98, 1320,
	1319, 1315, 711, 1088, 1312, 59, 1311, 102, 1310, 27,
	94, 104, 105, 1309, 1303, 1301, 1300, 1298, 53, 712,
	1995, 180, 97, 1297, 1295, 2438, 39, 65, 18, 1290,
	1287, 1286, 35, 70, 40, 698, 1285, 42, 1284, 1278,
	1277, 1276, 1275, 1271, 1269, 112, 1268, 1266, 1265, 16,
	43, 95, 28, 1264, 1263, 1262, 1261, 60, 79, 1259,
	1258, 63, 67, 1257, 92, 44, 36, 1256, 1254, 1253,
	1239, 33, 12, 1238, 82, 37, 55, 31, 47, 1236,
	19, 1235, 38, 52, 1233, 3, 1232, 14, 1231, 8,
	0, 1230, 5, 51, 1, 1229, 2, 1228, 1227, 1225,
	1356, 1056, 86, 1224, 113,
}
var yyR1 = [...]int{

	0, 238, 239, 239, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 230, 230, 230, 21, 35, 3, 3, 3, 3,
	2, 2, 8, 9, 4, 5, 5, 10, 10, 40,
	40, 11, 12, 12, 12, 12, 242, 242, 66, 66,
	67, 67, 129, 129, 13, 14, 14, 138, 138, 137,
	137, 137, 139, 139, 139, 139, 175, 175, 15, 15,
	15, 15, 15, 15, 47, 47, 232, 232, 231, 229,
	229, 228, 228, 227, 22, 24, 25, 207, 209, 209,
	208, 208, 208, 208, 208, 208, 198, 178, 178, 178,
	178, 181, 181, 179, 179, 179, 179, 179, 179, 179,
	179, 179, 180, 180, 180, 180, 180, 182, 182, 182,
	182, 182, 183, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 183, 183, 183, 184, 184, 184,
	184, 184, 184, 184, 184, 197, 197, 185, 185, 191,
	191, 192, 192, 192, 194, 194, 195, 195, 153, 153,
	153, 187, 187, 188, 188, 193, 193, 189, 189, 189,
	190, 190, 190, 196, 196, 196, 196, 196, 186, 186,
	199, 220, 220, 219, 219, 216, 216, 216, 216, 206,
	206, 213, 213, 213, 213, 213, 213, 203, 203, 203,
	204, 204, 202, 202, 205, 205, 215, 215, 214, 200,
	200, 201, 201, 222, 222, 222, 222, 222, 223, 235,
	236, 234, 234, 234, 234, 234, 154, 154, 154, 210,
	210, 210, 211, 211, 211, 212, 212, 212, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 226,
	224, 224, 225, 225, 17, 23, 23, 18, 18, 18,
	18, 18, 19, 19, 26, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 146, 146, 237, 237, 148,
	148, 144, 144, 147, 147, 145, 145, 145, 149, 149,
	149, 150, 150, 176, 176, 176, 28, 28, 30, 30,
	31, 32, 32, 170, 170, 171, 171, 33, 34, 39,
	39, 39, 39, 39, 39, 41, 41, 41, 7, 7,
	7, 7, 38, 38, 38, 6, 6, 29, 29, 29,
	29, 20, 243, 36, 37, 37, 46, 46, 46, 42,
	42, 42, 45, 45, 45, 50, 50, 52, 52, 52,
	52, 52, 53, 53, 53, 53, 53, 53, 49, 49,
	51, 51, 51, 51, 163, 163, 163, 162, 162, 58,
	58, 59, 59, 60, 60, 61, 61, 61, 98, 75,
	75, 128, 128, 130, 130, 62, 62, 62, 62, 63,
	63, 64, 64, 65, 65, 169, 169, 168, 168, 168,
	167, 167, 68, 68, 68, 70, 69, 69, 69, 69,
	71, 71, 73, 73, 72, 72, 74, 76, 76, 76,
	76, 76, 77, 77, 57, 57, 57, 57, 57, 57,
	57, 57, 141, 141, 79, 79, 78, 78, 78, 78,
	78, 78, 78, 78, 78, 78, 90, 90, 90, 90,
	90, 90, 80, 80, 80, 80, 80, 80, 80, 48,
	48, 91, 91, 91, 97, 92, 92, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 83, 83, 83, 83,
	83, 87, 87, 87, 87, 85, 85, 85, 85, 85,
	85, 85, 85, 85, 85, 85, 85, 85, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	86, 86, 86, 86, 244, 244, 89, 88, 88, 88,
	88, 88, 88, 88, 44, 44, 44, 44, 44, 174,
	174, 177, 177, 177, 177, 177, 177, 177, 177, 177,
	177, 177, 177, 177, 102, 102, 43, 43, 100, 100,
	101, 103, 103, 99, 99, 99, 82, 82, 82, 82,
	82, 82, 82, 82, 84, 84, 84, 104, 104, 105,
	105, 106, 106, 107, 107, 108, 109, 109, 109, 110,
	110, 110, 110, 221, 221, 221, 221, 221, 217, 217,
	217, 217, 218, 218, 218, 54, 54, 54, 54, 56,
	56, 55, 55, 126, 126, 126, 111, 111, 111, 111,
	116, 116, 116, 112, 112, 114, 114, 114, 115, 115,
	115, 113, 119, 119, 121, 121, 120, 120, 118, 118,
	123, 123, 122, 122, 117, 117, 81, 81, 81, 81,
	81, 127, 127, 127, 127, 131, 131, 93, 93, 95,
	95, 94, 96, 132, 132, 135, 133, 133, 136, 136,
	136, 136, 136, 134, 134, 134, 164, 164, 164, 140,
	140, 151, 151, 152, 152, 142, 142, 155, 155, 155,
	155, 155, 155, 155, 155, 155, 155, 143, 143, 143,
	156, 156, 156, 157, 157, 124, 124, 124, 124, 125,
	125, 160, 160, 161, 161, 165, 165, 166, 166, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 158,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	240, 241, 172, 173, 173, 173,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 2, 3, 5, 6, 6, 7,
	4, 6, 5, 7, 8, 1, 3, 7, 8, 1,
	1, 9, 9, 8, 7, 7, 1, 1, 1, 3,
	1, 3, 0, 4, 3, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 2,
	6, 2, 5, 5, 0, 2, 0, 2, 1, 0,
	2, 1, 3, 3, 4, 8, 6, 4, 2, 4,
	1, 1, 3, 4, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 0, 1, 1, 2, 2, 3, 2, 3, 0,
	1, 2, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 10, 11, 11, 12, 1, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 2, 0,
	1, 3, 1, 2, 3, 1, 1, 1, 6, 7,
	7, 7, 7, 4, 5, 4, 4, 7, 5, 5,
	5, 12, 7, 5, 9, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 7,
	1, 3, 8, 8, 3, 3, 5, 4, 6, 5,
	4, 4, 3, 2, 3, 4, 4, 3, 4, 4,
	4, 4, 4, 4, 3, 3, 3, 2, 7, 2,
	3, 4, 5, 7, 5, 4, 2, 4, 4, 3,
	3, 5, 2, 3, 3, 1, 1, 1, 1, 0,
	1, 0, 1, 1, 1, 0, 2, 2, 0, 2,
	2, 0, 2, 0, 1, 1, 2, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 3, 3, 2, 2, 3,
	3, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 3,
	7, 1, 3, 1, 3, 4, 4, 4, 3, 2,
	4, 0, 1, 0, 2, 0, 1, 0, 1, 2,
	1, 1, 1, 2, 2, 1, 2, 3, 2, 3,
	2, 2, 2, 1, 1, 3, 3, 0, 5, 4,
	5, 5, 0, 2, 1, 3, 3, 3, 2, 3,
	1, 2, 0, 3, 1, 1, 3, 3, 4, 4,
	5, 3, 4, 5, 6, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 0,
	2, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 1, 1, 1,
	1, 4, 5, 5, 6, 4, 4, 6, 6, 6,
	8, 8, 8, 8, 9, 8, 5, 4, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 8, 8, 0, 2, 3, 4, 4, 4,
	4, 4, 4, 4, 0, 3, 4, 7, 3, 1,
	1, 2, 3, 3, 1, 2, 2, 1, 2, 1,
	2, 2, 1, 2, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 0, 3, 0,
	2, 0, 3, 1, 3, 2, 0, 1, 1, 0,
	2, 4, 4, 0, 2, 2, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 0, 3, 3, 3, 0,
	3, 1, 1, 0, 2, 4, 0, 9, 3, 5,
	0, 3, 3, 0, 1, 0, 2, 2, 0, 2,
	2, 2, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 4, 0, 1, 2, 1, 5, 4,
	4, 1, 3, 3, 5, 0, 5, 1, 3, 1,
	2, 3, 1, 1, 3, 3, 1, 3, 3, 3,
	3, 3, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 0, 2, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 2, 3,
	0, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -238, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -26, -27, -28, -30,
	-31, -32, -33, -34, -6, -29, -20, -21, -35, -4,
	-240, 6, 7, 8, -40, 10, 11, 31, -22, -24,
	-25, 146, 147, 149, 148, 182, 150, 175, 70, 207,
	208, 210, 211, 212, 213, -41, 180, 181, 32, 33,
	152, 35, 41, 80, 9, 301, 177, 176, 26, -239,
	403, -46, 5, -106, 16, -3, -36, -243, -36, -36,
	-36, -36, -36, -36, -207, -209, 80, 119, 80, -173,
	-240, -161, -160, -158, -230, -159, 151, 318, 102, 23,
	25, 257, 105, 137, 17, 106, 136, 302, 146, 68,
	319, 293, 294, 291, 297, 304, 305, 292, 263, 30,
	11, 321, 26, 176, 22, 36, 130, 148, 109, 110,
	179, 24, 177, 98, 324, 20, 71, 12, 14, 325,
	326, 15, 159, 158, 121, 155, 66, 9, 142, 27,
	118, 62, 327, 29, 328, 329, 330, 331, 64, 119,
	18, 295, 296, 32, 332, 310, 183, 132, 69, 55,
	103, 333, 334, 96, 335, 99, 72, 100, 16, 67,
	38, 336, 337, 338, 339, 120, 149, 301, 65, 340,
	153, 6, 307, 31, 175, 63, 341, 154, 108, 308,
	309, 157, 97, 5, 160, 33, 10, 70, 73, 298,
	299, 300, 53, 107, 13, 342, 101, 83, 84, 85,
	311, 168, 343, 344, 76, 207, 221, 215, 242, 234,
	312, 345, 169, 195, 232, 235, 279, 166, 346, 262,
	269, 94, 210, 288, 347, 75, 47, 40, 178, 230,
	226, 196, 348, 320, 224, 46, 28, 45, 349, 271,
	247, 44, 350, 79, 316, 273, 225, 270, 152, 351,
	171, 399, 164, 352, 248, 252, 353, 280, 48, 354,
	355, 356, 74, 219, 220, 357, 204, 167, 282, 246,
	165, 34, 274, 313, 54, 186, 283, 42, 250, 41,
	205, 358, 245, 241, 49, 359, 360, 361, 362, 244,
	218, 240, 202, 58, 254, 253, 255, 278, 237, 363,
	364, 365, 172, 77, 366, 227, 19, 367, 368, 197,
	369, 52, 370, 371, 286, 181, 372, 50, 37, 184,
	373, 374, 375, 376, 377, 378, 272, 249, 251, 161,
	188, 268, 315, 379, 284, 223, 380, 173, 185, 180,
	287, 174, 381, 382, 383, 384, 385, 386, 387, 211,
	39, 388, 389, 390, 391, 206, 200, 281, 290, 57,
	78, 259, 392, 217, 163, 198, 393, 208, 51, 192,
	264, 203, 43, 238, 187, 394, 395, 228, 229, 243,
	216, 239, 209, 400, 189, 182, 396, 289, 199, 260,
	317, 236, 233, 193, 397, 156, 190, 191, 398, 401,
	275, 265, 276, 277, 266, 194, 314, 285, 231, 261,
	292, 153, 154, -143, -47, 314, 100, -143, 156, 292,
	153, 266, 154, 154, 155, 156, 292, 153, 154, -72,
	-165, -230, -159, 154, 137, 235, 279, 146, 263, 274,
	275, 271, -148, 272, 188, -176, 154, -144, 262, 265,
	266, 194, -237, -230, 273, 281, 280, 267, 277, 276,
	-165, 209, -170, 214, -160, 212, -72, -39, 399, 150,
	-172, -172, 264, 264, -172, -92, -57, -78, 103, -83,
	30, 24, -82, -79, -99, -96, -97, 137, 138, 140,
	139, 141, 126, 127, 134, 104, 142, -87, -85, -86,
	-88, 87, 86, 95, 88, 89, 90, 91, 96, 97,
	98, -160, -165, -94, -240, 64, 65, 302, 303, 304,
	305, 310, 306, 106, 53, 291, 300, 299, 298, 295,
	296, 293, 294, 308, 309, 159, 292, 153, 132, 301,
	-230, -159, 40, -5, -4, -240, 6, 21, 22, -110,
	18, 17, -241, 82, -42, -52, 59, 60, -53, 22,
	36, 63, 61, -37, -51, 128, -57, -165, -51, -142,
	158, -142, -142, -133, -175, 209, -136, 281, 280, -161,
	-134, 279, 235, 278, -208, 119, -198, -201, -160, 170,
	-223, 166, -72, -215, -214, -160, -152, 159, -152, -152,
	-124, 160, 163, 164, -54, 76, 87, 301, 154, -72,
	-230, -230, 146, 148, 151, 72, -23, -72, -151, 159,
	-230, -151, -151, -151, -72, 143, -72, -230, 31, -149,
	119, 13, 292, -230, 188, 154, 189, 156, -150, 119,
	-150, -150, -203, 155, 34, 167, -173, 192, 193, 192,
	-147, -146, 269, 270, 264, 268, 13, 193, 264, 191,
	-149, -173, 157, -160, -38, -160, 87, -7, -3, -11,
	-10, -12, 111, -172, -172, 81, 102, 100, 101, 118,
	-57, -80, 121, 103, 119, 120, 105, 123, 122, 133,
	126, 127, 128, 129, 130, 131, 132, 124, 125, 136,
	111, 112, 113, 114, 115, 116, 117, -141, -240, -97,
	-240, 144, 145, -83, -83, -83, -83, -83, -83, -83,
	-83, -83, -83, -240, 143, -2, -92, -4, -240, -240,
	-240, -240, -240, -240, -240, -240, -102, -57, -240, -244,
	-89, -240, -244, -89, -244, -89, -244, -240, -244, -89,
	-244, -89, -244, -244, -89, -240, -240, -240, -240, -240,
	-240, -240, -172, -106, -3, -36, -126, 20, 32, -57,
	-107, -108, -57, -106, 55, -49, -51, -53, 59, 60,
	93, 12, -163, -162, 23, -160, 87, 143, 12, -73,
	27, -72, -59, -60, -61, -62, -75, -98, -240, -72,
	12, -66, -67, -72, -74, -165, 81, 209, -136, -175,
	-138, -137, 282, 284, 111, -164, -160, 87, 30, 31,
	82, 81, -72, -178, -181, -183, -182, -184, -179, -180,
	232, 233, 137, 236, 238, 239, 240, 241, 242, 243,
	244, 245, 246, 247, 31, 178, 228, 229, 230, 231,
	248, 249, 250, 251, 252, 253, 254, 255, 215, 234,
	312, 216, 217, 218, 219, 220, 221, 223, 224, 225,
	226, 227, -230, 80, 82, 81, -185, 80, -230, 103,
	-230, -72, 155, -56, 198, 111, 87, -72, -173, -173,
	-173, 190, 190, 154, 154, 200, -72, 81, 157, -66,
	24, 72, -72, -230, -230, -166, -165, -158, -173, -149,
	87, -57, -173, -173, -173, -72, -173, -173, 87, -204,
	12, 121, -173, -173, -145, 12, 121, -204, -145, -57,
	-150, 72, -171, 212, 246, 400, 401, 402, -57, -57,
	-57, -57, -90, 96, 103, 97, 98, -83, -91, -94,
	-97, 92, 121, 119, 120, 105, -83, -83, -83, -83,
	-83, -83, -83, -83, -83, -83, -83, -83, -83, -83,
	-83, -174, -230, 87, -230, -82, -82, -160, -50, 22,
	36, -49, -161, -166, -158, -46, -241, -241, -106, -49,
	-49, -57, -57, -99, 87, -49, -99, 87, -49, -49,
	-45, 22, 36, -100, -101, 107, -99, -160, -165, -241,
	-83, -160, -160, -49, -50, -50, -49, -49, -110, -241,
	-111, 27, 10, 121, 81, 19, 81, -109, 25, 26,
	-110, -84, -160, 88, 91, -58, 81, 12, -53, -72,
	-162, 128, -166, -72, -129, 184, -72, 31, 81, -68,
	-70, -69, -71, 62, 66, 68, 63, 64, 65, 69,
	-169, 23, -59, -3, -240, -168, 184, -167, 23, -165,
	87, -72, -66, -242, 81, 12, 73, -242, 81, 143,
	-136, -138, 81, 283, 285, 286, 72, 99, -57, -190,
	136, -210, -211, -212, -161, 87, 88, -198, -199, -200,
	-213, 170, -222, 161, 163, 164, 160, -202, 171, -223,
	155, 29, 82, -153, 96, 103, -194, 260, -185, -185,
	-185, -185, -185, -189, 235, -189, -189, -189, 80, 80,
	-185, -185, -185, -185, -191, 80, -191, -191, -192, 80,
	-192, -223, 166, -57, -220, -219, -216, 73, 165, 94,
	314, -214, -109, 88, -173, 24, -173, -230, 156, 206,
	199, 202, 203, -155, 151, 148, 149, -226, 147, 257,
	235, 94, 30, 16, 302, 184, 317, -230, 185, -72,
	-72, -72, -72, -72, 151, 148, -72, -72, -72, -173,
	-72, -149, -165, -165, -72, -149, -72, -160, 96, 97,
	98, -91, -83, -83, -83, -48, 179, 102, -241, -241,
	-49, -49, -240, 143, -5, -110, -241, -241, 81, 73,
	23, 12, 12, -241, 12, 12, -241, -241, -49, -103,
	-101, 109, -57, -241, 143, -241, 81, 81, -241, -241,
	-241, -241, -241, -126, 38, 46, 57, -57, -57, -108,
	-126, -140, 20, 12, 53, 53, -77, 13, -51, -59,
	-53, 143, -77, -81, 31, 53, -3, -240, -240, -132,
	-135, -99, -60, -61, -61, -60, -61, 62, 62, 62,
	67, 62, 67, 62, -69, -165, -241, -241, -3, -76,
	70, 158, 71, -240, -167, -129, 73, -59, -72, -59,
	-74, -165, 128, -137, -139, 287, 284, 290, -230, 87,
	81, -212, 111, -201, 80, -230, 29, -202, -202, -202,
	-205, -230, -205, 29, -187, 30, 96, -195, 261, -189,
	-189, -190, 31, -190, -190, -190, -197, 87, -197, 88,
	88, 82, -221, -217, -218, 32, 76, -216, -230, -206,
	111, 87, 37, 82, -125, 73, -72, -55, 196, 204,
	-172, -233, 166, 162, 170, 171, 164, 83, 84, 85,
	155, 29, 161, 163, 184, 160, -233, -156, -157, 157,
	23, 155, 29, 184, -232, 73, 190, 257, 190, 157,
	-173, -145, -145, -48, 102, -83, -83, -241, -241, -50,
	-161, -106, -126, -177, 137, 232, 178, 230, 226, 246,
	237, 259, 228, 260, -174, -177, -83, -83, -83, -83,
	311, -106, 110, -57, 108, -161, -83, -83, 39, 87,
	87, 58, -72, -104, 14, -57, 128, -110, -131, 72,
	-132, -93, -95, -94, -240, -127, -241, -160, -130, -160,
	-77, 81, 111, -64, -63, 72, 73, -65, 72, -63,
	62, 62, -241, 155, 155, 155, -130, -77, -59, -77,
	-77, 143, 284, 288, 289, -211, -212, -215, -222, 171,
	-205, -205, -205, 80, -188, 72, -83, -190, -190, -230,
	137, 82, 81, 82, 81, 82, 81, -154, 349, 103,
	-218, -217, -206, -206, 88, 87, 72, -160, -172, -172,
	-72, -172, -160, -229, 314, -231, -230, -160, -160, -160,
	-72, -149, -149, -83, -241, -110, -241, -185, -185, -185,
	-192, -185, 220, -185, 220, -241, -241, 20, 20, 20,
	20, -240, -43, 307, -57, 81, 81, 87, -189, -105,
	15, 17, 28, -131, 81, -241, -241, 81, 53, 143,
	-241, 81, -106, -135, -57, -57, 80, -57, -240, -240,
	-240, -241, -106, -77, 82, -128, -160, -193, 257, 10,
	-189, 87, -189, 88, 88, 349, 30, 77, 78, 79,
	30, 74, 75, -72, 27, -228, -227, -161, 80, 73,
	-126, -189, -230, -83, -83, -83, -83, -83, -110, 87,
	-83, -83, -189, -113, -118, -147, -57, -92, 29, -95,
	53, -3, -160, -93, -160, -160, -110, -128, -128, -241,
	-128, -128, -168, -110, -220, 82, 81, -196, 161, 29,
	160, -86, -190, -190, 82, 82, -240, 81, 111, -128,
	-72, -241, -241, -241, -241, -44, 121, 314, -241, -241,
	-241, -116, 399, -119, 42, -120, 43, 10, -93, 143,
	82, -241, -241, -241, -76, 173, -160, -186, 94, 29,
	29, -224, -225, 184, -227, -212, 82, -241, 312, 69,
	315, -113, 47, 238, -121, 51, -122, -117, 52, 17,
	-132, -160, -72, 87, -241, 81, -160, -232, 58, 313,
	316, -114, 49, -112, 48, -112, -120, 17, -123, 44,
	45, 87, 80, -225, 53, -229, 58, -115, 50, 72,
	99, 87, 17, 17, -128, 186, 314, 72, 99, 87,
	87, 82, 187, 315, -235, -236, 72, -240, 316, -236,
	72, 11, 10, -83, 183, -234, 174, 169, 172, 31,
	-234, -241, -241, 168, 30, 96,
}
var yyDef = [...]int{

	30, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 641,
	0, 382, 382, 382, 382, 382, 382, 382, 0, 0,
	1113, -2, 757, 0, 0, 0, 0, -2, 347, 348,
	0, 350, -2, 0, 0, 359, 1112, 1112, 0, 0,
	1112, 0, 0, 1110, 49, 50, 365, 366, 367, 1,
	3, 0, 386, 649, 0, 0, -2, 384, 0, 0,
	745, 745, 745, 0, 78, 79, 0, 0, 0, 81,
	1114, 1115, 773, 774, 771, 772, 779, 780, 781, 782,
	783, 784, 785, 786, 787, 788, 789, 790, 791, 792,
	793, 794, 795, 796, 797, 798, 799, 800, 801, 802,
	803, 804, 805, 806, 807, 808, 809, 810, 811, 812,
	813, 814, 815, 816, 817, 818, 819, 820, 821, 822,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 865, 866, 867, 868, 869, 870, 871, 872,
	873, 874, 875, 876, 877, 878, 879, 880, 881, 882,
	883, 884, 885, 886, 887, 888, 889, 890, 891, 892,
	893, 894, 895, 896, 897, 898, 899, 31, 32, 33,
	900, 901, 902, 903, 904, 905, 906, 907, 908, 909,
	910, 911, 912, 913, 914, 915, 916, 917, 918, 919,
	920, 921, 922, 923, 924, 925, 926, 927, 928, 929,
	930, 931, 932, 933, 934, 935, 936, 937, 938, 939,
	940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
	950, 951, 952, 953, 954, 955, 956, 957, 958, 959,
	960, 961, 962, 963, 964, 965, 966, 967, 968, 969,
	970, 971, 972, 973, 974, 975, 976, 977, 978, 979,
	980, 981, 982, 983, 984, 985, 986, 987, 988, 989,
	990, 991, 992, 993, 994, 995, 996, 997, 998, 999,
	1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009,
	1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019,
	1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029,
	1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039,
	1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049,
	1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059,
	1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069,
	1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079,
	1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089,
	1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099,
	1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109,
	743, 743, 743, 765, 665, 0, 0, 0, 0, 0,
	0, 0, 0, 741, 0, 741, 741, 741, 0, 293,
	464, 775, 776, 0, 0, 0, 338, 0, 341, 341,
	341, 307, 0, 309, 1113, 0, 0, 0, 316, 0,
	0, 322, 338, 1113, 330, 344, 345, 332, 327, 328,
	346, 349, 0, 354, 357, 0, 372, 0, 951, 364,
	377, 378, 1112, 1112, 381, 34, 515, 474, 0, 480,
	482, 0, 517, 518, 519, 520, 521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 547, 548, 549,
	550, 626, 627, 628, 629, 630, 631, 632, 633, 484,
	485, 623, 0, 722, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 614, 0, 584, 584, 584, 584, 584,
	584, 584, 584, 0, 0, 0, 0, 0, 0, 0,
	-2, -2, 1112, 641, 45, 0, 382, 387, 388, 673,
	0, 0, 641, 1111, 0, 0, -2, -2, 398, 404,
	405, 406, 407, 383, 0, 410, 414, 0, 0, 0,
	746, 0, 0, 64, 0, 1082, 726, -2, -2, 0,
	0, -2, 915, -2, 0, 0, 100, 101, 0, 0,
	222, 917, 98, 0, 216, 157, 0, 0, 0, 0,
	0, 766, 767, 768, 669, 0, 758, 85, 0, 1113,
	1113, 1113, 0, 0, 0, 0, 284, 0, 0, 0,
	0, 0, 0, 0, 292, 0, 294, 1113, 338, 297,
	0, 0, 1113, 1113, 1113, 0, 1113, 1113, 304, 0,
	305, 306, 0, 207, 208, 209, 310, 1113, 1113, 335,
	0, 335, 333, 334, 325, 326, 0, 341, 319, 320,
	323, 324, 355, 358, 375, 373, 374, 376, 368, 369,
	370, 371, 0, 379, 380, 0, 0, 0, 0, 0,
	478, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	502, 503, 504, 505, 506, 507, 508, 481, 0, 495,
	0, 0, 0, 537, 538, 539, 540, 541, 542, 543,
	544, 545, 0, 395, 0, 0, 0, 641, 0, 0,
	0, 0, 0, 0, 0, 392, 0, 615, 0, 568,
	576, 0, 569, 577, 570, 578, 571, 0, 572, 579,
	573, 580, 574, 575, 581, 0, 0, 0, 395, 395,
	0, 0, 35, 649, 0, 397, 676, 0, 0, 650,
	642, 643, 646, 649, 0, 419, 408, 399, 402, 403,
	385, 0, 411, 415, 0, 417, 418, 0, 0, 62,
	0, 463, 0, 421, 423, 424, 425, 445, 0, 447,
	0, 0, 0, 58, 60, 464, 0, 1082, 732, 0,
	66, 67, 0, 0, 0, 180, 736, 737, 738, 734,
	239, 0, 0, 168, 164, 108, 109, 110, 157, 112,
	157, 157, 157, 157, 177, 177, 177, 177, 140, 141,
	142, 143, 144, 0, 0, 127, 157, 157, 157, 157,
	147, 148, 149, 150, 151, 152, 153, 154, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 159, 159, 159,
	161, 161, 0, 0, 191, 0, 646, 0, 1113, 0,
	1113, 94, 0, 0, 0, 0, 759, 0, 253, 255,
	256, 0, 0, 0, 0, 0, 0, 0, 0, 287,
	742, 0, 1113, 290, 291, 465, 777, 778, 295, 296,
	339, 340, 298, 299, 300, 301, 302, 303, 342, 0,
	210, 211, 311, 315, 338, 0, 0, 0, 338, 317,
	318, 0, 0, 356, 360, 361, 362, 363, 516, 475,
	476, 477, 479, 496, 0, 498, 500, 486, 487, 511,
	512, 513, 0, 0, 0, 0, 509, 491, 0, 522,
	523, 524, 525, 526, 527, 528, 529, 530, 531, 532,
	533, 536, 599, 600, 0, 534, 535, 546, 0, 0,
	0, 396, 624, 0, -2, 0, 514, 721, 649, 0,
	0, 0, 0, 519, 626, 0, 519, 626, 0, 0,
	0, 393, 394, 621, 618, 0, 0, 623, 0, 585,
	0, 0, 0, 0, 0, 0, 0, 0, 673, 46,
	36, 0, 674, 0, 0, 0, 0, 645, 647, 648,
	673, 0, 634, 0, 0, 472, 0, 0, 400, 42,
	416, 412, 0, 472, 0, 0, 462, 0, 0, 0,
	0, 0, 0, 452, 0, 0, 455, 0, 0, 0,
	0, 446, 0, 0, 0, 467, 1019, 448, 0, 450,
	451, -2, 0, 0, 0, 56, 57, 0, 0, 0,
	727, 65, 0, 0, 70, 71, 728, 729, 730, 731,
	0, 97, 240, 242, 245, 246, 247, 102, 104, 105,
	0, 0, 220, 1029, 1064, 952, 214, 214, 950, 227,
	212, 213, 99, 171, 169, 0, 166, 165, 111, 177,
	177, 134, 135, 180, 0, 180, 180, 180, 0, 0,
	128, 129, 130, 131, 122, 0, 123, 124, 125, 0,
	126, 221, 0, 0, 653, 192, 193, 0, 199, 0,
	0, 217, 218, 0, 82, 744, 83, 769, 0, 0,
	666, 667, 668, 1112, 0, 0, 760, 254, 747, 748,
	749, 750, 751, 752, 753, 754, 755, 756, 0, 86,
	258, 260, 259, 263, 0, 0, 0, 285, 1113, 289,
	335, 312, 336, 337, 335, 314, 321, 352, 497, 499,
	501, 488, 509, 492, 0, 489, 0, 0, 483, 551,
	0, 0, 395, 0, 641, 673, 555, 556, 0, 0,
	0, 0, 0, 592, 0, 0, 593, 0, 641, 0,
	619, 0, 0, 567, 0, 586, 0, 0, 587, 588,
	589, 590, 591, 38, 0, 0, 0, 651, 652, 644,
	37, 0, 739, 740, 635, 636, 637, 0, 409, 420,
	401, 0, 649, 715, 0, 0, 707, 0, 0, 472,
	723, 0, 422, 441, 443, 0, 438, 453, 454, 456,
	0, 458, 0, 460, 461, 426, 427, 428, 0, 429,
	0, 0, 0, 0, 449, 472, 0, 472, 59, 472,
	61, 0, 466, 68, 69, 0, 0, 75, 181, 182,
	0, 243, 0, 103, 0, 0, 201, 214, 214, 214,
	205, 215, 206, 0, 173, 0, 170, 107, 167, 180,
	180, 136, 0, 137, 138, 139, 0, 155, 0, 0,
	0, 236, 80, 657, 656, 199, 199, 194, 195, 0,
	200, 197, 0, 158, 0, 0, 96, 670, 671, 672,
	248, 1112, 265, 266, 267, 268, 269, 270, 271, 272,
	273, 274, 275, 276, 277, 278, 1112, 0, 1112, 761,
	762, 763, 764, 0, 89, 0, 0, 0, 0, 0,
	288, 338, 338, 490, 0, 510, 493, 552, 553, 0,
	625, 649, 40, 0, 157, 157, 604, 157, 161, 607,
	157, 609, 157, 612, 0, 0, 0, 0, 0, 0,
	0, 616, 566, 622, 0, 624, 0, 0, 0, 177,
	678, 675, 39, 639, 0, 473, 413, 43, 47, 0,
	715, 706, 717, 719, 0, 0, 0, 711, 0, 433,
	641, 0, 0, 435, 442, 0, 0, 436, 0, 437,
	457, 459, -2, 0, 0, 0, 0, 641, 472, 54,
	55, 0, 72, 73, 74, 241, 244, 0, 219, 0,
	202, 203, 204, 0, 175, 0, 172, 132, 133, 178,
	179, 177, 0, 177, 0, 162, 0, 228, 237, 0,
	654, 655, 0, 0, 196, 198, 0, 770, 249, 250,
	251, 252, 0, 257, 0, 87, 88, 0, 0, 262,
	286, 308, 313, 494, 554, 673, 557, 601, 177, 605,
	606, 608, 610, 611, 613, 559, 558, 0, 0, 0,
	0, 0, 649, 0, 620, 0, 0, 177, 698, 44,
	0, 0, 0, 48, 0, 720, 0, 0, 0, 0,
	63, 0, 649, 724, 725, 439, 0, 444, 0, 0,
	0, 447, 649, 53, 191, 0, 431, 183, 176, 0,
	180, 156, 180, 0, 0, 238, 658, 659, 660, 661,
	662, 663, 664, 95, 0, 90, 91, 0, 0, 0,
	41, 602, 603, 0, 0, 0, 0, 594, 0, 617,
	0, 0, 680, 679, 692, 696, 640, 638, 0, 718,
	0, 710, 713, 709, 712, 434, 51, 0, 0, 469,
	0, 0, 467, 52, 190, 0, 0, 188, 0, 185,
	187, 174, 145, 146, 160, 163, 0, 0, 0, 0,
	264, 560, 562, 561, 563, 0, 0, 0, 565, 582,
	583, 698, 0, 691, 694, -2, 0, 0, 708, 0,
	440, 468, 470, 471, 430, 0, 432, 106, 0, 184,
	186, 0, 280, 0, 92, 93, 86, 564, 0, 0,
	0, 685, 683, 683, 696, 0, 700, 0, 705, 0,
	716, 714, 0, 189, 279, 0, 0, 89, 595, 0,
	598, 688, 0, 681, 684, 682, 693, 0, 699, 0,
	0, 697, 0, 281, 0, 261, 596, 677, 0, 686,
	687, 695, 0, 0, 0, 0, 0, 689, 690, 701,
	703, 223, 0, 0, 224, 225, 0, 0, 597, 226,
	0, 0, 0, 0, 0, 229, 231, 232, 0, 0,
	230, 282, 283, 233, 234, 235,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 403,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:367
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:372
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:373
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:377
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:406
		{
			setParseTree(yylex, nil)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:412
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:416
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:420
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:426
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:432
		{
			yyVAL.statement = &Load{}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:438
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 37:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:447
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 38:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:451
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:455
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 40:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:478
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:486
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:492
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:498
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:506
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:512
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:516
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:523
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:535
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:547
		{
			yyVAL.insertAction = InsertAct
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:551
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 51:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:557
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:563
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:567
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:571
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 55:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:575
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:580
		{
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:581
		{
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:589
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:595
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:599
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:604
		{
			yyVAL.partitions = nil
		}
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:608
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:614
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:620
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:624
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:630
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:634
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:640
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:644
		{
			yyVAL.characteristic = ReadWrite
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:648
		{
			yyVAL.characteristic = ReadOnly
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:654
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:658
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:662
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:666
		{
			yyVAL.isolationLevel = Serializable
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.scope = SessionScope
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:676
		{
			yyVAL.scope = GlobalScope
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:682
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:693
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 81:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:700
		{
			yyDollar[1].createView.FullyParsed = true
			yyVAL.statement = yyDollar[1].createView
		}
	case 82:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:705
		{
			yyVAL.statement = &DBDDL{Action: CreateDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
		}
	case 83:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:709
		{
			yyVAL.statement = &DBDDL{Action: CreateDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:714
		{
			yyVAL.boolean = false
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:718
		{
			yyVAL.boolean = true
		}
	case 86:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:723
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 87:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:727
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:733
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:738
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:743
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:749
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:754
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:760
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:766
		{
			yyVAL.ddl = &DDL{Action: CreateDDLAction, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 95:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:773
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[3].str, Name: yyDollar[5].colIdent, IndexType: yyDollar[6].str, Table: yyDollar[8].tableName, OnlineHint: yyDollar[2].OnlineDDLHint}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 96:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:780
		{
			yyVAL.createView = &CreateView{ViewName: yyDollar[6].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Security: yyDollar[4].str}
			setDDL(yylex, yyVAL.createView)
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:788
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 98:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:795
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:799
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:805
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:810
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:815
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:819
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 104:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:824
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:828
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 106:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:834
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 107:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:845
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:856
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:861
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:871
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:875
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:879
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:883
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:887
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:891
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:895
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:899
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:905
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:911
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:917
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 125:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:923
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:929
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:937
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:941
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 129:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:945
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 130:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:949
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:953
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:959
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 133:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:963
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:967
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:971
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 136:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:975
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:979
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:983
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:987
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:991
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:995
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:999
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1003
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1007
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 145:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1011
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1022
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1030
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1034
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1042
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1061
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 157:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1066
		{
			yyVAL.literal = nil
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1070
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1075
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1079
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 161:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1087
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 162:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1091
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1097
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 164:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1105
		{
			yyVAL.boolean = false
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1109
		{
			yyVAL.boolean = true
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1114
		{
			yyVAL.boolean = false
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1118
		{
			yyVAL.boolean = true
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1124
		{
			yyVAL.boolean = false
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1128
		{
			yyVAL.boolean = false
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1132
		{
			yyVAL.boolean = true
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1137
		{
			yyVAL.optVal = nil
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1141
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1146
		{
			yyVAL.optVal = nil
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1150
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 175:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1155
		{
			yyVAL.boolean = false
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.boolean = true
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1164
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1168
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1172
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1177
		{
			yyVAL.str = ""
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1181
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1185
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1190
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1194
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1198
		{
			yyVAL.colKeyOpt = colKey
		}
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1202
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1206
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1211
		{
			yyVAL.literal = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1215
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 190:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1221
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1226
		{
			yyVAL.indexOptions = nil
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1230
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1236
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1240
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1246
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 196:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1250
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 197:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1255
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 199:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1265
		{
			yyVAL.str = ""
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1269
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1275
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 202:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1279
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1283
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1287
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1291
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1295
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1301
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1305
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1309
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1316
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1320
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1330
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1335
		{
			yyVAL.str = ""
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1345
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 217:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1349
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1355
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1361
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1365
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1371
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1375
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 223:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1381
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 224:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1385
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 225:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1389
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 226:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1393
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1397
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 228:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1403
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1409
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1415
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1421
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1429
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1433
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1437
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 236:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1442
		{
			yyVAL.boolean = true
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1446
		{
			yyVAL.boolean = true
		}
	case 238:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1450
		{
			yyVAL.boolean = false
		}
	case 239:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1455
		{
			yyVAL.str = ""
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1459
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1463
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1471
		{
			yyVAL.str = yyDollar[1].str
		}
	case 243:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1475
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1479
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1485
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1489
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1493
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 248:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1499
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 249:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1503
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 250:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1507
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 251:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1511
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 252:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1516
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 253:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1521
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 254:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1525
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 255:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1529
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 256:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1533
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 257:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1537
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 258:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1549
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 259:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1559
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 260:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1563
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1567
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1580
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 263:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 264:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 279:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1623
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1629
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1633
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 282:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1639
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 283:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1643
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 284:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1649
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1655
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1659
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1667
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1671
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 289:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1676
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1680
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1684
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1694
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1699
		{
			yyVAL.statement = &OtherRead{}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1705
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1710
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1715
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 298:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1720
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1725
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 300:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1729
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 301:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1733
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1741
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1745
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1750
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1755
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1760
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 308:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1764
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1769
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1773
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1781
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 313:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1785
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 314:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1789
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1799
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1803
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1807
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1811
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1816
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1820
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1824
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1828
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1833
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1847
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1853
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1857
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1863
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1867
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1873
		{
			yyVAL.str = ""
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1877
		{
			yyVAL.str = "extended "
		}
	case 331:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1883
		{
			yyVAL.str = ""
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1887
		{
			yyVAL.str = "full "
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1893
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1897
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 335:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1903
		{
			yyVAL.str = ""
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1907
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1911
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1917
		{
			yyVAL.showFilter = nil
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1921
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1925
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1931
		{
			yyVAL.showFilter = nil
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1935
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1941
		{
			yyVAL.scope = ImplicitScope
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1945
		{
			yyVAL.scope = SessionScope
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1949
		{
			yyVAL.scope = GlobalScope
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1955
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1959
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1965
		{
			yyVAL.statement = &Begin{}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1969
		{
			yyVAL.statement = &Begin{}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1975
		{
			yyVAL.statement = &Commit{}
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1981
		{
			yyVAL.statement = &Rollback{}
		}
	case 352:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1985
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1990
		{
			yyVAL.empty = struct{}{}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.empty = struct{}{}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1995
		{
			yyVAL.empty = struct{}{}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1997
		{
			yyVAL.empty = struct{}{}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2002
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2008
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 359:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2013
		{
			yyVAL.explainType = EmptyType
		}
	case 360:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2017
		{
			yyVAL.explainType = JSONType
		}
	case 361:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2021
		{
			yyVAL.explainType = TreeType
		}
	case 362:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2025
		{
			yyVAL.explainType = VitessType
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2029
		{
			yyVAL.explainType = TraditionalType
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2033
		{
			yyVAL.explainType = AnalyzeType
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2039
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2043
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2047
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2053
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2057
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2061
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2070
		{
			yyVAL.str = ""
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.str = ""
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.str = ""
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &OtherRead{}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 377:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2102
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2106
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2112
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2116
		{
			setAllowComments(yylex, true)
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2120
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2126
		{
			yyVAL.bytes2 = nil
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2130
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2136
		{
			yyVAL.boolean = true
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2140
		{
			yyVAL.boolean = false
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2144
		{
			yyVAL.boolean = true
		}
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2149
		{
			yyVAL.str = ""
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2153
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2157
		{
			yyVAL.str = SQLCacheStr
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2162
		{
			yyVAL.boolean = false
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2166
		{
			yyVAL.boolean = true
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2170
		{
			yyVAL.boolean = true
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2175
		{
			yyVAL.selectExprs = nil
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2179
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2184
		{
			yyVAL.strs = nil
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2188
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2192
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2196
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 401:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2200
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = SQLCacheStr
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = DistinctStr
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2218
		{
			yyVAL.str = DistinctStr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2222
		{
			yyVAL.str = StraightJoinHint
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2232
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2236
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2242
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2246
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2250
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2254
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2259
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2274
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2279
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2283
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2311
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2317
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2323
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 430:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2327
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2337
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2343
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2347
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2360
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2364
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 437:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2368
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2372
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 439:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2378
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2380
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2384
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2386
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 443:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2390
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2392
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 445:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2395
		{
			yyVAL.empty = struct{}{}
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2397
		{
			yyVAL.empty = struct{}{}
		}
	case 447:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2400
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2404
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2408
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2415
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2421
		{
			yyVAL.joinType = NormalJoinType
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2425
		{
			yyVAL.joinType = NormalJoinType
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2429
		{
			yyVAL.joinType = NormalJoinType
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2435
		{
			yyVAL.joinType = StraightJoinType
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2441
		{
			yyVAL.joinType = LeftJoinType
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2445
		{
			yyVAL.joinType = LeftJoinType
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.joinType = RightJoinType
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2453
		{
			yyVAL.joinType = RightJoinType
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2459
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2463
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2473
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2477
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2483
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2487
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2493
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2498
		{
			yyVAL.indexHints = nil
		}
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2502
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2506
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2510
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2514
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2519
		{
			yyVAL.expr = nil
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2523
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2529
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2533
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2537
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2541
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2545
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 479:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2549
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2553
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2557
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = ""
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2577
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 486:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2583
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2587
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2591
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2595
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2599
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2603
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 492:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2607
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 493:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2611
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 494:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2615
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 495:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2619
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2625
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 497:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2629
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2633
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 499:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2637
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2641
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 501:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2645
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2651
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2655
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2663
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2667
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2671
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2675
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2680
		{
			yyVAL.expr = nil
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2684
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2694
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2704
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2710
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 516:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2714
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2736
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 522:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2740
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2744
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 524:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2748
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2752
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2756
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 527:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2760
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2764
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2768
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2772
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2776
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2780
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 533:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2784
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2788
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2792
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2796
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 537:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2800
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 538:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2804
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 539:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2808
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 540:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2812
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 541:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2816
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2820
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2828
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2842
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 545:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2846
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2850
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 551:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2868
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 552:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2872
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 553:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2876
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 554:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2880
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2890
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2894
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 557:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2898
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 558:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2902
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 559:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2906
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 560:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2910
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 561:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2914
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 562:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2918
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 563:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2922
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 564:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2926
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 565:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2930
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 566:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2934
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2938
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 568:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2948
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2952
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2956
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2961
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2966
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2977
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2982
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2987
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2991
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 579:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3000
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3010
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 582:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3014
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 583:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 586:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3028
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3038
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3042
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 589:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3046
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3050
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3054
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3058
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3062
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 594:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3068
		{
			yyVAL.matchExprOption = NoOption
		}
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3072
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 596:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3076
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 597:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3080
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3084
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 599:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3090
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 600:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3094
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3100
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 602:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3104
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 603:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3108
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 604:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3112
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3116
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3120
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 607:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3126
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3130
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 609:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3134
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3138
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3146
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3150
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 614:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3155
		{
			yyVAL.expr = nil
		}
	case 615:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3159
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 616:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3164
		{
			yyVAL.str = string("")
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3168
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3174
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3178
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3184
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 621:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3189
		{
			yyVAL.expr = nil
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3193
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3199
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 624:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3203
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 625:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3207
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3213
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3217
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 628:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3221
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3225
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3229
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3233
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3237
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3241
		{
			yyVAL.expr = &NullVal{}
		}
	case 634:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3247
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 635:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3256
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3260
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3265
		{
			yyVAL.exprs = nil
		}
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3269
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = nil
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 641:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3283
		{
			yyVAL.orderBy = nil
		}
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3287
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3293
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3297
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3303
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3308
		{
			yyVAL.orderDirection = AscOrder
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3312
		{
			yyVAL.orderDirection = AscOrder
		}
	case 648:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3316
		{
			yyVAL.orderDirection = DescOrder
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3321
		{
			yyVAL.limit = nil
		}
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3325
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 651:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3329
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3333
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3338
		{
			yyVAL.indexOptions = nil
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3342
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3346
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 656:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3354
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 658:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3361
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 659:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3365
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 660:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3369
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3373
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 662:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 663:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3383
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3387
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3392
		{
			yyVAL.str = ""
		}
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3396
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3400
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3404
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3409
		{
			yyVAL.str = ""
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3413
		{
			yyVAL.str = yyDollar[3].str
		}
	case 671:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3419
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 672:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3455
		{
			yyVAL.lock = NoLock
		}
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3459
		{
			yyVAL.lock = ForUpdateLock
		}
	case 675:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3463
		{
			yyVAL.lock = ShareModeLock
		}
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3468
		{
			yyVAL.selectInto = nil
		}
	case 677:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3472
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3476
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 679:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3480
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3485
		{
			yyVAL.str = ""
		}
	case 681:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3489
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3493
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 683:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3498
		{
			yyVAL.str = ""
		}
	case 684:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3502
		{
			yyVAL.str = " header"
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3507
		{
			yyVAL.str = ""
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3511
		{
			yyVAL.str = " manifest on"
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3515
		{
			yyVAL.str = " manifest off"
		}
	case 688:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3520
		{
			yyVAL.str = ""
		}
	case 689:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3524
		{
			yyVAL.str = " overwrite on"
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = " overwrite off"
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3534
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3539
		{
			yyVAL.str = ""
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3543
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 694:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3548
		{
			yyVAL.str = ""
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3552
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3557
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3561
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3566
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3570
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3575
		{
			yyVAL.str = ""
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3579
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3584
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3588
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3593
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3597
		{
			yyVAL.str = " optionally"
		}
	case 706:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3610
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3614
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 708:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3618
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 709:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3622
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 710:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3626
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3632
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 712:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3636
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 714:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3644
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 715:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3649
		{
			yyVAL.updateExprs = nil
		}
	case 716:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3653
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3659
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3663
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 719:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3669
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 720:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3673
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3679
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3685
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3695
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3705
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3711
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 727:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3721
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3725
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 730:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3729
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3733
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3737
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3745
		{
			yyVAL.bytes = []byte("charset")
		}
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3752
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3756
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3760
		{
			yyVAL.expr = &Default{}
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3769
		{
			yyVAL.boolean = false
		}
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3771
		{
			yyVAL.boolean = true
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3774
		{
			yyVAL.boolean = false
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3776
		{
			yyVAL.boolean = true
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3779
		{
			yyVAL.ignore = false
		}
	case 746:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.ignore = true
		}
	case 747:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3785
		{
			yyVAL.empty = struct{}{}
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.empty = struct{}{}
		}
	case 749:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.empty = struct{}{}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.empty = struct{}{}
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.empty = struct{}{}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.empty = struct{}{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3799
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3801
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3803
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3807
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{}
		}
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3811
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
			}
		}
	case 759:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3817
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
				Options:  string(yyDollar[3].bytes),
			}
		}
	case 760:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3825
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.empty = struct{}{}
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.empty = struct{}{}
		}
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3833
		{
			yyVAL.empty = struct{}{}
		}
	case 764:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3835
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = ""
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3840
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3842
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3844
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3847
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3849
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3853
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3870
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3874
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3881
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1110:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4237
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1111:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			decNesting(yylex)
		}
	case 1112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4251
		{
			skipToEnd(yylex)
		}
	case 1113:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4256
		{
			skipToEnd(yylex)
		}
	case 1114:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4260
		{
			skipToEnd(yylex)
		}
	case 1115:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4264
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
