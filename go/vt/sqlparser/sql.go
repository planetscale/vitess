// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	derivedTable           *DerivedTable
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	alterDatabase          *AlterDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
	createTable            *CreateTable
	tableAndLockTypes      []*TableAndLockType
	tableAndLockType       *TableAndLockType
	lockType               LockType
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const DIRECTORY = 57517
const NAME = 57518
const UPGRADE = 57519
const STATUS = 57520
const VARIABLES = 57521
const WARNINGS = 57522
const CASCADED = 57523
const DEFINER = 57524
const OPTION = 57525
const SQL = 57526
const UNDEFINED = 57527
const SEQUENCE = 57528
const MERGE = 57529
const TEMPTABLE = 57530
const INVOKER = 57531
const SECURITY = 57532
const BEGIN = 57533
const START = 57534
const TRANSACTION = 57535
const COMMIT = 57536
const ROLLBACK = 57537
const SAVEPOINT = 57538
const RELEASE = 57539
const WORK = 57540
const BIT = 57541
const TINYINT = 57542
const SMALLINT = 57543
const MEDIUMINT = 57544
const INT = 57545
const INTEGER = 57546
const BIGINT = 57547
const INTNUM = 57548
const REAL = 57549
const DOUBLE = 57550
const FLOAT_TYPE = 57551
const DECIMAL = 57552
const NUMERIC = 57553
const TIME = 57554
const TIMESTAMP = 57555
const DATETIME = 57556
const YEAR = 57557
const CHAR = 57558
const VARCHAR = 57559
const BOOL = 57560
const CHARACTER = 57561
const VARBINARY = 57562
const NCHAR = 57563
const TEXT = 57564
const TINYTEXT = 57565
const MEDIUMTEXT = 57566
const LONGTEXT = 57567
const BLOB = 57568
const TINYBLOB = 57569
const MEDIUMBLOB = 57570
const LONGBLOB = 57571
const JSON = 57572
const ENUM = 57573
const GEOMETRY = 57574
const POINT = 57575
const LINESTRING = 57576
const POLYGON = 57577
const GEOMETRYCOLLECTION = 57578
const MULTIPOINT = 57579
const MULTILINESTRING = 57580
const MULTIPOLYGON = 57581
const NULLX = 57582
const AUTO_INCREMENT = 57583
const APPROXNUM = 57584
const SIGNED = 57585
const UNSIGNED = 57586
const ZEROFILL = 57587
const COLLATION = 57588
const DATABASES = 57589
const SCHEMAS = 57590
const TABLES = 57591
const VITESS_METADATA = 57592
const VSCHEMA = 57593
const FULL = 57594
const PROCESSLIST = 57595
const COLUMNS = 57596
const FIELDS = 57597
const ENGINES = 57598
const PLUGINS = 57599
const EXTENDED = 57600
const KEYSPACES = 57601
const VITESS_KEYSPACES = 57602
const VITESS_SHARDS = 57603
const VITESS_TABLETS = 57604
const NAMES = 57605
const CHARSET = 57606
const GLOBAL = 57607
const SESSION = 57608
const ISOLATION = 57609
const LEVEL = 57610
const READ = 57611
const WRITE = 57612
const ONLY = 57613
const REPEATABLE = 57614
const COMMITTED = 57615
const UNCOMMITTED = 57616
const SERIALIZABLE = 57617
const CURRENT_TIMESTAMP = 57618
const DATABASE = 57619
const CURRENT_DATE = 57620
const CURRENT_TIME = 57621
const LOCALTIME = 57622
const LOCALTIMESTAMP = 57623
const CURRENT_USER = 57624
const UTC_DATE = 57625
const UTC_TIME = 57626
const UTC_TIMESTAMP = 57627
const REPLACE = 57628
const CONVERT = 57629
const CAST = 57630
const SUBSTR = 57631
const SUBSTRING = 57632
const GROUP_CONCAT = 57633
const SEPARATOR = 57634
const TIMESTAMPADD = 57635
const TIMESTAMPDIFF = 57636
const MATCH = 57637
const AGAINST = 57638
const BOOLEAN = 57639
const LANGUAGE = 57640
const WITH = 57641
const QUERY = 57642
const EXPANSION = 57643
const UNUSED = 57644
const ARRAY = 57645
const CUME_DIST = 57646
const DESCRIPTION = 57647
const DENSE_RANK = 57648
const EMPTY = 57649
const EXCEPT = 57650
const FIRST_VALUE = 57651
const GROUPING = 57652
const GROUPS = 57653
const JSON_TABLE = 57654
const LAG = 57655
const LAST_VALUE = 57656
const LATERAL = 57657
const LEAD = 57658
const MEMBER = 57659
const NTH_VALUE = 57660
const NTILE = 57661
const OF = 57662
const OVER = 57663
const PERCENT_RANK = 57664
const RANK = 57665
const RECURSIVE = 57666
const ROW_NUMBER = 57667
const SYSTEM = 57668
const WINDOW = 57669
const ACTIVE = 57670
const ADMIN = 57671
const BUCKETS = 57672
const CLONE = 57673
const COMPONENT = 57674
const DEFINITION = 57675
const ENFORCED = 57676
const EXCLUDE = 57677
const FOLLOWING = 57678
const GEOMCOLLECTION = 57679
const GET_MASTER_PUBLIC_KEY = 57680
const HISTOGRAM = 57681
const HISTORY = 57682
const INACTIVE = 57683
const INVISIBLE = 57684
const LOCKED = 57685
const MASTER_COMPRESSION_ALGORITHMS = 57686
const MASTER_PUBLIC_KEY_PATH = 57687
const MASTER_TLS_CIPHERSUITES = 57688
const MASTER_ZSTD_COMPRESSION_LEVEL = 57689
const NESTED = 57690
const NETWORK_NAMESPACE = 57691
const NOWAIT = 57692
const NULLS = 57693
const OJ = 57694
const OLD = 57695
const OPTIONAL = 57696
const ORDINALITY = 57697
const ORGANIZATION = 57698
const OTHERS = 57699
const PATH = 57700
const PERSIST = 57701
const PERSIST_ONLY = 57702
const PRECEDING = 57703
const PRIVILEGE_CHECKS_USER = 57704
const PROCESS = 57705
const RANDOM = 57706
const REFERENCE = 57707
const REQUIRE_ROW_FORMAT = 57708
const RESOURCE = 57709
const RESPECT = 57710
const RESTART = 57711
const RETAIN = 57712
const REUSE = 57713
const ROLE = 57714
const SECONDARY = 57715
const SECONDARY_ENGINE = 57716
const SECONDARY_LOAD = 57717
const SECONDARY_UNLOAD = 57718
const SKIP = 57719
const SRID = 57720
const THREAD_PRIORITY = 57721
const TIES = 57722
const UNBOUNDED = 57723
const VCPU = 57724
const VISIBLE = 57725
const FORMAT = 57726
const TREE = 57727
const VITESS = 57728
const TRADITIONAL = 57729
const LOCAL = 57730
const LOW_PRIORITY = 57731

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"SCHEMAS",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"LOCAL",
	"LOW_PRIORITY",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 42,
	155, 805,
	-2, 89,
	-1, 43,
	136, 112,
	236, 112,
	-2, 106,
	-1, 50,
	34, 352,
	155, 352,
	167, 352,
	195, 366,
	196, 366,
	-2, 354,
	-1, 55,
	157, 376,
	-2, 374,
	-1, 79,
	55, 419,
	-2, 427,
	-1, 103,
	136, 112,
	236, 112,
	-2, 107,
	-1, 447,
	143, 816,
	-2, 812,
	-1, 448,
	143, 817,
	-2, 813,
	-1, 465,
	55, 420,
	-2, 432,
	-1, 466,
	55, 421,
	-2, 433,
	-1, 486,
	111, 1104,
	-2, 82,
	-1, 487,
	111, 1004,
	-2, 83,
	-1, 492,
	111, 962,
	-2, 776,
	-1, 494,
	111, 1045,
	-2, 778,
	-1, 650,
	136, 112,
	236, 112,
	-2, 278,
	-1, 1041,
	143, 819,
	-2, 815,
	-1, 1133,
	73, 64,
	81, 64,
	-2, 68,
	-1, 1535,
	5, 673,
	18, 673,
	20, 673,
	32, 673,
	82, 673,
	-2, 458,
	-1, 1744,
	45, 747,
	-2, 745,
}

const yyPrivate = 57344

const yyLast = 20160

var yyAct = [...]int{
	447, 1838, 1744, 1827, 1581, 1643, 1794, 1718, 1451, 1358,
	1760, 391, 1666, 684, 1689, 420, 1155, 1515, 1326, 458,
	406, 762, 1206, 1516, 1578, 78, 3, 1345, 1512, 1080,
	813, 1359, 626, 1426, 1164, 1151, 1154, 629, 1427, 1200,
	923, 1130, 1500, 1472, 806, 1185, 114, 664, 1527, 126,
	1028, 360, 126, 491, 1285, 1035, 1208, 372, 962, 126,
	1419, 379, 76, 1169, 850, 1403, 843, 1112, 1119, 623,
	682, 981, 834, 816, 836, 1082, 800, 467, 811, 31,
	833, 452, 393, 1061, 382, 1005, 1264, 372, 1209, 941,
	372, 126, 372, 1225, 1095, 849, 630, 1196, 1135, 622,
	488, 823, 673, 840, 74, 847, 389, 976, 643, 104,
	126, 105, 79, 775, 1077, 1078, 991, 73, 1786, 126,
	776, 656, 380, 381, 126, 1324, 1741, 8, 7, 6,
	915, 1691, 1568, 1653, 1831, 1791, 1213, 1825, 1768, 1818,
	33, 34, 35, 67, 37, 38, 75, 81, 82, 83,
	84, 85, 86, 1582, 453, 473, 477, 1211, 935, 1790,
	71, 1767, 1489, 1611, 637, 39, 64, 65, 1325, 62,
	1253, 851, 934, 852, 1252, 63, 1731, 724, 723, 733,
	734, 726, 727, 728, 729, 730, 731, 732, 725, 96,
	112, 735, 485, 432, 1541, 438, 439, 436, 437, 1038,
	435, 434, 433, 33, 51, 451, 67, 37, 38, 1145,
	440, 441, 697, 639, 66, 638, 450, 101, 119, 120,
	121, 1542, 1543, 1146, 1147, 115, 116, 117, 1210, 115,
	116, 117, 1389, 1411, 1079, 1388, 933, 1453, 1390, 1179,
	692, 1646, 101, 93, 693, 690, 691, 690, 691, 97,
	1770, 641, 98, 99, 1186, 1602, 115, 116, 117, 1600,
	370, 990, 374, 368, 1249, 644, 942, 101, 109, 1447,
	947, 992, 993, 994, 1817, 695, 1448, 66, 685, 686,
	42, 44, 47, 46, 49, 651, 61, 696, 687, 930,
	927, 928, 950, 926, 951, 952, 1456, 1261, 1455, 944,
	670, 946, 672, 1719, 1816, 1454, 1804, 1113, 1247, 50,
	70, 69, 1750, 1844, 59, 60, 48, 1268, 1204, 948,
	1805, 1204, 625, 1136, 1842, 1787, 937, 940, 1204, 1327,
	1329, 1473, 479, 1548, 669, 671, 655, 945, 1709, 634,
	126, 662, 52, 53, 668, 54, 55, 56, 57, 1457,
	955, 640, 372, 700, 680, 1436, 1248, 1244, 100, 1173,
	1499, 372, 1173, 1246, 1498, 1497, 635, 339, 118, 1748,
	1260, 1732, 1475, 1259, 1632, 372, 372, 1304, 932, 1212,
	1567, 1301, 111, 100, 747, 748, 1251, 1540, 1350, 115,
	116, 117, 1314, 1293, 1141, 827, 760, 660, 648, 1152,
	931, 725, 706, 735, 735, 1266, 1766, 698, 100, 1186,
	1265, 1266, 1385, 115, 116, 117, 1265, 1328, 1091, 1012,
	666, 1477, 674, 1481, 1723, 1476, 715, 1474, 714, 712,
	924, 699, 1479, 1010, 1011, 1009, 1525, 68, 1491, 654,
	667, 1478, 1771, 340, 1062, 715, 936, 943, 675, 676,
	677, 126, 343, 89, 1480, 1482, 982, 1761, 853, 710,
	353, 938, 1840, 977, 1235, 1841, 649, 1839, 1409, 1710,
	1708, 745, 645, 919, 646, 679, 372, 647, 1753, 126,
	804, 126, 126, 803, 372, 1172, 688, 681, 1172, 1245,
	372, 1243, 90, 1062, 351, 1311, 712, 488, 1845, 820,
	68, 763, 1819, 358, 709, 707, 708, 110, 1176, 747,
	748, 798, 715, 747, 748, 1177, 1652, 1651, 1231, 1232,
	1233, 1573, 832, 1450, 1423, 801, 665, 1096, 1097, 1820,
	103, 475, 733, 734, 726, 727, 728, 729, 730, 731,
	732, 725, 341, 1422, 735, 817, 1300, 778, 780, 782,
	784, 786, 788, 789, 779, 781, 633, 785, 787, 1810,
	790, 657, 658, 1216, 1846, 983, 1822, 462, 805, 355,
	344, 345, 978, 356, 357, 364, 1278, 1279, 1280, 348,
	350, 361, 346, 347, 366, 365, 1811, 342, 363, 362,
	1234, 115, 116, 117, 383, 1239, 1236, 1227, 1237, 1230,
	632, 1226, 713, 714, 712, 1228, 1229, 724, 723, 733,
	734, 726, 727, 728, 729, 730, 731, 732, 725, 1238,
	715, 735, 126, 713, 714, 712, 911, 728, 729, 730,
	731, 732, 725, 1821, 126, 735, 920, 921, 713, 714,
	712, 715, 66, 939, 650, 1559, 1493, 1812, 1502, 126,
	1802, 1781, 636, 1679, 1008, 126, 715, 1614, 126, 961,
	1649, 126, 1620, 372, 815, 115, 116, 117, 372, 372,
	372, 126, 372, 372, 724, 723, 733, 734, 726, 727,
	728, 729, 730, 731, 732, 725, 372, 372, 735, 1504,
	1432, 1420, 713, 714, 712, 1463, 1503, 1066, 724, 723,
	733, 734, 726, 727, 728, 729, 730, 731, 732, 725,
	715, 966, 735, 975, 964, 724, 723, 733, 734, 726,
	727, 728, 729, 730, 731, 732, 725, 967, 1093, 735,
	1137, 1286, 462, 965, 1006, 1424, 1029, 1715, 969, 970,
	971, 917, 973, 974, 75, 1031, 115, 116, 117, 1714,
	1030, 1706, 1823, 713, 714, 712, 979, 980, 956, 372,
	639, 985, 638, 726, 727, 728, 729, 730, 731, 732,
	725, 715, 478, 735, 1039, 1580, 461, 1435, 848, 1299,
	1050, 1053, 1000, 1002, 1003, 1174, 1063, 1298, 1346, 1001,
	1092, 1138, 372, 372, 1045, 1346, 984, 1524, 987, 1140,
	1608, 1007, 1627, 126, 1706, 1764, 713, 714, 712, 713,
	714, 712, 1758, 462, 1041, 372, 115, 116, 117, 1040,
	1439, 462, 126, 1086, 715, 372, 763, 715, 1513, 126,
	1115, 126, 66, 1098, 115, 116, 117, 1524, 1392, 126,
	126, 1039, 448, 115, 116, 117, 372, 1223, 711, 372,
	1071, 1072, 1706, 1749, 1032, 1033, 1116, 480, 481, 488,
	372, 372, 488, 1524, 1131, 483, 1042, 409, 408, 411,
	412, 413, 414, 1156, 1706, 462, 410, 415, 1706, 1721,
	1116, 1041, 1706, 1705, 914, 1642, 1110, 1619, 462, 1630,
	462, 127, 1379, 1171, 127, 1106, 1565, 1564, 1105, 373,
	1136, 127, 724, 723, 733, 734, 726, 727, 728, 729,
	730, 731, 732, 725, 77, 372, 735, 716, 1561, 1562,
	1187, 1188, 1189, 1722, 1222, 1137, 1108, 1561, 1560, 373,
	1104, 462, 373, 127, 373, 1116, 462, 711, 462, 33,
	1139, 33, 1143, 1134, 1203, 126, 126, 126, 126, 126,
	1202, 1142, 127, 383, 1563, 126, 126, 33, 1116, 126,
	1159, 127, 773, 1221, 1046, 1047, 127, 1104, 1052, 1055,
	1056, 914, 913, 860, 859, 1654, 1393, 126, 1144, 1104,
	1317, 1316, 1353, 126, 126, 126, 1138, 1224, 1696, 126,
	372, 809, 812, 1070, 1136, 1104, 1073, 1074, 1180, 1094,
	1181, 1182, 1183, 1184, 1354, 1198, 1199, 1217, 1613, 1220,
	1215, 1214, 455, 66, 1287, 66, 1192, 1193, 1194, 1195,
	1075, 1240, 1655, 1656, 1657, 1006, 1452, 954, 845, 1271,
	1803, 66, 1668, 1275, 724, 723, 733, 734, 726, 727,
	728, 729, 730, 731, 732, 725, 1269, 1579, 735, 724,
	723, 733, 734, 726, 727, 728, 729, 730, 731, 732,
	725, 1638, 916, 735, 1201, 1295, 1552, 1121, 1124, 1125,
	1126, 1122, 1449, 1123, 1127, 912, 126, 1528, 1529, 1397,
	1197, 1191, 1190, 91, 126, 1429, 66, 112, 1428, 1669,
	1658, 1213, 1007, 1528, 1529, 1281, 1121, 1124, 1125, 1126,
	1122, 1833, 1123, 1127, 1828, 1554, 126, 1531, 1513, 1437,
	988, 958, 1372, 1534, 1125, 1126, 1533, 126, 126, 126,
	126, 126, 453, 1370, 1294, 1368, 1367, 1360, 1371, 126,
	1369, 1332, 1429, 126, 1659, 1660, 126, 126, 1355, 1351,
	126, 126, 126, 1339, 1310, 1366, 1807, 1348, 468, 1789,
	801, 1505, 1323, 1391, 1335, 372, 814, 1784, 1377, 1331,
	1631, 1344, 469, 1343, 1398, 1776, 1773, 1809, 1156, 1404,
	1404, 1394, 1607, 1338, 1793, 1795, 1801, 1380, 1347, 1800,
	1333, 1382, 127, 1745, 1349, 818, 819, 471, 1334, 470,
	1362, 1363, 1743, 1365, 373, 964, 1373, 1361, 968, 953,
	1364, 1378, 95, 373, 449, 1433, 1058, 1383, 1428, 1386,
	1415, 922, 858, 663, 372, 1408, 107, 373, 373, 1755,
	1059, 1414, 1438, 1416, 1417, 1418, 986, 1412, 1413, 1396,
	1400, 1401, 1402, 1754, 1694, 1405, 1290, 1291, 1406, 1399,
	1625, 807, 126, 995, 996, 997, 998, 108, 372, 126,
	122, 1431, 1421, 808, 1577, 1096, 1097, 1308, 1089, 1218,
	957, 1716, 1663, 1129, 1430, 456, 457, 459, 372, 126,
	1814, 1813, 468, 1798, 724, 723, 733, 734, 726, 727,
	728, 729, 730, 731, 732, 725, 469, 1440, 735, 1342,
	1777, 1624, 460, 127, 372, 77, 1623, 1341, 1048, 1049,
	1029, 1508, 1441, 1346, 1443, 694, 1305, 1469, 1302, 465,
	466, 471, 828, 470, 1835, 1834, 1835, 821, 373, 1746,
	1647, 127, 1090, 127, 127, 1470, 373, 455, 1494, 75,
	80, 372, 373, 72, 1, 1076, 799, 1462, 1458, 1490,
	1471, 126, 1460, 359, 1484, 1826, 1461, 113, 1468, 1583,
	1483, 372, 1665, 929, 1717, 1219, 1425, 372, 372, 1207,
	1162, 1153, 88, 1514, 1469, 1360, 620, 87, 1041, 678,
	1517, 1511, 1161, 1040, 1160, 1707, 1606, 1410, 1178, 1645,
	126, 1553, 1407, 1752, 866, 1150, 1523, 864, 865, 863,
	868, 867, 862, 352, 372, 989, 372, 369, 372, 1128,
	1522, 1404, 1404, 1404, 854, 822, 1536, 1156, 1538, 1156,
	1539, 1242, 1545, 1532, 1241, 925, 1558, 1566, 1175, 349,
	689, 1537, 354, 743, 1340, 1387, 489, 482, 1519, 94,
	1544, 1171, 1799, 1547, 1574, 1546, 1774, 126, 126, 1772,
	1742, 1690, 1775, 1740, 1205, 1808, 1792, 1088, 1556, 1557,
	810, 1622, 1507, 1584, 372, 372, 372, 1309, 126, 1043,
	1044, 1570, 421, 32, 127, 1569, 1549, 1550, 1551, 1571,
	1572, 772, 1060, 837, 392, 999, 127, 407, 724, 723,
	733, 734, 726, 727, 728, 729, 730, 731, 732, 725,
	1593, 127, 735, 404, 405, 32, 1099, 127, 1352, 717,
	127, 390, 1087, 127, 384, 373, 829, 1120, 1589, 1590,
	373, 373, 373, 127, 373, 373, 1118, 1598, 1117, 959,
	841, 1530, 1526, 835, 1103, 1250, 1446, 464, 373, 373,
	92, 1057, 1730, 1610, 386, 463, 1360, 454, 58, 36,
	376, 1785, 702, 1626, 472, 372, 30, 29, 28, 1621,
	23, 22, 21, 372, 1634, 20, 1635, 19, 1156, 25,
	18, 1394, 17, 16, 106, 1641, 102, 1640, 724, 723,
	733, 734, 726, 727, 728, 729, 730, 731, 732, 725,
	372, 45, 735, 372, 43, 1664, 41, 40, 652, 27,
	26, 15, 14, 13, 1312, 12, 1667, 1672, 11, 10,
	1661, 373, 9, 5, 1595, 1596, 1648, 1597, 1650, 4,
	1599, 705, 1601, 24, 761, 2, 372, 372, 372, 126,
	372, 1682, 1684, 1685, 1336, 1337, 812, 0, 0, 0,
	1678, 372, 0, 372, 373, 373, 0, 0, 1670, 372,
	0, 0, 1671, 1517, 1702, 127, 1693, 1517, 1686, 1699,
	0, 1695, 0, 0, 1701, 1697, 0, 373, 0, 0,
	1703, 0, 0, 0, 127, 1704, 1688, 373, 1711, 372,
	126, 127, 0, 127, 1724, 0, 0, 0, 0, 0,
	0, 127, 127, 0, 1712, 0, 1713, 0, 373, 1720,
	0, 373, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 373, 0, 1739, 0, 372, 0, 0,
	0, 0, 1517, 0, 1747, 0, 0, 0, 0, 0,
	372, 0, 0, 372, 372, 0, 0, 0, 0, 1288,
	0, 0, 0, 1289, 0, 1762, 1667, 1156, 0, 0,
	1763, 0, 1756, 0, 1296, 1297, 0, 0, 0, 372,
	1303, 126, 1605, 1306, 1307, 1769, 1778, 373, 1360, 0,
	0, 1313, 0, 0, 0, 1315, 1783, 1782, 1318, 1319,
	1320, 1321, 1322, 1788, 0, 1797, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 127, 127, 127,
	127, 127, 0, 1806, 0, 0, 0, 127, 127, 0,
	0, 127, 0, 0, 372, 0, 0, 0, 0, 1815,
	0, 0, 0, 0, 683, 0, 0, 0, 883, 127,
	0, 0, 0, 683, 0, 127, 127, 127, 1375, 1376,
	1832, 127, 373, 0, 0, 0, 0, 1843, 0, 32,
	0, 0, 0, 1492, 0, 0, 0, 0, 0, 0,
	744, 746, 0, 0, 724, 723, 733, 734, 726, 727,
	728, 729, 730, 731, 732, 725, 418, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1509, 0,
	0, 759, 0, 0, 0, 764, 765, 766, 767, 768,
	769, 770, 771, 0, 774, 777, 777, 777, 783, 777,
	777, 783, 777, 791, 792, 793, 794, 795, 796, 797,
	0, 0, 0, 0, 0, 0, 0, 32, 127, 0,
	0, 0, 0, 371, 871, 0, 127, 0, 0, 749,
	750, 751, 752, 753, 754, 755, 756, 757, 758, 0,
	0, 0, 0, 838, 0, 0, 0, 0, 127, 0,
	0, 0, 0, 490, 0, 0, 624, 0, 631, 127,
	127, 127, 127, 127, 0, 884, 0, 0, 0, 0,
	0, 127, 0, 0, 0, 127, 0, 0, 127, 127,
	0, 0, 127, 127, 127, 0, 0, 0, 1466, 1467,
	0, 0, 0, 0, 0, 0, 0, 373, 0, 0,
	0, 0, 0, 897, 900, 901, 902, 903, 904, 905,
	0, 906, 907, 908, 909, 910, 885, 886, 887, 888,
	869, 870, 898, 0, 872, 1612, 873, 874, 875, 876,
	877, 878, 879, 880, 881, 882, 889, 890, 891, 892,
	893, 894, 895, 896, 0, 0, 0, 0, 0, 0,
	383, 0, 0, 0, 1520, 0, 373, 1636, 0, 0,
	1637, 0, 0, 1639, 723, 733, 734, 726, 727, 728,
	729, 730, 731, 732, 725, 1535, 0, 735, 0, 0,
	0, 0, 0, 0, 127, 0, 0, 0, 0, 0,
	373, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 899, 0, 0, 0, 0, 0, 0, 0, 0,
	373, 127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 683, 0, 0, 0, 0,
	683, 683, 683, 0, 683, 683, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 683, 683,
	0, 0, 0, 0, 0, 1692, 383, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1592, 0, 0, 0,
	1594, 0, 0, 373, 0, 0, 0, 0, 0, 0,
	0, 1603, 1604, 127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 0, 0, 0, 1618, 373,
	373, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1628, 1629, 490, 0,
	1633, 0, 127, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 0, 373, 0,
	373, 701, 703, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1004, 0, 0, 1013, 1014, 1015, 1016, 1017,
	1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 373, 373, 373, 0,
	127, 1132, 0, 0, 0, 0, 719, 0, 722, 0,
	0, 0, 1067, 1683, 736, 737, 738, 739, 740, 741,
	742, 0, 720, 721, 718, 724, 723, 733, 734, 726,
	727, 728, 729, 730, 731, 732, 725, 0, 0, 735,
	0, 0, 825, 0, 0, 0, 0, 0, 0, 0,
	490, 0, 0, 0, 0, 0, 855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1726, 1727, 1728, 1729, 0, 1733, 0, 1734, 1735,
	1736, 0, 1737, 1738, 0, 0, 0, 373, 0, 0,
	0, 0, 0, 0, 0, 373, 0, 419, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1757, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 373, 0, 0, 1765, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 367,
	0, 0, 0, 0, 0, 0, 125, 0, 373, 373,
	373, 127, 373, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 373, 0, 373, 0, 0, 0, 476,
	476, 373, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1292, 0, 0, 454, 0, 125, 0, 0,
	0, 373, 127, 0, 0, 0, 125, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 1836, 1837, 490,
	0, 0, 0, 0, 490, 490, 490, 0, 490, 490,
	0, 0, 0, 0, 1330, 1282, 1283, 1284, 0, 373,
	0, 0, 490, 490, 0, 0, 0, 0, 0, 0,
	0, 0, 373, 0, 0, 373, 373, 0, 838, 0,
	0, 0, 0, 0, 0, 1356, 1357, 0, 0, 838,
	838, 838, 838, 838, 0, 0, 0, 0, 0, 0,
	0, 373, 0, 127, 0, 1132, 0, 0, 838, 0,
	0, 0, 838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 802,
	0, 0, 0, 0, 0, 1034, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 373, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1068, 1069,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 375, 0,
	0, 1100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 825, 0, 0, 490, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	628, 0, 490, 0, 0, 490, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 490, 624, 0, 642,
	683, 0, 0, 0, 0, 0, 0, 125, 653, 0,
	0, 0, 0, 659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1518, 0, 32,
	0, 1464, 1465, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1485, 1486, 0, 1487,
	1488, 0, 838, 0, 0, 0, 0, 0, 125, 0,
	0, 1495, 1496, 0, 0, 0, 1277, 0, 0, 0,
	0, 0, 476, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 125, 844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1555, 0, 0, 0, 0, 0, 0,
	0, 0, 1609, 0, 0, 0, 0, 0, 0, 661,
	1615, 1616, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1064, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1591, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 125, 0, 0, 0, 0, 0, 0, 0, 0,
	1662, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 125, 0, 0, 125, 0, 0, 963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1434, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1518, 0, 32, 0, 1518, 0, 0, 0, 831, 0,
	0, 842, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1444, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 32, 0, 0, 0,
	0, 0, 0, 0, 490, 0, 0, 0, 0, 0,
	1673, 1674, 1675, 1676, 1677, 0, 0, 0, 1680, 1681,
	0, 0, 0, 0, 0, 0, 0, 476, 963, 1518,
	490, 0, 476, 476, 0, 0, 476, 476, 476, 0,
	0, 0, 1065, 0, 0, 0, 0, 0, 0, 32,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 476, 476, 476, 476, 476, 0, 1501, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 490, 0, 125,
	1064, 0, 0, 1521, 1501, 963, 125, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 125, 125, 0, 0,
	0, 861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 918, 0, 0, 0, 0, 0, 0,
	490, 0, 490, 0, 631, 0, 0, 0, 949, 0,
	0, 0, 0, 0, 842, 0, 0, 960, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	972, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1585, 1586, 1587, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 125, 125, 125, 125, 0, 0, 0,
	0, 0, 125, 125, 0, 0, 125, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 0, 0, 0, 0, 0,
	1272, 1273, 125, 0, 0, 0, 125, 0, 0, 0,
	0, 1064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 490, 0, 0, 0, 0, 0, 0, 0, 1644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 476, 476, 0, 0, 0, 0,
	0, 1107, 0, 0, 0, 0, 1644, 0, 1111, 490,
	1114, 0, 0, 0, 0, 476, 0, 0, 0, 1133,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 0, 0, 0, 0, 0, 0,
	0, 1084, 1644, 1644, 1644, 0, 1687, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 1700,
	0, 0, 476, 125, 0, 1644, 0, 0, 0, 0,
	0, 0, 0, 1065, 125, 125, 125, 125, 125, 0,
	0, 0, 0, 0, 0, 0, 1374, 0, 0, 0,
	125, 0, 0, 125, 125, 1644, 0, 125, 1384, 963,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1254, 1255, 1256, 1257, 1258, 0,
	0, 0, 0, 1751, 1262, 1263, 0, 0, 1267, 0,
	0, 0, 0, 0, 0, 0, 1759, 0, 0, 490,
	490, 0, 0, 0, 0, 0, 1270, 0, 0, 0,
	0, 0, 0, 0, 1274, 0, 0, 0, 1276, 0,
	0, 0, 0, 1064, 0, 1779, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 0, 0, 0,
	1644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	476, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 963, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1065, 0, 0, 0, 0, 1381, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 0, 0, 0, 0,
	0, 1442, 0, 0, 0, 0, 0, 0, 1445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1459, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1065, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1506, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1084, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 1576, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1588, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1065, 0, 0, 0, 125, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	604, 592, 0, 0, 545, 607, 518, 535, 616, 536,
	539, 577, 502, 558, 237, 533, 0, 522, 498, 529,
	499, 520, 547, 166, 551, 517, 594, 561, 606, 201,
	0, 523, 249, 579, 280, 156, 209, 207, 302, 171,
	167, 165, 155, 188, 214, 248, 298, 242, 613, 204,
	568, 0, 289, 223, 0, 0, 0, 549, 596, 556,
	588, 544, 578, 507, 567, 608, 534, 575, 609, 192,
	154, 132, 234, 290, 173, 0, 0, 0, 115, 116,
	117, 0, 1157, 1158, 0, 0, 0, 0, 0, 150,
	0, 572, 603, 531, 574, 576, 619, 497, 569, 0,
	500, 503, 615, 599, 526, 527, 1395, 0, 0, 0,
	0, 0, 0, 548, 557, 585, 542, 0, 0, 0,
	0, 0, 0, 0, 0, 524, 0, 566, 0, 1725,
	0, 504, 501, 0, 0, 0, 0, 546, 0, 0,
	0, 506, 0, 525, 586, 0, 495, 178, 590, 598,
	543, 326, 602, 541, 540, 605, 260, 0, 294, 182,
	200, 146, 197, 129, 141, 0, 180, 233, 267, 271,
	595, 521, 530, 157, 528, 269, 246, 315, 565, 250,
	268, 205, 304, 261, 314, 327, 328, 163, 227, 321,
	299, 324, 336, 142, 160, 240, 295, 318, 286, 222,
	301, 196, 285, 134, 297, 312, 151, 279, 0, 0,
	1780, 136, 310, 293, 220, 193, 194, 135, 0, 265,
	164, 176, 159, 236, 307, 308, 158, 337, 143, 323,
	138, 144, 322, 229, 303, 311, 221, 213, 137, 309,
	219, 212, 199, 170, 184, 258, 208, 259, 185, 225,
	224, 226, 0, 133, 0, 291, 319, 338, 148, 516,
	591, 300, 332, 335, 0, 262, 149, 177, 169, 257,
	175, 202, 331, 333, 334, 228, 145, 187, 287, 198,
	206, 583, 618, 245, 270, 152, 317, 288, 511, 515,
	509, 510, 559, 560, 512, 610, 611, 612, 587, 505,
	0, 513, 514, 0, 593, 600, 601, 564, 128, 139,
	203, 614, 263, 174, 320, 496, 508, 162, 519, 0,
	0, 532, 537, 538, 550, 552, 553, 554, 555, 563,
	570, 571, 573, 580, 581, 582, 584, 589, 597, 617,
	130, 131, 140, 147, 153, 161, 168, 172, 179, 183,
	186, 189, 190, 191, 195, 211, 215, 216, 217, 218,
	230, 231, 232, 235, 238, 239, 241, 243, 244, 247,
	251, 252, 253, 254, 255, 256, 264, 266, 272, 273,
	274, 275, 276, 277, 278, 281, 282, 283, 284, 292,
	296, 305, 306, 316, 325, 329, 181, 313, 330, 0,
	210, 562, 604, 592, 0, 0, 545, 607, 518, 535,
	616, 536, 539, 577, 502, 558, 237, 533, 0, 522,
	498, 529, 499, 520, 547, 166, 551, 517, 594, 561,
	606, 201, 0, 523, 249, 579, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	613, 204, 568, 0, 289, 223, 0, 0, 0, 549,
	596, 556, 588, 544, 578, 507, 567, 608, 534, 575,
	609, 192, 154, 132, 234, 290, 173, 0, 0, 0,
	115, 116, 117, 0, 1157, 1158, 0, 0, 0, 0,
	0, 150, 0, 572, 603, 531, 574, 576, 619, 497,
	569, 0, 500, 503, 615, 599, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 548, 557, 585, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 0, 566,
	0, 0, 0, 504, 501, 0, 0, 0, 0, 546,
	0, 0, 0, 506, 0, 525, 586, 0, 495, 178,
	590, 598, 543, 326, 602, 541, 540, 605, 260, 0,
	294, 182, 200, 146, 197, 129, 141, 0, 180, 233,
	267, 271, 595, 521, 530, 157, 528, 269, 246, 315,
	565, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 142, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 134, 297, 312, 151, 279,
	0, 0, 0, 136, 310, 293, 220, 193, 194, 135,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	143, 323, 138, 144, 322, 229, 303, 311, 221, 213,
	137, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 133, 0, 291, 319, 338,
	148, 516, 591, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 228, 145, 187,
	287, 198, 206, 583, 618, 245, 270, 152, 317, 288,
	511, 515, 509, 510, 559, 560, 512, 610, 611, 612,
	587, 505, 0, 513, 514, 0, 593, 600, 601, 564,
	128, 139, 203, 614, 263, 174, 320, 496, 508, 162,
	519, 0, 0, 532, 537, 538, 550, 552, 553, 554,
	555, 563, 570, 571, 573, 580, 581, 582, 584, 589,
	597, 617, 130, 131, 140, 147, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 0, 210, 562, 604, 592, 0, 0, 545, 607,
	518, 535, 616, 536, 539, 577, 502, 558, 237, 533,
	0, 522, 498, 529, 499, 520, 547, 166, 551, 517,
	594, 561, 606, 201, 0, 523, 249, 579, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 613, 204, 568, 0, 289, 223, 0, 0,
	0, 549, 596, 556, 588, 544, 578, 507, 567, 608,
	534, 575, 609, 192, 154, 132, 234, 290, 173, 0,
	0, 0, 115, 116, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 572, 603, 531, 574, 576,
	619, 497, 569, 0, 500, 503, 615, 599, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 548, 557, 585,
	542, 0, 0, 0, 0, 0, 0, 1510, 0, 524,
	0, 566, 0, 0, 0, 504, 501, 0, 0, 0,
	0, 546, 0, 0, 0, 506, 0, 525, 586, 0,
	495, 178, 590, 598, 543, 326, 602, 541, 540, 605,
	260, 0, 294, 182, 200, 146, 197, 129, 141, 0,
	180, 233, 267, 271, 595, 521, 530, 157, 528, 269,
	246, 315, 565, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 142, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 134, 297, 312,
	151, 279, 0, 0, 0, 136, 310, 293, 220, 193,
	194, 135, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 143, 323, 138, 144, 322, 229, 303, 311,
	221, 213, 137, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 133, 0, 291,
	319, 338, 148, 516, 591, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 228,
	145, 187, 287, 198, 206, 583, 618, 245, 270, 152,
	317, 288, 511, 515, 509, 510, 559, 560, 512, 610,
	611, 612, 587, 505, 0, 513, 514, 0, 593, 600,
	601, 564, 128, 139, 203, 614, 263, 174, 320, 496,
	508, 162, 519, 0, 0, 532, 537, 538, 550, 552,
	553, 554, 555, 563, 570, 571, 573, 580, 581, 582,
	584, 589, 597, 617, 130, 131, 140, 147, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 0, 210, 562, 604, 592, 0, 0,
	545, 607, 518, 535, 616, 536, 539, 577, 502, 558,
	237, 533, 0, 522, 498, 529, 499, 520, 547, 166,
	551, 517, 594, 561, 606, 201, 0, 523, 249, 579,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 613, 204, 568, 0, 289, 223,
	0, 0, 0, 549, 596, 556, 588, 544, 578, 507,
	567, 608, 534, 575, 609, 192, 154, 132, 234, 290,
	173, 66, 0, 0, 115, 116, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 572, 603, 531,
	574, 576, 619, 497, 569, 0, 500, 503, 615, 599,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 548,
	557, 585, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 566, 0, 0, 0, 504, 501, 0,
	0, 0, 0, 546, 0, 0, 0, 506, 0, 525,
	586, 0, 495, 178, 590, 598, 543, 326, 602, 541,
	540, 605, 260, 0, 294, 182, 200, 146, 197, 129,
	141, 0, 180, 233, 267, 271, 595, 521, 530, 157,
	528, 269, 246, 315, 565, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 142,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 134,
	297, 312, 151, 279, 0, 0, 0, 136, 310, 293,
	220, 193, 194, 135, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 143, 323, 138, 144, 322, 229,
	303, 311, 221, 213, 137, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 133,
	0, 291, 319, 338, 148, 516, 591, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 228, 145, 187, 287, 198, 206, 583, 618, 245,
	270, 152, 317, 288, 511, 515, 509, 510, 559, 560,
	512, 610, 611, 612, 587, 505, 0, 513, 514, 0,
	593, 600, 601, 564, 128, 139, 203, 614, 263, 174,
	320, 496, 508, 162, 519, 0, 0, 532, 537, 538,
	550, 552, 553, 554, 555, 563, 570, 571, 573, 580,
	581, 582, 584, 589, 597, 617, 130, 131, 140, 147,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 0, 210, 562, 604, 592,
	0, 0, 545, 607, 518, 535, 616, 536, 539, 577,
	502, 558, 237, 533, 0, 522, 498, 529, 499, 520,
	547, 166, 551, 517, 594, 561, 606, 201, 0, 523,
	249, 579, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 613, 204, 568, 0,
	289, 223, 0, 0, 0, 549, 596, 556, 588, 544,
	578, 507, 567, 608, 534, 575, 609, 192, 154, 132,
	234, 290, 173, 0, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 572,
	603, 531, 574, 576, 619, 497, 569, 0, 500, 503,
	615, 599, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 548, 557, 585, 542, 0, 0, 0, 0, 0,
	0, 1385, 0, 524, 0, 566, 0, 0, 0, 504,
	501, 0, 0, 0, 0, 546, 0, 0, 0, 506,
	0, 525, 586, 0, 495, 178, 590, 598, 543, 326,
	602, 541, 540, 605, 260, 0, 294, 182, 200, 146,
	197, 129, 141, 0, 180, 233, 267, 271, 595, 521,
	530, 157, 528, 269, 246, 315, 565, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 142, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 134, 297, 312, 151, 279, 0, 0, 0, 136,
	310, 293, 220, 193, 194, 135, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 143, 323, 138, 144,
	322, 229, 303, 311, 221, 213, 137, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 133, 0, 291, 319, 338, 148, 516, 591, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 228, 145, 187, 287, 198, 206, 583,
	618, 245, 270, 152, 317, 288, 511, 515, 509, 510,
	559, 560, 512, 610, 611, 612, 587, 505, 0, 513,
	514, 0, 593, 600, 601, 564, 128, 139, 203, 614,
	263, 174, 320, 496, 508, 162, 519, 0, 0, 532,
	537, 538, 550, 552, 553, 554, 555, 563, 570, 571,
	573, 580, 581, 582, 584, 589, 597, 617, 130, 131,
	140, 147, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 0, 210, 562,
	604, 592, 0, 0, 545, 607, 518, 535, 616, 536,
	539, 577, 502, 558, 237, 533, 0, 522, 498, 529,
	499, 520, 547, 166, 551, 517, 594, 561, 606, 201,
	0, 523, 249, 579, 280, 156, 209, 207, 302, 171,
	167, 165, 155, 188, 214, 248, 298, 242, 613, 204,
	568, 0, 289, 223, 0, 0, 0, 549, 596, 556,
	588, 544, 578, 507, 567, 608, 534, 575, 609, 192,
	154, 132, 234, 290, 173, 0, 0, 0, 115, 116,
	117, 0, 0, 0, 0, 0, 0, 0, 0, 150,
	0, 572, 603, 531, 574, 576, 619, 497, 569, 0,
	500, 503, 615, 599, 526, 527, 0, 0, 0, 0,
	0, 0, 0, 548, 557, 585, 542, 0, 0, 0,
	0, 0, 0, 1109, 0, 524, 0, 566, 0, 0,
	0, 504, 501, 0, 0, 0, 0, 546, 0, 0,
	0, 506, 0, 525, 586, 0, 495, 178, 590, 598,
	543, 326, 602, 541, 540, 605, 260, 0, 294, 182,
	200, 146, 197, 129, 141, 0, 180, 233, 267, 271,
	595, 521, 530, 157, 528, 269, 246, 315, 565, 250,
	268, 205, 304, 261, 314, 327, 328, 163, 227, 321,
	299, 324, 336, 142, 160, 240, 295, 318, 286, 222,
	301, 196, 285, 134, 297, 312, 151, 279, 0, 0,
	0, 136, 310, 293, 220, 193, 194, 135, 0, 265,
	164, 176, 159, 236, 307, 308, 158, 337, 143, 323,
	138, 144, 322, 229, 303, 311, 221, 213, 137, 309,
	219, 212, 199, 170, 184, 258, 208, 259, 185, 225,
	224, 226, 0, 133, 0, 291, 319, 338, 148, 516,
	591, 300, 332, 335, 0, 262, 149, 177, 169, 257,
	175, 202, 331, 333, 334, 228, 145, 187, 287, 198,
	206, 583, 618, 245, 270, 152, 317, 288, 511, 515,
	509, 510, 559, 560, 512, 610, 611, 612, 587, 505,
	0, 513, 514, 0, 593, 600, 601, 564, 128, 139,
	203, 614, 263, 174, 320, 496, 508, 162, 519, 0,
	0, 532, 537, 538, 550, 552, 553, 554, 555, 563,
	570, 571, 573, 580, 581, 582, 584, 589, 597, 617,
	130, 131, 140, 147, 153, 161, 168, 172, 179, 183,
	186, 189, 190, 191, 195, 211, 215, 216, 217, 218,
	230, 231, 232, 235, 238, 239, 241, 243, 244, 247,
	251, 252, 253, 254, 255, 256, 264, 266, 272, 273,
	274, 275, 276, 277, 278, 281, 282, 283, 284, 292,
	296, 305, 306, 316, 325, 329, 181, 313, 330, 0,
	210, 562, 604, 592, 0, 0, 545, 607, 518, 535,
	616, 536, 539, 577, 502, 558, 237, 533, 0, 522,
	498, 529, 499, 520, 547, 166, 551, 517, 594, 561,
	606, 201, 0, 523, 249, 579, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	613, 204, 568, 0, 289, 223, 0, 0, 0, 549,
	596, 556, 588, 544, 578, 507, 567, 608, 534, 575,
	609, 192, 154, 132, 234, 290, 173, 0, 0, 0,
	115, 116, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 572, 603, 531, 574, 576, 619, 497,
	569, 0, 500, 503, 615, 599, 526, 527, 0, 0,
	0, 0, 0, 0, 0, 548, 557, 585, 542, 0,
	0, 0, 0, 0, 0, 0, 0, 524, 0, 566,
	0, 0, 0, 504, 501, 0, 0, 0, 0, 546,
	0, 0, 0, 506, 0, 525, 586, 0, 495, 178,
	590, 598, 543, 326, 602, 541, 540, 605, 260, 0,
	294, 182, 200, 146, 197, 129, 141, 0, 180, 233,
	267, 271, 595, 521, 530, 157, 528, 269, 246, 315,
	565, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 142, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 134, 297, 312, 151, 279,
	0, 0, 0, 136, 310, 293, 220, 193, 194, 135,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	143, 323, 138, 144, 322, 229, 303, 311, 221, 213,
	137, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 133, 0, 291, 319, 338,
	148, 516, 591, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 228, 145, 187,
	287, 198, 206, 583, 618, 245, 270, 152, 317, 288,
	511, 515, 509, 510, 559, 560, 512, 610, 611, 612,
	587, 505, 0, 513, 514, 0, 593, 600, 601, 564,
	128, 139, 203, 614, 263, 174, 320, 496, 508, 162,
	519, 0, 0, 532, 537, 538, 550, 552, 553, 554,
	555, 563, 570, 571, 573, 580, 581, 582, 584, 589,
	597, 617, 130, 131, 140, 147, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 0, 210, 562, 604, 592, 0, 0, 545, 607,
	518, 535, 616, 536, 539, 577, 502, 558, 237, 533,
	0, 522, 498, 529, 499, 520, 547, 166, 551, 517,
	594, 561, 606, 201, 0, 523, 249, 579, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 613, 204, 568, 0, 289, 223, 0, 0,
	0, 549, 596, 556, 588, 544, 578, 507, 567, 608,
	534, 575, 609, 192, 154, 132, 234, 290, 173, 0,
	0, 0, 115, 116, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 572, 603, 531, 574, 576,
	619, 497, 569, 0, 500, 503, 615, 599, 526, 527,
	0, 0, 0, 0, 0, 0, 0, 548, 557, 585,
	542, 0, 0, 0, 0, 0, 0, 0, 0, 524,
	0, 566, 0, 0, 0, 504, 501, 0, 0, 0,
	0, 546, 0, 0, 0, 506, 0, 525, 586, 0,
	495, 178, 590, 598, 543, 326, 602, 541, 540, 605,
	260, 0, 294, 182, 200, 146, 197, 129, 141, 0,
	180, 233, 267, 271, 595, 521, 530, 157, 528, 269,
	246, 315, 565, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 142, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 134, 297, 312,
	151, 279, 0, 0, 0, 136, 310, 293, 220, 193,
	194, 135, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 143, 323, 138, 493, 322, 229, 303, 311,
	221, 213, 137, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 133, 0, 291,
	319, 338, 148, 516, 591, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 494,
	492, 487, 486, 198, 206, 583, 618, 245, 270, 152,
	317, 288, 511, 515, 509, 510, 559, 560, 512, 610,
	611, 612, 587, 505, 0, 513, 514, 0, 593, 600,
	601, 564, 128, 139, 203, 614, 263, 174, 320, 496,
	508, 162, 519, 0, 0, 532, 537, 538, 550, 552,
	553, 554, 555, 563, 570, 571, 573, 580, 581, 582,
	584, 589, 597, 617, 130, 131, 140, 147, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 0, 210, 562, 604, 592, 0, 0,
	545, 607, 518, 535, 616, 536, 539, 577, 502, 558,
	237, 533, 0, 522, 498, 529, 499, 520, 547, 166,
	551, 517, 594, 561, 606, 201, 0, 523, 249, 579,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 613, 204, 568, 0, 289, 223,
	0, 0, 0, 549, 596, 556, 588, 544, 578, 507,
	567, 608, 534, 575, 609, 192, 154, 132, 234, 290,
	173, 0, 0, 0, 115, 116, 117, 0, 0, 0,
	0, 0, 0, 0, 0, 150, 0, 572, 603, 531,
	574, 576, 619, 497, 569, 0, 500, 503, 615, 599,
	526, 527, 0, 0, 0, 0, 0, 0, 0, 548,
	557, 585, 542, 0, 0, 0, 0, 0, 0, 0,
	0, 524, 0, 566, 0, 0, 0, 504, 501, 0,
	0, 0, 0, 546, 0, 0, 0, 506, 0, 525,
	586, 0, 495, 178, 590, 598, 543, 326, 602, 541,
	540, 605, 260, 0, 294, 182, 200, 146, 197, 129,
	141, 0, 180, 233, 267, 271, 595, 521, 530, 157,
	528, 269, 246, 315, 565, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 142,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 134,
	297, 846, 151, 279, 0, 0, 0, 136, 310, 293,
	220, 193, 194, 135, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 143, 323, 138, 493, 322, 229,
	303, 311, 221, 213, 137, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 133,
	0, 291, 319, 338, 148, 516, 591, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 494, 492, 487, 486, 198, 206, 583, 618, 245,
	270, 152, 317, 288, 511, 515, 509, 510, 559, 560,
	512, 610, 611, 612, 587, 505, 0, 513, 514, 0,
	593, 600, 601, 564, 128, 139, 203, 614, 263, 174,
	320, 496, 508, 162, 519, 0, 0, 532, 537, 538,
	550, 552, 553, 554, 555, 563, 570, 571, 573, 580,
	581, 582, 584, 589, 597, 617, 130, 131, 140, 147,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 0, 210, 562, 604, 592,
	0, 0, 545, 607, 518, 535, 616, 536, 539, 577,
	502, 558, 237, 533, 0, 522, 498, 529, 499, 520,
	547, 166, 551, 517, 594, 561, 606, 201, 0, 523,
	249, 579, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 613, 204, 568, 0,
	289, 223, 0, 0, 0, 549, 596, 556, 588, 544,
	578, 507, 567, 608, 534, 575, 609, 192, 154, 132,
	234, 290, 173, 0, 0, 0, 115, 116, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 150, 0, 572,
	603, 531, 574, 576, 619, 497, 569, 0, 500, 503,
	615, 599, 526, 527, 0, 0, 0, 0, 0, 0,
	0, 548, 557, 585, 542, 0, 0, 0, 0, 0,
	0, 0, 0, 524, 0, 566, 0, 0, 0, 504,
	501, 0, 0, 0, 0, 546, 0, 0, 0, 506,
	0, 525, 586, 0, 495, 178, 590, 598, 543, 326,
	602, 541, 540, 605, 260, 0, 294, 182, 200, 146,
	197, 129, 141, 0, 180, 233, 267, 271, 595, 521,
	530, 157, 528, 269, 246, 315, 565, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 142, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 134, 297, 484, 151, 279, 0, 0, 0, 136,
	310, 293, 220, 193, 194, 135, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 143, 323, 138, 493,
	322, 229, 303, 311, 221, 213, 137, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 133, 0, 291, 319, 338, 148, 516, 591, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 494, 492, 487, 486, 198, 206, 583,
	618, 245, 270, 152, 317, 288, 511, 515, 509, 510,
	559, 560, 512, 610, 611, 612, 587, 505, 0, 513,
	514, 0, 593, 600, 601, 564, 128, 139, 203, 614,
	263, 174, 320, 496, 508, 162, 519, 0, 0, 532,
	537, 538, 550, 552, 553, 554, 555, 563, 570, 571,
	573, 580, 581, 582, 584, 589, 597, 617, 130, 131,
	140, 147, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 237, 210, 562,
	1036, 0, 388, 0, 0, 0, 166, 0, 387, 0,
	0, 0, 201, 0, 1037, 249, 0, 280, 156, 209,
	207, 302, 171, 167, 165, 155, 188, 214, 248, 298,
	242, 431, 204, 0, 0, 289, 223, 0, 0, 0,
	0, 0, 422, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 154, 132, 234, 290, 173, 66, 0,
	0, 115, 116, 117, 409, 408, 411, 412, 413, 414,
	0, 0, 150, 410, 415, 416, 417, 0, 0, 0,
	0, 385, 402, 0, 430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 474, 0, 0, 0,
	445, 0, 401, 0, 0, 394, 395, 397, 396, 398,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 444, 0, 0, 326, 0, 0, 442, 0, 260,
	0, 294, 182, 200, 146, 197, 129, 141, 0, 180,
	233, 267, 271, 0, 0, 0, 157, 0, 269, 246,
	315, 0, 250, 268, 205, 304, 261, 314, 327, 328,
	163, 227, 321, 299, 324, 336, 142, 160, 240, 295,
	318, 286, 222, 301, 196, 285, 134, 297, 312, 151,
	279, 0, 0, 0, 136, 310, 293, 220, 193, 194,
	135, 0, 265, 164, 176, 159, 236, 307, 308, 158,
	337, 143, 323, 138, 144, 322, 229, 303, 311, 221,
	213, 137, 309, 219, 212, 199, 170, 184, 258, 208,
	259, 185, 225, 224, 226, 0, 133, 0, 291, 319,
	338, 148, 0, 0, 300, 332, 335, 0, 262, 149,
	177, 169, 257, 175, 202, 331, 333, 334, 228, 145,
	187, 287, 198, 206, 0, 0, 245, 270, 152, 317,
	288, 432, 443, 438, 439, 436, 437, 0, 435, 434,
	433, 446, 424, 425, 426, 427, 429, 0, 440, 441,
	428, 128, 139, 203, 0, 263, 174, 320, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 140, 147, 153, 161, 168,
	172, 179, 183, 186, 189, 190, 191, 195, 211, 215,
	216, 217, 218, 230, 231, 232, 235, 238, 239, 241,
	243, 244, 247, 251, 252, 253, 254, 255, 256, 264,
	266, 272, 273, 274, 275, 276, 277, 278, 281, 282,
	283, 284, 292, 296, 305, 306, 316, 325, 329, 181,
	313, 330, 237, 210, 0, 0, 0, 388, 0, 0,
	0, 166, 0, 387, 0, 0, 0, 201, 0, 0,
	249, 0, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 431, 204, 0, 0,
	289, 223, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 0, 0, 0, 1148, 0, 192, 154, 132,
	234, 290, 173, 66, 0, 0, 115, 116, 117, 409,
	408, 411, 412, 413, 414, 0, 0, 150, 410, 415,
	416, 417, 1149, 0, 0, 0, 385, 402, 0, 430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 0, 0, 0, 0, 445, 0, 401, 0, 0,
	394, 395, 397, 396, 398, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 444, 0, 0, 326,
	0, 0, 442, 0, 260, 0, 294, 182, 200, 146,
	197, 129, 141, 0, 180, 233, 267, 271, 0, 0,
	0, 157, 0, 269, 246, 315, 0, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 142, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 134, 297, 312, 151, 279, 0, 0, 0, 136,
	310, 293, 220, 193, 194, 135, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 143, 323, 138, 144,
	322, 229, 303, 311, 221, 213, 137, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 133, 0, 291, 319, 338, 148, 0, 0, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 228, 145, 187, 287, 198, 206, 0,
	0, 245, 270, 152, 317, 288, 432, 443, 438, 439,
	436, 437, 0, 435, 434, 433, 446, 424, 425, 426,
	427, 429, 0, 440, 441, 428, 128, 139, 203, 0,
	263, 174, 320, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 131,
	140, 147, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 237, 210, 0,
	0, 0, 388, 0, 0, 0, 166, 0, 387, 0,
	0, 0, 201, 0, 0, 249, 0, 280, 156, 209,
	207, 302, 171, 167, 165, 155, 188, 214, 248, 298,
	242, 431, 204, 0, 0, 289, 223, 0, 0, 0,
	0, 0, 422, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 154, 132, 234, 290, 173, 66, 0,
	462, 115, 116, 117, 409, 408, 411, 412, 413, 414,
	0, 0, 150, 410, 415, 416, 417, 0, 0, 0,
	0, 385, 402, 0, 430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 0, 0, 0, 0,
	445, 0, 401, 0, 0, 394, 395, 397, 396, 398,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 444, 0, 0, 326, 0, 0, 442, 0, 260,
	0, 294, 182, 200, 146, 197, 129, 141, 0, 180,
	233, 267, 271, 0, 0, 0, 157, 0, 269, 246,
	315, 0, 250, 268, 205, 304, 261, 314, 327, 328,
	163, 227, 321, 299, 324, 336, 142, 160, 240, 295,
	318, 286, 222, 301, 196, 285, 134, 297, 312, 151,
	279, 0, 0, 0, 136, 310, 293, 220, 193, 194,
	135, 0, 265, 164, 176, 159, 236, 307, 308, 158,
	337, 143, 323, 138, 144, 322, 229, 303, 311, 221,
	213, 137, 309, 219, 212, 199, 170, 184, 258, 208,
	259, 185, 225, 224, 226, 0, 133, 0, 291, 319,
	338, 148, 0, 0, 300, 332, 335, 0, 262, 149,
	177, 169, 257, 175, 202, 331, 333, 334, 228, 145,
	187, 287, 198, 206, 0, 0, 245, 270, 152, 317,
	288, 432, 443, 438, 439, 436, 437, 0, 435, 434,
	433, 446, 424, 425, 426, 427, 429, 0, 440, 441,
	428, 128, 139, 203, 0, 263, 174, 320, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 140, 147, 153, 161, 168,
	172, 179, 183, 186, 189, 190, 191, 195, 211, 215,
	216, 217, 218, 230, 231, 232, 235, 238, 239, 241,
	243, 244, 247, 251, 252, 253, 254, 255, 256, 264,
	266, 272, 273, 274, 275, 276, 277, 278, 281, 282,
	283, 284, 292, 296, 305, 306, 316, 325, 329, 181,
	313, 330, 237, 210, 0, 0, 0, 388, 0, 0,
	0, 166, 0, 387, 0, 0, 0, 201, 0, 0,
	249, 0, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 431, 204, 0, 0,
	289, 223, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 154, 132,
	234, 290, 173, 66, 0, 0, 115, 116, 117, 409,
	408, 411, 412, 413, 414, 0, 0, 150, 410, 415,
	416, 417, 0, 0, 0, 0, 385, 402, 0, 430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 474, 0, 0, 0, 445, 0, 401, 0, 0,
	394, 395, 397, 396, 398, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 444, 0, 0, 326,
	0, 0, 442, 0, 260, 0, 294, 182, 200, 146,
	197, 129, 141, 0, 180, 233, 267, 271, 0, 0,
	0, 157, 0, 269, 246, 315, 0, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 142, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 134, 297, 312, 151, 279, 0, 0, 0, 136,
	310, 293, 220, 193, 194, 135, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 143, 323, 138, 144,
	322, 229, 303, 311, 221, 213, 137, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 133, 0, 291, 319, 338, 148, 0, 0, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 228, 145, 187, 287, 198, 206, 0,
	0, 245, 270, 152, 317, 288, 432, 443, 438, 439,
	436, 437, 0, 435, 434, 433, 446, 424, 425, 426,
	427, 429, 0, 440, 441, 428, 128, 139, 203, 0,
	263, 174, 320, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 131,
	140, 147, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 237, 210, 0,
	0, 0, 388, 0, 0, 0, 166, 0, 387, 0,
	0, 0, 201, 0, 0, 249, 0, 280, 156, 209,
	207, 302, 171, 167, 165, 155, 188, 214, 248, 298,
	242, 431, 204, 0, 0, 289, 223, 0, 0, 0,
	0, 0, 422, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 154, 132, 234, 290, 173, 66, 0,
	0, 115, 116, 117, 409, 1054, 411, 412, 413, 414,
	0, 0, 150, 410, 415, 416, 417, 0, 0, 0,
	0, 385, 402, 0, 430, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 400, 474, 0, 0, 0,
	445, 0, 401, 0, 0, 394, 395, 397, 396, 398,
	403, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	178, 444, 0, 0, 326, 0, 0, 442, 0, 260,
	0, 294, 182, 200, 146, 197, 129, 141, 0, 180,
	233, 267, 271, 0, 0, 0, 157, 0, 269, 246,
	315, 0, 250, 268, 205, 304, 261, 314, 327, 328,
	163, 227, 321, 299, 324, 336, 142, 160, 240, 295,
	318, 286, 222, 301, 196, 285, 134, 297, 312, 151,
	279, 0, 0, 0, 136, 310, 293, 220, 193, 194,
	135, 0, 265, 164, 176, 159, 236, 307, 308, 158,
	337, 143, 323, 138, 144, 322, 229, 303, 311, 221,
	213, 137, 309, 219, 212, 199, 170, 184, 258, 208,
	259, 185, 225, 224, 226, 0, 133, 0, 291, 319,
	338, 148, 0, 0, 300, 332, 335, 0, 262, 149,
	177, 169, 257, 175, 202, 331, 333, 334, 228, 145,
	187, 287, 198, 206, 0, 0, 245, 270, 152, 317,
	288, 432, 443, 438, 439, 436, 437, 0, 435, 434,
	433, 446, 424, 425, 426, 427, 429, 0, 440, 441,
	428, 128, 139, 203, 0, 263, 174, 320, 0, 0,
	162, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 130, 131, 140, 147, 153, 161, 168,
	172, 179, 183, 186, 189, 190, 191, 195, 211, 215,
	216, 217, 218, 230, 231, 232, 235, 238, 239, 241,
	243, 244, 247, 251, 252, 253, 254, 255, 256, 264,
	266, 272, 273, 274, 275, 276, 277, 278, 281, 282,
	283, 284, 292, 296, 305, 306, 316, 325, 329, 181,
	313, 330, 237, 210, 0, 0, 0, 388, 0, 0,
	0, 166, 0, 387, 0, 0, 0, 201, 0, 0,
	249, 0, 280, 156, 209, 207, 302, 171, 167, 165,
	155, 188, 214, 248, 298, 242, 431, 204, 0, 0,
	289, 223, 0, 0, 0, 0, 0, 422, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 154, 132,
	234, 290, 173, 66, 0, 0, 115, 116, 117, 409,
	1051, 411, 412, 413, 414, 0, 0, 150, 410, 415,
	416, 417, 0, 0, 0, 0, 385, 402, 0, 430,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	400, 474, 0, 0, 0, 445, 0, 401, 0, 0,
	394, 395, 397, 396, 398, 403, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 444, 0, 0, 326,
	0, 0, 442, 0, 260, 0, 294, 182, 200, 146,
	197, 129, 141, 0, 180, 233, 267, 271, 0, 0,
	0, 157, 0, 269, 246, 315, 0, 250, 268, 205,
	304, 261, 314, 327, 328, 163, 227, 321, 299, 324,
	336, 142, 160, 240, 295, 318, 286, 222, 301, 196,
	285, 134, 297, 312, 151, 279, 0, 0, 0, 136,
	310, 293, 220, 193, 194, 135, 0, 265, 164, 176,
	159, 236, 307, 308, 158, 337, 143, 323, 138, 144,
	322, 229, 303, 311, 221, 213, 137, 309, 219, 212,
	199, 170, 184, 258, 208, 259, 185, 225, 224, 226,
	0, 133, 0, 291, 319, 338, 148, 0, 0, 300,
	332, 335, 0, 262, 149, 177, 169, 257, 175, 202,
	331, 333, 334, 228, 145, 187, 287, 198, 206, 0,
	0, 245, 270, 152, 317, 288, 432, 443, 438, 439,
	436, 437, 0, 435, 434, 433, 446, 424, 425, 426,
	427, 429, 0, 440, 441, 428, 128, 139, 203, 0,
	263, 174, 320, 0, 0, 162, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 130, 131,
	140, 147, 153, 161, 168, 172, 179, 183, 186, 189,
	190, 191, 195, 211, 215, 216, 217, 218, 230, 231,
	232, 235, 238, 239, 241, 243, 244, 247, 251, 252,
	253, 254, 255, 256, 264, 266, 272, 273, 274, 275,
	276, 277, 278, 281, 282, 283, 284, 292, 296, 305,
	306, 316, 325, 329, 181, 313, 330, 455, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	237, 0, 0, 0, 0, 388, 0, 0, 0, 166,
	0, 387, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 431, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 422, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 154, 132, 234, 290,
	173, 66, 0, 0, 115, 116, 117, 409, 408, 411,
	412, 413, 414, 0, 0, 150, 410, 415, 416, 417,
	0, 0, 0, 0, 385, 402, 0, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 445, 0, 401, 0, 0, 394, 395,
	397, 396, 398, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 444, 0, 0, 326, 0, 0,
	442, 0, 260, 0, 294, 182, 200, 146, 197, 129,
	141, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 0, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 142,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 134,
	297, 312, 151, 279, 0, 0, 0, 136, 310, 293,
	220, 193, 194, 135, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 143, 323, 138, 144, 322, 229,
	303, 311, 221, 213, 137, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 133,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 228, 145, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 432, 443, 438, 439, 436, 437,
	0, 435, 434, 433, 446, 424, 425, 426, 427, 429,
	0, 440, 441, 428, 128, 139, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 131, 140, 147,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	388, 0, 0, 0, 166, 0, 387, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 431,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	422, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 132, 234, 290, 173, 66, 0, 0, 115,
	116, 117, 409, 408, 411, 412, 413, 414, 0, 0,
	150, 410, 415, 416, 417, 0, 0, 0, 0, 385,
	402, 0, 430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 445, 0,
	401, 0, 0, 394, 395, 397, 396, 398, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 444,
	0, 0, 326, 0, 0, 442, 0, 260, 0, 294,
	182, 200, 146, 197, 129, 141, 0, 180, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 0,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 142, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 134, 297, 312, 151, 279, 0,
	0, 0, 136, 310, 293, 220, 193, 194, 135, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 143,
	323, 138, 144, 322, 229, 303, 311, 221, 213, 137,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 133, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 228, 145, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 432,
	443, 438, 439, 436, 437, 0, 435, 434, 433, 446,
	424, 425, 426, 427, 429, 0, 440, 441, 428, 128,
	139, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	237, 210, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 431, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 422, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 154, 132, 234, 290,
	173, 66, 0, 0, 115, 116, 117, 409, 408, 411,
	412, 413, 414, 0, 0, 150, 410, 415, 416, 417,
	0, 0, 0, 0, 0, 402, 0, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 445, 0, 401, 0, 0, 394, 395,
	397, 396, 398, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 444, 0, 0, 326, 0, 0,
	442, 0, 260, 0, 294, 182, 200, 146, 197, 129,
	141, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 1830, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 142,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 134,
	297, 312, 151, 279, 0, 0, 0, 136, 310, 293,
	220, 193, 194, 135, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 143, 323, 138, 144, 322, 229,
	303, 311, 221, 213, 137, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 133,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 228, 145, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 432, 443, 438, 439, 436, 437,
	0, 435, 434, 433, 446, 424, 425, 426, 427, 429,
	0, 440, 441, 428, 128, 139, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 131, 140, 147,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 431,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	422, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 132, 234, 290, 173, 66, 0, 462, 115,
	116, 117, 409, 408, 411, 412, 413, 414, 0, 0,
	150, 410, 415, 416, 417, 0, 0, 0, 0, 0,
	402, 0, 430, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 400, 0, 0, 0, 0, 445, 0,
	401, 0, 0, 394, 395, 397, 396, 398, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 444,
	0, 0, 326, 0, 0, 442, 0, 260, 0, 294,
	182, 200, 146, 197, 129, 141, 0, 180, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 0,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 142, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 134, 297, 312, 151, 279, 0,
	0, 0, 136, 310, 293, 220, 193, 194, 135, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 143,
	323, 138, 144, 322, 229, 303, 311, 221, 213, 137,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 133, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 228, 145, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 432,
	443, 438, 439, 436, 437, 0, 435, 434, 433, 446,
	424, 425, 426, 427, 429, 0, 440, 441, 428, 128,
	139, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	237, 210, 0, 0, 0, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 431, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 422, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 154, 132, 234, 290,
	173, 66, 0, 0, 115, 116, 117, 409, 408, 411,
	412, 413, 414, 0, 0, 150, 410, 415, 416, 417,
	0, 0, 0, 0, 0, 402, 0, 430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 400, 0,
	0, 0, 0, 445, 0, 401, 0, 0, 394, 395,
	397, 396, 398, 403, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 444, 0, 0, 326, 0, 0,
	442, 0, 260, 0, 294, 182, 200, 146, 197, 129,
	141, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 0, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 142,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 134,
	297, 312, 151, 279, 0, 0, 0, 136, 310, 293,
	220, 193, 194, 135, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 143, 323, 138, 144, 322, 229,
	303, 311, 221, 213, 137, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 133,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 228, 145, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 432, 443, 438, 439, 436, 437,
	0, 435, 434, 433, 446, 424, 425, 426, 427, 429,
	0, 440, 441, 428, 128, 139, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 131, 140, 147,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	0, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 0,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 132, 234, 290, 173, 0, 0, 0, 115,
	116, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 724, 723,
	733, 734, 726, 727, 728, 729, 730, 731, 732, 725,
	0, 0, 735, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 0, 326, 0, 0, 0, 0, 260, 0, 294,
	182, 200, 146, 197, 129, 141, 0, 180, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 0,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 142, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 134, 297, 312, 151, 279, 0,
	0, 0, 136, 310, 293, 220, 193, 194, 135, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 143,
	323, 138, 144, 322, 229, 303, 311, 221, 213, 137,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 133, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 228, 145, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	139, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	237, 210, 0, 0, 824, 0, 0, 0, 0, 166,
	0, 0, 0, 0, 0, 201, 0, 0, 249, 0,
	280, 156, 209, 207, 302, 171, 167, 165, 155, 188,
	214, 248, 298, 242, 0, 204, 0, 0, 289, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 154, 132, 234, 290,
	173, 0, 0, 0, 115, 116, 117, 0, 826, 0,
	0, 0, 0, 0, 0, 150, 0, 0, 0, 0,
	0, 713, 714, 712, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 178, 0, 0, 0, 326, 0, 0,
	0, 0, 260, 0, 294, 182, 200, 146, 197, 129,
	141, 0, 180, 233, 267, 271, 0, 0, 0, 157,
	0, 269, 246, 315, 0, 250, 268, 205, 304, 261,
	314, 327, 328, 163, 227, 321, 299, 324, 336, 142,
	160, 240, 295, 318, 286, 222, 301, 196, 285, 134,
	297, 312, 151, 279, 0, 0, 0, 136, 310, 293,
	220, 193, 194, 135, 0, 265, 164, 176, 159, 236,
	307, 308, 158, 337, 143, 323, 138, 144, 322, 229,
	303, 311, 221, 213, 137, 309, 219, 212, 199, 170,
	184, 258, 208, 259, 185, 225, 224, 226, 0, 133,
	0, 291, 319, 338, 148, 0, 0, 300, 332, 335,
	0, 262, 149, 177, 169, 257, 175, 202, 331, 333,
	334, 228, 145, 187, 287, 198, 206, 0, 0, 245,
	270, 152, 317, 288, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 128, 139, 203, 0, 263, 174,
	320, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 130, 131, 140, 147,
	153, 161, 168, 172, 179, 183, 186, 189, 190, 191,
	195, 211, 215, 216, 217, 218, 230, 231, 232, 235,
	238, 239, 241, 243, 244, 247, 251, 252, 253, 254,
	255, 256, 264, 266, 272, 273, 274, 275, 276, 277,
	278, 281, 282, 283, 284, 292, 296, 305, 306, 316,
	325, 329, 181, 313, 330, 237, 210, 0, 0, 0,
	0, 0, 0, 0, 166, 1173, 0, 0, 0, 0,
	201, 0, 0, 249, 0, 280, 156, 209, 207, 302,
	171, 167, 165, 155, 188, 214, 248, 298, 242, 0,
	204, 0, 0, 289, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 154, 132, 234, 290, 173, 0, 0, 0, 115,
	116, 117, 0, 0, 0, 0, 0, 0, 0, 0,
	150, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 178, 0,
	0, 1172, 326, 0, 0, 0, 1168, 1165, 0, 1166,
	1167, 200, 627, 197, 129, 141, 1163, 1170, 233, 267,
	271, 0, 0, 0, 157, 0, 269, 246, 315, 0,
	250, 268, 205, 304, 261, 314, 327, 328, 163, 227,
	321, 299, 324, 336, 142, 160, 240, 295, 318, 286,
	222, 301, 196, 285, 134, 297, 312, 151, 279, 0,
	0, 0, 136, 310, 293, 220, 193, 194, 135, 0,
	265, 164, 176, 159, 236, 307, 308, 158, 337, 143,
	323, 138, 144, 322, 229, 303, 311, 221, 213, 137,
	309, 219, 212, 199, 170, 184, 258, 208, 259, 185,
	225, 224, 226, 0, 133, 0, 291, 319, 338, 148,
	0, 0, 300, 332, 335, 0, 262, 149, 177, 169,
	257, 175, 202, 331, 333, 334, 228, 145, 187, 287,
	198, 206, 0, 0, 245, 270, 152, 317, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 128,
	139, 203, 0, 263, 174, 320, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 130, 131, 140, 147, 153, 161, 168, 172, 179,
	183, 186, 189, 190, 191, 195, 211, 215, 216, 217,
	218, 230, 231, 232, 235, 238, 239, 241, 243, 244,
	247, 251, 252, 253, 254, 255, 256, 264, 266, 272,
	273, 274, 275, 276, 277, 278, 281, 282, 283, 284,
	292, 296, 305, 306, 316, 325, 329, 181, 313, 330,
	33, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 237, 0, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 201, 0,
	0, 249, 0, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 0, 204, 0,
	0, 289, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 154,
	132, 234, 290, 173, 66, 0, 462, 115, 116, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	326, 0, 0, 0, 0, 260, 0, 294, 182, 200,
	146, 197, 129, 141, 0, 180, 233, 267, 271, 0,
	0, 0, 157, 0, 269, 246, 315, 0, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 142, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 134, 297, 312, 151, 279, 0, 0, 0,
	136, 310, 293, 220, 193, 194, 135, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 143, 323, 138,
	144, 322, 229, 303, 311, 221, 213, 137, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 133, 0, 291, 319, 338, 148, 0, 0,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 228, 145, 187, 287, 198, 206,
	0, 0, 245, 270, 152, 317, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 139, 203,
	0, 263, 174, 320, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	131, 140, 147, 153, 161, 168, 172, 179, 183, 186,
	189, 190, 191, 195, 211, 215, 216, 217, 218, 230,
	231, 232, 235, 238, 239, 241, 243, 244, 247, 251,
	252, 253, 254, 255, 256, 264, 266, 272, 273, 274,
	275, 276, 277, 278, 281, 282, 283, 284, 292, 296,
	305, 306, 316, 325, 329, 181, 313, 330, 237, 210,
	0, 0, 1083, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 201, 0, 0, 249, 0, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 0, 204, 0, 0, 289, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 154, 132, 234, 290, 173, 0,
	0, 0, 115, 116, 117, 0, 1085, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 326, 0, 0, 0, 0,
	260, 0, 294, 182, 200, 146, 197, 129, 141, 0,
	180, 233, 267, 271, 0, 0, 0, 157, 0, 269,
	246, 315, 0, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 142, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 134, 297, 312,
	151, 279, 0, 0, 0, 136, 310, 293, 220, 193,
	194, 135, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 143, 323, 138, 144, 322, 229, 303, 311,
	221, 213, 137, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 133, 0, 291,
	319, 338, 148, 0, 0, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 228,
	145, 187, 287, 198, 206, 0, 0, 245, 270, 152,
	317, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 139, 203, 0, 263, 174, 320, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 131, 140, 147, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 33, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 237, 0, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 201, 0, 0, 249, 0, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	0, 204, 0, 0, 289, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 154, 132, 234, 290, 173, 66, 0, 0,
	115, 116, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 326, 0, 0, 0, 0, 260, 0,
	294, 182, 200, 146, 197, 129, 141, 0, 180, 233,
	267, 271, 0, 0, 0, 157, 0, 269, 246, 315,
	0, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 142, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 134, 297, 312, 151, 279,
	0, 0, 0, 136, 310, 293, 220, 193, 194, 135,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	143, 323, 138, 144, 322, 229, 303, 311, 221, 213,
	137, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 133, 0, 291, 319, 338,
	148, 0, 0, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 228, 145, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 139, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 237, 210, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 201, 0, 0, 249,
	0, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 0, 204, 0, 0, 289,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 154, 132, 234,
	290, 173, 0, 0, 0, 115, 116, 117, 0, 0,
	1101, 0, 0, 1102, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 326, 0,
	0, 0, 0, 260, 0, 294, 182, 200, 146, 197,
	129, 141, 0, 180, 233, 267, 271, 0, 0, 0,
	157, 0, 269, 246, 315, 0, 250, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	142, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	134, 297, 312, 151, 279, 0, 0, 0, 136, 310,
	293, 220, 193, 194, 135, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 143, 323, 138, 144, 322,
	229, 303, 311, 221, 213, 137, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	133, 0, 291, 319, 338, 148, 0, 0, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 228, 145, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 139, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 140,
	147, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 237, 210, 0, 0,
	1083, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 201, 0, 0, 249, 0, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	0, 204, 0, 0, 289, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 154, 132, 234, 290, 173, 0, 0, 0,
	115, 116, 117, 0, 1085, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 326, 0, 0, 0, 0, 260, 0,
	294, 182, 200, 146, 197, 129, 141, 0, 180, 233,
	267, 271, 0, 0, 0, 157, 0, 269, 246, 315,
	0, 1081, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 142, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 134, 297, 312, 151, 279,
	0, 0, 0, 136, 310, 293, 220, 193, 194, 135,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	143, 323, 138, 144, 322, 229, 303, 311, 221, 213,
	137, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 133, 0, 291, 319, 338,
	148, 0, 0, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 228, 145, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 139, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 237, 210, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 857, 0, 0, 0, 201, 0, 0, 249,
	0, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 0, 204, 0, 0, 289,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 154, 132, 234,
	290, 173, 0, 0, 0, 115, 116, 117, 0, 856,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 326, 0,
	0, 0, 0, 260, 0, 294, 182, 200, 146, 197,
	129, 141, 0, 180, 233, 267, 271, 0, 0, 0,
	157, 0, 269, 246, 315, 0, 250, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	142, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	134, 297, 312, 151, 279, 0, 0, 0, 136, 310,
	293, 220, 193, 194, 135, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 143, 323, 138, 144, 322,
	229, 303, 311, 221, 213, 137, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	133, 0, 291, 319, 338, 148, 0, 0, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 228, 145, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 139, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 140,
	147, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 237, 210, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 201, 0, 0, 249, 0, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	0, 204, 0, 0, 289, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 154, 132, 234, 290, 173, 0, 0, 0,
	115, 116, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 621, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 326, 0, 0, 0, 0, 260, 0,
	294, 182, 200, 627, 197, 129, 141, 625, 180, 233,
	267, 271, 0, 0, 0, 157, 0, 269, 246, 315,
	0, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 142, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 134, 297, 312, 151, 279,
	0, 0, 0, 136, 310, 293, 220, 193, 194, 135,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	143, 323, 138, 144, 322, 229, 303, 311, 221, 213,
	137, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 133, 0, 291, 319, 338,
	148, 0, 0, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 228, 145, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 139, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 237, 210, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 201, 0, 0, 249,
	0, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 0, 204, 0, 0, 289,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 154, 132, 234,
	290, 173, 0, 0, 462, 115, 116, 117, 0, 0,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 326, 0,
	0, 0, 0, 260, 0, 294, 182, 200, 146, 197,
	129, 141, 0, 180, 233, 267, 271, 0, 0, 0,
	157, 0, 269, 246, 315, 0, 250, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	142, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	134, 297, 312, 151, 279, 0, 0, 0, 136, 310,
	293, 220, 193, 194, 135, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 143, 323, 138, 144, 322,
	229, 303, 311, 221, 213, 137, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	133, 0, 291, 319, 338, 148, 0, 0, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 228, 145, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 139, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 140,
	147, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 237, 210, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 201, 0, 0, 249, 0, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	0, 204, 0, 0, 289, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 154, 132, 234, 290, 173, 66, 0, 0,
	115, 116, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 326, 0, 0, 0, 0, 260, 0,
	294, 182, 200, 146, 197, 129, 141, 0, 180, 233,
	267, 271, 0, 0, 0, 157, 0, 269, 246, 315,
	0, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 142, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 134, 297, 312, 151, 279,
	0, 0, 0, 136, 310, 293, 220, 193, 194, 135,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	143, 323, 138, 144, 322, 229, 303, 311, 221, 213,
	137, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 133, 0, 291, 319, 338,
	148, 0, 0, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 228, 145, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 139, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 237, 210, 0, 0, 0, 0, 0, 0, 0,
	166, 0, 0, 0, 0, 0, 201, 0, 0, 249,
	0, 280, 156, 209, 207, 302, 171, 167, 165, 155,
	188, 214, 248, 298, 242, 0, 204, 0, 0, 289,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 154, 132, 234,
	290, 173, 0, 0, 0, 115, 116, 117, 0, 1085,
	0, 0, 0, 0, 0, 0, 150, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 0, 0, 0, 326, 0,
	0, 0, 0, 260, 0, 294, 182, 200, 146, 197,
	129, 141, 0, 180, 233, 267, 271, 0, 0, 0,
	157, 0, 269, 246, 315, 0, 250, 268, 205, 304,
	261, 314, 327, 328, 163, 227, 321, 299, 324, 336,
	142, 160, 240, 295, 318, 286, 222, 301, 196, 285,
	134, 297, 312, 151, 279, 0, 0, 0, 136, 310,
	293, 220, 193, 194, 135, 0, 265, 164, 176, 159,
	236, 307, 308, 158, 337, 143, 323, 138, 144, 322,
	229, 303, 311, 221, 213, 137, 309, 219, 212, 199,
	170, 184, 258, 208, 259, 185, 225, 224, 226, 0,
	133, 0, 291, 319, 338, 148, 0, 0, 300, 332,
	335, 0, 262, 149, 177, 169, 257, 175, 202, 331,
	333, 334, 228, 145, 187, 287, 198, 206, 0, 0,
	245, 270, 152, 317, 288, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 128, 139, 203, 0, 263,
	174, 320, 0, 0, 162, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 130, 131, 140,
	147, 153, 161, 168, 172, 179, 183, 186, 189, 190,
	191, 195, 211, 215, 216, 217, 218, 230, 231, 232,
	235, 238, 239, 241, 243, 244, 247, 251, 252, 253,
	254, 255, 256, 264, 266, 272, 273, 274, 275, 276,
	277, 278, 281, 282, 283, 284, 292, 296, 305, 306,
	316, 325, 329, 181, 313, 330, 237, 210, 0, 0,
	0, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 201, 0, 0, 249, 0, 280, 156, 209, 207,
	302, 171, 167, 165, 155, 188, 214, 248, 298, 242,
	0, 204, 0, 0, 289, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 154, 132, 234, 290, 173, 0, 0, 0,
	115, 116, 117, 0, 826, 0, 0, 0, 0, 0,
	0, 150, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 178,
	0, 0, 0, 326, 0, 0, 0, 0, 260, 0,
	294, 182, 200, 146, 197, 129, 141, 0, 180, 233,
	267, 271, 0, 0, 0, 157, 0, 269, 246, 315,
	0, 250, 268, 205, 304, 261, 314, 327, 328, 163,
	227, 321, 299, 324, 336, 142, 160, 240, 295, 318,
	286, 222, 301, 196, 285, 134, 297, 312, 151, 279,
	0, 0, 0, 136, 310, 293, 220, 193, 194, 135,
	0, 265, 164, 176, 159, 236, 307, 308, 158, 337,
	143, 323, 138, 144, 322, 229, 303, 311, 221, 213,
	137, 309, 219, 212, 199, 170, 184, 258, 208, 259,
	185, 225, 224, 226, 0, 133, 0, 291, 319, 338,
	148, 0, 0, 300, 332, 335, 0, 262, 149, 177,
	169, 257, 175, 202, 331, 333, 334, 228, 145, 187,
	287, 198, 206, 0, 0, 245, 270, 152, 317, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	128, 139, 203, 0, 263, 174, 320, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 130, 131, 140, 147, 153, 161, 168, 172,
	179, 183, 186, 189, 190, 191, 195, 211, 215, 216,
	217, 218, 230, 231, 232, 235, 238, 239, 241, 243,
	244, 247, 251, 252, 253, 254, 255, 256, 264, 266,
	272, 273, 274, 275, 276, 277, 278, 281, 282, 283,
	284, 292, 296, 305, 306, 316, 325, 329, 181, 313,
	330, 839, 210, 0, 0, 0, 0, 0, 237, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 201, 0, 0, 249, 0, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 0, 204, 0, 0, 289, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 154, 132, 234, 290, 173, 0,
	0, 0, 115, 116, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 326, 0, 0, 0, 0,
	260, 0, 294, 182, 200, 146, 197, 129, 141, 0,
	180, 233, 267, 271, 0, 0, 0, 157, 0, 269,
	246, 315, 0, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 142, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 134, 297, 312,
	151, 279, 0, 0, 0, 136, 310, 293, 220, 193,
	194, 135, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 143, 323, 138, 144, 322, 229, 303, 311,
	221, 213, 137, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 133, 0, 291,
	319, 338, 148, 0, 0, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 228,
	145, 187, 287, 198, 206, 0, 0, 245, 270, 152,
	317, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 139, 203, 0, 263, 174, 320, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 131, 140, 147, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 237, 210, 0, 0, 0, 0, 0,
	0, 830, 166, 0, 0, 0, 0, 0, 201, 0,
	0, 249, 0, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 0, 204, 0,
	0, 289, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 154,
	132, 234, 290, 173, 0, 0, 0, 115, 116, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	326, 0, 0, 0, 0, 260, 0, 294, 182, 200,
	146, 197, 129, 141, 0, 180, 233, 267, 271, 0,
	0, 0, 157, 0, 269, 246, 315, 0, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 142, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 134, 297, 312, 151, 279, 0, 0, 0,
	136, 310, 293, 220, 193, 194, 135, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 143, 323, 138,
	144, 322, 229, 303, 311, 221, 213, 137, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 133, 0, 291, 319, 338, 148, 0, 0,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 228, 145, 187, 287, 198, 206,
	0, 0, 245, 270, 152, 317, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 139, 203,
	0, 263, 174, 320, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	131, 140, 147, 153, 161, 168, 172, 179, 183, 186,
	189, 190, 191, 195, 211, 215, 216, 217, 218, 230,
	231, 232, 235, 238, 239, 241, 243, 244, 247, 251,
	252, 253, 254, 255, 256, 264, 266, 272, 273, 274,
	275, 276, 277, 278, 281, 282, 283, 284, 292, 296,
	305, 306, 316, 325, 329, 181, 313, 330, 237, 210,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 201, 0, 0, 249, 0, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 0, 204, 0, 0, 289, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 154, 132, 234, 290, 173, 0,
	0, 0, 115, 116, 117, 0, 704, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 0, 0, 326, 0, 0, 0, 0,
	260, 0, 294, 182, 200, 146, 197, 129, 141, 0,
	180, 233, 267, 271, 0, 0, 0, 157, 0, 269,
	246, 315, 0, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 142, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 134, 297, 312,
	151, 279, 0, 0, 0, 136, 310, 293, 220, 193,
	194, 135, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 143, 323, 138, 144, 322, 229, 303, 311,
	221, 213, 137, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 133, 0, 291,
	319, 338, 148, 0, 0, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 228,
	145, 187, 287, 198, 206, 0, 0, 245, 270, 152,
	317, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 139, 203, 0, 263, 174, 320, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 131, 140, 147, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 237, 210, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 201, 0,
	0, 249, 0, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 0, 204, 0,
	0, 289, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 154,
	132, 234, 290, 173, 0, 0, 0, 115, 116, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 378, 0, 178, 0, 0, 0,
	326, 0, 0, 0, 0, 260, 0, 294, 182, 200,
	146, 197, 129, 141, 0, 180, 233, 267, 271, 0,
	0, 0, 157, 0, 269, 246, 315, 0, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 142, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 134, 297, 312, 151, 279, 0, 0, 0,
	136, 310, 293, 220, 193, 194, 135, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 143, 323, 138,
	144, 322, 229, 303, 311, 221, 213, 137, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 133, 0, 291, 319, 338, 148, 0, 0,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 228, 145, 187, 287, 198, 206,
	0, 0, 245, 270, 152, 317, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 139, 203,
	0, 263, 174, 320, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	131, 140, 147, 153, 161, 168, 172, 179, 183, 186,
	189, 190, 191, 195, 211, 215, 216, 217, 218, 230,
	231, 232, 235, 238, 239, 241, 243, 244, 247, 251,
	252, 253, 254, 255, 256, 264, 266, 272, 273, 274,
	275, 276, 277, 278, 281, 282, 283, 284, 292, 296,
	305, 306, 316, 325, 329, 377, 313, 330, 237, 210,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 201, 0, 0, 249, 0, 280, 156,
	209, 207, 302, 171, 167, 165, 155, 188, 214, 248,
	298, 242, 0, 204, 0, 0, 289, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 154, 132, 234, 290, 173, 0,
	0, 0, 115, 116, 117, 0, 0, 0, 0, 0,
	0, 0, 0, 150, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 0, 123, 0, 326, 0, 0, 0, 0,
	260, 0, 294, 182, 200, 146, 197, 129, 141, 0,
	180, 233, 267, 271, 0, 0, 0, 157, 0, 269,
	246, 315, 0, 250, 268, 205, 304, 261, 314, 327,
	328, 163, 227, 321, 299, 324, 336, 142, 160, 240,
	295, 318, 286, 222, 301, 196, 285, 134, 297, 312,
	151, 279, 0, 0, 0, 136, 310, 293, 220, 193,
	194, 135, 0, 265, 164, 176, 159, 236, 307, 308,
	158, 337, 143, 323, 138, 144, 322, 229, 303, 311,
	221, 213, 137, 309, 219, 212, 199, 170, 184, 258,
	208, 259, 185, 225, 224, 226, 0, 133, 0, 291,
	319, 338, 148, 0, 0, 300, 332, 335, 0, 262,
	149, 177, 169, 257, 175, 202, 331, 333, 334, 228,
	145, 187, 287, 198, 206, 0, 0, 245, 270, 152,
	317, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 128, 139, 203, 0, 263, 174, 320, 0,
	0, 162, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 130, 131, 140, 147, 153, 161,
	168, 172, 179, 183, 186, 189, 190, 191, 195, 211,
	215, 216, 217, 218, 230, 231, 232, 235, 238, 239,
	241, 243, 244, 247, 251, 252, 253, 254, 255, 256,
	264, 266, 272, 273, 274, 275, 276, 277, 278, 281,
	282, 283, 284, 292, 296, 305, 306, 316, 325, 329,
	181, 313, 330, 237, 210, 0, 0, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 201, 0,
	0, 249, 0, 280, 156, 209, 207, 302, 171, 167,
	165, 155, 188, 214, 248, 298, 242, 0, 204, 0,
	0, 289, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 154,
	132, 234, 290, 173, 0, 0, 0, 115, 116, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 150, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 0, 0, 0,
	326, 0, 0, 0, 0, 260, 0, 294, 182, 200,
	146, 197, 129, 141, 0, 180, 233, 267, 271, 0,
	0, 0, 157, 0, 269, 246, 315, 0, 250, 268,
	205, 304, 261, 314, 327, 328, 163, 227, 321, 299,
	324, 336, 142, 160, 240, 295, 318, 286, 222, 301,
	196, 285, 134, 297, 312, 151, 279, 0, 0, 0,
	136, 310, 293, 220, 193, 194, 135, 0, 265, 164,
	176, 159, 236, 307, 308, 158, 337, 143, 323, 138,
	144, 322, 229, 303, 311, 221, 213, 137, 309, 219,
	212, 199, 170, 184, 258, 208, 259, 185, 225, 224,
	226, 0, 133, 0, 291, 319, 338, 148, 0, 0,
	300, 332, 335, 0, 262, 149, 177, 169, 257, 175,
	202, 331, 333, 334, 228, 145, 187, 287, 198, 206,
	0, 0, 245, 270, 152, 317, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 128, 139, 203,
	0, 263, 174, 320, 0, 0, 162, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 130,
	131, 140, 147, 153, 161, 168, 172, 179, 183, 186,
	189, 190, 191, 195, 211, 215, 216, 217, 218, 230,
	231, 232, 235, 238, 239, 241, 243, 244, 247, 251,
	252, 253, 254, 255, 256, 264, 266, 272, 273, 274,
	275, 276, 277, 278, 281, 282, 283, 284, 292, 296,
	305, 306, 316, 325, 329, 181, 313, 330, 0, 210,
}

var yyPact = [...]int{
	134, -1000, -290, 1324, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1279, 933, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	373, 1003, 89, 1186, 114, 582, 214, 64, 19369, 213,
	306, 19754, -1000, 53, -1000, 45, 19754, 49, 18984, -1000,
	-1000, -1000, 10866, 1164, -50, -61, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1006, 1244, 1249, 1275, 739, 1250,
	-1000, 9313, 9313, 174, 174, 174, 7773, -1000, -1000, 15897,
	19754, 19754, 1011, 180, 211, 180, -139, -1000, -1000, -1000,
	-1000, -1000, -1000, 1186, -1000, -1000, 115, -1000, -1000, 19754,
	66, 326, 355, 1186, 91, -1000, -1000, -1000, 19754, 177,
	582, 177, 177, 19754, -1000, 254, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 19754,
	582, 1182, 407, 146, 303, 303, 303, 303, -1000, 320,
	-1000, 5361, 83, 93, -26, 1292, 79, 21, -1000, 407,
	5361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 196,
	-1000, -1000, -1000, -1000, 19754, 18599, 197, 348, -1000, -1000,
	-1000, -1000, 767, 592, -1000, 10866, 2203, 752, 752, -1000,
	-1000, 240, -1000, -1000, 12021, 12021, 12021, 12021, 12021, 12021,
	12021, 12021, 12021, 12021, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 752, 253,
	-1000, 10481, 752, 752, 752, 752, 752, 752, 752, 752,
	10866, 752, 752, 752, 752, 752, 752, 752, 752, 752,
	752, 752, 752, 752, 752, 752, 752, -1000, -1000, -1000,
	19754, -1000, 1279, -1000, 933, -1000, -1000, -1000, 1221, 10866,
	10866, 1279, -1000, 1101, 9313, -1000, -1000, 1126, -1000, -1000,
	-1000, -1000, 406, 1305, -1000, 12791, 252, 1300, 18214, -1000,
	16667, 17829, 947, 7371, -113, -1000, -1000, -1000, 347, 15512,
	-1000, -1000, -1000, 1181, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	892, 19754, -1000, -1000, 1787, 582, -1000, 995, -1000, 890,
	-1000, 982, 66, 19754, 370, 582, 582, -1000, -1000, -1000,
	1180, 319, 142, 65, 336, 109, 147, 116, 19754, 90,
	1186, 1159, 946, 193, 19754, 1236, 1039, 19754, 582, -1000,
	6567, -1000, 5361, 407, -1000, 640, 10866, 5361, 5361, 5361,
	19754, 5361, 5361, -1000, 626, -1000, -1000, -1000, 451, -1000,
	-1000, -1000, -1000, -1000, -1000, 5361, 5361, 444, 451, 444,
	-1000, -1000, -1000, -1000, 10866, 303, -1000, 1038, -1000, -1000,
	48, -1000, -1000, -1000, -1000, -1000, 1324, -1000, -1000, -1000,
	-131, 10866, 10866, 10866, 10866, 686, 308, 12021, 562, 314,
	12021, 12021, 12021, 12021, 12021, 12021, 12021, 12021, 12021, 12021,
	12021, 12021, 12021, 12021, 12021, 663, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 582, -1000, 1321, 781, 781, 267,
	267, 267, 267, 267, 267, 267, 267, 267, 12406, 8158,
	6567, 739, 856, 1279, 9313, 9313, 10866, 10866, 10083, 9698,
	9313, 1184, 337, 592, 19754, -1000, -1000, 11636, -1000, -1000,
	-1000, -1000, -1000, 650, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19754, 19754, 9313, 9313, 9313, 9313, 9313, -1000, 939,
	-1000, -172, 15127, 1249, 739, 1126, 1231, 1312, 297, 709,
	918, -1000, 502, 1249, 14742, 886, -1000, 1126, -1000, -1000,
	-1000, 19754, -1000, -1000, 17437, -1000, -1000, 6165, 19754, 123,
	19754, -1000, 799, 1034, -1000, -1000, -1000, 1240, 14357, 19754,
	913, 718, -1000, -1000, 251, 6969, -113, -1000, 6969, 897,
	-1000, -76, -64, 8543, 263, -1000, -1000, -1000, -1000, 4557,
	13176, 703, 412, -22, -1000, -1000, -1000, 982, -1000, 982,
	982, 982, 982, 18, 18, 18, 18, -1000, -1000, -1000,
	-1000, -1000, 1002, 1001, -1000, 982, 982, 982, 982, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1000, 1000, 1000, 984,
	984, 155, 10866, 63, 19754, 1230, 475, 65, -1000, 1235,
	1018, -1000, 319, 760, -1000, -1000, 435, 435, 334, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	124, 200, 57, 87, 19754, 19754, 19754, 19754, 19754, 222,
	-1000, -1000, -1000, 105, 19754, 19754, 242, -1000, 19754, 236,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 592, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 19754, -1000, -1000, -1000,
	-1000, 407, 19754, 19754, 19754, 407, 592, -1000, 19754, 19754,
	-1000, -1000, -1000, -1000, -1000, 592, 308, 327, 394, -1000,
	-1000, 480, -1000, -1000, 1446, -1000, -1000, -1000, -1000, 562,
	12021, 12021, 12021, 552, 1446, 912, 408, 1941, 267, 499,
	499, 268, 268, 268, 268, 268, 637, 637, -1000, -1000,
	-1000, 650, -1000, -1000, -1000, 650, 9313, 9313, 914, 752,
	250, -1000, 1006, -1000, -1000, 1249, 849, 849, 706, 523,
	369, 1296, 849, 365, 1294, 849, 849, 9313, -1000, -1000,
	386, -1000, 10866, 650, -1000, 249, -1000, 485, 900, 899,
	849, 650, 650, 849, 849, 19754, -1000, -280, -1000, -119,
	259, 752, -1000, 17052, -1000, -1000, 1221, -1000, -1000, 1142,
	-1000, 1097, 10866, 10866, 10866, -1000, -1000, -1000, 1221, 1277,
	-1000, 1110, 1108, 1290, 9313, 16667, 1126, -1000, -1000, -1000,
	245, 1290, 951, 752, -1000, 19754, 16667, 16667, 16667, 16667,
	16667, -1000, 1083, 1064, -1000, 1063, 1061, 1050, 19754, -1000,
	854, 739, 14357, 123, 819, 16667, 19754, -1000, -1000, 16667,
	19754, 5763, -1000, 897, -113, -54, -1000, -1000, -1000, -1000,
	592, -1000, 751, 895, 4155, -1000, -1000, -1000, -1000, 152,
	-1000, -1000, 999, 582, -1000, 1210, 333, 333, 330, 582,
	1209, -1000, -1000, -1000, -1000, 1185, -1000, 372, -29, -1000,
	-1000, 18, 18, -1000, -1000, 263, 1179, 263, 263, 263,
	604, 604, -1000, -1000, -1000, -1000, -1000, 455, -1000, -1000,
	-1000, 436, -1000, -1000, 995, 653, 1056, 63, -1000, -1000,
	319, 603, 1168, 19754, -1000, -1000, 695, 199, -1000, 1037,
	-1000, 733, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 19754, -1000, -1000, -1000, -1000, -1000, 19754, 19754, 70,
	-1000, 992, 439, -1000, 953, -1000, -1000, -1000, -1000, 47,
	108, 103, 192, -1000, -1000, -1000, -1000, 5361, 19754, -1000,
	444, -1000, -1000, -1000, 444, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 552, 1446, 593, -1000, 12021, 12021, -1000, -1000,
	849, 849, 9313, 6567, 1279, 1221, -1000, -1000, 194, 663,
	194, 12021, 12021, -1000, 12021, 12021, -1000, -151, 898, 328,
	-1000, 10866, 538, -1000, 6567, -1000, 12021, 12021, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 210, 209, 205,
	19754, -1000, -1000, 609, 602, 1093, 592, 592, -1000, -1000,
	19754, -1000, -1000, -1000, -1000, 1287, 10866, -1000, 877, -1000,
	4959, 1249, 1036, 19754, 752, 1324, 13574, 19754, 782, -1000,
	325, 1034, 1021, 1035, 1005, -1000, -1000, -1000, -1000, 1054,
	-1000, 1051, -1000, -1000, -1000, -1000, -1000, 739, 1290, 16667,
	775, -1000, 775, -1000, 244, -1000, -1000, -1000, -92, -69,
	-1000, -1000, -1000, 4557, -1000, 4557, -1000, 19754, 162, -1000,
	582, 582, 582, -1000, -1000, -1000, 986, 1033, 12021, -1000,
	-1000, -1000, 263, 263, -1000, 508, -1000, -1000, -1000, 846,
	-1000, 837, 873, 815, 29, -1000, 1009, 1176, 319, 319,
	-1000, 433, -1000, 582, -1000, -1000, 19754, 19754, -1000, -1000,
	-1000, -1000, -1000, -1000, 1227, 967, -1000, -1000, -1000, 693,
	-1000, -163, 582, 19754, 19754, 19754, -1000, 19754, -1000, -1000,
	407, 407, -1000, 12021, 1446, 1446, -1000, -1000, 650, -1000,
	1249, -1000, 650, 982, 982, -1000, 982, 984, -1000, 982,
	38, 982, 34, 650, 650, 1732, 1356, 1152, 780, 752,
	-146, -1000, 592, 10866, -1000, 927, 576, 752, 752, 752,
	806, -1000, 575, 18, -1000, -1000, -1000, 1281, 1274, 592,
	-1000, -1000, -1000, 1212, 756, 721, -1000, -1000, 8928, 808,
	1107, 231, 806, 1279, 19754, 10866, -1000, -1000, 10866, 981,
	-1000, 10866, -1000, -1000, -1000, 1279, 1279, 775, -1000, -1000,
	284, -1000, -1000, -1000, 4155, -1000, 803, -1000, 1209, -1000,
	-1000, -1000, 19754, -17, 1310, 1446, -1000, -1000, -1000, -1000,
	18, 573, 18, 429, -1000, 428, -1000, -1000, -218, -1000,
	-1000, 945, 1060, -1000, -1000, 967, -1000, 752, 1239, 19754,
	-1000, -1000, 6567, -1000, -1000, 952, 1016, -1000, -1000, -1000,
	-1000, 1446, -1000, 1221, -1000, -1000, 173, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 12021, 12021, 12021, 12021, 12021,
	1249, 566, 592, 12021, 12021, 16282, 19754, 19754, 13959, 19754,
	18, -24, -1000, 10866, 10866, 1205, -1000, 752, -1000, 935,
	19754, 752, 19754, -1000, 1249, -1000, 592, 592, 19754, 592,
	1249, -1000, 63, 801, -1000, 309, -1000, -100, 263, -1000,
	263, 667, 655, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1238, 119, 933, 797, 842, -1000, 313, 19754, 19754,
	-1000, -1000, -1000, 485, 485, 485, 485, 55, 650, -1000,
	485, 485, 793, -1000, 793, 793, 259, -1000, -275, -1000,
	1150, 1140, 592, 767, 1309, -1000, 752, 1324, 226, 721,
	-1000, -1000, 771, -1000, -1000, 139, 19754, 384, 1204, -1000,
	1190, -1000, -1000, -1000, -1000, -1000, 933, 731, -1000, 19754,
	141, -1000, 6567, 4557, 723, -1000, -1000, -1000, -1000, -1000,
	650, 92, -179, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-24, 203, -1000, 1115, 1113, 1273, 19754, 721, 19754, -1000,
	19754, -1000, -1000, 564, -1000, -1000, 141, -1000, 119, 1104,
	-1000, -80, -1000, -1000, 953, -1000, 1091, -156, -183, 1125,
	1127, 1127, 1140, 1256, 1135, 1131, -1000, 563, 716, -1000,
	950, -1000, -1000, -1000, 120, 154, -1000, -1000, -163, -1000,
	1088, -1000, 1117, 487, -1000, -1000, -1000, -1000, 560, -1000,
	1254, 1253, -1000, 19754, 117, 74, -1000, -177, -1000, 430,
	-1000, -1000, -1000, 546, 479, 670, 752, -1000, -180, -1000,
	-1000, -1000, -1000, 1032, 11251, -184, 1029, -1000, 1304, 485,
	650, -1000, -1000, 1306, 293, 293, -1000, -1000, -1000, -1000,
	-1000, 145, 468, -1000, -1000, -1000, -1000,
}

var yyPgo = [...]int{
	0, 1615, 1614, 25, 79, 81, 1613, 1611, 1609, 1603,
	129, 128, 127, 1602, 1599, 1598, 1595, 1593, 1592, 1591,
	1590, 1589, 1588, 1587, 1586, 1584, 1581, 111, 109, 530,
	1566, 1564, 1563, 1562, 1560, 1559, 1557, 1555, 1552, 1551,
	1550, 1548, 1547, 1546, 112, 1544, 1542, 10, 1541, 86,
	1540, 1539, 1538, 1535, 1533, 1532, 1531, 104, 1530, 54,
	199, 55, 73, 1527, 77, 507, 1526, 89, 108, 1525,
	531, 1524, 41, 80, 72, 1523, 48, 1522, 1521, 103,
	1520, 1519, 1518, 68, 1516, 1507, 2619, 1506, 66, 74,
	18, 27, 1504, 1501, 1499, 1498, 106, 1534, 1496, 1494,
	20, 1493, 1477, 120, 1475, 85, 21, 17, 15, 23,
	1474, 82, 1473, 11, 1472, 83, 1471, 1457, 1452, 1451,
	30, 1450, 78, 94, 19, 1447, 6, 14, 1446, 1445,
	1443, 1442, 1441, 1440, 2, 1439, 1436, 1432, 1429, 44,
	1428, 5, 24, 67, 42, 28, 9, 1427, 1426, 31,
	105, 64, 95, 1425, 1424, 1423, 772, 1422, 71, 1420,
	131, 1419, 47, 102, 439, 556, 1418, 1417, 1415, 1414,
	1411, 53, 842, 1866, 13, 101, 1405, 1404, 2397, 58,
	75, 29, 1399, 1397, 1395, 61, 70, 50, 778, 1393,
	43, 1392, 1391, 1390, 1389, 1388, 1387, 1384, 130, 1383,
	1382, 1381, 45, 35, 97, 39, 1379, 1378, 1377, 1375,
	60, 99, 1374, 1372, 69, 63, 1369, 107, 65, 40,
	1367, 1366, 1362, 1361, 36, 16, 1360, 96, 37, 56,
	33, 38, 88, 1359, 22, 1356, 1355, 34, 32, 1354,
	7, 1353, 12, 1352, 4, 0, 1349, 8, 1347, 93,
	1202, 1, 1345, 3, 1343, 1336, 76, 1335, 1334, 1333,
	1462, 697, 98, 1330, 113,
}

var yyR1 = [...]int{
	0, 258, 259, 259, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 245, 245, 245, 248, 248, 21, 41,
	3, 3, 3, 3, 2, 2, 8, 9, 4, 5,
	5, 10, 10, 51, 51, 11, 12, 12, 12, 12,
	262, 262, 81, 81, 79, 79, 80, 80, 143, 143,
	13, 14, 14, 152, 152, 151, 151, 151, 153, 153,
	153, 153, 188, 188, 15, 15, 15, 15, 15, 58,
	58, 247, 247, 246, 244, 244, 243, 243, 242, 23,
	24, 25, 26, 250, 250, 220, 30, 30, 29, 29,
	29, 29, 31, 31, 28, 28, 27, 27, 222, 222,
	221, 221, 221, 221, 221, 221, 211, 191, 191, 191,
	191, 194, 194, 192, 192, 192, 192, 192, 192, 192,
	192, 192, 193, 193, 193, 193, 193, 195, 195, 195,
	195, 195, 196, 196, 196, 196, 196, 196, 196, 196,
	196, 196, 196, 196, 196, 196, 196, 197, 197, 197,
	197, 197, 197, 197, 197, 210, 210, 198, 198, 204,
	204, 205, 205, 205, 207, 207, 208, 208, 166, 166,
	166, 200, 200, 201, 201, 206, 206, 202, 202, 202,
	203, 203, 203, 209, 209, 209, 209, 209, 199, 199,
	212, 234, 234, 233, 233, 229, 229, 229, 229, 219,
	219, 226, 226, 226, 226, 226, 226, 216, 216, 216,
	217, 217, 215, 215, 218, 218, 228, 228, 227, 213,
	213, 214, 214, 237, 237, 237, 237, 237, 238, 252,
	253, 251, 251, 251, 251, 251, 49, 49, 49, 167,
	167, 167, 223, 223, 223, 224, 224, 224, 225, 225,
	225, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 249, 249,
	249, 249, 249, 249, 249, 249, 249, 249, 249, 249,
	249, 249, 241, 239, 239, 240, 240, 17, 22, 22,
	18, 18, 18, 18, 19, 19, 32, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 33, 33,
	33, 33, 33, 33, 33, 33, 33, 33, 159, 159,
	254, 254, 161, 161, 157, 157, 160, 160, 158, 158,
	158, 162, 162, 162, 163, 163, 189, 189, 189, 34,
	34, 36, 36, 37, 38, 38, 183, 183, 184, 184,
	39, 40, 50, 50, 50, 50, 50, 50, 52, 52,
	52, 7, 7, 7, 7, 46, 46, 46, 6, 6,
	35, 35, 42, 255, 255, 256, 257, 257, 257, 257,
	43, 20, 263, 44, 45, 45, 57, 57, 57, 53,
	53, 53, 56, 56, 56, 61, 61, 63, 63, 63,
	63, 63, 64, 64, 64, 64, 64, 64, 60, 60,
	62, 62, 62, 62, 176, 176, 176, 175, 175, 71,
	71, 72, 72, 73, 73, 74, 74, 74, 112, 89,
	89, 142, 142, 141, 141, 144, 144, 75, 75, 75,
	75, 76, 76, 77, 77, 78, 78, 182, 182, 181,
	181, 181, 180, 180, 82, 82, 82, 84, 83, 83,
	83, 83, 85, 85, 87, 87, 86, 86, 88, 90,
	90, 90, 90, 90, 91, 91, 70, 70, 70, 70,
	70, 70, 70, 70, 155, 155, 93, 93, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 104, 104,
	104, 104, 104, 104, 94, 94, 94, 94, 94, 94,
	94, 59, 59, 105, 105, 105, 111, 106, 106, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 97, 97, 97,
	97, 97, 97, 101, 101, 101, 101, 99, 99, 99,
	99, 99, 99, 99, 99, 99, 99, 99, 99, 99,
	100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
	100, 100, 100, 100, 100, 100, 264, 264, 103, 102,
	102, 102, 102, 102, 102, 102, 55, 55, 55, 55,
	55, 187, 187, 190, 190, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 116, 116, 54, 54,
	114, 114, 115, 117, 117, 113, 113, 113, 96, 96,
	96, 96, 96, 96, 96, 96, 98, 98, 98, 118,
	118, 119, 119, 120, 120, 121, 121, 122, 123, 123,
	123, 124, 124, 124, 124, 235, 235, 235, 235, 235,
	230, 230, 230, 230, 231, 231, 231, 65, 65, 65,
	65, 67, 67, 66, 66, 47, 47, 48, 48, 48,
	68, 68, 69, 69, 69, 69, 139, 139, 139, 125,
	125, 125, 125, 130, 130, 130, 126, 126, 128, 128,
	128, 129, 129, 129, 127, 133, 133, 135, 135, 134,
	134, 132, 132, 137, 137, 136, 136, 131, 131, 95,
	95, 95, 95, 95, 140, 140, 140, 140, 145, 145,
	107, 107, 109, 109, 108, 110, 146, 146, 149, 147,
	147, 150, 150, 150, 150, 150, 148, 148, 148, 177,
	177, 177, 154, 154, 164, 164, 165, 165, 156, 156,
	168, 168, 168, 168, 168, 168, 168, 168, 168, 168,
	169, 169, 169, 170, 170, 138, 138, 138, 138, 236,
	236, 232, 173, 173, 174, 174, 178, 178, 179, 179,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 171, 171, 171, 171, 171,
	171, 171, 171, 171, 171, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 172, 172, 172, 172,
	172, 172, 172, 172, 172, 172, 260, 261, 185, 186,
	186, 186,
}

var yyR2 = [...]int{
	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 1, 1, 1, 0, 1, 2, 3,
	5, 6, 6, 7, 4, 6, 5, 7, 8, 1,
	3, 7, 8, 1, 1, 9, 9, 8, 7, 7,
	1, 1, 1, 3, 1, 3, 1, 3, 0, 4,
	3, 5, 4, 1, 3, 3, 2, 2, 2, 2,
	2, 1, 1, 1, 2, 2, 6, 11, 2, 0,
	2, 0, 2, 1, 0, 2, 1, 3, 3, 4,
	7, 4, 2, 1, 1, 4, 0, 1, 1, 1,
	2, 2, 0, 1, 5, 5, 4, 4, 2, 4,
	1, 1, 3, 4, 3, 3, 8, 3, 1, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 2, 2, 1, 2, 2,
	2, 2, 4, 4, 2, 2, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 6, 6, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 3, 0,
	5, 0, 3, 5, 0, 1, 0, 1, 0, 1,
	2, 0, 2, 0, 3, 0, 1, 0, 3, 3,
	0, 2, 2, 0, 2, 1, 2, 1, 0, 2,
	5, 0, 1, 1, 2, 1, 3, 2, 3, 0,
	1, 2, 3, 3, 3, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 3,
	1, 3, 1, 10, 11, 11, 12, 1, 5, 3,
	3, 1, 1, 2, 2, 2, 0, 1, 1, 0,
	1, 2, 0, 1, 3, 1, 2, 3, 1, 1,
	1, 5, 6, 6, 6, 6, 10, 4, 3, 6,
	7, 5, 5, 5, 12, 7, 5, 9, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 7, 1, 3, 8, 8, 3, 3, 5,
	5, 6, 5, 4, 3, 2, 3, 4, 4, 3,
	4, 4, 4, 4, 4, 4, 3, 3, 3, 3,
	2, 7, 2, 3, 4, 5, 7, 5, 4, 2,
	4, 4, 3, 3, 5, 2, 3, 3, 1, 1,
	1, 1, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 2,
	1, 1, 2, 1, 1, 5, 0, 1, 0, 1,
	2, 3, 0, 3, 3, 3, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 1, 3, 3,
	2, 2, 3, 1, 3, 2, 1, 2, 1, 2,
	2, 2, 0, 2, 0, 2, 1, 2, 2, 0,
	1, 1, 0, 1, 1, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 2, 3, 5, 0, 1, 2, 1, 1, 0,
	2, 1, 3, 1, 1, 1, 3, 3, 3, 3,
	7, 0, 3, 1, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 3, 3,
	3, 0, 3, 1, 1, 0, 4, 0, 1, 1,
	0, 3, 1, 3, 2, 1, 0, 2, 4, 0,
	9, 3, 5, 0, 3, 3, 0, 1, 0, 2,
	2, 0, 2, 2, 2, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 3, 0, 4, 0, 1, 2,
	1, 5, 4, 4, 1, 3, 3, 5, 0, 5,
	1, 3, 1, 2, 3, 1, 1, 3, 3, 1,
	3, 3, 3, 3, 3, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 1, 0,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 0, 0,
	1, 1,
}

var yyChk = [...]int{
	-1000, -258, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -32, -33, -34, -36,
	-37, -38, -39, -40, -6, -35, -20, -21, -41, -42,
	-43, -4, -260, 6, 7, 8, -51, 10, 11, 31,
	-23, -24, 146, -25, 147, -26, 149, 148, 182, 150,
	175, 70, 208, 209, 211, 212, 213, 214, -52, 180,
	181, 152, 35, 41, 32, 33, 80, 9, 303, 177,
	176, 26, -259, 407, -57, 5, -120, 16, -3, -44,
	-263, -44, -44, -44, -44, -44, -44, -220, -222, 80,
	119, 80, -58, 154, -138, -250, 100, 160, 163, 164,
	294, 153, -30, -29, -28, -27, -31, 30, -250, 154,
	-65, 268, 76, -248, -245, 83, 84, 85, 154, 154,
	155, 156, -250, 154, -86, -178, -245, -172, 313, 168,
	345, 346, 76, 258, 208, 222, 216, 243, 235, 314,
	347, 169, 198, 233, 236, 281, 166, 348, 263, 271,
	94, 211, 290, 349, 75, 47, 40, 178, 231, 227,
	199, 350, 322, 192, 225, 46, 28, 45, 351, 273,
	248, 44, 352, 79, 318, 275, 226, 272, 152, 353,
	171, 401, 164, 354, 249, 253, 355, 282, 48, 356,
	357, 358, 74, 220, 221, 359, 206, 167, 284, 247,
	165, 34, 276, 315, 54, 186, 285, 42, 251, 41,
	405, 360, 246, 242, 49, 361, 362, 363, 364, 245,
	219, 241, 204, 58, 255, 254, 256, 193, 280, 238,
	365, 366, 367, 172, 77, 368, 228, 19, 369, 370,
	200, 371, 52, 372, 373, 288, 181, 374, 50, 37,
	184, 375, 376, 377, 378, 379, 380, 274, 250, 252,
	161, 188, 270, 317, 381, 224, 382, 173, 185, 180,
	289, 174, 383, 384, 385, 386, 387, 388, 389, 212,
	39, 390, 391, 392, 393, 207, 203, 283, 292, 57,
	78, 260, 394, 218, 163, 201, 395, 209, 51, 195,
	266, 205, 43, 239, 187, 396, 397, 229, 230, 244,
	217, 240, 210, 402, 189, 182, 398, 291, 202, 261,
	319, 194, 237, 234, 196, 399, 156, 190, 191, 400,
	403, 277, 267, 278, 279, 268, 197, 232, 262, 154,
	137, 236, 281, 146, 264, 265, 276, 277, 273, -161,
	274, 188, -189, 154, -157, 263, 267, 268, 197, -254,
	-245, 275, 283, 282, 269, 279, 278, -178, 210, -183,
	215, -173, -245, -172, 213, -86, -50, 401, 150, -185,
	-185, -185, -106, -70, -92, 103, -97, 30, 24, -96,
	-93, -113, -110, -111, 137, 138, 140, 139, 141, 126,
	127, 134, 104, 142, -101, -99, -100, -102, 87, 86,
	95, 88, 89, 90, 91, 96, 97, 98, -173, -178,
	-108, -260, 64, 65, 304, 305, 306, 307, 312, 308,
	106, 53, 293, 302, 301, 300, 297, 298, 295, 296,
	310, 311, 159, 294, 153, 132, 303, -245, -172, 40,
	266, 266, -5, -4, -260, 6, 21, 22, -124, 18,
	17, -261, 82, -53, -63, 59, 60, -64, 22, 36,
	63, 61, -45, -62, 128, -70, -178, -62, -156, 158,
	-156, -156, -147, -188, 210, -150, 283, 282, -174, -148,
	-173, -171, 281, 236, 280, 151, 320, 102, 23, 25,
	105, 137, 17, 106, 136, 304, 146, 68, 321, 295,
	296, 293, 299, 306, 307, 294, 264, 30, 11, 323,
	26, 176, 22, 36, 130, 148, 109, 110, 179, 24,
	177, 98, 326, 20, 71, 12, 14, 327, 328, 15,
	159, 158, 121, 155, 66, 9, 142, 27, 118, 62,
	329, 29, 330, 331, 332, 333, 64, 119, 18, 297,
	298, 32, 406, 334, 312, 183, 132, 69, 55, 103,
	335, 336, 96, 337, 99, 72, 100, 16, 67, 38,
	338, 339, 340, 286, 341, 120, 149, 303, 65, 342,
	153, 265, 6, 309, 31, 175, 63, 343, 154, 108,
	310, 311, 157, 97, 5, 160, 33, 10, 70, 73,
	300, 301, 302, 53, 316, 107, 13, 344, 287, 101,
	-221, 119, -211, -214, -173, 170, -238, 166, -86, -228,
	-227, -173, -65, -165, 159, 155, -165, 303, -27, -28,
	236, 136, -86, -68, 199, 146, 148, 151, 72, 111,
	-29, 194, -22, -86, -164, 159, -245, -164, -164, -86,
	143, -86, -245, 31, -162, 119, 13, 294, -245, 188,
	154, 189, 156, -163, 119, -163, -163, -163, -216, 155,
	34, 167, -186, -260, -174, 195, 196, 195, -160, -159,
	271, 272, 266, 270, 13, 196, 266, 191, -162, -186,
	157, -173, -46, -173, 87, -7, -3, -11, -10, -12,
	111, 81, 102, 100, 101, 118, -70, -94, 121, 103,
	119, 120, 105, 123, 122, 133, 126, 127, 128, 129,
	130, 131, 132, 124, 125, 136, 111, 112, 113, 114,
	115, 116, 117, -155, -260, -111, -260, 144, 145, -97,
	-97, -97, -97, -97, -97, -97, -97, -97, -97, -260,
	143, -2, -106, -4, -260, -260, -260, -260, -260, -260,
	-260, -260, -116, -70, -260, -264, -103, -260, -264, -103,
	-264, -103, -264, -260, -264, -103, -264, -103, -264, -264,
	-103, -260, -260, -260, -260, -260, -260, -260, -185, -255,
	-256, -89, -86, -120, -3, -44, -139, 20, 32, -70,
	-121, -122, -70, -120, 55, -60, -62, -64, 59, 60,
	93, 12, -176, -175, 23, -173, 87, 143, 12, -87,
	27, -86, -72, -73, -74, -75, -89, -112, -260, 12,
	-79, -80, -86, -88, -178, 81, 210, -150, -188, -152,
	-151, 284, 286, 111, -177, -173, 87, 30, 31, 82,
	81, -86, -191, -194, -196, -195, -197, -192, -193, 233,
	234, 137, 237, 239, 240, 241, 242, 243, 244, 245,
	246, 247, 248, 31, 178, 229, 230, 231, 232, 249,
	250, 251, 252, 253, 254, 255, 256, 216, 235, 314,
	217, 218, 219, 220, 221, 222, 224, 225, 226, 227,
	228, -245, 80, 82, 81, -198, 80, -68, -86, 103,
	-245, -245, 31, -219, 111, -168, 151, 148, 149, -241,
	147, 258, 236, 94, 30, 16, 304, 184, 319, -245,
	185, -67, 201, 111, 190, 190, 154, 154, 203, -86,
	202, 204, 205, 40, 81, 157, -79, 24, 72, -81,
	-86, -245, -179, -178, -171, -186, -162, 87, -70, -186,
	-186, -186, -86, -186, -186, 87, -217, 12, 121, -186,
	-186, -158, 12, 121, -217, -158, -70, -163, 72, -184,
	213, 247, 402, 403, 404, -70, -70, -70, -70, -104,
	96, 103, 97, 98, -97, -105, -108, -111, 92, 121,
	119, 120, 105, -97, -97, -97, -97, -97, -97, -97,
	-97, -97, -97, -97, -97, -97, -97, -97, -187, -245,
	87, -245, -96, -96, -173, -61, 22, 36, -60, -174,
	-179, -171, -57, -261, -261, -120, -60, -60, -70, -70,
	-113, 87, -60, -113, 87, -60, -60, -56, 22, 36,
	-114, -115, 107, -113, -173, -178, -261, -97, -173, -173,
	-60, -61, -61, -60, -60, 81, -257, 286, 287, 406,
	-181, 184, -180, 23, -178, 87, -124, -261, -125, 27,
	10, 121, 81, 19, 81, -123, 25, 26, -124, -98,
	-173, 88, 91, -71, 81, 12, -64, -86, -175, 128,
	-179, -86, -143, 184, -86, 31, 81, -82, -84, -83,
	-85, 62, 66, 68, 63, 64, 65, 69, -182, 23,
	-72, -3, -260, -86, -79, -262, 81, 12, 73, -262,
	81, 143, -150, -152, 81, 285, 287, 288, 72, 99,
	-70, -203, 136, -223, -224, -225, -174, 87, 88, -211,
	-212, -213, -226, 170, -237, 161, 163, 164, 160, -215,
	171, -238, 155, 29, 82, -166, 96, 103, -207, 261,
	-198, -198, -198, -198, -198, -202, 236, -202, -202, -202,
	80, 80, -198, -198, -198, -198, -204, 80, -204, -204,
	-205, 80, -205, -238, 166, -70, -234, -233, -229, -232,
	165, 94, 316, 73, -227, -123, 88, -67, 24, -236,
	-232, -219, -245, 87, -185, -249, 166, 162, 170, 171,
	164, 83, 84, 85, 155, 29, 161, 163, 184, 160,
	-249, -169, -170, 157, 23, 155, 29, 184, 156, 207,
	-69, 299, 87, 83, -86, -86, -86, -86, -86, 151,
	148, 192, -86, -86, -49, 174, 169, -86, 81, -49,
	-86, -162, -178, -178, -86, -162, -86, -173, 96, 97,
	98, -105, -97, -97, -97, -59, 179, 102, -261, -261,
	-60, -60, -260, 143, -5, -124, -261, -261, 81, 73,
	23, 12, 12, -261, 12, 12, -261, -261, -60, -117,
	-115, 109, -70, -261, 143, -261, 81, 81, -261, -261,
	-261, -261, -261, -256, 405, 287, -90, 70, 158, 71,
	-260, -180, -139, 38, 46, 57, -70, -70, -122, -139,
	-154, 20, 12, 53, 53, -91, 13, -62, -72, -64,
	143, -91, -95, 31, 53, -3, -260, -260, -146, -149,
	-113, -73, -74, -74, -73, -74, 62, 62, 62, 67,
	62, 67, 62, -83, -178, -261, -261, -3, -143, 73,
	-72, -86, -72, -88, -178, 128, -151, -153, 289, 286,
	292, -245, 87, 81, -225, 111, -214, 80, -245, 29,
	-215, -215, -215, -218, -245, -218, 29, -200, 30, 96,
	-208, 262, -202, -202, -203, 31, -203, -203, -203, -210,
	87, -210, 88, 88, 82, -235, -230, -231, 32, 76,
	-229, -219, 87, 37, -173, 82, 156, 72, -245, 87,
	-185, -185, -86, -185, -173, -86, -66, 199, 206, 80,
	84, -247, 73, 190, 258, 190, 193, 157, -186, -86,
	-158, -158, -59, 102, -97, -97, -261, -261, -61, -174,
	-120, -139, -190, 137, 233, 178, 231, 227, 247, 238,
	260, 229, 261, -187, -190, -97, -97, -97, -97, 313,
	-120, 110, -70, 108, -174, -97, -97, 155, 155, 155,
	-144, -173, 39, 87, 87, 58, -86, -118, 14, -70,
	128, -124, -145, 72, -146, -107, -109, -108, -260, -140,
	-261, -173, -144, -91, 81, 111, -77, -76, 72, 73,
	-78, 72, -76, 62, 62, -261, -91, -72, -91, -91,
	143, 286, 290, 291, -224, -225, -228, -237, 171, -218,
	-218, -218, 80, -201, 72, -97, -203, -203, -245, 137,
	82, 81, 82, 81, 82, 81, -167, 351, 103, -231,
	-230, -219, -219, 88, -245, -86, -86, 27, -142, 80,
	82, -244, 316, -246, -245, -173, -173, -173, -86, -162,
	-162, -97, -261, -124, -261, -198, -198, -198, -205, -198,
	221, -198, 221, -261, -261, 20, 20, 20, 20, -260,
	-54, 309, -70, 81, 81, -260, -260, -260, -261, 81,
	87, -202, -119, 15, 17, 28, -145, 81, -261, -261,
	81, 53, 143, -261, -120, -149, -70, -70, 80, -70,
	-120, -91, 82, -141, -173, -206, 258, 10, -202, 87,
	-202, 88, 88, 351, 30, 77, 78, 79, 30, 74,
	75, -142, -260, 23, -141, -243, -242, -174, 80, 73,
	-139, -202, -245, -97, -97, -97, -97, -97, -124, 87,
	-97, -97, -141, -261, -141, -141, -181, -173, -202, -127,
	-132, -160, -70, -106, 29, -109, 53, -3, -173, -107,
	-173, -124, -141, -124, -234, 82, 81, -209, 161, 29,
	160, -100, -203, -203, 82, 82, 23, -239, -240, 184,
	-3, 82, 81, 111, -141, -86, -261, -261, -261, -261,
	-55, 121, 316, -261, -261, -261, -261, -261, -261, -90,
	-130, 401, -133, 42, -134, 43, 10, -107, 143, 82,
	173, -173, -199, 94, 29, 29, -3, -261, 81, -173,
	-47, 316, -242, -225, 82, -261, 314, 69, 317, -127,
	47, 239, -135, 51, -136, -131, 52, 17, -146, -173,
	-86, 87, -47, -240, 53, -48, 198, 405, -247, 58,
	315, 318, -128, 49, -126, 48, -126, -134, 17, -137,
	44, 45, 87, 80, 186, 166, -244, 58, -129, 50,
	72, 99, 87, 17, 17, -141, 187, 200, 316, 72,
	99, 87, 87, 82, -260, 317, -252, -253, 72, -97,
	183, 318, -253, 72, 11, 10, -261, -261, -251, 174,
	169, 172, 31, -251, 168, 30, 96,
}

var yyDef = [...]int{
	32, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
	31, 673, 0, 412, 412, 412, 412, 412, 412, 412,
	0, 0, -2, -2, 697, 36, 0, 0, 0, 0,
	-2, 370, 371, 0, 373, -2, 0, 0, 382, 1158,
	1158, 1158, 0, 0, 0, 0, 1156, 53, 54, 388,
	389, 390, 1, 3, 0, 416, 681, 0, 0, -2,
	414, 0, 0, 788, 788, 788, 0, 84, 85, 0,
	0, 0, 697, 786, 0, 786, 0, 806, 807, 808,
	103, 104, 88, -2, 108, 109, 0, 113, 102, 0,
	710, 0, 0, 112, 37, 33, 34, 35, 0, 784,
	0, 784, 784, 0, 315, 496, 816, 817, 945, 946,
	947, 948, 949, 950, 951, 952, 953, 954, 955, 956,
	957, 958, 959, 960, 961, 962, 963, 964, 965, 966,
	967, 968, 969, 970, 971, 972, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986,
	987, 988, 989, 990, 991, 992, 993, 994, 995, 996,
	997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006,
	1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016,
	1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026,
	1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036,
	1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046,
	1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056,
	1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066,
	1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076,
	1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
	1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096,
	1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116,
	1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126,
	1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136,
	1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146,
	1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 0,
	0, 0, 361, 0, 364, 364, 364, 364, 330, 0,
	332, 1159, 0, 0, 0, 339, 0, 0, 345, 361,
	1159, 353, 367, 368, 355, 350, 351, 369, 372, 0,
	377, 380, 812, 813, 0, 395, 0, 998, 387, 400,
	401, 411, 38, 547, 506, 0, 512, 514, 0, 549,
	550, 551, 552, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 579, 580, 581, 582, 658, 659,
	660, 661, 662, 663, 664, 665, 516, 517, 655, 0,
	765, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	646, 0, 616, 616, 616, 616, 616, 616, 616, 616,
	0, 0, 0, 0, 0, 0, 0, -2, -2, 1158,
	0, 410, 673, 49, 0, 412, 417, 418, 716, 0,
	0, 673, 1157, 0, 0, -2, -2, 428, 434, 435,
	436, 437, 413, 0, 440, 444, 0, 0, 0, 789,
	0, 0, 70, 0, 1129, 769, -2, -2, 0, 0,
	814, 815, -2, 961, -2, 820, 821, 822, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 869, 870, 871, 872, 873, 874,
	875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
	885, 886, 887, 888, 889, 890, 891, 892, 893, 894,
	895, 896, 897, 898, 899, 900, 901, 902, 903, 904,
	905, 906, 907, 908, 909, 910, 911, 912, 913, 914,
	915, 916, 917, 918, 919, 920, 921, 922, 923, 924,
	925, 926, 927, 928, 929, 930, 931, 932, 933, 934,
	935, 936, 937, 938, 939, 940, 941, 942, 943, 944,
	0, 0, 120, 121, 0, 0, 242, 963, 118, 0,
	236, 177, 710, 0, 0, 0, 0, 90, 110, 111,
	0, 219, 0, 701, 0, 0, 0, 0, 0, 0,
	-2, 0, 307, 0, 0, 0, 0, 0, 0, 314,
	0, 316, 1159, 361, 319, 0, 0, 1159, 1159, 1159,
	0, 1159, 1159, 326, 0, 327, 328, 329, 0, 227,
	228, 229, 333, 1160, 1161, 1159, 1159, 358, 0, 358,
	356, 357, 348, 349, 0, 364, 342, 343, 346, 347,
	378, 381, 398, 396, 397, 399, 391, 392, 393, 394,
	0, 0, 0, 0, 0, 0, 510, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 534, 535, 536, 537,
	538, 539, 540, 513, 0, 527, 0, 0, 0, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 0, 425,
	0, 0, 0, 673, 0, 0, 0, 0, 0, 0,
	0, 422, 0, 647, 0, 600, 608, 0, 601, 609,
	602, 610, 603, 0, 604, 611, 605, 612, 606, 607,
	613, 0, 0, 0, 425, 425, 0, 0, 39, 402,
	403, 0, 479, 681, 0, 427, 719, 0, 0, 682,
	674, 675, 678, 681, 0, 449, 438, 429, 432, 433,
	415, 0, 441, 445, 0, 447, 448, 0, 0, 68,
	0, 495, 0, 451, 453, 454, 455, 477, 0, 0,
	0, 0, 64, 66, 496, 0, 1129, 775, 0, 72,
	73, 0, 0, 0, 200, 779, 780, 781, 777, 262,
	0, 0, 188, 184, 128, 129, 130, 177, 132, 177,
	177, 177, 177, 197, 197, 197, 197, 160, 161, 162,
	163, 164, 0, 0, 147, 177, 177, 177, 177, 167,
	168, 169, 170, 171, 172, 173, 174, 133, 134, 135,
	136, 137, 138, 139, 140, 141, 179, 179, 179, 181,
	181, 0, 0, 211, 0, 678, 0, 701, 99, 0,
	809, 101, 219, 0, 220, 1158, 0, 0, 800, 277,
	790, 791, 792, 793, 794, 795, 796, 797, 798, 799,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	698, 699, 700, 0, 0, 0, 256, 785, 0, 256,
	62, 313, 497, 818, 819, 317, 318, 362, 363, 320,
	321, 322, 323, 324, 325, 365, 0, 230, 231, 334,
	338, 361, 0, 0, 0, 361, 340, 341, 0, 0,
	379, 383, 384, 385, 386, 548, 507, 508, 509, 511,
	528, 0, 530, 532, 518, 519, 543, 544, 545, 0,
	0, 0, 0, 541, 523, 0, 554, 555, 556, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 568, 631,
	632, 0, 566, 567, 578, 0, 0, 0, 426, 656,
	0, -2, 0, 546, 764, 681, 0, 0, 0, 0,
	551, 658, 0, 551, 658, 0, 0, 0, 423, 424,
	653, 650, 0, 0, 655, 0, 617, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 405, 406, 408, 0,
	499, 1067, 480, 0, 482, 483, 716, 50, 40, 0,
	717, 0, 0, 0, 0, 677, 679, 680, 716, 0,
	666, 0, 0, 504, 0, 0, 430, 46, 446, 442,
	0, 504, 0, 0, 494, 0, 0, 0, 0, 0,
	0, 484, 0, 0, 487, 0, 0, 0, 0, 478,
	0, 0, 0, -2, 0, 0, 0, 60, 61, 0,
	0, 0, 770, 71, 0, 0, 76, 77, 771, 772,
	773, 774, 0, 105, 263, 265, 268, 269, 270, 122,
	124, 125, 0, 0, 240, 1077, 1111, 999, 234, 234,
	997, 247, 232, 233, 119, 191, 189, 0, 186, 185,
	131, 197, 197, 154, 155, 200, 0, 200, 200, 200,
	0, 0, 148, 149, 150, 151, 142, 0, 143, 144,
	145, 0, 146, 241, 0, 0, 685, 212, 213, 215,
	219, 0, 0, 0, 237, 238, 0, 0, 787, 0,
	810, 0, 116, 117, 271, 1158, 288, 289, 290, 291,
	292, 293, 294, 295, 296, 297, 298, 299, 300, 301,
	1158, 0, 1158, 801, 802, 803, 804, 0, 0, 0,
	711, 712, 0, 715, 91, 281, 283, 282, 286, 0,
	0, 0, 0, 308, 310, 257, 258, 1159, 0, 312,
	358, 335, 359, 360, 358, 337, 344, 375, 529, 531,
	533, 520, 541, 524, 0, 521, 0, 0, 515, 583,
	0, 0, 425, 0, 673, 716, 587, 588, 0, 0,
	0, 0, 0, 624, 0, 0, 625, 0, 673, 0,
	651, 0, 0, 599, 0, 618, 0, 0, 619, 620,
	621, 622, 623, 404, 407, 409, 459, 0, 0, 0,
	0, 481, 42, 0, 0, 0, 683, 684, 676, 41,
	0, 782, 783, 667, 668, 669, 0, 439, 450, 431,
	0, 681, 758, 0, 0, 750, 0, 0, 504, 766,
	0, 452, 473, 475, 0, 470, 485, 486, 488, 0,
	490, 0, 492, 493, 456, 457, 458, 0, 504, 0,
	504, 65, 504, 67, 0, 498, 74, 75, 0, 0,
	81, 201, 202, 0, 266, 0, 123, 0, 0, 221,
	234, 234, 234, 225, 235, 226, 0, 193, 0, 190,
	127, 187, 200, 200, 156, 0, 157, 158, 159, 0,
	175, 0, 0, 0, 259, 86, 689, 688, 219, 219,
	214, 0, 217, 0, 811, 178, 0, 0, 114, 115,
	272, 273, 274, 275, 0, 461, 702, 703, 704, 0,
	714, 94, 0, 0, 0, 0, 279, 0, 311, 63,
	361, 361, 522, 0, 542, 525, 584, 585, 0, 657,
	681, 44, 0, 177, 177, 636, 177, 181, 639, 177,
	641, 177, 644, 0, 0, 0, 0, 0, 0, 0,
	648, 598, 654, 0, 656, 0, 0, 0, 0, 0,
	0, 465, 0, 197, 721, 718, 43, 671, 0, 505,
	443, 47, 51, 0, 758, 749, 760, 762, 0, 0,
	0, 754, 0, 673, 0, 0, 467, 474, 0, 0,
	468, 0, 469, 489, 491, -2, 673, 504, 58, 59,
	0, 78, 79, 80, 264, 267, 0, 239, 0, 222,
	223, 224, 0, 195, 0, 192, 152, 153, 198, 199,
	197, 0, 197, 0, 182, 0, 248, 260, 0, 686,
	687, 0, 0, 216, 218, 461, 100, 0, 0, 0,
	713, 280, 0, 92, 93, 0, 0, 285, 309, 331,
	336, 526, 586, 716, 589, 633, 197, 637, 638, 640,
	642, 643, 645, 591, 590, 0, 0, 0, 0, 0,
	681, 0, 652, 0, 0, 0, 0, 0, 479, 0,
	197, 741, 48, 0, 0, 0, 52, 0, 763, 0,
	0, 0, 0, 69, 681, 767, 768, 471, 0, 476,
	681, 57, 211, 0, 463, 203, 196, 0, 200, 176,
	200, 0, 0, 261, 690, 691, 692, 693, 694, 695,
	696, 0, 0, 0, 0, 95, 96, 0, 0, 0,
	45, 634, 635, 0, 0, 0, 0, 626, 0, 649,
	0, 0, 0, 501, 0, 0, 499, 466, 723, 722,
	735, 739, 672, 670, 0, 761, 0, 753, 756, 752,
	755, 55, 0, 56, 210, 0, 0, 208, 0, 205,
	207, 194, 165, 166, 180, 183, 0, 0, 303, 0,
	705, 462, 0, 0, 0, 287, 592, 594, 593, 595,
	0, 0, 0, 597, 614, 615, 500, 502, 503, 460,
	741, 0, 734, 737, -2, 0, 0, 751, 0, 472,
	0, 464, 126, 0, 204, 206, 705, 302, 0, 0,
	276, 707, 97, 98, 91, 596, 0, 0, 0, 728,
	726, 726, 739, 0, 743, 0, 748, 0, 759, 757,
	0, 209, 87, 304, 0, 0, 708, 709, 94, 627,
	0, 630, 731, 0, 724, 727, 725, 736, 0, 742,
	0, 0, 740, 0, 0, 0, 284, 628, 720, 0,
	729, 730, 738, 0, 0, 0, 0, 706, 0, 732,
	733, 744, 746, 243, 0, 0, 244, 245, 0, 0,
	0, 629, 246, 0, 0, 0, 305, 306, 249, 251,
	252, 0, 0, 250, 253, 254, 255,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 407,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:388
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:393
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:394
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:398
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 32:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:429
		{
			setParseTree(yylex, nil)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:435
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:439
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:443
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 36:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:448
		{
			yyVAL.colIdent = NewColIdentWithAt("", NoAt)
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:452
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:458
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 39:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:464
		{
			yyVAL.statement = &Load{}
		}
	case 40:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:470
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:479
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 42:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:483
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:487
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:510
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:518
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 46:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:524
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:530
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:538
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:544
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:548
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 51:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:555
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 52:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:567
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:579
		{
			yyVAL.insertAction = InsertAct
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:583
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 55:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:589
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 56:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:595
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:599
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 58:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:603
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 59:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:607
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:612
		{
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:613
		{
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:617
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName.ToViewName()}
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:621
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName.ToViewName())
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:627
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:631
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:637
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:641
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 68:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:646
		{
			yyVAL.partitions = nil
		}
	case 69:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:650
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 70:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:656
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 71:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:662
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 72:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:666
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:672
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:676
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:682
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:686
		{
			yyVAL.characteristic = ReadWrite
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:690
		{
			yyVAL.characteristic = ReadOnly
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:696
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:700
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:704
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:708
		{
			yyVAL.isolationLevel = Serializable
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:714
		{
			yyVAL.scope = SessionScope
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:718
		{
			yyVAL.scope = GlobalScope
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyDollar[1].createTable.TableSpec = yyDollar[2].TableSpec
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:730
		{
			// Create table [name] like [name]
			yyDollar[1].createTable.OptLike = yyDollar[2].optLike
			yyDollar[1].createTable.FullyParsed = true
			yyVAL.statement = yyDollar[1].createTable
		}
	case 86:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:737
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[5].indexOptions...)
			yyDollar[1].createIndex.Options = append(yyDollar[1].createIndex.Options, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:745
		{
			yyVAL.statement = &CreateView{ViewName: yyDollar[7].tableName.ToViewName(), IsReplace: yyDollar[2].boolean, Algorithm: yyDollar[3].str, Definer: yyDollar[4].str, Security: yyDollar[5].str, Columns: yyDollar[8].columns, Select: yyDollar[10].selStmt, CheckOption: yyDollar[11].str}
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:749
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:756
		{
			yyVAL.boolean = false
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:760
		{
			yyVAL.boolean = true
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:765
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 92:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:769
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:775
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 94:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:780
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 95:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:785
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:791
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 97:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:796
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:802
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:808
		{
			yyVAL.createTable = &CreateTable{Table: yyDollar[4].tableName, IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createTable)
		}
	case 100:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:815
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[2].str, Name: yyDollar[4].colIdent, Options: yyDollar[5].indexOptions, Table: yyDollar[7].tableName}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 101:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:822
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:829
		{
			yyVAL.alterDatabase = &AlterDatabase{}
			setDDL(yylex, yyVAL.alterDatabase)
		}
	case 105:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:840
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:846
		{
			yyVAL.collateAndCharsets = nil
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:850
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:856
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:860
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:864
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:868
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 112:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:873
		{
			yyVAL.boolean = false
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:877
		{
			yyVAL.boolean = true
		}
	case 114:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:883
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:887
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 116:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:893
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:897
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 118:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:904
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:908
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 120:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:914
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 121:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:919
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:924
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:928
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:933
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 125:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:937
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 126:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:943
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:954
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:965
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:970
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:976
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 135:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:988
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 137:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:992
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1000
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1014
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1038
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 147:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1046
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 148:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1050
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 149:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1054
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 150:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1058
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1062
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1088
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 158:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1092
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1096
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1100
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1104
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1108
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1112
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1116
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1120
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 166:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1125
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1131
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1135
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1139
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1143
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1147
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1151
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1155
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1159
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1165
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1170
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 177:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1175
		{
			yyVAL.literal = nil
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1179
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 179:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1184
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1188
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 181:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1196
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1200
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 183:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1206
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 184:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1214
		{
			yyVAL.boolean = false
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1218
		{
			yyVAL.boolean = true
		}
	case 186:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1223
		{
			yyVAL.boolean = false
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1227
		{
			yyVAL.boolean = true
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1233
		{
			yyVAL.boolean = false
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1237
		{
			yyVAL.boolean = false
		}
	case 190:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1241
		{
			yyVAL.boolean = true
		}
	case 191:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1246
		{
			yyVAL.optVal = nil
		}
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1250
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 193:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1255
		{
			yyVAL.optVal = nil
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1259
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1264
		{
			yyVAL.boolean = false
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1268
		{
			yyVAL.boolean = true
		}
	case 197:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1273
		{
			yyVAL.str = ""
		}
	case 198:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1277
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1281
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1286
		{
			yyVAL.str = ""
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1290
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1294
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1299
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1307
		{
			yyVAL.colKeyOpt = colKey
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1311
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1315
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 208:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1320
		{
			yyVAL.literal = nil
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1324
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 210:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1330
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1335
		{
			yyVAL.indexOptions = nil
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1339
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1345
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1349
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1355
		{
			yyVAL.indexOption = yyDollar[1].indexOption
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1364
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 218:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1368
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), String: yyDollar[3].colIdent.String()}
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1374
		{
			yyVAL.str = ""
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1378
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1384
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1388
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 223:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1392
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 224:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1396
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1400
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1404
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1410
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1414
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1418
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1425
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1429
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1435
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1439
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 234:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1444
		{
			yyVAL.str = ""
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1448
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1458
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1464
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1470
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1474
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1480
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1484
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 243:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1490
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 244:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1494
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 245:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1498
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 246:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1502
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1506
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 248:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1512
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1518
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 250:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1524
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1530
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1534
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1538
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1542
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1546
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 256:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1551
		{
			yyVAL.str = ""
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1555
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1559
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 259:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1564
		{
			yyVAL.boolean = true
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1568
		{
			yyVAL.boolean = true
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1572
		{
			yyVAL.boolean = false
		}
	case 262:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1577
		{
			yyVAL.str = ""
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1581
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1585
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1593
		{
			yyVAL.str = yyDollar[1].str
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1597
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1601
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1607
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1611
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1615
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1621
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1625
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 273:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1629
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 274:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1633
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[3].tableName}, ToTables: TableNames{yyDollar[6].tableName}}
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1638
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1643
		{
			yyVAL.statement = &AlterView{ViewName: yyDollar[6].tableName.ToViewName(), Algorithm: yyDollar[2].str, Definer: yyDollar[3].str, Security: yyDollar[4].str, Columns: yyDollar[7].columns, Select: yyDollar[9].selStmt, CheckOption: yyDollar[10].str}
		}
	case 277:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1647
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName, PartitionSpec: yyDollar[4].partSpec}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1651
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.AlterOptions = yyDollar[3].collateAndCharsets
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1658
		{
			yyDollar[1].alterDatabase.FullyParsed = true
			yyDollar[1].alterDatabase.DBName = yyDollar[2].colIdent.String()
			yyDollar[1].alterDatabase.UpdateDataDirectory = true
			yyVAL.statement = yyDollar[1].alterDatabase
		}
	case 280:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1665
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 281:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1677
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1687
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 283:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1691
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 284:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1695
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 285:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1708
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1718
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 287:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1722
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 302:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1751
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1761
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 305:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1767
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 306:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1771
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1783
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 309:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1787
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 310:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1795
		{
			yyVAL.statement = &DropTable{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 311:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1799
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 312:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1804
		{
			yyVAL.statement = &DropView{FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1808
		{
			yyVAL.statement = &DropDatabase{DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 314:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1814
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1818
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1823
		{
			yyVAL.statement = &OtherRead{}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1829
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1834
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1839
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1844
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1849
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1853
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1857
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1861
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 325:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1865
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1869
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1874
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1879
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1884
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1889
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 331:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1893
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1898
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1902
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1906
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1910
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 336:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1914
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 337:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1918
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 338:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1928
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1932
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1936
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 341:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1940
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1945
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1949
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 344:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1953
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1957
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1962
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1976
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1982
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1986
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1992
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1996
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2002
		{
			yyVAL.str = ""
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.str = "extended "
		}
	case 354:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2012
		{
			yyVAL.str = ""
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.str = "full "
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2026
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2032
		{
			yyVAL.str = ""
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2036
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 361:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2046
		{
			yyVAL.showFilter = nil
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2050
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2054
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 364:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2060
		{
			yyVAL.showFilter = nil
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2064
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2070
		{
			yyVAL.scope = ImplicitScope
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2074
		{
			yyVAL.scope = SessionScope
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2078
		{
			yyVAL.scope = GlobalScope
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2084
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2088
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2094
		{
			yyVAL.statement = &Begin{}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2098
		{
			yyVAL.statement = &Begin{}
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.statement = &Commit{}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = &Rollback{}
		}
	case 375:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2119
		{
			yyVAL.empty = struct{}{}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2121
		{
			yyVAL.empty = struct{}{}
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2124
		{
			yyVAL.empty = struct{}{}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2126
		{
			yyVAL.empty = struct{}{}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2131
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2137
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 382:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2142
		{
			yyVAL.explainType = EmptyType
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2146
		{
			yyVAL.explainType = JSONType
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2150
		{
			yyVAL.explainType = TreeType
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2154
		{
			yyVAL.explainType = VitessType
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2158
		{
			yyVAL.explainType = TraditionalType
		}
	case 387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2162
		{
			yyVAL.explainType = AnalyzeType
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2168
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2172
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2176
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2182
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 392:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2186
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2190
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2194
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 395:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2199
		{
			yyVAL.str = ""
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2203
		{
			yyVAL.str = ""
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2207
		{
			yyVAL.str = ""
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2213
		{
			yyVAL.statement = &OtherRead{}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2217
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2223
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 401:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2227
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2233
		{
			yyVAL.statement = &LockTables{Tables: yyDollar[3].tableAndLockTypes}
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2239
		{
			yyVAL.tableAndLockTypes = TableAndLockTypes{yyDollar[1].tableAndLockType}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2243
		{
			yyVAL.tableAndLockTypes = append(yyDollar[1].tableAndLockTypes, yyDollar[3].tableAndLockType)
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{
			yyVAL.tableAndLockType = &TableAndLockType{Table: yyDollar[1].aliasedTableName, Lock: yyDollar[2].lockType}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2255
		{
			yyVAL.lockType = Read
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.lockType = ReadLocal
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.lockType = Write
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2267
		{
			yyVAL.lockType = LowPriorityWrite
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2273
		{
			yyVAL.statement = &UnlockTables{}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2279
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2283
		{
			setAllowComments(yylex, true)
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2287
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2293
		{
			yyVAL.bytes2 = nil
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2297
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2303
		{
			yyVAL.boolean = true
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2307
		{
			yyVAL.boolean = false
		}
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2311
		{
			yyVAL.boolean = true
		}
	case 419:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2316
		{
			yyVAL.str = ""
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2324
		{
			yyVAL.str = SQLCacheStr
		}
	case 422:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2329
		{
			yyVAL.boolean = false
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2333
		{
			yyVAL.boolean = true
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2337
		{
			yyVAL.boolean = true
		}
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2342
		{
			yyVAL.selectExprs = nil
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 427:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2351
		{
			yyVAL.strs = nil
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2355
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2359
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2363
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2367
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2373
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2377
		{
			yyVAL.str = SQLCacheStr
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2381
		{
			yyVAL.str = DistinctStr
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2385
		{
			yyVAL.str = DistinctStr
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = StraightJoinHint
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2403
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2409
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 441:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2413
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 442:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2417
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 443:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2421
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2426
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2430
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 446:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2434
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2441
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2446
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 450:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2450
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2456
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 452:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2460
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2470
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2474
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].derivedTable, As: yyDollar[3].tableIdent}
		}
	case 457:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2478
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 458:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2484
		{
			yyVAL.derivedTable = &DerivedTable{yyDollar[2].selStmt}
		}
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2490
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 460:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2494
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2499
		{
			yyVAL.columns = nil
		}
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2503
		{
			yyVAL.columns = yyDollar[2].columns
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2509
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2513
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2519
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2523
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2536
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2540
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2544
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2548
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2554
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2556
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2560
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2562
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2566
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2568
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2571
		{
			yyVAL.empty = struct{}{}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2573
		{
			yyVAL.empty = struct{}{}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2576
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2580
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2584
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2591
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2597
		{
			yyVAL.joinType = NormalJoinType
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2601
		{
			yyVAL.joinType = NormalJoinType
		}
	case 486:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2605
		{
			yyVAL.joinType = NormalJoinType
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2611
		{
			yyVAL.joinType = StraightJoinType
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2617
		{
			yyVAL.joinType = LeftJoinType
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2621
		{
			yyVAL.joinType = LeftJoinType
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2625
		{
			yyVAL.joinType = RightJoinType
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2629
		{
			yyVAL.joinType = RightJoinType
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2635
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2639
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2649
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2653
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2659
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2663
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2669
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2674
		{
			yyVAL.indexHints = nil
		}
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2678
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2682
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2686
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 503:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2690
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2695
		{
			yyVAL.expr = nil
		}
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2699
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2705
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 507:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2709
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 508:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2713
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 509:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2717
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 510:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2721
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 511:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2725
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2729
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2733
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2739
		{
			yyVAL.str = ""
		}
	case 515:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2743
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2749
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2753
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2759
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2763
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 520:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2767
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 521:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2771
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 522:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2775
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2779
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 524:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2783
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2787
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 526:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2791
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 527:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2795
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2801
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 529:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2805
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2809
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 531:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2813
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2817
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2821
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 534:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2827
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2831
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2835
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 537:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2839
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2843
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2847
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 540:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2851
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 541:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2856
		{
			yyVAL.expr = nil
		}
	case 542:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2860
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2866
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 544:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2870
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2874
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2880
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 547:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2886
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2890
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 549:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2896
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 550:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2900
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 551:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2904
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 552:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2908
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2912
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2916
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2920
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 556:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2924
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2928
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2932
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2936
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2940
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 561:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2944
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2948
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2952
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 564:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2956
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 565:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2960
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2964
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 567:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2968
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 568:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2972
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2976
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2980
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 571:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2984
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2988
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2992
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 574:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2996
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 575:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3004
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 576:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 577:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3022
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 578:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3026
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3044
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3048
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 586:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3056
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3066
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 588:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3070
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3074
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 590:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3078
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 591:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:3082
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 592:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3086
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3090
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3094
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3098
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 596:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3102
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 597:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3106
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3110
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3114
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 600:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3124
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3128
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3132
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 603:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3137
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 604:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3142
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 605:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3147
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 606:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3153
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 607:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3158
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3163
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 609:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3167
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 610:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3171
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3176
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 612:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3181
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3186
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 614:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3190
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 615:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3194
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 618:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3204
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 619:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3214
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 620:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3218
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3222
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 622:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3226
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 623:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3230
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 624:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3234
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3238
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3244
		{
			yyVAL.matchExprOption = NoOption
		}
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3248
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 628:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3252
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 629:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3256
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 631:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3266
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 633:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3276
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3280
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3284
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 636:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3288
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 637:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3292
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 638:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3296
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3302
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 640:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3306
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3310
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 642:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3314
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 643:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3318
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3322
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 645:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3326
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 646:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = nil
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3340
		{
			yyVAL.str = string("")
		}
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3344
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 650:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 651:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3354
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 652:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3360
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3365
		{
			yyVAL.expr = nil
		}
	case 654:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3369
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3375
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3379
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 657:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3383
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 658:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3389
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3393
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3397
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 661:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3401
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 662:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3405
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3409
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 664:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3413
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3417
		{
			yyVAL.expr = &NullVal{}
		}
	case 666:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3423
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3432
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 668:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3436
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 669:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3441
		{
			yyVAL.exprs = nil
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3445
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 671:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3450
		{
			yyVAL.expr = nil
		}
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3454
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 673:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3459
		{
			yyVAL.orderBy = nil
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3463
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 675:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3469
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3473
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 677:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3479
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 678:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3484
		{
			yyVAL.orderDirection = AscOrder
		}
	case 679:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3488
		{
			yyVAL.orderDirection = AscOrder
		}
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3492
		{
			yyVAL.orderDirection = DescOrder
		}
	case 681:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3497
		{
			yyVAL.limit = nil
		}
	case 682:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3501
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3505
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3509
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 685:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.indexOptions = nil
		}
	case 686:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3518
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 687:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3522
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3526
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3530
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3541
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3545
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 693:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3549
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 695:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3559
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 696:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3563
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 697:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3568
		{
			yyVAL.str = ""
		}
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3572
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3576
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3580
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 701:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3585
		{
			yyVAL.str = ""
		}
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3589
		{
			yyVAL.str = yyDollar[3].str
		}
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3595
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 704:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3599
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 705:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3604
		{
			yyVAL.str = ""
		}
	case 706:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3608
		{
			yyVAL.str = yyDollar[2].str
		}
	case 707:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3613
		{
			yyVAL.str = "cascaded"
		}
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3617
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3621
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 710:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3626
		{
			yyVAL.str = ""
		}
	case 711:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.str = yyDollar[3].str
		}
	case 712:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3636
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 713:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3640
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 714:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3644
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'@" + string(yyDollar[2].bytes)
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3648
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 716:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3653
		{
			yyVAL.lock = NoLock
		}
	case 717:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3657
		{
			yyVAL.lock = ForUpdateLock
		}
	case 718:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3661
		{
			yyVAL.lock = ShareModeLock
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3666
		{
			yyVAL.selectInto = nil
		}
	case 720:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3670
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3674
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 722:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3678
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 723:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3683
		{
			yyVAL.str = ""
		}
	case 724:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3687
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3691
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 726:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3696
		{
			yyVAL.str = ""
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3700
		{
			yyVAL.str = " header"
		}
	case 728:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3705
		{
			yyVAL.str = ""
		}
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3709
		{
			yyVAL.str = " manifest on"
		}
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3713
		{
			yyVAL.str = " manifest off"
		}
	case 731:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3718
		{
			yyVAL.str = ""
		}
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3722
		{
			yyVAL.str = " overwrite on"
		}
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3726
		{
			yyVAL.str = " overwrite off"
		}
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3732
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 735:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3737
		{
			yyVAL.str = ""
		}
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3741
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 737:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3746
		{
			yyVAL.str = ""
		}
	case 738:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3750
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3755
		{
			yyVAL.str = ""
		}
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3759
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 741:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3764
		{
			yyVAL.str = ""
		}
	case 742:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3768
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 743:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3773
		{
			yyVAL.str = ""
		}
	case 744:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3777
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3782
		{
			yyVAL.str = ""
		}
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3786
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3791
		{
			yyVAL.str = ""
		}
	case 748:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.str = " optionally"
		}
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3808
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3812
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 751:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3816
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 752:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3820
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 753:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3824
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3830
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 755:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3834
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 756:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3838
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 757:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3842
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3847
		{
			yyVAL.updateExprs = nil
		}
	case 759:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3851
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3857
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 761:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3861
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 762:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3867
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3871
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 764:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3877
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3883
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3893
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3897
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 768:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3903
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3909
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 770:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3913
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3919
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 772:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3923
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3927
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 774:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3931
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 775:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3935
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 777:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3943
		{
			yyVAL.bytes = []byte("charset")
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3950
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3954
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3958
		{
			yyVAL.expr = &Default{}
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3967
		{
			yyVAL.boolean = false
		}
	case 785:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3969
		{
			yyVAL.boolean = true
		}
	case 786:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3972
		{
			yyVAL.boolean = false
		}
	case 787:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3974
		{
			yyVAL.boolean = true
		}
	case 788:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3977
		{
			yyVAL.ignore = false
		}
	case 789:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3979
		{
			yyVAL.ignore = true
		}
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3983
		{
			yyVAL.empty = struct{}{}
		}
	case 791:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3985
		{
			yyVAL.empty = struct{}{}
		}
	case 792:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3987
		{
			yyVAL.empty = struct{}{}
		}
	case 793:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3989
		{
			yyVAL.empty = struct{}{}
		}
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3991
		{
			yyVAL.empty = struct{}{}
		}
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3993
		{
			yyVAL.empty = struct{}{}
		}
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3995
		{
			yyVAL.empty = struct{}{}
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3997
		{
			yyVAL.empty = struct{}{}
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3999
		{
			yyVAL.empty = struct{}{}
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4001
		{
			yyVAL.empty = struct{}{}
		}
	case 800:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4005
		{
			yyVAL.empty = struct{}{}
		}
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4007
		{
			yyVAL.empty = struct{}{}
		}
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4009
		{
			yyVAL.empty = struct{}{}
		}
	case 803:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4013
		{
			yyVAL.empty = struct{}{}
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4015
		{
			yyVAL.empty = struct{}{}
		}
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4018
		{
			yyVAL.str = ""
		}
	case 806:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4020
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 807:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4022
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 808:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4024
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4027
		{
			yyVAL.indexOptions = nil
		}
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4029
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 811:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4033
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4039
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 813:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4043
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4050
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4056
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4060
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 819:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4067
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4428
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4437
		{
			decNesting(yylex)
		}
	case 1158:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4442
		{
			skipToEnd(yylex)
		}
	case 1159:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4447
		{
			skipToEnd(yylex)
		}
	case 1160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4451
		{
			skipToEnd(yylex)
		}
	case 1161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4455
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
