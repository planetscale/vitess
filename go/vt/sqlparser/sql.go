// Code generated by goyacc -o sql.go sql.y. DO NOT EDIT.

//line sql.y:18
package sqlparser

import __yyfmt__ "fmt"

//line sql.y:18

func setParseTree(yylex interface{}, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex interface{}, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex interface{}, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

func incNesting(yylex interface{}) bool {
	yylex.(*Tokenizer).nesting++
	if yylex.(*Tokenizer).nesting == 200 {
		return true
	}
	return false
}

func decNesting(yylex interface{}) {
	yylex.(*Tokenizer).nesting--
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex interface{}) {
	yylex.(*Tokenizer).SkipToEnd = true
}

//line sql.y:53
type yySymType struct {
	yys                    int
	empty                  struct{}
	statement              Statement
	selStmt                SelectStatement
	ddl                    *DDL
	ins                    *Insert
	byt                    byte
	bytes                  []byte
	bytes2                 [][]byte
	str                    string
	strs                   []string
	selectExprs            SelectExprs
	selectExpr             SelectExpr
	columns                Columns
	partitions             Partitions
	colName                *ColName
	tableExprs             TableExprs
	tableExpr              TableExpr
	joinCondition          JoinCondition
	tableName              TableName
	tableNames             TableNames
	indexHints             *IndexHints
	expr                   Expr
	exprs                  Exprs
	boolVal                BoolVal
	boolean                bool
	literal                *Literal
	colTuple               ColTuple
	values                 Values
	valTuple               ValTuple
	subquery               *Subquery
	whens                  []*When
	when                   *When
	orderBy                OrderBy
	order                  *Order
	limit                  *Limit
	updateExprs            UpdateExprs
	setExprs               SetExprs
	updateExpr             *UpdateExpr
	setExpr                *SetExpr
	characteristic         Characteristic
	characteristics        []Characteristic
	colIdent               ColIdent
	tableIdent             TableIdent
	convertType            *ConvertType
	aliasedTableName       *AliasedTableExpr
	TableSpec              *TableSpec
	columnType             ColumnType
	colKeyOpt              ColumnKeyOption
	optVal                 Expr
	LengthScaleOption      LengthScaleOption
	OnlineDDLHint          *OnlineDDLHint
	columnDefinition       *ColumnDefinition
	indexDefinition        *IndexDefinition
	indexInfo              *IndexInfo
	indexOption            *IndexOption
	indexOptions           []*IndexOption
	indexColumn            *IndexColumn
	indexColumns           []*IndexColumn
	constraintDefinition   *ConstraintDefinition
	constraintInfo         ConstraintInfo
	ReferenceAction        ReferenceAction
	partDefs               []*PartitionDefinition
	partDef                *PartitionDefinition
	partSpec               *PartitionSpec
	vindexParam            VindexParam
	vindexParams           []VindexParam
	showFilter             *ShowFilter
	optLike                *OptLike
	isolationLevel         IsolationLevel
	insertAction           InsertAction
	scope                  Scope
	ignore                 Ignore
	lock                   Lock
	joinType               JoinType
	comparisonExprOperator ComparisonExprOperator
	isExprOperator         IsExprOperator
	matchExprOption        MatchExprOption
	orderDirection         OrderDirection
	explainType            ExplainType
	selectInto             *SelectInto
	createIndex            *CreateIndex
	createDatabase         *CreateDatabase
	collateAndCharset      CollateAndCharset
	collateAndCharsets     []CollateAndCharset
}

const LEX_ERROR = 57346
const UNION = 57347
const SELECT = 57348
const STREAM = 57349
const VSTREAM = 57350
const INSERT = 57351
const UPDATE = 57352
const DELETE = 57353
const FROM = 57354
const WHERE = 57355
const GROUP = 57356
const HAVING = 57357
const ORDER = 57358
const BY = 57359
const LIMIT = 57360
const OFFSET = 57361
const FOR = 57362
const ALL = 57363
const DISTINCT = 57364
const AS = 57365
const EXISTS = 57366
const ASC = 57367
const DESC = 57368
const INTO = 57369
const DUPLICATE = 57370
const KEY = 57371
const DEFAULT = 57372
const SET = 57373
const LOCK = 57374
const UNLOCK = 57375
const KEYS = 57376
const DO = 57377
const DISTINCTROW = 57378
const PARSER = 57379
const OUTFILE = 57380
const S3 = 57381
const DATA = 57382
const LOAD = 57383
const LINES = 57384
const TERMINATED = 57385
const ESCAPED = 57386
const ENCLOSED = 57387
const DUMPFILE = 57388
const CSV = 57389
const HEADER = 57390
const MANIFEST = 57391
const OVERWRITE = 57392
const STARTING = 57393
const OPTIONALLY = 57394
const VALUES = 57395
const LAST_INSERT_ID = 57396
const NEXT = 57397
const VALUE = 57398
const SHARE = 57399
const MODE = 57400
const SQL_NO_CACHE = 57401
const SQL_CACHE = 57402
const SQL_CALC_FOUND_ROWS = 57403
const JOIN = 57404
const STRAIGHT_JOIN = 57405
const LEFT = 57406
const RIGHT = 57407
const INNER = 57408
const OUTER = 57409
const CROSS = 57410
const NATURAL = 57411
const USE = 57412
const FORCE = 57413
const ON = 57414
const USING = 57415
const INPLACE = 57416
const COPY = 57417
const ALGORITHM = 57418
const NONE = 57419
const SHARED = 57420
const EXCLUSIVE = 57421
const ID = 57422
const AT_ID = 57423
const AT_AT_ID = 57424
const HEX = 57425
const STRING = 57426
const INTEGRAL = 57427
const FLOAT = 57428
const HEXNUM = 57429
const VALUE_ARG = 57430
const LIST_ARG = 57431
const COMMENT = 57432
const COMMENT_KEYWORD = 57433
const BIT_LITERAL = 57434
const NULL = 57435
const TRUE = 57436
const FALSE = 57437
const OFF = 57438
const OR = 57439
const XOR = 57440
const AND = 57441
const NOT = 57442
const BETWEEN = 57443
const CASE = 57444
const WHEN = 57445
const THEN = 57446
const ELSE = 57447
const END = 57448
const LE = 57449
const GE = 57450
const NE = 57451
const NULL_SAFE_EQUAL = 57452
const IS = 57453
const LIKE = 57454
const REGEXP = 57455
const IN = 57456
const SHIFT_LEFT = 57457
const SHIFT_RIGHT = 57458
const DIV = 57459
const MOD = 57460
const UNARY = 57461
const COLLATE = 57462
const BINARY = 57463
const UNDERSCORE_BINARY = 57464
const UNDERSCORE_UTF8MB4 = 57465
const UNDERSCORE_UTF8 = 57466
const UNDERSCORE_LATIN1 = 57467
const INTERVAL = 57468
const JSON_EXTRACT_OP = 57469
const JSON_UNQUOTE_EXTRACT_OP = 57470
const CREATE = 57471
const ALTER = 57472
const DROP = 57473
const RENAME = 57474
const ANALYZE = 57475
const ADD = 57476
const FLUSH = 57477
const SCHEMA = 57478
const TABLE = 57479
const INDEX = 57480
const VIEW = 57481
const TO = 57482
const IGNORE = 57483
const IF = 57484
const UNIQUE = 57485
const PRIMARY = 57486
const COLUMN = 57487
const SPATIAL = 57488
const FULLTEXT = 57489
const KEY_BLOCK_SIZE = 57490
const CHECK = 57491
const INDEXES = 57492
const ACTION = 57493
const CASCADE = 57494
const CONSTRAINT = 57495
const FOREIGN = 57496
const NO = 57497
const REFERENCES = 57498
const RESTRICT = 57499
const SHOW = 57500
const DESCRIBE = 57501
const EXPLAIN = 57502
const DATE = 57503
const ESCAPE = 57504
const REPAIR = 57505
const OPTIMIZE = 57506
const TRUNCATE = 57507
const MAXVALUE = 57508
const PARTITION = 57509
const REORGANIZE = 57510
const LESS = 57511
const THAN = 57512
const PROCEDURE = 57513
const TRIGGER = 57514
const VINDEX = 57515
const VINDEXES = 57516
const STATUS = 57517
const VARIABLES = 57518
const WARNINGS = 57519
const SEQUENCE = 57520
const BEGIN = 57521
const START = 57522
const TRANSACTION = 57523
const COMMIT = 57524
const ROLLBACK = 57525
const SAVEPOINT = 57526
const RELEASE = 57527
const WORK = 57528
const BIT = 57529
const TINYINT = 57530
const SMALLINT = 57531
const MEDIUMINT = 57532
const INT = 57533
const INTEGER = 57534
const BIGINT = 57535
const INTNUM = 57536
const REAL = 57537
const DOUBLE = 57538
const FLOAT_TYPE = 57539
const DECIMAL = 57540
const NUMERIC = 57541
const TIME = 57542
const TIMESTAMP = 57543
const DATETIME = 57544
const YEAR = 57545
const CHAR = 57546
const VARCHAR = 57547
const BOOL = 57548
const CHARACTER = 57549
const VARBINARY = 57550
const NCHAR = 57551
const TEXT = 57552
const TINYTEXT = 57553
const MEDIUMTEXT = 57554
const LONGTEXT = 57555
const BLOB = 57556
const TINYBLOB = 57557
const MEDIUMBLOB = 57558
const LONGBLOB = 57559
const JSON = 57560
const ENUM = 57561
const GEOMETRY = 57562
const POINT = 57563
const LINESTRING = 57564
const POLYGON = 57565
const GEOMETRYCOLLECTION = 57566
const MULTIPOINT = 57567
const MULTILINESTRING = 57568
const MULTIPOLYGON = 57569
const NULLX = 57570
const AUTO_INCREMENT = 57571
const APPROXNUM = 57572
const SIGNED = 57573
const UNSIGNED = 57574
const ZEROFILL = 57575
const COLLATION = 57576
const DATABASES = 57577
const TABLES = 57578
const VITESS_METADATA = 57579
const VSCHEMA = 57580
const FULL = 57581
const PROCESSLIST = 57582
const COLUMNS = 57583
const FIELDS = 57584
const ENGINES = 57585
const PLUGINS = 57586
const EXTENDED = 57587
const KEYSPACES = 57588
const VITESS_KEYSPACES = 57589
const VITESS_SHARDS = 57590
const VITESS_TABLETS = 57591
const NAMES = 57592
const CHARSET = 57593
const GLOBAL = 57594
const SESSION = 57595
const ISOLATION = 57596
const LEVEL = 57597
const READ = 57598
const WRITE = 57599
const ONLY = 57600
const REPEATABLE = 57601
const COMMITTED = 57602
const UNCOMMITTED = 57603
const SERIALIZABLE = 57604
const CURRENT_TIMESTAMP = 57605
const DATABASE = 57606
const CURRENT_DATE = 57607
const CURRENT_TIME = 57608
const LOCALTIME = 57609
const LOCALTIMESTAMP = 57610
const UTC_DATE = 57611
const UTC_TIME = 57612
const UTC_TIMESTAMP = 57613
const REPLACE = 57614
const CONVERT = 57615
const CAST = 57616
const SUBSTR = 57617
const SUBSTRING = 57618
const GROUP_CONCAT = 57619
const SEPARATOR = 57620
const TIMESTAMPADD = 57621
const TIMESTAMPDIFF = 57622
const MATCH = 57623
const AGAINST = 57624
const BOOLEAN = 57625
const LANGUAGE = 57626
const WITH = 57627
const QUERY = 57628
const EXPANSION = 57629
const UNUSED = 57630
const ARRAY = 57631
const CUME_DIST = 57632
const DESCRIPTION = 57633
const DENSE_RANK = 57634
const EMPTY = 57635
const EXCEPT = 57636
const FIRST_VALUE = 57637
const GROUPING = 57638
const GROUPS = 57639
const JSON_TABLE = 57640
const LAG = 57641
const LAST_VALUE = 57642
const LATERAL = 57643
const LEAD = 57644
const MEMBER = 57645
const NTH_VALUE = 57646
const NTILE = 57647
const OF = 57648
const OVER = 57649
const PERCENT_RANK = 57650
const RANK = 57651
const RECURSIVE = 57652
const ROW_NUMBER = 57653
const SYSTEM = 57654
const WINDOW = 57655
const ACTIVE = 57656
const ADMIN = 57657
const BUCKETS = 57658
const CLONE = 57659
const COMPONENT = 57660
const DEFINITION = 57661
const ENFORCED = 57662
const EXCLUDE = 57663
const FOLLOWING = 57664
const GEOMCOLLECTION = 57665
const GET_MASTER_PUBLIC_KEY = 57666
const HISTOGRAM = 57667
const HISTORY = 57668
const INACTIVE = 57669
const INVISIBLE = 57670
const LOCKED = 57671
const MASTER_COMPRESSION_ALGORITHMS = 57672
const MASTER_PUBLIC_KEY_PATH = 57673
const MASTER_TLS_CIPHERSUITES = 57674
const MASTER_ZSTD_COMPRESSION_LEVEL = 57675
const NESTED = 57676
const NETWORK_NAMESPACE = 57677
const NOWAIT = 57678
const NULLS = 57679
const OJ = 57680
const OLD = 57681
const OPTIONAL = 57682
const ORDINALITY = 57683
const ORGANIZATION = 57684
const OTHERS = 57685
const PATH = 57686
const PERSIST = 57687
const PERSIST_ONLY = 57688
const PRECEDING = 57689
const PRIVILEGE_CHECKS_USER = 57690
const PROCESS = 57691
const RANDOM = 57692
const REFERENCE = 57693
const REQUIRE_ROW_FORMAT = 57694
const RESOURCE = 57695
const RESPECT = 57696
const RESTART = 57697
const RETAIN = 57698
const REUSE = 57699
const ROLE = 57700
const SECONDARY = 57701
const SECONDARY_ENGINE = 57702
const SECONDARY_LOAD = 57703
const SECONDARY_UNLOAD = 57704
const SKIP = 57705
const SRID = 57706
const THREAD_PRIORITY = 57707
const TIES = 57708
const UNBOUNDED = 57709
const VCPU = 57710
const VISIBLE = 57711
const FORMAT = 57712
const TREE = 57713
const VITESS = 57714
const TRADITIONAL = 57715

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"KEY",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"DISTINCTROW",
	"PARSER",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"'('",
	"','",
	"')'",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"STRING",
	"INTEGRAL",
	"FLOAT",
	"HEXNUM",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BIT_LITERAL",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"OR",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_LATIN1",
	"INTERVAL",
	"'.'",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"UNIQUE",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"SEQUENCE",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"COLLATION",
	"DATABASES",
	"TABLES",
	"VITESS_METADATA",
	"VSCHEMA",
	"FULL",
	"PROCESSLIST",
	"COLUMNS",
	"FIELDS",
	"ENGINES",
	"PLUGINS",
	"EXTENDED",
	"KEYSPACES",
	"VITESS_KEYSPACES",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"NAMES",
	"CHARSET",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"GROUP_CONCAT",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"UNUSED",
	"ARRAY",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"MEMBER",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"BUCKETS",
	"CLONE",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"EXCLUDE",
	"FOLLOWING",
	"GEOMCOLLECTION",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"';'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 41,
	136, 104,
	224, 104,
	-2, 98,
	-1, 47,
	34, 341,
	155, 341,
	167, 341,
	192, 355,
	193, 355,
	-2, 343,
	-1, 52,
	157, 365,
	-2, 363,
	-1, 76,
	55, 401,
	-2, 409,
	-1, 98,
	136, 104,
	224, 104,
	-2, 99,
	-1, 431,
	143, 779,
	-2, 775,
	-1, 432,
	143, 780,
	-2, 776,
	-1, 447,
	55, 402,
	-2, 414,
	-1, 448,
	55, 403,
	-2, 415,
	-1, 468,
	111, 1053,
	-2, 76,
	-1, 469,
	111, 958,
	-2, 77,
	-1, 474,
	111, 918,
	-2, 737,
	-1, 476,
	111, 995,
	-2, 739,
	-1, 1002,
	143, 782,
	-2, 778,
	-1, 1089,
	73, 58,
	81, 58,
	-2, 62,
	-1, 1475,
	5, 653,
	18, 653,
	20, 653,
	32, 653,
	82, 653,
	-2, 440,
	-1, 1678,
	45, 708,
	-2, 706,
}

const yyPrivate = 57344

const yyLast = 19401

var yyAct = [...]int{

	431, 1758, 1695, 1678, 1397, 1284, 1588, 1726, 1526, 1626,
	375, 1111, 1768, 1304, 1609, 1162, 663, 390, 1285, 404,
	1454, 1083, 1451, 783, 644, 75, 3, 903, 1455, 743,
	790, 1359, 1271, 1156, 1358, 1335, 603, 1107, 1110, 923,
	1467, 440, 1120, 1461, 606, 1080, 117, 473, 342, 117,
	1416, 1220, 989, 996, 354, 1374, 117, 1164, 942, 661,
	73, 361, 1351, 1125, 1062, 1085, 828, 811, 793, 600,
	1069, 821, 810, 449, 788, 966, 434, 1022, 377, 1152,
	599, 29, 1045, 827, 354, 607, 800, 354, 117, 354,
	117, 366, 71, 653, 825, 1091, 373, 937, 70, 952,
	470, 1675, 76, 757, 1512, 117, 625, 626, 893, 117,
	818, 635, 756, 1598, 8, 117, 7, 6, 1628, 362,
	106, 1761, 365, 104, 1723, 416, 1756, 422, 423, 420,
	421, 419, 418, 417, 1141, 78, 79, 80, 81, 82,
	83, 424, 425, 1703, 1749, 405, 30, 455, 459, 90,
	1527, 1722, 1433, 435, 1556, 1702, 31, 610, 1165, 64,
	35, 36, 113, 109, 110, 111, 1321, 1188, 1485, 1320,
	1102, 1103, 1322, 119, 120, 121, 30, 1101, 467, 1167,
	1343, 1187, 1669, 705, 704, 714, 715, 707, 708, 709,
	710, 711, 712, 713, 706, 1486, 1487, 716, 829, 676,
	830, 1135, 96, 91, 671, 89, 669, 670, 672, 669,
	670, 364, 363, 1705, 1399, 1591, 622, 436, 119, 120,
	121, 1142, 107, 1547, 1545, 352, 951, 356, 350, 674,
	63, 666, 912, 1401, 119, 120, 121, 31, 32, 33,
	64, 35, 36, 909, 650, 1186, 652, 911, 105, 1755,
	1166, 999, 953, 954, 955, 664, 665, 68, 1748, 1696,
	1396, 675, 37, 58, 59, 1063, 61, 1688, 659, 94,
	1400, 1776, 62, 913, 1160, 1160, 1772, 1160, 649, 651,
	1492, 602, 614, 910, 1652, 615, 616, 634, 1305, 1307,
	112, 612, 1129, 896, 461, 1402, 916, 679, 1183, 1180,
	1181, 48, 1179, 1393, 621, 1682, 1317, 1478, 1129, 1395,
	1477, 63, 1476, 899, 623, 322, 630, 108, 1200, 1572,
	1239, 1199, 1484, 117, 642, 728, 729, 648, 1276, 1249,
	95, 1228, 1097, 804, 354, 1190, 1193, 1236, 1511, 741,
	640, 706, 1108, 354, 716, 716, 119, 120, 121, 1041,
	943, 94, 694, 695, 693, 695, 693, 354, 354, 1142,
	1437, 646, 938, 1670, 696, 86, 677, 119, 120, 121,
	696, 647, 696, 1661, 1435, 1185, 1306, 40, 42, 44,
	43, 46, 904, 60, 685, 654, 1701, 1168, 1465, 658,
	627, 898, 628, 1706, 831, 629, 1023, 1184, 689, 1341,
	1691, 660, 678, 1023, 87, 1246, 47, 67, 66, 1046,
	1047, 56, 57, 45, 1770, 1653, 1651, 1771, 1128, 1769,
	693, 1503, 655, 656, 1777, 690, 691, 49, 50, 797,
	51, 52, 53, 54, 1128, 1394, 696, 1392, 1753, 65,
	1597, 1189, 709, 710, 711, 712, 713, 706, 611, 1596,
	716, 726, 728, 729, 1752, 667, 1191, 1517, 354, 944,
	1744, 117, 781, 117, 117, 780, 354, 645, 1355, 728,
	729, 939, 354, 688, 1132, 686, 687, 973, 1441, 662,
	99, 1133, 470, 1354, 694, 695, 693, 744, 662, 100,
	1778, 971, 972, 970, 63, 779, 1171, 1734, 961, 963,
	964, 1750, 696, 1417, 30, 962, 969, 633, 809, 707,
	708, 709, 710, 711, 712, 713, 706, 725, 727, 716,
	65, 760, 762, 794, 766, 768, 1442, 771, 1751, 1716,
	759, 761, 763, 765, 767, 769, 770, 1213, 1214, 1215,
	782, 1384, 617, 1622, 1419, 1594, 1560, 1043, 740, 1518,
	1742, 1443, 745, 746, 747, 748, 749, 750, 751, 752,
	1365, 755, 758, 758, 758, 764, 758, 758, 764, 758,
	772, 773, 774, 775, 776, 777, 778, 1743, 1234, 620,
	1352, 1421, 30, 1425, 936, 1420, 1233, 1418, 619, 119,
	120, 121, 1423, 991, 928, 1380, 1381, 1382, 901, 117,
	618, 1422, 72, 889, 444, 694, 695, 693, 815, 1042,
	354, 1027, 117, 826, 1424, 1426, 1649, 1754, 900, 636,
	637, 638, 1658, 696, 117, 354, 354, 354, 694, 695,
	693, 117, 1718, 444, 117, 1649, 1699, 117, 921, 922,
	1657, 117, 1272, 354, 1356, 1272, 696, 1367, 354, 354,
	354, 117, 354, 354, 119, 120, 121, 1130, 1372, 694,
	695, 693, 694, 695, 693, 354, 354, 1383, 927, 895,
	1649, 444, 1388, 1385, 1376, 1386, 1379, 696, 1375, 444,
	696, 460, 1377, 1378, 906, 907, 908, 443, 925, 1464,
	393, 392, 395, 396, 397, 398, 1387, 465, 792, 394,
	399, 1567, 926, 1649, 1683, 1235, 1065, 930, 931, 932,
	1066, 934, 935, 1464, 119, 120, 121, 990, 1324, 967,
	119, 120, 121, 692, 940, 941, 992, 946, 705, 704,
	714, 715, 707, 708, 709, 710, 711, 712, 713, 706,
	354, 1660, 716, 1507, 917, 714, 715, 707, 708, 709,
	710, 711, 712, 713, 706, 662, 1066, 716, 1000, 1311,
	1011, 1014, 1093, 462, 463, 945, 1024, 1092, 948, 1066,
	662, 662, 662, 354, 354, 1006, 1649, 1648, 968, 892,
	1587, 1001, 694, 695, 693, 1221, 1574, 444, 662, 1002,
	1570, 444, 354, 662, 662, 662, 1325, 662, 662, 117,
	696, 63, 354, 119, 120, 121, 117, 1177, 117, 744,
	662, 662, 1509, 1508, 1735, 444, 117, 117, 117, 1505,
	1506, 1000, 1036, 1094, 354, 993, 994, 354, 1100, 1032,
	1033, 1096, 1048, 1505, 1504, 1003, 1054, 444, 354, 354,
	470, 1081, 74, 470, 1060, 1066, 444, 692, 444, 31,
	892, 891, 1002, 1252, 1112, 705, 704, 714, 715, 707,
	708, 709, 710, 711, 712, 713, 706, 1055, 1056, 716,
	1093, 838, 837, 1251, 1279, 1127, 705, 704, 714, 715,
	707, 708, 709, 710, 711, 712, 713, 706, 1058, 1452,
	716, 1054, 1092, 354, 31, 437, 1280, 117, 1464, 1044,
	1174, 915, 823, 31, 1176, 1611, 1192, 1054, 1099, 1579,
	117, 117, 117, 117, 117, 1095, 117, 117, 1098, 1115,
	117, 354, 1158, 63, 894, 1157, 1159, 1496, 1090, 890,
	1175, 1094, 1329, 1153, 1599, 1360, 1054, 1147, 117, 1092,
	1146, 1633, 88, 1361, 117, 117, 117, 1468, 1469, 1603,
	117, 354, 1398, 1612, 1136, 1763, 1137, 1138, 1139, 1140,
	1370, 1082, 1759, 1559, 1519, 1154, 1155, 1206, 63, 63,
	1498, 1210, 1148, 1149, 1150, 1151, 1170, 63, 1169, 1361,
	1204, 1600, 1601, 1602, 1471, 1452, 949, 1143, 1144, 1145,
	967, 1296, 1558, 1604, 1605, 919, 1297, 1007, 1008, 1474,
	1473, 1013, 1016, 1017, 705, 704, 714, 715, 707, 708,
	709, 710, 711, 712, 713, 706, 1293, 1298, 716, 1075,
	1076, 1071, 1074, 1075, 1076, 1072, 1031, 1073, 1077, 1034,
	1035, 1468, 1469, 705, 704, 714, 715, 707, 708, 709,
	710, 711, 712, 713, 706, 1294, 1216, 716, 1230, 968,
	1295, 1071, 1074, 1075, 1076, 1072, 117, 1073, 1077, 1292,
	1258, 370, 1739, 1721, 1444, 1261, 662, 117, 117, 117,
	117, 117, 1265, 791, 1737, 432, 1286, 450, 1571, 117,
	1229, 1270, 1269, 117, 1711, 435, 1708, 117, 1281, 1741,
	1725, 451, 117, 117, 1277, 1727, 117, 117, 117, 1245,
	1732, 1274, 1259, 1733, 1679, 1677, 433, 92, 1303, 1323,
	1260, 354, 1366, 1360, 795, 796, 453, 1347, 452, 1264,
	1330, 118, 1326, 1273, 118, 1336, 1336, 1112, 784, 355,
	1275, 118, 902, 450, 836, 1288, 1289, 1312, 1291, 1287,
	785, 1314, 1290, 1019, 643, 925, 1227, 451, 1299, 436,
	103, 1693, 1309, 1340, 1310, 102, 1692, 1020, 1631, 355,
	1338, 1337, 355, 118, 355, 118, 1363, 1318, 1315, 1331,
	447, 448, 453, 354, 452, 1565, 1371, 1607, 1039, 1346,
	118, 1348, 1349, 1350, 118, 1328, 1332, 1333, 1334, 1173,
	118, 1046, 1047, 918, 1364, 1079, 438, 439, 1268, 441,
	1746, 815, 1745, 74, 354, 1730, 1267, 1712, 1282, 1283,
	1353, 1564, 815, 815, 815, 815, 815, 442, 1563, 1447,
	1272, 1362, 673, 1765, 1764, 72, 1240, 1237, 1082, 354,
	1308, 805, 1368, 798, 1765, 990, 1389, 815, 1680, 1592,
	1373, 815, 1040, 437, 77, 1413, 69, 1, 341, 1225,
	1226, 1757, 93, 1528, 1415, 1608, 1182, 1694, 1357, 1163,
	1414, 1118, 1109, 1403, 1404, 85, 1438, 117, 1405, 1406,
	1243, 597, 1344, 1345, 1434, 84, 657, 354, 1117, 1116,
	1650, 1412, 1342, 354, 354, 1453, 1428, 1427, 1134, 1001,
	1286, 1590, 1497, 1413, 1339, 1690, 844, 1002, 842, 843,
	1456, 841, 846, 845, 840, 334, 950, 351, 1078, 354,
	832, 799, 117, 1391, 1390, 1178, 1510, 1463, 662, 1450,
	1131, 331, 668, 336, 724, 1266, 354, 1319, 354, 471,
	354, 1472, 464, 1336, 1336, 1336, 1458, 1369, 613, 1489,
	1731, 1709, 1112, 1480, 1112, 1482, 1707, 1483, 1502, 662,
	1676, 1627, 1479, 1710, 1004, 1005, 1674, 1481, 1740, 1724,
	1038, 787, 1562, 1446, 1488, 1244, 753, 1127, 1493, 1494,
	1495, 354, 1021, 1491, 1490, 814, 376, 960, 391, 388,
	389, 1049, 1500, 1501, 1278, 698, 374, 368, 1515, 1516,
	1513, 117, 813, 1037, 1514, 806, 1070, 354, 118, 1529,
	354, 354, 354, 117, 1068, 1067, 819, 1470, 1466, 355,
	812, 1053, 446, 1018, 1668, 1555, 445, 55, 355, 34,
	358, 681, 454, 28, 23, 22, 1457, 21, 30, 1534,
	1535, 20, 355, 355, 19, 25, 1521, 18, 17, 16,
	730, 731, 732, 733, 734, 735, 736, 737, 738, 739,
	101, 1522, 97, 1524, 98, 1543, 1538, 815, 704, 714,
	715, 707, 708, 709, 710, 711, 712, 713, 706, 402,
	41, 716, 39, 631, 38, 1286, 1566, 27, 26, 15,
	14, 13, 12, 1576, 11, 10, 9, 5, 4, 354,
	684, 24, 742, 2, 1575, 0, 0, 354, 0, 0,
	1326, 0, 0, 0, 0, 1112, 0, 0, 0, 0,
	0, 1585, 0, 0, 1586, 0, 0, 0, 0, 0,
	117, 0, 0, 353, 0, 0, 1540, 1541, 354, 1542,
	0, 0, 1544, 355, 1546, 0, 118, 0, 118, 118,
	0, 355, 1615, 0, 1610, 0, 0, 355, 0, 0,
	0, 0, 0, 472, 0, 0, 601, 0, 608, 0,
	0, 0, 1613, 0, 0, 0, 0, 0, 0, 0,
	0, 354, 0, 354, 0, 354, 0, 1561, 0, 1554,
	354, 0, 354, 354, 354, 117, 1640, 1456, 1641, 1643,
	1644, 1456, 1636, 0, 1630, 1634, 1632, 1621, 0, 0,
	0, 0, 0, 1647, 1223, 0, 1645, 0, 1224, 0,
	1654, 0, 354, 117, 0, 0, 0, 1639, 1662, 1231,
	1232, 0, 1581, 1582, 1583, 1238, 0, 1646, 1241, 1242,
	0, 1655, 0, 1656, 0, 0, 1248, 0, 0, 1593,
	1250, 1595, 0, 1253, 1254, 1255, 1256, 1257, 0, 0,
	354, 0, 0, 1456, 1681, 0, 0, 0, 0, 1687,
	0, 354, 354, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1698, 118, 1697, 1614, 1610, 1112, 1553,
	0, 0, 0, 354, 1704, 355, 1713, 118, 0, 117,
	0, 1286, 1301, 1302, 0, 1625, 0, 354, 0, 118,
	355, 355, 355, 0, 1720, 0, 118, 0, 0, 118,
	0, 1729, 118, 1457, 1728, 30, 118, 1457, 355, 0,
	0, 1736, 0, 355, 355, 355, 118, 355, 355, 1738,
	0, 0, 0, 0, 0, 0, 354, 0, 0, 0,
	355, 355, 1747, 0, 0, 457, 0, 0, 1552, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 1762,
	965, 0, 0, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 1773, 1457,
	0, 705, 704, 714, 715, 707, 708, 709, 710, 711,
	712, 713, 706, 0, 0, 716, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 0, 367, 0, 0,
	0, 0, 472, 0, 0, 355, 0, 0, 0, 0,
	1028, 0, 0, 0, 0, 0, 680, 682, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 1411, 0,
	0, 0, 1551, 0, 0, 0, 0, 0, 355, 355,
	705, 704, 714, 715, 707, 708, 709, 710, 711, 712,
	713, 706, 0, 0, 716, 0, 0, 355, 0, 0,
	0, 0, 0, 0, 118, 0, 0, 355, 0, 0,
	0, 118, 0, 118, 0, 0, 0, 0, 0, 0,
	0, 118, 118, 118, 1459, 0, 0, 0, 0, 355,
	0, 1760, 355, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 355, 355, 1475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 802, 0, 0,
	0, 0, 0, 0, 0, 472, 0, 0, 0, 0,
	0, 833, 0, 1550, 705, 704, 714, 715, 707, 708,
	709, 710, 711, 712, 713, 706, 0, 323, 716, 0,
	0, 0, 0, 0, 0, 0, 326, 0, 355, 0,
	0, 0, 118, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 118, 118, 118, 118,
	0, 118, 118, 0, 0, 118, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 333, 0,
	0, 0, 0, 118, 340, 0, 0, 0, 0, 118,
	118, 118, 0, 0, 1537, 118, 355, 0, 1539, 0,
	0, 0, 0, 1217, 1218, 1219, 0, 0, 0, 1548,
	1549, 0, 0, 0, 324, 705, 704, 714, 715, 707,
	708, 709, 710, 711, 712, 713, 706, 0, 0, 716,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1568,
	1569, 337, 327, 1573, 338, 339, 346, 1407, 0, 472,
	330, 332, 343, 328, 329, 348, 347, 0, 325, 345,
	344, 1584, 0, 816, 472, 472, 472, 705, 704, 714,
	715, 707, 708, 709, 710, 711, 712, 713, 706, 0,
	0, 716, 472, 0, 0, 697, 0, 472, 472, 472,
	0, 472, 472, 0, 0, 0, 0, 0, 0, 0,
	0, 118, 0, 0, 472, 472, 0, 0, 0, 115,
	0, 0, 118, 118, 118, 118, 118, 0, 0, 357,
	0, 367, 0, 0, 118, 0, 0, 0, 118, 0,
	754, 0, 118, 0, 0, 0, 0, 118, 118, 0,
	0, 118, 118, 118, 0, 0, 0, 0, 0, 0,
	0, 605, 0, 609, 0, 0, 355, 786, 789, 0,
	0, 0, 1222, 1642, 0, 0, 0, 0, 624, 0,
	0, 0, 632, 0, 0, 0, 0, 0, 639, 995,
	0, 472, 705, 704, 714, 715, 707, 708, 709, 710,
	711, 712, 713, 706, 0, 1025, 716, 0, 1664, 1665,
	1666, 1667, 0, 1671, 0, 1672, 1673, 0, 0, 0,
	0, 0, 1029, 1030, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 1684, 0, 1685, 1686, 0, 0, 0,
	0, 1050, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 802, 0, 0, 472, 0, 0, 0, 0, 355,
	1700, 0, 0, 1408, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 472, 0, 1429, 1430,
	0, 1431, 1432, 0, 355, 0, 1717, 472, 601, 0,
	0, 0, 0, 1439, 1440, 0, 0, 0, 403, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 0, 355, 355,
	0, 0, 608, 0, 116, 0, 0, 349, 0, 0,
	0, 0, 0, 0, 116, 0, 0, 0, 1774, 1775,
	0, 0, 0, 0, 355, 0, 0, 118, 0, 0,
	472, 0, 929, 0, 0, 0, 0, 458, 458, 0,
	0, 355, 1499, 355, 0, 355, 116, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 641, 0, 0, 947,
	1212, 0, 0, 116, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 116, 0, 0, 0, 0, 956, 957,
	958, 959, 0, 0, 0, 0, 355, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 0, 1536,
	0, 0, 355, 0, 0, 355, 355, 355, 118, 0,
	0, 0, 0, 0, 0, 0, 0, 700, 0, 703,
	0, 0, 0, 1009, 1010, 717, 718, 719, 720, 721,
	722, 723, 0, 701, 702, 699, 705, 704, 714, 715,
	707, 708, 709, 710, 711, 712, 713, 706, 0, 0,
	716, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 808, 0, 0, 820, 0, 0,
	0, 0, 0, 0, 355, 0, 0, 0, 0, 0,
	0, 0, 355, 0, 0, 0, 0, 1106, 0, 0,
	472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 118, 0, 0, 0, 0,
	0, 0, 0, 355, 0, 0, 0, 0, 0, 0,
	0, 0, 1616, 1617, 1618, 1619, 1620, 0, 0, 0,
	1623, 1624, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1161, 0, 0, 0,
	0, 116, 472, 0, 0, 0, 355, 0, 355, 0,
	355, 0, 0, 0, 0, 355, 0, 355, 355, 355,
	118, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 472, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 355, 118, 0,
	0, 0, 839, 0, 0, 0, 0, 0, 472, 0,
	0, 0, 0, 0, 0, 897, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 905, 0, 472,
	0, 0, 0, 0, 914, 355, 0, 820, 0, 0,
	920, 0, 0, 0, 0, 0, 355, 355, 0, 0,
	0, 0, 0, 0, 933, 0, 472, 0, 0, 1025,
	0, 0, 1460, 1462, 0, 0, 0, 0, 355, 0,
	0, 0, 0, 0, 118, 458, 0, 0, 0, 1247,
	0, 0, 355, 0, 0, 0, 0, 0, 1462, 116,
	0, 116, 822, 0, 0, 0, 0, 0, 1262, 1263,
	789, 0, 0, 0, 0, 472, 0, 472, 0, 608,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1520, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 1530,
	1531, 1532, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1057, 0, 0, 0, 0, 0, 0, 1061,
	0, 1064, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1089, 0, 0, 0, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 1025, 0, 0, 0, 0, 0,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 116,
	0, 0, 116, 0, 0, 116, 0, 0, 472, 924,
	0, 0, 0, 0, 0, 0, 1589, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1172, 0, 1436, 0, 0, 0, 0, 472, 0, 0,
	0, 0, 0, 1194, 1195, 1196, 1197, 1198, 0, 1201,
	1202, 0, 0, 1203, 0, 0, 0, 0, 1448, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1205, 0, 0, 0, 0, 0, 0, 0, 1209,
	1635, 0, 1637, 1211, 1638, 0, 0, 0, 0, 1589,
	0, 1589, 1589, 1589, 0, 0, 0, 0, 0, 458,
	924, 0, 0, 0, 458, 458, 0, 0, 458, 458,
	458, 0, 0, 0, 1026, 0, 0, 0, 0, 0,
	0, 1589, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 458, 458, 458, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 116, 0, 1689,
	0, 0, 0, 924, 116, 0, 116, 0, 0, 0,
	472, 472, 0, 0, 116, 1087, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1025, 0, 1714, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1719, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1557, 0, 0, 1313, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 0, 1589, 0, 0, 0, 0,
	0, 1577, 0, 0, 1578, 116, 0, 1580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 116,
	116, 116, 116, 0, 116, 116, 0, 0, 116, 0,
	0, 0, 0, 0, 861, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 116, 0, 0, 0,
	0, 0, 1207, 1208, 116, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1629,
	367, 0, 0, 0, 0, 0, 458, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 458, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1445, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 458, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1026, 116, 116, 116, 116, 116,
	0, 862, 0, 0, 0, 0, 0, 1300, 0, 0,
	0, 116, 0, 0, 0, 1087, 0, 0, 0, 0,
	116, 116, 0, 0, 116, 1316, 924, 875, 878, 879,
	880, 881, 882, 883, 0, 884, 885, 886, 887, 888,
	863, 864, 865, 866, 847, 848, 876, 0, 850, 0,
	851, 852, 853, 854, 855, 856, 857, 858, 859, 860,
	867, 868, 869, 870, 871, 872, 873, 874, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1523, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 458, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 924, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1026, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1606, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1663, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1715, 1026, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1026,
	0, 0, 0, 0, 583, 571, 0, 116, 527, 586,
	500, 517, 594, 518, 521, 558, 485, 540, 223, 515,
	0, 504, 480, 511, 481, 502, 529, 156, 533, 499,
	573, 543, 585, 190, 0, 505, 234, 560, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 592, 193, 549, 0, 274, 210, 0, 0,
	0, 531, 575, 538, 568, 526, 559, 490, 548, 587,
	516, 556, 588, 182, 146, 126, 220, 275, 163, 0,
	0, 0, 119, 120, 121, 0, 1113, 1114, 0, 0,
	0, 0, 0, 142, 0, 553, 582, 513, 555, 557,
	596, 479, 550, 0, 483, 486, 593, 578, 508, 509,
	1327, 0, 0, 0, 0, 0, 0, 530, 539, 565,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 547, 0, 0, 0, 487, 484, 0, 0, 0,
	0, 528, 0, 0, 0, 489, 0, 507, 566, 0,
	477, 168, 570, 577, 525, 307, 581, 523, 522, 584,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 574, 503, 512, 149, 510, 255,
	231, 298, 546, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 295, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 136, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 482, 0, 276, 301, 321,
	140, 498, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 214, 137, 177, 272,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 494,
	497, 492, 493, 541, 542, 589, 590, 591, 567, 488,
	0, 495, 496, 0, 572, 579, 580, 545, 122, 132,
	192, 318, 248, 164, 302, 478, 491, 153, 501, 0,
	0, 514, 519, 520, 532, 534, 535, 536, 537, 544,
	551, 552, 554, 561, 562, 563, 564, 569, 576, 595,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 171, 296, 311, 583,
	571, 0, 0, 527, 586, 500, 517, 594, 518, 521,
	558, 485, 540, 223, 515, 0, 504, 480, 511, 481,
	502, 529, 156, 533, 499, 573, 543, 585, 190, 0,
	505, 234, 560, 266, 148, 198, 196, 285, 161, 157,
	155, 147, 178, 202, 233, 282, 227, 592, 193, 549,
	0, 274, 210, 0, 0, 0, 531, 575, 538, 568,
	526, 559, 490, 548, 587, 516, 556, 588, 182, 146,
	126, 220, 275, 163, 0, 0, 0, 119, 120, 121,
	0, 1113, 1114, 0, 0, 0, 0, 0, 142, 0,
	553, 582, 513, 555, 557, 596, 479, 550, 0, 483,
	486, 593, 578, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 530, 539, 565, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 547, 0, 0, 0,
	487, 484, 0, 0, 0, 0, 528, 0, 0, 0,
	489, 0, 507, 566, 0, 477, 168, 570, 577, 525,
	307, 581, 523, 522, 584, 245, 0, 279, 172, 189,
	138, 186, 123, 134, 0, 170, 219, 253, 257, 574,
	503, 512, 149, 510, 255, 231, 298, 546, 235, 254,
	194, 287, 246, 297, 308, 309, 283, 305, 317, 271,
	127, 281, 295, 143, 265, 0, 0, 0, 129, 293,
	278, 208, 183, 184, 128, 0, 251, 154, 166, 151,
	222, 290, 291, 150, 320, 135, 304, 131, 136, 303,
	215, 286, 294, 209, 201, 130, 292, 207, 200, 188,
	160, 174, 243, 197, 244, 175, 212, 211, 213, 0,
	482, 0, 276, 301, 321, 140, 498, 284, 313, 316,
	0, 247, 141, 167, 159, 242, 165, 191, 312, 314,
	315, 214, 137, 177, 272, 187, 195, 250, 319, 230,
	256, 144, 300, 273, 494, 497, 492, 493, 541, 542,
	589, 590, 591, 567, 488, 0, 495, 496, 0, 572,
	579, 580, 545, 122, 132, 192, 318, 248, 164, 302,
	478, 491, 153, 501, 0, 0, 514, 519, 520, 532,
	534, 535, 536, 537, 544, 551, 552, 554, 561, 562,
	563, 564, 569, 576, 595, 124, 125, 133, 139, 145,
	152, 158, 162, 169, 173, 176, 179, 180, 181, 185,
	199, 203, 204, 205, 206, 216, 217, 218, 221, 224,
	225, 226, 228, 229, 232, 236, 237, 238, 239, 240,
	241, 249, 252, 258, 259, 260, 261, 262, 263, 264,
	267, 268, 269, 270, 277, 280, 288, 289, 299, 306,
	310, 171, 296, 311, 583, 571, 0, 0, 527, 586,
	500, 517, 594, 518, 521, 558, 485, 540, 223, 515,
	0, 504, 480, 511, 481, 502, 529, 156, 533, 499,
	573, 543, 585, 190, 0, 505, 234, 560, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 592, 193, 549, 0, 274, 210, 0, 0,
	0, 531, 575, 538, 568, 526, 559, 490, 548, 587,
	516, 556, 588, 182, 146, 126, 220, 275, 163, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 553, 582, 513, 555, 557,
	596, 479, 550, 0, 483, 486, 593, 578, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 530, 539, 565,
	524, 0, 0, 0, 0, 0, 0, 1449, 0, 506,
	0, 547, 0, 0, 0, 487, 484, 0, 0, 0,
	0, 528, 0, 0, 0, 489, 0, 507, 566, 0,
	477, 168, 570, 577, 525, 307, 581, 523, 522, 584,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 574, 503, 512, 149, 510, 255,
	231, 298, 546, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 295, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 136, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 482, 0, 276, 301, 321,
	140, 498, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 214, 137, 177, 272,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 494,
	497, 492, 493, 541, 542, 589, 590, 591, 567, 488,
	0, 495, 496, 0, 572, 579, 580, 545, 122, 132,
	192, 318, 248, 164, 302, 478, 491, 153, 501, 0,
	0, 514, 519, 520, 532, 534, 535, 536, 537, 544,
	551, 552, 554, 561, 562, 563, 564, 569, 576, 595,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 171, 296, 311, 583,
	571, 0, 0, 527, 586, 500, 517, 594, 518, 521,
	558, 485, 540, 223, 515, 0, 504, 480, 511, 481,
	502, 529, 156, 533, 499, 573, 543, 585, 190, 0,
	505, 234, 560, 266, 148, 198, 196, 285, 161, 157,
	155, 147, 178, 202, 233, 282, 227, 592, 193, 549,
	0, 274, 210, 0, 0, 0, 531, 575, 538, 568,
	526, 559, 490, 548, 587, 516, 556, 588, 182, 146,
	126, 220, 275, 163, 63, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	553, 582, 513, 555, 557, 596, 479, 550, 0, 483,
	486, 593, 578, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 530, 539, 565, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 547, 0, 0, 0,
	487, 484, 0, 0, 0, 0, 528, 0, 0, 0,
	489, 0, 507, 566, 0, 477, 168, 570, 577, 525,
	307, 581, 523, 522, 584, 245, 0, 279, 172, 189,
	138, 186, 123, 134, 0, 170, 219, 253, 257, 574,
	503, 512, 149, 510, 255, 231, 298, 546, 235, 254,
	194, 287, 246, 297, 308, 309, 283, 305, 317, 271,
	127, 281, 295, 143, 265, 0, 0, 0, 129, 293,
	278, 208, 183, 184, 128, 0, 251, 154, 166, 151,
	222, 290, 291, 150, 320, 135, 304, 131, 136, 303,
	215, 286, 294, 209, 201, 130, 292, 207, 200, 188,
	160, 174, 243, 197, 244, 175, 212, 211, 213, 0,
	482, 0, 276, 301, 321, 140, 498, 284, 313, 316,
	0, 247, 141, 167, 159, 242, 165, 191, 312, 314,
	315, 214, 137, 177, 272, 187, 195, 250, 319, 230,
	256, 144, 300, 273, 494, 497, 492, 493, 541, 542,
	589, 590, 591, 567, 488, 0, 495, 496, 0, 572,
	579, 580, 545, 122, 132, 192, 318, 248, 164, 302,
	478, 491, 153, 501, 0, 0, 514, 519, 520, 532,
	534, 535, 536, 537, 544, 551, 552, 554, 561, 562,
	563, 564, 569, 576, 595, 124, 125, 133, 139, 145,
	152, 158, 162, 169, 173, 176, 179, 180, 181, 185,
	199, 203, 204, 205, 206, 216, 217, 218, 221, 224,
	225, 226, 228, 229, 232, 236, 237, 238, 239, 240,
	241, 249, 252, 258, 259, 260, 261, 262, 263, 264,
	267, 268, 269, 270, 277, 280, 288, 289, 299, 306,
	310, 171, 296, 311, 583, 571, 0, 0, 527, 586,
	500, 517, 594, 518, 521, 558, 485, 540, 223, 515,
	0, 504, 480, 511, 481, 502, 529, 156, 533, 499,
	573, 543, 585, 190, 0, 505, 234, 560, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 592, 193, 549, 0, 274, 210, 0, 0,
	0, 531, 575, 538, 568, 526, 559, 490, 548, 587,
	516, 556, 588, 182, 146, 126, 220, 275, 163, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 553, 582, 513, 555, 557,
	596, 479, 550, 0, 483, 486, 593, 578, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 530, 539, 565,
	524, 0, 0, 0, 0, 0, 0, 1317, 0, 506,
	0, 547, 0, 0, 0, 487, 484, 0, 0, 0,
	0, 528, 0, 0, 0, 489, 0, 507, 566, 0,
	477, 168, 570, 577, 525, 307, 581, 523, 522, 584,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 574, 503, 512, 149, 510, 255,
	231, 298, 546, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 295, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 136, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 482, 0, 276, 301, 321,
	140, 498, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 214, 137, 177, 272,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 494,
	497, 492, 493, 541, 542, 589, 590, 591, 567, 488,
	0, 495, 496, 0, 572, 579, 580, 545, 122, 132,
	192, 318, 248, 164, 302, 478, 491, 153, 501, 0,
	0, 514, 519, 520, 532, 534, 535, 536, 537, 544,
	551, 552, 554, 561, 562, 563, 564, 569, 576, 595,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 171, 296, 311, 583,
	571, 0, 0, 527, 586, 500, 517, 594, 518, 521,
	558, 485, 540, 223, 515, 0, 504, 480, 511, 481,
	502, 529, 156, 533, 499, 573, 543, 585, 190, 0,
	505, 234, 560, 266, 148, 198, 196, 285, 161, 157,
	155, 147, 178, 202, 233, 282, 227, 592, 193, 549,
	0, 274, 210, 0, 0, 0, 531, 575, 538, 568,
	526, 559, 490, 548, 587, 516, 556, 588, 182, 146,
	126, 220, 275, 163, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	553, 582, 513, 555, 557, 596, 479, 550, 0, 483,
	486, 593, 578, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 530, 539, 565, 524, 0, 0, 0, 0,
	0, 0, 1059, 0, 506, 0, 547, 0, 0, 0,
	487, 484, 0, 0, 0, 0, 528, 0, 0, 0,
	489, 0, 507, 566, 0, 477, 168, 570, 577, 525,
	307, 581, 523, 522, 584, 245, 0, 279, 172, 189,
	138, 186, 123, 134, 0, 170, 219, 253, 257, 574,
	503, 512, 149, 510, 255, 231, 298, 546, 235, 254,
	194, 287, 246, 297, 308, 309, 283, 305, 317, 271,
	127, 281, 295, 143, 265, 0, 0, 0, 129, 293,
	278, 208, 183, 184, 128, 0, 251, 154, 166, 151,
	222, 290, 291, 150, 320, 135, 304, 131, 136, 303,
	215, 286, 294, 209, 201, 130, 292, 207, 200, 188,
	160, 174, 243, 197, 244, 175, 212, 211, 213, 0,
	482, 0, 276, 301, 321, 140, 498, 284, 313, 316,
	0, 247, 141, 167, 159, 242, 165, 191, 312, 314,
	315, 214, 137, 177, 272, 187, 195, 250, 319, 230,
	256, 144, 300, 273, 494, 497, 492, 493, 541, 542,
	589, 590, 591, 567, 488, 0, 495, 496, 0, 572,
	579, 580, 545, 122, 132, 192, 318, 248, 164, 302,
	478, 491, 153, 501, 0, 0, 514, 519, 520, 532,
	534, 535, 536, 537, 544, 551, 552, 554, 561, 562,
	563, 564, 569, 576, 595, 124, 125, 133, 139, 145,
	152, 158, 162, 169, 173, 176, 179, 180, 181, 185,
	199, 203, 204, 205, 206, 216, 217, 218, 221, 224,
	225, 226, 228, 229, 232, 236, 237, 238, 239, 240,
	241, 249, 252, 258, 259, 260, 261, 262, 263, 264,
	267, 268, 269, 270, 277, 280, 288, 289, 299, 306,
	310, 171, 296, 311, 583, 571, 0, 0, 527, 586,
	500, 517, 594, 518, 521, 558, 485, 540, 223, 515,
	0, 504, 480, 511, 481, 502, 529, 156, 533, 499,
	573, 543, 585, 190, 0, 505, 234, 560, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 592, 193, 549, 0, 274, 210, 0, 0,
	0, 531, 575, 538, 568, 526, 559, 490, 548, 587,
	516, 556, 588, 182, 146, 126, 220, 275, 163, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 553, 582, 513, 555, 557,
	596, 479, 550, 0, 483, 486, 593, 578, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 530, 539, 565,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 547, 0, 0, 0, 487, 484, 0, 0, 0,
	0, 528, 0, 0, 0, 489, 0, 507, 566, 0,
	477, 168, 570, 577, 525, 307, 581, 523, 522, 584,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 574, 503, 512, 149, 510, 255,
	231, 298, 546, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 295, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 136, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 482, 0, 276, 301, 321,
	140, 498, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 214, 137, 177, 272,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 494,
	497, 492, 493, 541, 542, 589, 590, 591, 567, 488,
	0, 495, 496, 0, 572, 579, 580, 545, 122, 132,
	192, 318, 248, 164, 302, 478, 491, 153, 501, 0,
	0, 514, 519, 520, 532, 534, 535, 536, 537, 544,
	551, 552, 554, 561, 562, 563, 564, 569, 576, 595,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 171, 296, 311, 583,
	571, 0, 0, 527, 586, 500, 517, 594, 518, 521,
	558, 485, 540, 223, 515, 0, 504, 480, 511, 481,
	502, 529, 156, 533, 499, 573, 543, 585, 190, 0,
	505, 234, 560, 266, 148, 198, 196, 285, 161, 157,
	155, 147, 178, 202, 233, 282, 227, 592, 193, 549,
	0, 274, 210, 0, 0, 0, 531, 575, 538, 568,
	526, 559, 490, 548, 587, 516, 556, 588, 182, 146,
	126, 220, 275, 163, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	553, 582, 513, 555, 557, 596, 479, 550, 0, 483,
	486, 593, 578, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 530, 539, 565, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 547, 0, 0, 0,
	487, 484, 0, 0, 0, 0, 528, 0, 0, 0,
	489, 0, 507, 566, 0, 477, 168, 570, 577, 525,
	307, 581, 523, 522, 584, 245, 0, 279, 172, 189,
	138, 186, 123, 134, 0, 170, 219, 253, 257, 574,
	503, 512, 149, 510, 255, 231, 298, 546, 235, 254,
	194, 287, 246, 297, 308, 309, 283, 305, 317, 271,
	127, 281, 295, 143, 265, 0, 0, 0, 129, 293,
	278, 208, 183, 184, 128, 0, 251, 154, 166, 151,
	222, 290, 291, 150, 320, 135, 304, 131, 475, 303,
	215, 286, 294, 209, 201, 130, 292, 207, 200, 188,
	160, 174, 243, 197, 244, 175, 212, 211, 213, 0,
	482, 0, 276, 301, 321, 140, 498, 284, 313, 316,
	0, 247, 141, 167, 159, 242, 165, 191, 312, 314,
	315, 476, 474, 469, 468, 187, 195, 250, 319, 230,
	256, 144, 300, 273, 494, 497, 492, 493, 541, 542,
	589, 590, 591, 567, 488, 0, 495, 496, 0, 572,
	579, 580, 545, 122, 132, 192, 318, 248, 164, 302,
	478, 491, 153, 501, 0, 0, 514, 519, 520, 532,
	534, 535, 536, 537, 544, 551, 552, 554, 561, 562,
	563, 564, 569, 576, 595, 124, 125, 133, 139, 145,
	152, 158, 162, 169, 173, 176, 179, 180, 181, 185,
	199, 203, 204, 205, 206, 216, 217, 218, 221, 224,
	225, 226, 228, 229, 232, 236, 237, 238, 239, 240,
	241, 249, 252, 258, 259, 260, 261, 262, 263, 264,
	267, 268, 269, 270, 277, 280, 288, 289, 299, 306,
	310, 171, 296, 311, 583, 571, 0, 0, 527, 586,
	500, 517, 594, 518, 521, 558, 485, 540, 223, 515,
	0, 504, 480, 511, 481, 502, 529, 156, 533, 499,
	573, 543, 585, 190, 0, 505, 234, 560, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 592, 193, 549, 0, 274, 210, 0, 0,
	0, 531, 575, 538, 568, 526, 559, 490, 548, 587,
	516, 556, 588, 182, 146, 126, 220, 275, 163, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 553, 582, 513, 555, 557,
	596, 479, 550, 0, 483, 486, 593, 578, 508, 509,
	0, 0, 0, 0, 0, 0, 0, 530, 539, 565,
	524, 0, 0, 0, 0, 0, 0, 0, 0, 506,
	0, 547, 0, 0, 0, 487, 484, 0, 0, 0,
	0, 528, 0, 0, 0, 489, 0, 507, 566, 0,
	477, 168, 570, 577, 525, 307, 581, 523, 522, 584,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 574, 503, 512, 149, 510, 255,
	231, 298, 546, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 824, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 475, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 482, 0, 276, 301, 321,
	140, 498, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 476, 474, 469, 468,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 494,
	497, 492, 493, 541, 542, 589, 590, 591, 567, 488,
	0, 495, 496, 0, 572, 579, 580, 545, 122, 132,
	192, 318, 248, 164, 302, 478, 491, 153, 501, 0,
	0, 514, 519, 520, 532, 534, 535, 536, 537, 544,
	551, 552, 554, 561, 562, 563, 564, 569, 576, 595,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 171, 296, 311, 583,
	571, 0, 0, 527, 586, 500, 517, 594, 518, 521,
	558, 485, 540, 223, 515, 0, 504, 480, 511, 481,
	502, 529, 156, 533, 499, 573, 543, 585, 190, 0,
	505, 234, 560, 266, 148, 198, 196, 285, 161, 157,
	155, 147, 178, 202, 233, 282, 227, 592, 193, 549,
	0, 274, 210, 0, 0, 0, 531, 575, 538, 568,
	526, 559, 490, 548, 587, 516, 556, 588, 182, 146,
	126, 220, 275, 163, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	553, 582, 513, 555, 557, 596, 479, 550, 0, 483,
	486, 593, 578, 508, 509, 0, 0, 0, 0, 0,
	0, 0, 530, 539, 565, 524, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 0, 547, 0, 0, 0,
	487, 484, 0, 0, 0, 0, 528, 0, 0, 0,
	489, 0, 507, 566, 0, 477, 168, 570, 577, 525,
	307, 581, 523, 522, 584, 245, 0, 279, 172, 189,
	138, 186, 123, 134, 0, 170, 219, 253, 257, 574,
	503, 512, 149, 510, 255, 231, 298, 546, 235, 254,
	194, 287, 246, 297, 308, 309, 283, 305, 317, 271,
	127, 281, 466, 143, 265, 0, 0, 0, 129, 293,
	278, 208, 183, 184, 128, 0, 251, 154, 166, 151,
	222, 290, 291, 150, 320, 135, 304, 131, 475, 303,
	215, 286, 294, 209, 201, 130, 292, 207, 200, 188,
	160, 174, 243, 197, 244, 175, 212, 211, 213, 0,
	482, 0, 276, 301, 321, 140, 498, 284, 313, 316,
	0, 247, 141, 167, 159, 242, 165, 191, 312, 314,
	315, 476, 474, 469, 468, 187, 195, 250, 319, 230,
	256, 144, 300, 273, 494, 497, 492, 493, 541, 542,
	589, 590, 591, 567, 488, 0, 495, 496, 0, 572,
	579, 580, 545, 122, 132, 192, 318, 248, 164, 302,
	478, 491, 153, 501, 0, 0, 514, 519, 520, 532,
	534, 535, 536, 537, 544, 551, 552, 554, 561, 562,
	563, 564, 569, 576, 595, 124, 125, 133, 139, 145,
	152, 158, 162, 169, 173, 176, 179, 180, 181, 185,
	199, 203, 204, 205, 206, 216, 217, 218, 221, 224,
	225, 226, 228, 229, 232, 236, 237, 238, 239, 240,
	241, 249, 252, 258, 259, 260, 261, 262, 263, 264,
	267, 268, 269, 270, 277, 280, 288, 289, 299, 306,
	310, 171, 296, 311, 223, 0, 0, 997, 0, 372,
	0, 0, 0, 156, 0, 371, 0, 0, 0, 190,
	0, 998, 234, 0, 266, 148, 198, 196, 285, 161,
	157, 155, 147, 178, 202, 233, 282, 227, 415, 193,
	0, 0, 274, 210, 0, 0, 0, 0, 0, 406,
	407, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	146, 126, 220, 275, 163, 63, 0, 0, 119, 120,
	121, 393, 392, 395, 396, 397, 398, 0, 0, 142,
	394, 399, 400, 401, 0, 0, 0, 0, 369, 386,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 456, 0, 0, 0, 429, 0, 385,
	0, 0, 378, 379, 381, 380, 382, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 428, 0,
	0, 307, 0, 0, 426, 0, 245, 0, 279, 172,
	189, 138, 186, 123, 134, 0, 170, 219, 253, 257,
	0, 0, 0, 149, 0, 255, 231, 298, 0, 235,
	254, 194, 287, 246, 297, 308, 309, 283, 305, 317,
	271, 127, 281, 295, 143, 265, 0, 0, 0, 129,
	293, 278, 208, 183, 184, 128, 0, 251, 154, 166,
	151, 222, 290, 291, 150, 320, 135, 304, 131, 136,
	303, 215, 286, 294, 209, 201, 130, 292, 207, 200,
	188, 160, 174, 243, 197, 244, 175, 212, 211, 213,
	0, 0, 0, 276, 301, 321, 140, 0, 284, 313,
	316, 0, 247, 141, 167, 159, 242, 165, 191, 312,
	314, 315, 214, 137, 177, 272, 187, 195, 250, 319,
	230, 256, 144, 300, 273, 416, 427, 422, 423, 420,
	421, 419, 418, 417, 430, 408, 409, 410, 411, 413,
	0, 424, 425, 412, 122, 132, 192, 318, 248, 164,
	302, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 125, 133, 139,
	145, 152, 158, 162, 169, 173, 176, 179, 180, 181,
	185, 199, 203, 204, 205, 206, 216, 217, 218, 221,
	224, 225, 226, 228, 229, 232, 236, 237, 238, 239,
	240, 241, 249, 252, 258, 259, 260, 261, 262, 263,
	264, 267, 268, 269, 270, 277, 280, 288, 289, 299,
	306, 310, 171, 296, 311, 223, 0, 0, 0, 0,
	372, 0, 0, 0, 156, 0, 371, 0, 0, 0,
	190, 0, 0, 234, 0, 266, 148, 198, 196, 285,
	161, 157, 155, 147, 178, 202, 233, 282, 227, 415,
	193, 0, 0, 274, 210, 0, 0, 0, 0, 0,
	406, 407, 0, 0, 0, 0, 0, 0, 1104, 0,
	182, 146, 126, 220, 275, 163, 63, 0, 0, 119,
	120, 121, 393, 392, 395, 396, 397, 398, 0, 0,
	142, 394, 399, 400, 401, 1105, 0, 0, 0, 369,
	386, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 0, 0, 0, 0, 429, 0,
	385, 0, 0, 378, 379, 381, 380, 382, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 428,
	0, 0, 307, 0, 0, 426, 0, 245, 0, 279,
	172, 189, 138, 186, 123, 134, 0, 170, 219, 253,
	257, 0, 0, 0, 149, 0, 255, 231, 298, 0,
	235, 254, 194, 287, 246, 297, 308, 309, 283, 305,
	317, 271, 127, 281, 295, 143, 265, 0, 0, 0,
	129, 293, 278, 208, 183, 184, 128, 0, 251, 154,
	166, 151, 222, 290, 291, 150, 320, 135, 304, 131,
	136, 303, 215, 286, 294, 209, 201, 130, 292, 207,
	200, 188, 160, 174, 243, 197, 244, 175, 212, 211,
	213, 0, 0, 0, 276, 301, 321, 140, 0, 284,
	313, 316, 0, 247, 141, 167, 159, 242, 165, 191,
	312, 314, 315, 214, 137, 177, 272, 187, 195, 250,
	319, 230, 256, 144, 300, 273, 416, 427, 422, 423,
	420, 421, 419, 418, 417, 430, 408, 409, 410, 411,
	413, 0, 424, 425, 412, 122, 132, 192, 318, 248,
	164, 302, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 125, 133,
	139, 145, 152, 158, 162, 169, 173, 176, 179, 180,
	181, 185, 199, 203, 204, 205, 206, 216, 217, 218,
	221, 224, 225, 226, 228, 229, 232, 236, 237, 238,
	239, 240, 241, 249, 252, 258, 259, 260, 261, 262,
	263, 264, 267, 268, 269, 270, 277, 280, 288, 289,
	299, 306, 310, 171, 296, 311, 223, 0, 0, 0,
	0, 372, 0, 0, 0, 156, 0, 371, 0, 0,
	0, 190, 0, 0, 234, 0, 266, 148, 198, 196,
	285, 161, 157, 155, 147, 178, 202, 233, 282, 227,
	415, 193, 0, 0, 274, 210, 0, 0, 0, 0,
	0, 406, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 146, 126, 220, 275, 163, 63, 0, 444,
	119, 120, 121, 393, 392, 395, 396, 397, 398, 0,
	0, 142, 394, 399, 400, 401, 0, 0, 0, 0,
	369, 386, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 0, 0, 0, 0, 429,
	0, 385, 0, 0, 378, 379, 381, 380, 382, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	428, 0, 0, 307, 0, 0, 426, 0, 245, 0,
	279, 172, 189, 138, 186, 123, 134, 0, 170, 219,
	253, 257, 0, 0, 0, 149, 0, 255, 231, 298,
	0, 235, 254, 194, 287, 246, 297, 308, 309, 283,
	305, 317, 271, 127, 281, 295, 143, 265, 0, 0,
	0, 129, 293, 278, 208, 183, 184, 128, 0, 251,
	154, 166, 151, 222, 290, 291, 150, 320, 135, 304,
	131, 136, 303, 215, 286, 294, 209, 201, 130, 292,
	207, 200, 188, 160, 174, 243, 197, 244, 175, 212,
	211, 213, 0, 0, 0, 276, 301, 321, 140, 0,
	284, 313, 316, 0, 247, 141, 167, 159, 242, 165,
	191, 312, 314, 315, 214, 137, 177, 272, 187, 195,
	250, 319, 230, 256, 144, 300, 273, 416, 427, 422,
	423, 420, 421, 419, 418, 417, 430, 408, 409, 410,
	411, 413, 0, 424, 425, 412, 122, 132, 192, 318,
	248, 164, 302, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 125,
	133, 139, 145, 152, 158, 162, 169, 173, 176, 179,
	180, 181, 185, 199, 203, 204, 205, 206, 216, 217,
	218, 221, 224, 225, 226, 228, 229, 232, 236, 237,
	238, 239, 240, 241, 249, 252, 258, 259, 260, 261,
	262, 263, 264, 267, 268, 269, 270, 277, 280, 288,
	289, 299, 306, 310, 171, 296, 311, 223, 0, 0,
	0, 0, 372, 0, 0, 0, 156, 0, 371, 0,
	0, 0, 190, 0, 0, 234, 0, 266, 148, 198,
	196, 285, 161, 157, 155, 147, 178, 202, 233, 282,
	227, 415, 193, 0, 0, 274, 210, 0, 0, 0,
	0, 0, 406, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 146, 126, 220, 275, 163, 63, 0,
	0, 119, 120, 121, 393, 392, 395, 396, 397, 398,
	0, 0, 142, 394, 399, 400, 401, 0, 0, 0,
	0, 369, 386, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 456, 0, 0, 0,
	429, 0, 385, 0, 0, 378, 379, 381, 380, 382,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 428, 0, 0, 307, 0, 0, 426, 0, 245,
	0, 279, 172, 189, 138, 186, 123, 134, 0, 170,
	219, 253, 257, 0, 0, 0, 149, 0, 255, 231,
	298, 0, 235, 254, 194, 287, 246, 297, 308, 309,
	283, 305, 317, 271, 127, 281, 295, 143, 265, 0,
	0, 0, 129, 293, 278, 208, 183, 184, 128, 0,
	251, 154, 166, 151, 222, 290, 291, 150, 320, 135,
	304, 131, 136, 303, 215, 286, 294, 209, 201, 130,
	292, 207, 200, 188, 160, 174, 243, 197, 244, 175,
	212, 211, 213, 0, 0, 0, 276, 301, 321, 140,
	0, 284, 313, 316, 0, 247, 141, 167, 159, 242,
	165, 191, 312, 314, 315, 214, 137, 177, 272, 187,
	195, 250, 319, 230, 256, 144, 300, 273, 416, 427,
	422, 423, 420, 421, 419, 418, 417, 430, 408, 409,
	410, 411, 413, 0, 424, 425, 412, 122, 132, 192,
	318, 248, 164, 302, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	125, 133, 139, 145, 152, 158, 162, 169, 173, 176,
	179, 180, 181, 185, 199, 203, 204, 205, 206, 216,
	217, 218, 221, 224, 225, 226, 228, 229, 232, 236,
	237, 238, 239, 240, 241, 249, 252, 258, 259, 260,
	261, 262, 263, 264, 267, 268, 269, 270, 277, 280,
	288, 289, 299, 306, 310, 171, 296, 311, 223, 0,
	0, 0, 0, 372, 0, 0, 0, 156, 0, 371,
	0, 0, 0, 190, 0, 0, 234, 0, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 415, 193, 0, 0, 274, 210, 0, 0,
	0, 0, 0, 406, 407, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 146, 126, 220, 275, 163, 63,
	0, 0, 119, 120, 121, 393, 1015, 395, 396, 397,
	398, 0, 0, 142, 394, 399, 400, 401, 0, 0,
	0, 0, 369, 386, 0, 414, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 383, 384, 456, 0, 0,
	0, 429, 0, 385, 0, 0, 378, 379, 381, 380,
	382, 387, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 428, 0, 0, 307, 0, 0, 426, 0,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 0, 0, 0, 149, 0, 255,
	231, 298, 0, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 295, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 136, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 0, 0, 276, 301, 321,
	140, 0, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 214, 137, 177, 272,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 416,
	427, 422, 423, 420, 421, 419, 418, 417, 430, 408,
	409, 410, 411, 413, 0, 424, 425, 412, 122, 132,
	192, 318, 248, 164, 302, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 171, 296, 311, 223,
	0, 0, 0, 0, 372, 0, 0, 0, 156, 0,
	371, 0, 0, 0, 190, 0, 0, 234, 0, 266,
	148, 198, 196, 285, 161, 157, 155, 147, 178, 202,
	233, 282, 227, 415, 193, 0, 0, 274, 210, 0,
	0, 0, 0, 0, 406, 407, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 146, 126, 220, 275, 163,
	63, 0, 0, 119, 120, 121, 393, 1012, 395, 396,
	397, 398, 0, 0, 142, 394, 399, 400, 401, 0,
	0, 0, 0, 369, 386, 0, 414, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 383, 384, 456, 0,
	0, 0, 429, 0, 385, 0, 0, 378, 379, 381,
	380, 382, 387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 428, 0, 0, 307, 0, 0, 426,
	0, 245, 0, 279, 172, 189, 138, 186, 123, 134,
	0, 170, 219, 253, 257, 0, 0, 0, 149, 0,
	255, 231, 298, 0, 235, 254, 194, 287, 246, 297,
	308, 309, 283, 305, 317, 271, 127, 281, 295, 143,
	265, 0, 0, 0, 129, 293, 278, 208, 183, 184,
	128, 0, 251, 154, 166, 151, 222, 290, 291, 150,
	320, 135, 304, 131, 136, 303, 215, 286, 294, 209,
	201, 130, 292, 207, 200, 188, 160, 174, 243, 197,
	244, 175, 212, 211, 213, 0, 0, 0, 276, 301,
	321, 140, 0, 284, 313, 316, 0, 247, 141, 167,
	159, 242, 165, 191, 312, 314, 315, 214, 137, 177,
	272, 187, 195, 250, 319, 230, 256, 144, 300, 273,
	416, 427, 422, 423, 420, 421, 419, 418, 417, 430,
	408, 409, 410, 411, 413, 0, 424, 425, 412, 122,
	132, 192, 318, 248, 164, 302, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 125, 133, 139, 145, 152, 158, 162, 169,
	173, 176, 179, 180, 181, 185, 199, 203, 204, 205,
	206, 216, 217, 218, 221, 224, 225, 226, 228, 229,
	232, 236, 237, 238, 239, 240, 241, 249, 252, 258,
	259, 260, 261, 262, 263, 264, 267, 268, 269, 270,
	277, 280, 288, 289, 299, 306, 310, 171, 296, 311,
	437, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 223, 0, 0, 0, 0, 372, 0,
	0, 0, 156, 0, 371, 0, 0, 0, 190, 0,
	0, 234, 0, 266, 148, 198, 196, 285, 161, 157,
	155, 147, 178, 202, 233, 282, 227, 415, 193, 0,
	0, 274, 210, 0, 0, 0, 0, 0, 406, 407,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 146,
	126, 220, 275, 163, 63, 0, 0, 119, 120, 121,
	393, 392, 395, 396, 397, 398, 0, 0, 142, 394,
	399, 400, 401, 0, 0, 0, 0, 369, 386, 0,
	414, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	383, 384, 0, 0, 0, 0, 429, 0, 385, 0,
	0, 378, 379, 381, 380, 382, 387, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 428, 0, 0,
	307, 0, 0, 426, 0, 245, 0, 279, 172, 189,
	138, 186, 123, 134, 0, 170, 219, 253, 257, 0,
	0, 0, 149, 0, 255, 231, 298, 0, 235, 254,
	194, 287, 246, 297, 308, 309, 283, 305, 317, 271,
	127, 281, 295, 143, 265, 0, 0, 0, 129, 293,
	278, 208, 183, 184, 128, 0, 251, 154, 166, 151,
	222, 290, 291, 150, 320, 135, 304, 131, 136, 303,
	215, 286, 294, 209, 201, 130, 292, 207, 200, 188,
	160, 174, 243, 197, 244, 175, 212, 211, 213, 0,
	0, 0, 276, 301, 321, 140, 0, 284, 313, 316,
	0, 247, 141, 167, 159, 242, 165, 191, 312, 314,
	315, 214, 137, 177, 272, 187, 195, 250, 319, 230,
	256, 144, 300, 273, 416, 427, 422, 423, 420, 421,
	419, 418, 417, 430, 408, 409, 410, 411, 413, 0,
	424, 425, 412, 122, 132, 192, 318, 248, 164, 302,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 125, 133, 139, 145,
	152, 158, 162, 169, 173, 176, 179, 180, 181, 185,
	199, 203, 204, 205, 206, 216, 217, 218, 221, 224,
	225, 226, 228, 229, 232, 236, 237, 238, 239, 240,
	241, 249, 252, 258, 259, 260, 261, 262, 263, 264,
	267, 268, 269, 270, 277, 280, 288, 289, 299, 306,
	310, 171, 296, 311, 223, 0, 0, 0, 0, 372,
	0, 0, 0, 156, 0, 371, 0, 0, 0, 190,
	0, 0, 234, 0, 266, 148, 198, 196, 285, 161,
	157, 155, 147, 178, 202, 233, 282, 227, 415, 193,
	0, 0, 274, 210, 0, 0, 0, 0, 0, 406,
	407, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	146, 126, 220, 275, 163, 63, 0, 0, 119, 120,
	121, 393, 392, 395, 396, 397, 398, 0, 0, 142,
	394, 399, 400, 401, 0, 0, 0, 0, 369, 386,
	0, 414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 383, 384, 0, 0, 0, 0, 429, 0, 385,
	0, 0, 378, 379, 381, 380, 382, 387, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 428, 0,
	0, 307, 0, 0, 426, 0, 245, 0, 279, 172,
	189, 138, 186, 123, 134, 0, 170, 219, 253, 257,
	0, 0, 0, 149, 0, 255, 231, 298, 0, 235,
	254, 194, 287, 246, 297, 308, 309, 283, 305, 317,
	271, 127, 281, 295, 143, 265, 0, 0, 0, 129,
	293, 278, 208, 183, 184, 128, 0, 251, 154, 166,
	151, 222, 290, 291, 150, 320, 135, 304, 131, 136,
	303, 215, 286, 294, 209, 201, 130, 292, 207, 200,
	188, 160, 174, 243, 197, 244, 175, 212, 211, 213,
	0, 0, 0, 276, 301, 321, 140, 0, 284, 313,
	316, 0, 247, 141, 167, 159, 242, 165, 191, 312,
	314, 315, 214, 137, 177, 272, 187, 195, 250, 319,
	230, 256, 144, 300, 273, 416, 427, 422, 423, 420,
	421, 419, 418, 417, 430, 408, 409, 410, 411, 413,
	0, 424, 425, 412, 122, 132, 192, 318, 248, 164,
	302, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 125, 133, 139,
	145, 152, 158, 162, 169, 173, 176, 179, 180, 181,
	185, 199, 203, 204, 205, 206, 216, 217, 218, 221,
	224, 225, 226, 228, 229, 232, 236, 237, 238, 239,
	240, 241, 249, 252, 258, 259, 260, 261, 262, 263,
	264, 267, 268, 269, 270, 277, 280, 288, 289, 299,
	306, 310, 171, 296, 311, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	190, 0, 0, 234, 0, 266, 148, 198, 196, 285,
	161, 157, 155, 147, 178, 202, 233, 282, 227, 415,
	193, 0, 0, 274, 210, 0, 0, 0, 0, 0,
	406, 407, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 146, 126, 220, 275, 163, 63, 0, 0, 119,
	120, 121, 393, 392, 395, 396, 397, 398, 0, 0,
	142, 394, 399, 400, 401, 0, 0, 0, 0, 0,
	386, 0, 414, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 383, 384, 0, 0, 0, 0, 429, 0,
	385, 0, 0, 378, 379, 381, 380, 382, 387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 428,
	0, 0, 307, 0, 0, 426, 0, 245, 0, 279,
	172, 189, 138, 186, 123, 134, 0, 170, 219, 253,
	257, 0, 0, 0, 149, 0, 255, 231, 298, 1767,
	235, 254, 194, 287, 246, 297, 308, 309, 283, 305,
	317, 271, 127, 281, 295, 143, 265, 0, 0, 0,
	129, 293, 278, 208, 183, 184, 128, 0, 251, 154,
	166, 151, 222, 290, 291, 150, 320, 135, 304, 131,
	136, 303, 215, 286, 294, 209, 201, 130, 292, 207,
	200, 188, 160, 174, 243, 197, 244, 175, 212, 211,
	213, 0, 0, 0, 276, 301, 321, 140, 0, 284,
	313, 316, 0, 247, 141, 167, 159, 242, 165, 191,
	312, 314, 315, 214, 137, 177, 272, 187, 195, 250,
	319, 230, 256, 144, 300, 273, 416, 427, 422, 423,
	420, 421, 419, 418, 417, 430, 408, 409, 410, 411,
	413, 0, 424, 425, 412, 122, 132, 192, 318, 248,
	164, 302, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 125, 133,
	139, 145, 152, 158, 162, 169, 173, 176, 179, 180,
	181, 185, 199, 203, 204, 205, 206, 216, 217, 218,
	221, 224, 225, 226, 228, 229, 232, 236, 237, 238,
	239, 240, 241, 249, 252, 258, 259, 260, 261, 262,
	263, 264, 267, 268, 269, 270, 277, 280, 288, 289,
	299, 306, 310, 171, 296, 311, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 190, 0, 0, 234, 0, 266, 148, 198, 196,
	285, 161, 157, 155, 147, 178, 202, 233, 282, 227,
	415, 193, 0, 0, 274, 210, 0, 0, 0, 0,
	0, 406, 407, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 146, 126, 220, 275, 163, 63, 0, 444,
	119, 120, 121, 393, 392, 395, 396, 397, 398, 0,
	0, 142, 394, 399, 400, 401, 0, 0, 0, 0,
	0, 386, 0, 414, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 383, 384, 0, 0, 0, 0, 429,
	0, 385, 0, 0, 378, 379, 381, 380, 382, 387,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	428, 0, 0, 307, 0, 0, 426, 0, 245, 0,
	279, 172, 189, 138, 186, 123, 134, 0, 170, 219,
	253, 257, 0, 0, 0, 149, 0, 255, 231, 298,
	0, 235, 254, 194, 287, 246, 297, 308, 309, 283,
	305, 317, 271, 127, 281, 295, 143, 265, 0, 0,
	0, 129, 293, 278, 208, 183, 184, 128, 0, 251,
	154, 166, 151, 222, 290, 291, 150, 320, 135, 304,
	131, 136, 303, 215, 286, 294, 209, 201, 130, 292,
	207, 200, 188, 160, 174, 243, 197, 244, 175, 212,
	211, 213, 0, 0, 0, 276, 301, 321, 140, 0,
	284, 313, 316, 0, 247, 141, 167, 159, 242, 165,
	191, 312, 314, 315, 214, 137, 177, 272, 187, 195,
	250, 319, 230, 256, 144, 300, 273, 416, 427, 422,
	423, 420, 421, 419, 418, 417, 430, 408, 409, 410,
	411, 413, 0, 424, 425, 412, 122, 132, 192, 318,
	248, 164, 302, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 125,
	133, 139, 145, 152, 158, 162, 169, 173, 176, 179,
	180, 181, 185, 199, 203, 204, 205, 206, 216, 217,
	218, 221, 224, 225, 226, 228, 229, 232, 236, 237,
	238, 239, 240, 241, 249, 252, 258, 259, 260, 261,
	262, 263, 264, 267, 268, 269, 270, 277, 280, 288,
	289, 299, 306, 310, 171, 296, 311, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 190, 0, 0, 234, 0, 266, 148, 198,
	196, 285, 161, 157, 155, 147, 178, 202, 233, 282,
	227, 415, 193, 0, 0, 274, 210, 0, 0, 0,
	0, 0, 406, 407, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 146, 126, 220, 275, 163, 63, 0,
	0, 119, 120, 121, 393, 392, 395, 396, 397, 398,
	0, 0, 142, 394, 399, 400, 401, 0, 0, 0,
	0, 0, 386, 0, 414, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 383, 384, 0, 0, 0, 0,
	429, 0, 385, 0, 0, 378, 379, 381, 380, 382,
	387, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 428, 0, 0, 307, 0, 0, 426, 0, 245,
	0, 279, 172, 189, 138, 186, 123, 134, 0, 170,
	219, 253, 257, 0, 0, 0, 149, 0, 255, 231,
	298, 0, 235, 254, 194, 287, 246, 297, 308, 309,
	283, 305, 317, 271, 127, 281, 295, 143, 265, 0,
	0, 0, 129, 293, 278, 208, 183, 184, 128, 0,
	251, 154, 166, 151, 222, 290, 291, 150, 320, 135,
	304, 131, 136, 303, 215, 286, 294, 209, 201, 130,
	292, 207, 200, 188, 160, 174, 243, 197, 244, 175,
	212, 211, 213, 0, 0, 0, 276, 301, 321, 140,
	0, 284, 313, 316, 0, 247, 141, 167, 159, 242,
	165, 191, 312, 314, 315, 214, 137, 177, 272, 187,
	195, 250, 319, 230, 256, 144, 300, 273, 416, 427,
	422, 423, 420, 421, 419, 418, 417, 430, 408, 409,
	410, 411, 413, 0, 424, 425, 412, 122, 132, 192,
	318, 248, 164, 302, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	125, 133, 139, 145, 152, 158, 162, 169, 173, 176,
	179, 180, 181, 185, 199, 203, 204, 205, 206, 216,
	217, 218, 221, 224, 225, 226, 228, 229, 232, 236,
	237, 238, 239, 240, 241, 249, 252, 258, 259, 260,
	261, 262, 263, 264, 267, 268, 269, 270, 277, 280,
	288, 289, 299, 306, 310, 171, 296, 311, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 190, 0, 0, 234, 0, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 0, 193, 0, 0, 274, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 146, 126, 220, 275, 163, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 705, 704, 714, 715, 707, 708, 709, 710, 711,
	712, 713, 706, 0, 0, 716, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 168, 0, 0, 0, 307, 0, 0, 0, 0,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 0, 0, 0, 149, 0, 255,
	231, 298, 0, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 295, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 136, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 0, 0, 276, 301, 321,
	140, 0, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 214, 137, 177, 272,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 132,
	192, 318, 248, 164, 302, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 171, 296, 311, 223,
	0, 0, 0, 801, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 190, 0, 0, 234, 0, 266,
	148, 198, 196, 285, 161, 157, 155, 147, 178, 202,
	233, 282, 227, 0, 193, 0, 0, 274, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 146, 126, 220, 275, 163,
	0, 0, 0, 119, 120, 121, 0, 803, 0, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	694, 695, 693, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 696, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 307, 0, 0, 0,
	0, 245, 0, 279, 172, 189, 138, 186, 123, 134,
	0, 170, 219, 253, 257, 0, 0, 0, 149, 0,
	255, 231, 298, 0, 235, 254, 194, 287, 246, 297,
	308, 309, 283, 305, 317, 271, 127, 281, 295, 143,
	265, 0, 0, 0, 129, 293, 278, 208, 183, 184,
	128, 0, 251, 154, 166, 151, 222, 290, 291, 150,
	320, 135, 304, 131, 136, 303, 215, 286, 294, 209,
	201, 130, 292, 207, 200, 188, 160, 174, 243, 197,
	244, 175, 212, 211, 213, 0, 0, 0, 276, 301,
	321, 140, 0, 284, 313, 316, 0, 247, 141, 167,
	159, 242, 165, 191, 312, 314, 315, 214, 137, 177,
	272, 187, 195, 250, 319, 230, 256, 144, 300, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	132, 192, 318, 248, 164, 302, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 125, 133, 139, 145, 152, 158, 162, 169,
	173, 176, 179, 180, 181, 185, 199, 203, 204, 205,
	206, 216, 217, 218, 221, 224, 225, 226, 228, 229,
	232, 236, 237, 238, 239, 240, 241, 249, 252, 258,
	259, 260, 261, 262, 263, 264, 267, 268, 269, 270,
	277, 280, 288, 289, 299, 306, 310, 171, 296, 311,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	1129, 0, 0, 0, 0, 190, 0, 0, 234, 0,
	266, 148, 198, 196, 285, 161, 157, 155, 147, 178,
	202, 233, 282, 227, 0, 193, 0, 0, 274, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 146, 126, 220, 275,
	163, 0, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 1128, 307, 0, 0,
	0, 1124, 1121, 0, 1122, 1123, 189, 604, 186, 123,
	134, 1119, 1126, 219, 253, 257, 0, 0, 0, 149,
	0, 255, 231, 298, 0, 235, 254, 194, 287, 246,
	297, 308, 309, 283, 305, 317, 271, 127, 281, 295,
	143, 265, 0, 0, 0, 129, 293, 278, 208, 183,
	184, 128, 0, 251, 154, 166, 151, 222, 290, 291,
	150, 320, 135, 304, 131, 136, 303, 215, 286, 294,
	209, 201, 130, 292, 207, 200, 188, 160, 174, 243,
	197, 244, 175, 212, 211, 213, 0, 0, 0, 276,
	301, 321, 140, 0, 284, 313, 316, 0, 247, 141,
	167, 159, 242, 165, 191, 312, 314, 315, 214, 137,
	177, 272, 187, 195, 250, 319, 230, 256, 144, 300,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 132, 192, 318, 248, 164, 302, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 125, 133, 139, 145, 152, 158, 162,
	169, 173, 176, 179, 180, 181, 185, 199, 203, 204,
	205, 206, 216, 217, 218, 221, 224, 225, 226, 228,
	229, 232, 236, 237, 238, 239, 240, 241, 249, 252,
	258, 259, 260, 261, 262, 263, 264, 267, 268, 269,
	270, 277, 280, 288, 289, 299, 306, 310, 171, 296,
	311, 31, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 190,
	0, 0, 234, 0, 266, 148, 198, 196, 285, 161,
	157, 155, 147, 178, 202, 233, 282, 227, 0, 193,
	0, 0, 274, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	146, 126, 220, 275, 163, 63, 0, 444, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 307, 0, 0, 0, 0, 245, 0, 279, 172,
	189, 138, 186, 123, 134, 0, 170, 219, 253, 257,
	0, 0, 0, 149, 0, 255, 231, 298, 0, 235,
	254, 194, 287, 246, 297, 308, 309, 283, 305, 317,
	271, 127, 281, 295, 143, 265, 0, 0, 0, 129,
	293, 278, 208, 183, 184, 128, 0, 251, 154, 166,
	151, 222, 290, 291, 150, 320, 135, 304, 131, 136,
	303, 215, 286, 294, 209, 201, 130, 292, 207, 200,
	188, 160, 174, 243, 197, 244, 175, 212, 211, 213,
	0, 0, 0, 276, 301, 321, 140, 0, 284, 313,
	316, 0, 247, 141, 167, 159, 242, 165, 191, 312,
	314, 315, 214, 137, 177, 272, 187, 195, 250, 319,
	230, 256, 144, 300, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 132, 192, 318, 248, 164,
	302, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 125, 133, 139,
	145, 152, 158, 162, 169, 173, 176, 179, 180, 181,
	185, 199, 203, 204, 205, 206, 216, 217, 218, 221,
	224, 225, 226, 228, 229, 232, 236, 237, 238, 239,
	240, 241, 249, 252, 258, 259, 260, 261, 262, 263,
	264, 267, 268, 269, 270, 277, 280, 288, 289, 299,
	306, 310, 171, 296, 311, 223, 0, 0, 0, 1086,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	190, 0, 0, 234, 0, 266, 148, 198, 196, 285,
	161, 157, 155, 147, 178, 202, 233, 282, 227, 0,
	193, 0, 0, 274, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 146, 126, 220, 275, 163, 0, 0, 0, 119,
	120, 121, 0, 1088, 0, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 307, 0, 0, 0, 0, 245, 0, 279,
	172, 189, 138, 186, 123, 134, 0, 170, 219, 253,
	257, 0, 0, 0, 149, 0, 255, 231, 298, 0,
	235, 254, 194, 287, 246, 297, 308, 309, 283, 305,
	317, 271, 127, 281, 295, 143, 265, 0, 0, 0,
	129, 293, 278, 208, 183, 184, 128, 0, 251, 154,
	166, 151, 222, 290, 291, 150, 320, 135, 304, 131,
	136, 303, 215, 286, 294, 209, 201, 130, 292, 207,
	200, 188, 160, 174, 243, 197, 244, 175, 212, 211,
	213, 0, 0, 0, 276, 301, 321, 140, 0, 284,
	313, 316, 0, 247, 141, 167, 159, 242, 165, 191,
	312, 314, 315, 214, 137, 177, 272, 187, 195, 250,
	319, 230, 256, 144, 300, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 132, 192, 318, 248,
	164, 302, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 125, 133,
	139, 145, 152, 158, 162, 169, 173, 176, 179, 180,
	181, 185, 199, 203, 204, 205, 206, 216, 217, 218,
	221, 224, 225, 226, 228, 229, 232, 236, 237, 238,
	239, 240, 241, 249, 252, 258, 259, 260, 261, 262,
	263, 264, 267, 268, 269, 270, 277, 280, 288, 289,
	299, 306, 310, 171, 296, 311, 31, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 190, 0, 0, 234, 0, 266,
	148, 198, 196, 285, 161, 157, 155, 147, 178, 202,
	233, 282, 227, 0, 193, 0, 0, 274, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 146, 126, 220, 275, 163,
	63, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 0, 0, 307, 0, 0, 0,
	0, 245, 0, 279, 172, 189, 138, 186, 123, 134,
	0, 170, 219, 253, 257, 0, 0, 0, 149, 0,
	255, 231, 298, 0, 235, 254, 194, 287, 246, 297,
	308, 309, 283, 305, 317, 271, 127, 281, 295, 143,
	265, 0, 0, 0, 129, 293, 278, 208, 183, 184,
	128, 0, 251, 154, 166, 151, 222, 290, 291, 150,
	320, 135, 304, 131, 136, 303, 215, 286, 294, 209,
	201, 130, 292, 207, 200, 188, 160, 174, 243, 197,
	244, 175, 212, 211, 213, 0, 0, 0, 276, 301,
	321, 140, 0, 284, 313, 316, 0, 247, 141, 167,
	159, 242, 165, 191, 312, 314, 315, 214, 137, 177,
	272, 187, 195, 250, 319, 230, 256, 144, 300, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	132, 192, 318, 248, 164, 302, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 125, 133, 139, 145, 152, 158, 162, 169,
	173, 176, 179, 180, 181, 185, 199, 203, 204, 205,
	206, 216, 217, 218, 221, 224, 225, 226, 228, 229,
	232, 236, 237, 238, 239, 240, 241, 249, 252, 258,
	259, 260, 261, 262, 263, 264, 267, 268, 269, 270,
	277, 280, 288, 289, 299, 306, 310, 171, 296, 311,
	223, 0, 0, 0, 1086, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 190, 0, 0, 234, 0,
	266, 148, 198, 196, 285, 161, 157, 155, 147, 178,
	202, 233, 282, 227, 0, 193, 0, 0, 274, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 146, 126, 220, 275,
	163, 0, 0, 0, 119, 120, 121, 0, 1088, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 307, 0, 0,
	0, 0, 245, 0, 279, 172, 189, 138, 186, 123,
	134, 0, 170, 219, 253, 257, 0, 0, 0, 149,
	0, 255, 231, 298, 0, 1084, 254, 194, 287, 246,
	297, 308, 309, 283, 305, 317, 271, 127, 281, 295,
	143, 265, 0, 0, 0, 129, 293, 278, 208, 183,
	184, 128, 0, 251, 154, 166, 151, 222, 290, 291,
	150, 320, 135, 304, 131, 136, 303, 215, 286, 294,
	209, 201, 130, 292, 207, 200, 188, 160, 174, 243,
	197, 244, 175, 212, 211, 213, 0, 0, 0, 276,
	301, 321, 140, 0, 284, 313, 316, 0, 247, 141,
	167, 159, 242, 165, 191, 312, 314, 315, 214, 137,
	177, 272, 187, 195, 250, 319, 230, 256, 144, 300,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 132, 192, 318, 248, 164, 302, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 125, 133, 139, 145, 152, 158, 162,
	169, 173, 176, 179, 180, 181, 185, 199, 203, 204,
	205, 206, 216, 217, 218, 221, 224, 225, 226, 228,
	229, 232, 236, 237, 238, 239, 240, 241, 249, 252,
	258, 259, 260, 261, 262, 263, 264, 267, 268, 269,
	270, 277, 280, 288, 289, 299, 306, 310, 171, 296,
	311, 223, 0, 0, 0, 0, 0, 0, 0, 0,
	156, 0, 0, 0, 0, 0, 190, 0, 0, 234,
	0, 266, 148, 198, 196, 285, 161, 157, 155, 147,
	178, 202, 233, 282, 227, 0, 193, 0, 0, 274,
	210, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 182, 146, 126, 220,
	275, 163, 0, 0, 0, 119, 120, 121, 0, 0,
	1051, 0, 0, 1052, 0, 0, 142, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 168, 0, 0, 0, 307, 0,
	0, 0, 0, 245, 0, 279, 172, 189, 138, 186,
	123, 134, 0, 170, 219, 253, 257, 0, 0, 0,
	149, 0, 255, 231, 298, 0, 235, 254, 194, 287,
	246, 297, 308, 309, 283, 305, 317, 271, 127, 281,
	295, 143, 265, 0, 0, 0, 129, 293, 278, 208,
	183, 184, 128, 0, 251, 154, 166, 151, 222, 290,
	291, 150, 320, 135, 304, 131, 136, 303, 215, 286,
	294, 209, 201, 130, 292, 207, 200, 188, 160, 174,
	243, 197, 244, 175, 212, 211, 213, 0, 0, 0,
	276, 301, 321, 140, 0, 284, 313, 316, 0, 247,
	141, 167, 159, 242, 165, 191, 312, 314, 315, 214,
	137, 177, 272, 187, 195, 250, 319, 230, 256, 144,
	300, 273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 132, 192, 318, 248, 164, 302, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 124, 125, 133, 139, 145, 152, 158,
	162, 169, 173, 176, 179, 180, 181, 185, 199, 203,
	204, 205, 206, 216, 217, 218, 221, 224, 225, 226,
	228, 229, 232, 236, 237, 238, 239, 240, 241, 249,
	252, 258, 259, 260, 261, 262, 263, 264, 267, 268,
	269, 270, 277, 280, 288, 289, 299, 306, 310, 171,
	296, 311, 223, 0, 0, 0, 0, 0, 0, 0,
	0, 156, 0, 835, 0, 0, 0, 190, 0, 0,
	234, 0, 266, 148, 198, 196, 285, 161, 157, 155,
	147, 178, 202, 233, 282, 227, 0, 193, 0, 0,
	274, 210, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 182, 146, 126,
	220, 275, 163, 0, 0, 0, 119, 120, 121, 0,
	834, 0, 0, 0, 0, 0, 0, 142, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 168, 0, 0, 0, 307,
	0, 0, 0, 0, 245, 0, 279, 172, 189, 138,
	186, 123, 134, 0, 170, 219, 253, 257, 0, 0,
	0, 149, 0, 255, 231, 298, 0, 235, 254, 194,
	287, 246, 297, 308, 309, 283, 305, 317, 271, 127,
	281, 295, 143, 265, 0, 0, 0, 129, 293, 278,
	208, 183, 184, 128, 0, 251, 154, 166, 151, 222,
	290, 291, 150, 320, 135, 304, 131, 136, 303, 215,
	286, 294, 209, 201, 130, 292, 207, 200, 188, 160,
	174, 243, 197, 244, 175, 212, 211, 213, 0, 0,
	0, 276, 301, 321, 140, 0, 284, 313, 316, 0,
	247, 141, 167, 159, 242, 165, 191, 312, 314, 315,
	214, 137, 177, 272, 187, 195, 250, 319, 230, 256,
	144, 300, 273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 132, 192, 318, 248, 164, 302, 0,
	0, 153, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 125, 133, 139, 145, 152,
	158, 162, 169, 173, 176, 179, 180, 181, 185, 199,
	203, 204, 205, 206, 216, 217, 218, 221, 224, 225,
	226, 228, 229, 232, 236, 237, 238, 239, 240, 241,
	249, 252, 258, 259, 260, 261, 262, 263, 264, 267,
	268, 269, 270, 277, 280, 288, 289, 299, 306, 310,
	171, 296, 311, 223, 0, 0, 0, 0, 0, 0,
	0, 0, 156, 0, 0, 0, 0, 0, 190, 0,
	0, 234, 0, 266, 148, 198, 196, 285, 161, 157,
	155, 147, 178, 202, 233, 282, 227, 0, 193, 0,
	0, 274, 210, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 182, 146,
	126, 220, 275, 163, 0, 0, 0, 119, 120, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 142, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 598, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 168, 0, 0, 0,
	307, 0, 0, 0, 0, 245, 0, 279, 172, 189,
	604, 186, 123, 134, 602, 170, 219, 253, 257, 0,
	0, 0, 149, 0, 255, 231, 298, 0, 235, 254,
	194, 287, 246, 297, 308, 309, 283, 305, 317, 271,
	127, 281, 295, 143, 265, 0, 0, 0, 129, 293,
	278, 208, 183, 184, 128, 0, 251, 154, 166, 151,
	222, 290, 291, 150, 320, 135, 304, 131, 136, 303,
	215, 286, 294, 209, 201, 130, 292, 207, 200, 188,
	160, 174, 243, 197, 244, 175, 212, 211, 213, 0,
	0, 0, 276, 301, 321, 140, 0, 284, 313, 316,
	0, 247, 141, 167, 159, 242, 165, 191, 312, 314,
	315, 214, 137, 177, 272, 187, 195, 250, 319, 230,
	256, 144, 300, 273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 132, 192, 318, 248, 164, 302,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 124, 125, 133, 139, 145,
	152, 158, 162, 169, 173, 176, 179, 180, 181, 185,
	199, 203, 204, 205, 206, 216, 217, 218, 221, 224,
	225, 226, 228, 229, 232, 236, 237, 238, 239, 240,
	241, 249, 252, 258, 259, 260, 261, 262, 263, 264,
	267, 268, 269, 270, 277, 280, 288, 289, 299, 306,
	310, 171, 296, 311, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 156, 0, 0, 0, 0, 0, 190,
	0, 0, 234, 0, 266, 148, 198, 196, 285, 161,
	157, 155, 147, 178, 202, 233, 282, 227, 0, 193,
	0, 0, 274, 210, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 182,
	146, 126, 220, 275, 163, 0, 0, 444, 119, 120,
	121, 0, 0, 0, 0, 0, 0, 0, 0, 142,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 168, 0, 0,
	0, 307, 0, 0, 0, 0, 245, 0, 279, 172,
	189, 138, 186, 123, 134, 0, 170, 219, 253, 257,
	0, 0, 0, 149, 0, 255, 231, 298, 0, 235,
	254, 194, 287, 246, 297, 308, 309, 283, 305, 317,
	271, 127, 281, 295, 143, 265, 0, 0, 0, 129,
	293, 278, 208, 183, 184, 128, 0, 251, 154, 166,
	151, 222, 290, 291, 150, 320, 135, 304, 131, 136,
	303, 215, 286, 294, 209, 201, 130, 292, 207, 200,
	188, 160, 174, 243, 197, 244, 175, 212, 211, 213,
	0, 0, 0, 276, 301, 321, 140, 0, 284, 313,
	316, 0, 247, 141, 167, 159, 242, 165, 191, 312,
	314, 315, 214, 137, 177, 272, 187, 195, 250, 319,
	230, 256, 144, 300, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 132, 192, 318, 248, 164,
	302, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 125, 133, 139,
	145, 152, 158, 162, 169, 173, 176, 179, 180, 181,
	185, 199, 203, 204, 205, 206, 216, 217, 218, 221,
	224, 225, 226, 228, 229, 232, 236, 237, 238, 239,
	240, 241, 249, 252, 258, 259, 260, 261, 262, 263,
	264, 267, 268, 269, 270, 277, 280, 288, 289, 299,
	306, 310, 171, 296, 311, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	190, 0, 0, 234, 0, 266, 148, 198, 196, 285,
	161, 157, 155, 147, 178, 202, 233, 282, 227, 0,
	193, 0, 0, 274, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 146, 126, 220, 275, 163, 63, 0, 0, 119,
	120, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 307, 0, 0, 0, 0, 245, 0, 279,
	172, 189, 138, 186, 123, 134, 0, 170, 219, 253,
	257, 0, 0, 0, 149, 0, 255, 231, 298, 0,
	235, 254, 194, 287, 246, 297, 308, 309, 283, 305,
	317, 271, 127, 281, 295, 143, 265, 0, 0, 0,
	129, 293, 278, 208, 183, 184, 128, 0, 251, 154,
	166, 151, 222, 290, 291, 150, 320, 135, 304, 131,
	136, 303, 215, 286, 294, 209, 201, 130, 292, 207,
	200, 188, 160, 174, 243, 197, 244, 175, 212, 211,
	213, 0, 0, 0, 276, 301, 321, 140, 0, 284,
	313, 316, 0, 247, 141, 167, 159, 242, 165, 191,
	312, 314, 315, 214, 137, 177, 272, 187, 195, 250,
	319, 230, 256, 144, 300, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 132, 192, 318, 248,
	164, 302, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 125, 133,
	139, 145, 152, 158, 162, 169, 173, 176, 179, 180,
	181, 185, 199, 203, 204, 205, 206, 216, 217, 218,
	221, 224, 225, 226, 228, 229, 232, 236, 237, 238,
	239, 240, 241, 249, 252, 258, 259, 260, 261, 262,
	263, 264, 267, 268, 269, 270, 277, 280, 288, 289,
	299, 306, 310, 171, 296, 311, 223, 0, 0, 0,
	0, 0, 0, 0, 0, 156, 0, 0, 0, 0,
	0, 190, 0, 0, 234, 0, 266, 148, 198, 196,
	285, 161, 157, 155, 147, 178, 202, 233, 282, 227,
	0, 193, 0, 0, 274, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 146, 126, 220, 275, 163, 0, 0, 0,
	119, 120, 121, 0, 1088, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 307, 0, 0, 0, 0, 245, 0,
	279, 172, 189, 138, 186, 123, 134, 0, 170, 219,
	253, 257, 0, 0, 0, 149, 0, 255, 231, 298,
	0, 235, 254, 194, 287, 246, 297, 308, 309, 283,
	305, 317, 271, 127, 281, 295, 143, 265, 0, 0,
	0, 129, 293, 278, 208, 183, 184, 128, 0, 251,
	154, 166, 151, 222, 290, 291, 150, 320, 135, 304,
	131, 136, 303, 215, 286, 294, 209, 201, 130, 292,
	207, 200, 188, 160, 174, 243, 197, 244, 175, 212,
	211, 213, 0, 0, 0, 276, 301, 321, 140, 0,
	284, 313, 316, 0, 247, 141, 167, 159, 242, 165,
	191, 312, 314, 315, 214, 137, 177, 272, 187, 195,
	250, 319, 230, 256, 144, 300, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 132, 192, 318,
	248, 164, 302, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 125,
	133, 139, 145, 152, 158, 162, 169, 173, 176, 179,
	180, 181, 185, 199, 203, 204, 205, 206, 216, 217,
	218, 221, 224, 225, 226, 228, 229, 232, 236, 237,
	238, 239, 240, 241, 249, 252, 258, 259, 260, 261,
	262, 263, 264, 267, 268, 269, 270, 277, 280, 288,
	289, 299, 306, 310, 171, 296, 311, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 190, 0, 0, 234, 0, 266, 148, 198,
	196, 285, 161, 157, 155, 147, 178, 202, 233, 282,
	227, 0, 193, 0, 0, 274, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 146, 126, 220, 275, 163, 0, 0,
	0, 119, 120, 121, 0, 803, 0, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 307, 0, 0, 0, 0, 245,
	0, 279, 172, 189, 138, 186, 123, 134, 0, 170,
	219, 253, 257, 0, 0, 0, 149, 0, 255, 231,
	298, 0, 235, 254, 194, 287, 246, 297, 308, 309,
	283, 305, 317, 271, 127, 281, 295, 143, 265, 0,
	0, 0, 129, 293, 278, 208, 183, 184, 128, 0,
	251, 154, 166, 151, 222, 290, 291, 150, 320, 135,
	304, 131, 136, 303, 215, 286, 294, 209, 201, 130,
	292, 207, 200, 188, 160, 174, 243, 197, 244, 175,
	212, 211, 213, 0, 0, 0, 276, 301, 321, 140,
	0, 284, 313, 316, 0, 247, 141, 167, 159, 242,
	165, 191, 312, 314, 315, 214, 137, 177, 272, 187,
	195, 250, 319, 230, 256, 144, 300, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 132, 192,
	318, 248, 164, 302, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	125, 133, 139, 145, 152, 158, 162, 169, 173, 176,
	179, 180, 181, 185, 199, 203, 204, 205, 206, 216,
	217, 218, 221, 224, 225, 226, 228, 229, 232, 236,
	237, 238, 239, 240, 241, 249, 252, 258, 259, 260,
	261, 262, 263, 264, 267, 268, 269, 270, 277, 280,
	288, 289, 299, 306, 310, 171, 296, 311, 817, 0,
	0, 0, 0, 0, 0, 223, 0, 0, 0, 0,
	0, 0, 0, 0, 156, 0, 0, 0, 0, 0,
	190, 0, 0, 234, 0, 266, 148, 198, 196, 285,
	161, 157, 155, 147, 178, 202, 233, 282, 227, 0,
	193, 0, 0, 274, 210, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	182, 146, 126, 220, 275, 163, 0, 0, 0, 119,
	120, 121, 0, 0, 0, 0, 0, 0, 0, 0,
	142, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 168, 0,
	0, 0, 307, 0, 0, 0, 0, 245, 0, 279,
	172, 189, 138, 186, 123, 134, 0, 170, 219, 253,
	257, 0, 0, 0, 149, 0, 255, 231, 298, 0,
	235, 254, 194, 287, 246, 297, 308, 309, 283, 305,
	317, 271, 127, 281, 295, 143, 265, 0, 0, 0,
	129, 293, 278, 208, 183, 184, 128, 0, 251, 154,
	166, 151, 222, 290, 291, 150, 320, 135, 304, 131,
	136, 303, 215, 286, 294, 209, 201, 130, 292, 207,
	200, 188, 160, 174, 243, 197, 244, 175, 212, 211,
	213, 0, 0, 0, 276, 301, 321, 140, 0, 284,
	313, 316, 0, 247, 141, 167, 159, 242, 165, 191,
	312, 314, 315, 214, 137, 177, 272, 187, 195, 250,
	319, 230, 256, 144, 300, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 132, 192, 318, 248,
	164, 302, 0, 0, 153, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 125, 133,
	139, 145, 152, 158, 162, 169, 173, 176, 179, 180,
	181, 185, 199, 203, 204, 205, 206, 216, 217, 218,
	221, 224, 225, 226, 228, 229, 232, 236, 237, 238,
	239, 240, 241, 249, 252, 258, 259, 260, 261, 262,
	263, 264, 267, 268, 269, 270, 277, 280, 288, 289,
	299, 306, 310, 171, 296, 311, 223, 0, 0, 0,
	0, 0, 0, 0, 807, 156, 0, 0, 0, 0,
	0, 190, 0, 0, 234, 0, 266, 148, 198, 196,
	285, 161, 157, 155, 147, 178, 202, 233, 282, 227,
	0, 193, 0, 0, 274, 210, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 182, 146, 126, 220, 275, 163, 0, 0, 0,
	119, 120, 121, 0, 0, 0, 0, 0, 0, 0,
	0, 142, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 168,
	0, 0, 0, 307, 0, 0, 0, 0, 245, 0,
	279, 172, 189, 138, 186, 123, 134, 0, 170, 219,
	253, 257, 0, 0, 0, 149, 0, 255, 231, 298,
	0, 235, 254, 194, 287, 246, 297, 308, 309, 283,
	305, 317, 271, 127, 281, 295, 143, 265, 0, 0,
	0, 129, 293, 278, 208, 183, 184, 128, 0, 251,
	154, 166, 151, 222, 290, 291, 150, 320, 135, 304,
	131, 136, 303, 215, 286, 294, 209, 201, 130, 292,
	207, 200, 188, 160, 174, 243, 197, 244, 175, 212,
	211, 213, 0, 0, 0, 276, 301, 321, 140, 0,
	284, 313, 316, 0, 247, 141, 167, 159, 242, 165,
	191, 312, 314, 315, 214, 137, 177, 272, 187, 195,
	250, 319, 230, 256, 144, 300, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 132, 192, 318,
	248, 164, 302, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 125,
	133, 139, 145, 152, 158, 162, 169, 173, 176, 179,
	180, 181, 185, 199, 203, 204, 205, 206, 216, 217,
	218, 221, 224, 225, 226, 228, 229, 232, 236, 237,
	238, 239, 240, 241, 249, 252, 258, 259, 260, 261,
	262, 263, 264, 267, 268, 269, 270, 277, 280, 288,
	289, 299, 306, 310, 171, 296, 311, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 156, 0, 0, 0,
	0, 0, 190, 0, 0, 234, 0, 266, 148, 198,
	196, 285, 161, 157, 155, 147, 178, 202, 233, 282,
	227, 0, 193, 0, 0, 274, 210, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 182, 146, 126, 220, 275, 163, 0, 0,
	0, 119, 120, 121, 0, 683, 0, 0, 0, 0,
	0, 0, 142, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	168, 0, 0, 0, 307, 0, 0, 0, 0, 245,
	0, 279, 172, 189, 138, 186, 123, 134, 0, 170,
	219, 253, 257, 0, 0, 0, 149, 0, 255, 231,
	298, 0, 235, 254, 194, 287, 246, 297, 308, 309,
	283, 305, 317, 271, 127, 281, 295, 143, 265, 0,
	0, 0, 129, 293, 278, 208, 183, 184, 128, 0,
	251, 154, 166, 151, 222, 290, 291, 150, 320, 135,
	304, 131, 136, 303, 215, 286, 294, 209, 201, 130,
	292, 207, 200, 188, 160, 174, 243, 197, 244, 175,
	212, 211, 213, 0, 0, 0, 276, 301, 321, 140,
	0, 284, 313, 316, 0, 247, 141, 167, 159, 242,
	165, 191, 312, 314, 315, 214, 137, 177, 272, 187,
	195, 250, 319, 230, 256, 144, 300, 273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 132, 192,
	318, 248, 164, 302, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	125, 133, 139, 145, 152, 158, 162, 169, 173, 176,
	179, 180, 181, 185, 199, 203, 204, 205, 206, 216,
	217, 218, 221, 224, 225, 226, 228, 229, 232, 236,
	237, 238, 239, 240, 241, 249, 252, 258, 259, 260,
	261, 262, 263, 264, 267, 268, 269, 270, 277, 280,
	288, 289, 299, 306, 310, 171, 296, 311, 223, 0,
	0, 0, 0, 0, 0, 0, 0, 156, 0, 0,
	0, 0, 0, 190, 0, 0, 234, 0, 266, 148,
	198, 196, 285, 161, 157, 155, 147, 178, 202, 233,
	282, 227, 0, 193, 0, 0, 274, 210, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 182, 146, 126, 220, 275, 163, 0,
	0, 0, 119, 120, 121, 0, 0, 0, 0, 0,
	0, 0, 0, 142, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 360,
	0, 168, 0, 0, 0, 307, 0, 0, 0, 0,
	245, 0, 279, 172, 189, 138, 186, 123, 134, 0,
	170, 219, 253, 257, 0, 0, 0, 149, 0, 255,
	231, 298, 0, 235, 254, 194, 287, 246, 297, 308,
	309, 283, 305, 317, 271, 127, 281, 295, 143, 265,
	0, 0, 0, 129, 293, 278, 208, 183, 184, 128,
	0, 251, 154, 166, 151, 222, 290, 291, 150, 320,
	135, 304, 131, 136, 303, 215, 286, 294, 209, 201,
	130, 292, 207, 200, 188, 160, 174, 243, 197, 244,
	175, 212, 211, 213, 0, 0, 0, 276, 301, 321,
	140, 0, 284, 313, 316, 0, 247, 141, 167, 159,
	242, 165, 191, 312, 314, 315, 214, 137, 177, 272,
	187, 195, 250, 319, 230, 256, 144, 300, 273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 132,
	192, 318, 248, 164, 302, 0, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 125, 133, 139, 145, 152, 158, 162, 169, 173,
	176, 179, 180, 181, 185, 199, 203, 204, 205, 206,
	216, 217, 218, 221, 224, 225, 226, 228, 229, 232,
	236, 237, 238, 239, 240, 241, 249, 252, 258, 259,
	260, 261, 262, 263, 264, 267, 268, 269, 270, 277,
	280, 288, 289, 299, 306, 310, 359, 296, 311, 223,
	0, 0, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 0, 190, 0, 0, 234, 0, 266,
	148, 198, 196, 285, 161, 157, 155, 147, 178, 202,
	233, 282, 227, 0, 193, 0, 0, 274, 210, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 182, 146, 126, 220, 275, 163,
	0, 0, 0, 119, 120, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 142, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 168, 0, 114, 0, 307, 0, 0, 0,
	0, 245, 0, 279, 172, 189, 138, 186, 123, 134,
	0, 170, 219, 253, 257, 0, 0, 0, 149, 0,
	255, 231, 298, 0, 235, 254, 194, 287, 246, 297,
	308, 309, 283, 305, 317, 271, 127, 281, 295, 143,
	265, 0, 0, 0, 129, 293, 278, 208, 183, 184,
	128, 0, 251, 154, 166, 151, 222, 290, 291, 150,
	320, 135, 304, 131, 136, 303, 215, 286, 294, 209,
	201, 130, 292, 207, 200, 188, 160, 174, 243, 197,
	244, 175, 212, 211, 213, 0, 0, 0, 276, 301,
	321, 140, 0, 284, 313, 316, 0, 247, 141, 167,
	159, 242, 165, 191, 312, 314, 315, 214, 137, 177,
	272, 187, 195, 250, 319, 230, 256, 144, 300, 273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	132, 192, 318, 248, 164, 302, 0, 0, 153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 125, 133, 139, 145, 152, 158, 162, 169,
	173, 176, 179, 180, 181, 185, 199, 203, 204, 205,
	206, 216, 217, 218, 221, 224, 225, 226, 228, 229,
	232, 236, 237, 238, 239, 240, 241, 249, 252, 258,
	259, 260, 261, 262, 263, 264, 267, 268, 269, 270,
	277, 280, 288, 289, 299, 306, 310, 171, 296, 311,
	223, 0, 0, 0, 0, 0, 0, 0, 0, 156,
	0, 0, 0, 0, 0, 190, 0, 0, 234, 0,
	266, 148, 198, 196, 285, 161, 157, 155, 147, 178,
	202, 233, 282, 227, 0, 193, 0, 0, 274, 210,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 182, 146, 126, 220, 275,
	163, 0, 0, 0, 119, 120, 121, 0, 0, 0,
	0, 0, 0, 0, 0, 142, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 168, 0, 0, 0, 307, 0, 0,
	0, 0, 245, 0, 279, 172, 189, 138, 186, 123,
	134, 0, 170, 219, 253, 257, 0, 0, 0, 149,
	0, 255, 231, 298, 0, 235, 254, 194, 287, 246,
	297, 308, 309, 283, 305, 317, 271, 127, 281, 295,
	143, 265, 0, 0, 0, 129, 293, 278, 208, 183,
	184, 128, 0, 251, 154, 166, 151, 222, 290, 291,
	150, 320, 135, 304, 131, 136, 303, 215, 286, 294,
	209, 201, 130, 292, 207, 200, 188, 160, 174, 243,
	197, 244, 175, 212, 211, 213, 0, 0, 0, 276,
	301, 321, 140, 0, 284, 313, 316, 0, 247, 141,
	167, 159, 242, 165, 191, 312, 314, 315, 214, 137,
	177, 272, 187, 195, 250, 319, 230, 256, 144, 300,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 132, 192, 318, 248, 164, 302, 0, 0, 153,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 124, 125, 133, 139, 145, 152, 158, 162,
	169, 173, 176, 179, 180, 181, 185, 199, 203, 204,
	205, 206, 216, 217, 218, 221, 224, 225, 226, 228,
	229, 232, 236, 237, 238, 239, 240, 241, 249, 252,
	258, 259, 260, 261, 262, 263, 264, 267, 268, 269,
	270, 277, 280, 288, 289, 299, 306, 310, 171, 296,
	311,
}
var yyPact = [...]int{

	231, -1000, -293, 1220, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1187,
	897, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 285, 862,
	49, 1125, -33, 163, 9, 18640, 161, 1820, 19011, -1000,
	30, -1000, 22, 19011, 26, 18269, -1000, -1000, -41, -42,
	-1000, 10445, 1066, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 889, 1175, 1181, 1200, 597, 1111, -1000, 8948, 8948,
	136, 136, 136, 7464, -1000, -1000, 15294, 19011, 19011, 19011,
	-132, 132, 122, 132, 513, -1000, -1000, -1000, 1125, -1000,
	-1000, 80, -1000, 160, 19011, 637, 637, 244, 19011, 128,
	637, 128, 128, 128, 19011, -1000, 197, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19011, 637, 1113, 348, 90, 266, 266, 266,
	-1000, 234, -1000, 5154, 63, 39, -49, 1209, 36, 8,
	-1000, 348, 5154, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 140, -1000, -1000, -1000, -1000, 19011, 17898, 150, 287,
	-1000, -1000, -1000, -1000, -1000, -1000, 642, 559, -1000, 10445,
	2384, 721, 721, -1000, -1000, 181, -1000, -1000, 11558, 11558,
	11558, 11558, 11558, 11558, 11558, 11558, 11558, 11558, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 721, 196, -1000, 10074, 721, 721, 721, 721,
	721, 721, 721, 721, 10445, 721, 721, 721, 721, 721,
	721, 721, 721, 721, 721, 721, 721, 721, 721, 721,
	721, -1000, -1000, -1000, 1187, -1000, 897, -1000, -1000, -1000,
	1108, 10445, 10445, 1187, -1000, 1018, 8948, -1000, -1000, 1055,
	-1000, -1000, -1000, -1000, 336, 1221, -1000, 12300, 190, 1219,
	17527, -1000, 16036, 17156, 821, 7079, -73, -1000, -1000, -1000,
	283, 14923, -1000, -1000, -1000, 1103, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 790, 19011, -1000,
	-1000, 3213, 637, -1000, 849, -1000, 769, -1000, 844, 5154,
	137, 19011, 288, 158, -1000, -1000, -1000, 637, 511, -1000,
	-1000, 1101, 271, 19011, 5154, 5154, 5154, 53, 93, 78,
	19011, 820, 139, 19011, 1169, 923, 19011, 637, 637, -1000,
	6309, -1000, 5154, 348, -1000, 507, 10445, 5154, 5154, 5154,
	19011, 5154, 5154, -1000, 497, -1000, -1000, 350, -1000, -1000,
	-1000, -1000, -1000, -1000, 5154, 5154, 338, 350, 338, -1000,
	-1000, -1000, -1000, 10445, 266, -1000, 914, -1000, -1000, 25,
	-1000, -1000, -1000, -1000, -1000, 1220, -1000, -1000, -1000, -136,
	-1000, -1000, 10445, 10445, 10445, 10445, 402, 246, 11558, 414,
	372, 11558, 11558, 11558, 11558, 11558, 11558, 11558, 11558, 11558,
	11558, 11558, 11558, 11558, 11558, 11558, 506, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 637, -1000, 1237, 604, 604,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 11929,
	7835, 6309, 597, 766, 1187, 8948, 8948, 10445, 10445, 9690,
	9319, 8948, 1121, 289, 559, 19011, -1000, -1000, 11187, -1000,
	-1000, -1000, -1000, -1000, 522, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 19011, 19011, 8948, 8948, 8948, 8948, 8948, -1000,
	1181, 597, 1055, 1151, 1232, 228, 528, 818, -1000, 384,
	1181, 14552, 855, -1000, 1055, -1000, -1000, -1000, 19011, -1000,
	-1000, 16778, -1000, -1000, 5924, 19011, 81, 19011, -1000, 675,
	989, -1000, -1000, -1000, 1172, 13810, 14181, 19011, 858, 750,
	-1000, -1000, 189, 6694, -73, -1000, 6694, 747, -1000, -95,
	-104, 8206, 206, -1000, -1000, -1000, -1000, 4384, 12671, 575,
	378, -48, -1000, -1000, -1000, 844, -1000, 844, 844, 844,
	844, -3, -3, -3, -3, -1000, -1000, -1000, -1000, -1000,
	860, 857, -1000, 844, 844, 844, 844, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 853, 853, 853, 845, 845, 108,
	10445, 85, 19011, 1166, 408, -1000, 19011, -1000, 1165, 637,
	-1000, -1000, 271, 720, -1000, 151, -1000, -1000, -1000, 19011,
	19011, 19011, 19011, 19011, 170, 19011, 19011, 811, -1000, 19011,
	5154, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 559,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 19011, -1000, -1000,
	-1000, -1000, 348, 19011, 19011, 19011, 348, 559, -1000, 19011,
	19011, -1000, -1000, -1000, -1000, -1000, 559, 246, 254, 318,
	-1000, -1000, 441, -1000, -1000, 754, -1000, -1000, -1000, -1000,
	414, 11558, 11558, 11558, 606, 754, 2090, 621, 1335, 209,
	314, 314, 208, 208, 208, 208, 208, 383, 383, -1000,
	-1000, -1000, 522, -1000, -1000, -1000, 522, 8948, 8948, 810,
	721, 188, -1000, 889, -1000, -1000, 1181, 755, 755, 505,
	682, 325, 1215, 755, 308, 1214, 755, 755, 8948, -1000,
	-1000, 296, -1000, 10445, 522, -1000, 186, -1000, 733, 792,
	772, 755, 522, 522, 755, 755, 1108, -1000, -1000, 1064,
	-1000, 1008, 10445, 10445, 10445, -1000, -1000, -1000, 1108, 1186,
	-1000, 1029, 1028, 1207, 8948, 16036, 1055, -1000, -1000, -1000,
	185, 1207, 843, 721, -1000, 19011, 16036, 16036, 16036, 16036,
	16036, -1000, 997, 954, -1000, 983, 929, 955, 19011, -1000,
	764, 597, 13810, 218, 721, -1000, 16407, -1000, -1000, 81,
	686, 16036, 19011, -1000, -1000, 16036, 19011, 5539, -1000, 747,
	-73, -107, -1000, -1000, -1000, -1000, 559, -1000, 631, 715,
	3999, -1000, -1000, -1000, -1000, 111, -1000, -1000, 852, 637,
	-1000, 1140, 279, 279, 263, 637, 1131, -1000, -1000, -1000,
	-1000, 1123, -1000, 303, -70, -1000, -1000, -3, -3, -1000,
	-1000, 206, 1086, 206, 206, 206, 493, 493, -1000, -1000,
	-1000, -1000, -1000, 395, -1000, -1000, -1000, 380, -1000, -1000,
	849, 562, 903, 85, -1000, 637, 271, 473, 1075, -1000,
	-1000, 565, 5154, -1000, 887, 571, -1000, -1000, -1000, 512,
	512, 280, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 76, 879, -1000, -1000, -1000, -1000, 24,
	43, 138, -1000, 5154, -1000, 338, -1000, -1000, -1000, 338,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 606, 754, 1975,
	-1000, 11558, 11558, -1000, -1000, 755, 755, 8948, 6309, 1187,
	1108, -1000, -1000, 366, 506, 366, 11558, 11558, -1000, 11558,
	11558, -1000, -147, 826, 264, -1000, 10445, 252, -1000, 6309,
	-1000, 11558, 11558, -1000, -1000, -1000, -1000, -1000, -1000, 439,
	464, 1006, 559, 559, -1000, -1000, 19011, -1000, -1000, -1000,
	-1000, 1205, 10445, -1000, 688, -1000, 4769, 1181, 913, 19011,
	721, 1220, 13055, 19011, 632, -1000, 277, 989, 875, 912,
	959, -1000, -1000, -1000, -1000, 938, -1000, 937, -1000, -1000,
	-1000, -1000, -1000, 597, -1000, 157, 155, 152, 19011, -1000,
	1207, 16036, 629, -1000, 629, -1000, 179, -1000, -1000, -1000,
	-105, -82, -1000, -1000, -1000, 4384, -1000, 4384, -1000, 19011,
	109, -1000, 637, 637, 637, -1000, -1000, -1000, 847, 898,
	11558, -1000, -1000, -1000, 206, 206, -1000, 284, -1000, -1000,
	-1000, 752, -1000, 738, 662, 731, 1, -1000, 867, 1081,
	271, 271, -1000, -1000, 369, -1000, 462, -1000, -1000, 892,
	19011, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	19011, -1000, -1000, -1000, -1000, -1000, 19011, -152, 637, 19011,
	19011, 19011, 19011, -1000, 348, 348, -1000, 11558, 754, 754,
	-1000, -1000, 522, -1000, 1181, -1000, 522, 844, 844, -1000,
	844, 845, -1000, 844, 15, 844, 14, 522, 522, 1923,
	1822, 1728, 1659, 721, -141, -1000, 559, 10445, -1000, 911,
	882, 459, -3, -1000, -1000, -1000, 1203, 1194, 559, -1000,
	-1000, -1000, 1147, 817, 620, -1000, -1000, 8577, 709, 1025,
	176, 705, -1000, 1187, 19011, 10445, -1000, -1000, 10445, 829,
	-1000, 10445, -1000, -1000, -1000, 1187, 721, 721, 721, 705,
	1187, 629, -1000, -1000, 178, -1000, -1000, -1000, 3999, -1000,
	698, -1000, 1131, -1000, -1000, -1000, 19011, -31, 1229, 754,
	-1000, -1000, -1000, -1000, -3, 458, -3, 361, -1000, 352,
	-1000, -1000, -224, -1000, -1000, 904, 919, -1000, -1000, 19011,
	-1000, -1000, -1000, -1000, -1000, 1150, -1000, 6309, -1000, -1000,
	825, 880, -1000, -1000, -1000, -1000, 754, -1000, 1108, -1000,
	-1000, 135, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	11558, 11558, 11558, 11558, 11558, 1181, 456, 559, 11558, 11558,
	-3, -52, -1000, 10445, 10445, 1129, -1000, 721, -1000, 888,
	19011, 721, 19011, -1000, 19011, 1181, -1000, 559, 559, 19011,
	559, 15665, 19011, 19011, 13426, 1181, -1000, 85, 695, -1000,
	255, -1000, -155, 206, -1000, 206, 558, 540, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 721, 660, -1000,
	262, 19011, 19011, -1000, -1000, -1000, 733, 733, 733, 733,
	61, 522, -1000, 733, 733, -286, -1000, 1063, 1061, 559,
	642, 1228, -1000, 721, 1220, 162, 620, -1000, -1000, -1000,
	622, 589, -1000, 589, 589, 218, -1000, -1000, 94, 19011,
	306, 1127, -1000, 1122, -1000, -1000, -1000, -1000, -1000, 75,
	6309, 4384, 554, -1000, -1000, -1000, -1000, -1000, 522, 86,
	-160, -1000, -1000, -1000, -52, 166, -1000, 1035, 1032, 1190,
	19011, 620, 19011, -1000, -1000, -1000, -1000, -1000, 19011, -1000,
	-1000, 442, -1000, -1000, 551, -1000, 19011, -1000, -1000, 879,
	-1000, 1005, -150, -180, 1041, 1047, 1047, 1061, 1188, 1056,
	1058, -1000, 410, 608, -1000, 734, -1000, -1000, 75, 1021,
	-152, -1000, 1004, -1000, 1039, 478, -1000, -1000, -1000, -1000,
	373, -1000, 1185, 1183, -1000, 19011, -1000, 72, -1000, -158,
	-1000, 429, -1000, -1000, -1000, 367, 351, 535, 62, -177,
	-1000, -1000, -1000, -1000, 890, 721, -183, 883, -1000, 1213,
	10816, -1000, -1000, 1224, 245, 245, 733, 522, -1000, -1000,
	-1000, 103, 394, -1000, -1000, -1000, -1000, -1000, -1000,
}
var yyPgo = [...]int{

	0, 1493, 1492, 25, 81, 76, 1491, 1490, 1488, 1487,
	117, 116, 114, 1486, 1485, 1484, 1482, 1481, 1480, 1479,
	1478, 1477, 1474, 1473, 1472, 1470, 489, 480, 1454, 1452,
	1450, 1439, 1438, 1437, 1435, 1434, 1431, 1427, 1425, 1424,
	1423, 102, 1422, 1421, 1420, 1419, 1417, 1416, 1415, 1414,
	1413, 92, 51, 251, 53, 68, 1412, 73, 1745, 1411,
	45, 72, 67, 1410, 40, 1408, 1407, 110, 1406, 1405,
	70, 1404, 1396, 2093, 1395, 71, 1392, 13, 32, 1387,
	1386, 1385, 1384, 96, 1061, 1381, 1380, 17, 1379, 1378,
	103, 1377, 75, 29, 20, 19, 28, 1376, 78, 1375,
	10, 1372, 77, 1366, 1365, 1363, 1362, 30, 1361, 74,
	82, 41, 1360, 7, 9, 1359, 1358, 1356, 1353, 1351,
	1350, 3, 1346, 1341, 1340, 1338, 1337, 23, 1336, 6,
	64, 43, 22, 5, 1332, 1329, 18, 94, 66, 83,
	1327, 1325, 1324, 681, 1107, 1323, 58, 1322, 118, 1321,
	24, 93, 507, 448, 1320, 1316, 1315, 1314, 1313, 47,
	1075, 1469, 16, 86, 1311, 1310, 2318, 39, 65, 21,
	1308, 1307, 1306, 61, 59, 52, 613, 1305, 50, 1304,
	1303, 1302, 1301, 1299, 1298, 1296, 108, 1295, 1294, 1292,
	134, 37, 79, 33, 1291, 1288, 1282, 1280, 62, 80,
	1279, 1278, 69, 63, 1276, 97, 35, 27, 1275, 1271,
	1265, 1262, 38, 11, 1261, 85, 44, 57, 34, 31,
	1259, 15, 1258, 42, 36, 1257, 2, 1256, 14, 1255,
	8, 0, 1253, 4, 55, 1252, 12, 1251, 1, 1248,
	1247, 1246, 145, 611, 95, 1244, 112,
}
var yyR1 = [...]int{

	0, 240, 241, 241, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 231, 231, 231, 21, 40, 3, 3, 3, 3,
	2, 2, 8, 9, 4, 5, 5, 10, 10, 45,
	45, 11, 12, 12, 12, 12, 244, 244, 67, 67,
	68, 68, 130, 130, 13, 14, 14, 139, 139, 138,
	138, 138, 140, 140, 140, 140, 176, 176, 15, 15,
	15, 15, 15, 15, 233, 233, 232, 230, 230, 229,
	229, 228, 22, 24, 25, 235, 235, 208, 29, 29,
	28, 28, 28, 28, 30, 30, 27, 27, 26, 26,
	210, 210, 209, 209, 209, 209, 209, 209, 199, 179,
	179, 179, 179, 182, 182, 180, 180, 180, 180, 180,
	180, 180, 180, 180, 181, 181, 181, 181, 181, 183,
	183, 183, 183, 183, 184, 184, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 184, 184, 185,
	185, 185, 185, 185, 185, 185, 185, 198, 198, 186,
	186, 192, 192, 193, 193, 193, 195, 195, 196, 196,
	154, 154, 154, 188, 188, 189, 189, 194, 194, 190,
	190, 190, 191, 191, 191, 197, 197, 197, 197, 197,
	187, 187, 200, 221, 221, 220, 220, 217, 217, 217,
	217, 207, 207, 214, 214, 214, 214, 214, 214, 204,
	204, 204, 205, 205, 203, 203, 206, 206, 216, 216,
	215, 201, 201, 202, 202, 223, 223, 223, 223, 223,
	224, 237, 238, 236, 236, 236, 236, 236, 155, 155,
	155, 211, 211, 211, 212, 212, 212, 213, 213, 213,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 234, 234, 234,
	234, 234, 234, 234, 234, 234, 234, 234, 234, 234,
	234, 227, 225, 225, 226, 226, 17, 23, 23, 18,
	18, 18, 18, 18, 19, 19, 31, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 147, 147, 239,
	239, 149, 149, 145, 145, 148, 148, 146, 146, 146,
	150, 150, 150, 151, 151, 177, 177, 177, 33, 33,
	35, 35, 36, 37, 37, 171, 171, 172, 172, 38,
	39, 44, 44, 44, 44, 44, 44, 46, 46, 46,
	7, 7, 7, 7, 43, 43, 43, 6, 6, 34,
	34, 34, 34, 20, 245, 41, 42, 42, 51, 51,
	51, 47, 47, 47, 50, 50, 50, 54, 54, 56,
	56, 56, 56, 56, 57, 57, 57, 57, 57, 57,
	53, 53, 55, 55, 55, 55, 164, 164, 164, 163,
	163, 59, 59, 60, 60, 61, 61, 62, 62, 62,
	99, 76, 76, 129, 129, 131, 131, 63, 63, 63,
	63, 64, 64, 65, 65, 66, 66, 170, 170, 169,
	169, 169, 168, 168, 69, 69, 69, 71, 70, 70,
	70, 70, 72, 72, 74, 74, 73, 73, 75, 77,
	77, 77, 77, 77, 78, 78, 58, 58, 58, 58,
	58, 58, 58, 58, 142, 142, 80, 80, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 91, 91,
	91, 91, 91, 91, 81, 81, 81, 81, 81, 81,
	81, 52, 52, 92, 92, 92, 98, 93, 93, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 84, 84, 84, 84, 84, 84, 84,
	84, 84, 84, 88, 88, 88, 88, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 246, 246, 90, 89,
	89, 89, 89, 89, 89, 89, 49, 49, 49, 49,
	49, 175, 175, 178, 178, 178, 178, 178, 178, 178,
	178, 178, 178, 178, 178, 178, 103, 103, 48, 48,
	101, 101, 102, 104, 104, 100, 100, 100, 83, 83,
	83, 83, 83, 83, 83, 83, 85, 85, 85, 105,
	105, 106, 106, 107, 107, 108, 108, 109, 110, 110,
	110, 111, 111, 111, 111, 222, 222, 222, 222, 222,
	218, 218, 218, 218, 219, 219, 219, 127, 127, 127,
	112, 112, 112, 112, 117, 117, 117, 113, 113, 115,
	115, 115, 116, 116, 116, 114, 120, 120, 122, 122,
	121, 121, 119, 119, 124, 124, 123, 123, 118, 118,
	82, 82, 82, 82, 82, 128, 128, 128, 128, 132,
	132, 94, 94, 96, 96, 95, 97, 133, 133, 136,
	134, 134, 137, 137, 137, 137, 137, 135, 135, 135,
	165, 165, 165, 141, 141, 152, 152, 153, 153, 143,
	143, 156, 156, 156, 156, 156, 156, 156, 156, 156,
	156, 144, 144, 144, 157, 157, 157, 158, 158, 125,
	125, 125, 125, 126, 126, 161, 161, 162, 162, 166,
	166, 167, 167, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	159, 159, 159, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 160, 242, 243, 173, 174, 174, 174,
}
var yyR2 = [...]int{

	0, 2, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 2, 3, 5, 6, 6, 7,
	4, 6, 5, 7, 8, 1, 3, 7, 8, 1,
	1, 9, 9, 8, 7, 7, 1, 1, 1, 3,
	1, 3, 0, 4, 3, 5, 4, 1, 3, 3,
	2, 2, 2, 2, 2, 1, 1, 1, 2, 2,
	6, 4, 6, 2, 0, 2, 1, 0, 2, 1,
	3, 3, 4, 8, 4, 1, 1, 4, 0, 1,
	1, 1, 2, 2, 0, 1, 5, 5, 4, 4,
	2, 4, 1, 1, 3, 4, 3, 3, 8, 3,
	1, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	2, 2, 2, 2, 4, 4, 2, 2, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 6, 6, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	3, 0, 5, 0, 3, 5, 0, 1, 0, 1,
	0, 1, 2, 0, 2, 0, 3, 0, 1, 0,
	3, 3, 0, 2, 2, 0, 2, 1, 2, 1,
	0, 2, 5, 0, 1, 1, 2, 2, 3, 2,
	3, 0, 1, 2, 3, 3, 3, 2, 2, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 1, 3,
	3, 3, 1, 3, 1, 10, 11, 11, 12, 1,
	5, 3, 3, 1, 1, 2, 2, 2, 0, 1,
	2, 0, 1, 3, 1, 2, 3, 1, 1, 1,
	6, 7, 7, 7, 7, 4, 5, 4, 4, 7,
	5, 5, 5, 12, 7, 5, 9, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 3, 8, 8, 3, 3, 5, 4,
	6, 5, 4, 4, 3, 2, 3, 4, 4, 3,
	4, 4, 4, 4, 4, 4, 3, 3, 3, 2,
	7, 2, 3, 4, 5, 7, 5, 4, 2, 4,
	4, 3, 3, 5, 2, 3, 3, 1, 1, 1,
	1, 0, 1, 0, 1, 1, 1, 0, 2, 2,
	0, 2, 2, 0, 2, 0, 1, 1, 2, 1,
	1, 2, 1, 1, 5, 0, 1, 0, 1, 2,
	3, 0, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 3, 3, 2,
	2, 3, 3, 2, 0, 2, 0, 2, 1, 2,
	2, 0, 1, 1, 0, 1, 1, 0, 1, 0,
	1, 2, 3, 4, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	1, 0, 2, 1, 3, 1, 1, 1, 3, 3,
	3, 3, 7, 1, 3, 1, 3, 4, 4, 4,
	3, 2, 4, 0, 1, 0, 2, 0, 1, 0,
	1, 2, 1, 1, 1, 2, 2, 1, 2, 3,
	2, 3, 2, 2, 2, 1, 1, 3, 3, 0,
	5, 4, 5, 5, 0, 2, 1, 3, 3, 3,
	2, 3, 1, 2, 0, 3, 1, 1, 3, 3,
	4, 4, 5, 3, 4, 5, 6, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 1, 1, 1, 3, 1, 3, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 3, 1,
	1, 1, 1, 4, 5, 5, 6, 4, 4, 6,
	6, 6, 8, 8, 8, 8, 9, 8, 5, 4,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 8, 8, 0, 2, 3, 4,
	4, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 2, 3, 3, 1, 2, 2, 1,
	2, 1, 2, 2, 1, 2, 0, 1, 0, 2,
	1, 2, 4, 0, 2, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 0, 2, 0, 3, 1, 3, 2, 0, 1,
	1, 0, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 0, 2, 4,
	0, 9, 3, 5, 0, 3, 3, 0, 1, 0,
	2, 2, 0, 2, 2, 2, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 3, 0, 4, 0, 1,
	2, 1, 5, 4, 4, 1, 3, 3, 5, 0,
	5, 1, 3, 1, 2, 3, 1, 1, 3, 3,
	1, 3, 3, 3, 3, 3, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 2, 3, 0, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 0, 1, 1,
}
var yyChk = [...]int{

	-1000, -240, -1, -3, -8, -9, -10, -11, -12, -13,
	-14, -15, -16, -17, -18, -19, -31, -32, -33, -35,
	-36, -37, -38, -39, -6, -34, -20, -21, -40, -4,
	-242, 6, 7, 8, -45, 10, 11, 31, -22, -24,
	146, -25, 147, 149, 148, 182, 150, 175, 70, 196,
	197, 199, 200, 201, 202, -46, 180, 181, 32, 33,
	152, 35, 41, 80, 9, 289, 177, 176, 26, -241,
	391, -51, 5, -107, 16, -3, -41, -245, -41, -41,
	-41, -41, -41, -41, -208, -210, 80, 119, 80, 156,
	100, 154, -144, -235, 302, 281, 153, -29, -28, -27,
	-26, -30, 30, -144, 156, 281, 153, 255, 154, 154,
	155, 156, 281, 153, 154, -73, -166, -231, -160, 83,
	84, 85, 299, 168, 331, 332, 76, 196, 210, 204,
	231, 223, 300, 333, 169, 221, 224, 268, 166, 334,
	251, 258, 94, 199, 277, 335, 75, 47, 40, 178,
	219, 215, 336, 308, 213, 46, 28, 45, 337, 260,
	236, 44, 338, 79, 304, 262, 214, 259, 152, 339,
	171, 387, 164, 340, 237, 241, 341, 269, 48, 342,
	343, 344, 74, 208, 209, 345, 167, 271, 235, 165,
	34, 263, 301, 54, 186, 272, 42, 239, 41, 346,
	234, 230, 49, 347, 348, 349, 350, 233, 207, 229,
	58, 243, 242, 244, 267, 226, 351, 352, 353, 172,
	77, 354, 216, 19, 355, 356, 357, 52, 358, 359,
	275, 181, 360, 50, 37, 184, 361, 362, 363, 364,
	365, 366, 261, 238, 240, 161, 188, 257, 303, 367,
	273, 212, 368, 173, 185, 180, 276, 174, 369, 370,
	371, 372, 373, 374, 375, 200, 39, 376, 377, 378,
	379, 195, 270, 279, 57, 78, 248, 380, 206, 163,
	381, 197, 51, 192, 253, 43, 227, 187, 382, 383,
	217, 218, 232, 205, 228, 198, 388, 189, 182, 384,
	278, 249, 305, 225, 222, 193, 385, 156, 190, 191,
	386, 389, 264, 254, 265, 266, 255, 194, 302, 274,
	220, 250, 154, 137, 224, 268, 146, 252, 263, 264,
	260, -149, 261, 188, -177, 154, -145, 251, 254, 255,
	194, -239, -231, 262, 270, 269, 256, 266, 265, -166,
	198, -171, 203, -161, -231, -160, 201, -73, -44, 387,
	150, -173, -173, 253, 253, -173, -93, -58, -79, 103,
	-84, 30, 24, -83, -80, -100, -97, -98, 137, 138,
	140, 139, 141, 126, 127, 134, 104, 142, -88, -86,
	-87, -89, 87, 86, 95, 88, 89, 90, 91, 96,
	97, 98, -161, -166, -95, -242, 64, 65, 290, 291,
	292, 293, 298, 294, 106, 53, 280, 288, 287, 286,
	284, 285, 282, 283, 296, 297, 159, 281, 153, 132,
	289, -231, -160, 40, -5, -4, -242, 6, 21, 22,
	-111, 18, 17, -243, 82, -47, -56, 59, 60, -57,
	22, 36, 63, 61, -42, -55, 128, -58, -166, -55,
	-143, 158, -143, -143, -134, -176, 198, -137, 270, 269,
	-162, -135, -161, -159, 268, 224, 267, 151, 306, 102,
	23, 25, 246, 105, 137, 17, 106, 136, 290, 146,
	68, 307, 282, 283, 280, 292, 293, 281, 252, 30,
	11, 309, 26, 176, 22, 36, 130, 148, 109, 110,
	179, 24, 177, 98, 312, 20, 71, 12, 14, 313,
	314, 15, 159, 158, 121, 155, 66, 9, 142, 27,
	118, 62, 315, 29, 316, 317, 318, 319, 64, 119,
	18, 284, 285, 32, 320, 298, 183, 132, 69, 55,
	103, 321, 322, 96, 323, 99, 72, 100, 16, 67,
	38, 324, 325, 326, 327, 120, 149, 289, 65, 328,
	153, 6, 295, 31, 175, 63, 329, 154, 108, 296,
	297, 157, 97, 5, 160, 33, 10, 70, 73, 286,
	287, 288, 53, 107, 13, 330, 101, -209, 119, -199,
	-202, -161, 170, -224, 166, -73, -216, -215, -161, -73,
	289, -153, 159, -125, 160, 163, 164, -153, 87, -26,
	-27, 224, 136, 154, -73, -231, -231, 146, 148, 151,
	72, -23, -73, -152, 159, -231, -152, -152, -152, -73,
	143, -73, -231, 31, -150, 119, 13, 281, -231, 188,
	154, 189, 156, -151, 119, -151, -151, -204, 155, 34,
	167, -174, -242, -162, 192, 193, 192, -148, -147, 258,
	259, 253, 257, 13, 193, 253, 191, -150, -174, 157,
	-161, -43, -161, 87, -7, -3, -11, -10, -12, 111,
	-173, -173, 81, 102, 100, 101, 118, -58, -81, 121,
	103, 119, 120, 105, 123, 122, 133, 126, 127, 128,
	129, 130, 131, 132, 124, 125, 136, 111, 112, 113,
	114, 115, 116, 117, -142, -242, -98, -242, 144, 145,
	-84, -84, -84, -84, -84, -84, -84, -84, -84, -84,
	-242, 143, -2, -93, -4, -242, -242, -242, -242, -242,
	-242, -242, -242, -103, -58, -242, -246, -90, -242, -246,
	-90, -246, -90, -246, -242, -246, -90, -246, -90, -246,
	-246, -90, -242, -242, -242, -242, -242, -242, -242, -173,
	-107, -3, -41, -127, 20, 32, -58, -108, -109, -58,
	-107, 55, -53, -55, -57, 59, 60, 93, 12, -164,
	-163, 23, -161, 87, 143, 12, -74, 27, -73, -60,
	-61, -62, -63, -76, -99, -242, -73, 12, -67, -68,
	-73, -75, -166, 81, 198, -137, -176, -139, -138, 271,
	273, 111, -165, -161, 87, 30, 31, 82, 81, -73,
	-179, -182, -184, -183, -185, -180, -181, 221, 222, 137,
	225, 227, 228, 229, 230, 231, 232, 233, 234, 235,
	236, 31, 178, 217, 218, 219, 220, 237, 238, 239,
	240, 241, 242, 243, 244, 204, 223, 300, 205, 206,
	207, 208, 209, 210, 212, 213, 214, 215, 216, -231,
	80, 82, 81, -186, 80, -174, 156, -73, 103, 155,
	-231, 87, 31, -207, 111, -73, -174, -174, -174, 190,
	190, 154, 154, 195, -73, 81, 157, -67, 24, 72,
	-73, -231, -231, -167, -166, -159, -174, -150, 87, -58,
	-174, -174, -174, -73, -174, -174, 87, -205, 12, 121,
	-174, -174, -146, 12, 121, -205, -146, -58, -151, 72,
	-172, 201, 235, 388, 389, 390, -58, -58, -58, -58,
	-91, 96, 103, 97, 98, -84, -92, -95, -98, 92,
	121, 119, 120, 105, -84, -84, -84, -84, -84, -84,
	-84, -84, -84, -84, -84, -84, -84, -84, -84, -175,
	-231, 87, -231, -83, -83, -161, -54, 22, 36, -53,
	-162, -167, -159, -51, -243, -243, -107, -53, -53, -58,
	-58, -100, 87, -53, -100, 87, -53, -53, -50, 22,
	36, -101, -102, 107, -100, -161, -166, -243, -84, -161,
	-161, -53, -54, -54, -53, -53, -111, -243, -112, 27,
	10, 121, 81, 19, 81, -110, 25, 26, -111, -85,
	-161, 88, 91, -59, 81, 12, -57, -73, -163, 128,
	-167, -73, -130, 184, -73, 31, 81, -69, -71, -70,
	-72, 62, 66, 68, 63, 64, 65, 69, -170, 23,
	-60, -3, -242, -169, 184, -168, 23, -166, 87, -73,
	-67, -244, 81, 12, 73, -244, 81, 143, -137, -139,
	81, 272, 274, 275, 72, 99, -58, -191, 136, -211,
	-212, -213, -162, 87, 88, -199, -200, -201, -214, 170,
	-223, 161, 163, 164, 160, -203, 171, -224, 155, 29,
	82, -154, 96, 103, -195, 249, -186, -186, -186, -186,
	-186, -190, 224, -190, -190, -190, 80, 80, -186, -186,
	-186, -186, -192, 80, -192, -192, -193, 80, -193, -224,
	166, -58, -221, -220, -217, 73, 165, 94, 302, -215,
	-110, 88, -73, 24, -231, -207, -231, 87, -156, 151,
	148, 149, -227, 147, 246, 224, 94, 30, 16, 290,
	184, 305, -231, 185, -73, -73, -73, -73, -73, 151,
	148, -73, -73, -73, -174, -73, -150, -166, -166, -73,
	-150, -73, -161, 96, 97, 98, -92, -84, -84, -84,
	-52, 179, 102, -243, -243, -53, -53, -242, 143, -5,
	-111, -243, -243, 81, 73, 23, 12, 12, -243, 12,
	12, -243, -243, -53, -104, -102, 109, -58, -243, 143,
	-243, 81, 81, -243, -243, -243, -243, -243, -127, 38,
	46, 57, -58, -58, -109, -127, -141, 20, 12, 53,
	53, -78, 13, -55, -60, -57, 143, -78, -82, 31,
	53, -3, -242, -242, -133, -136, -100, -61, -62, -62,
	-61, -62, 62, 62, 62, 67, 62, 67, 62, -70,
	-166, -243, -243, -3, -77, 70, 158, 71, -242, -168,
	-130, 73, -60, -73, -60, -75, -166, 128, -138, -140,
	276, 273, 279, -231, 87, 81, -213, 111, -202, 80,
	-231, 29, -203, -203, -203, -206, -231, -206, 29, -188,
	30, 96, -196, 250, -190, -190, -191, 31, -191, -191,
	-191, -198, 87, -198, 88, 88, 82, -222, -218, -219,
	32, 76, -217, -231, -207, 87, 37, 82, -174, -126,
	73, -231, 87, -173, -234, 166, 162, 170, 171, 164,
	83, 84, 85, 155, 29, 161, 163, 184, 160, -234,
	-157, -158, 157, 23, 155, 29, 184, -233, 73, 190,
	246, 190, 157, -174, -146, -146, -52, 102, -84, -84,
	-243, -243, -54, -162, -107, -127, -178, 137, 221, 178,
	219, 215, 235, 226, 248, 217, 249, -175, -178, -84,
	-84, -84, -84, 299, -107, 110, -58, 108, -162, -84,
	-84, 39, 87, 87, 58, -73, -105, 14, -58, 128,
	-111, -132, 72, -133, -94, -96, -95, -242, -128, -243,
	-161, -131, -161, -78, 81, 111, -65, -64, 72, 73,
	-66, 72, -64, 62, 62, -243, 155, 155, 155, -131,
	-78, -60, -78, -78, 143, 273, 277, 278, -212, -213,
	-216, -223, 171, -206, -206, -206, 80, -189, 72, -84,
	-191, -191, -231, 137, 82, 81, 82, 81, 82, 81,
	-155, 337, 103, -219, -218, -207, -207, 88, 87, 72,
	-161, -173, -173, -73, -173, -161, -230, 302, -232, -231,
	-161, -161, -161, -73, -150, -150, -84, -243, -111, -243,
	-186, -186, -186, -193, -186, 209, -186, 209, -243, -243,
	20, 20, 20, 20, -242, -48, 295, -58, 81, 81,
	87, -190, -106, 15, 17, 28, -132, 81, -243, -243,
	81, 53, 143, -243, 81, -107, -136, -58, -58, 80,
	-58, -242, -242, -242, -243, -107, -78, 82, -129, -161,
	-194, 246, 10, -190, 87, -190, 88, 88, 337, 30,
	77, 78, 79, 30, 74, 75, -73, 27, -229, -228,
	-162, 80, 73, -127, -190, -231, -84, -84, -84, -84,
	-84, -111, 87, -84, -84, -190, -114, -119, -148, -58,
	-93, 29, -96, 53, -3, -161, -94, -161, -161, -111,
	-129, -129, -243, -129, -129, -169, -111, -221, 82, 81,
	-197, 161, 29, 160, -87, -191, -191, 82, 82, -242,
	81, 111, -129, -73, -243, -243, -243, -243, -49, 121,
	302, -243, -243, -243, -117, 387, -120, 42, -121, 43,
	10, -94, 143, 82, -243, -243, -243, -77, 173, -161,
	-187, 94, 29, 29, -225, -226, 184, -228, -213, 82,
	-243, 300, 69, 303, -114, 47, 227, -122, 51, -123,
	-118, 52, 17, -133, -161, -73, 87, -243, 81, -161,
	-233, 58, 301, 304, -115, 49, -113, 48, -113, -121,
	17, -124, 44, 45, 87, 80, -226, 53, -230, 58,
	-116, 50, 72, 99, 87, 17, 17, -129, 186, 302,
	72, 99, 87, 87, 82, 187, 303, -237, -238, 72,
	-242, 304, -238, 72, 11, 10, -84, 183, -236, 174,
	169, 172, 31, -236, -243, -243, 168, 30, 96,
}
var yyDef = [...]int{

	30, -2, 2, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
	21, 22, 23, 24, 25, 26, 27, 28, 29, 653,
	0, 394, 394, 394, 394, 394, 394, 394, 0, 0,
	761, -2, 761, 0, 0, 0, 0, -2, 359, 360,
	0, 362, -2, 0, 0, 371, 1105, 1105, 0, 0,
	1105, 0, 0, 1103, 49, 50, 377, 378, 379, 1,
	3, 0, 398, 661, 0, 0, -2, 396, 0, 0,
	749, 749, 749, 0, 78, 79, 0, 0, 0, 0,
	0, 747, 769, 747, 0, 95, 96, 83, -2, 100,
	101, 0, 105, 0, 0, 0, 0, 0, 0, 745,
	0, 745, 745, 745, 0, 305, 476, 779, 780, 31,
	32, 33, 903, 904, 905, 906, 907, 908, 909, 910,
	911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
	921, 922, 923, 924, 925, 926, 927, 928, 929, 930,
	931, 932, 933, 934, 935, 936, 937, 938, 939, 940,
	941, 942, 943, 944, 945, 946, 947, 948, 949, 950,
	951, 952, 953, 954, 955, 956, 957, 958, 959, 960,
	961, 962, 963, 964, 965, 966, 967, 968, 969, 970,
	971, 972, 973, 974, 975, 976, 977, 978, 979, 980,
	981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
	991, 992, 993, 994, 995, 996, 997, 998, 999, 1000,
	1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010,
	1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020,
	1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030,
	1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040,
	1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050,
	1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060,
	1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070,
	1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080,
	1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090,
	1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100,
	1101, 1102, 0, 0, 0, 350, 0, 353, 353, 353,
	319, 0, 321, 1106, 0, 0, 0, 328, 0, 0,
	334, 350, 1106, 342, 356, 357, 344, 339, 340, 358,
	361, 0, 366, 369, 775, 776, 0, 384, 0, 952,
	376, 389, 390, 1105, 1105, 393, 34, 527, 486, 0,
	492, 494, 0, 529, 530, 531, 532, 533, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 559, 560,
	561, 562, 638, 639, 640, 641, 642, 643, 644, 645,
	496, 497, 635, 0, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 626, 0, 596, 596, 596, 596,
	596, 596, 596, 596, 0, 0, 0, 0, 0, 0,
	0, -2, -2, 1105, 653, 45, 0, 394, 399, 400,
	677, 0, 0, 653, 1104, 0, 0, -2, -2, 410,
	416, 417, 418, 419, 395, 0, 422, 426, 0, 0,
	0, 750, 0, 0, 64, 0, 1076, 730, -2, -2,
	0, 0, 777, 778, -2, 917, -2, 783, 784, 785,
	786, 787, 788, 789, 790, 791, 792, 793, 794, 795,
	796, 797, 798, 799, 800, 801, 802, 803, 804, 805,
	806, 807, 808, 809, 810, 811, 812, 813, 814, 815,
	816, 817, 818, 819, 820, 821, 822, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 865,
	866, 867, 868, 869, 870, 871, 872, 873, 874, 875,
	876, 877, 878, 879, 880, 881, 882, 883, 884, 885,
	886, 887, 888, 889, 890, 891, 892, 893, 894, 895,
	896, 897, 898, 899, 900, 901, 902, 0, 0, 112,
	113, 0, 0, 234, 919, 110, 0, 228, 169, 1106,
	0, 0, 0, 0, 770, 771, 772, 0, 762, 102,
	103, 0, 211, 0, 1106, 1106, 1106, 0, 0, 0,
	0, 296, 0, 0, 0, 0, 0, 0, 0, 304,
	0, 306, 1106, 350, 309, 0, 0, 1106, 1106, 1106,
	0, 1106, 1106, 316, 0, 317, 318, 0, 219, 220,
	221, 322, 1107, 1108, 1106, 1106, 347, 0, 347, 345,
	346, 337, 338, 0, 353, 331, 332, 335, 336, 367,
	370, 387, 385, 386, 388, 380, 381, 382, 383, 0,
	391, 392, 0, 0, 0, 0, 0, 490, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 514, 515, 516,
	517, 518, 519, 520, 493, 0, 507, 0, 0, 0,
	549, 550, 551, 552, 553, 554, 555, 556, 557, 0,
	407, 0, 0, 0, 653, 0, 0, 0, 0, 0,
	0, 0, 404, 0, 627, 0, 580, 588, 0, 581,
	589, 582, 590, 583, 0, 584, 591, 585, 592, 586,
	587, 593, 0, 0, 0, 407, 407, 0, 0, 35,
	661, 0, 409, 680, 0, 0, 662, 654, 655, 658,
	661, 0, 431, 420, 411, 414, 415, 397, 0, 423,
	427, 0, 429, 430, 0, 0, 62, 0, 475, 0,
	433, 435, 436, 437, 457, 0, 459, 0, 0, 0,
	58, 60, 476, 0, 1076, 736, 0, 66, 67, 0,
	0, 0, 192, 740, 741, 742, 738, 251, 0, 0,
	180, 176, 120, 121, 122, 169, 124, 169, 169, 169,
	169, 189, 189, 189, 189, 152, 153, 154, 155, 156,
	0, 0, 139, 169, 169, 169, 169, 159, 160, 161,
	162, 163, 164, 165, 166, 125, 126, 127, 128, 129,
	130, 131, 132, 133, 171, 171, 171, 173, 173, 0,
	0, 203, 0, 658, 0, 81, 0, 92, 0, 0,
	94, 763, 211, 0, 212, 0, 265, 267, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 299, 746, 0,
	1106, 302, 303, 477, 781, 782, 307, 308, 351, 352,
	310, 311, 312, 313, 314, 315, 354, 0, 222, 223,
	323, 327, 350, 0, 0, 0, 350, 329, 330, 0,
	0, 368, 372, 373, 374, 375, 528, 487, 488, 489,
	491, 508, 0, 510, 512, 498, 499, 523, 524, 525,
	0, 0, 0, 0, 521, 503, 0, 534, 535, 536,
	537, 538, 539, 540, 541, 542, 543, 544, 545, 548,
	611, 612, 0, 546, 547, 558, 0, 0, 0, 408,
	636, 0, -2, 0, 526, 725, 661, 0, 0, 0,
	0, 531, 638, 0, 531, 638, 0, 0, 0, 405,
	406, 633, 630, 0, 0, 635, 0, 597, 0, 0,
	0, 0, 0, 0, 0, 0, 677, 46, 36, 0,
	678, 0, 0, 0, 0, 657, 659, 660, 677, 0,
	646, 0, 0, 484, 0, 0, 412, 42, 428, 424,
	0, 484, 0, 0, 474, 0, 0, 0, 0, 0,
	0, 464, 0, 0, 467, 0, 0, 0, 0, 458,
	0, 0, 0, 479, 1016, 460, 0, 462, 463, -2,
	0, 0, 0, 56, 57, 0, 0, 0, 731, 65,
	0, 0, 70, 71, 732, 733, 734, 735, 0, 97,
	252, 254, 257, 258, 259, 114, 116, 117, 0, 0,
	232, 1026, 1060, 953, 226, 226, 951, 239, 224, 225,
	111, 183, 181, 0, 178, 177, 123, 189, 189, 146,
	147, 192, 0, 192, 192, 192, 0, 0, 140, 141,
	142, 143, 134, 0, 135, 136, 137, 0, 138, 233,
	0, 0, 665, 204, 205, 0, 211, 0, 0, 229,
	230, 0, 1106, 748, 773, 0, 108, 109, 1105, 0,
	0, 764, 266, 751, 752, 753, 754, 755, 756, 757,
	758, 759, 760, 0, 84, 270, 272, 271, 275, 0,
	0, 0, 297, 1106, 301, 347, 324, 348, 349, 347,
	326, 333, 364, 509, 511, 513, 500, 521, 504, 0,
	501, 0, 0, 495, 563, 0, 0, 407, 0, 653,
	677, 567, 568, 0, 0, 0, 0, 0, 604, 0,
	0, 605, 0, 653, 0, 631, 0, 0, 579, 0,
	598, 0, 0, 599, 600, 601, 602, 603, 38, 0,
	0, 0, 663, 664, 656, 37, 0, 743, 744, 647,
	648, 649, 0, 421, 432, 413, 0, 661, 719, 0,
	0, 711, 0, 0, 484, 727, 0, 434, 453, 455,
	0, 450, 465, 466, 468, 0, 470, 0, 472, 473,
	438, 439, 440, 0, 441, 0, 0, 0, 0, 461,
	484, 0, 484, 59, 484, 61, 0, 478, 68, 69,
	0, 0, 75, 193, 194, 0, 255, 0, 115, 0,
	0, 213, 226, 226, 226, 217, 227, 218, 0, 185,
	0, 182, 119, 179, 192, 192, 148, 0, 149, 150,
	151, 0, 167, 0, 0, 0, 248, 80, 669, 668,
	211, 211, 206, 207, 0, 209, 0, 170, 82, 0,
	0, 106, 107, 260, 1105, 277, 278, 279, 280, 281,
	282, 283, 284, 285, 286, 287, 288, 289, 290, 1105,
	0, 1105, 765, 766, 767, 768, 0, 87, 0, 0,
	0, 0, 0, 300, 350, 350, 502, 0, 522, 505,
	564, 565, 0, 637, 661, 40, 0, 169, 169, 616,
	169, 173, 619, 169, 621, 169, 624, 0, 0, 0,
	0, 0, 0, 0, 628, 578, 634, 0, 636, 0,
	0, 0, 189, 682, 679, 39, 651, 0, 485, 425,
	43, 47, 0, 719, 710, 721, 723, 0, 0, 0,
	715, 0, 445, 653, 0, 0, 447, 454, 0, 0,
	448, 0, 449, 469, 471, -2, 0, 0, 0, 0,
	653, 484, 54, 55, 0, 72, 73, 74, 253, 256,
	0, 231, 0, 214, 215, 216, 0, 187, 0, 184,
	144, 145, 190, 191, 189, 0, 189, 0, 174, 0,
	240, 249, 0, 666, 667, 0, 0, 208, 210, 0,
	774, 261, 262, 263, 264, 0, 269, 0, 85, 86,
	0, 0, 274, 298, 320, 325, 506, 566, 677, 569,
	613, 189, 617, 618, 620, 622, 623, 625, 571, 570,
	0, 0, 0, 0, 0, 661, 0, 632, 0, 0,
	189, 702, 44, 0, 0, 0, 48, 0, 724, 0,
	0, 0, 0, 63, 0, 661, 728, 729, 451, 0,
	456, 0, 0, 0, 459, 661, 53, 203, 0, 443,
	195, 188, 0, 192, 168, 192, 0, 0, 250, 670,
	671, 672, 673, 674, 675, 676, 93, 0, 88, 89,
	0, 0, 0, 41, 614, 615, 0, 0, 0, 0,
	606, 0, 629, 0, 0, 684, 683, 696, 700, 652,
	650, 0, 722, 0, 714, 717, 713, 716, 446, 51,
	0, 0, 481, 0, 0, 479, 52, 202, 0, 0,
	200, 0, 197, 199, 186, 157, 158, 172, 175, 0,
	0, 0, 0, 276, 572, 574, 573, 575, 0, 0,
	0, 577, 594, 595, 702, 0, 695, 698, -2, 0,
	0, 712, 0, 452, 480, 482, 483, 442, 0, 444,
	118, 0, 196, 198, 0, 292, 0, 90, 91, 84,
	576, 0, 0, 0, 689, 687, 687, 700, 0, 704,
	0, 709, 0, 720, 718, 0, 201, 291, 0, 0,
	87, 607, 0, 610, 692, 0, 685, 688, 686, 697,
	0, 703, 0, 0, 701, 0, 293, 0, 273, 608,
	681, 0, 690, 691, 699, 0, 0, 0, 0, 0,
	693, 694, 705, 707, 235, 0, 0, 236, 237, 0,
	0, 609, 238, 0, 0, 0, 0, 0, 241, 243,
	244, 0, 0, 242, 294, 295, 245, 246, 247,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 104, 3, 3, 3, 131, 123, 3,
	80, 82, 128, 126, 81, 127, 143, 129, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 391,
	112, 111, 113, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 133, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 122, 3, 134,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 83, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 105,
	106, 107, 108, 109, 110, 114, 115, 116, 117, 118,
	119, 120, 121, 124, 125, 130, 132, 135, 136, 137,
	138, 139, 140, 141, 142, 144, 145, 146, 147, 148,
	149, 150, 151, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}
var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:372
		{
			setParseTree(yylex, yyDollar[1].statement)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:377
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:378
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:382
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 30:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:411
		{
			setParseTree(yylex, nil)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:417
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), NoAt)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:421
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), SingleAt)
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:425
		{
			yyVAL.colIdent = NewColIdentWithAt(string(yyDollar[1].bytes), DoubleAt)
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:431
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 35:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:437
		{
			yyVAL.statement = &Load{}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:443
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			sel.Into = yyDollar[5].selectInto
			yyVAL.selStmt = sel
		}
	case 37:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:452
		{
			yyVAL.selStmt = &Union{FirstStatement: &ParenSelect{Select: yyDollar[2].selStmt}, OrderBy: yyDollar[4].orderBy, Limit: yyDollar[5].limit, Lock: yyDollar[6].lock}
		}
	case 38:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:456
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 39:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:460
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), SelectExprs{Nextval{Expr: yyDollar[5].expr}}, []string{yyDollar[3].str} /*options*/, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/)
		}
	case 40:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:483
		{
			sel := yyDollar[1].selStmt.(*Select)
			sel.OrderBy = yyDollar[2].orderBy
			sel.Limit = yyDollar[3].limit
			sel.Lock = yyDollar[4].lock
			yyVAL.selStmt = sel
		}
	case 41:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:491
		{
			yyVAL.selStmt = Unionize(yyDollar[1].selStmt, yyDollar[3].selStmt, yyDollar[2].boolean, yyDollar[4].orderBy, yyDollar[5].limit, yyDollar[6].lock)
		}
	case 42:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:497
		{
			yyVAL.statement = &Stream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName}
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:503
		{
			yyVAL.statement = &VStream{Comments: Comments(yyDollar[2].bytes2), SelectExpr: yyDollar[3].selectExpr, Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].expr), Limit: yyDollar[7].limit}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:511
		{
			yyVAL.selStmt = NewSelect(Comments(yyDollar[2].bytes2), yyDollar[4].selectExprs /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].tableExprs /*from*/, NewWhere(WhereClause, yyDollar[6].expr), GroupBy(yyDollar[7].exprs), NewWhere(HavingClause, yyDollar[8].expr))
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:517
		{
			yyVAL.selStmt = yyDollar[1].selStmt
		}
	case 46:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:521
		{
			yyVAL.selStmt = &ParenSelect{Select: yyDollar[2].selStmt}
		}
	case 47:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:528
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].ins
			ins.Action = yyDollar[1].insertAction
			ins.Comments = yyDollar[2].bytes2
			ins.Ignore = yyDollar[3].ignore
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitions
			ins.OnDup = OnDup(yyDollar[7].updateExprs)
			yyVAL.statement = ins
		}
	case 48:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:540
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprs))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprs))
			for _, updateList := range yyDollar[7].updateExprs {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyVAL.statement = &Insert{Action: yyDollar[1].insertAction, Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitions, Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprs)}
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:552
		{
			yyVAL.insertAction = InsertAct
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:556
		{
			yyVAL.insertAction = ReplaceAct
		}
	case 51:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:562
		{
			yyVAL.statement = &Update{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: yyDollar[4].tableExprs, Exprs: yyDollar[6].updateExprs, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:568
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[5].tableName}}, Partitions: yyDollar[6].partitions, Where: NewWhere(WhereClause, yyDollar[7].expr), OrderBy: yyDollar[8].orderBy, Limit: yyDollar[9].limit}
		}
	case 53:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:572
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[5].tableNames, TableExprs: yyDollar[7].tableExprs, Where: NewWhere(WhereClause, yyDollar[8].expr)}
		}
	case 54:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:576
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 55:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:580
		{
			yyVAL.statement = &Delete{Comments: Comments(yyDollar[2].bytes2), Ignore: yyDollar[3].ignore, Targets: yyDollar[4].tableNames, TableExprs: yyDollar[6].tableExprs, Where: NewWhere(WhereClause, yyDollar[7].expr)}
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:585
		{
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:586
		{
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:590
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:594
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:600
		{
			yyVAL.tableNames = TableNames{yyDollar[1].tableName}
		}
	case 61:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:604
		{
			yyVAL.tableNames = append(yyVAL.tableNames, yyDollar[3].tableName)
		}
	case 62:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:609
		{
			yyVAL.partitions = nil
		}
	case 63:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:613
		{
			yyVAL.partitions = yyDollar[3].partitions
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:619
		{
			yyVAL.statement = &Set{Comments: Comments(yyDollar[2].bytes2), Exprs: yyDollar[3].setExprs}
		}
	case 65:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:625
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Scope: yyDollar[3].scope, Characteristics: yyDollar[5].characteristics}
		}
	case 66:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:629
		{
			yyVAL.statement = &SetTransaction{Comments: Comments(yyDollar[2].bytes2), Characteristics: yyDollar[4].characteristics, Scope: ImplicitScope}
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:635
		{
			yyVAL.characteristics = []Characteristic{yyDollar[1].characteristic}
		}
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:639
		{
			yyVAL.characteristics = append(yyVAL.characteristics, yyDollar[3].characteristic)
		}
	case 69:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:645
		{
			yyVAL.characteristic = yyDollar[3].isolationLevel
		}
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:649
		{
			yyVAL.characteristic = ReadWrite
		}
	case 71:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:653
		{
			yyVAL.characteristic = ReadOnly
		}
	case 72:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:659
		{
			yyVAL.isolationLevel = RepeatableRead
		}
	case 73:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:663
		{
			yyVAL.isolationLevel = ReadCommitted
		}
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:667
		{
			yyVAL.isolationLevel = ReadUncommitted
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:671
		{
			yyVAL.isolationLevel = Serializable
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:677
		{
			yyVAL.scope = SessionScope
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:681
		{
			yyVAL.scope = GlobalScope
		}
	case 78:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:687
		{
			yyDollar[1].ddl.TableSpec = yyDollar[2].TableSpec
			yyVAL.statement = yyDollar[1].ddl
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:692
		{
			// Create table [name] like [name]
			yyDollar[1].ddl.OptLike = yyDollar[2].optLike
			yyVAL.statement = yyDollar[1].ddl
		}
	case 80:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:698
		{
			yyDollar[1].createIndex.Columns = yyDollar[3].indexColumns
			yyDollar[1].createIndex.Options = append(yyDollar[5].indexOptions, yyDollar[6].indexOptions...)
			yyDollar[1].createIndex.FullyParsed = true
			yyVAL.statement = yyDollar[1].createIndex
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:705
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 82:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:709
		{
			yyVAL.statement = &DDL{Action: CreateDDLAction, Table: yyDollar[5].tableName.ToViewName()}
		}
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:713
		{
			yyDollar[1].createDatabase.FullyParsed = true
			yyDollar[1].createDatabase.CreateOptions = yyDollar[2].collateAndCharsets
			yyVAL.statement = yyDollar[1].createDatabase
		}
	case 84:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:720
		{
			yyVAL.colIdent = NewColIdent("")
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:724
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:730
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:735
		{
			var v []VindexParam
			yyVAL.vindexParams = v
		}
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:740
		{
			yyVAL.vindexParams = yyDollar[2].vindexParams
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:746
		{
			yyVAL.vindexParams = make([]VindexParam, 0, 4)
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[1].vindexParam)
		}
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:751
		{
			yyVAL.vindexParams = append(yyVAL.vindexParams, yyDollar[3].vindexParam)
		}
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:757
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].colIdent, Val: yyDollar[3].str}
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:763
		{
			yyVAL.ddl = &DDL{Action: CreateDDLAction, Table: yyDollar[4].tableName}
			setDDL(yylex, yyVAL.ddl)
		}
	case 93:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:770
		{
			yyVAL.createIndex = &CreateIndex{Constraint: yyDollar[3].str, Name: yyDollar[5].colIdent, IndexType: yyDollar[6].str, Table: yyDollar[8].tableName, OnlineHint: yyDollar[2].OnlineDDLHint}
			setDDL(yylex, yyVAL.createIndex)
		}
	case 94:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:777
		{
			yyVAL.createDatabase = &CreateDatabase{DBName: string(yyDollar[4].colIdent.String()), IfNotExists: yyDollar[3].boolean}
			setDDL(yylex, yyVAL.createDatabase)
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:788
		{
			yyVAL.TableSpec = yyDollar[2].TableSpec
			yyVAL.TableSpec.Options = yyDollar[4].str
		}
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:794
		{
			yyVAL.collateAndCharsets = nil
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:798
		{
			yyVAL.collateAndCharsets = yyDollar[1].collateAndCharsets
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:804
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:808
		{
			yyVAL.collateAndCharsets = []CollateAndCharset{yyDollar[1].collateAndCharset}
		}
	case 102:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:812
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 103:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:816
		{
			yyVAL.collateAndCharsets = append(yyDollar[1].collateAndCharsets, yyDollar[2].collateAndCharset)
		}
	case 104:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:821
		{
			yyVAL.boolean = false
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:825
		{
			yyVAL.boolean = true
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:831
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: (yyDollar[5].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:835
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CharacterSetType, Value: ("'" + string(yyDollar[5].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 108:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:841
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: (yyDollar[4].colIdent.String()), IsDefault: yyDollar[1].boolean}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:845
		{
			yyVAL.collateAndCharset = CollateAndCharset{Type: CollateType, Value: ("'" + string(yyDollar[4].bytes) + "'"), IsDefault: yyDollar[1].boolean}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:852
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[2].tableName}
		}
	case 111:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:856
		{
			yyVAL.optLike = &OptLike{LikeTable: yyDollar[3].tableName}
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:862
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddColumn(yyDollar[1].columnDefinition)
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:867
		{
			yyVAL.TableSpec = &TableSpec{}
			yyVAL.TableSpec.AddConstraint(yyDollar[1].constraintDefinition)
		}
	case 114:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:872
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:876
		{
			yyVAL.TableSpec.AddColumn(yyDollar[3].columnDefinition)
			yyVAL.TableSpec.AddConstraint(yyDollar[4].constraintDefinition)
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:881
		{
			yyVAL.TableSpec.AddIndex(yyDollar[3].indexDefinition)
		}
	case 117:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:885
		{
			yyVAL.TableSpec.AddConstraint(yyDollar[3].constraintDefinition)
		}
	case 118:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:891
		{
			yyDollar[2].columnType.NotNull = yyDollar[3].boolean
			yyDollar[2].columnType.Default = yyDollar[4].optVal
			yyDollar[2].columnType.OnUpdate = yyDollar[5].optVal
			yyDollar[2].columnType.Autoincrement = yyDollar[6].boolean
			yyDollar[2].columnType.KeyOpt = yyDollar[7].colKeyOpt
			yyDollar[2].columnType.Comment = yyDollar[8].literal
			yyVAL.columnDefinition = &ColumnDefinition{Name: yyDollar[1].colIdent, Type: yyDollar[2].columnType}
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:902
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].boolean
			yyVAL.columnType.Zerofill = yyDollar[3].boolean
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:913
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literal
		}
	case 124:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:918
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:924
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:928
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:932
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:936
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:940
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:944
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:948
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:952
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:956
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 135:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:968
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 136:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:974
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 137:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:980
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:986
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:994
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:998
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 141:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1002
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 142:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1006
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 143:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1010
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 144:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Collate: yyDollar[4].str}
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1024
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1028
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1032
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 149:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 150:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 151:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), Charset: yyDollar[2].str, Collate: yyDollar[3].str}
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 157:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 158:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1073
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].str, Collate: yyDollar[6].str}
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1079
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 160:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1083
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1087
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1091
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 163:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 166:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].bytes)}
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1113
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, "'"+string(yyDollar[1].bytes)+"'")
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1118
		{
			yyVAL.strs = append(yyDollar[1].strs, "'"+string(yyDollar[3].bytes)+"'")
		}
	case 169:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1123
		{
			yyVAL.literal = nil
		}
	case 170:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1127
		{
			yyVAL.literal = NewIntLiteral(yyDollar[2].bytes)
		}
	case 171:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1132
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 172:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1136
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 173:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1144
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
			}
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1154
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].bytes),
				Scale:  NewIntLiteral(yyDollar[4].bytes),
			}
		}
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1162
		{
			yyVAL.boolean = false
		}
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1166
		{
			yyVAL.boolean = true
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1171
		{
			yyVAL.boolean = false
		}
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1175
		{
			yyVAL.boolean = true
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1181
		{
			yyVAL.boolean = false
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1185
		{
			yyVAL.boolean = false
		}
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1189
		{
			yyVAL.boolean = true
		}
	case 183:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1194
		{
			yyVAL.optVal = nil
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1198
		{
			yyVAL.optVal = yyDollar[2].expr
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1203
		{
			yyVAL.optVal = nil
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1207
		{
			yyVAL.optVal = yyDollar[3].expr
		}
	case 187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1212
		{
			yyVAL.boolean = false
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1216
		{
			yyVAL.boolean = true
		}
	case 189:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1221
		{
			yyVAL.str = ""
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1225
		{
			yyVAL.str = string(yyDollar[3].colIdent.String())
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1229
		{
			yyVAL.str = string(yyDollar[3].bytes)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1234
		{
			yyVAL.str = ""
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1238
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1242
		{
			yyVAL.str = string(yyDollar[2].bytes)
		}
	case 195:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1247
		{
			yyVAL.colKeyOpt = colKeyNone
		}
	case 196:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1251
		{
			yyVAL.colKeyOpt = colKeyPrimary
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1255
		{
			yyVAL.colKeyOpt = colKey
		}
	case 198:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1259
		{
			yyVAL.colKeyOpt = colKeyUniqueKey
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1263
		{
			yyVAL.colKeyOpt = colKeyUnique
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1268
		{
			yyVAL.literal = nil
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1272
		{
			yyVAL.literal = NewStrLiteral(yyDollar[2].bytes)
		}
	case 202:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1278
		{
			yyVAL.indexDefinition = &IndexDefinition{Info: yyDollar[1].indexInfo, Columns: yyDollar[3].indexColumns, Options: yyDollar[5].indexOptions}
		}
	case 203:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1283
		{
			yyVAL.indexOptions = nil
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1287
		{
			yyVAL.indexOptions = yyDollar[1].indexOptions
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1293
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1297
		{
			yyVAL.indexOptions = append(yyVAL.indexOptions, yyDollar[2].indexOption)
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1303
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[2].colIdent.String())}
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1307
		{
			// should not be string
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewIntLiteral(yyDollar[3].bytes)}
		}
	case 209:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1312
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), Value: NewStrLiteral(yyDollar[2].bytes)}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1316
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Value: NewStrLiteral(yyDollar[3].bytes)}
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1322
		{
			yyVAL.str = ""
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1326
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1332
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].bytes), Name: NewColIdent("PRIMARY"), Primary: true, Unique: true}
		}
	case 214:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1336
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Spatial: true, Unique: false}
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1340
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Fulltext: true, Unique: false}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1344
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes) + " " + string(yyDollar[2].str), Name: NewColIdent(yyDollar[3].str), Unique: true}
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1348
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].bytes), Name: NewColIdent(yyDollar[2].str), Unique: true}
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1352
		{
			yyVAL.indexInfo = &IndexInfo{Type: string(yyDollar[1].str), Name: NewColIdent(yyDollar[2].str), Unique: false}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1358
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1362
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1366
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1373
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1377
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1383
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1387
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1392
		{
			yyVAL.str = ""
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1396
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1402
		{
			yyVAL.indexColumns = []*IndexColumn{yyDollar[1].indexColumn}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1406
		{
			yyVAL.indexColumns = append(yyVAL.indexColumns, yyDollar[3].indexColumn)
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1412
		{
			yyVAL.indexColumn = &IndexColumn{Column: yyDollar[1].colIdent, Length: yyDollar[2].literal, Direction: yyDollar[3].orderDirection}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1418
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1422
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1428
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Name: string(yyDollar[2].colIdent.String()), Details: yyDollar[3].constraintInfo}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1432
		{
			yyVAL.constraintDefinition = &ConstraintDefinition{Details: yyDollar[1].constraintInfo}
		}
	case 235:
		yyDollar = yyS[yypt-10 : yypt+1]
//line sql.y:1438
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns}
		}
	case 236:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1442
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction}
		}
	case 237:
		yyDollar = yyS[yypt-11 : yypt+1]
//line sql.y:1446
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnUpdate: yyDollar[11].ReferenceAction}
		}
	case 238:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1450
		{
			yyVAL.constraintInfo = &ForeignKeyDefinition{Source: yyDollar[4].columns, ReferencedTable: yyDollar[7].tableName, ReferencedColumns: yyDollar[9].columns, OnDelete: yyDollar[11].ReferenceAction, OnUpdate: yyDollar[12].ReferenceAction}
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1454
		{
			yyVAL.constraintInfo = yyDollar[1].constraintInfo
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1460
		{
			yyVAL.constraintInfo = &CheckConstraintDefinition{Expr: yyDollar[3].expr, Enforced: yyDollar[5].boolean}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1466
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1472
		{
			yyVAL.ReferenceAction = yyDollar[3].ReferenceAction
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1478
		{
			yyVAL.ReferenceAction = Restrict
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1482
		{
			yyVAL.ReferenceAction = Cascade
		}
	case 245:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1486
		{
			yyVAL.ReferenceAction = NoAction
		}
	case 246:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1490
		{
			yyVAL.ReferenceAction = SetDefault
		}
	case 247:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1494
		{
			yyVAL.ReferenceAction = SetNull
		}
	case 248:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1499
		{
			yyVAL.boolean = true
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1503
		{
			yyVAL.boolean = true
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1507
		{
			yyVAL.boolean = false
		}
	case 251:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1512
		{
			yyVAL.str = ""
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1516
		{
			yyVAL.str = " " + string(yyDollar[1].str)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1520
		{
			yyVAL.str = string(yyDollar[1].str) + ", " + string(yyDollar[3].str)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1528
		{
			yyVAL.str = yyDollar[1].str
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1532
		{
			yyVAL.str = yyDollar[1].str + " " + yyDollar[2].str
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1536
		{
			yyVAL.str = yyDollar[1].str + "=" + yyDollar[3].str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1542
		{
			yyVAL.str = yyDollar[1].colIdent.String()
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1546
		{
			yyVAL.str = "'" + string(yyDollar[1].bytes) + "'"
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1550
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 260:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1556
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 261:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1560
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 262:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1564
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 263:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1568
		{
			// Change this to a rename statement
			yyVAL.statement = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[4].tableName}, ToTables: TableNames{yyDollar[7].tableName}}
		}
	case 264:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1573
		{
			// Rename an index can just be an alter
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName}
		}
	case 265:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1578
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[3].tableName.ToViewName()}
		}
	case 266:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1582
		{
			yyVAL.statement = &DDL{Action: AlterDDLAction, OnlineHint: yyDollar[2].OnlineDDLHint, Table: yyDollar[4].tableName, PartitionSpec: yyDollar[5].partSpec}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1586
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1590
		{
			yyVAL.statement = &DBDDL{Action: AlterDBDDLAction, DBName: string(yyDollar[3].colIdent.String())}
		}
	case 269:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1594
		{
			yyVAL.statement = &DDL{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewColIdent(yyDollar[5].tableName.Name.String()),
					Type:   yyDollar[6].colIdent,
					Params: yyDollar[7].vindexParams,
				},
			}
		}
	case 270:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1606
		{
			yyVAL.statement = &DDL{
				Action: DropVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: NewColIdent(yyDollar[5].tableName.Name.String()),
				},
			}
		}
	case 271:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1616
		{
			yyVAL.statement = &DDL{Action: AddVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 272:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1620
		{
			yyVAL.statement = &DDL{Action: DropVschemaTableDDLAction, Table: yyDollar[5].tableName}
		}
	case 273:
		yyDollar = yyS[yypt-12 : yypt+1]
//line sql.y:1624
		{
			yyVAL.statement = &DDL{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[7].colIdent,
					Type:   yyDollar[11].colIdent,
					Params: yyDollar[12].vindexParams,
				},
				VindexCols: yyDollar[9].columns,
			}
		}
	case 274:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1637
		{
			yyVAL.statement = &DDL{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[4].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[7].colIdent,
				},
			}
		}
	case 275:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1647
		{
			yyVAL.statement = &DDL{Action: AddSequenceDDLAction, Table: yyDollar[5].tableName}
		}
	case 276:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:1651
		{
			yyVAL.statement = &DDL{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[4].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[7].colIdent,
					Sequence: yyDollar[9].tableName,
				},
			}
		}
	case 291:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1680
		{
			yyVAL.partSpec = &PartitionSpec{Action: ReorganizeAction, Name: yyDollar[3].colIdent, Definitions: yyDollar[6].partDefs}
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1686
		{
			yyVAL.partDefs = []*PartitionDefinition{yyDollar[1].partDef}
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1690
		{
			yyVAL.partDefs = append(yyDollar[1].partDefs, yyDollar[3].partDef)
		}
	case 294:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1696
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Limit: yyDollar[7].expr}
		}
	case 295:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:1700
		{
			yyVAL.partDef = &PartitionDefinition{Name: yyDollar[2].colIdent, Maxvalue: true}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1706
		{
			yyVAL.statement = yyDollar[3].ddl
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1712
		{
			yyVAL.ddl = &DDL{Action: RenameDDLAction, FromTables: TableNames{yyDollar[1].tableName}, ToTables: TableNames{yyDollar[3].tableName}}
		}
	case 298:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1716
		{
			yyVAL.ddl = yyDollar[1].ddl
			yyVAL.ddl.FromTables = append(yyVAL.ddl.FromTables, yyDollar[3].tableName)
			yyVAL.ddl.ToTables = append(yyVAL.ddl.ToTables, yyDollar[5].tableName)
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1724
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: yyDollar[4].tableNames, IfExists: yyDollar[3].boolean}
		}
	case 300:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:1728
		{
			// Change this to an alter statement
			yyVAL.statement = &DDL{Action: AlterDDLAction, Table: yyDollar[5].tableName}
		}
	case 301:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1733
		{
			yyVAL.statement = &DDL{Action: DropDDLAction, FromTables: TableNames{yyDollar[4].tableName.ToViewName()}, IfExists: yyDollar[3].boolean}
		}
	case 302:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1737
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 303:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1741
		{
			yyVAL.statement = &DBDDL{Action: DropDBDDLAction, DBName: string(yyDollar[4].colIdent.String()), IfExists: yyDollar[3].boolean}
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1747
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[3].tableName}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1751
		{
			yyVAL.statement = &DDL{Action: TruncateDDLAction, Table: yyDollar[2].tableName}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1756
		{
			yyVAL.statement = &OtherRead{}
		}
	case 307:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1762
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1767
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: CharsetStr, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1772
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1777
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1782
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].colIdent.String()), Scope: ImplicitScope}}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1786
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1790
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Table: yyDollar[4].tableName, Scope: ImplicitScope}}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1794
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1798
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1802
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1807
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1812
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
		}
	case 319:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1817
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 320:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1821
		{
			showTablesOpt := &ShowTablesOpt{DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Extended: string(yyDollar[2].str), Type: string(yyDollar[3].str), ShowTablesOpt: showTablesOpt, OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 321:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1826
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1830
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 323:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1834
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1838
		{
			yyVAL.statement = &Show{&ShowTableStatus{DatabaseName: yyDollar[4].str, Filter: yyDollar[5].showFilter}}
		}
	case 325:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:1842
		{
			yyVAL.statement = &Show{&ShowColumns{Full: yyDollar[2].str, Table: yyDollar[5].tableName, DbName: yyDollar[6].str, Filter: yyDollar[7].showFilter}}
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1846
		{
			// this is ugly, but I couldn't find a better way for now
			if yyDollar[3].str == "processlist" {
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, Scope: ImplicitScope}}
			} else {
				showTablesOpt := &ShowTablesOpt{Full: yyDollar[2].str, DbName: yyDollar[4].str, Filter: yyDollar[5].showFilter}
				yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[3].str, ShowTablesOpt: showTablesOpt, Scope: ImplicitScope}}
			}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1856
		{
			yyVAL.statement = &Show{&ShowLegacy{Scope: yyDollar[2].scope, Type: string(yyDollar[3].bytes)}}
		}
	case 328:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1860
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1864
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), ShowCollationFilterOpt: yyDollar[4].expr, Scope: ImplicitScope}}
		}
	case 330:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1868
		{
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[4].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Scope: VitessMetadataScope, Type: string(yyDollar[3].bytes), ShowTablesOpt: showTablesOpt}}
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1873
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1877
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), Scope: ImplicitScope}}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:1881
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes) + " " + string(yyDollar[3].bytes), OnTable: yyDollar[5].tableName, Scope: ImplicitScope}}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1885
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].bytes), Scope: ImplicitScope}}
		}
	case 335:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1890
		{
			// This should probably be a different type (ShowVitessTopoOpt), but
			// just getting the thing working for now
			showTablesOpt := &ShowTablesOpt{Filter: yyDollar[3].showFilter}
			yyVAL.statement = &Show{&ShowLegacy{Type: yyDollar[2].str, ShowTablesOpt: showTablesOpt}}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1904
		{
			yyVAL.statement = &Show{&ShowLegacy{Type: string(yyDollar[2].colIdent.String()), Scope: ImplicitScope}}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1910
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1914
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1920
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1924
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 341:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1930
		{
			yyVAL.str = ""
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.str = "extended "
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1940
		{
			yyVAL.str = ""
		}
	case 344:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1944
		{
			yyVAL.str = "full "
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 346:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1960
		{
			yyVAL.str = ""
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1964
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1968
		{
			yyVAL.str = yyDollar[2].tableIdent.v
		}
	case 350:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1974
		{
			yyVAL.showFilter = nil
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1982
		{
			yyVAL.showFilter = &ShowFilter{Filter: yyDollar[2].expr}
		}
	case 353:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1988
		{
			yyVAL.showFilter = nil
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1992
		{
			yyVAL.showFilter = &ShowFilter{Like: string(yyDollar[2].bytes)}
		}
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1998
		{
			yyVAL.scope = ImplicitScope
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2002
		{
			yyVAL.scope = SessionScope
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2006
		{
			yyVAL.scope = GlobalScope
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.statement = &Use{DBName: yyDollar[2].tableIdent}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2016
		{
			yyVAL.statement = &Use{DBName: TableIdent{v: ""}}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2022
		{
			yyVAL.statement = &Begin{}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2026
		{
			yyVAL.statement = &Begin{}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2032
		{
			yyVAL.statement = &Commit{}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2038
		{
			yyVAL.statement = &Rollback{}
		}
	case 364:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2042
		{
			yyVAL.statement = &SRollback{Name: yyDollar[5].colIdent}
		}
	case 365:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2047
		{
			yyVAL.empty = struct{}{}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2049
		{
			yyVAL.empty = struct{}{}
		}
	case 367:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2052
		{
			yyVAL.empty = struct{}{}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2054
		{
			yyVAL.empty = struct{}{}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2059
		{
			yyVAL.statement = &Savepoint{Name: yyDollar[2].colIdent}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2065
		{
			yyVAL.statement = &Release{Name: yyDollar[3].colIdent}
		}
	case 371:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2070
		{
			yyVAL.explainType = EmptyType
		}
	case 372:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2074
		{
			yyVAL.explainType = JSONType
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2078
		{
			yyVAL.explainType = TreeType
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2082
		{
			yyVAL.explainType = VitessType
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2086
		{
			yyVAL.explainType = TraditionalType
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2090
		{
			yyVAL.explainType = AnalyzeType
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2096
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2100
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2104
		{
			yyVAL.bytes = yyDollar[1].bytes
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2110
		{
			yyVAL.statement = yyDollar[1].selStmt
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2114
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2118
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 383:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2122
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2127
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2131
		{
			yyVAL.str = ""
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2135
		{
			yyVAL.str = ""
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2141
		{
			yyVAL.statement = &OtherRead{}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2145
		{
			yyVAL.statement = &Explain{Type: yyDollar[2].explainType, Statement: yyDollar[3].statement}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2151
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2155
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2159
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2163
		{
			yyVAL.statement = &OtherAdmin{}
		}
	case 393:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2169
		{
			yyVAL.statement = &DDL{Action: FlushDDLAction}
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2173
		{
			setAllowComments(yylex, true)
		}
	case 395:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2177
		{
			yyVAL.bytes2 = yyDollar[2].bytes2
			setAllowComments(yylex, false)
		}
	case 396:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2183
		{
			yyVAL.bytes2 = nil
		}
	case 397:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2187
		{
			yyVAL.bytes2 = append(yyDollar[1].bytes2, yyDollar[2].bytes)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2193
		{
			yyVAL.boolean = true
		}
	case 399:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2197
		{
			yyVAL.boolean = false
		}
	case 400:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2201
		{
			yyVAL.boolean = true
		}
	case 401:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2206
		{
			yyVAL.str = ""
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2210
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2214
		{
			yyVAL.str = SQLCacheStr
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2219
		{
			yyVAL.boolean = false
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2223
		{
			yyVAL.boolean = true
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2227
		{
			yyVAL.boolean = true
		}
	case 407:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2232
		{
			yyVAL.selectExprs = nil
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2236
		{
			yyVAL.selectExprs = yyDollar[1].selectExprs
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2241
		{
			yyVAL.strs = nil
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2245
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2249
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2253
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2257
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2263
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2267
		{
			yyVAL.str = SQLCacheStr
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2271
		{
			yyVAL.str = DistinctStr
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2275
		{
			yyVAL.str = DistinctStr
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2279
		{
			yyVAL.str = StraightJoinHint
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2283
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2289
		{
			yyVAL.selectExprs = SelectExprs{yyDollar[1].selectExpr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2293
		{
			yyVAL.selectExprs = append(yyVAL.selectExprs, yyDollar[3].selectExpr)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2299
		{
			yyVAL.selectExpr = &StarExpr{}
		}
	case 423:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2303
		{
			yyVAL.selectExpr = &AliasedExpr{Expr: yyDollar[1].expr, As: yyDollar[2].colIdent}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2307
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Name: yyDollar[1].tableIdent}}
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2311
		{
			yyVAL.selectExpr = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}}
		}
	case 426:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2316
		{
			yyVAL.colIdent = ColIdent{}
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2320
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 428:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2324
		{
			yyVAL.colIdent = yyDollar[2].colIdent
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2331
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 431:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2336
		{
			yyVAL.tableExprs = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewTableIdent("dual")}}}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2340
		{
			yyVAL.tableExprs = yyDollar[2].tableExprs
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2346
		{
			yyVAL.tableExprs = TableExprs{yyDollar[1].tableExpr}
		}
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2350
		{
			yyVAL.tableExprs = append(yyVAL.tableExprs, yyDollar[3].tableExpr)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2360
		{
			yyVAL.tableExpr = yyDollar[1].aliasedTableName
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2364
		{
			yyVAL.tableExpr = &AliasedTableExpr{Expr: yyDollar[1].subquery, As: yyDollar[3].tableIdent}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2368
		{
			yyVAL.tableExpr = &ParenTableExpr{Exprs: yyDollar[2].tableExprs}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2374
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2380
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].tableIdent, Hints: yyDollar[3].indexHints}
		}
	case 442:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:2384
		{
			yyVAL.aliasedTableName = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitions, As: yyDollar[6].tableIdent, Hints: yyDollar[7].indexHints}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2390
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2394
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2400
		{
			yyVAL.partitions = Partitions{yyDollar[1].colIdent}
		}
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2404
		{
			yyVAL.partitions = append(yyVAL.partitions, yyDollar[3].colIdent)
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2417
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2421
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2425
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr, Condition: yyDollar[4].joinCondition}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2429
		{
			yyVAL.tableExpr = &JoinTableExpr{LeftExpr: yyDollar[1].tableExpr, Join: yyDollar[2].joinType, RightExpr: yyDollar[3].tableExpr}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2435
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2437
		{
			yyVAL.joinCondition = JoinCondition{Using: yyDollar[3].columns}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2441
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2443
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2447
		{
			yyVAL.joinCondition = JoinCondition{}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2449
		{
			yyVAL.joinCondition = JoinCondition{On: yyDollar[2].expr}
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2452
		{
			yyVAL.empty = struct{}{}
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2454
		{
			yyVAL.empty = struct{}{}
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2457
		{
			yyVAL.tableIdent = NewTableIdent("")
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2461
		{
			yyVAL.tableIdent = yyDollar[1].tableIdent
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2465
		{
			yyVAL.tableIdent = yyDollar[2].tableIdent
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2472
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2478
		{
			yyVAL.joinType = NormalJoinType
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2482
		{
			yyVAL.joinType = NormalJoinType
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2486
		{
			yyVAL.joinType = NormalJoinType
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2492
		{
			yyVAL.joinType = StraightJoinType
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2498
		{
			yyVAL.joinType = LeftJoinType
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2502
		{
			yyVAL.joinType = LeftJoinType
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2506
		{
			yyVAL.joinType = RightJoinType
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2510
		{
			yyVAL.joinType = RightJoinType
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2516
		{
			yyVAL.joinType = NaturalJoinType
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2520
		{
			if yyDollar[2].joinType == LeftJoinType {
				yyVAL.joinType = NaturalLeftJoinType
			} else {
				yyVAL.joinType = NaturalRightJoinType
			}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2530
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2534
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2540
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2544
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2550
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].tableIdent}
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2555
		{
			yyVAL.indexHints = nil
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2559
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp, Indexes: yyDollar[4].columns}
		}
	case 481:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2563
		{
			yyVAL.indexHints = &IndexHints{Type: UseOp}
		}
	case 482:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2567
		{
			yyVAL.indexHints = &IndexHints{Type: IgnoreOp, Indexes: yyDollar[4].columns}
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2571
		{
			yyVAL.indexHints = &IndexHints{Type: ForceOp, Indexes: yyDollar[4].columns}
		}
	case 484:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2576
		{
			yyVAL.expr = nil
		}
	case 485:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2580
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2586
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2590
		{
			yyVAL.expr = &AndExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2594
		{
			yyVAL.expr = &OrExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2598
		{
			yyVAL.expr = &XorExpr{Left: yyDollar[1].expr, Right: yyDollar[3].expr}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2602
		{
			yyVAL.expr = &NotExpr{Expr: yyDollar[2].expr}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2606
		{
			yyVAL.expr = &IsExpr{Operator: yyDollar[3].isExprOperator, Expr: yyDollar[1].expr}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2610
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2614
		{
			yyVAL.expr = &Default{ColName: yyDollar[2].str}
		}
	case 494:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2620
		{
			yyVAL.str = ""
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2624
		{
			yyVAL.str = string(yyDollar[2].colIdent.String())
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2630
		{
			yyVAL.boolVal = BoolVal(true)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2634
		{
			yyVAL.boolVal = BoolVal(false)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2640
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: yyDollar[2].comparisonExprOperator, Right: yyDollar[3].expr}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2644
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: InOp, Right: yyDollar[3].colTuple}
		}
	case 500:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2648
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotInOp, Right: yyDollar[4].colTuple}
		}
	case 501:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2652
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: LikeOp, Right: yyDollar[3].expr, Escape: yyDollar[4].expr}
		}
	case 502:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2656
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotLikeOp, Right: yyDollar[4].expr, Escape: yyDollar[5].expr}
		}
	case 503:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2660
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: RegexpOp, Right: yyDollar[3].expr}
		}
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2664
		{
			yyVAL.expr = &ComparisonExpr{Left: yyDollar[1].expr, Operator: NotRegexpOp, Right: yyDollar[4].expr}
		}
	case 505:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2668
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: BetweenOp, From: yyDollar[3].expr, To: yyDollar[5].expr}
		}
	case 506:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2672
		{
			yyVAL.expr = &RangeCond{Left: yyDollar[1].expr, Operator: NotBetweenOp, From: yyDollar[4].expr, To: yyDollar[6].expr}
		}
	case 507:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2676
		{
			yyVAL.expr = &ExistsExpr{Subquery: yyDollar[2].subquery}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2682
		{
			yyVAL.isExprOperator = IsNullOp
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2686
		{
			yyVAL.isExprOperator = IsNotNullOp
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2690
		{
			yyVAL.isExprOperator = IsTrueOp
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2694
		{
			yyVAL.isExprOperator = IsNotTrueOp
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2698
		{
			yyVAL.isExprOperator = IsFalseOp
		}
	case 513:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2702
		{
			yyVAL.isExprOperator = IsNotFalseOp
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2708
		{
			yyVAL.comparisonExprOperator = EqualOp
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2712
		{
			yyVAL.comparisonExprOperator = LessThanOp
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2716
		{
			yyVAL.comparisonExprOperator = GreaterThanOp
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2720
		{
			yyVAL.comparisonExprOperator = LessEqualOp
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2724
		{
			yyVAL.comparisonExprOperator = GreaterEqualOp
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2728
		{
			yyVAL.comparisonExprOperator = NotEqualOp
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2732
		{
			yyVAL.comparisonExprOperator = NullSafeEqualOp
		}
	case 521:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2737
		{
			yyVAL.expr = nil
		}
	case 522:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2741
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 523:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2747
		{
			yyVAL.colTuple = yyDollar[1].valTuple
		}
	case 524:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2751
		{
			yyVAL.colTuple = yyDollar[1].subquery
		}
	case 525:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2755
		{
			yyVAL.colTuple = ListArg(yyDollar[1].bytes)
		}
	case 526:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2761
		{
			yyVAL.subquery = &Subquery{yyDollar[2].selStmt}
		}
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2767
		{
			yyVAL.exprs = Exprs{yyDollar[1].expr}
		}
	case 528:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2771
		{
			yyVAL.exprs = append(yyDollar[1].exprs, yyDollar[3].expr)
		}
	case 529:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2777
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 530:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2781
		{
			yyVAL.expr = yyDollar[1].boolVal
		}
	case 531:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.expr = yyDollar[1].colName
		}
	case 532:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.expr = yyDollar[1].subquery
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2797
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitAndOp, Right: yyDollar[3].expr}
		}
	case 535:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2801
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitOrOp, Right: yyDollar[3].expr}
		}
	case 536:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2805
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: BitXorOp, Right: yyDollar[3].expr}
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2809
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: PlusOp, Right: yyDollar[3].expr}
		}
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2813
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MinusOp, Right: yyDollar[3].expr}
		}
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2817
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: MultOp, Right: yyDollar[3].expr}
		}
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2821
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: DivOp, Right: yyDollar[3].expr}
		}
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2825
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: IntDivOp, Right: yyDollar[3].expr}
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2829
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 543:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2833
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ModOp, Right: yyDollar[3].expr}
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2837
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftLeftOp, Right: yyDollar[3].expr}
		}
	case 545:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2841
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].expr, Operator: ShiftRightOp, Right: yyDollar[3].expr}
		}
	case 546:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2845
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONExtractOp, Right: yyDollar[3].expr}
		}
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2849
		{
			yyVAL.expr = &BinaryExpr{Left: yyDollar[1].colName, Operator: JSONUnquoteExtractOp, Right: yyDollar[3].expr}
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2853
		{
			yyVAL.expr = &CollateExpr{Expr: yyDollar[1].expr, Charset: yyDollar[3].str}
		}
	case 549:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2857
		{
			yyVAL.expr = &UnaryExpr{Operator: BinaryOp, Expr: yyDollar[2].expr}
		}
	case 550:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2861
		{
			yyVAL.expr = &UnaryExpr{Operator: UBinaryOp, Expr: yyDollar[2].expr}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2865
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8Op, Expr: yyDollar[2].expr}
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2869
		{
			yyVAL.expr = &UnaryExpr{Operator: Utf8mb4Op, Expr: yyDollar[2].expr}
		}
	case 553:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2873
		{
			yyVAL.expr = &UnaryExpr{Operator: Latin1Op, Expr: yyDollar[2].expr}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2877
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				yyVAL.expr = num
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UPlusOp, Expr: yyDollar[2].expr}
			}
		}
	case 555:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2885
		{
			if num, ok := yyDollar[2].expr.(*Literal); ok && num.Type == IntVal {
				// Handle double negative
				if num.Val[0] == '-' {
					num.Val = num.Val[1:]
					yyVAL.expr = num
				} else {
					yyVAL.expr = NewIntLiteral(append([]byte("-"), num.Val...))
				}
			} else {
				yyVAL.expr = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].expr}
			}
		}
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2899
		{
			yyVAL.expr = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].expr}
		}
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2903
		{
			yyVAL.expr = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].expr}
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2907
		{
			// This rule prevents the usage of INTERVAL
			// as a function. If support is needed for that,
			// we'll need to revisit this. The solution
			// will be non-trivial because of grammar conflicts.
			yyVAL.expr = &IntervalExpr{Expr: yyDollar[2].expr, Unit: yyDollar[3].colIdent.String()}
		}
	case 563:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2925
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Exprs: yyDollar[3].selectExprs}
		}
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2929
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 565:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2933
		{
			yyVAL.expr = &FuncExpr{Name: yyDollar[1].colIdent, Distinct: true, Exprs: yyDollar[4].selectExprs}
		}
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2937
		{
			yyVAL.expr = &FuncExpr{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].colIdent, Exprs: yyDollar[5].selectExprs}
		}
	case 567:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2947
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("left"), Exprs: yyDollar[3].selectExprs}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2951
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("right"), Exprs: yyDollar[3].selectExprs}
		}
	case 569:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2955
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 570:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2959
		{
			yyVAL.expr = &ConvertExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].convertType}
		}
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
//line sql.y:2963
		{
			yyVAL.expr = &ConvertUsingExpr{Expr: yyDollar[3].expr, Type: yyDollar[5].str}
		}
	case 572:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2967
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 573:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2971
		{
			yyVAL.expr = &SubstrExpr{Name: yyDollar[3].colName, From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 574:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2975
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 575:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2979
		{
			yyVAL.expr = &SubstrExpr{StrVal: NewStrLiteral(yyDollar[3].bytes), From: yyDollar[5].expr, To: yyDollar[7].expr}
		}
	case 576:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:2983
		{
			yyVAL.expr = &MatchExpr{Columns: yyDollar[3].selectExprs, Expr: yyDollar[7].expr, Option: yyDollar[8].matchExprOption}
		}
	case 577:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:2987
		{
			yyVAL.expr = &GroupConcatExpr{Distinct: yyDollar[3].boolean, Exprs: yyDollar[4].selectExprs, OrderBy: yyDollar[5].orderBy, Separator: yyDollar[6].str, Limit: yyDollar[7].limit}
		}
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2991
		{
			yyVAL.expr = &CaseExpr{Expr: yyDollar[2].expr, Whens: yyDollar[3].whens, Else: yyDollar[4].expr}
		}
	case 579:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:2995
		{
			yyVAL.expr = &ValuesFuncExpr{Name: yyDollar[3].colName}
		}
	case 580:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3005
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_timestamp")}
		}
	case 581:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3009
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_timestamp")}
		}
	case 582:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3013
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_time")}
		}
	case 583:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3018
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("utc_date")}
		}
	case 584:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3023
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtime")}
		}
	case 585:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3028
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("localtimestamp")}
		}
	case 586:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3034
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_date")}
		}
	case 587:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3039
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("current_time")}
		}
	case 588:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3044
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 589:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3048
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_timestamp"), Fsp: yyDollar[2].expr}
		}
	case 590:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3052
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("utc_time"), Fsp: yyDollar[2].expr}
		}
	case 591:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3057
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtime"), Fsp: yyDollar[2].expr}
		}
	case 592:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3062
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("localtimestamp"), Fsp: yyDollar[2].expr}
		}
	case 593:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3067
		{
			yyVAL.expr = &CurTimeFuncExpr{Name: NewColIdent("current_time"), Fsp: yyDollar[2].expr}
		}
	case 594:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3071
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 595:
		yyDollar = yyS[yypt-8 : yypt+1]
//line sql.y:3075
		{
			yyVAL.expr = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].colIdent.String(), Expr1: yyDollar[5].expr, Expr2: yyDollar[7].expr}
		}
	case 598:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3085
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 599:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3095
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("if"), Exprs: yyDollar[3].selectExprs}
		}
	case 600:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3099
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("database"), Exprs: yyDollar[3].selectExprs}
		}
	case 601:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3103
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("schema"), Exprs: yyDollar[3].selectExprs}
		}
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3107
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("mod"), Exprs: yyDollar[3].selectExprs}
		}
	case 603:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3111
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("replace"), Exprs: yyDollar[3].selectExprs}
		}
	case 604:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3115
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 605:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3119
		{
			yyVAL.expr = &FuncExpr{Name: NewColIdent("substr"), Exprs: yyDollar[3].selectExprs}
		}
	case 606:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3125
		{
			yyVAL.matchExprOption = NoOption
		}
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3129
		{
			yyVAL.matchExprOption = BooleanModeOpt
		}
	case 608:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3133
		{
			yyVAL.matchExprOption = NaturalLanguageModeOpt
		}
	case 609:
		yyDollar = yyS[yypt-7 : yypt+1]
//line sql.y:3137
		{
			yyVAL.matchExprOption = NaturalLanguageModeWithQueryExpansionOpt
		}
	case 610:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3141
		{
			yyVAL.matchExprOption = QueryExpansionOpt
		}
	case 611:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3147
		{
			yyVAL.str = string(yyDollar[1].colIdent.String())
		}
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3151
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 613:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3157
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 614:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3161
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: yyDollar[3].str, Operator: CharacterSetOp}
		}
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3165
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal, Charset: string(yyDollar[3].colIdent.String())}
		}
	case 616:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3169
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 617:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3173
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 618:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3177
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
			yyVAL.convertType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.convertType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 619:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3183
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 620:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3187
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3191
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3195
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3199
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes), Length: yyDollar[2].literal}
		}
	case 624:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3203
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3207
		{
			yyVAL.convertType = &ConvertType{Type: string(yyDollar[1].bytes)}
		}
	case 626:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3212
		{
			yyVAL.expr = nil
		}
	case 627:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3216
		{
			yyVAL.expr = yyDollar[1].expr
		}
	case 628:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3221
		{
			yyVAL.str = string("")
		}
	case 629:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3225
		{
			yyVAL.str = " separator '" + string(yyDollar[2].bytes) + "'"
		}
	case 630:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3231
		{
			yyVAL.whens = []*When{yyDollar[1].when}
		}
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3235
		{
			yyVAL.whens = append(yyDollar[1].whens, yyDollar[2].when)
		}
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3241
		{
			yyVAL.when = &When{Cond: yyDollar[2].expr, Val: yyDollar[4].expr}
		}
	case 633:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3246
		{
			yyVAL.expr = nil
		}
	case 634:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3250
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 635:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3256
		{
			yyVAL.colName = &ColName{Name: yyDollar[1].colIdent}
		}
	case 636:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3260
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Name: yyDollar[1].tableIdent}, Name: yyDollar[3].colIdent}
		}
	case 637:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3264
		{
			yyVAL.colName = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].tableIdent, Name: yyDollar[3].tableIdent}, Name: yyDollar[5].colIdent}
		}
	case 638:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3270
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 639:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3274
		{
			yyVAL.expr = NewHexLiteral(yyDollar[1].bytes)
		}
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3278
		{
			yyVAL.expr = NewBitLiteral(yyDollar[1].bytes)
		}
	case 641:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3282
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 642:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3286
		{
			yyVAL.expr = NewFloatLiteral(yyDollar[1].bytes)
		}
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3290
		{
			yyVAL.expr = NewHexNumLiteral(yyDollar[1].bytes)
		}
	case 644:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3294
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3298
		{
			yyVAL.expr = &NullVal{}
		}
	case 646:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3304
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].colIdent.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyVAL.expr = NewIntLiteral([]byte("1"))
		}
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3313
		{
			yyVAL.expr = NewIntLiteral(yyDollar[1].bytes)
		}
	case 648:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3317
		{
			yyVAL.expr = NewArgument(yyDollar[1].bytes)
		}
	case 649:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3322
		{
			yyVAL.exprs = nil
		}
	case 650:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3326
		{
			yyVAL.exprs = yyDollar[3].exprs
		}
	case 651:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3331
		{
			yyVAL.expr = nil
		}
	case 652:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3335
		{
			yyVAL.expr = yyDollar[2].expr
		}
	case 653:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3340
		{
			yyVAL.orderBy = nil
		}
	case 654:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3344
		{
			yyVAL.orderBy = yyDollar[3].orderBy
		}
	case 655:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3350
		{
			yyVAL.orderBy = OrderBy{yyDollar[1].order}
		}
	case 656:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3354
		{
			yyVAL.orderBy = append(yyDollar[1].orderBy, yyDollar[3].order)
		}
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3360
		{
			yyVAL.order = &Order{Expr: yyDollar[1].expr, Direction: yyDollar[2].orderDirection}
		}
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3365
		{
			yyVAL.orderDirection = AscOrder
		}
	case 659:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3369
		{
			yyVAL.orderDirection = AscOrder
		}
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3373
		{
			yyVAL.orderDirection = DescOrder
		}
	case 661:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3378
		{
			yyVAL.limit = nil
		}
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3382
		{
			yyVAL.limit = &Limit{Rowcount: yyDollar[2].expr}
		}
	case 663:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3386
		{
			yyVAL.limit = &Limit{Offset: yyDollar[2].expr, Rowcount: yyDollar[4].expr}
		}
	case 664:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3390
		{
			yyVAL.limit = &Limit{Offset: yyDollar[4].expr, Rowcount: yyDollar[2].expr}
		}
	case 665:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3395
		{
			yyVAL.indexOptions = nil
		}
	case 666:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3399
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 667:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3403
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption, yyDollar[2].indexOption}
		}
	case 668:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3407
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 669:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3411
		{
			yyVAL.indexOptions = []*IndexOption{yyDollar[1].indexOption}
		}
	case 670:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3418
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 671:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3422
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 672:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3426
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 673:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3430
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 674:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3436
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 675:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3440
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 676:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3444
		{
			yyVAL.indexOption = &IndexOption{Name: string(yyDollar[1].bytes), String: string(yyDollar[3].bytes)}
		}
	case 677:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3449
		{
			yyVAL.lock = NoLock
		}
	case 678:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3453
		{
			yyVAL.lock = ForUpdateLock
		}
	case 679:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3457
		{
			yyVAL.lock = ShareModeLock
		}
	case 680:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3462
		{
			yyVAL.selectInto = nil
		}
	case 681:
		yyDollar = yyS[yypt-9 : yypt+1]
//line sql.y:3466
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfileS3, FileName: string(yyDollar[4].bytes), Charset: yyDollar[5].str, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3470
		{
			yyVAL.selectInto = &SelectInto{Type: IntoDumpfile, FileName: string(yyDollar[3].bytes), Charset: "", FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
	case 683:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3474
		{
			yyVAL.selectInto = &SelectInto{Type: IntoOutfile, FileName: string(yyDollar[3].bytes), Charset: yyDollar[4].str, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
	case 684:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3479
		{
			yyVAL.str = ""
		}
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3483
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3487
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 687:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3492
		{
			yyVAL.str = ""
		}
	case 688:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3496
		{
			yyVAL.str = " header"
		}
	case 689:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3501
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3505
		{
			yyVAL.str = " manifest on"
		}
	case 691:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3509
		{
			yyVAL.str = " manifest off"
		}
	case 692:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3514
		{
			yyVAL.str = ""
		}
	case 693:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3518
		{
			yyVAL.str = " overwrite on"
		}
	case 694:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3522
		{
			yyVAL.str = " overwrite off"
		}
	case 695:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3528
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 696:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3533
		{
			yyVAL.str = ""
		}
	case 697:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3537
		{
			yyVAL.str = " lines" + yyDollar[2].str + yyDollar[3].str
		}
	case 698:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3542
		{
			yyVAL.str = ""
		}
	case 699:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3546
		{
			yyVAL.str = " starting by '" + string(yyDollar[3].bytes) + "'"
		}
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3551
		{
			yyVAL.str = ""
		}
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3555
		{
			yyVAL.str = " terminated by '" + string(yyDollar[3].bytes) + "'"
		}
	case 702:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3560
		{
			yyVAL.str = ""
		}
	case 703:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3564
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str + yyDollar[3].str + yyDollar[4].str
		}
	case 704:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3569
		{
			yyVAL.str = ""
		}
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3573
		{
			yyVAL.str = " escaped by '" + string(yyDollar[3].bytes) + "'"
		}
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3578
		{
			yyVAL.str = ""
		}
	case 707:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3582
		{
			yyVAL.str = yyDollar[1].str + " enclosed by '" + string(yyDollar[4].bytes) + "'"
		}
	case 708:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3587
		{
			yyVAL.str = ""
		}
	case 709:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3591
		{
			yyVAL.str = " optionally"
		}
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3604
		{
			yyVAL.ins = &Insert{Rows: yyDollar[2].values}
		}
	case 711:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3608
		{
			yyVAL.ins = &Insert{Rows: yyDollar[1].selStmt}
		}
	case 712:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3612
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[5].values}
		}
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3616
		{
			yyVAL.ins = &Insert{Rows: yyDollar[4].values}
		}
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:3620
		{
			yyVAL.ins = &Insert{Columns: yyDollar[2].columns, Rows: yyDollar[4].selStmt}
		}
	case 715:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3626
		{
			yyVAL.columns = Columns{yyDollar[1].colIdent}
		}
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3630
		{
			yyVAL.columns = Columns{yyDollar[3].colIdent}
		}
	case 717:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3634
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[3].colIdent)
		}
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3638
		{
			yyVAL.columns = append(yyVAL.columns, yyDollar[5].colIdent)
		}
	case 719:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3643
		{
			yyVAL.updateExprs = nil
		}
	case 720:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3647
		{
			yyVAL.updateExprs = yyDollar[5].updateExprs
		}
	case 721:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3653
		{
			yyVAL.values = Values{yyDollar[1].valTuple}
		}
	case 722:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3657
		{
			yyVAL.values = append(yyDollar[1].values, yyDollar[3].valTuple)
		}
	case 723:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3663
		{
			yyVAL.valTuple = yyDollar[1].valTuple
		}
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3667
		{
			yyVAL.valTuple = ValTuple{}
		}
	case 725:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3673
		{
			yyVAL.valTuple = ValTuple(yyDollar[2].exprs)
		}
	case 726:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3679
		{
			if len(yyDollar[1].valTuple) == 1 {
				yyVAL.expr = yyDollar[1].valTuple[0]
			} else {
				yyVAL.expr = yyDollar[1].valTuple
			}
		}
	case 727:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3689
		{
			yyVAL.updateExprs = UpdateExprs{yyDollar[1].updateExpr}
		}
	case 728:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3693
		{
			yyVAL.updateExprs = append(yyDollar[1].updateExprs, yyDollar[3].updateExpr)
		}
	case 729:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3699
		{
			yyVAL.updateExpr = &UpdateExpr{Name: yyDollar[1].colName, Expr: yyDollar[3].expr}
		}
	case 730:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3705
		{
			yyVAL.setExprs = SetExprs{yyDollar[1].setExpr}
		}
	case 731:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3709
		{
			yyVAL.setExprs = append(yyDollar[1].setExprs, yyDollar[3].setExpr)
		}
	case 732:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3715
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("on"))}
		}
	case 733:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3719
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: NewStrLiteral([]byte("off"))}
		}
	case 734:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3723
		{
			yyVAL.setExpr = &SetExpr{Name: yyDollar[1].colIdent, Scope: ImplicitScope, Expr: yyDollar[3].expr}
		}
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3727
		{
			yyVAL.setExpr = &SetExpr{Name: NewColIdent(string(yyDollar[1].bytes)), Scope: ImplicitScope, Expr: yyDollar[2].expr}
		}
	case 736:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3731
		{
			yyDollar[2].setExpr.Scope = yyDollar[1].scope
			yyVAL.setExpr = yyDollar[2].setExpr
		}
	case 738:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3739
		{
			yyVAL.bytes = []byte("charset")
		}
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3746
		{
			yyVAL.expr = NewStrLiteral([]byte(yyDollar[1].colIdent.String()))
		}
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3750
		{
			yyVAL.expr = NewStrLiteral(yyDollar[1].bytes)
		}
	case 742:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3754
		{
			yyVAL.expr = &Default{}
		}
	case 745:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3763
		{
			yyVAL.boolean = false
		}
	case 746:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3765
		{
			yyVAL.boolean = true
		}
	case 747:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3768
		{
			yyVAL.boolean = false
		}
	case 748:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3770
		{
			yyVAL.boolean = true
		}
	case 749:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3773
		{
			yyVAL.ignore = false
		}
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3775
		{
			yyVAL.ignore = true
		}
	case 751:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3779
		{
			yyVAL.empty = struct{}{}
		}
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3781
		{
			yyVAL.empty = struct{}{}
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3783
		{
			yyVAL.empty = struct{}{}
		}
	case 754:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3785
		{
			yyVAL.empty = struct{}{}
		}
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3787
		{
			yyVAL.empty = struct{}{}
		}
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3789
		{
			yyVAL.empty = struct{}{}
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3791
		{
			yyVAL.empty = struct{}{}
		}
	case 758:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3793
		{
			yyVAL.empty = struct{}{}
		}
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3795
		{
			yyVAL.empty = struct{}{}
		}
	case 760:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3797
		{
			yyVAL.empty = struct{}{}
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3801
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{}
		}
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3805
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
			}
		}
	case 763:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3811
		{
			yyVAL.OnlineDDLHint = &OnlineDDLHint{
				Strategy: DDLStrategy(yyDollar[2].bytes),
				Options:  string(yyDollar[3].bytes),
			}
		}
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3819
		{
			yyVAL.empty = struct{}{}
		}
	case 765:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3821
		{
			yyVAL.empty = struct{}{}
		}
	case 766:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3823
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3827
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3829
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3832
		{
			yyVAL.str = ""
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3834
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 771:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3836
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3838
		{
			yyVAL.str = string(yyDollar[1].bytes)
		}
	case 773:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:3841
		{
			yyVAL.str = ""
		}
	case 774:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3843
		{
			yyVAL.str = yyDollar[2].colIdent.val
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3847
		{
			yyVAL.colIdent = yyDollar[1].colIdent
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3851
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3858
		{
			yyVAL.colIdent = NewColIdent(string(yyDollar[1].bytes))
		}
	case 779:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3864
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].colIdent.String()))
		}
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3868
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 782:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3875
		{
			yyVAL.tableIdent = NewTableIdent(string(yyDollar[1].bytes))
		}
	case 1103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4221
		{
			if incNesting(yylex) {
				yylex.Error("max nesting level reached")
				return 1
			}
		}
	case 1104:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4230
		{
			decNesting(yylex)
		}
	case 1105:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4235
		{
			skipToEnd(yylex)
		}
	case 1106:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4240
		{
			skipToEnd(yylex)
		}
	case 1107:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4244
		{
			skipToEnd(yylex)
		}
	case 1108:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4248
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
